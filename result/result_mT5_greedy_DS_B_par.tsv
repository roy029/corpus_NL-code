表 <name2> 上の NaN を消した結果でインプレースする	<name2> . dropna ( inplace = True )	<name2> . dropna ( inplace = True )
<name3> 表の中にある <val6> を未記入の値に置き換えて、 <name5> とする	<name5> = <name3> . replace ( <val6> , np . nan )	<name5> = <name3> . replace ( <val6> , np . nan )
ヘッダーをなしで <val4> を読み込まれた結果を <name3> とする	<name3> = pd . read_csv ( <val4> , header = None )	<name3> = pd . read_csv ( <val4> , header = None )
<val5> に文字の大きさを設定する	fontsize = <val5>	fontsize = <val5>
表 <name5> の中の未入力の値を含む行を取り除いた結果を <name5> にする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
表 <name2> の中のカテゴリーを数値データで置き換える	pd . get_dummies ( <name2> )	pd . get_dummies ( <name2> )
表 <name1> のインデックス名	<name1> . index	<name1> . index
円グラフ中に構成割合を示す小数点以下 2 桁までの数値をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表 <name1> 内のそれぞれのカラムにある <val2> の個数の数を表示する	<name1> . isin ( [ <val2> ] ) . sum ( )	<name1> . isin ( [ <val2> ] ) . sum ( )
表 <name5> の <val3> を未記入の値で埋めて、置き換える	<name5> = <name5> . replace ( <val3> , np . nan )	<name5> = <name5> . replace ( <val3> , np . nan )
<name2> 表のカラム名	<name2> . columns	<name2> . columns
エンコーディングを shift - jis として、 <val5> を読み込んで、 <name2> に代入する	<name2> = pd . read_csv ( <val5> , encoding = 'shift_jis' )	<name2> = pd . read_csv ( <val5> , encoding = 'shift_jis' )
ビン数を <name5> として要素数が等しくなるように表 <name6> の列 <val3> を分割する	pd . qcut ( <name6> [ <val3> ] , <name5> )	pd . qcut ( <name6> [ <val3> ] , <name5> )
<name3> 表中のカラムそれぞれに存在する <val1> の個数の和を見る	<name3> . isin ( [ <val1> ] ) . sum ( )	<name3> . isin ( [ <val1> ] ) . sum ( )
<name3> 全体をインデックスを軸に小さい順でソートして、 <name3> に代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name1> 表の <val3> を欠損で埋めた結果を <name1> とする	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
表 <name1> のコラム <val6> をインデックスに指定し、置き換える	<name1> . set_index ( <val6> , inplace = True )	<name1> = <name1> . set_index ( <val6> )
エクセルファイル <val6> の全てのシートを表に読む	pd . read_excel ( <val6> , sheet_name = None )	pd . read_excel ( <val6> , sheet_name = None )
<name4> 表のインデックスをリセットして、元のインデックスを削除された結果で置き換える	<name4> = <name4> . reset_index ( drop = True )	<name4> = <name4> . reset_index ( drop = True )
元のインデックスを削除してから、表 <name2> のインデックスをリセットして、 <name2> とする	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
<name1> 表の <val3> コラムのダブっている行を取り除かれた結果を <name1> にする	<name1> = <name1> . drop_duplicates ( subset = <val3> )	<name1> = <name1> . drop_duplicates ( subset = <val3> )
<name4> 中の重複要素がある行を削除して、 <name3> とする	<name3> = <name4> . drop_duplicates ( )	<name3> = <name4> . drop_duplicates ( )
表 <name2> 中に存在する <val6> を欠損にする	<name2> . replace ( <val6> , np . nan )	<name2> . replace ( <val6> , np . nan )
<name1> 全体を <val5> を元に昇順でソートして、置き換える	<name1> . sort_values ( <val5> , inplace = True )	<name1> = <name1> . sort_values ( <val5> )
ある <val5> を <name1> 表に未入力の値で埋めた結果で書き換える	<name1> . replace ( <val5> , np . nan , inplace = True )	<name1> . replace ( <val5> , np . nan , inplace = True )
<name2> 表中の <val5> を欠損に置換し欠損が存在する行を削除した結果を <name3> にする	<name3> = <name2> . replace ( <val5> , np . nan ) . dropna ( )	<name3> = <name2> . replace ( <val5> , np . nan ) . dropna ( )
列 <val4> をキーとして表 <name5> と表 <name2> をマージし、 <name3> にする	<name3> = pd . merge ( <name5> , <name2> , on = <val4> )	<name3> = pd . merge ( <name5> , <name2> , on = <val4> )
表 <name5> の列 <val4> をビン数を <name1> として分割し、 <name6> とする	<name6> = pd . cut ( <name5> [ <val4> ] , <name1> )	<name6> = pd . cut ( <name5> [ <val4> ] , <name1> )
カラム <val3> に表 <name2> 全体を基づいて昇順でソートして、再代入する	<name2> = <name2> . sort_values ( <val3> )	<name2> = <name2> . sort_values ( <val3> )
<name5> のインデックスをリセット設定して、元のインデックスを削除し、インプレースする	<name5> . reset_index ( drop = True , inplace = True )	<name5> . reset_index ( drop = True , inplace = True )
<name3> の列の名前を <val1> から <val4> に変更し、再代入する	<name3> = <name3> . rename ( columns = { <val1> : <val4> } )	<name3> = <name3> . rename ( columns = { <val1> : <val4> } )
<name1> の重複要素がある行を取り除き、再代入する	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
区間を <name1> 、ビンの名前を <name3> として <name5> の <val4> を分割した結果を <name6> に代入する	<name6> = pd . cut ( <name5> [ <val4> ] , <name1> , label = <name3> )	<name6> = pd . cut ( <name5> [ <val4> ] , <name1> , label = <name3> )
表 <name1> のインデックスをリセットして、元のインデックスを削除した結果を <name4> に代入する	<name4> = <name1> . reset_index ( drop = True )	<name4> = <name1> . reset_index ( drop = True )
<val3> に x 軸のラベルを設定する	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
エクセルデータ <val5> を表データに読み込んで、 <name2> とする	<name2> = pd . read_excel ( <val5> )	<name2> = pd . read_excel ( <val5> )
柱状図で <name5> を出力する	plt . hist ( <name5> )	plt . hist ( <name5> )
<val6> として図を出力する	plt . savefig ( <val6> )	plt . savefig ( <val6> )
エクセルファイル <val3> の <val2> 番目のシートをデータフレームに読み込んだ結果を <name5> に代入する	<name5> = pd . read_excel ( <val3> , sheet_name = <val2> )	<name5> = pd . read_excel ( <val3> , sheet_name = <val2> )
<val3> というエクセルファイルの <val1> 番目のシートを読み込まれた結果を <name6> とする	<name6> = pd . read_excel ( <val3> , sheet_name = <val1> )	<name6> = pd . read_excel ( <val3> , sheet_name = <val1> )
<name5> 表の中のカラムそれぞれにある <val4> の個数の合計値を調べる	<name5> . isin ( [ <val4> ] ) . sum ( )	<name5> . isin ( [ <val4> ] ) . sum ( )
<name6> 表上の重複を判定を見る	<name6> . duplicated ( )	<name6> . duplicated ( )
箱ひげ図を用いて <name4> データフレームの <val1> カラムを描写する	plt . boxplot ( <name4> [ <val1> ] )	plt . boxplot ( <name4> [ <val1> ] )
<name6> 表全体をインデックスを軸に小さい順にソートして、 <name6> にする	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
表 <name6> 上の NaN を <name5> に置き換えた結果を <name4> とする	<name4> = <name6> . fillna ( <name5> )	<name4> = <name6> . fillna ( <name5> )
<name5> 表の中のダブる行を落とす	<name5> . drop_duplicates ( )	<name5> . drop_duplicates ( )
<name4> 中のカテゴリーを one - hot 表現にした結果を <name1> にする	<name1> = pd . get_dummies ( <name4> )	<name1> = pd . get_dummies ( <name4> )
<name4> の NaN がある行を消す	<name4> . dropna ( )	<name4> . dropna ( )
<name2> 表内の欠損値を直前の行の値で埋め、 <name2> に代入する	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
<name2> 表のカラム名を <val5> から <val4> に <val6> から <val1> にリネームする	<name2> . rename ( columns = { <val6> : <val1> , <val5> : <val4> } )	<name2> . rename ( columns = { <val5> : <val4> , <val5> : <val1> } )
表 <name2> 上の <val3> を未記入の値に変え未記入の値がある行を落として、再代入する	<name2> = <name2> . replace ( <val3> , np . nan ) . dropna ( )	<name2> = <name2> . replace ( <val3> , np . nan ) . dropna ( )
<name2> 内の重複要素がある行を消した結果を <name3> とする	<name3> = <name2> . drop_duplicates ( )	<name3> = <name2> . drop_duplicates ( )
図を <val2> として保存する	plt . savefig ( <val2> )	plt . savefig ( <val2> )
区関数を <val5> として <name3> の度数分布図を表示する	plt . hist ( <name3> , bins = <val5> )	plt . hist ( <name3> , bins = <val5> )
<val6> に y 座標の軸ラベルを設定する	plt . ylabel ( <val6> )	plt . ylabel ( <val6> )
<name1> 内の <val5> を NaN に変え NaN が存在する行を消し、書き換える	<name1> . replace ( <val5> , np . nan ) . dropna ( inplace = True )	<name1> . replace ( <val5> , np . nan ) . dropna ( inplace = True )
アライメントは中央寄せを用いる	align = 'center'	kind = 'bar'
<name5> の <val3> の曜日を <name2> とする	<name2> = <name5> [ <val3> ] . dt . weekday_name	<name2> = <name5> [ <val3> ] . dt . weekday_name
存在する <val5> を <name3> 内に欠損値で補った結果を <name3> とする	<name3> = <name3> . replace ( <val5> , np . nan )	<name3> = <name3> . replace ( <val5> , np . nan )
<name1> 表内の NaN がある行を消し、 <name2> とする	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
マーカーの形状のエッジの色を黄緑色とする	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
<name1> の中の <val5> を欠損に変え欠損が存在する行を削除した結果で置き換える	<name1> = <name1> . replace ( <val5> , np . nan ) . dropna ( )	<name1> = <name1> . replace ( <val5> , np . nan ) . dropna ( )
<name4> をエクセルファイル <val6> に追加する	<name4> . to_excel ( <val6> )	<name4> . to_excel ( <val6> )
<name3> 表中の未記入の値を <name1> で置き換えた結果を <name6> に代入する	<name6> = <name3> . fillna ( <name1> )	<name6> = <name3> . fillna ( <name1> )
表 <name3> の中の未記入の値を表 <name3> の平均で補った結果を <name3> にする	<name3> = <name3> . fillna ( <name3> . mean ( ) )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
ピボット操作で <name5> の列を行に入れかえる	<name5> . stack ( )	<name5> . unstack ( )
昇順に表 <name1> 全体をカラム <val5> でソートして、 <name1> にする	<name1> = <name1> . sort_values ( <val5> )	<name1> = <name1> . sort_values ( <val5> )
<name4> 内の <val3> を欠損に置き換え欠損が存在する行を削除された結果で書き換える	<name4> . replace ( <val3> , np . nan ) . dropna ( inplace = True )	<name4> . replace ( <val3> , np . nan ) . dropna ( inplace = True )
表 <name4> 内に存在する <val1> を NaN で埋められた結果を再代入する	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
<name6> 表のもともとあったインデックスをリセットされた結果を <name6> に代入する	<name6> = <name6> . reset_index ( drop = True )	<name6> = <name6> . reset_index ( drop = True )
CSV データ <val1> を表に格納する	pd . read_csv ( <val1> )	pd . read_csv ( <val1> )
<name5> 表のもともとのインデックスをリセットした結果で書き換える	<name5> . reset_index ( drop = True , inplace = True )	<name5> . reset_index ( drop = True , inplace = True )
<name5> 表と <name3> 表を横方向にマージする	pd . merge ( <name5> , <name3> )	pd . merge ( <name5> , <name3> )
<name3> 中の <val1> のダブる行を落とした結果を <name3> に代入する	<name3> = <name3> . drop_duplicates ( subset = <val1> )	<name3> = <name3> . drop_duplicates ( subset = <val1> )
<name4> 表中に重複があるのかどうか検出する	<name4> . duplicated ( )	<name4> . duplicated ( )
<name1> 表の中の欠損を削除した結果を <name1> にする	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<name6> 表と <name5> 表を縦向きにマージする	pd . concat ( [ <name6> , <name5> ] )	pd . concat ( [ <name6> , <name5> ] )
<name3> の中に欠損があるか確認する	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
線グラフの種類は散布図を用いる	kind = 'scatter'	kind = 'scatter'
ある行を <name4> の中の未記入の値が削除して、 <name3> にする	<name3> = <name4> . dropna ( )	<name3> = <name4> . dropna ( )
<name1> のカラム名を <val4> から <val6> に <val3> から <val2> にリネームした結果を <name1> に代入する	<name1> = <name1> . rename ( columns = { <val3> : <val2> , <val4> : <val6> } )	<name1> = <name1> . rename ( columns = { <val4> : <val2> , <val4> : <val2> } )
<name3> のインデックスをリセットされた結果を <name3> に代入する	<name3> = <name3> . reset_index ( )	<name3> = <name3> . reset_index ( )
<name4> の欠損を <name1> にする	<name4> . fillna ( <name1> )	<name4> . fillna ( <name1> )
エクセルファイル <val3> をデータフレームに格納された結果を <name2> とする	<name2> = pd . read_excel ( <val3> )	<name2> = pd . read_excel ( <val3> )
表 <name4> の <val1> を欠損で補った結果でインプレースする	<name4> . replace ( <val1> , np . nan , inplace = True )	<name4> . replace ( <val1> , np . nan , inplace = True )
線グラフの種類はボックスチャートを用いる	kind = 'box'	kind = 'box'
<val1> という名前のエクセルファイルのシート名 <val2> をデータフレームとして読む	pd . read_excel ( <val1> , sheet_name = <val2> )	pd . read_excel ( <val1> , sheet_name = <val2> )
<name1> の <val6> を NaN にして、 <name1> にする	<name1> = <name1> . replace ( <val6> , np . nan )	<name1> = <name1> . replace ( <val6> , np . nan )
表 <name3> の行名を <val2> から <val4> にリネームする	<name3> . rename ( index = { <val2> : <val4> } )	<name3> . rename ( index = { <val2> : <val4> } )
表 <name5> のインデックスを振り直した結果で置き換える	<name5> = <name5> . reset_index ( )	<name5> = <name5> . reset_index ( )
<name4> 表内の NaN を <name2> で置き換え、 <name4> にする	<name4> = <name4> . fillna ( <name2> )	<name4> = <name4> . fillna ( <name2> )
<name4> 表のもともとあったインデックスをリセットされた結果を <name6> に代入する	<name6> = <name4> . reset_index ( drop = True )	<name6> = <name4> . reset_index ( drop = True )
線グラフを紫で出力する	color = 'purple'	color = 'purple'
表 <name1> 内のそれぞれのカラムに存在する <val6> の合計	<name1> . isin ( [ <val6> ] ) . sum ( )	<name1> . isin ( [ <val6> ] ) . sum ( )
表 <name6> 内の <val4> を欠損に置換し欠損が存在する行を削除された結果を <name5> にする	<name5> = <name6> . replace ( <val4> , np . nan ) . dropna ( )	<name5> = <name6> . replace ( <val4> , np . nan ) . dropna ( )
一番左の列をインデックスと設定して、データ <val4> を表データとして読み込む	pd . read_csv ( <val4> , index_col = 0 )	pd . read_csv ( <val4> , index_col = 0 )
<name2> 表中のカテゴリーをダミー変数にする	pd . get_dummies ( <name2> )	pd . get_dummies ( <name2> )
<name4> 中の <val1> の重複した行をドロップした結果を <name4> に代入する	<name4> = <name4> . drop_duplicates ( subset = <val1> )	<name4> = <name4> . drop_duplicates ( subset = <val1> )
表として <val1> をカンマ区切りで読み込んで、 <name2> とする	<name2> = pd . read_csv ( <val1> , sep = ',' )	<name2> = pd . read_csv ( <val1> , sep = ',' )
列名をセットしないでデータ <val5> を読んだ結果を <name3> にする	<name3> = pd . read_csv ( <val5> , header = None )	<name3> = pd . read_csv ( <val5> , header = None )
六角形のマーカーの形状を使用する	marker = 'h'	marker = 'h'
表 <name3> 上にいくつ未記入の値がどの程度あるのか確認する	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
重複する最後の行を残して表 <name4> 上の重複している行を消した結果でインプレースする	<name4> . drop_duplicates ( keep = False , inplace = True )	<name4> . drop_duplicates ( keep = False , inplace = True )
<name2> の中の重複要素がある行を落とした結果で置き換える	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
CSV ファイル <val1> を表データとして読み込む	pd . read_csv ( <val1> )	pd . read_csv ( <val1> )
<name2> の <val3> を欠損値で置換し、 <name2> に代入する	<name2> = <name2> . replace ( <val3> , np . nan )	<name2> = <name2> . replace ( <val3> , np . nan )
<name6> の未入力の値を <name3> で埋めて、 <name6> にする	<name6> = <name6> . fillna ( <name3> )	<name6> = <name6> . fillna ( <name3> )
表 <name3> の統計情報を調べる	<name3> . describe ( )	<name3> . describe ( )
<name2> 表全体を <val1> カラムを元に昇順でソートし、 <name6> にする	<name6> = <name2> . sort_values ( <val1> )	<name6> = <name2> . sort_values ( <val1> )
表 <name1> 内のカテゴリーを数値データで置き換える	pd . get_dummies ( <name1> )	pd . get_dummies ( <name1> )
<name2> 表中の <val6> コラムに重複がある行をドロップした結果で書き換える	<name2> . drop_duplicates ( subset = <val6> , inplace = True )	<name2> . drop_duplicates ( subset = <val6> , inplace = True )
ある行を <name2> の欠損が取り除かれた結果を <name1> にする	<name1> = <name2> . dropna ( )	<name1> = <name2> . dropna ( )
存在する <val1> を表 <name2> 内に NaN にした結果で置き換える	<name2> . replace ( <val1> , np . nan , inplace = True )	<name2> = <name2> . replace ( <val1> , np . nan )
表 <name3> をインデックスどおりに昇順でソートした結果で置き換える	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name1> 表中の <val5> を未記入の値に置き換え未記入の値がある行を落とした結果を再代入する	<name1> = <name1> . replace ( <val5> , np . nan ) . dropna ( )	<name1> = <name1> . replace ( <val5> , np . nan ) . dropna ( )
降順に表 <name1> の列 <val5> と列 <val4> をソートされた結果で置き換える	<name1> = <name1> . sort_values ( [ <val5> , <val4> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val5> , <val4> ] , ascending = False )
表 <name5> 中の欠損を表 <name5> の平均をとって埋め、 <name5> に代入する	<name5> = <name5> . fillna ( <name5> . mean ( ) )	<name5> = <name5> . fillna ( <name5> . mean ( ) )
列番号 <val5> をインデックスとして <val3> をデータフレームに格納し、 <name1> に代入する	<name1> = pd . read_csv ( <val3> , index_col = <val5> )	<name1> = pd . read_csv ( <val3> , index_col = <val5> )
表 <name5> 全体をインデックスで順にソートした結果を <name4> にする	<name4> = <name5> . sort_index ( )	<name4> = <name5> . sort_index ( )
マーカーの形状はバツ印を使用する	marker = 'x'	marker = 'x'
エクセルファイル <val3> の全てのシートを表とする	pd . read_excel ( <val3> , sheet_name = None )	pd . read_excel ( <val3> , sheet_name = None )
マーカーの形は六角形を使用する	marker = 'h'	marker = 'h'
表 <name1> 内に存在する <val3> を欠損値とし、 <name6> にする	<name6> = <name1> . replace ( <val3> , np . nan )	<name6> = <name1> . replace ( <val3> , np . nan )
<val5> カラムに <name4> 表を基づいて昇順でソートされた結果でインプレースする	<name4> . sort_values ( <val5> , inplace = True )	<name4> . sort_values ( <val5> , inplace = True )
<val6> データをタブ区切りで読み、 <name1> に代入する	<name1> = pd . read_csv ( <val6> , sep = '\t' )	<name1> = pd . read_csv ( <val6> , sep = '\t' )
<name1> をビン <val5> のヒストグラムを用いてプロットする	plt . hist ( <name1> , bins = <val5> )	plt . hist ( <name1> , bins = <val5> )
グラフ内に凡例を入れる	plt . legend ( )	plt . legend ( )
表 <name5> の <val4> を未入力の値で補った結果を <name6> に代入する	<name6> = <name5> . replace ( <val4> , np . nan )	<name6> = <name5> . replace ( <val4> , np . nan )
<val4> と <val6> を軸に <name1> を値が大きい順でソートされた結果で置き換える	<name1> = <name1> . sort_values ( [ <val4> , <val6> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val4> , <val6> ] , ascending = False )
<name6> 中の未記入の値を <name5> で置き換え、 <name6> とする	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
表 <name2> の中の未記入の値を含む行を落として、再代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name2> の <val3> を未入力の値に置き換えた結果を <name2> に代入する	<name2> = <name2> . replace ( <val3> , np . nan )	<name2> = <name2> . replace ( <val3> , np . nan )
<name3> 表をインデックスにそって昇順でソートし、 <name2> とする	<name2> = <name3> . sort_index ( )	<name2> = <name3> . sort_index ( )
<name4> 内の欠損を <name4> の平均値で埋める	<name4> . fillna ( <name4> . mean ( ) )	<name4> . fillna ( <name4> . mean ( ) )
<name1> と <name6> を縦にマージ	pd . concat ( [ <name1> , <name6> ] )	pd . concat ( [ <name1> , <name6> ] )
<name5> の中の <val2> を未入力の値に変え未入力の値がある行を取り除いた結果で書き換える	<name5> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name5> . replace ( <val2> , np . nan ) . dropna ( inplace = True )
表 <name1> の <val6> を NaN で置き換える	<name1> . replace ( <val6> , np . nan )	<name1> . replace ( <val6> , np . nan )
<name4> 表の <val2> コラムをインデックスに設定した結果を <name1> に代入する	<name1> = <name4> . set_index ( <val2> )	<name1> = <name4> . set_index ( <val2> )
表 <name3> 上の <val4> を NaN に置換し NaN がある行を消して、 <name1> にする	<name1> = <name3> . replace ( <val4> , np . nan ) . dropna ( )	<name1> = <name3> . replace ( <val4> , np . nan ) . dropna ( )
<name3> をエクセルファイル <val5> に描画する	<name3> . to_excel ( <val5> )	<name3> . to_excel ( <val5> )
<name1> 中の重複要素がある行をドロップする	<name1> . drop_duplicates ( )	<name1> . drop_duplicates ( )
<name2> 表の <val3> を未記入の値で補った結果で書き換える	<name2> . replace ( <val3> , np . nan , inplace = True )	<name2> . replace ( <val3> , np . nan , inplace = True )
表 <name3> の中の未記入の値を直前の行の値で埋め、 <name3> にする	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
表 <name4> 上の重複要素がある行を落とし、 <name1> とする	<name1> = <name4> . drop_duplicates ( )	<name1> = <name4> . drop_duplicates ( )
<name1> 表上にある <val5> を NaN で補って、置き換える	<name1> = <name1> . replace ( <val5> , np . nan )	<name1> = <name1> . replace ( <val5> , np . nan )
表 <name4> 上のコラム <val3> に重複がある行を消した結果を再代入する	<name4> = <name4> . drop_duplicates ( subset = <val3> )	<name4> = <name4> . drop_duplicates ( subset = <val3> )
インデックスを軸に <name6> 表全体を昇順でソートし、再代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name6> 表内の未入力の値がある行を消して、インプレースする	<name6> . dropna ( inplace = True )	<name6> . dropna ( inplace = True )
データ <val1> をタブ区切りで読んだ結果を <name6> にする	<name6> = pd . read_csv ( <val1> , sep = '\t' )	<name6> = pd . read_csv ( <val1> , sep = '\t' )
表 <name3> 全体をカラム <val4> を軸に昇順でソートする	<name3> . sort_values ( <val4> )	<name3> . sort_values ( <val4> )
<name2> 表内の欠損がある行を消し、 <name2> に代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
データフレームとして <val3> をカンマ区切りで読み込む	pd . read_csv ( <val3> , sep = ',' )	pd . read_csv ( <val3> , sep = ',' )
<name5> の先頭 5 行	<name5> . head ( )	<name5> . head ( )
<name6> 中の <val5> を欠損値に変え欠損値が存在する行をドロップし、置き換える	<name6> . replace ( <val5> , np . nan ) . dropna ( inplace = True )	<name6> = <name6> . replace ( <val5> , np . nan ) . dropna ( )
ある行を <name5> 上の未入力の値が消し、 <name1> に代入する	<name1> = <name5> . dropna ( )	<name1> = <name5> . dropna ( )
<name6> 表の中の未記入の値を <name4> とされた結果で書き換える	<name6> . fillna ( <name4> , inplace = True )	<name6> . fillna ( <name4> , inplace = True )
<name1> 中の <val2> に重複がある行をドロップされた結果を再代入する	<name1> = <name1> . drop_duplicates ( subset = <val2> )	<name1> = <name1> . drop_duplicates ( subset = <val2> )
<name4> 表の数値データ以外の統計情報を表示する	<name4> . describe ( include = 'O' )	<name4> . describe ( include = 'O' )
表 <name1> の中の未入力の値がある行を削除し、 <name1> に代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
表 <name5> 内のコラム <val3> に重複があるのかどうかを見る	<name5> . duplicated ( subset = <val3> )	<name5> . duplicated ( subset = <val3> )
降順に <name6> の <val1> と <val4> をソートして、置き換える	<name6> = <name6> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val1> , <val4> ] , ascending = False )
エクセルファイル <val2> の <val3> を読み込んで表データにし、 <name5> に代入する	<name5> = pd . read_excel ( <val2> , sheet_name = <val3> )	<name5> = pd . read_excel ( <val2> , sheet_name = <val3> )
<name6> 表を <val2> カラムをもとに昇順でソートした結果を <name6> にする	<name6> = <name6> . sort_values ( <val2> )	<name6> = <name6> . sort_values ( <val2> )
<name3> の中の未記入の値を <name6> で置き換えて、置き換える	<name3> . fillna ( <name6> , inplace = True )	<name3> = <name3> . fillna ( <name6> )
最大表示列数を <val2> 列にする	pd . set_option ( 'display.max_columns' , <val2> )	pd . set_option ( 'display.max_columns' , <val2> )
<name6> の <val5> をインデックスにし、再代入する	<name6> = <name6> . set_index ( <val5> )	<name6> = <name6> . set_index ( <val5> )
<name2> 表中のカテゴリ変数を one - hot 表現にされた結果を <name3> に代入する	<name3> = pd . get_dummies ( <name2> )	<name3> = pd . get_dummies ( <name2> )
表 <name4> の <val1> を欠損にし、 <name2> とする	<name2> = <name4> . replace ( <val1> , np . nan )	<name2> = <name4> . replace ( <val1> , np . nan )
<name1> 表をダミー変数化し、 <name3> に代入する	<name3> = pd . get_dummies ( <name1> )	<name3> = pd . get_dummies ( <name1> )
表 <name4> 内に欠損値があるか確認する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
<val3> というエクセルファイルの <val5> を読み込んで、 <name1> に代入する	<name1> = pd . read_excel ( <val3> , sheet_name = <val5> )	<name1> = pd . read_excel ( <val3> , sheet_name = <val5> )
<name4> の <val1> の名前を <val5> にリネームする	<name4> . rename ( columns = { <val1> : <val5> } )	<name4> . rename ( columns = { <val1> : <val5> } )
<name5> についてダミー変数を作成する	pd . get_dummies ( <name5> )	pd . get_dummies ( <name5> )
表 <name3> 上の NaN を直前の行の値で埋める	<name3> . fillna ( method = 'ffill' )	<name3> . fillna ( method = 'ffill' )
<name1> 表上のカテゴリーをダミー変数にし、 <name4> にする	<name4> = pd . get_dummies ( <name1> )	<name4> = pd . get_dummies ( <name1> )
ある行を <name6> 内の NaN がドロップした結果で置き換える	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name3> 表上の NaN を <name5> で置き換えた結果で置き換える	<name3> = <name3> . fillna ( <name5> )	<name3> = <name3> . fillna ( <name5> )
<val5> に文字の大きさを指定する	fontsize = <val5>	fontsize = <val5>
エクセルファイル <val5> の <val4> 番目のシートを読み込み、表として、 <name1> に代入する	<name1> = pd . read_excel ( <val5> , sheet_name = <val4> )	<name1> = pd . read_excel ( <val5> , sheet_name = <val4> )
<name2> 表の <val4> 列をビンを <name5> 、ビンのラベルを <name3> リストとして分割し、 <name6> にする	<name6> = pd . cut ( <name2> [ <val4> ] , <name5> , label = <name3> )	<name6> = pd . cut ( <name2> [ <val4> ] , <name5> , label = <name3> )
列 <val5> とカラム <val6> で表 <name3> 全体を降順にソートした結果で置き換える	<name3> = <name3> . sort_values ( [ <val5> , <val6> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val5> , <val6> ] , ascending = False )
<name3> 表のインデックスを振り直して、 <name3> とする	<name3> = <name3> . reset_index ( )	<name3> = <name3> . reset_index ( )
表 <name4> のカラム名を <val1> から <val6> にリネームする	<name4> . rename ( columns = { <val1> : <val6> } )	<name4> . rename ( columns = { <val1> : <val6> } )
重複している最後の行を残して表 <name2> 中の重複している行を削除して、 <name2> とする	<name2> = <name2> . drop_duplicates ( keep = False )	<name2> = <name2> . drop_duplicates ( keep = False )
目印を菱形とする	marker = 'D'	marker = 'D'
CSV <val1> を表データとしてタブ区切りで読んで、 <name4> にする	<name4> = pd . read_csv ( <val1> , sep = '\t' )	<name4> = pd . read_csv ( <val1> , sep = '\t' )
要素の数が等しくなるように <name3> 表の <val2> 列を区間を <name4> として分割して、 <name6> とする	<name6> = pd . qcut ( <name3> [ <val2> ] , <name4> )	<name6> = pd . qcut ( <name3> [ <val2> ] , <name4> )
<name1> 表の未入力の値を直前の行の値で埋められた結果を <name1> にする	<name1> = <name1> . fillna ( method = 'ffill' )	<name1> = <name1> . fillna ( method = 'ffill' )
エクセルファイル <val6> の <val4> をデータフレームに読み込んだ結果を <name5> に代入する	<name5> = pd . read_excel ( <val6> , sheet_name = <val4> )	<name5> = pd . read_excel ( <val6> , sheet_name = <val4> )
<name3> 上の <val1> に重複がある行を落とした結果を <name3> にする	<name3> = <name3> . drop_duplicates ( subset = <val1> )	<name3> = <name3> . drop_duplicates ( subset = <val1> )
<name2> の中の未入力の値を直前の行の値で埋められた結果を <name4> に代入する	<name4> = <name2> . fillna ( method = 'ffill' )	<name4> = <name2> . fillna ( method = 'ffill' )
<name1> 全体をインデックスを元に昇順でソートして、再代入する	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
列 <val4> とカラム <val2> で表 <name6> を降順にソートし、置き換える	<name6> . sort_values ( [ <val4> , <val2> ] , ascending = False , inplace = True )	<name6> = <name6> . sort_values ( [ <val4> , <val2> ] , ascending = False )
<name2> 表のもともとのインデックスをリセットされた結果で置き換える	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
<val5> 列と <val4> カラムを軸に <name2> 表を逆順でソートして、 <name2> に代入する	<name2> = <name2> . sort_values ( [ <val5> , <val4> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val5> , <val4> ] , ascending = False )
表 <name1> 全体をカラム <val3> で昇順にソートし、書き換える	<name1> . sort_values ( <val3> , inplace = True )	<name1> . sort_values ( <val3> , inplace = True )
エクセルファイル <val5> の全てのシートをデータフレームとする	pd . read_excel ( <val5> , sheet_name = None )	pd . read_excel ( <val5> , sheet_name = None )
<val2> 番目まで行を表示できるようにセットする	pd . set_option ( 'display.max_rows' , <val2> )	pd . set_option ( 'display.max_rows' , <val2> )
その末尾の <val3> 行	. tail ( <val3> )	. tail ( <val3> )
表 <name1> の列 <val5> とコラム <val4> とコラム <val3> と列 <val2> を選んで、	<name1> [ [ <val5> , <val4> , <val3> , <val2> ] ] .	<name1> [ [ <val5> , <val4> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> ] ] .
表 <name3> の <val4> を欠損で置換して、 <name3> とする	<name3> = <name3> . replace ( <val4> , np . nan )	<name3> = <name3> . replace ( <val4> , np . nan )
<name5> 表上の未記入の値を <name2> で置き換え、 <name6> とする	<name6> = <name5> . fillna ( <name2> )	<name6> = <name5> . fillna ( <name2> )
表 <name4> 内の未記入の値がある行を削除して、 <name2> に代入する	<name2> = <name4> . dropna ( )	<name2> = <name4> . dropna ( )
<name4> 上の NaN を <name1> として、 <name3> に代入する	<name3> = <name4> . fillna ( <name1> )	<name3> = <name4> . fillna ( <name1> )
<name6> 表で重複しているデータ	<name6> [ <name6> . duplicated ( ) ]	<name6> [ <name6> . duplicated ( ) ]
ビン数を <name5> として <name1> の <val3> を要素の数が等しくなるように分割した結果を <name4> に代入する	<name4> = pd . qcut ( <name1> [ <val3> ] , <name5> )	<name4> = pd . qcut ( <name1> [ <val3> ] , <name5> )
表 <name4> の中の未記入の値を表 <name4> の平均をとって補って、再代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
インデックスを軸に <name5> 表全体を小さい順にソートして、置き換える	<name5> . sort_index ( inplace = True )	<name5> = <name5> . sort_index ( )
<name1> 中の欠損を直前の行の値で補われた、結果で書き換える	<name1> . fillna ( method = 'ffill' , inplace = True )	<name1> . fillna ( method = 'ffill' , inplace = True )
列番号 <val4> をインデックスにして <val5> を格納する	pd . read_csv ( <val5> , index_col = <val4> )	pd . read_csv ( <val5> , index_col = <val4> )
<name3> の中の未記入の値を直前の行の値で補う	<name3> . fillna ( method = 'ffill' )	<name3> . fillna ( method = 'ffill' )
<name6> 表の <val3> 列を区間の数を <name1> 、ビンの名前を整数値として分割した結果を <name5> に代入する	<name5> = pd . cut ( <name6> [ <val3> ] , <name1> , label = False )	<name5> = pd . cut ( <name6> [ <val3> ] , <name1> , label = False )
<name3> の中に存在する <val6> を欠損で置換し、 <name1> とする	<name1> = <name3> . replace ( <val6> , np . nan )	<name1> = <name3> . replace ( <val6> , np . nan )
<name4> 上のダブる行を落とした結果を <name3> とする	<name3> = <name4> . drop_duplicates ( )	<name3> = <name4> . drop_duplicates ( )
<name6> 表中のそれぞれのコラムに存在する <val1> の数の合計値	<name6> . isin ( [ <val1> ] ) . sum ( )	<name6> . isin ( [ <val1> ] ) . sum ( )
表 <name3> の数値データ以外の統計的な情報を確認する	<name3> . describe ( include = 'O' )	<name3> . describe ( include = 'O' )
<name6> 内のカテゴリ変数をダミー変数にする	pd . get_dummies ( <name6> )	pd . get_dummies ( <name6> )
<name1> 表の <val6> を未記入の値とされた結果を <name2> に代入する	<name2> = <name1> . replace ( <val6> , np . nan )	<name2> = <name1> . replace ( <val6> , np . nan )
<name3> 中の <val1> を欠損に変え欠損が存在する行を削除した結果で書き換える	<name3> . replace ( <val1> , np . nan ) . dropna ( inplace = True )	<name3> . replace ( <val1> , np . nan ) . dropna ( inplace = True )
表 <name6> の中の欠損値が含まれる部分に色をつける	<name6> . style . highlight_null ( )	<name6> . style . highlight_null ( )
一番左の列をインデックスとして、 <val6> を表データとして読み込んだ結果を <name3> にする	<name3> = pd . read_csv ( <val6> , index_col = 0 )	<name3> = pd . read_csv ( <val6> , index_col = 0 )
表 <name3> の <val6> を未記入の値とする	<name3> . replace ( <val6> , np . nan )	<name3> . replace ( <val6> , np . nan )
<name1> 表を <val4> 列と <val2> カラムで降順にソートして、 <name1> とする	<name1> = <name1> . sort_values ( [ <val4> , <val2> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val4> , <val2> ] , ascending = False )
df をインデックスを軸に小さい順でソートして、インプレースする	df . sort_index ( inplace = True )	df . sort_index ( inplace = True )
<val4> に y 軸のラベルをセットする	plt . ylabel ( <val4> )	plt . ylabel ( <val4> )
表 <name1> のデータの内容	<name1> . info ( )	<name1> . info ( )
<val6> × <val4> に描画するグラフの大きさを設定する	plt . figure ( figsize = ( <val6> , <val4> ) )	plt . figure ( figsize = ( <val6> , <val4> ) )
<name2> 上の重複する行を消し、 <name4> にする	<name4> = <name2> . drop_duplicates ( )	<name4> = <name2> . drop_duplicates ( )
<name2> 表全体を昇順に <val1> カラムでソートし、書き換える	<name2> . sort_values ( <val1> , inplace = True )	<name2> . sort_values ( <val1> , inplace = True )
表 <name6> のコラム <val3> とカラム <val5> に重複はあるのかどうか検出	<name6> . duplicated ( subset = [ <val3> , <val5> ] )	<name6> . duplicated ( subset = [ <val3> , <val5> ] )
表 <name1> の列の名前を <val2> から <val6> に変え、再代入する	<name1> = <name1> . rename ( columns = { <val2> : <val6> } )	<name1> = <name1> . rename ( columns = { <val2> : <val6> } )
<name2> 中の欠損値を直前の行の値で埋めた結果を <name2> とする	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
<name6> 内の NaN を消した結果で置き換える	<name6> . dropna ( inplace = True )	<name6> = <name6> . dropna ( )
<name6> の <val5> と <val1> を降順にソートして、インプレースする	<name6> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )
<name3> を出力先として適用する	file = <name3>	file = <name3>
存在する <val1> を表 <name4> 内に NaN として、 <name4> にする	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
<name3> 全体をインデックスに沿って昇順でソートして、置き換える	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name2> 全体をインデックスを軸に小さい順でソートされた結果を <name2> にする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name1> 中のそれぞれの列にある <val4> の数の和を調べる	<name1> . isin ( [ <val4> ] ) . sum ( )	<name1> . isin ( [ <val4> ] ) . sum ( )
表 <name2> の <val1> 行目を取り除いて、置き換える	<name2> = <name2> . drop ( <val1> )	<name2> = <name2> . drop ( <val1> )
ある <val3> を表 <name6> に未入力の値にする	<name6> . replace ( <val3> , np . nan )	<name6> . replace ( <val3> , np . nan )
<name2> 上にある <val6> を NaN に置き換えて、置き換える	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
<val6> カラムに <name4> 表を基づいて昇順でソートし、インプレースする	<name4> . sort_values ( <val6> , inplace = True )	<name4> . sort_values ( <val6> , inplace = True )
グラフ線を点と線で表す	linestyle = 'dashbot'	linestyle = 'dashbot'
<name5> 表中の <val4> コラムと <val1> カラムに重複があるのかどうかをチェックする	<name5> . duplicated ( subset = [ <val4> , <val1> ] )	<name5> . duplicated ( subset = [ <val4> , <val1> ] )
エクセルファイル <val1> を読み込んで表に格納して、 <name2> とする	<name2> = pd . read_excel ( <val1> )	<name2> = pd . read_excel ( <val1> )
<name2> 表の <val6> コラムについての標準偏差	<name2> [ <val6> ] . std ( )	<name2> [ <val6> ] . std ( )
重複する最後の行を残して <name4> 表内の重複している行を消した結果を <name1> とする	<name1> = <name4> . drop_duplicates ( keep = False )	<name1> = <name4> . drop_duplicates ( keep = False )
表を <val6> から読まれた結果を <name2> にする	<name2> = pd . read_csv ( <val6> )	<name2> = pd . read_csv ( <val6> )
<name5> 表内の重複要素がある行を消す	<name5> . drop_duplicates ( )	<name5> . drop_duplicates ( )
<name1> 中の欠損値を <name1> の平均をとって埋める	<name1> . fillna ( <name1> . mean ( ) )	<name1> . fillna ( <name1> . mean ( ) )
<name2> 表中の未記入の値を含む行を落とし、書き換える	<name2> . dropna ( inplace = True )	<name2> . dropna ( inplace = True )
<val2> というファイル名でエクセル形式に <name6> を入れる	<name6> . to_excel ( <val2> )	<name6> . to_excel ( <val2> )
表示するグラフの大きさを <val1> × <val2> に指定する	plt . figure ( figsize = ( <val1> , <val2> ) )	plt . figure ( figsize = ( <val1> , <val2> ) )
グラフの <name6> 軸のラベルを <name6> から <val5> 、 <val2> 、 <val4> に変える	plt . xticks ( <name6> , [ <val5> , <val2> , <val4> ] )	plt . xticks ( <name6> , [ <val5> , <val2> , <val4> ] )
<name3> の未入力の値を <name3> の平均で補って、置き換える	<name3> . fillna ( <name3> . mean ( ) , inplace = True )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
<name1> 内の NaN を直前の行の値で補って、 <name1> に代入する	<name1> = <name1> . fillna ( method = 'ffill' )	<name1> = <name1> . fillna ( method = 'ffill' )
表 <name1> の中の欠損を直前の行の値で埋め、 <name2> とする	<name2> = <name1> . fillna ( method = 'ffill' )	<name2> = <name1> . fillna ( method = 'ffill' )
存在する行を表 <name5> の中の NaN が削除して、インプレースする	<name5> . dropna ( inplace = True )	<name5> . dropna ( inplace = True )
表 <name2> の <val6> を欠損値にして、 <name2> に代入する	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
ある <val1> を表 <name3> 中に未記入の値で埋め、 <name3> に代入する	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
<name1> 表内の <val3> コラムに重複がある行をドロップした結果を <name1> とする	<name1> = <name1> . drop_duplicates ( subset = <val3> )	<name1> = <name1> . drop_duplicates ( subset = <val3> )
<val3> 番目まで列を表示できるように指定する	pd . set_option ( 'display.max_columns' , <val3> )	pd . set_option ( 'display.max_columns' , <val3> )
表 <name6> 中の <val1> を欠損値に置き換え欠損値が存在する行をドロップされた結果を <name3> とする	<name3> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name3> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
<val3> カラムと <val5> コラムが値の大きい順になるように <name4> 表をソートして、インプレースする	<name4> . sort_values ( [ <val3> , <val5> ] , ascending = False , inplace = True )	<name4> . sort_values ( [ <val3> , <val5> ] , ascending = False , inplace = True )
表 <name6> 内の <val1> を欠損値に置き換え欠損値が存在する行をドロップし、 <name3> に代入する	<name3> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name3> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
表 <name5> 中のカラム <val4> に重複があるのかどうか判定をチェックする	<name5> . duplicated ( subset = <val4> )	<name5> . duplicated ( subset = <val4> )
重複している最後の行を残して表 <name1> の中の重複している行を削除された結果でインプレースする	<name1> . drop_duplicates ( keep = False , inplace = True )	<name1> . drop_duplicates ( keep = False , inplace = True )
<name5> 表内に存在する <val1> を欠損値で補って、置き換える	<name5> . replace ( <val1> , np . nan , inplace = True )	<name5> = <name5> . replace ( <val1> , np . nan )
<name6> の中の NaN が存在する行を取り除いた結果を <name1> とする	<name1> = <name6> . dropna ( )	<name1> = <name6> . dropna ( )
<name6> 中にある <val1> を未記入の値で補い、インプレースする	<name6> . replace ( <val1> , np . nan , inplace = True )	<name6> . replace ( <val1> , np . nan , inplace = True )
<name5> 表中にある <val1> を未記入の値で補われた、結果を再代入する	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
<name2> 表の <val1> 行目を落として、 <name2> にする	<name2> = <name2> . drop ( <val1> )	<name2> = <name2> . drop ( <val1> )
<name4> 表中の重複要素がある行をドロップし、インプレースする	<name4> . drop_duplicates ( inplace = True )	<name4> . drop_duplicates ( inplace = True )
<name3> 表の <val5> コラムの前後の行の差分を算出する	<name3> [ <val5> ] . diff ( periods = 1 )	<name3> [ <val5> ] . diff ( periods = 1 )
表 <name3> 内の重複した行	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
<name1> の <val6> についての平均を確認する	<name1> [ <val6> ] . mean ( )	<name1> [ <val6> ] . mean ( )
<name3> 表の中にいくつ未入力の値がどの程度あるのか数える	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
存在する <val4> を <name1> 表中に欠損にして、 <name3> にする	<name3> = <name1> . replace ( <val4> , np . nan )	<name3> = <name1> . replace ( <val4> , np . nan )
<name4> 表の中の <val6> を未記入の値に置き換え未記入の値がある行を落として、置き換える	<name4> . replace ( <val6> , np . nan ) . dropna ( inplace = True )	<name4> = <name4> . replace ( <val6> , np . nan ) . dropna ( )
重複している最後の行を残して <name3> 内の重複している行を削除した結果を <name1> に代入する	<name1> = <name3> . drop_duplicates ( keep = False )	<name1> = <name3> . drop_duplicates ( keep = False )
ダブっている最後の行を残して <name2> の中の重複している行を取り除かれた結果を <name1> とする	<name1> = <name2> . drop_duplicates ( keep = False )	<name1> = <name2> . drop_duplicates ( keep = False )
グラフをグレーで表示する	color = 'gray'	color = 'gray'
<name3> 内の欠損値を <name1> に置換した結果を <name3> とする	<name3> = <name3> . fillna ( <name1> )	<name3> = <name3> . fillna ( <name1> )
カラム <val1> とコラム <val4> が降順になるように表 <name5> をソートされた結果で置き換える	<name5> = <name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )
表 <name4> を列 <val1> とカラム <val5> で降順にソートし、置き換える	<name4> = <name4> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val1> , <val5> ] , ascending = False )
<name4> の未入力の値を <name2> にした結果で置き換える	<name4> = <name4> . fillna ( <name2> )	<name4> = <name4> . fillna ( <name2> )
表 <name4> のデータを調べる	<name4> . info ( )	<name4> . info ( )
<name6> 表にある <val3> を未入力の値で埋め、置き換える	<name6> = <name6> . replace ( <val3> , np . nan )	<name6> = <name6> . replace ( <val3> , np . nan )
<name4> 内の欠損値を <name2> で埋めた結果で置き換える	<name4> = <name4> . fillna ( <name2> )	<name4> = <name4> . fillna ( <name2> )
<name2> 表と <name6> 表を結合された結果を <name1> に代入する	<name1> = pd . concat ( [ <name2> , <name6> ] )	<name1> = pd . concat ( [ <name2> , <name6> ] )
<name4> のカラム名を <val6> から <val1> に <val5> から <val2> にリネームした結果で置き換える	<name4> = <name4> . rename ( columns = { <val5> : <val2> , <val6> : <val1> } )	<name4> = <name4> . rename ( columns = { <val6> : <val2> , <val6> : <val1> } )
インデックスを元に <name6> 全体を昇順でソートして、再代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
列名をなしでデータ <val6> を読み込んだ結果を <name4> にする	<name4> = pd . read_csv ( <val6> , header = None )	<name4> = pd . read_csv ( <val6> , header = None )
<val3> から <val5> に <name1> 表の列の名前を変える	<name1> . rename ( columns = { <val3> : <val5> } )	<name1> . rename ( columns = { <val3> : <val5> } )
表 <name6> をインデックスどおりに昇順でソートした結果を <name6> に代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name4> 表内の欠損を直前の行の値で埋め、 <name6> に代入する	<name6> = <name4> . fillna ( method = 'ffill' )	<name6> = <name4> . fillna ( method = 'ffill' )
ある <val1> を <name2> 表に未入力の値で置き換えた結果を再代入する	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
表 <name2> の <val5> が <val6> より多いデータ	<name2> [ <name2> [ <val5> ] > <val6> ]	<name2> [ <name2> [ <val5> ] > <val6> ]
<name6> 表上にある <val3> を NaN に置き換えた結果で置き換える	<name6> . replace ( <val3> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val3> , np . nan )
表 <name1> 内の欠損値を直前の行の値で補われた、結果を <name3> とする	<name3> = <name1> . fillna ( method = 'ffill' )	<name3> = <name1> . fillna ( method = 'ffill' )
表 <name5> を <val1> という名前のエクセルファイルとしてセーブする	<name5> . to_excel ( <val1> )	<name5> . to_excel ( <val1> )
<name2> 表内のコラムにある <val6> の個数の和	<name2> . isin ( [ <val6> ] ) . sum ( )	<name2> . isin ( [ <val6> ] ) . sum ( )
列番号 <val3> をインデックスにして <val5> を格納し、 <name6> とする	<name6> = pd . read_csv ( <val5> , index_col = <val3> )	<name6> = pd . read_csv ( <val5> , index_col = <val3> )
元のインデックスを削除し、 <name2> 表のインデックスをリセットし、再代入する	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
<name4> の中の <val2> と <val3> に重複があるのかどうか確認	<name4> . duplicated ( subset = [ <val2> , <val3> ] )	<name4> . duplicated ( subset = [ <val2> , <val3> ] )
線グラフの種類は横向き棒グラフを用いる	kind = 'barh'	kind = 'barh'
y 軸に <val5> というラベルをつける	plt . ylabel ( <val5> )	plt . ylabel ( <val5> )
<name2> 表内に存在する <val1> を欠損値にした結果で書き換える	<name2> . replace ( <val1> , np . nan , inplace = True )	<name2> . replace ( <val1> , np . nan , inplace = True )
<name3> 表全体を <val6> 列と <val5> カラムを軸に逆順でソートする	<name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )	<name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )
<name5> の未入力の値を <name2> に変えた結果で置き換える	<name5> . fillna ( <name2> , inplace = True )	<name5> = <name5> . fillna ( <name2> )
カラム <val3> とコラム <val1> が逆順になるように表 <name5> をソートする	<name5> . sort_values ( [ <val3> , <val1> ] , ascending = False )	<name5> . sort_values ( [ <val3> , <val1> ] , ascending = False )
<name1> の <val3> を未入力の値で埋め、 <name1> にする	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
表 <name3> の中の未記入の値を <name4> で埋めて、 <name3> にする	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
<name6> 表上の重複した行の数をチェックする	<name6> . duplicated ( ) . sum ( )	<name6> . duplicated ( ) . sum ( )
表 <name2> のコラム <val3> をインデックスとして設定し、 <name2> にする	<name2> = <name2> . set_index ( <val3> )	<name2> = <name2> . set_index ( <val3> )
エンコーディングを shift - jis で、 <val1> データを読む	pd . read_csv ( <val1> , encoding = 'shift_jis' )	pd . read_csv ( <val1> , encoding = 'shift_jis' )
CSV データ <val4> をタブ区切りで読む	pd . read_csv ( <val4> , sep = '\t' )	pd . read_csv ( <val4> , sep = '\t' )
エクセルファイル <val2> の <val6> シート名を表データに格納した結果を <name4> にする	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )
<name4> 表内の NaN の合計値を調べる	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
ビンに含まれる個数が等しくなるように区間の数を <name5> として <name2> の <val6> を分割して、 <name1> に代入する	<name1> = pd . qcut ( <name2> [ <val6> ] , <name5> )	<name1> = pd . qcut ( <name2> [ <val6> ] , <name5> )
一番左の列をインデックスにセット設定して、 <val3> データを読み込まれた結果を <name6> に代入する	<name6> = pd . read_csv ( <val3> , index_col = 0 )	<name6> = pd . read_csv ( <val3> , index_col = 0 )
昇順に <val4> で <name6> 全体をソートし、 <name6> に代入する	<name6> = <name6> . sort_values ( <val4> )	<name6> = <name6> . sort_values ( <val4> )
<name3> 表をインデックスで小さい順に並び替え、再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name3> 表をインデックスに沿って昇順でソートし、書き換える	<name3> . sort_index ( inplace = True )	<name3> . sort_index ( inplace = True )
<name5> を柱状グラフにする	plt . hist ( <name5> )	plt . hist ( <name5> )
<name5> 表の <val2> コラムと <val4> カラムごとの <val3> コラムの値の和	<name5> . groupby ( [ <val2> , <val4> ] ) [ <val3> ] . sum ( )	<name5> . groupby ( [ <val2> , <val4> ] ) [ <val3> ] . sum ( )
存在する <val1> を <name2> 表内に NaN として、 <name5> に代入する	<name5> = <name2> . replace ( <val1> , np . nan )	<name5> = <name2> . replace ( <val1> , np . nan )
線の見た目を点と線とする	linestyle = 'dashbot'	linestyle = 'dashbot'
<name6> 表全体を <val1> カラムで昇順にソートした結果を再代入する	<name6> = <name6> . sort_values ( <val1> )	<name6> = <name6> . sort_values ( <val1> )
タブは空白 <name1> 文字分とする	tabsize = <name1>	pd . set_option ( 'display.max_columns' , <name1> )
表 <name3> のコラム <val4> とカラム <val5> ごとのコラム <val1> の値の数を求める	<name3> . groupby ( [ <val4> , <val5> ] ) [ <val1> ] . sum ( )	<name3> . groupby ( [ <val4> , <val5> ] ) [ <val1> ] . sum ( )
表 <name2> の <val4> を未入力の値に置き換え未入力の値がある行を取り除く	<name2> . replace ( <val4> , np . nan ) . dropna ( )	<name2> . replace ( <val4> , np . nan ) . dropna ( )
マーカーの形状のエッジの色は紫色を使用する	markeredgecolor = 'purple'	markeredgecolor = 'purple'
表 <name4> の中で重複した行の数の合計を確認する	<name4> . duplicated ( ) . sum ( )	<name4> . duplicated ( ) . sum ( )
<val2> と <val3> が値の大きい順になるように <name4> をソートした結果を <name4> に代入する	<name4> = <name4> . sort_values ( [ <val2> , <val3> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val2> , <val3> ] , ascending = False )
エクセル <val3> を表データに読んだ結果を <name2> とする	<name2> = pd . read_excel ( <val3> )	<name2> = pd . read_excel ( <val3> )
列番号 <val5> をインデックスにして <val3> から読み込み、 <name2> とする	<name2> = pd . read_csv ( <val3> , index_col = <val5> )	<name2> = pd . read_csv ( <val3> , index_col = <val5> )
先頭の列をインデックスと、 <val3> データを表として読み込んだ結果を <name6> に代入する	<name6> = pd . read_csv ( <val3> , index_col = 0 )	<name6> = pd . read_csv ( <val3> , index_col = 0 )
<name4> 表上の欠損値が含まれる箇所に色をつける	<name4> . style . highlight_null ( )	<name4> . style . highlight_null ( )
<name6> 表を <val5> カラムを使って昇順でソートした結果を <name4> とする	<name4> = <name6> . sort_values ( <val5> )	<name4> = <name6> . sort_values ( <val5> )
<val5> 番目の列をインデックスと設定して、 <val1> を表データとして読み込んだ結果を <name3> に代入する	<name3> = pd . read_csv ( <val1> , index_col = <val5> )	<name3> = pd . read_csv ( <val1> , index_col = <val5> )
表 <name2> をカラム <val1> を元に昇順でソートする	<name2> . sort_values ( <val1> )	<name2> . sort_values ( <val1> )
<name3> 表の列の名前を <val5> から <val6> に <val1> から <val4> にリネームして、 <name2> とする	<name2> = <name3> . rename ( columns = { <val1> : <val4> , <val5> : <val6> } )	<name2> = <name3> . rename ( columns = { <val5> : <val4> , <val5> : <val6> } )
一番左の列をインデックスにセット、 <val3> を読み込む	pd . read_csv ( <val3> , index_col = 0 )	pd . read_csv ( <val3> , index_col = 0 )
表 <name5> の <val4> を NaN に置換された結果を <name1> にする	<name1> = <name5> . replace ( <val4> , np . nan )	<name1> = <name5> . replace ( <val4> , np . nan )
昇順に <val4> で <name6> 全体をソートする	<name6> . sort_values ( <val4> )	<name6> . sort_values ( <val4> )
インデックスを元に表 <name6> を小さい順でソートされた結果で置き換える	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<val1> と <val2> を軸に <name4> 全体を逆順でソートして、 <name4> にする	<name4> = <name4> . sort_values ( [ <val1> , <val2> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val1> , <val2> ] , ascending = False )
<name5> の欠損値を <name1> に変えて、置き換える	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
<name3> 中の未記入の値を <name6> とし、 <name3> にする	<name3> = <name3> . fillna ( <name6> )	<name3> = <name3> . fillna ( <name6> )
<name4> 表上に重複はあるのか検出	<name4> . duplicated ( )	<name4> . duplicated ( )
<name3> の <val4> をインデックスに指定した結果で置き換える	<name3> . set_index ( <val4> , inplace = True )	<name3> = <name3> . set_index ( <val4> )
列番号 <val3> をインデックスと <val6> データを表データに格納する	pd . read_csv ( <val6> , index_col = <val3> )	pd . read_csv ( <val6> , index_col = <val3> )
表 <name5> 中の NaN がある行を削除された結果を <name2> とする	<name2> = <name5> . dropna ( )	<name2> = <name5> . dropna ( )
<name5> 表のインデックスが <val3> の行	<name5> . loc [ <val3> ]	<name5> . loc [ <val3> ]
<val4> 行目までをデフォルトで出力する	pd . set_option ( 'display.max_rows' , <val4> )	pd . set_option ( 'display.max_rows' , <val4> )
<name2> 表を <val3> 列と <val4> カラムを軸に値が大きい順でソートし、置き換える	<name2> . sort_values ( [ <val3> , <val4> ] , ascending = False , inplace = True )	<name2> = <name2> . sort_values ( [ <val3> , <val4> ] , ascending = False )
その数値データ以外の統計情報	. describe ( include = 'O' )	. describe ( include = 'O' )
列名をセットしないで <val6> データを読む	pd . read_csv ( <val6> , header = None )	pd . read_csv ( <val6> , header = None )
ビンの数を <name5> 、ビンの名前をリスト <name6> として表 <name1> の列 <val3> を分割した結果を <name4> とする	<name4> = pd . cut ( <name1> [ <val3> ] , <name5> , label = <name6> )	<name4> = pd . cut ( <name1> [ <val3> ] , <name5> , label = <name6> )
<val3> から <val5> に <name1> 表の列の名前を変更した結果を <name1> に代入する	<name1> = <name1> . rename ( columns = { <val3> : <val5> } )	<name1> = <name1> . rename ( columns = { <val3> : <val5> } )
ある行を <name4> 上の未記入の値が消した結果を再代入する	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
重複している最後の行を残して表 <name6> 中の重複している行を削除された結果を <name3> とする	<name3> = <name6> . drop_duplicates ( keep = False )	<name3> = <name6> . drop_duplicates ( keep = False )
昇順に <name1> 全体を <val4> でソートした結果を <name1> とする	<name1> = <name1> . sort_values ( <val4> )	<name1> = <name1> . sort_values ( <val4> )
<val1> に表 <name4> のインデックス <val5> の名前をリネームし、 <name4> に代入する	<name4> = <name4> . rename ( index = { <val5> : <val1> } )	<name4> = <name4> . rename ( index = { <val5> : <val1> } )
<val3> という名前のエクセルファイルの全てのシートをデータフレームとして読まれた結果を <name4> にする	<name4> = pd . read_excel ( <val3> , sheet_name = None )	<name4> = pd . read_excel ( <val3> , sheet_name = None )
<name6> 表内で重複した行の数の合計	<name6> . duplicated ( ) . sum ( )	<name6> . duplicated ( ) . sum ( )
表 <name6> 中のコラム <val1> の重複した行をドロップした結果で置き換える	<name6> . drop_duplicates ( subset = <val1> , inplace = True )	<name6> = <name6> . drop_duplicates ( subset = <val1> )
<name2> 表中の未記入の値を <name6> に置き換えた結果を再代入する	<name2> = <name2> . fillna ( <name6> )	<name2> = <name2> . fillna ( <name6> )
<name4> 表の欠損がある行を削除して、インプレースする	<name4> . dropna ( inplace = True )	<name4> . dropna ( inplace = True )
表 <name4> の中の欠損を表 <name4> の平均値で埋め、置き換える	<name4> . fillna ( <name4> . mean ( ) , inplace = True )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
ある行を表 <name3> の中の未入力の値が落とした結果を再代入する	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
<name5> 表中の <val6> コラムと <val2> カラムに重複はあるのかどうかを表示する	<name5> . duplicated ( subset = [ <val6> , <val2> ] )	<name5> . duplicated ( subset = [ <val6> , <val2> ] )
<name6> 表の <val1> を未入力の値に置き換え未入力の値がある行を取り除かれた結果を <name6> にする	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
マーカーの形のエッジの色を黄色とする	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
<name3> 表の未入力の値を直前の行の値で補う	<name3> . fillna ( method = 'ffill' )	<name3> . fillna ( method = 'ffill' )
<name6> と <name1> のグラフを RGBc で表示する	plt . plot ( <name6> , <name1> , color = c )	plt . plot ( <name6> , <name1> , color = c )
表 <name6> の中の未入力の値を <name1> に置換し、書き換える	<name6> . fillna ( <name1> , inplace = True )	<name6> . fillna ( <name1> , inplace = True )
<name4> のインデックスを振り直して、元のインデックスを削除する	<name4> . reset_index ( drop = True )	<name4> . reset_index ( drop = True )
<name2> 表中のダブっているデータ	<name2> [ <name2> . duplicated ( ) ]	<name2> [ <name2> . duplicated ( ) ]
<name2> 表と <name1> 表を左側のデータのインデックスと <val5> カラムをキーとしてマージする	pd . merge ( <name2> , <name1> , left_index = True , right_on = <val5> )	pd . merge ( <name2> , <name1> , left_index = True , right_on = <val5> )
<name3> 表上の NaN の和	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
<name6> 中の <val3> に重複がある行を削除された結果で書き換える	<name6> . drop_duplicates ( subset = <val3> , inplace = True )	<name6> . drop_duplicates ( subset = <val3> , inplace = True )
<name1> 内の <val4> に重複はあるのかどうかを調べる	<name1> . duplicated ( subset = <val4> )	<name1> . duplicated ( subset = <val4> )
存在する <val4> を <name5> の中に欠損にされた結果で置き換える	<name5> . replace ( <val4> , np . nan , inplace = True )	<name5> = <name5> . replace ( <val4> , np . nan )
データ <val4> に表 <name5> をセットして出力する	<name5> . to_csv ( <val4> )	<name5> . to_csv ( <val4> )
ピボット操作で表 <name3> の列に行を入れ替える	<name3> . unstack ( )	<name3> . unstack ( )
表 <name1> 中の未記入の値を直前の行の値で埋め、 <name2> にする	<name2> = <name1> . fillna ( method = 'ffill' )	<name2> = <name1> . fillna ( method = 'ffill' )
<name4> 表の <val3> コラムと <val6> カラムに重複があるのかどうか検出	<name4> . duplicated ( subset = [ <val3> , <val6> ] )	<name4> . duplicated ( subset = [ <val3> , <val6> ] )
<name6> 表内の <val3> を NaN に置換し NaN が存在する行を消した結果で置き換える	<name6> . replace ( <val3> , np . nan ) . dropna ( inplace = True )	<name6> = <name6> . replace ( <val3> , np . nan ) . dropna ( )
表 <name5> 上の NaN を表 <name5> の平均をとって補って、 <name3> にする	<name3> = <name5> . fillna ( <name5> . mean ( ) )	<name3> = <name5> . fillna ( <name5> . mean ( ) )
<name1> の <val3> をインデックスとしてセットした結果を <name5> にする	<name5> = <name1> . set_index ( <val3> )	<name5> = <name1> . set_index ( <val3> )
表 <name4> の中の欠損を含む行を削除して、 <name4> にする	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name4> のカラム名を <val2> から <val5> に変更した結果を再代入する	<name4> = <name4> . rename ( columns = { <val2> : <val5> } )	<name4> = <name4> . rename ( columns = { <val2> : <val5> } )
重複した最後の行を残して <name6> 表中の重複している行をドロップされた結果を再代入する	<name6> = <name6> . drop_duplicates ( keep = False )	<name6> = <name6> . drop_duplicates ( keep = False )
エクセルファイル <val5> の全てのシートを読み込み、表データにして、 <name1> に代入する	<name1> = pd . read_excel ( <val5> , sheet_name = None )	<name1> = pd . read_excel ( <val5> , sheet_name = None )
表 <name2> の列 <val5> の曜日を表示する	<name2> [ <val5> ] . dt . weekday_name	<name2> [ <val5> ] . dt . weekday_name
<val3> というファイル名でエクセルに表 <name5> を書き出す	<name5> . to_excel ( <val3> )	<name5> . to_excel ( <val3> )
<name3> 表にある <val2> を未入力の値で埋め、 <name3> にする	<name3> = <name3> . replace ( <val2> , np . nan )	<name3> = <name3> . replace ( <val2> , np . nan )
<name5> の <val4> をインデックスとしてする	<name5> . set_index ( <val4> )	<name5> . set_index ( <val4> )
マーカーの形を五芒星とする	marker = '*'	marker = '*'
エクセルファイル <val1> の <val2> 番目のシートを読み込んでデータフレームにする	pd . read_excel ( <val1> , sheet_name = <val2> )	pd . read_excel ( <val1> , sheet_name = <val2> )
要素の数が等しくなるように区間を <name1> として表 <name6> の列 <val5> を分割する	pd . qcut ( <name6> [ <val5> ] , <name1> )	pd . qcut ( <name6> [ <val5> ] , <name1> )
<name5> 表の <val1> を欠損値で埋めて、再代入する	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
列番号 <val5> をインデックスと設定して、 <val3> データをデータフレームとして読み、 <name6> とする	<name6> = pd . read_csv ( <val3> , index_col = <val5> )	<name6> = pd . read_csv ( <val3> , index_col = <val5> )
一番左の列をインデックスとして、データ <val2> をデータフレームとして読み込む	pd . read_csv ( <val2> , index_col = 0 )	pd . read_csv ( <val2> , index_col = 0 )
<name1> のカラム名を <val4> から <val3> にリネームして、 <name1> とする	<name1> = <name1> . rename ( columns = { <val4> : <val3> } )	<name1> = <name1> . rename ( columns = { <val4> : <val3> } )
<name1> 内の欠損値を <name4> で置き換える	<name1> . fillna ( <name4> )	<name1> . fillna ( <name4> )
横 <val2> 縦 <val5> に出力するグラフのサイズをする	plt . figure ( figsize = ( <val2> , <val5> ) )	plt . figure ( figsize = ( <val2> , <val5> ) )
目印のエッジサイズは <val6> を適用する	markeredgewidth = <val6>	markeredgewidth = <val6>
<name4> 中に重複があるのかどうか判定を見る	<name4> . duplicated ( )	<name4> . duplicated ( )
表 <name1> 全体をカラム <val2> を元に昇順でソートした結果を <name1> にする	<name1> = <name1> . sort_values ( <val2> )	<name1> = <name1> . sort_values ( <val2> )
<name5> 表のカラム名を <val4> から <val6> に変え、置き換える	<name5> = <name5> . rename ( columns = { <val4> : <val6> } )	<name5> = <name5> . rename ( columns = { <val4> : <val6> } )
データ <val4> を表データとして読み込んだ結果を <name1> に代入する	<name1> = pd . read_csv ( <val4> )	<name1> = pd . read_csv ( <val4> )
マーカーの形を円とする	marker = 'o'	marker = 'o'
<val5> 列目までを見れるように設定する	pd . set_option ( 'display.max_columns' , <val5> )	pd . set_option ( 'display.max_columns' , <val5> )
シフト JIS に文字コードをする	encoding = 'shift_jis'	encoding = 'shift_jis'
表をデータ <val4> からタブ区切りで読む	pd . read_csv ( <val4> , sep = '\t' )	pd . read_csv ( <val4> , sep = '\t' )
<name6> 内に存在する <val4> を NaN にした結果を <name6> とする	<name6> = <name6> . replace ( <val4> , np . nan )	<name6> = <name6> . replace ( <val4> , np . nan )
<name4> 表を <val2> 列と <val1> カラムを軸に値が大きい順でソートした結果を <name6> にする	<name6> = <name4> . sort_values ( [ <val2> , <val1> ] , ascending = False )	<name6> = <name4> . sort_values ( [ <val2> , <val1> ] , ascending = False )
<name2> の中の未記入の値を落とした結果を <name2> にする	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name2> 表の元々あったインデックスをリセットし、 <name3> とする	<name3> = <name2> . reset_index ( drop = True )	<name3> = <name2> . reset_index ( drop = True )
表 <name2> 全体を列 <val1> とカラム <val4> で降順にソートされた結果を <name2> に代入する	<name2> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )
透過度を <val4> に変更する	alpha = <val4>	alpha = <val4>
ある <val4> を <name6> 表に未入力の値で埋めて、 <name2> にする	<name2> = <name6> . replace ( <val4> , np . nan )	<name2> = <name6> . replace ( <val4> , np . nan )
<name3> 表中の重複した行をドロップする	<name3> . drop_duplicates ( )	<name3> . drop_duplicates ( )
表 <name1> のインデックスをリセットセットして、元のインデックスを削除された結果で書き換える	<name1> . reset_index ( drop = True , inplace = True )	<name1> . reset_index ( drop = True , inplace = True )
<name5> 内の欠損値を <name6> で置き換え、置き換える	<name5> . fillna ( <name6> , inplace = True )	<name5> = <name5> . fillna ( <name6> )
<name4> 中の未記入の値を <name6> に置き換えて、 <name2> にする	<name2> = <name4> . fillna ( <name6> )	<name2> = <name4> . fillna ( <name6> )
表 <name5> の重複要素がある行を取り除いた結果を再代入する	<name5> = <name5> . drop_duplicates ( )	<name5> = <name5> . drop_duplicates ( )
ダブっている最後の行を残して <name4> の重複している行を取り除き、 <name6> とする	<name6> = <name4> . drop_duplicates ( keep = False )	<name6> = <name4> . drop_duplicates ( keep = False )
CSV データ <val1> をデータフレームとして読み込み、 <name6> とする	<name6> = pd . read_csv ( <val1> )	<name6> = pd . read_csv ( <val1> )
グラフの y 軸に <val4> という軸の名前を付与する	plt . ylabel ( <val4> )	plt . ylabel ( <val4> )
表 <name6> の中の <val1> を欠損に置換し欠損が存在する行を削除した結果を <name6> に代入する	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
マーカーの形のエッジの色を赤紫色とする	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
表 <name6> をカラム <val3> で昇順にソートして、インプレースする	<name6> . sort_values ( <val3> , inplace = True )	<name6> . sort_values ( <val3> , inplace = True )
<name5> 表の <val2> 列の年を <name6> にする	<name6> = <name5> [ <val2> ] . dt . year	<name6> = <name5> [ <val2> ] . dt . year
<val1> からデータフレームをカンマ区切りで読み込み、 <name5> に代入する	<name5> = pd . read_csv ( <val1> , sep = ',' )	<name5> = pd . read_csv ( <val1> , sep = ',' )
<name5> 表の <val4> コラムの名前を <val6> に <val3> に <val1> コラムの名前をリネームして、 <name2> に代入する	<name2> = <name5> . rename ( columns = { <val4> : <val6> , <val1> : <val3> } )	<name2> = <name5> . rename ( columns = { <val4> : <val6> , <val1> : <val3> } )
表 <name4> 上の欠損値が含まれる部分を色付けする	<name4> . style . highlight_null ( )	<name4> . style . highlight_null ( )
表 <name6> をインデックスに基づいて昇順でソートして、インプレースする	<name6> . sort_index ( inplace = True )	<name6> . sort_index ( inplace = True )
表 <name5> の欠損値がある行をドロップし、置き換える	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
目印の色は黄色を適用する	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
<val1> から <val4> に表 <name6> の列名を変えられた結果を <name6> に代入する	<name6> = <name6> . rename ( columns = { <val1> : <val4> } )	<name6> = <name6> . rename ( columns = { <val1> : <val4> } )
y 軸を <name6> とした <name3> の横方向の棒グラフを出力する	plt . barh ( <name6> , <name3> )	plt . barh ( <name6> , <name3> )
<name2> 表の中の欠損を <name2> 表の平均をとって埋め、 <name2> に代入する	<name2> = <name2> . fillna ( <name2> . mean ( ) )	<name2> = <name2> . fillna ( <name2> . mean ( ) )
<name4> をインデックスで小さい順に並び替え、 <name3> とする	<name3> = <name4> . sort_index ( )	<name3> = <name4> . sort_index ( )
表 <name3> のコラム <val5> についての要約統計量	<name3> [ <val5> ] . describe ( )	<name3> [ <val5> ] . describe ( )
表 <name1> の中にある <val6> を未記入の値で置き換えられた結果を <name1> とする	<name1> = <name1> . replace ( <val6> , np . nan )	<name1> = <name1> . replace ( <val6> , np . nan )
<name1> 表の <val5> コラムのダブっている行を取り除いて、再代入する	<name1> = <name1> . drop_duplicates ( subset = <val5> )	<name1> = <name1> . drop_duplicates ( subset = <val5> )
<name3> 中の重複要素がある行をドロップした結果で置き換える	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
マーカーの形状のエッジの色は青色を使用する	markeredgecolor = 'blue'	markeredgecolor = 'blue'
表 <name1> の中の欠損を <name3> に置き換え、 <name1> とする	<name1> = <name1> . fillna ( <name3> )	<name1> = <name1> . fillna ( <name3> )
<name3> をエクセルファイル <val5> という名前にセットして入れる	<name3> . to_excel ( <val5> )	<name3> . to_excel ( <val5> )
<name3> の <val1> をビンを <name2> 、ビンのラベルをインデックスとして分割し、 <name5> にする	<name5> = pd . cut ( <name3> [ <val1> ] , <name2> , label = False )	<name5> = pd . cut ( <name3> [ <val1> ] , <name2> , label = False )
<name2> 表の列名を <val3> から <val5> に変更し、再代入する	<name2> = <name2> . rename ( columns = { <val3> : <val5> } )	<name2> = <name2> . rename ( columns = { <val3> : <val5> } )
丸の打点を使う	marker = 'o'	marker = 'o'
重複している最後の行を残して <name6> 表内の重複している行を削除した結果で書き換える	<name6> . drop_duplicates ( keep = False , inplace = True )	<name6> . drop_duplicates ( keep = False , inplace = True )
インデックスを元に <name3> 全体を小さい順でソートする	<name3> . sort_index ( )	<name3> . sort_index ( )
グラフの種類は六角ビニング図を用いる	kind = 'hexbin'	kind = 'hexbin'
<name5> 内の欠損を <name6> で置き換えて、 <name5> に代入する	<name5> = <name5> . fillna ( <name6> )	<name5> = <name5> . fillna ( <name6> )
エクセルファイル <val1> の全てのシートをデータフレームに格納し、 <name5> とする	<name5> = pd . read_excel ( <val1> , sheet_name = None )	<name5> = pd . read_excel ( <val1> , sheet_name = None )
ある <val4> を <name6> に未入力の値に置き換え、 <name3> にする	<name3> = <name6> . replace ( <val4> , np . nan )	<name3> = <name6> . replace ( <val4> , np . nan )
<name2> 内の <val4> を欠損値に置き換え欠損値が存在する行をドロップした結果で置き換える	<name2> = <name2> . replace ( <val4> , np . nan ) . dropna ( )	<name2> = <name2> . replace ( <val4> , np . nan ) . dropna ( )
<name3> をインデックス通りに昇順でソートし、 <name2> とする	<name2> = <name3> . sort_index ( )	<name2> = <name3> . sort_index ( )
表 <name6> 中の欠損値を直前の行の値で埋められた結果で書き換える	<name6> . fillna ( method = 'ffill' , inplace = True )	<name6> . fillna ( method = 'ffill' , inplace = True )
<name1> 全体を <val5> と <val3> を元に降順でソートし、インプレースする	<name1> . sort_values ( [ <val5> , <val3> ] , ascending = False , inplace = True )	<name1> . sort_values ( [ <val5> , <val3> ] , ascending = False , inplace = True )
<name1> 表内の重複要素がある行を消した結果で書き換える	<name1> . drop_duplicates ( inplace = True )	<name1> . drop_duplicates ( inplace = True )
<name4> 表中に重複はあるか確認	<name4> . duplicated ( )	<name4> . duplicated ( )
区関数を <name3> 、ビンの名前を整数値として <name5> の <val2> を分割し、 <name6> にする	<name6> = pd . cut ( <name5> [ <val2> ] , <name3> , label = False )	<name6> = pd . cut ( <name5> [ <val2> ] , <name3> , label = False )
表 <name4> をインデックスで値が小さい順に並び替え、インプレースする	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
列番号 <val6> をインデックスとして <val5> データから表データを読み込んで、 <name3> とする	<name3> = pd . read_csv ( <val5> , index_col = <val6> )	<name3> = pd . read_csv ( <val5> , index_col = <val6> )
<name5> をエクセルファイル <val6> に入れる	<name5> . to_excel ( <val6> )	<name5> . to_excel ( <val6> )
表 <name4> の <val6> 行目をドロップし、置き換える	<name4> = <name4> . drop ( <val6> )	<name4> = <name4> . drop ( <val6> )
エクセルファイル <val3> を読み込み、表データとした結果を <name4> にする	<name4> = pd . read_excel ( <val3> )	<name4> = pd . read_excel ( <val3> )
表 <name3> の <val6> を NaN として、置き換える	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
<val5> データをデータフレームに格納された結果を <name2> に代入する	<name2> = pd . read_csv ( <val5> )	<name2> = pd . read_csv ( <val5> )
CSV データ <val3> を表としてカンマ区切りで読み込む	pd . read_csv ( <val3> , sep = ',' )	pd . read_csv ( <val3> , sep = ',' )
<name6> 表内に存在する <val2> を欠損とする	<name6> . replace ( <val2> , np . nan )	<name6> . replace ( <val2> , np . nan )
<name1> 内の <val3> の重複している行を削除する	<name1> . drop_duplicates ( subset = <val3> )	<name1> . drop_duplicates ( subset = <val3> )
<name5> 表の <val1> 列を区間を <name6> 、ビンの名前を <name2> リストとして分割し、 <name4> に代入する	<name4> = pd . cut ( <name5> [ <val1> ] , <name6> , label = <name2> )	<name4> = pd . cut ( <name5> [ <val1> ] , <name6> , label = <name2> )
昇順に <name2> を <val6> でソートした結果でインプレースする	<name2> . sort_values ( <val6> , inplace = True )	<name2> . sort_values ( <val6> , inplace = True )
<val6> からデータフレームで読む	pd . read_csv ( <val6> )	pd . read_csv ( <val6> )
<name6> 表内の <val1> を NaN に置き換え NaN が存在する行を消し、再代入する	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
描画したプロットを <val6> という名前で保存する	plt . savefig ( <val6> )	plt . savefig ( <val6> )
ビンの数を <name3> 、ビンのラベルをインデックスとして表 <name4> の列 <val1> を分割する	pd . cut ( <name4> [ <val1> ] , <name3> , label = False )	pd . cut ( <name4> [ <val1> ] , <name3> , label = False )
<name6> の中のカテゴリ変数を one - hot 表現にして、 <name1> に代入する	<name1> = pd . get_dummies ( <name6> )	<name1> = pd . get_dummies ( <name6> )
<name1> 内の <val2> を欠損値に置換し欠損値が存在する行をドロップする	<name1> . replace ( <val2> , np . nan ) . dropna ( )	<name1> . replace ( <val2> , np . nan ) . dropna ( )
表 <name3> の列 <val4> を四分位数ごとで分割した結果を <name6> にする	<name6> = pd . qcut ( <name3> [ <val4> ] , 4 )	<name6> = pd . qcut ( <name3> [ <val4> ] , 4 )
列名をなしで <val5> を読み込む	pd . read_csv ( <val5> , header = None )	pd . read_csv ( <val5> , header = None )
<name6> の <val3> のユニークな要素の個数	<name6> [ <val3> ] . nunique ( )	<name6> [ <val3> ] . nunique ( )
<name2> 表の <val5> 列の月	<name2> [ <val5> ] . dt . month	<name2> [ <val5> ] . dt . month
表 <name1> 上のダブる行を落とし、 <name1> にする	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
<name3> を <val6> と <val5> を元に値が大きい順でソートした結果を再代入する	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )
エクセルファイル <val5> の <val4> を読み込み、 <name1> にする	<name1> = pd . read_excel ( <val5> , sheet_name = <val4> )	<name1> = pd . read_excel ( <val5> , sheet_name = <val4> )
<name5> 内のカテゴリ変数をダミー変数化する	pd . get_dummies ( <name5> )	pd . get_dummies ( <name5> )
<name5> 表内の欠損値を <name1> で埋められた結果を再代入する	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
<name6> の中の未記入の値を <name1> とし、 <name3> とする	<name3> = <name6> . fillna ( <name1> )	<name3> = <name6> . fillna ( <name1> )
エクセルファイル <val1> の <val2> 番目のシートから表を読み、 <name4> とする	<name4> = pd . read_excel ( <val1> , sheet_name = <val2> )	<name4> = pd . read_excel ( <val1> , sheet_name = <val2> )
<name3> 表をインデックスを元にソートする	<name3> . sort_index ( )	<name3> . sort_index ( )
<name1> 中の欠損を <name6> で埋めた結果でインプレースする	<name1> . fillna ( <name6> , inplace = True )	<name1> . fillna ( <name6> , inplace = True )
表 <name2> 内の欠損値を <name4> で置き換えた結果で置き換える	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
x 座標の軸の名前を <val4> にセットする	plt . xlabel ( <val4> )	plt . xlabel ( <val4> )
<val2> から <val6> に表 <name1> のカラム名をリネームされた結果で置き換える	<name1> = <name1> . rename ( columns = { <val2> : <val6> } )	<name1> = <name1> . rename ( columns = { <val2> : <val6> } )
<name2> 表の中の重複要素がある行を取り除いた結果で書き換える	<name2> . drop_duplicates ( inplace = True )	<name2> . drop_duplicates ( inplace = True )
<name2> の <val4> を NaN に置換した結果を <name1> にする	<name1> = <name2> . replace ( <val4> , np . nan )	<name1> = <name2> . replace ( <val4> , np . nan )
表 <name1> の <val4> を NaN で置換して、置き換える	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> = <name1> . replace ( <val4> , np . nan )
<name3> のインデックスをリセットし、 <name3> に代入する	<name3> = <name3> . reset_index ( )	<name3> = <name3> . reset_index ( )
表 <name2> の <val3> を欠損で置換した結果を <name2> にする	<name2> = <name2> . replace ( <val3> , np . nan )	<name2> = <name2> . replace ( <val3> , np . nan )
エクセルファイル <val2> の <val6> 番目のシートを表データに格納した結果を <name4> に代入する	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )
<name6> の <val4> をビンを <name2> 、ビンのラベルをインデックスとして分割された結果を <name3> にする	<name3> = pd . cut ( <name6> [ <val4> ] , <name2> , label = False )	<name3> = pd . cut ( <name6> [ <val4> ] , <name2> , label = False )
<name4> の <val3> のダブっている行を取り除いた結果を <name4> とする	<name4> = <name4> . drop_duplicates ( subset = <val3> )	<name4> = <name4> . drop_duplicates ( subset = <val3> )
最大カラム数を <val2> に指定する	pd . set_option ( 'display.max_columns' , <val2> )	pd . set_option ( 'display.max_columns' , <val2> )
<name4> の <val5> についての分散	<name4> [ <val5> ] . var ( )	<name4> [ <val5> ] . var ( )
Y の縦向き棒グラフを横軸を <name5> としてプロットする	plt . bar ( <name5> , Y )	plt . barh ( <name5> , Y )
<name5> の <val2> についての標準偏差をチェックする	<name5> [ <val2> ] . std ( )	<name5> [ <val2> ] . std ( )
<name3> 表の <val6> コラムについての分散を確認する	<name3> [ <val6> ] . var ( )	<name3> [ <val6> ] . var ( )
表 <name2> のコラム <val6> をインデックスにして、 <name4> とする	<name4> = <name2> . set_index ( <val6> )	<name4> = <name2> . set_index ( <val6> )
<name1> 表内の重複要素がある行を削除された結果でインプレースする	<name1> . drop_duplicates ( inplace = True )	<name1> . drop_duplicates ( inplace = True )
マーカーの種類の色は青を使う	markerfacecolor = 'blue'	markerfacecolor = 'blue'
データフレームとして <val2> データをカンマ区切りで読み込まれた結果を <name5> に代入する	<name5> = pd . read_csv ( <val2> , sep = ',' )	<name5> = pd . read_csv ( <val2> , sep = ',' )
<name1> 表の <val5> を NaN とされた結果で置き換える	<name1> . replace ( <val5> , np . nan , inplace = True )	<name1> = <name1> . replace ( <val5> , np . nan )
<name4> 内の欠損を <name3> とする	<name4> . fillna ( <name3> )	<name4> . fillna ( <name3> )
<name6> の <val5> を未入力の値で補い、 <name6> に代入する	<name6> = <name6> . replace ( <val5> , np . nan )	<name6> = <name6> . replace ( <val5> , np . nan )
<name3> 内のカテゴリ変数を one - hot 表現にされた結果を <name1> とする	<name1> = pd . get_dummies ( <name3> )	<name1> = pd . get_dummies ( <name3> )
打点の色は赤紫を適用する	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
打点を白丸とする	marker = 'o'	marker = 'o'
<val1> 列と <val5> カラムで <name2> 表を降順にソートされた結果で置き換える	<name2> = <name2> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val5> ] , ascending = False )
表 <name1> の列 <val5> をビンに含まれる個数が等しくなるようにビンの数を <name4> として分割して、 <name2> にする	<name2> = pd . qcut ( <name1> [ <val5> ] , <name4> )	<name2> = pd . qcut ( <name1> [ <val5> ] , <name4> )
<val6> から <val1> に <name2> 表のカラム名を変え、 <name2> とする	<name2> = <name2> . rename ( columns = { <val6> : <val1> } )	<name2> = <name2> . rename ( columns = { <val6> : <val1> } )
インデックスを元に <name3> をソートして、再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name4> の中のカラムにある <val5> の個数を調べる	<name4> . isin ( [ <val5> ] ) . sum ( )	<name4> . isin ( [ <val5> ] ) . sum ( )
<name6> 表の中の欠損がある行を落とし、 <name6> に代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name2> 表中に重複があるのか検出する	<name2> . duplicated ( )	<name2> . duplicated ( )
<name3> 表内の <val1> を欠損値に置換し欠損値が存在する行をドロップされた結果を <name3> に代入する	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )
<name3> 表の下 5 行	<name3> . tail ( )	<name3> . tail ( )
<name3> の未入力の値を <name3> の平均で補って、 <name2> とする	<name2> = <name3> . fillna ( <name3> . mean ( ) )	<name2> = <name3> . fillna ( <name3> . mean ( ) )
<val4> に最大行数を指定する	pd . set_option ( 'display.max_rows' , <val4> )	pd . set_option ( 'display.max_rows' , <val4> )
<name6> 表内の重複している行を削除し、置き換える	<name6> . drop_duplicates ( inplace = True )	<name6> = <name6> . drop_duplicates ( )
線グラフの色を赤色とする	color = 'red'	color = 'red'
表 <name1> 中に存在する <val3> を欠損値で置換し、再代入する	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
<name6> 表の <val5> コラムと <val1> カラムに重複があるのかどうか	<name6> . duplicated ( subset = [ <val5> , <val1> ] )	<name6> . duplicated ( subset = [ <val5> , <val1> ] )
<name6> 中の <val3> の重複している行を削除する	<name6> . drop_duplicates ( subset = <val3> )	<name6> . drop_duplicates ( subset = <val3> )
<name1> 表上の <val3> を未記入の値に置換し未記入の値がある行を落として、 <name6> に代入する	<name6> = <name1> . replace ( <val3> , np . nan ) . dropna ( )	<name6> = <name1> . replace ( <val3> , np . nan ) . dropna ( )
列番号 <val4> をインデックスと <val2> データをデータフレームに格納した結果を <name1> にする	<name1> = pd . read_csv ( <val2> , index_col = <val4> )	<name1> = pd . read_csv ( <val2> , index_col = <val4> )
<val2> から <val5> に <name4> 表の列の名前を変更された結果を <name6> にする	<name6> = <name4> . rename ( columns = { <val2> : <val5> } )	<name6> = <name4> . rename ( columns = { <val2> : <val5> } )
<name5> 表内の <val1> コラムと <val6> カラムに重複はあるのかどうか判定する	<name5> . duplicated ( subset = [ <val1> , <val6> ] )	<name5> . duplicated ( subset = [ <val1> , <val6> ] )
表 <name3> 上の NaN を表 <name3> の平均で補い、 <name5> にする	<name5> = <name3> . fillna ( <name3> . mean ( ) )	<name5> = <name3> . fillna ( <name3> . mean ( ) )
ヘッダーなしで <val2> を読み込む	pd . read_csv ( <val2> , header = None )	pd . read_csv ( <val2> , header = None )
<name2> 表の欠損を <name4> に変えた結果でインプレースする	<name2> . fillna ( <name4> , inplace = True )	<name2> . fillna ( <name4> , inplace = True )
ビンを <name1> 、ビンのラベルをインデックスとして <name3> の <val6> を分割する	pd . cut ( <name3> [ <val6> ] , <name1> , label = False )	pd . cut ( <name3> [ <val6> ] , <name1> , label = False )
ある <val4> を <name2> の中に未入力の値に置き換え、 <name1> にする	<name1> = <name2> . replace ( <val4> , np . nan )	<name1> = <name2> . replace ( <val4> , np . nan )
表 <name6> 中の欠損値を含む行をドロップし、 <name6> に代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name6> 表で重複しているデータを取得する	<name6> [ <name6> . duplicated ( ) ]	<name6> [ <name6> . duplicated ( ) ]
<name1> の中のカテゴリーを数値に変える	pd . get_dummies ( <name1> )	pd . get_dummies ( <name1> )
<val6> と <val2> を元に <name3> 全体を降順でソートした結果を <name3> にする	<name3> = <name3> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val6> , <val2> ] , ascending = False )
表 <name5> の中のコラム <val1> のダブっている行を取り除き、 <name5> にする	<name5> = <name5> . drop_duplicates ( subset = <val1> )	<name5> = <name5> . drop_duplicates ( subset = <val1> )
<name3> 表の中にある <val1> を未入力の値で置き換える	<name3> . replace ( <val1> , np . nan )	<name3> . replace ( <val1> , np . nan )
先頭の列をインデックスと設定して、データ <val4> をデータフレームとして読んで、 <name5> とする	<name5> = pd . read_csv ( <val4> , index_col = 0 )	<name5> = pd . read_csv ( <val4> , index_col = 0 )
横軸の軸名を <val3> にセットする	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
<name3> の <val5> と <val4> と <val6> と <val1> を選び、	<name3> [ [ <val5> , <val4> , <val6> , <val1> ] ] .	<name3> [ [ <val5> , <val4> , <val1> ] ] .
グラフの種類は積み上げを用いる	stacked = True	kind = 'density'
<name6> のカラム名を <val4> から <val3> に変更して、再代入する	<name6> = <name6> . rename ( columns = { <val4> : <val3> } )	<name6> = <name6> . rename ( columns = { <val4> : <val3> } )
表 <name5> の列の名前を <val2> から <val3> に <val1> から <val6> にリネームし、 <name5> にする	<name5> = <name5> . rename ( columns = { <val1> : <val6> , <val2> : <val3> } )	<name5> = <name5> . rename ( columns = { <val2> : <val3> , <val2> : <val6> } )
<val3> と <val5> が逆順になるように <name1> 全体をソートされた結果を <name1> に代入する	<name1> = <name1> . sort_values ( [ <val3> , <val5> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val3> , <val5> ] , ascending = False )
<name3> 表内の NaN を直前の行の値で埋めて、置き換える	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
表 <name6> を <val3> という名前のエクセルファイルとして保存する	<name6> . to_excel ( <val3> )	<name6> . to_excel ( <val3> )
<name6> のカラム名を <val5> から <val2> に <val4> から <val3> にリネームする	<name6> . rename ( columns = { <val4> : <val3> , <val5> : <val2> } )	<name6> . rename ( columns = { <val5> : <val2> , <val5> : <val2> } )
<name2> 表上の NaN を <name4> とした結果で書き換える	<name2> . fillna ( <name4> , inplace = True )	<name2> . fillna ( <name4> , inplace = True )
<name5> 内の <val2> を NaN に変え NaN が存在する行を消し、 <name1> に代入する	<name1> = <name5> . replace ( <val2> , np . nan ) . dropna ( )	<name1> = <name5> . replace ( <val2> , np . nan ) . dropna ( )
表 <name1> 中の重複要素がある行を落として、インプレースする	<name1> . drop_duplicates ( inplace = True )	<name1> . drop_duplicates ( inplace = True )
<name4> 表上の NaN がある行を消して、置き換える	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name5> 内に存在する <val3> を欠損値に置換して、書き換える	<name5> . replace ( <val3> , np . nan , inplace = True )	<name5> . replace ( <val3> , np . nan , inplace = True )
ダブる最後の行を残して <name6> 表の中の重複している行を落とされた結果を <name6> とする	<name6> = <name6> . drop_duplicates ( keep = False )	<name6> = <name6> . drop_duplicates ( keep = False )
<name3> の中の <val1> を未記入の値に置き換え未記入の値がある行を落とす	<name3> . replace ( <val1> , np . nan ) . dropna ( )	<name3> . replace ( <val1> , np . nan ) . dropna ( )
<val3> という名前で作画したグラフをセーブする	plt . savefig ( <val3> )	plt . savefig ( <val3> )
昇順に <name4> 表を <val5> カラムでソートして、 <name4> とする	<name4> = <name4> . sort_values ( <val5> )	<name4> = <name4> . sort_values ( <val5> )
<name5> の <val1> を抽出し、	<name5> [ <val1> ] .	<name5> [ <val1> ] .
<name4> 表の欠損が存在する行を取り除いて、再代入する	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name6> 表の中の欠損を含む行を削除して、 <name5> にする	<name5> = <name6> . dropna ( )	<name5> = <name6> . dropna ( )
<name4> 中の欠損値の合計を見る	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
エクセルファイル <val3> のシート名 <val1> から読み込んだ結果を <name6> とする	<name6> = pd . read_excel ( <val3> , sheet_name = <val1> )	<name6> = pd . read_excel ( <val3> , sheet_name = <val1> )
<name2> 中の欠損値を <name4> に置換した結果を <name2> に代入する	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
<name3> 表をインデックスで並び替えた結果を <name6> に代入する	<name6> = <name3> . sort_index ( )	<name6> = <name3> . sort_index ( )
<val5> 行に最大行数をセットする	pd . set_option ( 'display.max_rows' , <val5> )	pd . set_option ( 'display.max_rows' , <val5> )
ビンの数を <val4> として <name2> の柱状グラフを描写する	plt . hist ( <name2> , bins = <val4> )	plt . hist ( <name2> , bins = <val4> )
表 <name3> 上のコラム <val1> に重複がある行を消し、書き換える	<name3> . drop_duplicates ( subset = <val1> , inplace = True )	<name3> . drop_duplicates ( subset = <val1> , inplace = True )
<name4> 表の列の名前を <val1> から <val3> に <val6> から <val5> にリネームし、書き換える	<name4> . rename ( columns = { <val1> : <val3> , <val6> : <val5> } , inplace = True )	<name4> . rename ( columns = { <val1> : <val3> , <val6> : <val5> } , inplace = True )
<val4> 列と <val1> カラムを軸に <name3> 表を降順でソートする	<name3> . sort_values ( [ <val4> , <val1> ] , ascending = False )	<name3> . sort_values ( [ <val4> , <val1> ] , ascending = False )
先頭の列をインデックスと設定して、データ <val3> を表データとして読んで、 <name4> に代入する	<name4> = pd . read_csv ( <val3> , index_col = 0 )	<name4> = pd . read_csv ( <val3> , index_col = 0 )
<name5> 表中の欠損値を <name3> で埋められた結果を <name5> とする	<name5> = <name5> . fillna ( <name3> )	<name5> = <name5> . fillna ( <name3> )
<val6> に <name4> を基づいて昇順でソートした結果を <name4> に代入する	<name4> = <name4> . sort_values ( <val6> )	<name4> = <name4> . sort_values ( <val6> )
<name5> 中の未記入の値を <name1> で置き換えられた結果を再代入する	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
メモリをグラフに追加する	plt . grid ( True )	plt . grid ( True )
左側の表データに合わせて表 <name1> と表 <name4> をマージする	pd . merge ( <name1> , <name4> , how = 'left' )	pd . merge ( <name1> , <name4> , how = 'left' )
<name5> の度数分布図を <val4> から <val2> の範囲で表示する	plt . hist ( <name5> , range = ( <val4> , <val2> ) )	plt . hist ( <name5> , range = ( <val4> , <val2> ) )
<name5> の中の <val1> に重複がある行を取り除いて、インプレースする	<name5> . drop_duplicates ( subset = <val1> , inplace = True )	<name5> . drop_duplicates ( subset = <val1> , inplace = True )
<val6> から <val5> に <name1> のカラム名を変え、インプレースする	<name1> . rename ( columns = { <val6> : <val5> } , inplace = True )	<name1> . rename ( columns = { <val6> : <val5> } , inplace = True )
データ <val4> から表データで読んで、 <name3> とする	<name3> = pd . read_csv ( <val4> )	<name3> = pd . read_csv ( <val4> )
打点は四角形を適用する	marker = 's'	marker = 's'
<name2> の中の欠損を削除した結果を <name2> にする	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name2> 全体を <val5> と <val4> が逆順になるようにソートした結果を <name3> とする	<name3> = <name2> . sort_values ( [ <val5> , <val4> ] , ascending = False )	<name3> = <name2> . sort_values ( [ <val5> , <val4> ] , ascending = False )
<name3> の未記入の値がある行を取り除く	<name3> . dropna ( )	<name3> . dropna ( )
表 <name3> 中に重複は存在するのか検出	<name3> . duplicated ( )	<name3> . duplicated ( )
<name4> 内の <val1> の重複している行を削除して、 <name4> に代入する	<name4> = <name4> . drop_duplicates ( subset = <val1> )	<name4> = <name4> . drop_duplicates ( subset = <val1> )
表 <name3> 内の欠損を直前の行の値で補う	<name3> . fillna ( method = 'ffill' )	<name3> . fillna ( method = 'ffill' )
<val6> で昇順に <name1> 全体をソートして、置き換える	<name1> = <name1> . sort_values ( <val6> )	<name1> = <name1> . sort_values ( <val6> )
エクセルファイル <val6> の全てのシートを読み込み、表データにした結果を <name3> にする	<name3> = pd . read_excel ( <val6> , sheet_name = None )	<name3> = pd . read_excel ( <val6> , sheet_name = None )
線の見た目は破線を用いる	linestyle = 'dashed'	linestyle = 'dashed'
列番号 <val5> をインデックスにしてデータ <val2> から読み込んで、 <name3> に代入する	<name3> = pd . read_csv ( <val2> , index_col = <val5> )	<name3> = pd . read_csv ( <val2> , index_col = <val5> )
<val3> から <val5> に表 <name6> のインデックス名をリネームした結果を再代入する	<name6> = <name6> . rename ( index = { <val3> : <val5> } )	<name6> = <name6> . rename ( index = { <val3> : <val5> } )
<val3> カラムで <name2> 表を昇順にソートされた結果を <name2> に代入する	<name2> = <name2> . sort_values ( <val3> )	<name2> = <name2> . sort_values ( <val3> )
<name4> 内の欠損を <name4> の平均をとって埋めた結果を <name4> に代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
<name1> 表から <val4> データという名前で CSV ファイルにする	<name1> . to_csv ( <val4> )	<name1> . to_csv ( <val4> )
<val2> という名前のエクセルファイルを表として読んで、 <name1> とする	<name1> = pd . read_excel ( <val2> )	<name1> = pd . read_excel ( <val2> )
表 <name6> の中の未入力の値を含む行を取り除き、再代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name1> 内に存在する <val2> を欠損値に置換された結果でインプレースする	<name1> . replace ( <val2> , np . nan , inplace = True )	<name1> . replace ( <val2> , np . nan , inplace = True )
<name2> 表の <val5> コラムと <val1> を落とし、インプレースする	<name2> . drop ( [ <val5> , <val1> ] , axis = 1 , inplace = True )	<name2> . drop ( [ <val5> , <val1> ] , axis = 1 , inplace = True )
<name3> 内の重複した行をドロップし、置き換える	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
<val6> から表データを <val3> 区切りで読む	pd . read_csv ( <val6> , sep = <val3> )	pd . read_csv ( <val6> , sep = <val3> )
ヘッダーをセットせずに <val1> を読んで、 <name6> にする	<name6> = pd . read_csv ( <val1> , header = None )	<name6> = pd . read_csv ( <val1> , header = None )
<name5> 表中の <val2> を欠損値に置き換え欠損値が存在する行をドロップされた結果を <name6> とする	<name6> = <name5> . replace ( <val2> , np . nan ) . dropna ( )	<name6> = <name5> . replace ( <val2> , np . nan ) . dropna ( )
<name1> の <val5> についての平均	<name1> [ <val5> ] . mean ( )	<name1> [ <val5> ] . mean ( )
縦棒グラフを用いる	kind = 'bar'	kind = 'bar'
グラフの <name5> 軸を <name5> とした <name6> の棒グラフを棒と棒の隙間を <val1> として描写する	plt . bar ( <name5> , <name6> , width = <val1> )	plt . bar ( <name5> , <name6> , width = <val1> )
マーカーの形をダイヤモンドとする	marker = 'D'	marker = 'D'
<name5> の <val1> をドロップして、再代入する	<name5> = <name5> . drop ( <val1> , axis = 1 )	<name5> = <name5> . drop ( <val1> , axis = 1 )
グラフフォントを日本語表示に変更する	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
<name4> の <val2> に重複がある行を取り除き、 <name3> とする	<name3> = <name4> . drop_duplicates ( subset = <val2> )	<name3> = <name4> . drop_duplicates ( subset = <val2> )
設定して横向きの棒グラフを棒の位置を中心にプロットする	plt . barh ( y , x , align = 'center' )	plt . barh ( y , x , align = 'center' )
目印の色は黄緑を適用する	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
<name6> 表の未記入の値を <name5> に変えた結果を再代入する	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
<name3> をエクセルファイル <val2> に書き出す	<name3> . to_excel ( <val2> )	<name3> . to_excel ( <val2> )
<name5> を <val6> を元に昇順でソートした結果を <name5> に代入する	<name5> = <name5> . sort_values ( <val6> )	<name5> = <name5> . sort_values ( <val6> )
マーカーの形状のエッジの色を黄色とする	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
作成したプロットを <val2> として保存する	plt . savefig ( <val2> )	plt . savefig ( <val2> )
表 <name2> の中の未記入の値を <name1> で置き換えた結果を <name6> にする	<name6> = <name2> . fillna ( <name1> )	<name6> = <name2> . fillna ( <name1> )
<name2> 表内に存在する <val1> を NaN で置換して、 <name3> とする	<name3> = <name2> . replace ( <val1> , np . nan )	<name3> = <name2> . replace ( <val1> , np . nan )
<name6> 表内の <val3> コラムと <val5> カラムに重複があるのかどうか	<name6> . duplicated ( subset = [ <val3> , <val5> ] )	<name6> . duplicated ( subset = [ <val3> , <val5> ] )
データフレームを <val2> データから読み込み、 <name6> とする	<name6> = pd . read_csv ( <val2> )	<name6> = pd . read_csv ( <val2> )
<name5> の <val2> をビン数を <name1> 、ビンのラベルを <name4> として分割する	pd . cut ( <name5> [ <val2> ] , <name1> , label = <name4> )	pd . cut ( <name5> [ <val2> ] , <name1> , label = <name4> )
<name5> 表の <val3> を欠損とした結果を <name5> に代入する	<name5> = <name5> . replace ( <val3> , np . nan )	<name5> = <name5> . replace ( <val3> , np . nan )
<name1> 上にある <val3> を NaN で置き換え、 <name6> にする	<name6> = <name1> . replace ( <val3> , np . nan )	<name6> = <name1> . replace ( <val3> , np . nan )
<name4> 表の形状を表示する	<name4> . shape	<name4> . shape
元のインデックスを削除し、 <name1> 表のインデックスをリセットして、 <name2> に代入する	<name2> = <name1> . reset_index ( drop = True )	<name2> = <name1> . reset_index ( drop = True )
CSV <val4> を表データとして読む	pd . read_csv ( <val4> )	pd . read_csv ( <val4> )
表 <name3> 内の欠損値が含まれる部分に色をつける	<name3> . style . highlight_null ( )	<name3> . style . highlight_null ( )
表 <name3> 中に重複があるのかどうか検出をチェックする	<name3> . duplicated ( )	<name3> . duplicated ( )
表 <name5> の中の未記入の値を表 <name5> の平均をとって補って、インプレースする	<name5> . fillna ( <name5> . mean ( ) , inplace = True )	<name5> . fillna ( <name5> . mean ( ) , inplace = True )
<name3> 表のカラムにある <val1> をカウントする	<name3> . isin ( [ <val1> ] ) . sum ( )	<name3> . isin ( [ <val1> ] ) . sum ( )
<name4> 表にある未入力の値の数を表示する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
<val1> データという名前で CSV データとして <name6> 表をセーブする	<name6> . to_csv ( <val1> )	<name6> . to_csv ( <val1> )
最大カラム数を <val4> にする	pd . set_option ( 'display.max_columns' , <val4> )	pd . set_option ( 'display.max_columns' , <val4> )
<val1> 番目の列をインデックスに指定して、 <val5> を読む	pd . read_csv ( <val5> , index_col = <val1> )	pd . read_csv ( <val5> , index_col = <val1> )
ビンを <name6> として <name1> 表の <val2> 列を分割する	pd . cut ( <name1> [ <val2> ] , <name6> )	pd . cut ( <name1> [ <val2> ] , <name6> )
<name4> 表の数値以外のデータを数値データにする	pd . get_dummies ( <name4> )	pd . get_dummies ( <name4> )
<name2> 表の <val3> 列を区間の数を <name5> 、ビンの名前をインデックスとして分割し、 <name6> とする	<name6> = pd . cut ( <name2> [ <val3> ] , <name5> , label = False )	<name6> = pd . cut ( <name2> [ <val3> ] , <name5> , label = False )
表 <name6> を列 <val2> とカラム <val5> を元に逆順でソートする	<name6> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name6> . sort_values ( [ <val2> , <val5> ] , ascending = False )
表 <name3> にある NaN の個数	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
<name6> 中の <val1> に重複があるのかどうか判定する	<name6> . duplicated ( subset = <val1> )	<name6> . duplicated ( subset = <val1> )
表 <name1> の中のカテゴリーを数値にし、 <name5> にする	<name5> = pd . get_dummies ( <name1> )	<name5> = pd . get_dummies ( <name1> )
列 <val4> とカラム <val5> で表 <name6> を降順にソートした結果でインプレースする	<name6> . sort_values ( [ <val4> , <val5> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val4> , <val5> ] , ascending = False , inplace = True )
<name5> 表中の <val1> コラムと <val4> カラムに重複はあるのかどうか判定を見る	<name5> . duplicated ( subset = [ <val1> , <val4> ] )	<name5> . duplicated ( subset = [ <val1> , <val4> ] )
<name6> をビン <val5> の柱状図を用いて出力する	plt . hist ( <name6> , bins = <val5> )	plt . hist ( <name6> , bins = <val5> )
ビンの数を <name3> として <name5> の <val6> をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <name5> [ <val6> ] , <name3> )	pd . qcut ( <name5> [ <val6> ] , <name3> )
<name4> の中の未入力の値の数	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
表 <name2> の重複要素がある行を取り除かれた結果を <name5> にする	<name5> = <name2> . drop_duplicates ( )	<name5> = <name2> . drop_duplicates ( )
<name5> 表の中のインデックスが <val2> の行	<name5> . loc [ <val2> ]	<name5> . loc [ <val2> ]
エクセルファイル <val1> を表にして、 <name6> に代入する	<name6> = pd . read_excel ( <val1> )	<name6> = pd . read_excel ( <val1> )
<name3> の列の名前を <val4> から <val2> に <val6> から <val1> にリネームした結果を <name3> にする	<name3> = <name3> . rename ( columns = { <val6> : <val1> , <val4> : <val2> } )	<name3> = <name3> . rename ( columns = { <val4> : <val2> , <val4> : <val1> } )
<name4> 表中の欠損値を <name5> に置換して、置き換える	<name4> = <name4> . fillna ( <name5> )	<name4> = <name4> . fillna ( <name5> )
ビンの数を <name6> 、ビンのラベルをインデックスとして表 <name2> の列 <val4> を分割して、 <name5> とする	<name5> = pd . cut ( <name2> [ <val4> ] , <name6> , label = False )	<name5> = pd . cut ( <name2> [ <val4> ] , <name6> , label = False )
カンマ区切りでデータ <val6> を読んだ結果を <name3> にする	<name3> = pd . read_csv ( <val6> , sep = ',' )	<name3> = pd . read_csv ( <val6> , sep = ',' )
<name1> 表の中の欠損を <name1> 表の平均値で埋められた結果を <name4> に代入する	<name4> = <name1> . fillna ( <name1> . mean ( ) )	<name4> = <name1> . fillna ( <name1> . mean ( ) )
表 <name5> の <val4> が <val1> 以上のデータを取得する	<name5> [ <name5> [ <val4> ] >= <val1> ]	<name5> [ <name5> [ <val4> ] < <val1> ]
<name3> 全体をインデックスを元に小さい順でソートし、再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name4> のもともとのインデックスをリセットし、 <name2> にする	<name2> = <name4> . reset_index ( drop = True )	<name2> = <name4> . reset_index ( drop = True )
<val5> という名前のエクセルファイルの <val1> を表データとして読んで、 <name4> にする	<name4> = pd . read_excel ( <val5> , sheet_name = <val1> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val1> )
<name6> 内の重複した行をドロップして、 <name5> に代入する	<name5> = <name6> . drop_duplicates ( )	<name5> = <name6> . drop_duplicates ( )
ダブっている最後の行を残して表 <name3> の重複している行を取り除く	<name3> . drop_duplicates ( keep = False )	<name3> . drop_duplicates ( keep = False )
<name5> 内の NaN を <name6> に置換した結果を <name2> とする	<name2> = <name5> . fillna ( <name6> )	<name2> = <name5> . fillna ( <name6> )
表 <name4> の中に存在する <val6> を欠損にした結果で書き換える	<name4> . replace ( <val6> , np . nan , inplace = True )	<name4> . replace ( <val6> , np . nan , inplace = True )
<name3> 表中の未記入の値を <name1> で置き換えて、 <name3> にする	<name3> = <name3> . fillna ( <name1> )	<name3> = <name3> . fillna ( <name1> )
<name3> の <val1> が <val5> もしくは <val4> のデータ	<name3> [ <name3> [ <val1> ] . isin ( [ <val5> , <val4> ] ) ]	<name3> [ <name3> [ <val1> ] < <val5> ]
エクセルファイル <val2> のシート名 <val5> を読み込み、表にされた結果を <name1> に代入する	<name1> = pd . read_excel ( <val2> , sheet_name = <val5> )	<name1> = pd . read_excel ( <val2> , sheet_name = <val5> )
<name6> 表を <val5> カラムと <val1> コラムが降順になるようにソートし、 <name3> に代入する	<name3> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )	<name3> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )
表 <name5> の列 <val1> をビンを <name2> として分割した結果を <name4> とする	<name4> = pd . cut ( <name5> [ <val1> ] , <name2> )	<name4> = pd . cut ( <name5> [ <val1> ] , <name2> )
マーカーの形の色は赤紫色を使用する	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
エクセルファイル <val1> に <name2> 表を描画する	<name2> . to_excel ( <val1> )	<name2> . to_excel ( <val1> )
<name2> 表の欠損値を <name5> に変えられた結果を <name2> に代入する	<name2> = <name2> . fillna ( <name5> )	<name2> = <name2> . fillna ( <name5> )
<name4> 中の欠損を <name4> の平均をとって埋めた結果を再代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
<name1> 内の <val5> を欠損値に変え欠損値が存在する行をドロップし、 <name4> にする	<name4> = <name1> . replace ( <val5> , np . nan ) . dropna ( )	<name4> = <name1> . replace ( <val5> , np . nan ) . dropna ( )
<name4> 表を <val3> 列と <val2> カラムを元に値が大きい順でソートする	<name4> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name4> . sort_values ( [ <val3> , <val2> ] , ascending = False )
<val5> 番目の列をインデックスに、 <val1> を読んだ結果を <name6> に代入する	<name6> = pd . read_csv ( <val1> , index_col = <val5> )	<name6> = pd . read_csv ( <val1> , index_col = <val5> )
エクセルファイル <val1> のシート名 <val5> から読み込む	pd . read_excel ( <val1> , sheet_name = <val5> )	pd . read_excel ( <val1> , sheet_name = <val5> )
ある <val2> を表 <name4> 上に NaN に置き換えた結果を <name4> とする	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
<name3> の <val6> についての箱ひげ図をプロットする	plt . boxplot ( <name3> [ <val6> ] )	plt . boxplot ( <name3> [ <val6> ] )
区間を <name3> 、ビンの名前を <name1> リストとして <name5> 表の <val2> 列を分割する	pd . cut ( <name5> [ <val2> ] , <name3> , label = <name1> )	pd . cut ( <name5> [ <val2> ] , <name3> , label = <name1> )
マーカーの形状の色は黄色を用いる	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
列の最大表示幅を <val2> にセットする	pd . set_option ( 'max_colwidth' , <val2> )	pd . set_option ( 'max_colwidth' , <val2> )
表 <name2> をカラム <val3> を使って昇順でソートし、インプレースする	<name2> . sort_values ( <val3> , inplace = True )	<name2> . sort_values ( <val3> , inplace = True )
表 <name2> の中の重複要素がある行を削除された結果を <name3> に代入する	<name3> = <name2> . drop_duplicates ( )	<name3> = <name2> . drop_duplicates ( )
<name5> 中の欠損値を <name2> で埋められた結果を再代入する	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name1> の柱状グラフを区関数を <val4> として描写する	plt . hist ( <name1> , bins = <val4> )	plt . hist ( <name1> , bins = <val4> )
<name2> 表のオブジェクトデータの統計的情報を確認する	<name2> . describe ( include = 'O' )	<name2> . describe ( include = 'O' )
<name5> 表をインデックスを元に小さい順でソートした結果を <name4> とする	<name4> = <name5> . sort_index ( )	<name4> = <name5> . sort_index ( )
エクセルファイル <val5> の <val1> 番目のシートを表に格納する	pd . read_excel ( <val5> , sheet_name = <val1> )	pd . read_excel ( <val5> , sheet_name = <val1> )
表 <name2> 内のカテゴリ変数を one - hot 表現に変換する	pd . get_dummies ( <name2> )	pd . get_dummies ( <name2> )
<name5> のカラム名を <name2> にする	<name2> = <name5> . columns	<name2> = <name5> . columns
グラフ内に凡例を加える	plt . legend ( )	plt . legend ( )
列番号 <val3> をインデックスとして <val2> をデータフレームに格納した結果を <name1> にする	<name1> = pd . read_csv ( <val2> , index_col = <val3> )	<name1> = pd . read_csv ( <val2> , index_col = <val3> )
データフレームとして CSV ファイル <val6> をカンマ区切りで読み込んだ結果を <name1> とする	<name1> = pd . read_csv ( <val6> , sep = ',' )	<name1> = pd . read_csv ( <val6> , sep = ',' )
表 <name2> 中の欠損値を <name1> で置き換えられた結果で置き換える	<name2> = <name2> . fillna ( <name1> )	<name2> = <name2> . fillna ( <name1> )
表 <name5> の中の未入力の値を含む行を取り除いた結果で書き換える	<name5> . dropna ( inplace = True )	<name5> . dropna ( inplace = True )
線グラフの種類は折れ線グラフを用いる	kind = 'line'	kind = 'line'
<name1> 表の <val3> を欠損値とした結果で置き換える	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
<name3> 中に存在する <val6> を欠損で補われた、結果で書き換える	<name3> . replace ( <val6> , np . nan , inplace = True )	<name3> . replace ( <val6> , np . nan , inplace = True )
<name2> 表の <val6> を未記入の値に置き換えた結果を <name2> にする	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
<name2> 表内の欠損値を <name2> 表の平均値で埋めた結果を <name2> に代入する	<name2> = <name2> . fillna ( <name2> . mean ( ) )	<name2> = <name2> . fillna ( <name2> . mean ( ) )
<val3> から <val6> に <name5> のカラム名を変え、 <name5> とする	<name5> = <name5> . rename ( columns = { <val3> : <val6> } )	<name5> = <name5> . rename ( columns = { <val3> : <val6> } )
最適な位置に凡例を加える	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
<name5> 内の NaN を <name5> の平均をとって埋める	<name5> . fillna ( <name5> . mean ( ) )	<name5> . fillna ( <name5> . mean ( ) )
グラフ内に凡例を追加する	plt . legend ( )	plt . legend ( )
表 <name3> の未記入の値がある行を落とし、 <name5> にする	<name5> = <name3> . dropna ( )	<name5> = <name3> . dropna ( )
<name2> の <val4> を NaN で置き換えた結果を <name1> とする	<name1> = <name2> . replace ( <val4> , np . nan )	<name1> = <name2> . replace ( <val4> , np . nan )
エクセルファイル <val5> の <val3> から表データを読み、 <name6> とする	<name6> = pd . read_excel ( <val5> , sheet_name = <val3> )	<name6> = pd . read_excel ( <val5> , sheet_name = <val3> )
<name1> 表中に存在する <val4> を欠損にした結果で書き換える	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> . replace ( <val4> , np . nan , inplace = True )
<name2> 内の欠損を含む行を削除した結果を <name2> に代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name1> 表の未入力の値を <name2> で埋めた結果でインプレースする	<name1> . fillna ( <name2> , inplace = True )	<name1> . fillna ( <name2> , inplace = True )
列名を設定しないで <val6> を読み、 <name2> にする	<name2> = pd . read_csv ( <val6> , header = None )	<name2> = pd . read_csv ( <val6> , header = None )
<name5> の行の名前を <val6> から <val1> にリネームし、 <name5> にする	<name5> = <name5> . rename ( index = { <val6> : <val1> } )	<name5> = <name5> . rename ( index = { <val6> : <val1> } )
<name4> 表内の <val5> を欠損値に置換し欠損値が存在する行をドロップする	<name4> . replace ( <val5> , np . nan ) . dropna ( )	<name4> . replace ( <val5> , np . nan ) . dropna ( )
表 <name4> 内の重複した行をドロップした結果で書き換える	<name4> . drop_duplicates ( inplace = True )	<name4> . drop_duplicates ( inplace = True )
表 <name1> の列 <val5> を区関数を <name6> 、ビンの名前を整数値として分割する	pd . cut ( <name1> [ <val5> ] , <name6> , label = False )	pd . cut ( <name1> [ <val5> ] , <name6> , label = False )
ビンを <name5> 、ビンのラベルを <name1> として <name3> の <val4> を分割して、 <name2> に代入する	<name2> = pd . cut ( <name3> [ <val4> ] , <name5> , label = <name1> )	<name2> = pd . cut ( <name3> [ <val4> ] , <name5> , label = <name1> )
<name1> と <name2> のグラフを cRGB で表示する	plt . plot ( <name1> , <name2> , color = c )	plt . plot ( <name1> , <name2> , color = c )
<name5> 表の <val6> コラム上の前後の行の差分を求める	<name5> [ <val6> ] . diff ( periods = 1 )	<name5> [ <val6> ] . diff ( periods = 1 )
<name5> の中身を表示する	<name5> . head ( )	<name5> . head ( )
<name3> の中の <val6> を欠損に置き換え欠損が存在する行を削除した結果で書き換える	<name3> . replace ( <val6> , np . nan ) . dropna ( inplace = True )	<name3> . replace ( <val6> , np . nan ) . dropna ( inplace = True )
凡例をグラフに被らない位置につける	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
<name6> 中の未記入の値を <name5> で埋めて、 <name6> に代入する	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
タブ区切りで <val2> データを読んで、 <name4> に代入する	<name4> = pd . read_csv ( <val2> , sep = '\t' )	<name4> = pd . read_csv ( <val2> , sep = '\t' )
グラフフォントを日本語に設定する	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
表 <name6> の要約情報	<name6> . info ( )	<name6> . info ( )
<val4> カラムで <name6> 表を昇順にソートした結果を <name2> に代入する	<name2> = <name6> . sort_values ( <val4> )	<name2> = <name6> . sort_values ( <val4> )
横軸を <name4> とした <name6> の棒グラフをグラフ幅を <val3> としてプロットする	plt . bar ( <name4> , <name6> , width = <val3> )	plt . bar ( <name4> , <name6> , width = <val3> )
<name6> の中の <val1> を未記入の値に変え未記入の値がある行を落とす	<name6> . replace ( <val1> , np . nan ) . dropna ( )	<name6> . replace ( <val1> , np . nan ) . dropna ( )
表 <name5> を列 <val4> とカラム <val1> で値が大きい順にソートして、 <name5> とする	<name5> = <name5> . sort_values ( [ <val4> , <val1> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val4> , <val1> ] , ascending = False )
<name2> 表の統計情報	<name2> . describe ( )	<name2> . describe ( )
ヘッダーをセットせずに <val1> データを読み込む	pd . read_csv ( <val1> , header = None )	pd . read_csv ( <val1> , header = None )
ビンの数を <name5> 、ビンのラベルを <name3> リストとして <name4> 表の <val6> 列を分割して、 <name1> に代入する	<name1> = pd . cut ( <name4> [ <val6> ] , <name5> , label = <name3> )	<name1> = pd . cut ( <name4> [ <val6> ] , <name5> , label = <name3> )
表 <name6> の未記入の値がある行を取り除いた結果でインプレースする	<name6> . dropna ( inplace = True )	<name6> . dropna ( inplace = True )
<name5> 上の <val6> に重複がある行を落とした結果を <name2> にする	<name2> = <name5> . drop_duplicates ( subset = <val6> )	<name2> = <name5> . drop_duplicates ( subset = <val6> )
<name3> 表の中の欠損を <name1> に置換して、書き換える	<name3> . fillna ( <name1> , inplace = True )	<name3> . fillna ( <name1> , inplace = True )
<name5> を <val2> と <val4> が逆順になるようにソートして、再代入する	<name5> = <name5> . sort_values ( [ <val2> , <val4> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val2> , <val4> ] , ascending = False )
<name1> のカラムにある <val3> をカウントする	<name1> . isin ( [ <val3> ] ) . sum ( )	<name1> . isin ( [ <val3> ] ) . sum ( )
ビンに含まれる個数が等しくなるように <name3> の <val2> をビン数を <name5> として分割する	pd . qcut ( <name3> [ <val2> ] , <name5> )	pd . qcut ( <name3> [ <val2> ] , <name5> )
エクセルファイル <val5> の全てのシートを表に読んで、 <name3> にする	<name3> = pd . read_excel ( <val5> , sheet_name = None )	<name3> = pd . read_excel ( <val5> , sheet_name = None )
カラーマップはアクセントを用いる	colormap = 'Accent'	color = 'Accent'
<name2> の概要	<name2> . info ( )	<name2> . info ( )
<name6> 表の <val2> 列を日付の型に変換する	pd . to_datetime ( <name6> [ <val2> ] )	pd . to_datetime ( <name6> [ <val2> ] )
<name1> 全体をインデックスで昇順にソートして、 <name5> にする	<name5> = <name1> . sort_index ( )	<name5> = <name1> . sort_index ( )
<name3> の <val1> を NaN に置換し、 <name3> とする	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
表 <name1> 全体をカラム <val5> に基づいて昇順でソートして、再代入する	<name1> = <name1> . sort_values ( <val5> )	<name1> = <name1> . sort_values ( <val5> )
ヘッダーの表示を右寄せにセットする	pd . set_option ( 'colheader_justify' , 'right' )	pd . set_option ( 'colheader_justify' , 'right' )
<val3> 列と <val6> カラムで <name4> 表全体を逆順にソートする	<name4> . sort_values ( [ <val3> , <val6> ] , ascending = False )	<name4> . sort_values ( [ <val3> , <val6> ] , ascending = False )
<name4> 表の <val6> コラムをインデックスとしてセットした結果を <name3> に代入する	<name3> = <name4> . set_index ( <val6> )	<name3> = <name4> . set_index ( <val6> )
表 <name1> 内の NaN を表 <name1> の平均をとって埋め、置き換える	<name1> = <name1> . fillna ( <name1> . mean ( ) )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
<val5> から <val2> に表 <name1> のカラム名を変更する	<name1> . rename ( columns = { <val5> : <val2> } )	<name1> . rename ( columns = { <val5> : <val2> } )
表 <name5> の中の未記入の値を直前の行の値で補って、再代入する	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
<val4> というエクセルファイルの <val3> を読む	pd . read_excel ( <val4> , sheet_name = <val3> )	pd . read_excel ( <val4> , sheet_name = <val3> )
エクセルファイル <val2> の <val6> シート名を読み込み、表に格納し、 <name3> とする	<name3> = pd . read_excel ( <val2> , sheet_name = <val6> )	<name3> = pd . read_excel ( <val2> , sheet_name = <val6> )
一気に <name4> の <val6> と <val2> と <val5> について関係性をプロットする	sns . pairplot ( <name4> [ [ <val6> , <val2> , <val5> ] ] )	sns . pairplot ( <name4> [ [ <val6> , <val2> , <val5> ] ] )
<name1> 表内のカテゴリーを数値にした結果を <name3> にする	<name3> = pd . get_dummies ( <name1> )	<name3> = pd . get_dummies ( <name1> )
<name3> の中の未記入の値を <name5> に置き換えた結果を <name2> にする	<name2> = <name3> . fillna ( <name5> )	<name2> = <name3> . fillna ( <name5> )
<name6> 表中に存在する <val2> を欠損で置換した結果を <name4> に代入する	<name4> = <name6> . replace ( <val2> , np . nan )	<name4> = <name6> . replace ( <val2> , np . nan )
表 <name2> の <val5> を欠損値で置換した結果でインプレースする	<name2> . replace ( <val5> , np . nan , inplace = True )	<name2> . replace ( <val5> , np . nan , inplace = True )
エクセルファイル <val5> のシート名 <val1> を表とする	pd . read_excel ( <val5> , sheet_name = <val1> )	pd . read_excel ( <val5> , sheet_name = <val1> )
<name4> 中の <val2> と <val6> に重複はあるのかどうか判定をチェックする	<name4> . duplicated ( subset = [ <val2> , <val6> ] )	<name4> . duplicated ( subset = [ <val2> , <val6> ] )
表 <name6> 上の重複した行の数	<name6> . duplicated ( ) . sum ( )	<name6> . duplicated ( ) . sum ( )
<name5> 上の未記入の値を <name5> の平均で補われた、結果を <name5> に代入する	<name5> = <name5> . fillna ( <name5> . mean ( ) )	<name5> = <name5> . fillna ( <name5> . mean ( ) )
表 <name2> 中の未記入の値を <name5> に置換した結果で書き換える	<name2> . fillna ( <name5> , inplace = True )	<name2> . fillna ( <name5> , inplace = True )
マーカーの形状を点とする	marker = '.'	marker = '.'
表 <name5> の中の未記入の値を直前の行の値で補う	<name5> . fillna ( method = 'ffill' )	<name5> . fillna ( method = 'ffill' )
ビン数を <name2> 、ビンのラベルをインデックスとして <name5> の <val1> を分割し、 <name3> に代入する	<name3> = pd . cut ( <name5> [ <val1> ] , <name2> , label = False )	<name3> = pd . cut ( <name5> [ <val1> ] , <name2> , label = False )
ある <val6> を <name2> 中に未記入の値で埋められた結果を <name3> にする	<name3> = <name2> . replace ( <val6> , np . nan )	<name3> = <name2> . replace ( <val6> , np . nan )
列番号 <val3> をインデックスとセットしてデータ <val4> からデータフレームを読んだ結果を <name6> に代入する	<name6> = pd . read_csv ( <val4> , index_col = <val3> )	<name6> = pd . read_csv ( <val4> , index_col = <val3> )
表 <name1> をカラム <val3> を使って昇順でソートした結果で書き換える	<name1> . sort_values ( <val3> , inplace = True )	<name1> . sort_values ( <val3> , inplace = True )
表 <name2> 内の欠損値を直前の行の値で補って、インプレースする	<name2> . fillna ( method = 'ffill' , inplace = True )	<name2> . fillna ( method = 'ffill' , inplace = True )
<name1> の <val6> を区関数を <name4> 、ビンのラベルを <name3> として分割した結果を <name2> にする	<name2> = pd . cut ( <name1> [ <val6> ] , <name4> , label = <name3> )	<name2> = pd . cut ( <name1> [ <val6> ] , <name4> , label = <name3> )
<name4> の <val5> を区間の数を <name1> 、ビンの名前を <name2> として分割する	pd . cut ( <name4> [ <val5> ] , <name1> , label = <name2> )	pd . cut ( <name4> [ <val5> ] , <name1> , label = <name2> )
<name3> 表の <val4> を未記入の値にし、 <name6> とする	<name6> = <name3> . replace ( <val4> , np . nan )	<name6> = <name3> . replace ( <val4> , np . nan )
ある <val3> を <name5> 上に NaN に置き換え、 <name1> にする	<name1> = <name5> . replace ( <val3> , np . nan )	<name1> = <name5> . replace ( <val3> , np . nan )
表 <name4> の未入力の値を取り除いた結果で置き換える	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name3> 表の中の未入力の値を <name4> に置き換える	<name3> . fillna ( <name4> )	<name3> . fillna ( <name4> )
表 <name4> 内の重複要素がある行を消した結果を <name4> にする	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name3> の <val6> と <val4> をドロップし、書き換える	<name3> . drop ( [ <val6> , <val4> ] , axis = 1 , inplace = True )	<name3> . drop ( [ <val6> , <val4> ] , axis = 1 , inplace = True )
<val5> で昇順に <name4> をソートして、置き換える	<name4> . sort_values ( <val5> , inplace = True )	<name4> = <name4> . sort_values ( <val5> )
表 <name4> のコラム <val2> をインデックスに設定して、 <name1> とする	<name1> = <name4> . set_index ( <val2> )	<name1> = <name4> . set_index ( <val2> )
マーカーの形状の色を紺色とする	markerfacecolor = 'navy'	markerfacecolor = 'navy'
<name6> 表のデータの詳細を確認する	<name6> . info ( )	<name6> . info ( )
<val2> から表で読んで、 <name4> にする	<name4> = pd . read_csv ( <val2> )	<name4> = pd . read_csv ( <val2> )
<val2> と <val1> で <name3> を値が大きい順にソートし、置き換える	<name3> . sort_values ( [ <val2> , <val1> ] , ascending = False , inplace = True )	<name3> = <name3> . sort_values ( [ <val2> , <val1> ] , ascending = False )
表 <name2> のコラム <val4> を落とし、書き換える	<name2> . drop ( <val4> , axis = 1 , inplace = True )	<name2> . drop ( <val4> , axis = 1 , inplace = True )
表 <name6> 内の欠損を含む行を削除し、 <name6> にする	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name3> の行の重複を確認を見る	<name3> . duplicated ( )	<name3> . duplicated ( )
<name3> の <val6> をビンの数を <name2> 、ビンのラベルを 0 始まりの連番として分割する	pd . cut ( <name3> [ <val6> ] , <name2> , label = False )	pd . cut ( <name3> [ <val6> ] , <name2> , label = False )
<name5> 中の欠損値を <name2> で置き換えられた結果を再代入する	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name4> を <val3> で昇順にソートされた結果を <name1> とする	<name1> = <name4> . sort_values ( <val3> )	<name1> = <name4> . sort_values ( <val3> )
<name2> の中の未記入の値を落とした結果で書き換える	<name2> . dropna ( inplace = True )	<name2> . dropna ( inplace = True )
表 df 全体をインデックスを軸に小さい順でソートされた結果を再代入する	df = df . sort_index ( )	df = df . sort_index ( )
<name1> を <val6> と <val4> を元に値が大きい順でソートして、置き換える	<name1> . sort_values ( [ <val6> , <val4> ] , ascending = False , inplace = True )	<name1> = <name1> . sort_values ( [ <val6> , <val4> ] , ascending = False )
インデックスを軸に <name2> 表全体を昇順でソートする	<name2> . sort_index ( )	<name2> . sort_index ( )
ある <val1> を表 <name3> 中に未記入の値にし、再代入する	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
エクセルファイル <val5> のシート名 <val2> を表として読んだ結果を <name1> に代入する	<name1> = pd . read_excel ( <val5> , sheet_name = <val2> )	<name1> = pd . read_excel ( <val5> , sheet_name = <val2> )
開始は <name1> とする	start = <name1>	<name1> = <name1>
マーカーの形を点とする	marker = '.'	marker = '.'
<name5> の <val3> をグループ化したときの値ごとのデータ数を算出する	<name5> . groupby ( <val3> ) . size ( )	<name5> . groupby ( <val3> ) . size ( )
<val2> から <val6> に表 <name3> のカラム名を変えて、再代入する	<name3> = <name3> . rename ( columns = { <val2> : <val6> } )	<name3> = <name3> . rename ( columns = { <val2> : <val6> } )
インデックスを元に表 <name6> 全体を昇順でソートし、 <name3> とする	<name3> = <name6> . sort_index ( )	<name3> = <name6> . sort_index ( )
<val4> 列と <val2> カラムで <name3> 表を値が大きい順にソートし、再代入する	<name3> = <name3> . sort_values ( [ <val4> , <val2> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val4> , <val2> ] , ascending = False )
表 <name2> 中の欠損を <name5> で埋め、置き換える	<name2> = <name2> . fillna ( <name5> )	<name2> = <name2> . fillna ( <name5> )
y 座標を <name2> とした <name5> の水平棒グラフを表示する	plt . barh ( <name2> , <name5> )	plt . barh ( <name2> , <name5> )
表 <name1> 中の欠損値を <name3> とし、 <name6> とする	<name6> = <name1> . fillna ( <name3> )	<name6> = <name1> . fillna ( <name3> )
表 <name1> をインデックスどおりに昇順でソートして、 <name5> にする	<name5> = <name1> . sort_index ( )	<name5> = <name1> . sort_index ( )
マーカーの形の色を赤紫色とする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
表 <name6> の列 <val4> を要素の数が等しくなるようにビンを <name3> として分割した結果を <name1> にする	<name1> = pd . qcut ( <name6> [ <val4> ] , <name3> )	<name1> = pd . qcut ( <name6> [ <val4> ] , <name3> )
<name6> 表のインデックスをリセットする	<name6> . reset_index ( )	<name6> . reset_index ( )
<name1> 表内の NaN を <name1> 表の平均をとって埋められた結果を <name5> に代入する	<name5> = <name1> . fillna ( <name1> . mean ( ) )	<name5> = <name1> . fillna ( <name1> . mean ( ) )
<name3> 表を <val2> カラムを軸に昇順でソートして、 <name3> に代入する	<name3> = <name3> . sort_values ( <val2> )	<name3> = <name3> . sort_values ( <val2> )
ビックエンディアンを用いる	byteorder = 'big'	byteorder = 'big'
<name5> 表内の <val2> を欠損値に変え欠損値が存在する行をドロップした結果を再代入する	<name5> = <name5> . replace ( <val2> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val2> , np . nan ) . dropna ( )
表 <name2> の欠損値がある行をドロップして、置き換える	<name2> . dropna ( inplace = True )	<name2> = <name2> . dropna ( )
表 <name6> のコラム <val3> と <val1> を取り除き、再代入する	<name6> = <name6> . drop ( [ <val3> , <val1> ] , axis = 1 )	<name6> = <name6> . drop ( [ <val3> , <val1> ] , axis = 1 )
TF で重複があるのかどうかを <name6> 表に返す	<name6> . duplicated ( )	<name6> . duplicated ( )
<name1> の中に存在する <val4> を欠損で置換して、 <name1> とする	<name1> = <name1> . replace ( <val4> , np . nan )	<name1> = <name1> . replace ( <val4> , np . nan )
<val4> 番目の列をインデックスと、 <val3> データを表データとして読み込む	pd . read_csv ( <val3> , index_col = <val4> )	pd . read_csv ( <val3> , index_col = <val4> )
<name6> の中の <val4> を欠損に変え欠損が存在する行を削除し、 <name6> にする	<name6> = <name6> . replace ( <val4> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val4> , np . nan ) . dropna ( )
表 <name1> のコラム <val2> を選び、	<name1> [ <val2> ] .	<name1> [ <val2> ] .
重複している最後の行を残して <name6> 内の重複している行を削除する	<name6> . drop_duplicates ( keep = False )	<name6> . drop_duplicates ( keep = False )
<val5> でプロットしたグラフをセーブする	plt . savefig ( <val5> )	plt . savefig ( <val5> )
<name5> の <val2> を未入力の値に置き換えて、 <name4> にする	<name4> = <name5> . replace ( <val2> , np . nan )	<name4> = <name5> . replace ( <val2> , np . nan )
表 <name5> 内の欠損を <name3> とした結果を <name6> に代入する	<name6> = <name5> . fillna ( <name3> )	<name6> = <name5> . fillna ( <name3> )
表 <name5> の未入力の値を <name1> で埋め、 <name4> に代入する	<name4> = <name5> . fillna ( <name1> )	<name4> = <name5> . fillna ( <name1> )
エクセルファイル <val1> をデータフレームとし、 <name6> とする	<name6> = pd . read_excel ( <val1> )	<name6> = pd . read_excel ( <val1> )
<name6> の中の NaN が存在する行を削除した結果で書き換える	<name6> . dropna ( inplace = True )	<name6> . dropna ( inplace = True )
区間の数を <name5> 、ビンのラベルをリスト <name2> として表 <name3> の列 <val6> を分割し、 <name4> に代入する	<name4> = pd . cut ( <name3> [ <val6> ] , <name5> , label = <name2> )	<name4> = pd . cut ( <name3> [ <val6> ] , <name5> , label = <name2> )
表 <name2> のインデックス <val3> の名前を <val5> にリネームして、再代入する	<name2> = <name2> . rename ( index = { <val3> : <val5> } )	<name2> = <name2> . rename ( index = { <val3> : <val5> } )
<name3> 上の NaN を直前の行の値で補って、 <name3> に代入する	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
ビン数を <name4> 、ビンのラベルを整数値として <name5> 表の <val1> 列を分割する	pd . cut ( <name5> [ <val1> ] , <name4> , label = False )	pd . cut ( <name5> [ <val1> ] , <name4> , label = False )
表 <name6> の列 <val2> を四分位数ごとで分割し、 <name4> とする	<name4> = pd . qcut ( <name6> [ <val2> ] , 4 )	<name4> = pd . qcut ( <name6> [ <val2> ] , 4 )
<name3> 表内の未入力の値がある行をドロップして、置き換える	<name3> . dropna ( inplace = True )	<name3> = <name3> . dropna ( )
<name2> の中にある <val6> を未記入の値として、再代入する	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
表としてデータ <val6> を <val3> 区切りで読んだ結果を <name1> に代入する	<name1> = pd . read_csv ( <val6> , sep = <val3> )	<name1> = pd . read_csv ( <val6> , sep = <val3> )
<name1> の <val4> について <val6> をインデックス、 <val5> を列としたピボットテーブルを作成された結果を <name2> に代入する	<name2> = <name1> . pivot_table ( index = <val6> , columns = <val5> , values = <val4> )	<name2> = <name1> . pivot_table ( index = <val6> , columns = <val5> )
表をデータ <val1> からタブ区切りで読み込む	pd . read_csv ( <val1> , sep = '\t' )	pd . read_csv ( <val1> , sep = '\t' )
<name6> 表をインデックスで値が小さい順に並び替えられた結果で置き換える	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
両方の列を使って <name3> 表と <name6> 表をマージした結果を <name5> に代入する	<name5> = pd . merge ( <name3> , <name6> , how = 'outer' )	<name5> = pd . merge ( <name3> , <name6> , how = 'outer' )
<name6> 表の中の重複している行を削除し、 <name6> に代入する	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name3> をインデックスにそって昇順でソートし、 <name3> にする	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<val6> 番まで列を表示できるようにする	pd . set_option ( 'display.max_columns' , <val6> )	pd . set_option ( 'display.max_columns' , <val6> )
<val4> データを <val5> 区切りで読む	pd . read_csv ( <val4> , sep = <val5> )	pd . read_csv ( <val4> , sep = <val5> )
表 <name6> からデータ <val4> という名前で CSV に変換する	<name6> . to_csv ( <val4> )	<name6> . to_csv ( <val4> )
<name5> の中の重複している行を削除し、インプレースする	<name5> . drop_duplicates ( inplace = True )	<name5> . drop_duplicates ( inplace = True )
グラフ幅を <val2> として <name5> 座標を <name5> とした <name6> の縦棒グラフを表示する	plt . bar ( <name5> , <name6> , width = <val2> )	plt . bar ( <name5> , <name6> , width = <val2> )
エクセルファイル <val5> を読み込んで表データにした結果を <name1> とする	<name1> = pd . read_excel ( <val5> )	<name1> = pd . read_excel ( <val5> )
<name5> 内の欠損値を含む行をドロップし、インプレースする	<name5> . dropna ( inplace = True )	<name5> . dropna ( inplace = True )
表 <name1> の <val2> を欠損値に置換した結果を <name1> とする	<name1> = <name1> . replace ( <val2> , np . nan )	<name1> = <name1> . replace ( <val2> , np . nan )
表 <name4> をカラム <val3> とコラム <val1> が逆順になるようにソートし、 <name2> にする	<name2> = <name4> . sort_values ( [ <val3> , <val1> ] , ascending = False )	<name2> = <name4> . sort_values ( [ <val3> , <val1> ] , ascending = False )
<name6> データフレームの <val3> カラムと <val5> カラムと <val2> カラムについて関係性を一気に描写する	sns . pairplot ( <name6> [ [ <val3> , <val5> , <val2> ] ] )	sns . pairplot ( <name6> [ [ <val3> , <val5> , <val2> ] ] )
マーカーの形状のエッジの色はシアンを用いる	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <name3> の要約を表示する	<name3> . info ( )	<name3> . info ( )
<val3> を表に格納して、 <name6> にする	<name6> = pd . read_csv ( <val3> )	<name6> = pd . read_csv ( <val3> )
エクセルファイル <val2> の <val5> を読み込み、データフレームに格納し、 <name6> とする	<name6> = pd . read_excel ( <val2> , sheet_name = <val5> )	<name6> = pd . read_excel ( <val2> , sheet_name = <val5> )
<name3> 表の <val5> コラムの名前を <val1> に <val6> に <val2> コラムの名前をリネームし、 <name3> に代入する	<name3> = <name3> . rename ( columns = { <val5> : <val1> , <val2> : <val6> } )	<name3> = <name3> . rename ( columns = { <val5> : <val1> , <val2> : <val6> } )
<val3> から <val6> に <name4> 表の列名を変えて、置き換える	<name4> . rename ( columns = { <val3> : <val6> } , inplace = True )	<name4> = <name4> . rename ( columns = { <val3> : <val6> } )
<name6> 内に存在する <val4> を欠損に置換して、置き換える	<name6> = <name6> . replace ( <val4> , np . nan )	<name6> = <name6> . replace ( <val4> , np . nan )
昇順に <name3> 表を <val2> カラムでソートして、 <name4> にする	<name4> = <name3> . sort_values ( <val2> )	<name4> = <name3> . sort_values ( <val2> )
エクセルファイル <val2> のシート全部を表として読んだ結果を <name5> に代入する	<name5> = pd . read_excel ( <val2> , sheet_name = None )	<name5> = pd . read_excel ( <val2> , sheet_name = None )
存在する <val6> を <name2> 表の中に欠損で置換して、置き換える	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
一番左の列をインデックスとして、 <val5> データをデータフレームとして読み込んで、 <name4> に代入する	<name4> = pd . read_csv ( <val5> , index_col = 0 )	<name4> = pd . read_csv ( <val5> , index_col = 0 )
列番号 <val1> をインデックスと設定してデータ <val5> を表に格納した結果を <name2> とする	<name2> = pd . read_csv ( <val5> , index_col = <val1> )	<name2> = pd . read_csv ( <val5> , index_col = <val1> )
表 <name4> の <val2> を欠損にされた結果を <name4> とする	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
表 <name6> の <val5> 行目を落とされた結果を再代入する	<name6> = <name6> . drop ( <val5> )	<name6> = <name6> . drop ( <val5> )
<val6> から <val2> に <name1> の列の名前を変更された結果を再代入する	<name1> = <name1> . rename ( columns = { <val6> : <val2> } )	<name1> = <name1> . rename ( columns = { <val6> : <val2> } )
棒と棒の隙間を <val2> として横軸を <name4> とした <name6> の縦向きの棒グラフをプロットする	plt . bar ( <name4> , <name6> , width = <val2> )	plt . bar ( <name4> , <name6> , width = <val2> )
<name6> 表全体をインデックスに沿って昇順でソートする	<name6> . sort_index ( )	<name6> . sort_index ( )
<name3> の欠損がある行を削除された結果を <name3> に代入する	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
ダブっている最後の行を残して <name6> の重複している行を取り除き、再代入する	<name6> = <name6> . drop_duplicates ( keep = False )	<name6> = <name6> . drop_duplicates ( keep = False )
表 <name5> 中の欠損を <name1> で置き換えて、 <name2> に代入する	<name2> = <name5> . fillna ( <name1> )	<name2> = <name5> . fillna ( <name1> )
<val4> データをデータフレームとして読み込む	pd . read_csv ( <val4> )	pd . read_csv ( <val4> )
列番号 <val6> をインデックスと <val3> データからデータフレームを読み、 <name1> とする	<name1> = pd . read_csv ( <val3> , index_col = <val6> )	<name1> = pd . read_csv ( <val3> , index_col = <val6> )
ビンの数を <name6> 、ビンのラベルを 0 始まりの連番として <name3> 表の <val1> 列を分割して、 <name2> とする	<name2> = pd . cut ( <name3> [ <val1> ] , <name6> , label = False )	<name2> = pd . cut ( <name3> [ <val1> ] , <name6> , label = False )
表 <name5> の未入力の値を <name4> で置き換えた結果を再代入する	<name5> = <name5> . fillna ( <name4> )	<name5> = <name5> . fillna ( <name4> )
マーカーのエッジの色をマゼンタとする	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
<name2> 表の <val1> を欠損に置換し、 <name2> に代入する	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
<name3> 中の未記入の値を <name3> の平均をとって補う	<name3> . fillna ( <name3> . mean ( ) )	<name3> . fillna ( <name3> . mean ( ) )
ビンを <name4> 、ビンのラベルを整数値として表 <name1> の列 <val3> を分割し、 <name5> とする	<name5> = pd . cut ( <name1> [ <val3> ] , <name4> , label = False )	<name5> = pd . cut ( <name1> [ <val3> ] , <name4> , label = False )
<name3> の <val6> を未記入の値とした結果を <name3> とする	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
列番号 <val6> をインデックスとして <val3> データを表データに格納して、 <name1> にする	<name1> = pd . read_csv ( <val3> , index_col = <val6> )	<name1> = pd . read_csv ( <val3> , index_col = <val6> )
表 <name6> の欠損を <name3> に変えた結果を <name2> に代入する	<name2> = <name6> . fillna ( <name3> )	<name2> = <name6> . fillna ( <name3> )
ピボット操作で <name3> 表の列に行を変更する	<name3> . unstack ( )	<name3> . unstack ( )
エクセルファイル <val4> の <val2> 番目のシートを読み込み、表に格納して、 <name1> に代入する	<name1> = pd . read_excel ( <val4> , sheet_name = <val2> )	<name1> = pd . read_excel ( <val4> , sheet_name = <val2> )
<name5> の中の NaN が存在する行を取り除いて、 <name6> とする	<name6> = <name5> . dropna ( )	<name6> = <name5> . dropna ( )
表 <name5> の中の <val4> を欠損に置き換え欠損が存在する行を削除した結果で置き換える	<name5> . replace ( <val4> , np . nan ) . dropna ( inplace = True )	<name5> = <name5> . replace ( <val4> , np . nan ) . dropna ( )
打点の大きさを <val2> とする	markersize = <val2>	markersize = <val2>
<name1> 表の <val3> コラムと <val2> を削除した結果を <name1> に代入する	<name1> = <name1> . drop ( [ <val3> , <val2> ] , axis = 1 )	<name1> = <name1> . drop ( [ <val3> , <val2> ] , axis = 1 )
表 <name6> 上の NaN を <name4> に置き換えて、 <name6> にする	<name6> = <name6> . fillna ( <name4> )	<name6> = <name6> . fillna ( <name4> )
表 <name5> の列の名前を <val4> から <val1> にリネームして、再代入する	<name5> = <name5> . rename ( columns = { <val4> : <val1> } )	<name5> = <name5> . rename ( columns = { <val4> : <val1> } )
カラム <val2> で表 <name3> を昇順にソートし、 <name5> に代入する	<name5> = <name3> . sort_values ( <val2> )	<name5> = <name3> . sort_values ( <val2> )
表 <name3> 上の NaN を <name2> に置換する	<name3> . fillna ( <name2> )	<name3> . fillna ( <name2> )
<val3> と <val6> を軸に <name5> 全体を逆順でソートし、 <name2> とする	<name2> = <name5> . sort_values ( [ <val3> , <val6> ] , ascending = False )	<name2> = <name5> . sort_values ( [ <val3> , <val6> ] , ascending = False )
<name2> 内の <val5> を NaN に置き換え NaN が存在する行を消した結果を <name4> に代入する	<name4> = <name2> . replace ( <val5> , np . nan ) . dropna ( )	<name4> = <name2> . replace ( <val5> , np . nan ) . dropna ( )
表 <name4> 中の未記入の値を含む行を落とす	<name4> . dropna ( )	<name4> . dropna ( )
表データを <val1> から <val5> 区切りで読む	pd . read_csv ( <val1> , sep = <val5> )	pd . read_csv ( <val1> , sep = <val5> )
表 <name3> 内に存在する <val4> を NaN とされた結果を <name2> にする	<name2> = <name3> . replace ( <val4> , np . nan )	<name2> = <name3> . replace ( <val4> , np . nan )
<name5> 中の <val4> に重複がある行を削除された結果で置き換える	<name5> = <name5> . drop_duplicates ( subset = <val4> )	<name5> = <name5> . drop_duplicates ( subset = <val4> )
<name6> 表内の欠損値を <name1> とする	<name6> . fillna ( <name1> )	<name6> . fillna ( <name1> )
エクセル <val3> を表に読み込み、 <name5> に代入する	<name5> = pd . read_excel ( <val3> )	<name5> = pd . read_excel ( <val3> )
表 <name5> のインデックスを振り直して、元のインデックスを削除した結果を <name2> にする	<name2> = <name5> . reset_index ( drop = True )	<name2> = <name5> . reset_index ( drop = True )
ビンの数を <name1> 、ビンのラベルを整数値として <name6> の <val3> を分割する	pd . cut ( <name6> [ <val3> ] , <name1> , label = False )	pd . cut ( <name6> [ <val3> ] , <name1> , label = False )
<val5> から <val4> に <name1> 表の列名をリネームした結果を <name3> に代入する	<name3> = <name1> . rename ( columns = { <val5> : <val4> } )	<name3> = <name1> . rename ( columns = { <val5> : <val4> } )
<name1> 上の重複する行を消された結果を <name6> にする	<name6> = <name1> . drop_duplicates ( )	<name6> = <name1> . drop_duplicates ( )
<name3> の <val5> をインデックスとしてし、置き換える	<name3> . set_index ( <val5> , inplace = True )	<name3> = <name3> . set_index ( <val5> )
マーカーの種類の色を赤紫色とする	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
表 <name5> 中に重複はあるのか確認を見る	<name5> . duplicated ( )	<name5> . duplicated ( )
<name4> データフレームの <val6> カラムを柱状図で出力する	plt . hist ( <name4> [ <val6> ] )	plt . hist ( <name4> [ <val6> ] )
<name4> の中に重複はあるのか判定をチェックする	<name4> . duplicated ( )	<name4> . duplicated ( )
ある行を <name6> 内の欠損が消す	<name6> . dropna ( )	<name6> . dropna ( )
<name6> 表中の未記入の値を直前の行の値で埋めて、再代入する	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
グラフを <val4> という名前でセーブする	plt . savefig ( <val4> )	plt . savefig ( <val4> )
<name3> 上の未記入の値を <name3> の平均をとって補って、 <name5> とする	<name5> = <name3> . fillna ( <name3> . mean ( ) )	<name5> = <name3> . fillna ( <name3> . mean ( ) )
<val4> から <val5> に表 <name1> のカラム名を変更し、 <name1> とする	<name1> = <name1> . rename ( columns = { <val4> : <val5> } )	<name1> = <name1> . rename ( columns = { <val4> : <val5> } )
<name2> 表中にある <val1> を未記入の値で置き換え、 <name2> にする	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
横軸を <name1> とした <name6> の鉛直棒グラフをプロットする	plt . bar ( <name1> , <name6> )	plt . barh ( <name1> , <name6> )
<name3> 中の未入力の値がある行をドロップし、 <name4> とする	<name4> = <name3> . dropna ( )	<name4> = <name3> . dropna ( )
表 <name4> の列の名前を <val3> から <val6> にリネームした結果で書き換える	<name4> . rename ( columns = { <val3> : <val6> } , inplace = True )	<name4> . rename ( columns = { <val3> : <val6> } , inplace = True )
表 <name4> の中にある <val1> を未記入の値にし、再代入する	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
グラフにグリッド線を描画する	plt . grid ( True )	plt . grid ( True )
表 <name4> 上で重複した行の数の合計を見る	<name4> . duplicated ( ) . sum ( )	<name4> . duplicated ( ) . sum ( )
<name5> についてダミー変数を作成して、 <name1> に代入する	<name1> = pd . get_dummies ( <name5> )	<name1> = pd . get_dummies ( <name5> )
表 <name2> のコラム <val6> のデータの種類を表示する	<name2> [ <val6> ] . unique ( )	<name2> [ <val6> ] . unique ( )
両方の列を使って表 <name1> と表 <name3> をマージする	pd . merge ( <name1> , <name3> , how = 'outer' )	pd . merge ( <name1> , <name3> , how = 'outer' )
表 <name3> からデータ <val2> という名前で CSV データに変換する	<name3> . to_csv ( <val2> )	<name3> . to_csv ( <val2> )
y 軸のラベルを <val4> に変更する	plt . ylabel ( <val4> )	plt . ylabel ( <val4> )
<name5> 表の中にある <val6> を未記入の値で補った結果を <name5> に代入する	<name5> = <name5> . replace ( <val6> , np . nan )	<name5> = <name5> . replace ( <val6> , np . nan )
<name3> 表の中の未入力の値を <name1> として、 <name3> に代入する	<name3> = <name3> . fillna ( <name1> )	<name3> = <name3> . fillna ( <name1> )
<name2> 中のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <name2> )	pd . get_dummies ( <name2> )
エクセルファイル <val2> の <val3> シート名からデータフレームを読み込まれた結果を <name6> とする	<name6> = pd . read_excel ( <val2> , sheet_name = <val3> )	<name6> = pd . read_excel ( <val2> , sheet_name = <val3> )
ある行を <name2> 表内の未入力の値がドロップされた結果で置き換える	<name2> . dropna ( inplace = True )	<name2> = <name2> . dropna ( )
表 <name6> のコラム <val5> の名前を <val4> に <val1> にコラム <val2> の名前をリネームした結果を <name3> にする	<name3> = <name6> . rename ( columns = { <val5> : <val4> , <val2> : <val1> } )	<name3> = <name6> . rename ( columns = { <val5> : <val4> , <val2> : <val1> } )
棒グラフの位置を中心に設定して、グラフの <name2> 軸を <name2> とした <name1> の棒グラフを描写する	plt . bar ( <name2> , <name1> , align = 'center' )	plt . bar ( <name2> , <name1> , align = 'center' )
<name1> の <val6> を未入力の値に変え未入力の値がある行を取り除かれた結果を <name5> にする	<name5> = <name1> . replace ( <val6> , np . nan ) . dropna ( )	<name5> = <name1> . replace ( <val6> , np . nan ) . dropna ( )
<name6> を出力先として用いる	file = <name6>	file = <name6>
表 <name3> の中にある <val6> を未入力の値にした結果を <name3> とする	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
<name3> 表の統計的情報	<name3> . describe ( )	<name3> . describe ( )
カラム <val3> とコラム <val2> が逆順になるように表 <name1> をソートし、 <name5> に代入する	<name5> = <name1> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name5> = <name1> . sort_values ( [ <val3> , <val2> ] , ascending = False )
<name6> 全体を <val5> と <val1> で逆順にソートして、再代入する	<name6> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )
表 <name5> 内の NaN を直前の行の値で埋められた結果を再代入する	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
<name6> 表内に存在する <val2> を欠損値で埋めた結果で置き換える	<name6> . replace ( <val2> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val2> , np . nan )
ヘッダーをセットせずに <val6> を読み込み、 <name2> にする	<name2> = pd . read_csv ( <val6> , header = None )	<name2> = pd . read_csv ( <val6> , header = None )
<name4> 表の列にある <val1> の数の和	<name4> . isin ( [ <val1> ] ) . sum ( )	<name4> . isin ( [ <val1> ] ) . sum ( )
<name4> のインデックスを振り直して、元のインデックスを削除して、 <name3> にする	<name3> = <name4> . reset_index ( drop = True )	<name3> = <name4> . reset_index ( drop = True )
エクセルファイル <val4> の <val1> 番目のシートを表として読み込んだ結果を <name6> とする	<name6> = pd . read_excel ( <val4> , sheet_name = <val1> )	<name6> = pd . read_excel ( <val4> , sheet_name = <val1> )
昇順にカラム <val3> で表 <name4> 全体をソートした結果を <name4> にする	<name4> = <name4> . sort_values ( <val3> )	<name4> = <name4> . sort_values ( <val3> )
データフレーム <name4> においてカラム <val3> の箱ひげ図をプロットする	plt . boxplot ( <name4> [ <val3> ] )	plt . boxplot ( <name4> [ <val3> ] )
列番号 <val2> をインデックスにセットして <val1> データから読んだ結果を <name5> にする	<name5> = pd . read_csv ( <val1> , index_col = <val2> )	<name5> = pd . read_csv ( <val1> , index_col = <val2> )
<name6> の <val3> の前後の行の差分を算出する	<name6> [ <val3> ] . diff ( periods = 1 )	<name6> [ <val3> ] . diff ( periods = 1 )
<name6> 表全体を <val4> カラムを元に昇順でソートした結果で置き換える	<name6> = <name6> . sort_values ( <val4> )	<name6> = <name6> . sort_values ( <val4> )
表 <name3> 内の欠損値を <name1> で置き換えられた結果を <name6> にする	<name6> = <name3> . fillna ( <name1> )	<name6> = <name3> . fillna ( <name1> )
グラフの種類は箱髭図を用いる	kind = 'box'	kind = 'box'
<name1> の中の NaN が存在する行を取り除き、 <name1> にする	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
左側の表データに合わせて <name3> と <name2> をマージした結果を <name6> とする	<name6> = pd . merge ( <name3> , <name2> , how = 'left' )	<name6> = pd . merge ( <name3> , <name2> , how = 'left' )
<name5> の重複要素がある行を取り除いた結果で置き換える	<name5> = <name5> . drop_duplicates ( )	<name5> = <name5> . drop_duplicates ( )
表 <name2> の中の欠損を <name3> とし、 <name5> にする	<name5> = <name2> . fillna ( <name3> )	<name5> = <name2> . fillna ( <name3> )
データ <val3> を <val2> 区切りで読んだ結果を <name5> にする	<name5> = pd . read_csv ( <val3> , sep = <val2> )	<name5> = pd . read_csv ( <val3> , sep = <val2> )
<name6> 内の重複する行を消し、置き換える	<name6> . drop_duplicates ( inplace = True )	<name6> = <name6> . drop_duplicates ( )
表 <name1> 内に重複は存在するのか検出をチェックする	<name1> . duplicated ( )	<name1> . duplicated ( )
表 <name5> 内に重複はあるか判定を表示する	<name5> . duplicated ( )	<name5> . duplicated ( )
存在する <val1> を <name5> 中に欠損値に置換した結果を <name5> にする	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
<name5> の中の NaN がある行を削除する	<name5> . dropna ( )	<name5> . dropna ( )
<name2> 表の中の欠損値が含まれる部分を色付けする	<name2> . style . highlight_null ( )	<name2> . style . highlight_null ( )
<name1> 表内の欠損値をドロップし、置き換える	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<name3> 表の先頭の <val2> 行を確認する	<name3> . head ( <val2> )	<name3> . head ( <val2> )
<name2> において <val4> と <val3> と <val6> の関係性を一度に表示する	sns . pairplot ( <name2> [ [ <val4> , <val3> , <val6> ] ] )	sns . pairplot ( <name2> [ [ <val4> , <val3> , <val6> ] ] )
<val3> というエクセルファイルを読み込む	pd . read_excel ( <val3> )	pd . read_excel ( <val3> )
<name6> 表上の NaN を <name5> で埋め、 <name4> にする	<name4> = <name6> . fillna ( <name5> )	<name4> = <name6> . fillna ( <name5> )
<name2> 全体を <val3> と <val4> を元に逆順でソートする	<name2> . sort_values ( [ <val3> , <val4> ] , ascending = False )	<name2> . sort_values ( [ <val3> , <val4> ] , ascending = False )
<name3> 表の中の未入力の値を直前の行の値で補って、 <name3> にする	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
ヘッダーを指定せずに <val4> データを読み込んだ結果を <name6> とする	<name6> = pd . read_csv ( <val4> , header = None )	<name6> = pd . read_csv ( <val4> , header = None )
<name4> 表中の欠損を <name4> 表の平均値で埋めた結果を <name4> にする	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
存在する <val1> を表 <name5> の中に欠損で置換した結果でインプレースする	<name5> . replace ( <val1> , np . nan , inplace = True )	<name5> . replace ( <val1> , np . nan , inplace = True )
<name3> 表中の欠損を <name4> に置換した結果を再代入する	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
グラフ線を一点鎖線で出力する	linestyle = 'dashbot'	linestyle = 'dashbot'
マーカーのエッジの色はグレーを用いる	markeredgecolor = 'gray'	markeredgecolor = 'gray'
<name3> の中の NaN が存在する行を取り除き、置き換える	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
表 <name5> のコラム <val4> について列 <val3> をインデックス、コラム <val1> をカラムとしたピボットテーブルを作成する	<name5> . pivot_table ( index = <val3> , columns = <val1> , values = <val4> )	<name5> . pivot_table ( index = <val3> , columns = <val1> , values = <val3> )
表 <name6> の欠損がある行を削除して、 <name6> に代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
表 <name5> の中の <val2> を未入力の値に置き換え未入力の値がある行を取り除いて、 <name6> とする	<name6> = <name5> . replace ( <val2> , np . nan ) . dropna ( )	<name6> = <name5> . replace ( <val2> , np . nan ) . dropna ( )
<val2> データからデータフレームで読み込んで、 <name1> にする	<name1> = pd . read_csv ( <val2> )	<name1> = pd . read_csv ( <val2> )
存在する行を <name5> 中の未入力の値が落として、 <name5> とする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
CSV <val5> を表データとしてタブ区切りで読まれた結果を <name6> にする	<name6> = pd . read_csv ( <val5> , sep = '\t' )	<name6> = pd . read_csv ( <val5> , sep = '\t' )
<name2> の <val4> を未記入の値とした結果で置き換える	<name2> = <name2> . replace ( <val4> , np . nan )	<name2> = <name2> . replace ( <val4> , np . nan )
ビン数を <name2> 、ビンのラベルを <name6> として <name1> の <val5> を分割して、 <name3> とする	<name3> = pd . cut ( <name1> [ <val5> ] , <name2> , label = <name6> )	<name3> = pd . cut ( <name1> [ <val5> ] , <name2> , label = <name6> )
表 <name3> 中のコラム <val6> の重複した行をドロップして、 <name4> にする	<name4> = <name3> . drop_duplicates ( subset = <val6> )	<name4> = <name3> . drop_duplicates ( subset = <val6> )
表 <name6> の未入力の値を取り除いた結果で書き換える	<name6> . dropna ( inplace = True )	<name6> . dropna ( inplace = True )
エクセルファイル <val3> を表データに読み込まれた結果を <name5> とする	<name5> = pd . read_excel ( <val3> )	<name5> = pd . read_excel ( <val3> )
列番号 <val6> をインデックスとしてデータ <val2> を表データに格納する	pd . read_csv ( <val2> , index_col = <val6> )	pd . read_csv ( <val2> , index_col = <val6> )
<name1> 表の <val2> コラムを削除した結果を <name4> とする	<name4> = <name1> . drop ( <val2> , axis = 1 )	<name4> = <name1> . drop ( <val2> , axis = 1 )
<name4> 表をエクセルファイル <val3> という名前にして書き込む	<name4> . to_excel ( <val3> )	<name4> . to_excel ( <val3> )
<name4> と <name5> をくっつけ、 <name3> とする	<name3> = pd . merge ( <name4> , <name5> )	<name3> = pd . merge ( <name4> , <name5> )
表 <name1> のインデックスを振り直して、 <name2> に代入する	<name2> = <name1> . reset_index ( )	<name2> = <name1> . reset_index ( )
最大 <val6> に表示するカラム数をセットする	pd . set_option ( 'display.max_columns' , <val6> )	pd . set_option ( 'display.max_columns' , <val6> )
データフレームをデータ <val5> からカンマ区切りで読み込む	pd . read_csv ( <val5> , sep = ',' )	pd . read_csv ( <val5> , sep = ',' )
打点の輪郭の色は黄色を使う	markeredgecolor = 'yellow'	markeredgecolor = 'yellow'
表 <name3> 内に存在する <val4> を NaN とされた結果を再代入する	<name3> = <name3> . replace ( <val4> , np . nan )	<name3> = <name3> . replace ( <val4> , np . nan )
<val3> で <name2> を昇順にソートして、置き換える	<name2> = <name2> . sort_values ( <val3> )	<name2> = <name2> . sort_values ( <val3> )
<name3> 表の列の名前を <val4> から <val2> にリネームされた結果を <name3> にする	<name3> = <name3> . rename ( columns = { <val4> : <val2> } )	<name3> = <name3> . rename ( columns = { <val4> : <val2> } )
<name4> の <val6> を欠損で埋めて、書き換える	<name4> . replace ( <val6> , np . nan , inplace = True )	<name4> . replace ( <val6> , np . nan , inplace = True )
円グラフの中に割合を示す小数点以下 2 桁までの数値をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
バッファリングのサイズは <name3> にする	buffering = <name3>	fillchar = <name3>
<name6> 上に重複があるのかどうか検出する	<name6> . duplicated ( )	<name6> . duplicated ( )
<name4> 表全体を <val1> カラムで昇順にソートして、インプレースする	<name4> . sort_values ( <val1> , inplace = True )	<name4> . sort_values ( <val1> , inplace = True )
表 <name4> をインデックスで昇順にソートして、置き換える	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
表 <name6> の中のダブる行を落として、書き換える	<name6> . drop_duplicates ( inplace = True )	<name6> . drop_duplicates ( inplace = True )
エクセルファイル <val4> のシート全部を表として読み込み、 <name1> とする	<name1> = pd . read_excel ( <val4> , sheet_name = None )	<name1> = pd . read_excel ( <val4> , sheet_name = None )
<val2> から <val1> に <name5> 表の行名をリネームして、 <name6> とする	<name6> = <name5> . rename ( index = { <val2> : <val1> } )	<name6> = <name5> . rename ( index = { <val2> : <val1> } )
表データとしてデータ <val6> をタブ区切りで読む	pd . read_csv ( <val6> , sep = '\t' )	pd . read_csv ( <val6> , sep = '\t' )
文字コードをシフト JIS に変更する	encoding = 'shift_jis'	encoding = 'shift_jis'
<name6> の <val5> を未記入の値で埋め、置き換える	<name6> . replace ( <val5> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val5> , np . nan )
<name6> 中の未記入の値の和を確認する	<name6> . isnull ( ) . sum ( )	<name6> . isnull ( ) . sum ( )
表 <name5> 内の <val1> を NaN に変え NaN が存在する行を消して、置き換える	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )
表 <name3> 内に重複はあるのか検出を確認する	<name3> . duplicated ( )	<name3> . duplicated ( )
目盛りをグラフに加える	plt . grid ( True )	plt . grid ( True )
CSV ファイル <val3> をデータフレームに格納して、 <name1> にする	<name1> = pd . read_csv ( <val3> )	<name1> = pd . read_csv ( <val3> )
表 <name1> の未入力の値を <name3> とし、置き換える	<name1> . fillna ( <name3> , inplace = True )	<name1> = <name1> . fillna ( <name3> )
<name3> 表の中の未入力の値を直前の行の値で埋め、 <name3> にする	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
<name3> 表内の欠損値を <name3> 表の平均値で埋めて、置き換える	<name3> . fillna ( <name3> . mean ( ) , inplace = True )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
<name4> の <val6> 行目をドロップした結果を <name3> にする	<name3> = <name4> . drop ( <val6> )	<name3> = <name4> . drop ( <val6> )
<name5> 表中の重複している行を削除し、置き換える	<name5> . drop_duplicates ( inplace = True )	<name5> = <name5> . drop_duplicates ( )
一番左の列をインデックスにセット設定して、 <val6> を読み込む	pd . read_csv ( <val6> , index_col = 0 )	pd . read_csv ( <val6> , index_col = 0 )
<val2> から <val1> に <name5> のカラム名を変更して、 <name5> に代入する	<name5> = <name5> . rename ( columns = { <val2> : <val1> } )	<name5> = <name5> . rename ( columns = { <val2> : <val1> } )
表 <name4> の中の <val6> を未記入の値に置き換え未記入の値がある行を落とされた結果を <name1> に代入する	<name1> = <name4> . replace ( <val6> , np . nan ) . dropna ( )	<name1> = <name4> . replace ( <val6> , np . nan ) . dropna ( )
表 <name6> 全体をインデックスで順にソートし、 <name4> にする	<name4> = <name6> . sort_index ( )	<name4> = <name6> . sort_index ( )
表 <name4> 中のインデックスが <val2> の行	<name4> . loc [ <val2> ]	<name4> . loc [ <val2> ]
存在する <val4> を <name3> 中に欠損で置換して、 <name2> にする	<name2> = <name3> . replace ( <val4> , np . nan )	<name2> = <name3> . replace ( <val4> , np . nan )
表 <name1> をインデックスを元にソートした結果を <name1> にする	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
ある <val6> を表 <name2> 上に NaN に置き換え、 <name2> とする	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
<val2> で描画したプロットを保存する	plt . savefig ( <val2> )	plt . savefig ( <val2> )
エクセルファイル <val6> の <val3> シート名を表として読み込んだ結果を <name4> に代入する	<name4> = pd . read_excel ( <val6> , sheet_name = <val3> )	<name4> = pd . read_excel ( <val6> , sheet_name = <val3> )
色を <val3> にする	color = <val3>	color = <val3>
ダブる最後の行を残して <name1> 表の中の重複している行を落として、置き換える	<name1> = <name1> . drop_duplicates ( keep = False )	<name1> = <name1> . drop_duplicates ( keep = False )
表 <name4> 内の <val5> を NaN に変え NaN が存在する行を消して、 <name4> にする	<name4> = <name4> . replace ( <val5> , np . nan ) . dropna ( )	<name4> = <name4> . replace ( <val5> , np . nan ) . dropna ( )
<name6> 表内の欠損を <name1> で置き換えて、再代入する	<name6> = <name6> . fillna ( <name1> )	<name6> = <name6> . fillna ( <name1> )
ビンの数を <name5> としてビンに含まれる個数が等しくなるように <name1> の <val4> を分割した結果を <name3> に代入する	<name3> = pd . qcut ( <name1> [ <val4> ] , <name5> )	<name3> = pd . qcut ( <name1> [ <val4> ] , <name5> )
表 <name6> の中のカテゴリ変数をダミー変数化した結果を <name4> に代入する	<name4> = pd . get_dummies ( <name6> )	<name4> = pd . get_dummies ( <name6> )
<name5> 表の <val1> を未入力の値で置き換えられた結果を再代入する	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
区間を <name3> 、ビンの名前を 0 始まりの連番として <name5> の <val2> を分割した結果を <name4> とする	<name4> = pd . cut ( <name5> [ <val2> ] , <name3> , label = False )	<name4> = pd . cut ( <name5> [ <val2> ] , <name3> , label = False )
<name2> と <name1> を結合された結果を <name6> にする	<name6> = pd . concat ( [ <name2> , <name1> ] )	<name6> = pd . concat ( [ <name2> , <name1> ] )
表として <val1> をタブ区切りで読み込み、 <name2> にする	<name2> = pd . read_csv ( <val1> , sep = '\t' )	<name2> = pd . read_csv ( <val1> , sep = '\t' )
表 <name5> 内の <val2> を欠損に変え欠損が存在する行を削除された結果で書き換える	<name5> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name5> . replace ( <val2> , np . nan ) . dropna ( inplace = True )
<name3> 内の重複している行を削除して、再代入する	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
<val6> から <val1> に <name5> の列の名前を変えた結果を <name4> に代入する	<name4> = <name5> . rename ( columns = { <val6> : <val1> } )	<name4> = <name5> . rename ( columns = { <val6> : <val1> } )
<name3> の <val5> を未入力の値として、置き換える	<name3> . replace ( <val5> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val5> , np . nan )
<name6> 全体をインデックスで順にソートする	<name6> . sort_index ( )	<name6> . sort_index ( )
<name1> 表中のそれぞれのカラムにある <val4> の個数を確認する	<name1> . isin ( [ <val4> ] ) . sum ( )	<name1> . isin ( [ <val4> ] ) . sum ( )
存在する行を <name4> 上の欠損が消す	<name4> . dropna ( )	<name4> . dropna ( )
<name5> を <val3> という名前にして保存する	<name5> . to_csv ( <val3> )	<name5> . to_csv ( <val3> )
<name3> 表の <val6> 列を四分位数ごとで分割し、 <name2> に代入する	<name2> = pd . qcut ( <name3> [ <val6> ] , 4 )	<name2> = pd . qcut ( <name3> [ <val6> ] , 4 )
<name5> 表全体を <val6> 列と <val2> カラムに基づいて降順でソートした結果を <name4> にする	<name4> = <name5> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name4> = <name5> . sort_values ( [ <val6> , <val2> ] , ascending = False )
存在する <val2> を <name1> 内に NaN に置換し、置き換える	<name1> . replace ( <val2> , np . nan , inplace = True )	<name1> = <name1> . replace ( <val2> , np . nan )
<val2> 列と <val6> カラムを軸に <name1> 表を逆順でソートした結果を再代入する	<name1> = <name1> . sort_values ( [ <val2> , <val6> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val2> , <val6> ] , ascending = False )
昇順に <name6> 全体を <val5> でソートして、再代入する	<name6> = <name6> . sort_values ( <val5> )	<name6> = <name6> . sort_values ( <val5> )
存在する <val3> を <name1> の中に欠損にされた結果を再代入する	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
CSV データ <val2> をデータフレームとして読み込んだ結果を <name4> とする	<name4> = pd . read_csv ( <val2> )	<name4> = pd . read_csv ( <val2> )
円グラフ中に割合を示す小数点以下 2 桁までの数値をパーセントで出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
表 <name1> の <val6> を未入力の値にして、 <name4> に代入する	<name4> = <name1> . replace ( <val6> , np . nan )	<name4> = <name1> . replace ( <val6> , np . nan )
表 <name3> のデータの概要	<name3> . info ( )	<name3> . info ( )
<name4> 全体をインデックスに基づき昇順でソートして、 <name2> とする	<name2> = <name4> . sort_index ( )	<name2> = <name4> . sort_index ( )
<name3> 表のインデックス名を <val6> から <val2> にリネームして、 <name3> にする	<name3> = <name3> . rename ( index = { <val6> : <val2> } )	<name3> = <name3> . rename ( index = { <val6> : <val2> } )
<name2> 表中の欠損値を <name1> とし、置き換える	<name2> . fillna ( <name1> , inplace = True )	<name2> = <name2> . fillna ( <name1> )
表 <name4> 中の未記入の値を <name3> に置換して、 <name4> にする	<name4> = <name4> . fillna ( <name3> )	<name4> = <name4> . fillna ( <name3> )
表 <name4> の中の欠損がある行を取り除かれた結果を <name4> とする	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<val3> から <val5> に <name1> 表の列の名前をリネームした結果で置き換える	<name1> = <name1> . rename ( columns = { <val3> : <val5> } )	<name1> = <name1> . rename ( columns = { <val3> : <val5> } )
表 <name3> をインデックスを元にソートされた結果で置き換える	<name3> . sort_index ( inplace = True )	<name3> = <name3> . sort_index ( )
<name1> 内の <val4> と <val5> に重複があるのかどうかを表示する	<name1> . duplicated ( subset = [ <val4> , <val5> ] )	<name1> . duplicated ( subset = [ <val4> , <val5> ] )
表 <name6> のコラム <val4> に重複がある行を取り除かれた結果で置き換える	<name6> . drop_duplicates ( subset = <val4> , inplace = True )	<name6> = <name6> . drop_duplicates ( subset = <val4> )
<name5> 表のカラム名を <val1> から <val3> に <val2> から <val4> にリネームして、 <name5> に代入する	<name5> = <name5> . rename ( columns = { <val1> : <val3> , <val2> : <val4> } )	<name5> = <name5> . rename ( columns = { <val1> : <val3> , <val1> : <val4> } )
<name1> 表中の <val2> コラムに重複がある行を削除し、 <name1> にする	<name1> = <name1> . drop_duplicates ( subset = <val2> )	<name1> = <name1> . drop_duplicates ( subset = <val2> )
<name1> 表中の欠損が存在する行をドロップした結果で書き換える	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
<name2> 表中の欠損値を <name6> で置き換えた結果で置き換える	<name2> = <name2> . fillna ( <name6> )	<name2> = <name2> . fillna ( <name6> )
<name3> データフレームの <val6> カラムと <val1> カラムと <val5> カラムの箱ひげ図を一枚のグラフで描写する	plt . boxplot ( [ <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ <val5> ] ] )	plt . boxplot ( [ <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ <val5> ] ] )
<name2> 表の中の欠損を <name3> で埋め、再代入する	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
<name4> 内の欠損がある行をドロップした結果で書き換える	<name4> . dropna ( inplace = True )	<name4> . dropna ( inplace = True )
表 <name1> の欠損値がある行をドロップする	<name1> . dropna ( )	<name1> . dropna ( )
<name1> を <val4> という名前で CSV ファイルに出力する	<name1> . to_csv ( <val4> )	<name1> . to_csv ( <val4> )
<name5> 表の <val3> に <val4> コラムの名前を <val1> に <val6> コラムの名前をリネームされた結果を再代入する	<name5> = <name5> . rename ( columns = { <val4> : <val3> , <val6> : <val1> } )	<name5> = <name5> . rename ( columns = { <val4> : <val3> , <val6> : <val1> } )
昇順に <name6> 表全体を <val3> カラムでソートされた結果を <name5> にする	<name5> = <name6> . sort_values ( <val3> )	<name5> = <name6> . sort_values ( <val3> )
日付型に表 <name2> の列 <val6> を変換する	pd . to_datetime ( <name2> [ <val6> ] )	pd . to_datetime ( <name2> [ <val6> ] )
表 <name6> の中に存在する <val5> を欠損に置換した結果を <name6> とする	<name6> = <name6> . replace ( <val5> , np . nan )	<name6> = <name6> . replace ( <val5> , np . nan )
エクセルファイル <val1> のシート名 <val5> をデータフレームとして読み込み、 <name4> に代入する	<name4> = pd . read_excel ( <val1> , sheet_name = <val5> )	<name4> = pd . read_excel ( <val1> , sheet_name = <val5> )
<name6> 表を <val3> 列と <val4> カラムを軸に値が大きい順でソートして、 <name6> にする	<name6> = <name6> . sort_values ( [ <val3> , <val4> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val3> , <val4> ] , ascending = False )
エクセルファイル <val5> の全てのシートを表に読み込んだ結果を <name4> にする	<name4> = pd . read_excel ( <val5> , sheet_name = None )	<name4> = pd . read_excel ( <val5> , sheet_name = None )
表 <name6> 中の欠損値を表 <name6> の平均をとって埋める	<name6> . fillna ( <name6> . mean ( ) )	<name6> . fillna ( <name6> . mean ( ) )
<name1> 表を <val2> カラムを使って昇順でソートして、再代入する	<name1> = <name1> . sort_values ( <val2> )	<name1> = <name1> . sort_values ( <val2> )
インデックスを軸に <name5> 表を昇順でソートされた結果で置き換える	<name5> . sort_index ( inplace = True )	<name5> = <name5> . sort_index ( )
表 <name5> の列 <val3> を区関数を <name4> としてビンに含まれる個数が等しくなるように分割して、 <name6> に代入する	<name6> = pd . qcut ( <name5> [ <val3> ] , <name4> )	<name6> = pd . qcut ( <name5> [ <val3> ] , <name4> )
エンコーディングをシフト JIS で、 <val2> データを読み込んだ結果を <name6> に代入する	<name6> = pd . read_csv ( <val2> , encoding = 'shift_jis' )	<name6> = pd . read_csv ( <val2> , encoding = 'shift_jis' )
表 <name1> 中の未記入の値がある行を削除する	<name1> . dropna ( )	<name1> . dropna ( )
<val6> を <val4> 区切りで読む	pd . read_csv ( <val6> , sep = <val4> )	pd . read_csv ( <val6> , sep = <val4> )
<val1> 番目の列をインデックスに指定して、 <val2> を読んで、 <name6> とする	<name6> = pd . read_csv ( <val2> , index_col = <val1> )	<name6> = pd . read_csv ( <val2> , index_col = <val1> )
<name6> 表中の欠損を <name6> 表の平均値で埋めた結果を <name5> とする	<name5> = <name6> . fillna ( <name6> . mean ( ) )	<name5> = <name6> . fillna ( <name6> . mean ( ) )
表 <name5> をインデックスで並び替えた結果を <name5> に代入する	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
表 <name5> 内の重複要素がある行をドロップし、 <name3> にする	<name3> = <name5> . drop_duplicates ( )	<name3> = <name5> . drop_duplicates ( )
重複している最後の行を残して表 <name3> の中の重複している行を削除された結果を <name3> にする	<name3> = <name3> . drop_duplicates ( keep = False )	<name3> = <name3> . drop_duplicates ( keep = False )
表 <name3> のコラム <val2> を消された結果を <name5> に代入する	<name5> = <name3> . drop ( <val2> , axis = 1 )	<name5> = <name3> . drop ( <val2> , axis = 1 )
表 <name5> のコラム <val6> と <val3> を落とし、置き換える	<name5> = <name5> . drop ( [ <val6> , <val3> ] , axis = 1 )	<name5> = <name5> . drop ( [ <val6> , <val3> ] , axis = 1 )
<name4> 表の <val1> コラムについての統計情報	<name4> [ <val1> ] . describe ( )	<name4> [ <val1> ] . describe ( )
エクセルファイル <val2> を読み込まれた結果を <name1> とする	<name1> = pd . read_excel ( <val2> )	<name1> = pd . read_excel ( <val2> )
df 全体をインデックスを軸に小さい順でソートし、 <name3> に代入する	<name3> = df . sort_index ( )	<name3> = df . sort_index ( )
重複している最後の行を残して <name1> 表中の重複している行を削除した結果を <name3> に代入する	<name3> = <name1> . drop_duplicates ( keep = False )	<name3> = <name1> . drop_duplicates ( keep = False )
存在する <val1> を <name3> 中に欠損値に置換された結果でインプレースする	<name3> . replace ( <val1> , np . nan , inplace = True )	<name3> . replace ( <val1> , np . nan , inplace = True )
棒グラフの位置を真ん中として <name6> と <name4> の縦棒グラフを表示する	plt . bar ( <name6> , <name4> , align = 'center' )	plt . bar ( <name6> , <name4> , align = 'center' )
列名をセットしないでデータ <val2> を読み込んで、 <name4> に代入する	<name4> = pd . read_csv ( <val2> , header = None )	<name4> = pd . read_csv ( <val2> , header = None )
<name2> 中の列それぞれに存在する <val6> の数の合計値を確認する	<name2> . isin ( [ <val6> ] ) . sum ( )	<name2> . isin ( [ <val6> ] ) . sum ( )
エクセルファイル <val4> のシート名 <val3> をデータフレームに格納された結果を <name5> とする	<name5> = pd . read_excel ( <val4> , sheet_name = <val3> )	<name5> = pd . read_excel ( <val4> , sheet_name = <val3> )
<name2> 表内の NaN を <name2> 表の平均値で埋めた結果でインプレースする	<name2> . fillna ( <name2> . mean ( ) , inplace = True )	<name2> . fillna ( <name2> . mean ( ) , inplace = True )
<name2> の中の <val1> のダブっている行を取り除いた結果でインプレースする	<name2> . drop_duplicates ( subset = <val1> , inplace = True )	<name2> . drop_duplicates ( subset = <val1> , inplace = True )
表 <name1> をカラム <val5> を軸に昇順でソートした結果で置き換える	<name1> = <name1> . sort_values ( <val5> )	<name1> = <name1> . sort_values ( <val5> )
表 <name5> の中の欠損値がある部分に色をつける	<name5> . style . highlight_null ( )	<name5> . style . highlight_null ( )
表 <name3> の <val2> を欠損値とされた結果を <name4> とする	<name4> = <name3> . replace ( <val2> , np . nan )	<name4> = <name3> . replace ( <val2> , np . nan )
表 <name2> 中にある <val6> を未記入の値で置き換える	<name2> . replace ( <val6> , np . nan )	<name2> . replace ( <val6> , np . nan )
表 <name5> を <val3> というファイル名でエクセルに書き出す	<name5> . to_excel ( <val3> )	<name5> . to_excel ( <val3> )
ヘッダーを設定せずにデータ <val1> を読み込んだ結果を <name5> とする	<name5> = pd . read_csv ( <val1> , header = None )	<name5> = pd . read_csv ( <val1> , header = None )
横軸を <name5> とした <name2> の棒グラフを棒と棒の隙間を <val4> としてプロットする	plt . bar ( <name5> , <name2> , width = <val4> )	plt . bar ( <name5> , <name2> , width = <val4> )
円グラフの構成割合を小数点 2 位まで出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
<name6> の中の <val3> を欠損に置き換え欠損が存在する行を削除して、 <name6> とする	<name6> = <name6> . replace ( <val3> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val3> , np . nan ) . dropna ( )
<name6> の元々あったインデックスをリセットする	<name6> . reset_index ( drop = True )	<name6> . reset_index ( drop = True )
ビンの数を <name6> 、ビンのラベルをインデックスとして表 <name4> の列 <val1> を分割された結果を <name5> にする	<name5> = pd . cut ( <name4> [ <val1> ] , <name6> , label = False )	<name5> = pd . cut ( <name4> [ <val1> ] , <name6> , label = False )
ある <val3> を表 <name6> 中に未記入の値とした結果を <name6> とする	<name6> = <name6> . replace ( <val3> , np . nan )	<name6> = <name6> . replace ( <val3> , np . nan )
<name3> 表の欠損値がある行をドロップした結果でインプレースする	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
表 <name1> の中のコラム <val3> のダブる行を落とした結果で置き換える	<name1> = <name1> . drop_duplicates ( subset = <val3> )	<name1> = <name1> . drop_duplicates ( subset = <val3> )
表 <name1> 中の列に存在する <val6> の数	<name1> . isin ( [ <val6> ] ) . sum ( )	<name1> . isin ( [ <val6> ] ) . sum ( )
インデックスを元に表 <name3> を小さい順にソートされた結果でインプレースする	<name3> . sort_index ( inplace = True )	<name3> . sort_index ( inplace = True )
<name3> の <val6> を未入力の値で埋め、再代入する	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
表 <name6> をインデックスで順番になるようにソートし、置き換える	<name6> . sort_index ( inplace = True )	<name6> = <name6> . sort_index ( )
<name6> の <val4> 中の前後の行の差分を求める	<name6> [ <val4> ] . diff ( periods = 1 )	<name6> [ <val4> ] . diff ( periods = 1 )
<name5> 表中の <val6> コラムに重複がある行をドロップされた結果を再代入する	<name5> = <name5> . drop_duplicates ( subset = <val6> )	<name5> = <name5> . drop_duplicates ( subset = <val6> )
表 <name1> 中のコラム <val4> とカラム <val2> に重複はあるのかどうかを表示する	<name1> . duplicated ( subset = [ <val4> , <val2> ] )	<name1> . duplicated ( subset = [ <val4> , <val2> ] )
列 <val1> とカラム <val6> を元に表 <name2> 全体を降順でソートし、 <name2> にする	<name2> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )
存在する <val5> を <name1> 表の中に欠損に置換された結果で書き換える	<name1> . replace ( <val5> , np . nan , inplace = True )	<name1> . replace ( <val5> , np . nan , inplace = True )
<name6> 表と <name1> 表に対して <val2> 列をキーとしてデータをマージし、 <name3> に代入する	<name3> = pd . merge ( <name6> , <name1> , on = <val2> )	<name3> = pd . merge ( <name6> , <name1> , on = <val2> )
表 <name4> 中の未入力の値がある行を落とし、 <name6> とする	<name6> = <name4> . dropna ( )	<name6> = <name4> . dropna ( )
<name2> を柱状図にする	plt . hist ( <name2> )	plt . hist ( <name2> )
<val4> 行目までを見れるように変更する	pd . set_option ( 'display.max_rows' , <val4> )	pd . set_option ( 'display.max_rows' , <val4> )
透過率を <val3> にする	alpha = <val3>	alpha = <val3>
<name1> 中の <val6> を欠損値に変え欠損値が存在する行をドロップした結果で置き換える	<name1> = <name1> . replace ( <val6> , np . nan ) . dropna ( )	<name1> = <name1> . replace ( <val6> , np . nan ) . dropna ( )
<name3> 中の <val1> の重複している行を削除して、 <name3> とする	<name3> = <name3> . drop_duplicates ( subset = <val1> )	<name3> = <name3> . drop_duplicates ( subset = <val1> )
表 <name6> 中の欠損を直前の行の値で補った結果で置き換える	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
<name2> の <val3> を削除した結果を再代入する	<name2> = <name2> . drop ( <val3> , axis = 1 )	<name2> = <name2> . drop ( <val3> , axis = 1 )
<name1> の <val6> と <val2> と <val5> と <val4> を選択する	<name1> [ [ <val6> , <val2> , <val5> , <val4> ] ]	<name1> [ [ <val6> , <val2> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> , <val4> ] ]
横 <val1> 縦 <val4> に描画するグラフのサイズをセットする	plt . figure ( figsize = ( <val1> , <val4> ) )	plt . figure ( figsize = ( <val1> , <val4> ) )
<name4> 上の重複要素がある行を落とし、再代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name2> 表のインデックスをリセットセットして、元のインデックスを削除された結果で書き換える	<name2> . reset_index ( drop = True , inplace = True )	<name2> . reset_index ( drop = True , inplace = True )
<name6> の中にいくつ未記入の値がどの程度あるのか確認する	<name6> . isnull ( ) . sum ( )	<name6> . isnull ( ) . sum ( )
<name1> 表にある <val6> を未入力の値で埋めた結果を <name2> とする	<name2> = <name1> . replace ( <val6> , np . nan )	<name2> = <name1> . replace ( <val6> , np . nan )
列 <val6> とカラム <val5> を軸に表 <name1> を降順でソートする	<name1> . sort_values ( [ <val6> , <val5> ] , ascending = False )	<name1> . sort_values ( [ <val6> , <val5> ] , ascending = False )
表 <name1> の列 <val6> についてダミー変数をつくった結果を <name3> にする	<name3> = pd . get_dummies ( <name1> [ <val6> ] )	<name3> = pd . get_dummies ( <name1> [ <val6> ] )
<name3> を度数分布図で表示する	plt . hist ( <name3> )	plt . hist ( <name3> )
ダブる最後の行を残して <name3> 表の中の重複している行を落として、 <name3> にする	<name3> = <name3> . drop_duplicates ( keep = False )	<name3> = <name3> . drop_duplicates ( keep = False )
<name3> 表の <val5> コラムと <val4> を取り除いた結果を <name2> にする	<name2> = <name3> . drop ( [ <val5> , <val4> ] , axis = 1 )	<name2> = <name3> . drop ( [ <val5> , <val4> ] , axis = 1 )
<name6> 中のコラムに存在する <val2> の数	<name6> . isin ( [ <val2> ] ) . sum ( )	<name6> . isin ( [ <val2> ] ) . sum ( )
重複する最後の行を残して <name1> 上の重複している行を消した結果で置き換える	<name1> = <name1> . drop_duplicates ( keep = False )	<name1> = <name1> . drop_duplicates ( keep = False )
表 <name1> からデータ <val3> という名前で CSV ファイルにする	<name1> . to_csv ( <val3> )	<name1> . to_csv ( <val3> )
インデックスを軸に <name3> 全体を小さい順にソートした結果を再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
表として <val3> データを <val5> 区切りで読み、 <name1> とする	<name1> = pd . read_csv ( <val3> , sep = <val5> )	<name1> = pd . read_csv ( <val3> , sep = <val5> )
<name2> 軸を <name2> とした <name3> の縦向き棒グラフをグラフ幅を <val1> として出力する	plt . bar ( <name2> , <name3> , width = <val1> )	plt . bar ( <name2> , <name3> , width = <val1> )
<name4> 表の <val1> を欠損で埋めて、 <name6> とする	<name6> = <name4> . replace ( <val1> , np . nan )	<name6> = <name4> . replace ( <val1> , np . nan )
<name1> 内の NaN を消して、 <name2> にする	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
列番号 <val6> をインデックスと設定してデータ <val3> から表データを読み込む	pd . read_csv ( <val3> , index_col = <val6> )	pd . read_csv ( <val3> , index_col = <val6> )
表 <name6> の欠損を <name5> に変えられた結果で置き換える	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
列 <val6> とカラム <val3> で表 <name2> 全体を降順にソートした結果を <name2> とする	<name2> = <name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )
<name1> の中の <val6> と <val3> に重複があるのかどうか確認する	<name1> . duplicated ( subset = [ <val6> , <val3> ] )	<name1> . duplicated ( subset = [ <val6> , <val3> ] )
表 <name6> 上の未記入の値を <name3> で埋め、置き換える	<name6> = <name6> . fillna ( <name3> )	<name6> = <name6> . fillna ( <name3> )
左側のデータのインデックスと右側のデータの <val5> カラムをキーとして <name1> 表と <name4> 表をマージする	pd . merge ( <name1> , <name4> , left_index = True , right_on = <val5> )	pd . merge ( <name1> , <name4> , left_index = True , right_on = <val5> )
<name6> 全体をインデックスを元に小さい順にソートした結果を <name6> に代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name1> を <val2> というファイル名でエクセルファイルに書き込む	<name1> . to_excel ( <val2> )	<name1> . to_excel ( <val2> )
<val4> と <val5> が降順になるように <name6> をソートして、 <name3> に代入する	<name3> = <name6> . sort_values ( [ <val4> , <val5> ] , ascending = False )	<name3> = <name6> . sort_values ( [ <val4> , <val5> ] , ascending = False )
<val1> と <val5> を元に <name6> を逆順でソートし、 <name3> に代入する	<name3> = <name6> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name3> = <name6> . sort_values ( [ <val1> , <val5> ] , ascending = False )
<name4> 表の列の名前を <name3> に代入する	<name3> = <name4> . columns	<name3> = <name4> . columns
<name3> 表を <val6> カラムと <val5> コラムが値の大きい順になるようにソートし、置き換える	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )
<name3> 表内の <val2> コラムの重複している行を削除された結果を再代入する	<name3> = <name3> . drop_duplicates ( subset = <val2> )	<name3> = <name3> . drop_duplicates ( subset = <val2> )
表 <name3> にある欠損の個数	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
<name3> 表の <val1> 列と <val4> 列を降順にソートされた結果を <name5> にする	<name5> = <name3> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name5> = <name3> . sort_values ( [ <val1> , <val4> ] , ascending = False )
打点の輪郭の色は赤紫を使う	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
インデックスを元に <name1> 表をソートし、インプレースする	<name1> . sort_index ( inplace = True )	<name1> . sort_index ( inplace = True )
表 <name1> 上のダブっているデータを取得する	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
表 <name3> の <val4> にコラム <val2> の名前を <val5> にコラム <val6> の名前をリネームして、 <name1> に代入する	<name1> = <name3> . rename ( columns = { <val2> : <val4> , <val6> : <val5> } )	<name1> = <name3> . rename ( columns = { <val2> : <val4> , <val6> : <val5> } )
<name2> を転置する	<name2> . T	<name2> . T
ある <val2> を <name6> 表の中に未記入の値で置き換えた結果を <name6> に代入する	<name6> = <name6> . replace ( <val2> , np . nan )	<name6> = <name6> . replace ( <val2> , np . nan )
<name4> 表の <val3> 列をビンの数を <name6> 、ビンのラベルを整数値として分割して、 <name5> とする	<name5> = pd . cut ( <name4> [ <val3> ] , <name6> , label = False )	<name5> = pd . cut ( <name4> [ <val3> ] , <name6> , label = False )
エクセルファイル <val4> の <val2> 番目のシートを指定して読み込み、 <name5> に代入する	<name5> = pd . read_excel ( <val4> , sheet_name = <val2> )	<name5> = pd . read_excel ( <val4> , sheet_name = <val2> )
<name1> 表上の NaN の和をチェックする	<name1> . isnull ( ) . sum ( )	<name1> . isnull ( ) . sum ( )
<name1> と <name3> を縦向きで結合した結果を <name2> にする	<name2> = pd . concat ( [ <name1> , <name3> ] )	<name2> = pd . concat ( [ <name1> , <name3> ] )
<name5> 表中の未記入の値を <name3> に置換して、インプレースする	<name5> . fillna ( <name3> , inplace = True )	<name5> . fillna ( <name3> , inplace = True )
マーカーの形状の色を黄色とする	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
表 <name5> 中の重複した行をドロップする	<name5> . drop_duplicates ( )	<name5> . drop_duplicates ( )
<name6> の度数分布図を出力する	plt . hist ( <name6> )	plt . hist ( <name6> )
列名を設定しないで <val2> データを読んで、 <name4> に代入する	<name4> = pd . read_csv ( <val2> , header = None )	<name4> = pd . read_csv ( <val2> , header = None )
<val1> 列と <val4> カラムを元に <name3> 表を値が大きい順でソートして、再代入する	<name3> = <name3> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val1> , <val4> ] , ascending = False )
<name4> 上の未記入の値を直前の行の値で補って、置き換える	<name4> . fillna ( method = 'ffill' , inplace = True )	<name4> = <name4> . fillna ( method = 'ffill' )
ヘッダーをセットせずに <val4> を読み込む	pd . read_csv ( <val4> , header = None )	pd . read_csv ( <val4> , header = None )
<name5> 表中の <val6> コラムに重複があるのかどうかを見る	<name5> . duplicated ( subset = <val6> )	<name5> . duplicated ( subset = <val6> )
表 <name3> の中の欠損を <name2> に置き換える	<name3> . fillna ( <name2> )	<name3> . fillna ( <name2> )
<name5> 中の <val2> に重複がある行をドロップして、インプレースする	<name5> . drop_duplicates ( subset = <val2> , inplace = True )	<name5> . drop_duplicates ( subset = <val2> , inplace = True )
<name3> 中の未記入の値がある行を落とした結果で置き換える	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
一気に <name3> データフレームの <val2> カラムと <val4> カラムと <val1> カラムについて関係性をプロットする	sns . pairplot ( <name3> [ [ <val2> , <val4> , <val1> ] ] )	sns . pairplot ( <name3> [ [ <val2> , <val4> , <val1> ] ] ] )
<name1> 表上で重複しているデータ	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
列番号 <val2> をインデックスとセットして <val5> から表データを読む	pd . read_csv ( <val5> , index_col = <val2> )	pd . read_csv ( <val5> , index_col = <val2> )
表 <name3> についてダミー変数を作成する	pd . get_dummies ( <name3> )	pd . get_dummies ( <name3> )
列番号 <val6> をインデックスとセットして <val1> を表データに格納し、 <name3> にする	<name3> = pd . read_csv ( <val1> , index_col = <val6> )	<name3> = pd . read_csv ( <val1> , index_col = <val6> )
<val6> から <val1> に <name2> の列名を変える	<name2> . rename ( columns = { <val6> : <val1> } )	<name2> . rename ( columns = { <val6> : <val1> } )
<name4> 全体をインデックスに基づいて昇順でソートし、再代入する	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
両方の列を使って表 <name2> と表 <name1> をマージし、 <name3> にする	<name3> = pd . merge ( <name2> , <name1> , how = 'outer' )	<name3> = pd . merge ( <name2> , <name1> , how = 'outer' )
表 <name1> 中の欠損を表 <name1> の平均をとって埋められた結果を <name1> にする	<name1> = <name1> . fillna ( <name1> . mean ( ) )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
<name5> 表をインデックスを元にソートした結果を <name3> にする	<name3> = <name5> . sort_index ( )	<name3> = <name5> . sort_index ( )
プロットした図を <val2> というファイル名にして出力する	plt . savefig ( <val2> )	plt . savefig ( <val2> )
<name5> の <val1> のそれぞれのデータの出現頻度	<name5> [ <val1> ] . value_counts ( )	<name5> [ <val1> ] . value_counts ( )
ある行を <name4> 表上の未入力の値が消して、 <name1> とする	<name1> = <name4> . dropna ( )	<name1> = <name4> . dropna ( )
打点の色を青とする	markerfacecolor = 'blue'	markerfacecolor = 'blue'
<name4> の行の重複を検出する	<name4> . duplicated ( )	<name4> . duplicated ( )
表 <name1> をインデックスに基づき昇順でソートする	<name1> . sort_index ( )	<name1> . sort_index ( )
表 <name4> を列 <val6> とカラム <val2> を軸に逆順でソートする	<name4> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name4> . sort_values ( [ <val6> , <val2> ] , ascending = False )
<name4> の <val1> の中の前後の行の差分を <name6> にする	<name6> = <name4> [ <val1> ] . diff ( periods = 1 )	<name6> = <name4> [ <val1> ] . diff ( periods = 1 )
<name6> 表の <val2> 列の曜日を確認する	<name6> [ <val2> ] . dt . weekday_name	<name6> [ <val2> ] . dt . weekday_name
<name5> 表の <val1> カラムの要素を調べる	<name5> [ <val1> ] . values	<name5> [ <val1> ] . values
<name2> の <val3> を未記入の値で置き換えて、 <name1> に代入する	<name1> = <name2> . replace ( <val3> , np . nan )	<name1> = <name2> . replace ( <val3> , np . nan )
データ <val3> に表 <name4> を設定して保存する	<name4> . to_csv ( <val3> )	<name4> . to_csv ( <val3> )
列 <val2> とカラム <val4> を元に表 <name6> 全体を降順でソートする	<name6> . sort_values ( [ <val2> , <val4> ] , ascending = False )	<name6> . sort_values ( [ <val2> , <val4> ] , ascending = False )
<name6> 表全体を昇順に <val4> カラムでソートして、置き換える	<name6> = <name6> . sort_values ( <val4> )	<name6> = <name6> . sort_values ( <val4> )
CSV ファイル <val1> をカンマ区切りで読み込む	pd . read_csv ( <val1> , sep = ',' )	pd . read_csv ( <val1> , sep = ',' )
マーカーの種類をバツとする	marker = 'x'	marker = 'x'
表 <name3> の <val4> を欠損値に置換した結果で置き換える	<name3> = <name3> . replace ( <val4> , np . nan )	<name3> = <name3> . replace ( <val4> , np . nan )
<name3> 表内の <val4> を欠損値に置き換え欠損値が存在する行をドロップされた結果で書き換える	<name3> . replace ( <val4> , np . nan ) . dropna ( inplace = True )	<name3> . replace ( <val4> , np . nan ) . dropna ( inplace = True )
<name1> 全体を <val6> と <val2> を軸に逆順でソートし、再代入する	<name1> = <name1> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val6> , <val2> ] , ascending = False )
エクセルファイル <val1> を表に読み込む	pd . read_excel ( <val1> )	pd . read_excel ( <val1> )
ある行を <name1> の中の未入力の値が削除し、 <name1> に代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
ある <val3> を <name4> の中に未記入の値で埋め、置き換える	<name4> = <name4> . replace ( <val3> , np . nan )	<name4> = <name4> . replace ( <val3> , np . nan )
<name4> の中の重複している行を削除された結果を <name4> に代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name2> 表の欠損が存在する行を取り除かれた結果を <name5> とする	<name5> = <name2> . dropna ( )	<name5> = <name2> . dropna ( )
<name3> のダブるデータをえる	<name3> [ <name3> . duplicated ( ) ]	<name3> [ <name3> . duplicated ( ) ]
エクセルファイル <val6> の全てのシートを表データに読む	pd . read_excel ( <val6> , sheet_name = None )	pd . read_excel ( <val6> , sheet_name = None )
<name2> 表内で重複しているデータ	<name2> [ <name2> . duplicated ( ) ]	<name2> [ <name2> . duplicated ( ) ]
昇順に <name2> 表全体を <val1> カラムでソートして、インプレースする	<name2> . sort_values ( <val1> , inplace = True )	<name2> . sort_values ( <val1> , inplace = True )
<val1> から <val2> に <name4> の列名をリネームされた結果で置き換える	<name4> = <name4> . rename ( columns = { <val1> : <val2> } )	<name4> = <name4> . rename ( columns = { <val1> : <val2> } )
<name5> の <val4> を消し、 <name5> とする	<name5> = <name5> . drop ( <val4> , axis = 1 )	<name5> = <name5> . drop ( <val4> , axis = 1 )
表 <name4> のそれぞれの列に存在する <val2> の数の合計をチェックする	<name4> . isin ( [ <val2> ] ) . sum ( )	<name4> . isin ( [ <val2> ] ) . sum ( )
<name3> の列の名前を <val6> から <val4> に <val5> から <val2> にリネームし、インプレースする	<name3> . rename ( columns = { <val5> : <val2> , <val6> : <val4> } , inplace = True )	<name3> . rename ( columns = { <val6> : <val2> , <val6> : <val2> } , inplace = True )
列 <val3> とカラム <val4> を軸に表 <name6> を逆順でソートされた結果を <name2> とする	<name2> = <name6> . sort_values ( [ <val3> , <val4> ] , ascending = False )	<name2> = <name6> . sort_values ( [ <val3> , <val4> ] , ascending = False )
<name2> 表の中の重複している行を削除し、 <name4> にする	<name4> = <name2> . drop_duplicates ( )	<name4> = <name2> . drop_duplicates ( )
<name5> を <val2> というファイル名でエクセルファイルに書き出す	<name5> . to_excel ( <val2> )	<name5> . to_excel ( <val2> )
<name2> 表の <val5> コラムをインデックスにした結果を <name2> にする	<name2> = <name2> . set_index ( <val5> )	<name2> = <name2> . set_index ( <val5> )
<name3> の中の未入力の値がある行を落とされた結果を再代入する	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
<name3> についてダミー変数をつくり、 <name4> にする	<name4> = pd . get_dummies ( <name3> )	<name4> = pd . get_dummies ( <name3> )
<name4> 表の中の NaN がある行を取り除く	<name4> . dropna ( )	<name4> . dropna ( )
表 <name2> 内の NaN を <name3> に置き換えられた結果で置き換える	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
<name5> の <val2> が <val4> または <val6> のデータ	<name5> [ <name5> [ <val2> ] . isin ( [ <val4> , <val6> ] ) ]	<name5> [ <name5> [ <val2> ] . isin ( [ <val4> , <val6> ] ) ]
<name6> 表のインデックスを振り直して、元のインデックスを削除した結果を再代入する	<name6> = <name6> . reset_index ( drop = True )	<name6> = <name6> . reset_index ( drop = True )
<name2> 中の <val1> と <val3> に重複はあるのかどうか確認	<name2> . duplicated ( subset = [ <val1> , <val3> ] )	<name2> . duplicated ( subset = [ <val1> , <val3> ] )
表 <name1> 内のコラム <val5> の重複した行をドロップし、 <name1> とする	<name1> = <name1> . drop_duplicates ( subset = <val5> )	<name1> = <name1> . drop_duplicates ( subset = <val5> )
エクセルファイル <val1> から表を読む	pd . read_excel ( <val1> )	pd . read_excel ( <val1> )
線グラフの種類は垂直棒グラフを用いる	kind = 'bar'	kind = 'bar'
<name5> 表の中の重複要素がある行を落とし、 <name5> にする	<name5> = <name5> . drop_duplicates ( )	<name5> = <name5> . drop_duplicates ( )
<val5> という名前で描画したグラフをセーブする	plt . savefig ( <val5> )	plt . savefig ( <val5> )
データ <val2> に表 <name1> をする	<name1> . to_csv ( <val2> )	<name1> . to_csv ( <val2> )
<name5> 表中の <val3> コラムに重複がある行をドロップし、 <name5> にする	<name5> = <name5> . drop_duplicates ( subset = <val3> )	<name5> = <name5> . drop_duplicates ( subset = <val3> )
<name1> 全体を <val5> と <val6> を軸に降順でソートする	<name1> . sort_values ( [ <val5> , <val6> ] , ascending = False )	<name1> . sort_values ( [ <val5> , <val6> ] , ascending = False )
<name3> 表の欠損値がある行をドロップして、 <name5> とする	<name5> = <name3> . dropna ( )	<name5> = <name3> . dropna ( )
<name1> 表をインデックスに沿って昇順でソートする	<name1> . sort_index ( )	<name1> . sort_index ( )
<val2> に <name6> 全体を基づいて昇順でソートし、 <name6> にする	<name6> = <name6> . sort_values ( <val2> )	<name6> = <name6> . sort_values ( <val2> )
表 <name1> 中の <val2> を欠損に置き換え欠損が存在する行を削除された結果で置き換える	<name1> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name1> = <name1> . replace ( <val2> , np . nan ) . dropna ( )
存在する <val5> を <name1> 表内に欠損値で埋められた結果で書き換える	<name1> . replace ( <val5> , np . nan , inplace = True )	<name1> . replace ( <val5> , np . nan , inplace = True )
<name5> の <val4> に <val2> の名前を <val6> に <val1> の名前をリネームした結果を <name5> にする	<name5> = <name5> . rename ( columns = { <val2> : <val4> , <val1> : <val6> } )	<name5> = <name5> . rename ( columns = { <val2> : <val4> , <val1> : <val6> } )
表 <name3> の中の <val1> を未入力の値に変え未入力の値がある行を取り除いた結果で置き換える	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )
表 <name5> の <val6> を欠損値として、再代入する	<name5> = <name5> . replace ( <val6> , np . nan )	<name5> = <name5> . replace ( <val6> , np . nan )
<name3> 表の中のダブるデータを抽出する	<name3> [ <name3> . duplicated ( ) ]	<name3> [ <name3> . duplicated ( ) ]
<val2> 列と <val5> カラムで <name3> 表を降順にソートされた結果を <name3> にする	<name3> = <name3> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val2> , <val5> ] , ascending = False )
<val4> から <val3> に表 <name6> の列名を変更し、 <name2> とする	<name2> = <name6> . rename ( columns = { <val4> : <val3> } )	<name2> = <name6> . rename ( columns = { <val4> : <val3> } )
<val4> 列に最大表示列数をする	pd . set_option ( 'display.max_columns' , <val4> )	pd . set_option ( 'display.max_columns' , <val4> )
表 <name4> 上のコラム <val5> の重複する行を消して、書き換える	<name4> . drop_duplicates ( subset = <val5> , inplace = True )	<name4> . drop_duplicates ( subset = <val5> , inplace = True )
ある行を <name1> 表の欠損が取り除き、置き換える	<name1> . dropna ( inplace = True )	<name1> = <name1> . dropna ( )
表 <name5> のコラム <val4> をドロップした結果で置き換える	<name5> . drop ( <val4> , axis = 1 , inplace = True )	<name5> = <name5> . drop ( <val4> , axis = 1 )
<name3> 表中の欠損値が含まれる部分を色付けする	<name3> . style . highlight_null ( )	<name3> . style . highlight_null ( )
フォーマットを指定して <name5> 表の <val2> 列を datetime 型に変換する	pd . to_datetime ( <name5> [ <val2> ] , format = '%Y-%m-%d' )	pd . to_datetime ( <name5> [ <val2> ] , format = '%Y-%d' )
<name2> 表の未入力の値を取り除いた結果を <name2> とする	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name5> の中の欠損を <name2> に置換した結果を <name5> とする	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name5> 表の未入力の値がある行を取り除いた結果を <name5> にする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<name3> 表の <val6> を未入力の値に変え未入力の値がある行を取り除いて、 <name5> に代入する	<name5> = <name3> . replace ( <val6> , np . nan ) . dropna ( )	<name5> = <name3> . replace ( <val6> , np . nan ) . dropna ( )
<name1> 表の <val3> コラムと <val6> を取り除く	<name1> . drop ( [ <val3> , <val6> ] , axis = 1 )	<name1> . drop ( [ <val3> , <val6> ] , axis = 1 )
エクセルデータ <val5> を表に読まれた結果を <name3> にする	<name3> = pd . read_excel ( <val5> )	<name3> = pd . read_excel ( <val5> )
<name5> 内のインデックスが <val4> の行	<name5> . loc [ <val4> ]	<name5> . loc [ <val4> ]
表 <name1> をインデックスどおりに昇順でソートした結果を <name5> とする	<name5> = <name1> . sort_index ( )	<name5> = <name1> . sort_index ( )
<name4> 表と <name3> 表を左側のデータのインデックスと <val6> カラムをキーとしてマージし、 <name2> とする	<name2> = pd . merge ( <name4> , <name3> , left_index = True , right_on = <val6> )	<name2> = pd . merge ( <name4> , <name3> , left_index = True , right_on = <val6> )
表 <name5> をエクセルファイル <val1> という名前にセットして書き出す	<name5> . to_excel ( <val1> )	<name5> . to_excel ( <val1> )
重複した最後の行を残して <name5> 表内の重複している行をドロップした結果を再代入する	<name5> = <name5> . drop_duplicates ( keep = False )	<name5> = <name5> . drop_duplicates ( keep = False )
<val4> カラムと <val3> コラムが逆順になるように <name6> 表をソートした結果で置き換える	<name6> = <name6> . sort_values ( [ <val4> , <val3> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val4> , <val3> ] , ascending = False )
横軸の軸の名前を <val2> にする	plt . xlabel ( <val2> )	plt . xlabel ( <val2> )
エクセル <val1> を表データに読み込んで、 <name4> とする	<name4> = pd . read_excel ( <val1> )	<name4> = pd . read_excel ( <val1> )
<name5> と <name1> を 1 つにまとめる	pd . merge ( <name5> , <name1> )	pd . merge ( <name5> , <name1> )
<name4> 表内の NaN を <name2> とし、再代入する	<name4> = <name4> . fillna ( <name2> )	<name4> = <name4> . fillna ( <name2> )
表 <name4> 中のカラムに存在する <val1> の個数	<name4> . isin ( [ <val1> ] ) . sum ( )	<name4> . isin ( [ <val1> ] ) . sum ( )
<name5> の <val4> をビンの数を <name2> 、ビンのラベルを整数値として分割された結果を <name1> に代入する	<name1> = pd . cut ( <name5> [ <val4> ] , <name2> , label = False )	<name1> = pd . cut ( <name5> [ <val4> ] , <name2> , label = False )
インデックスを軸に表 <name1> 全体を小さい順にソートされた結果を <name1> に代入する	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
列番号 <val2> をインデックスに <val1> データから読んだ結果を <name3> とする	<name3> = pd . read_csv ( <val1> , index_col = <val2> )	<name3> = pd . read_csv ( <val1> , index_col = <val2> )
<name5> の中の重複した行	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
<name2> の <val1> を欠損値で補う	<name2> . replace ( <val1> , np . nan )	<name2> . replace ( <val1> , np . nan )
表 <name5> 内の NaN を <name2> とした結果を <name5> とする	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name3> 中に欠損値があるか数える	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
<name2> 表の <val3> を NaN で置換した結果を <name5> にする	<name5> = <name2> . replace ( <val3> , np . nan )	<name5> = <name2> . replace ( <val3> , np . nan )
<val3> という名前のエクセルファイルの <val2> をデータフレームとして読み込む	pd . read_excel ( <val3> , sheet_name = <val2> )	pd . read_excel ( <val3> , sheet_name = <val2> )
ある <val2> を <name5> 表中に未記入の値に置き換えられた結果を <name1> とする	<name1> = <name5> . replace ( <val2> , np . nan )	<name1> = <name5> . replace ( <val2> , np . nan )
<name4> 表を <val6> データという名前で CSV として出力する	<name4> . to_csv ( <val6> )	<name4> . to_csv ( <val6> )
表 <name6> の欠損を <name1> にして、 <name3> にする	<name3> = <name6> . fillna ( <name1> )	<name3> = <name6> . fillna ( <name1> )
表 <name3> 内の NaN を <name6> として、 <name5> にする	<name5> = <name3> . fillna ( <name6> )	<name5> = <name3> . fillna ( <name6> )
<name5> の重複要素がある行を取り除く	<name5> . drop_duplicates ( )	<name5> . drop_duplicates ( )
<name2> を <val1> と <val4> を軸に降順でソートし、 <name2> に代入する	<name2> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )
<name6> 表の <val2> コラムと <val3> カラムごとの <val4> コラムの値の数を求める	<name6> . groupby ( [ <val2> , <val3> ] ) [ <val4> ] . sum ( )	<name6> . groupby ( [ <val2> , <val3> ] ) [ <val4> ] . sum ( )
昇順にカラム <val6> で表 <name1> 全体をソートし、置き換える	<name1> . sort_values ( <val6> , inplace = True )	<name1> = <name1> . sort_values ( <val6> )
マーカーの種類の色は赤を使う	markerfacecolor = 'red'	markerfacecolor = 'red'
<val2> という名前のエクセルファイルをデータフレームとして読み込む	pd . read_excel ( <val2> )	pd . read_excel ( <val2> )
<name1> のカラム名を <val2> から <val5> に <val6> から <val3> にリネームした結果を再代入する	<name1> = <name1> . rename ( columns = { <val2> : <val5> , <val6> : <val3> } )	<name1> = <name1> . rename ( columns = { <val2> : <val5> , <val6> : <val5> } )
表 <name3> のコラム <val4> をインデックスに指定して、置き換える	<name3> = <name3> . set_index ( <val4> )	<name3> = <name3> . set_index ( <val4> )
<name4> のインデックス名を <val6> から <val2> にリネームした結果を <name1> とする	<name1> = <name4> . rename ( index = { <val6> : <val2> } )	<name1> = <name4> . rename ( index = { <val6> : <val2> } )
<val2> から <val6> に <name5> 表の行名をリネームして、インプレースする	<name5> . rename ( index = { <val2> : <val6> } , inplace = True )	<name5> . rename ( index = { <val2> : <val6> } , inplace = True )
表 <name3> をカラム <val1> とコラム <val2> が逆順になるようにソートした結果を再代入する	<name3> = <name3> . sort_values ( [ <val1> , <val2> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val1> , <val2> ] , ascending = False )
エクセルファイル <val3> のシート名 <val4> を指定して読む	pd . read_excel ( <val3> , sheet_name = <val4> )	pd . read_excel ( <val3> , sheet_name = <val4> )
目印をアスタリスクとする	marker = '*'	marker = '*'
<name6> 表の <val1> コラム上の前後の行の差分	<name6> [ <val1> ] . diff ( periods = 1 )	<name6> [ <val1> ] . diff ( periods = 1 )
<val2> に <name5> を基づいて昇順でソートして、書き換える	<name5> . sort_values ( <val2> , inplace = True )	<name5> . sort_values ( <val2> , inplace = True )
<name2> の列名を <val4> から <val5> に <val3> から <val6> にリネームする	<name2> . rename ( columns = { <val3> : <val6> , <val4> : <val5> } )	<name2> . rename ( columns = { <val4> : <val5> , <val4> : <val6> } )
<name5> の中の <val1> を未記入の値に変え未記入の値がある行を落とし、再代入する	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )
インデックスを元に <name5> 表全体を小さい順でソートした結果でインプレースする	<name5> . sort_index ( inplace = True )	<name5> . sort_index ( inplace = True )
存在する <val2> を <name4> 中に欠損値で補って、 <name3> にする	<name3> = <name4> . replace ( <val2> , np . nan )	<name3> = <name4> . replace ( <val2> , np . nan )
<name1> 表の <val3> を未入力の値で補い、 <name1> とする	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
グラフ線のスタイルは破線と点線を使用する	linestyle = 'dashbot'	linestyle = 'dashbot'
<name2> をインデックスで順番になるようにソートした結果を再代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name5> の元のインデックスをリセットして、置き換える	<name5> . reset_index ( drop = True , inplace = True )	<name5> = <name5> . reset_index ( drop = True )
表 <name6> のコラム <val3> についての要約統計量を取得する	<name6> [ <val3> ] . describe ( )	<name6> [ <val3> ] . describe ( )
<name5> 表と <name1> 表を 1 つにまとめる	pd . merge ( <name5> , <name1> )	pd . merge ( <name5> , <name1> )
CSV ファイル <val1> をカンマ区切りで読み込んで、 <name5> とする	<name5> = pd . read_csv ( <val1> , sep = ',' )	<name5> = pd . read_csv ( <val1> , sep = ',' )
<name4> 上でダブっているデータを得る	<name4> [ <name4> . duplicated ( ) ]	<name4> [ <name4> . duplicated ( ) ]
表 <name5> で重複しているデータをえる	<name5> [ <name5> . duplicated ( ) ]	<name5> [ <name5> . duplicated ( ) ]
<name5> 表の数値データ以外の統計的な情報	<name5> . describe ( include = 'O' )	<name5> . describe ( include = 'O' )
ある <val6> を <name1> の中に未記入の値で置き換える	<name1> . replace ( <val6> , np . nan )	<name1> . replace ( <val6> , np . nan )
表 <name1> 上に重複があるのかどうか確認する	<name1> . duplicated ( )	<name1> . duplicated ( )
<name3> 内の欠損値を含む行をドロップした結果でインプレースする	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
<name2> と <name4> を縦にマージを <name6> に代入する	<name6> = pd . concat ( [ <name2> , <name4> ] )	<name6> = pd . concat ( [ <name2> , <name4> ] )
表 <name6> の列の名前を <val2> から <val5> にリネームし、インプレースする	<name6> . rename ( columns = { <val2> : <val5> } , inplace = True )	<name6> . rename ( columns = { <val2> : <val5> } , inplace = True )
<name3> 中の未記入の値を <name2> で置き換え、置き換える	<name3> = <name3> . fillna ( <name2> )	<name3> = <name3> . fillna ( <name2> )
表 <name3> の NaN を <name1> にし、 <name6> にする	<name6> = <name3> . fillna ( <name1> )	<name6> = <name3> . fillna ( <name1> )
円グラフ内に示す小数点以下 2 桁までの数値を割合をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
<name5> 表の中の欠損を <name3> とされた結果を再代入する	<name5> = <name5> . fillna ( <name3> )	<name5> = <name5> . fillna ( <name3> )
その行名	. index	. index
<name4> 表の未入力の値を <name5> とし、 <name4> に代入する	<name4> = <name4> . fillna ( <name5> )	<name4> = <name4> . fillna ( <name5> )
マーカーの種類の輪郭の色は水色を使う	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
列名をセットしないで <val3> データを読み込まれた結果を <name4> とする	<name4> = pd . read_csv ( <val3> , header = None )	<name4> = pd . read_csv ( <val3> , header = None )
<name1> 表の中の <val5> コラムのダブっている行を取り除き、置き換える	<name1> . drop_duplicates ( subset = <val5> , inplace = True )	<name1> = <name1> . drop_duplicates ( subset = <val5> )
表 <name2> にある <val5> を未入力の値で置き換え、 <name2> に代入する	<name2> = <name2> . replace ( <val5> , np . nan )	<name2> = <name2> . replace ( <val5> , np . nan )
カラム <val4> に表 <name3> を基づいて昇順でソートした結果で置き換える	<name3> = <name3> . sort_values ( <val4> )	<name3> = <name3> . sort_values ( <val4> )
<name6> の <val2> を区関数を <name4> 、ビンの名前をインデックスとして分割する	pd . cut ( <name6> [ <val2> ] , <name4> , label = False )	pd . cut ( <name6> [ <val2> ] , <name4> , label = False )
存在する行を表 <name1> 中の欠損がドロップして、 <name1> に代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<name3> の数値じゃないデータを数値データに変換した結果を <name1> とする	<name1> = pd . get_dummies ( <name3> )	<name1> = pd . get_dummies ( <name3> )
<name4> をインデックスで値が小さい順に並び替えて、再代入する	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
<name1> 表についてダミー変数を作成する	pd . get_dummies ( <name1> )	pd . get_dummies ( <name1> )
<name1> 内の欠損がある行を削除し、再代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<val3> から <val5> に表 <name1> の列の名前を変更した結果でインプレースする	<name1> . rename ( columns = { <val3> : <val5> } , inplace = True )	<name1> . rename ( columns = { <val3> : <val5> } , inplace = True )
列 <val1> とカラム <val5> で表 <name3> を降順にソートした結果を <name3> とする	<name3> = <name3> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val1> , <val5> ] , ascending = False )
表 <name4> 内のコラム <val1> に重複がある行をドロップする	<name4> . drop_duplicates ( subset = <val1> )	<name4> . drop_duplicates ( subset = <val1> )
<name4> 中に存在する <val1> を欠損値に置換した結果でインプレースする	<name4> . replace ( <val1> , np . nan , inplace = True )	<name4> . replace ( <val1> , np . nan , inplace = True )
<name4> 表を <val2> 列と <val3> カラムを軸に降順でソートした結果を再代入する	<name4> = <name4> . sort_values ( [ <val2> , <val3> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val2> , <val3> ] , ascending = False )
<name1> 表中の <val3> コラムの重複している行を削除する	<name1> . drop_duplicates ( subset = <val3> )	<name1> . drop_duplicates ( subset = <val3> )
<name4> 表の NaN を <name3> に変えて、書き換える	<name4> . fillna ( <name3> , inplace = True )	<name4> . fillna ( <name3> , inplace = True )
<name6> の <val3> を NaN で埋めて、置き換える	<name6> = <name6> . replace ( <val3> , np . nan )	<name6> = <name6> . replace ( <val3> , np . nan )
<name3> 中のそれぞれのコラムに存在する <val2> の数の和	<name3> . isin ( [ <val2> ] ) . sum ( )	<name3> . isin ( [ <val2> ] ) . sum ( )
<val5> というエクセルファイルのシート名 <val3> を読み込んだ結果を <name4> とする	<name4> = pd . read_excel ( <val5> , sheet_name = <val3> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val3> )
<name4> の <val3> についての平均値を見る	<name4> [ <val3> ] . mean ( )	<name4> [ <val3> ] . mean ( )
<val3> と <val1> が逆順になるように <name4> 全体をソートする	<name4> . sort_values ( [ <val3> , <val1> ] , ascending = False )	<name4> . sort_values ( [ <val3> , <val1> ] , ascending = False )
表 <name6> と表 <name4> を結合して、 <name2> にする	<name2> = pd . concat ( [ <name6> , <name4> ] )	<name2> = pd . concat ( [ <name6> , <name4> ] )
元のインデックスを削除してから、 <name2> 表のインデックスをリセットする	<name2> . reset_index ( drop = True )	<name2> . reset_index ( drop = True )
<name3> の <val5> をインデックスとしてセットした結果でインプレースする	<name3> . set_index ( <val5> , inplace = True )	<name3> . set_index ( <val5> , inplace = True )
<name6> の <val2> を削除し、書き換える	<name6> . drop ( <val2> , axis = 1 , inplace = True )	<name6> . drop ( <val2> , axis = 1 , inplace = True )
表 <name6> 中の <val5> を欠損値に変え欠損値が存在する行をドロップする	<name6> . replace ( <val5> , np . nan ) . dropna ( )	<name6> . replace ( <val5> , np . nan ) . dropna ( )
目印の輪郭の色を水色とする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
表 <name4> の <val6> を未入力の値にした結果を再代入する	<name4> = <name4> . replace ( <val6> , np . nan )	<name4> = <name4> . replace ( <val6> , np . nan )
表 <name1> 中の欠損を <name4> とされた結果を <name1> とする	<name1> = <name1> . fillna ( <name4> )	<name1> = <name1> . fillna ( <name4> )
<name4> 表を <val2> データというファイル名で	<name4> . to_csv ( <val2> )	<name4> . to_csv ( <val2> )
円グラフの中に割合を小数点以下 2 桁までのパーセント表記で表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
<name3> 表と <name1> 表を結合して、 <name5> にする	<name5> = pd . concat ( [ <name3> , <name1> ] )	<name5> = pd . concat ( [ <name3> , <name1> ] )
<val5> にグラフの y 軸のラベルをセットする	plt . ylabel ( <val5> )	plt . ylabel ( <val5> )
<name6> 表に重複があるのかどうか	<name6> . duplicated ( )	<name6> . duplicated ( )
バツ印のマーカーの形を使用する	marker = 'x'	marker = 'x'
X を縦軸、 Y を横軸と設定して、折れ線グラフをプロットする	plt . plot ( X , Y )	plt . plot ( X , Y )
<name3> 上の重複する行を消す	<name3> . drop_duplicates ( )	<name3> . drop_duplicates ( )
<name5> 表中の欠損を <name6> で埋めた結果でインプレースする	<name5> . fillna ( <name6> , inplace = True )	<name5> . fillna ( <name6> , inplace = True )
存在する <val4> を <name2> 表の中に欠損で置換した結果を <name5> にする	<name5> = <name2> . replace ( <val4> , np . nan )	<name5> = <name2> . replace ( <val4> , np . nan )
<name5> 表内の欠損値を <name2> で置き換えた結果を再代入する	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name5> 表内の NaN を <name3> に置き換えた結果で置き換える	<name5> . fillna ( <name3> , inplace = True )	<name5> = <name5> . fillna ( <name3> )
表データをデータ <val4> からタブ区切りで読んだ結果を <name1> にする	<name1> = pd . read_csv ( <val4> , sep = '\t' )	<name1> = pd . read_csv ( <val4> , sep = '\t' )
<name4> 表の中の未記入の値がある行を削除して、 <name6> に代入する	<name6> = <name4> . dropna ( )	<name6> = <name4> . dropna ( )
<name5> 表内のコラムそれぞれにある <val3> の個数の合計値をチェックする	<name5> . isin ( [ <val3> ] ) . sum ( )	<name5> . isin ( [ <val3> ] ) . sum ( )
ある <val3> を <name2> に未入力の値に置き換えた結果を <name2> にする	<name2> = <name2> . replace ( <val3> , np . nan )	<name2> = <name2> . replace ( <val3> , np . nan )
エクセルファイル <val2> の <val4> を表として読む	pd . read_excel ( <val2> , sheet_name = <val4> )	pd . read_excel ( <val2> , sheet_name = <val4> )
存在する <val3> を <name4> 表中に欠損に置換された結果を <name6> とする	<name6> = <name4> . replace ( <val3> , np . nan )	<name6> = <name4> . replace ( <val3> , np . nan )
<name5> 表内の NaN を直前の行の値で補って、再代入する	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
<val4> と <val3> を軸に <name2> を降順でソートした結果で置き換える	<name2> = <name2> . sort_values ( [ <val4> , <val3> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val4> , <val3> ] , ascending = False )
<name1> の列名を <val6> から <val2> にリネームして、 <name1> に代入する	<name1> = <name1> . rename ( columns = { <val6> : <val2> } )	<name1> = <name1> . rename ( columns = { <val6> : <val2> } )
<name2> の <val6> が <val5> 以上のデータを取得する	<name2> [ <name2> [ <val6> ] >= <val5> ]	<name2> [ <name2> [ <val6> ] > <val5> ]
グラフ幅を <val2> として横軸を <name6> とした <name5> の棒グラフをプロットする	plt . bar ( <name6> , <name5> , width = <val2> )	plt . bar ( <name6> , <name5> , width = <val2> )
表 <name4> 中のコラム <val5> に重複がある行を削除する	<name4> . drop_duplicates ( subset = <val5> )	<name4> . drop_duplicates ( subset = <val5> )
<name3> 表のダブっているデータを取得する	<name3> [ <name3> . duplicated ( ) ]	<name3> [ <name3> . duplicated ( ) ]
<name5> 表の <val4> コラムのダブっている行を取り除いて、 <name5> にする	<name5> = <name5> . drop_duplicates ( subset = <val4> )	<name5> = <name5> . drop_duplicates ( subset = <val4> )
エクセルファイル <val3> をデータフレームに読んだ結果を <name6> とする	<name6> = pd . read_excel ( <val3> )	<name6> = pd . read_excel ( <val3> )
表 <name4> 中の未記入の値を表 <name4> の平均をとって補った結果を <name2> にする	<name2> = <name4> . fillna ( <name4> . mean ( ) )	<name2> = <name4> . fillna ( <name4> . mean ( ) )
表 <name3> のコラム <val1> の名前を <val5> に <val2> にコラム <val4> の名前をリネームして、 <name3> にする	<name3> = <name3> . rename ( columns = { <val1> : <val5> , <val4> : <val2> } )	<name3> = <name3> . rename ( columns = { <val1> : <val5> , <val4> : <val2> } )
表 <name4> の列名を <val3> から <val2> に <val5> から <val6> にリネームした結果で書き換える	<name4> . rename ( columns = { <val3> : <val2> , <val5> : <val6> } , inplace = True )	<name4> . rename ( columns = { <val3> : <val2> , <val5> : <val6> } , inplace = True )
<name6> の中の未入力の値を <name6> の平均で補い、 <name4> とする	<name4> = <name6> . fillna ( <name6> . mean ( ) )	<name4> = <name6> . fillna ( <name6> . mean ( ) )
元のインデックスを削除してから、表 <name5> のインデックスをリセットした結果を <name3> に代入する	<name3> = <name5> . reset_index ( drop = True )	<name3> = <name5> . reset_index ( drop = True )
データを <name5> と <name6> に対して <val1> をキーとしてマージする	pd . merge ( <name5> , <name6> , on = <val1> )	pd . merge ( <name5> , <name6> , on = <val1> )
<name2> の <val5> を欠損に置換した結果を <name2> とする	<name2> = <name2> . replace ( <val5> , np . nan )	<name2> = <name2> . replace ( <val5> , np . nan )
<name1> 表を <val3> データという名前にしてセーブする	<name1> . to_csv ( <val3> )	<name1> . to_csv ( <val3> )
<name3> 表中の未記入の値を落とした結果でインプレースする	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
シフト JIS を用いる	encoding = 'shift_jis'	encoding = 'shift_jis'
列番号 <val4> をインデックスにセットしてデータ <val1> から読まれた結果を <name6> にする	<name6> = pd . read_csv ( <val1> , index_col = <val4> )	<name6> = pd . read_csv ( <val1> , index_col = <val4> )
存在する <val4> を <name3> 中に欠損で置換し、インプレースする	<name3> . replace ( <val4> , np . nan , inplace = True )	<name3> . replace ( <val4> , np . nan , inplace = True )
<name4> 表の列の名前を <val1> から <val2> に <val6> から <val3> にリネームする	<name4> . rename ( columns = { <val6> : <val3> , <val1> : <val2> } )	<name4> . rename ( columns = { <val1> : <val2> , <val6> : <val2> } )
<name4> の中の <val2> に重複がある行を削除された結果で置き換える	<name4> . drop_duplicates ( subset = <val2> , inplace = True )	<name4> = <name4> . drop_duplicates ( subset = <val2> )
<name2> 表の欠損を <name6> に変える	<name2> . fillna ( <name6> )	<name2> . fillna ( <name6> )
UTF8 を使用する	encoding = 'utf-8'	encoding = 'utf-8'
マーカーの形状をひし形とする	marker = 'D'	marker = 'D'
グラフ線のスタイルは破線を使う	linestyle = 'dashed'	linestyle = 'dashed'
存在する <val4> を表 <name3> の中に欠損にした結果で置き換える	<name3> . replace ( <val4> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val4> , np . nan )
表 <name1> の中のコラム <val4> の重複している行を削除された結果を再代入する	<name1> = <name1> . drop_duplicates ( subset = <val4> )	<name1> = <name1> . drop_duplicates ( subset = <val4> )
昇順に <name1> 表の <val5> 列をソートした結果を再代入する	<name1> = <name1> . sort_values ( <val5> )	<name1> = <name1> . sort_values ( <val5> )
エクセルファイル <val3> の <val2> から表を読む	pd . read_excel ( <val3> , sheet_name = <val2> )	pd . read_excel ( <val3> , sheet_name = <val2> )
<name3> をインデックスを元にソートされた結果を再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
表 <name6> の中の未記入の値を <name5> で埋められた結果で置き換える	<name6> . fillna ( <name5> , inplace = True )	<name6> = <name6> . fillna ( <name5> )
<name4> の元々あったインデックスをリセットして、 <name4> にする	<name4> = <name4> . reset_index ( drop = True )	<name4> = <name4> . reset_index ( drop = True )
存在する <val4> を <name5> 表中に欠損値で補う	<name5> . replace ( <val4> , np . nan )	<name5> . replace ( <val4> , np . nan )
表 <name2> 中の重複要素がある行をドロップした結果を <name5> にする	<name5> = <name2> . drop_duplicates ( )	<name5> = <name2> . drop_duplicates ( )
<name3> 表中に存在する <val5> を欠損値に置換する	<name3> . replace ( <val5> , np . nan )	<name3> . replace ( <val5> , np . nan )
<name2> の欠損を <name5> に変え、 <name1> に代入する	<name1> = <name2> . fillna ( <name5> )	<name1> = <name2> . fillna ( <name5> )
<name3> の中の未入力の値を <name6> で置き換え、再代入する	<name3> = <name3> . fillna ( <name6> )	<name3> = <name3> . fillna ( <name6> )
表 <name2> の <val6> を NaN で置き換えた結果で置き換える	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
<name5> の中のそれぞれのコラムにある <val2> の個数を見る	<name5> . isin ( [ <val2> ] ) . sum ( )	<name5> . isin ( [ <val2> ] ) . sum ( )
<name3> 表を <val6> 列と <val5> カラムを元に降順でソートした結果を <name3> とする	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val6> , <val5> ] , ascending = False )
中央寄せにする	align = 'center'	sns . set ( font = 'center' )
表 <name5> のコラム <val4> をインデックスとして変更する	<name5> . set_index ( <val4> )	<name5> . set_index ( <val4> )
表 <name2> の中のダブっている行を取り除かれた結果を <name2> に代入する	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
表 <name4> 中の未記入の値を <name3> で置き換えた結果を再代入する	<name4> = <name4> . fillna ( <name3> )	<name4> = <name4> . fillna ( <name3> )
表 <name2> の中の重複要素がある行を落として、再代入する	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
表 <name1> 全体を列 <val3> とカラム <val5> を軸に降順でソートして、書き換える	<name1> . sort_values ( [ <val3> , <val5> ] , ascending = False , inplace = True )	<name1> . sort_values ( [ <val3> , <val5> ] , ascending = False , inplace = True )
<name1> 表上の <val3> コラムに重複があるのかどうかをチェックする	<name1> . duplicated ( subset = <val3> )	<name1> . duplicated ( subset = <val3> )
<val5> から <val2> に <name4> の列の名前をリネームし、インプレースする	<name4> . rename ( columns = { <val5> : <val2> } , inplace = True )	<name4> . rename ( columns = { <val5> : <val2> } , inplace = True )
表として <val1> をタブ区切りで読み、 <name6> とする	<name6> = pd . read_csv ( <val1> , sep = '\t' )	<name6> = pd . read_csv ( <val1> , sep = '\t' )
<name6> 表内の欠損値を含む行をドロップされた結果を再代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name2> の中の重複した行の数を確認する	<name2> . duplicated ( ) . sum ( )	<name2> . duplicated ( ) . sum ( )
<name5> 表中の重複要素がある行を落とされた結果を <name1> に代入する	<name1> = <name5> . drop_duplicates ( )	<name1> = <name5> . drop_duplicates ( )
<val6> 番目の列をインデックスに、 <val2> データを読み込んだ結果を <name1> に代入する	<name1> = pd . read_csv ( <val2> , index_col = <val6> )	<name1> = pd . read_csv ( <val2> , index_col = <val6> )
<name3> 内の NaN を <name6> で埋めた結果を再代入する	<name3> = <name3> . fillna ( <name6> )	<name3> = <name3> . fillna ( <name6> )
表 <name3> を <val4> というファイル名でエクセルデータに書き込む	<name3> . to_excel ( <val4> )	<name3> . to_excel ( <val4> )
エクセルファイル <val4> の <val5> を読む	pd . read_excel ( <val4> , sheet_name = <val5> )	pd . read_excel ( <val4> , sheet_name = <val5> )
列 <val5> とカラム <val6> で表 <name2> 全体を逆順にソートした結果を <name2> にする	<name2> = <name2> . sort_values ( [ <val5> , <val6> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val5> , <val6> ] , ascending = False )
表 <name3> のコラム <val2> をインデックスとして指定した結果で置き換える	<name3> = <name3> . set_index ( <val2> )	<name3> = <name3> . set_index ( <val2> )
<val1> から <val6> に <name2> の行の名前をリネームされた結果を <name2> とする	<name2> = <name2> . rename ( index = { <val1> : <val6> } )	<name2> = <name2> . rename ( index = { <val1> : <val6> } )
<name5> の <val3> のダブっている行を取り除いて、再代入する	<name5> = <name5> . drop_duplicates ( subset = <val3> )	<name5> = <name5> . drop_duplicates ( subset = <val3> )
<name6> の行名を <val5> から <val2> にリネームした結果を <name6> に代入する	<name6> = <name6> . rename ( index = { <val5> : <val2> } )	<name6> = <name6> . rename ( index = { <val5> : <val2> } )
y 軸の軸名を <val2> に指定する	plt . ylabel ( <val2> )	plt . ylabel ( <val2> )
半分に透明度をする	alpha = 0.5	alpha = 0.5
表 <name2> 内の欠損値を直前の行の値で埋めた結果で置き換える	<name2> . fillna ( method = 'ffill' , inplace = True )	<name2> = <name2> . fillna ( method = 'ffill' )
<name4> 上のダブる行を落とし、置き換える	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
最も適切な位置に凡例を追加する	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
<val4> カラムと <val1> コラムが降順になるように <name3> 表をソートされた結果を <name6> に代入する	<name6> = <name3> . sort_values ( [ <val4> , <val1> ] , ascending = False )	<name6> = <name3> . sort_values ( [ <val4> , <val1> ] , ascending = False )
表 <name5> のインデックスをリセットして、元のインデックスを削除し、インプレースする	<name5> . reset_index ( drop = True , inplace = True )	<name5> . reset_index ( drop = True , inplace = True )
表 <name6> 中の欠損値を <name2> で埋め、 <name6> とする	<name6> = <name6> . fillna ( <name2> )	<name6> = <name6> . fillna ( <name2> )
<val2> という名前のエクセルファイルの <val5> シート名をデータフレームとして読まれた結果を <name4> とする	<name4> = pd . read_excel ( <val2> , sheet_name = <val5> )	<name4> = pd . read_excel ( <val2> , sheet_name = <val5> )
<val6> 列と <val1> カラムで <name2> 表全体を降順にソートした結果で置き換える	<name2> . sort_values ( [ <val6> , <val1> ] , ascending = False , inplace = True )	<name2> = <name2> . sort_values ( [ <val6> , <val1> ] , ascending = False )
CSV ファイル <val6> をデータフレームとしてカンマ区切りで読み込んだ結果を <name1> とする	<name1> = pd . read_csv ( <val6> , sep = ',' )	<name1> = pd . read_csv ( <val6> , sep = ',' )
<name2> の <val6> をインデックスに変更した結果を再代入する	<name2> = <name2> . set_index ( <val6> )	<name2> = <name2> . set_index ( <val6> )
インデックスを元に <name6> 全体を小さい順にソートして、 <name2> に代入する	<name2> = <name6> . sort_index ( )	<name2> = <name6> . sort_index ( )
インデックスを元に <name4> 表全体を昇順でソートした結果を <name4> にする	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
エクセルファイル <val3> の全てのシートを読み込み、データフレームとする	pd . read_excel ( <val3> , sheet_name = None )	pd . read_excel ( <val3> , sheet_name = None )
表 <name4> のコラム <val5> をインデックスとして変更した結果で書き換える	<name4> . set_index ( <val5> , inplace = True )	<name4> . set_index ( <val5> , inplace = True )
<name5> の <val4> 行目を落とし、書き換える	<name5> . drop ( <val4> , inplace = True )	<name5> . drop ( <val4> , inplace = True )
<name3> の <val4> を昇順にソートし、再代入する	<name3> = <name3> . sort_values ( <val4> )	<name3> = <name3> . sort_values ( <val4> )
表 <name1> の列 <val3> を区間の数を <name4> としてビンに含まれる個数が等しくなるように分割して、 <name5> に代入する	<name5> = pd . qcut ( <name1> [ <val3> ] , <name4> )	<name5> = pd . qcut ( <name1> [ <val3> ] , <name4> )
<val6> という名前のエクセルファイルの <val2> をデータフレームとして読み込み、 <name5> にする	<name5> = pd . read_excel ( <val6> , sheet_name = <val2> )	<name5> = pd . read_excel ( <val6> , sheet_name = <val2> )
<name3> のインデックスをリセット設定して、元のインデックスを削除した結果で書き換える	<name3> . reset_index ( drop = True , inplace = True )	<name3> . reset_index ( drop = True , inplace = True )
重複している最後の行を残して表 <name3> 中の重複している行を削除する	<name3> . drop_duplicates ( keep = False )	<name3> . drop_duplicates ( keep = False )
<name3> を <val6> に基づいて昇順でソートする	<name3> . sort_values ( <val6> )	<name3> . sort_values ( <val6> )
表データに <val5> を格納する	pd . read_csv ( <val5> )	pd . read_csv ( <val5> )
表 <name3> に重複はあるのか検出を表示する	<name3> . duplicated ( )	<name3> . duplicated ( )
<val2> にグラフの y 軸の軸の名前を変更する	plt . ylabel ( <val2> )	plt . ylabel ( <val2> )
ある <val1> を <name4> に未入力の値で置き換えて、置き換える	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
<val3> から <val5> に <name2> の行の名前をリネームする	<name2> . rename ( index = { <val3> : <val5> } )	<name2> . rename ( index = { <val3> : <val5> } )
<val5> 番目の列をインデックスに指定して、 <val2> を読み込まれた結果を <name6> に代入する	<name6> = pd . read_csv ( <val2> , index_col = <val5> )	<name6> = pd . read_csv ( <val2> , index_col = <val5> )
<name5> 中の未記入の値を <name5> の平均をとって補われた、結果を <name1> とする	<name1> = <name5> . fillna ( <name5> . mean ( ) )	<name1> = <name5> . fillna ( <name5> . mean ( ) )
CSV データ <val5> を <val4> 区切りで読み、 <name3> とする	<name3> = pd . read_csv ( <val5> , sep = <val4> )	<name3> = pd . read_csv ( <val5> , sep = <val4> )
<name2> 表の中のそれぞれのコラムにある <val1> の個数の合計	<name2> . isin ( [ <val1> ] ) . sum ( )	<name2> . isin ( [ <val1> ] ) . sum ( )
<name3> をエクセルファイル <val4> という名前にして入れる	<name3> . to_excel ( <val4> )	<name3> . to_excel ( <val4> )
<name2> 表内の <val4> コラムに重複がある行を削除する	<name2> . drop_duplicates ( subset = <val4> )	<name2> . drop_duplicates ( subset = <val4> )
表 <name5> 内の欠損値を <name4> で埋めた結果を <name2> に代入する	<name2> = <name5> . fillna ( <name4> )	<name2> = <name5> . fillna ( <name4> )
<name6> の <val1> をダミー変数化した結果を <name4> とする	<name4> = pd . get_dummies ( <name6> [ <val1> ] )	<name4> = pd . get_dummies ( <name6> [ <val1> ] )
表 <name5> の未入力の値を取り除いて、 <name5> に代入する	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
ある行を <name3> の中の NaN が落として、書き換える	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
プロットを描画する	plt . show ( )	plt . savefig ( )
<name5> 表の中に重複はあるか判定	<name5> . duplicated ( )	<name5> . duplicated ( )
<name5> 上の欠損が存在する行を消して、 <name5> とする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<name1> 表の <val4> 列を区間の数を <name2> 、ビンの名前を <name3> リストとして分割し、 <name5> とする	<name5> = pd . cut ( <name1> [ <val4> ] , <name2> , label = <name3> )	<name5> = pd . cut ( <name1> [ <val4> ] , <name2> , label = <name3> )
グラフを青色で表示する	color = 'blue'	color = 'blue'
<val2> から <val6> に <name1> の列の名前を変え、書き換える	<name1> . rename ( columns = { <val2> : <val6> } , inplace = True )	<name1> . rename ( columns = { <val2> : <val6> } , inplace = True )
<name6> と <name3> と <name5> についての箱ひげ図を表示する	plt . boxplot ( [ <name6> , <name3> , <name5> ] )	plt . boxplot ( [ <name6> , <name3> , <name5> ] )
左寄せにヘッダーの表示を設定する	pd . set_option ( 'colheader_justify' , 'left' )	pd . set_option ( 'colheader_justify' , 'left' )
CSV データ <val3> を表としてカンマ区切りで読み込み、 <name4> にする	<name4> = pd . read_csv ( <val3> , sep = ',' )	<name4> = pd . read_csv ( <val3> , sep = ',' )
<val3> × <val4> に出力するグラフの大きさを指定する	plt . figure ( figsize = ( <val3> , <val4> ) )	plt . figure ( figsize = ( <val3> , <val4> ) )
文字の大きさを <val1> に指定する	fontsize = <val1>	fontsize = <val1>
表 <name4> 内の欠損値を <name6> とする	<name4> . fillna ( <name6> )	<name4> . fillna ( <name6> )
<name6> 表内に重複はあるのか判定	<name6> . duplicated ( )	<name6> . duplicated ( )
<name5> 表の <val2> コラムと <val6> カラムごとの <val1> コラムの値の合計を求める	<name5> . groupby ( [ <val2> , <val6> ] ) [ <val1> ] . sum ( )	<name5> . groupby ( [ <val2> , <val6> ] ) [ <val1> ] . sum ( )
<name4> をインデックスで並び替えられた結果でインプレースする	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
<name5> と <name6> の折れ線グラフを <val3> とラベルを付けて出力する	plt . plot ( <name5> , <name6> , label = <val3> )	plt . plot ( <name5> , <name6> , label = <val3> )
<name2> 表内の <val1> コラムに重複がある行を消した結果を <name5> とする	<name5> = <name2> . drop_duplicates ( subset = <val1> )	<name5> = <name2> . drop_duplicates ( subset = <val1> )
<name2> 上の <val5> と <val1> に重複があるのかどうか判定	<name2> . duplicated ( subset = [ <val5> , <val1> ] )	<name2> . duplicated ( subset = [ <val5> , <val1> ] )
<name5> 表中の欠損値が存在する行をドロップし、インプレースする	<name5> . dropna ( inplace = True )	<name5> . dropna ( inplace = True )
<name2> 表の中にある <val1> を未入力の値に置き換え、 <name2> に代入する	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
表 <name4> の <val3> を未記入の値にする	<name4> . replace ( <val3> , np . nan )	<name4> . replace ( <val3> , np . nan )
エクセルファイル <val5> の <val3> 番目のシートを読み込んで表データに格納し、 <name4> にする	<name4> = pd . read_excel ( <val5> , sheet_name = <val3> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val3> )
<val5> カラムで <name6> 表を昇順にソートする	<name6> . sort_values ( <val5> )	<name6> . sort_values ( <val5> )
ある <val6> を <name1> 上に NaN で置き換えた結果を <name3> に代入する	<name3> = <name1> . replace ( <val6> , np . nan )	<name3> = <name1> . replace ( <val6> , np . nan )
<name1> 表中にある <val6> を未記入の値で置き換え、 <name2> に代入する	<name2> = <name1> . replace ( <val6> , np . nan )	<name2> = <name1> . replace ( <val6> , np . nan )
ある <val6> を <name5> の中に未記入の値で埋めた結果で置き換える	<name5> = <name5> . replace ( <val6> , np . nan )	<name5> = <name5> . replace ( <val6> , np . nan )
エクセルファイル <val5> の <val2> 番目のシートを読み込んで表データに格納された結果を <name4> に代入する	<name4> = pd . read_excel ( <val5> , sheet_name = <val2> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val2> )
エンコーディングを shift - jis で、データ <val6> を読む	pd . read_csv ( <val6> , encoding = 'shift_jis' )	pd . read_csv ( <val6> , encoding = 'shift_jis' )
エクセルファイル <val3> のシート全てをデータフレームとして読み込んで、 <name5> にする	<name5> = pd . read_excel ( <val3> , sheet_name = None )	<name5> = pd . read_excel ( <val3> , sheet_name = None )
<name2> の <val4> を欠損値にされた結果を <name3> に代入する	<name3> = <name2> . replace ( <val4> , np . nan )	<name3> = <name2> . replace ( <val4> , np . nan )
<name6> 表の欠損を <name1> に変えられた結果で置き換える	<name6> = <name6> . fillna ( <name1> )	<name6> = <name6> . fillna ( <name1> )
<name6> 表の欠損を <name1> に変えられた結果を <name6> にする	<name6> = <name6> . fillna ( <name1> )	<name6> = <name6> . fillna ( <name1> )
打点の色を黄色とする	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
<name4> 表の中の未記入の値を落とされた結果で書き換える	<name4> . dropna ( inplace = True )	<name4> . dropna ( inplace = True )
<val6> というエクセルファイルの <val4> 番目のシートを読み込む	pd . read_excel ( <val6> , sheet_name = <val4> )	pd . read_excel ( <val6> , sheet_name = <val4> )
ある <val4> を表 <name2> 中に未記入の値とされた結果を <name3> とする	<name3> = <name2> . replace ( <val4> , np . nan )	<name3> = <name2> . replace ( <val4> , np . nan )
表 <name5> 中の重複している行を削除し、インプレースする	<name5> . drop_duplicates ( inplace = True )	<name5> . drop_duplicates ( inplace = True )
表 <name5> 上の NaN を <name3> とした結果で書き換える	<name5> . fillna ( <name3> , inplace = True )	<name5> . fillna ( <name3> , inplace = True )
ある行を <name4> 表の未記入の値が取り除いて、置き換える	<name4> . dropna ( inplace = True )	<name4> = <name4> . dropna ( )
表 <name5> 中に未記入の値がどの程度あるのか数える	<name5> . isnull ( ) . sum ( )	<name5> . isnull ( ) . sum ( )
<name3> 表上の重複する行を消された結果を <name4> に代入する	<name4> = <name3> . drop_duplicates ( )	<name4> = <name3> . drop_duplicates ( )
<name4> 表中の欠損を含む行を削除した結果で置き換える	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
表 <name1> のコラム <val3> とカラム <val4> ごとのコラム <val2> の値の合計値	<name1> . groupby ( [ <val3> , <val4> ] ) [ <val2> ] . sum ( )	<name1> . groupby ( [ <val3> , <val4> ] ) [ <val2> ] . sum ( )
<name3> の NaN がある行を消した結果を <name1> にする	<name1> = <name3> . dropna ( )	<name1> = <name3> . dropna ( )
<name3> 表の <val6> コラムをインデックスとしてセットして、置き換える	<name3> = <name3> . set_index ( <val6> )	<name3> = <name3> . set_index ( <val6> )
<name5> 内の欠損を <name4> として、 <name1> にする	<name1> = <name5> . fillna ( <name4> )	<name1> = <name5> . fillna ( <name4> )
<val6> から <val1> に表 <name3> の列名を変えられた結果でインプレースする	<name3> . rename ( columns = { <val6> : <val1> } , inplace = True )	<name3> . rename ( columns = { <val6> : <val1> } , inplace = True )
存在する <val1> を <name3> 中に欠損値で補われた、結果を <name2> にする	<name2> = <name3> . replace ( <val1> , np . nan )	<name2> = <name3> . replace ( <val1> , np . nan )
表 <name6> 全体をインデックスを元に小さい順でソートし、インプレースする	<name6> . sort_index ( inplace = True )	<name6> . sort_index ( inplace = True )
<name6> の <val4> と <val3> と <val5> を抽出する	<name6> [ [ <val4> , <val3> , <val5> ] ]	<name6> [ [ <val4> , <val3> , <val5> ] ]
<name2> 表の <val6> カラムのユニークな要素の数を見る	<name2> [ <val6> ] . nunique ( )	<name2> [ <val6> ] . nunique ( )
エクセルファイル <val6> の全てのシートを読み込んで表データにし、 <name2> に代入する	<name2> = pd . read_excel ( <val6> , sheet_name = None )	<name2> = pd . read_excel ( <val6> , sheet_name = None )
一気に <name5> データフレームの <val3> カラムと <val2> カラムと <val4> カラムについて関係性を描写する	sns . pairplot ( <name5> [ [ <val3> , <val2> , <val4> ] ] )	sns . pairplot ( <name5> [ [ <val3> , <val2> , <val4> ] ] )
<name1> の <val5> についての統計的情報を表示する	<name1> [ <val5> ] . describe ( )	<name1> [ <val5> ] . describe ( )
<name5> の <val2> を欠損とした結果で置き換える	<name5> . replace ( <val2> , np . nan , inplace = True )	<name5> = <name5> . replace ( <val2> , np . nan )
<name2> 全体を <val5> で昇順にソートする	<name2> . sort_values ( <val5> )	<name2> . sort_values ( <val5> )
表 <name4> 内の欠損を表 <name4> の平均値で埋めた結果で書き換える	<name4> . fillna ( <name4> . mean ( ) , inplace = True )	<name4> . fillna ( <name4> . mean ( ) , inplace = True )
<name2> 中の欠損値を <name4> に置換し、再代入する	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
<name6> 上の NaN を <name6> の平均をとって補った結果を <name6> に代入する	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name6> の中のダブるデータをえる	<name6> [ <name6> . duplicated ( ) ]	<name6> [ <name6> . duplicated ( ) ]
表 <name4> のインデックスをリセットセットして、元のインデックスを削除し、 <name4> とする	<name4> = <name4> . reset_index ( drop = True )	<name4> = <name4> . reset_index ( drop = True )
<name2> 表全体を <val3> カラムと <val5> コラムが逆順になるようにソートされた結果を <name4> とする	<name4> = <name2> . sort_values ( [ <val3> , <val5> ] , ascending = False )	<name4> = <name2> . sort_values ( [ <val3> , <val5> ] , ascending = False )
表 <name2> の中の未入力の値を取り除き、再代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name6> 表の <val2> を NaN で置き換えた結果で置き換える	<name6> = <name6> . replace ( <val2> , np . nan )	<name6> = <name6> . replace ( <val2> , np . nan )
表 <name3> の <val5> を欠損値にして、置き換える	<name3> = <name3> . replace ( <val5> , np . nan )	<name3> = <name3> . replace ( <val5> , np . nan )
<name4> 上の <val2> を NaN に置き換え NaN がある行を消し、 <name4> に代入する	<name4> = <name4> . replace ( <val2> , np . nan ) . dropna ( )	<name4> = <name4> . replace ( <val2> , np . nan ) . dropna ( )
表 <name3> 上の未記入の値を落とした結果で書き換える	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
<val3> をデータフレームとして読む	pd . read_csv ( <val3> )	pd . read_csv ( <val3> )
<name3> 上の NaN を <name2> として、インプレースする	<name3> . fillna ( <name2> , inplace = True )	<name3> . fillna ( <name2> , inplace = True )
<name3> エンコーディングを使用する	encoding = <name3>	encoding = <name3>
<name1> を箱ひげ図で表示する	plt . boxplot ( <name1> )	plt . boxplot ( <name1> )
存在する <val1> を表 <name6> 内に NaN で置換された結果を <name5> にする	<name5> = <name6> . replace ( <val1> , np . nan )	<name5> = <name6> . replace ( <val1> , np . nan )
<name6> 表の最後の 5 行を見る	<name6> . tail ( )	<name6> . tail ( )
エクセルファイル <val6> の <val5> を表に読み、 <name2> にする	<name2> = pd . read_excel ( <val6> , sheet_name = <val5> )	<name2> = pd . read_excel ( <val6> , sheet_name = <val5> )
表 <name6> の中のカテゴリーを数値データで置き換えた結果を <name2> とする	<name2> = pd . get_dummies ( <name6> )	<name2> = pd . get_dummies ( <name6> )
<name4> 表の重複行を判定	<name4> . duplicated ( )	<name4> . duplicated ( )
先頭の列をインデックスとセットして、データ <val2> を表として読み込み、 <name1> にする	<name1> = pd . read_csv ( <val2> , index_col = 0 )	<name1> = pd . read_csv ( <val2> , index_col = 0 )
ダブっている最後の行を残して表 <name3> の中の重複している行を取り除く	<name3> . drop_duplicates ( keep = False )	<name3> . drop_duplicates ( keep = False )
線グラフの種類は箱髭図を用いる	kind = 'box'	kind = 'box'
重複する最後の行を残して <name4> 上の重複している行を消し、書き換える	<name4> . drop_duplicates ( keep = False , inplace = True )	<name4> . drop_duplicates ( keep = False , inplace = True )
表を <val5> から読み、 <name1> に代入する	<name1> = pd . read_csv ( <val5> )	<name1> = pd . read_csv ( <val5> )
<name1> にある未記入の値の数を見る	<name1> . isnull ( ) . sum ( )	<name1> . isnull ( ) . sum ( )
<name3> 表を <val1> データに入れる	<name3> . to_csv ( <val1> )	<name3> . to_csv ( <val1> )
<name2> 表の <val1> コラムをインデックスとしてした結果を <name2> に代入する	<name2> = <name2> . set_index ( <val1> )	<name2> = <name2> . set_index ( <val1> )
<name6> 表上の <val2> を NaN に置き換え NaN がある行を消して、置き換える	<name6> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name6> = <name6> . replace ( <val2> , np . nan ) . dropna ( )
<name2> 表の <val4> コラムについて <val5> 列をインデックス、 <val1> コラムをカラムとしたピボットテーブルを作成する	<name2> . pivot_table ( index = <val5> , columns = <val1> , values = <val4> )	<name2> . pivot_table ( index = <val5> , columns = <val1> , values = <val5> )
表 <name5> 全体をカラム <val6> とコラム <val2> が逆順になるようにソートして、 <name4> とする	<name4> = <name5> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name4> = <name5> . sort_values ( [ <val6> , <val2> ] , ascending = False )
<name1> の中のの列にある <val3> の数を確認する	<name1> . isin ( [ <val3> ] ) . sum ( )	<name1> . isin ( [ <val3> ] ) . sum ( )
<name1> 表のもともとあったインデックスをリセットして、置き換える	<name1> . reset_index ( drop = True , inplace = True )	<name1> = <name1> . reset_index ( drop = True )
<val4> から <val6> に <name5> のインデックス名をリネームして、 <name5> とする	<name5> = <name5> . rename ( index = { <val4> : <val6> } )	<name5> = <name5> . rename ( index = { <val4> : <val6> } )
表 <name6> 全体をインデックスに基づいて昇順でソートした結果でインプレースする	<name6> . sort_index ( inplace = True )	<name6> . sort_index ( inplace = True )
<val1> という名前のエクセルファイルとして <name3> をセーブする	<name3> . to_excel ( <val1> )	<name3> . to_excel ( <val1> )
<val2> という名前のエクセルファイルの <val1> を表として読み込んで、 <name4> にする	<name4> = pd . read_excel ( <val2> , sheet_name = <val1> )	<name4> = pd . read_excel ( <val2> , sheet_name = <val1> )
<name4> の柱状図を <val5> から <val2> の間で出力する	plt . hist ( <name4> , range = ( <val5> , <val2> ) )	plt . hist ( <name4> , range = ( <val5> , <val2> ) )
<name6> 内の欠損値を含む行をドロップした結果で置き換える	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name2> についてダミー変数をつくった結果を <name1> とする	<name1> = pd . get_dummies ( <name2> )	<name1> = pd . get_dummies ( <name2> )
<name2> 表のカラム名を <val5> から <val6> に <val4> から <val1> にリネームした結果を <name2> とする	<name2> = <name2> . rename ( columns = { <val5> : <val6> , <val4> : <val1> } )	<name2> = <name2> . rename ( columns = { <val5> : <val1> , <val5> : <val1> } )
存在する <val3> を表 <name1> の中に欠損で置換された結果を <name1> に代入する	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
表 <name2> の <val3> を NaN で置き換えられた結果でインプレースする	<name2> . replace ( <val3> , np . nan , inplace = True )	<name2> . replace ( <val3> , np . nan , inplace = True )
x 座標の軸名を <val3> に変更する	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
<name3> 表の中のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <name3> )	pd . get_dummies ( <name3> )
<name3> 軸を <name3> とした <name2> の横方向の棒グラフを棒グラフの位置を真ん中として出力する	plt . barh ( <name3> , <name2> , align = 'center' )	plt . bar ( <name3> , <name2> , align = 'center' )
<name1> 表の中の重複要素がある行を落とした結果で置き換える	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
グラフに格子線を加える	plt . grid ( True )	plt . grid ( True )
表 <name5> の中の <val1> を欠損に変え欠損が存在する行を削除した結果で置き換える	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )
<name2> 表の未入力の値を <name2> 表の平均をとって補い、 <name6> とする	<name6> = <name2> . fillna ( <name2> . mean ( ) )	<name6> = <name2> . fillna ( <name2> . mean ( ) )
<val6> から <val4> に表 <name5> のインデックス名をリネームした結果を <name3> とする	<name3> = <name5> . rename ( index = { <val6> : <val4> } )	<name3> = <name5> . rename ( index = { <val6> : <val4> } )
表データに <val6> を格納し、 <name1> に代入する	<name1> = pd . read_csv ( <val6> )	<name1> = pd . read_csv ( <val6> )
<name1> 表をエクセルファイル <val2> という名前にセットして入れる	<name1> . to_excel ( <val2> )	<name1> . to_excel ( <val2> )
<name6> のカラム名を <val2> から <val1> にリネームして、 <name3> に代入する	<name3> = <name6> . rename ( columns = { <val2> : <val1> } )	<name3> = <name6> . rename ( columns = { <val2> : <val1> } )
<name4> 表内の欠損値を <name3> で置き換え、インプレースする	<name4> . fillna ( <name3> , inplace = True )	<name4> . fillna ( <name3> , inplace = True )
マーカーの形の色を紫色とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
<name3> 表内の欠損値をドロップして、書き換える	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
<name3> 表の欠損値がある部分に色をつける	<name3> . style . highlight_null ( )	<name3> . style . highlight_null ( )
<name3> 表上にある <val6> を NaN に置き換え、置き換える	<name3> . replace ( <val6> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val6> , np . nan )
表 <name2> のコラム <val4> の名前を <val1> にコラム <val6> の名前を <val3> にリネームされた結果で置き換える	<name2> . rename ( columns = { <val4> : <val1> , <val6> : <val3> } , inplace = True )	<name2> = <name2> . rename ( columns = { <val4> : <val1> , <val6> : <val3> } )
表 <name4> 上の <val6> を NaN に置き換え NaN がある行を消して、 <name3> にする	<name3> = <name4> . replace ( <val6> , np . nan ) . dropna ( )	<name3> = <name4> . replace ( <val6> , np . nan ) . dropna ( )
<name2> をインデックスで小さい順に並び替えた結果を <name2> に代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name1> を改行の代わりに適用する	end = <name1>	<name1> . set_option ( 'display.max_rows' , <name1> )
<name6> をインデックスどおりに昇順でソートして、 <name6> に代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
存在する <val4> を <name3> 表内に NaN とする	<name3> . replace ( <val4> , np . nan )	<name3> . replace ( <val4> , np . nan )
円グラフ中に割合を小数点以下 2 桁までのパーセント表記で表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表 <name2> の中のそれぞれの列にある <val6> の数を調べる	<name2> . isin ( [ <val6> ] ) . sum ( )	<name2> . isin ( [ <val6> ] ) . sum ( )
円のマーカーの形を使用する	marker = 'o'	marker = 'o'
<name4> の要素を見る	<name4> . values	<name4> . values
<name4> の <val5> に重複がある行を取り除いて、 <name4> に代入する	<name4> = <name4> . drop_duplicates ( subset = <val5> )	<name4> = <name4> . drop_duplicates ( subset = <val5> )
表 <name2> のコラム <val5> と <val1> を消された結果を <name4> に代入する	<name4> = <name2> . drop ( [ <val5> , <val1> ] , axis = 1 )	<name4> = <name2> . drop ( [ <val5> , <val1> ] , axis = 1 )
<name4> の中の未入力の値を <name3> に置き換えた結果を <name4> とする	<name4> = <name4> . fillna ( <name3> )	<name4> = <name4> . fillna ( <name3> )
<val3> というファイル名でエクセルに表 <name5> を入れる	<name5> . to_excel ( <val3> )	<name5> . to_excel ( <val3> )
縦 <val1> 横 <val6> に表示するグラフのサイズを変更する	plt . figure ( figsize = ( <val6> , <val1> ) )	plt . figure ( figsize = ( <val6> , <val1> ) )
<name5> を <val1> と <val4> で値が大きい順にソートした結果で置き換える	<name5> . sort_values ( [ <val1> , <val4> ] , ascending = False , inplace = True )	<name5> = <name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )
<name2> 表全体を <val1> 列と <val6> カラムを軸に逆順でソートし、 <name2> にする	<name2> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )
表 <name1> 内の <val6> を欠損値に置換し欠損値が存在する行をドロップして、置き換える	<name1> = <name1> . replace ( <val6> , np . nan ) . dropna ( )	<name1> = <name1> . replace ( <val6> , np . nan ) . dropna ( )
<name1> 表の <val5> を未入力の値とする	<name1> . replace ( <val5> , np . nan )	<name1> . replace ( <val5> , np . nan )
表 <name6> を列 <val3> とカラム <val1> に基づいて降順でソートした結果を <name4> とする	<name4> = <name6> . sort_values ( [ <val3> , <val1> ] , ascending = False )	<name4> = <name6> . sort_values ( [ <val3> , <val1> ] , ascending = False )
表 <name5> の中に存在する <val4> を欠損に置換し、書き換える	<name5> . replace ( <val4> , np . nan , inplace = True )	<name5> . replace ( <val4> , np . nan , inplace = True )
表 <name2> の中のコラム <val6> の重複している行を削除して、置き換える	<name2> . drop_duplicates ( subset = <val6> , inplace = True )	<name2> = <name2> . drop_duplicates ( subset = <val6> )
ある <val1> を表 <name5> 中に未記入の値に置き換えた結果を <name5> にする	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
列番号 <val5> をインデックスと設定して <val6> を表データに格納する	pd . read_csv ( <val6> , index_col = <val5> )	pd . read_csv ( <val6> , index_col = <val5> )
表 <name6> の <val3> を NaN に置き換えられた結果を <name5> に代入する	<name5> = <name6> . replace ( <val3> , np . nan )	<name5> = <name6> . replace ( <val3> , np . nan )
表として CSV データ <val4> をカンマ区切りで読み込んで、 <name6> に代入する	<name6> = pd . read_csv ( <val4> , sep = ',' )	<name6> = pd . read_csv ( <val4> , sep = ',' )
インデックスを元に <name4> を小さい順でソートした結果で書き換える	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
表 <name3> の欠損を <name4> にして、 <name3> とする	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
列番号 <val6> をインデックスとして <val3> から表を読み込む	pd . read_csv ( <val3> , index_col = <val6> )	pd . read_csv ( <val3> , index_col = <val6> )
<val1> という名前で作成したグラフをセーブする	plt . savefig ( <val1> )	plt . savefig ( <val1> )
<name4> 内に存在する <val1> を欠損値に置換する	<name4> . replace ( <val1> , np . nan )	<name4> . replace ( <val1> , np . nan )
<name4> の <val2> を欠損にされた結果で置き換える	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
<name2> 表と <name4> 表を縦方向にマージして、 <name1> とする	<name1> = pd . concat ( [ <name2> , <name4> ] )	<name1> = pd . concat ( [ <name2> , <name4> ] )
列番号 <val5> をインデックスと設定してデータ <val6> から表を読み込む	pd . read_csv ( <val6> , index_col = <val5> )	pd . read_csv ( <val6> , index_col = <val5> )
<name6> の行名を調べる	<name6> . index	<name6> . index
ある行を <name3> 表内の未入力の値がドロップする	<name3> . dropna ( )	<name3> . dropna ( )
ダブる最後の行を残して <name4> 表上の重複している行を落とした結果を <name4> とする	<name4> = <name4> . drop_duplicates ( keep = False )	<name4> = <name4> . drop_duplicates ( keep = False )
エクセルファイル <val5> の <val3> を表データにされた結果を <name2> に代入する	<name2> = pd . read_excel ( <val5> , sheet_name = <val3> )	<name2> = pd . read_excel ( <val5> , sheet_name = <val3> )
<name6> 表中の重複要素がある行を落とした結果で置き換える	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name5> 表内のカテゴリーを数値にし、 <name1> とする	<name1> = pd . get_dummies ( <name5> )	<name1> = pd . get_dummies ( <name5> )
<name3> の中にいくつ欠損がどの程度あるのかカウントする	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
<name1> 内の <val5> と <val3> に重複はあるのかどうか	<name1> . duplicated ( subset = [ <val5> , <val3> ] )	<name1> . duplicated ( subset = [ <val5> , <val3> ] )
<name3> 表の <val5> を未入力の値に置換し未入力の値がある行を取り除いた結果を <name1> にする	<name1> = <name3> . replace ( <val5> , np . nan ) . dropna ( )	<name1> = <name3> . replace ( <val5> , np . nan ) . dropna ( )
<val1> に <name4> 全体を基づいて昇順でソートし、置き換える	<name4> = <name4> . sort_values ( <val1> )	<name4> = <name4> . sort_values ( <val1> )
<name3> の中の欠損を <name5> に置き換えられた結果で置き換える	<name3> = <name3> . fillna ( <name5> )	<name3> = <name3> . fillna ( <name5> )
<name3> 表のインデックスをリセットを再代入する	<name3> = <name3> . reset_index ( )	<name3> = <name3> . reset_index ( drop = True )
表 <name5> の未入力の値を直前の行の値で補い、 <name5> にする	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
カラム <val6> とコラム <val1> が降順になるように表 <name4> をソートし、置き換える	<name4> = <name4> . sort_values ( [ <val6> , <val1> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val6> , <val1> ] , ascending = False )
存在する <val2> を <name5> 表の中に欠損に置換した結果を <name5> に代入する	<name5> = <name5> . replace ( <val2> , np . nan )	<name5> = <name5> . replace ( <val2> , np . nan )
<name2> 表中の <val1> コラムと <val6> カラムに重複はあるのかどうか	<name2> . duplicated ( subset = [ <val1> , <val6> ] )	<name2> . duplicated ( subset = [ <val1> , <val6> ] )
<name4> 表中の欠損を <name3> で置き換えた結果を <name4> とする	<name4> = <name4> . fillna ( <name3> )	<name4> = <name4> . fillna ( <name3> )
<name6> の中の <val3> に重複がある行を削除した結果を <name5> にする	<name5> = <name6> . drop_duplicates ( subset = <val3> )	<name5> = <name6> . drop_duplicates ( subset = <val3> )
<name6> 中の欠損を含む行を削除して、 <name4> に代入する	<name4> = <name6> . dropna ( )	<name4> = <name6> . dropna ( )
<name2> の <val5> と <val4> と <val6> を選び、	<name2> [ [ <val5> , <val4> , <val6> ] ] .	<name2> [ [ <val5> , <val4> , <val6> ] ] .
<val5> に文字サイズを指定する	fontsize = <val5>	fontsize = <val5>
<name1> 表内の欠損を <name2> で埋めた結果で置き換える	<name1> = <name1> . fillna ( <name2> )	<name1> = <name1> . fillna ( <name2> )
<name6> の中に存在する <val5> を欠損で置換した結果を <name6> に代入する	<name6> = <name6> . replace ( <val5> , np . nan )	<name6> = <name6> . replace ( <val5> , np . nan )
<name3> 表の未記入の値を <name1> にし、再代入する	<name3> = <name3> . fillna ( <name1> )	<name3> = <name3> . fillna ( <name1> )
<name2> 表上の NaN を含む行を消して、置き換える	<name2> . dropna ( inplace = True )	<name2> = <name2> . dropna ( )
<name6> 表の NaN を <name4> に変え、再代入する	<name6> = <name6> . fillna ( <name4> )	<name6> = <name6> . fillna ( <name4> )
目印の輪郭の色を灰色とする	markeredgecolor = 'gray'	markeredgecolor = 'gray'
<val5> と <val6> を元に <name3> 全体を降順でソートし、 <name3> とする	<name3> = <name3> . sort_values ( [ <val5> , <val6> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val5> , <val6> ] , ascending = False )
表 <name2> をインデックスで小さい順に並び替えた結果で置き換える	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name3> 上のコラム <val5> のダブる行を落とされた結果で書き換える	<name3> . drop_duplicates ( subset = <val5> , inplace = True )	<name3> . drop_duplicates ( subset = <val5> , inplace = True )
<name1> の行の名前を <val5> から <val3> にリネームされた結果を <name1> とする	<name1> = <name1> . rename ( index = { <val5> : <val3> } )	<name1> = <name1> . rename ( index = { <val5> : <val3> } )
<name3> 表中に存在する <val4> を欠損とし、書き換える	<name3> . replace ( <val4> , np . nan , inplace = True )	<name3> . replace ( <val4> , np . nan , inplace = True )
区間の数を <name6> 、ビンのラベルを <name3> リストとして <name1> 表の <val4> 列を分割する	pd . cut ( <name1> [ <val4> ] , <name6> , label = <name3> )	pd . cut ( <name1> [ <val4> ] , <name6> , label = <name3> )
グラフに格子線を描く	plt . grid ( True )	plt . grid ( True )
表 <name5> の中で重複した行の合計	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
表 <name3> 中の未記入の値を表 <name3> の平均をとって補った結果で置き換える	<name3> = <name3> . fillna ( <name3> . mean ( ) )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
箱ひげ図にデータフレーム <name5> のカラム <val4> をプロットする	plt . boxplot ( <name5> [ <val4> ] )	plt . boxplot ( <name5> [ <val4> ] )
<val1> で <name4> 全体を昇順にソートした結果を再代入する	<name4> = <name4> . sort_values ( <val1> )	<name4> = <name4> . sort_values ( <val1> )
<name1> 表内の重複した行をドロップし、 <name1> とする	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
y 軸に <val1> というラベルを加える	plt . ylabel ( <val1> )	plt . ylabel ( <val1> )
<val5> を表データとして読み込んだ結果を <name6> にする	<name6> = pd . read_csv ( <val5> )	<name6> = pd . read_csv ( <val5> )
<name4> 表を <val5> というファイル名でエクセル形式に書き込む	<name4> . to_excel ( <val5> )	<name4> . to_excel ( <val5> )
<name6> にある欠損値の個数	<name6> . isnull ( ) . sum ( )	<name6> . isnull ( ) . sum ( )
<name1> の <val2> の曜日	<name1> [ <val2> ] . dt . weekday_name	<name1> [ <val2> ] . dt . weekday_name
表 <name4> の中に存在する <val1> を欠損で置換した結果を <name4> にする	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
ビン数を <name3> 、ビンのラベルをリスト <name6> として表 <name5> の列 <val2> を分割する	pd . cut ( <name5> [ <val2> ] , <name3> , label = <name6> )	pd . cut ( <name5> [ <val2> ] , <name3> , label = <name6> )
<name5> 表の行の重複を判定	<name5> . duplicated ( )	<name5> . duplicated ( )
表 <name4> 内の欠損を削除した結果を <name6> にする	<name6> = <name4> . dropna ( )	<name6> = <name4> . dropna ( )
表 <name2> の中のコラム <val4> に重複がある行を削除し、書き換える	<name2> . drop_duplicates ( subset = <val4> , inplace = True )	<name2> . drop_duplicates ( subset = <val4> , inplace = True )
<name3> の <val4> が <val2> または <val1> のデータを抽出する	<name3> [ <name3> [ <val4> ] . isin ( [ <val2> , <val1> ] ) ]	<name3> [ <name3> [ <val4> ] < <val2> ]
<name6> にある <val5> を未入力の値とした結果で書き換える	<name6> . replace ( <val5> , np . nan , inplace = True )	<name6> . replace ( <val5> , np . nan , inplace = True )
<name2> の中の未記入の値を含む行を落とされた結果を <name2> に代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
<name3> 表内の欠損値を直前の行の値で補った結果を <name3> とする	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
<name2> を箱ひげ図で出力する	plt . boxplot ( <name2> )	plt . boxplot ( <name2> )
打点を六角形とする	marker = 'h'	marker = 'h'
<name2> の <val1> に <val3> の名前を <val6> の名前を <val4> にリネームし、置き換える	<name2> = <name2> . rename ( columns = { <val3> : <val1> , <val6> : <val4> } )	<name2> = <name2> . rename ( columns = { <val3> : <val1> , <val6> : <val4> } )
表 <name1> の <val4> を未入力の値に置換し未入力の値がある行を取り除かれた結果を <name5> とする	<name5> = <name1> . replace ( <val4> , np . nan ) . dropna ( )	<name5> = <name1> . replace ( <val4> , np . nan ) . dropna ( )
データ <val6> をタブ区切りで読み込み、 <name4> とする	<name4> = pd . read_csv ( <val6> , sep = '\t' )	<name4> = pd . read_csv ( <val6> , sep = '\t' )
要素の数が等しくなるように表 <name6> の列 <val2> を区間の数を <name1> として分割した結果を <name4> にする	<name4> = pd . qcut ( <name6> [ <val2> ] , <name1> )	<name4> = pd . qcut ( <name6> [ <val2> ] , <name1> )
<name3> の <val5> を抽出する	<name3> [ <val5> ]	<name3> [ <val5> ] .
表 <name2> 上のコラム <val5> の重複する行を消した結果を <name2> とする	<name2> = <name2> . drop_duplicates ( subset = <val5> )	<name2> = <name2> . drop_duplicates ( subset = <val5> )
インデックスを元に <name3> 表全体を小さい順にソートする	<name3> . sort_index ( )	<name3> . sort_index ( )
表 <name1> の <val4> にコラム <val5> の名前を <val2> にコラム <val6> の名前をリネームし、 <name1> に代入する	<name1> = <name1> . rename ( columns = { <val5> : <val4> , <val6> : <val2> } )	<name1> = <name1> . rename ( columns = { <val5> : <val4> , <val6> : <val2> } )
<val1> 番目までのコラムを表示させる	pd . set_option ( 'display.max_columns' , <val1> )	pd . set_option ( 'display.max_columns' , <val1> )
df 全体をインデックスを軸に小さい順でソートされた結果を <name3> に代入する	<name3> = df . sort_index ( )	<name3> = df . sort_index ( )
表 <name5> 中の列それぞれに存在する <val4> の数の和を確認する	<name5> . isin ( [ <val4> ] ) . sum ( )	<name5> . isin ( [ <val4> ] ) . sum ( )
<name3> 表で重複した行数の合計	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
データフレームを <val4> データからタブ区切りで読み込んだ結果を <name2> に代入する	<name2> = pd . read_csv ( <val4> , sep = '\t' )	<name2> = pd . read_csv ( <val4> , sep = '\t' )
エクセルファイル <val6> の全てのシートから表を読み込まれた結果を <name4> にする	<name4> = pd . read_excel ( <val6> , sheet_name = None )	<name4> = pd . read_excel ( <val6> , sheet_name = None )
表 <name1> のインデックス <val5> の名前を <val3> にリネームした結果で書き換える	<name1> . rename ( index = { <val5> : <val3> } , inplace = True )	<name1> . rename ( index = { <val5> : <val3> } , inplace = True )
<name2> 表の <val1> を NaN で埋めて、書き換える	<name2> . replace ( <val1> , np . nan , inplace = True )	<name2> . replace ( <val1> , np . nan , inplace = True )
表 <name5> 中に存在する <val4> を欠損に置換し、置き換える	<name5> = <name5> . replace ( <val4> , np . nan )	<name5> = <name5> . replace ( <val4> , np . nan )
<name6> 表の <val3> 行目から <val5> 行目まで	<name6> [ <val3> : <val5> ]	<name6> [ <val3> : <val5> ]
<name6> の <val4> をビンを <name5> 、ビンのラベルを <name1> として分割し、 <name3> にする	<name3> = pd . cut ( <name6> [ <val4> ] , <name5> , label = <name1> )	<name3> = pd . cut ( <name6> [ <val4> ] , <name5> , label = <name1> )
縦 <val3> 横 <val5> に表示するグラフの大きさをする	plt . figure ( figsize = ( <val5> , <val3> ) )	plt . figure ( figsize = ( <val5> , <val3> ) )
一番左の列をインデックスにセット、 <val4> を読まれた結果を <name6> にする	<name6> = pd . read_csv ( <val4> , index_col = 0 )	<name6> = pd . read_csv ( <val4> , index_col = 0 )
<name3> 表の未入力の値を <name6> に置換して、 <name4> に代入する	<name4> = <name3> . fillna ( <name6> )	<name4> = <name3> . fillna ( <name6> )
打点の形状を点とする	marker = '.'	marker = '.'
表 <name1> のコラム <val6> を選択して、	<name1> [ <val6> ] .	<name1> [ <val6> ] .
<val4> から <val6> に <name2> の列名を変更する	<name2> . rename ( columns = { <val4> : <val6> } )	<name2> . rename ( columns = { <val4> : <val6> } )
存在する <val5> を表 <name2> の中に欠損で埋め、 <name2> とする	<name2> = <name2> . replace ( <val5> , np . nan )	<name2> = <name2> . replace ( <val5> , np . nan )
<name2> 表の <val4> を欠損にされた結果を <name2> とする	<name2> = <name2> . replace ( <val4> , np . nan )	<name2> = <name2> . replace ( <val4> , np . nan )
<name2> 表中の欠損が存在する行をドロップして、置き換える	<name2> . dropna ( inplace = True )	<name2> = <name2> . dropna ( )
列名を指定しないで <val3> データを読み込んで、 <name4> とする	<name4> = pd . read_csv ( <val3> , header = None )	<name4> = pd . read_csv ( <val3> , header = None )
エクセルファイル <val4> の <val2> からデータフレームを読んで、 <name6> とする	<name6> = pd . read_excel ( <val4> , sheet_name = <val2> )	<name6> = pd . read_excel ( <val4> , sheet_name = <val2> )
x 座標を <name1> として <name5> の垂直棒グラフを表示する	plt . bar ( <name1> , <name5> )	plt . barh ( <name1> , <name5> )
<name3> にある欠損の個数	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
表 <name1> 中の欠損値を含む行をドロップされた結果を <name2> とする	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
表 <name3> の <val2> を欠損値で補った結果を再代入する	<name3> = <name3> . replace ( <val2> , np . nan )	<name3> = <name3> . replace ( <val2> , np . nan )
エクセルファイル <val2> の <val4> シート名を読み込んでデータフレームに格納する	pd . read_excel ( <val2> , sheet_name = <val4> )	pd . read_excel ( <val2> , sheet_name = <val4> )
x 軸に <val1> というラベルをつける	plt . xlabel ( <val1> )	plt . xlabel ( <val1> )
<val3> データを表に格納した結果を <name6> とする	<name6> = pd . read_csv ( <val3> )	<name6> = pd . read_csv ( <val3> )
<name1> と <name5> のグラフを <val2> と軸名をつけて表示する	plt . plot ( <name1> , <name5> , label = <val2> )	plt . plot ( <name1> , <name5> , label = <val2> )
表 <name6> の中の未入力の値を <name5> に置換して、 <name6> に代入する	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
<name3> 表の中の未記入の値を <name5> とした結果を <name6> に代入する	<name6> = <name3> . fillna ( <name5> )	<name6> = <name3> . fillna ( <name5> )
<name4> 内の <val5> の重複している行を削除した結果を <name4> とする	<name4> = <name4> . drop_duplicates ( subset = <val5> )	<name4> = <name4> . drop_duplicates ( subset = <val5> )
<name1> 表の要素	<name1> . values	<name1> . values
打点を×とする	marker = 'x'	marker = 'x'
<name3> 中の未記入の値を <name2> に置換して、 <name3> にする	<name3> = <name3> . fillna ( <name2> )	<name3> = <name3> . fillna ( <name2> )
<name1> の元のインデックスをリセットして、 <name1> とする	<name1> = <name1> . reset_index ( drop = True )	<name1> = <name1> . reset_index ( drop = True )
表 <name1> を <val5> というファイル名でエクセルファイルに入れる	<name1> . to_excel ( <val5> )	<name1> . to_excel ( <val5> )
<name4> 表のそれぞれの列にある <val3> の数の合計値を表示する	<name4> . isin ( [ <val3> ] ) . sum ( )	<name4> . isin ( [ <val3> ] ) . sum ( )
<name6> の元のインデックスをリセットして、書き換える	<name6> . reset_index ( drop = True , inplace = True )	<name6> . reset_index ( drop = True , inplace = True )
<name2> 表をインデックスにそって昇順でソートされた結果を <name2> にする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name6> の中の未記入の値の数を調べる	<name6> . isnull ( ) . sum ( )	<name6> . isnull ( ) . sum ( )
<val6> より <name3> の <val1> が大きいデータ	<name3> [ <name3> [ <val1> ] > <val6> ]	<name3> [ <name3> [ <val1> ] > <val6> ]
列番号 <val5> をインデックスとしてデータ <val6> からデータフレームを読み込む	pd . read_csv ( <val6> , index_col = <val5> )	pd . read_csv ( <val6> , index_col = <val5> )
表 <name2> 中の欠損が存在する行を落として、 <name4> にする	<name4> = <name2> . dropna ( )	<name4> = <name2> . dropna ( )
表 <name5> 内の NaN を <name6> とした結果で書き換える	<name5> . fillna ( <name6> , inplace = True )	<name5> . fillna ( <name6> , inplace = True )
インデックスを元に <name2> を昇順でソートした結果を <name2> に代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name3> 表の <val6> 列ごとの <val5> コラムの平均を算出する	<name3> . groupby ( [ <val6> ] ) [ <val5> ] . mean ( )	<name3> . groupby ( [ <val6> ] ) [ <val5> ] . mean ( )
<name3> 表内のそれぞれのカラムに存在する <val6> の個数の和	<name3> . isin ( [ <val6> ] ) . sum ( )	<name3> . isin ( [ <val6> ] ) . sum ( )
棒グラフの位置を中心に設定して、横軸を <name3> とした <name2> の縦棒グラフをプロットする	plt . bar ( <name3> , <name2> , align = 'center' )	plt . bar ( <name3> , <name2> , align = 'center' )
<name1> の未入力の値がある行を取り除いた結果を <name1> とする	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
データフレームを <val1> からカンマ区切りで読み込んだ結果を <name2> とする	<name2> = pd . read_csv ( <val1> , sep = ',' )	<name2> = pd . read_csv ( <val1> , sep = ',' )
<name1> 上の <val6> と <val3> に重複があるのかどうかをチェックする	<name1> . duplicated ( subset = [ <val6> , <val3> ] )	<name1> . duplicated ( subset = [ <val6> , <val3> ] )
<name4> 表に未入力の値がどの程度あるのか確認する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
<name6> 表中の未記入の値を含む行を落として、 <name6> とする	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<val1> という名前のエクセルファイルの <val6> 番目のシートを表として読み、 <name3> にする	<name3> = pd . read_excel ( <val1> , sheet_name = <val6> )	<name3> = pd . read_excel ( <val1> , sheet_name = <val6> )
TF で表 <name1> に重複があるのかどうかを返す	<name1> . duplicated ( )	<name1> . duplicated ( )
存在する <val6> を <name5> の中に欠損で補われた、結果を <name1> に代入する	<name1> = <name5> . replace ( <val6> , np . nan )	<name1> = <name5> . replace ( <val6> , np . nan )
<name4> 表を <val5> データという名前にして保存する	<name4> . to_csv ( <val5> )	<name4> . to_csv ( <val5> )
データフレームを <val1> からカンマ区切りで読み込む	pd . read_csv ( <val1> , sep = ',' )	pd . read_csv ( <val1> , sep = ',' )
表 <name6> の中の欠損がある行を削除して、再代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name2> 表の中の未記入の値を <name3> で埋める	<name2> . fillna ( <name3> )	<name2> . fillna ( <name3> )
<name2> 表をエクセルファイル <val3> という名前に設定して入れる	<name2> . to_excel ( <val3> )	<name2> . to_excel ( <val3> )
エクセルファイル <val5> のシート全部を表データとして読んで、 <name1> に代入する	<name1> = pd . read_excel ( <val5> , sheet_name = None )	<name1> = pd . read_excel ( <val5> , sheet_name = None )
昇順に <name5> の <val6> をソートして、 <name1> に代入する	<name1> = <name5> . sort_values ( <val6> )	<name1> = <name5> . sort_values ( <val6> )
<name3> 表の <val2> カラムに重複はあるのかどうか検出	<name3> . duplicated ( subset = <val2> )	<name3> . duplicated ( subset = <val2> )
表 <name3> 内の欠損値を含む行をドロップした結果を <name3> とする	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
<name2> 表の中の <val4> を未記入の値に変え未記入の値がある行を落とした結果で書き換える	<name2> . replace ( <val4> , np . nan ) . dropna ( inplace = True )	<name2> . replace ( <val4> , np . nan ) . dropna ( inplace = True )
先頭の列をインデックスとして、データ <val6> を表として読み込む	pd . read_csv ( <val6> , index_col = 0 )	pd . read_csv ( <val6> , index_col = 0 )
そのもともとのインデックスをリセットする	. reset_index ( drop = True )	. reset_index ( drop = True )
<name6> 中の <val1> と <val5> に重複があるのかどうか確認する	<name6> . duplicated ( subset = [ <val1> , <val5> ] )	<name6> . duplicated ( subset = [ <val1> , <val5> ] )
表 <name6> の列 <val1> の曜日の数値型	<name6> [ <val1> ] . dt . dayofweek	<name6> [ <val1> ] . dt . dayofweek
<name6> の <val1> をインデックスとしてセットし、書き換える	<name6> . set_index ( <val1> , inplace = True )	<name6> . set_index ( <val1> , inplace = True )
区間の数を <name5> 、ビンの名前をインデックスとして <name6> の <val1> を分割して、 <name4> にする	<name4> = pd . cut ( <name6> [ <val1> ] , <name5> , label = False )	<name4> = pd . cut ( <name6> [ <val1> ] , <name5> , label = False )
グラフカラーを赤色とする	color = 'red'	color = 'red'
エクセルファイル <val3> のシート名 <val2> を読み込み、表に格納する	pd . read_excel ( <val3> , sheet_name = <val2> )	pd . read_excel ( <val3> , sheet_name = <val2> )
表 <name5> 中で重複した行の数の合計	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
<name2> の中のカテゴリ変数をダミー変数化された結果を <name1> にする	<name1> = pd . get_dummies ( <name2> )	<name1> = pd . get_dummies ( <name2> )
<name2> 表の <val3> コラムと <val6> を削除し、置き換える	<name2> . drop ( [ <val3> , <val6> ] , axis = 1 , inplace = True )	<name2> = <name2> . drop ( [ <val3> , <val6> ] , axis = 1 )
重複する最後の行を残して表 <name4> 内の重複している行を消された結果で置き換える	<name4> . drop_duplicates ( keep = False , inplace = True )	<name4> = <name4> . drop_duplicates ( keep = False )
存在する <val2> を表 <name6> 中に欠損に置換して、 <name6> にする	<name6> = <name6> . replace ( <val2> , np . nan )	<name6> = <name6> . replace ( <val2> , np . nan )
<name4> 表中の重複している行を削除し、 <name3> にする	<name3> = <name4> . drop_duplicates ( )	<name3> = <name4> . drop_duplicates ( )
<name4> 表の中の未記入の値を落とし、 <name4> にする	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name6> 内の欠損を <name2> とされた結果を <name6> とする	<name6> = <name6> . fillna ( <name2> )	<name6> = <name6> . fillna ( <name2> )
表 <name6> のインデックスが <val5> の行を取得する	<name6> . loc [ <val5> ]	<name6> . loc [ <val5> ]
エクセルファイル <val3> の <val4> を読み込み、表に格納する	pd . read_excel ( <val3> , sheet_name = <val4> )	pd . read_excel ( <val3> , sheet_name = <val4> )
<val3> という軸の名前をグラフの x 軸につける	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
ヘッダーなしで <val6> データを読む	pd . read_csv ( <val6> , header = None )	pd . read_csv ( <val6> , header = None )
表 <name2> 中の重複要素がある行を落とし、 <name5> にする	<name5> = <name2> . drop_duplicates ( )	<name5> = <name2> . drop_duplicates ( )
エクセルファイル <val4> の <val1> シート名を表とする	pd . read_excel ( <val4> , sheet_name = <val1> )	pd . read_excel ( <val4> , sheet_name = <val1> )
<val6> に透明度をセットする	alpha = <val6>	alpha = <val6>
昇順に表 <name6> をカラム <val2> でソートされた結果を <name3> に代入する	<name3> = <name6> . sort_values ( <val2> )	<name3> = <name6> . sort_values ( <val2> )
ある <val5> を表 <name2> に未入力の値に置き換える	<name2> . replace ( <val5> , np . nan )	<name2> . replace ( <val5> , np . nan )
グラフにメモリを加える	plt . grid ( True )	plt . grid ( True )
<name3> 表中の重複した行の数を見る	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
<name2> 表内の <val4> を欠損に変え欠損が存在する行を削除して、置き換える	<name2> = <name2> . replace ( <val4> , np . nan ) . dropna ( )	<name2> = <name2> . replace ( <val4> , np . nan ) . dropna ( )
打点をひし形とする	marker = 'D'	marker = 'D'
その列名	. columns	. columns
<name6> 表の未入力の値がある行を取り除く	<name6> . dropna ( )	<name6> . dropna ( )
表 <name3> の中の重複した行	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
表 <name3> の中の重複した行の数を見る	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
<val3> から <val4> に表 <name5> の列名を変更された結果で置き換える	<name5> = <name5> . rename ( columns = { <val3> : <val4> } )	<name5> = <name5> . rename ( columns = { <val3> : <val4> } )
表 <name1> 全体をインデックスに基づいて昇順でソートして、置き換える	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
<name3> の中のカテゴリ変数をダミー変数にする	pd . get_dummies ( <name3> )	pd . get_dummies ( <name3> )
<name5> 表中の <val6> コラムと <val2> カラムに重複があるのかどうか確認を確認する	<name5> . duplicated ( subset = [ <val6> , <val2> ] )	<name5> . duplicated ( subset = [ <val6> , <val2> ] )
<name3> 表を <val5> カラムで昇順にソートした結果で置き換える	<name3> = <name3> . sort_values ( <val5> )	<name3> = <name3> . sort_values ( <val5> )
区間を <name1> 、ビンの名前を <name5> リストとして <name2> 表の <val6> 列を分割された結果を <name4> にする	<name4> = pd . cut ( <name2> [ <val6> ] , <name1> , label = <name5> )	<name4> = pd . cut ( <name2> [ <val6> ] , <name1> , label = <name5> )
表 <name5> の列 <val1> をビンの数を <name6> として分割した結果を <name2> にする	<name2> = pd . cut ( <name5> [ <val1> ] , <name6> )	<name2> = pd . cut ( <name5> [ <val1> ] , <name6> )
<name1> の <val5> を選ぶ	<name1> [ <val5> ]	<name1> [ <val5> ]
<name1> 表内の欠損値を直前の行の値で補われた、結果を <name2> にする	<name2> = <name1> . fillna ( method = 'ffill' )	<name2> = <name1> . fillna ( method = 'ffill' )
表 <name6> の元々あったインデックスをリセットする	<name6> . reset_index ( drop = True )	<name6> . reset_index ( drop = True )
存在する <val4> を <name5> 内に NaN とし、書き換える	<name5> . replace ( <val4> , np . nan , inplace = True )	<name5> . replace ( <val4> , np . nan , inplace = True )
一番左の列をインデックスにセットセットして、 <val5> を読んで、 <name4> とする	<name4> = pd . read_csv ( <val5> , index_col = 0 )	<name4> = pd . read_csv ( <val5> , index_col = 0 )
<name2> 表中の欠損値を <name4> で埋められた結果を再代入する	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
<val2> データから表をタブ区切りで読み込んで、 <name1> とする	<name1> = pd . read_csv ( <val2> , sep = '\t' )	<name1> = pd . read_csv ( <val2> , sep = '\t' )
<name4> 表の中の未入力の値の数を確認する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
エクセルファイル <val5> の <val4> 番目のシートを読み込んで表データに格納する	pd . read_excel ( <val5> , sheet_name = <val4> )	pd . read_excel ( <val5> , sheet_name = <val4> )
表 <name1> のコラム <val4> と <val6> をドロップして、 <name5> にする	<name5> = <name1> . drop ( [ <val4> , <val6> ] , axis = 1 )	<name5> = <name1> . drop ( [ <val4> , <val6> ] , axis = 1 )
<val4> から <val6> に表 <name3> のカラム名を変えて、 <name3> にする	<name3> = <name3> . rename ( columns = { <val4> : <val6> } )	<name3> = <name3> . rename ( columns = { <val4> : <val6> } )
<name5> のインデックス名を <val2> から <val6> にリネームした結果を <name5> に代入する	<name5> = <name5> . rename ( index = { <val2> : <val6> } )	<name5> = <name5> . rename ( index = { <val2> : <val6> } )
<name1> の中の <val2> を未入力の値に置き換え未入力の値がある行を取り除き、 <name1> に代入する	<name1> = <name1> . replace ( <val2> , np . nan ) . dropna ( )	<name1> = <name1> . replace ( <val2> , np . nan ) . dropna ( )
<name4> 中の未記入の値を直前の行の値で埋めて、再代入する	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
<name4> 表の <val5> 列、 <val3> カラムを選択する	<name4> [ [ <val5> , <val3> ] ]	<name4> [ [ <val5> , <val3> ] ]
表 <name3> 内のそれぞれのカラムにある <val6> の個数の合計を調べる	<name3> . isin ( [ <val6> ] ) . sum ( )	<name3> . isin ( [ <val6> ] ) . sum ( )
表 <name4> 中の <val2> を欠損に変え欠損が存在する行を削除された結果でインプレースする	<name4> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name4> . replace ( <val2> , np . nan ) . dropna ( inplace = True )
グラフの y 軸のラベルを <val2> にセットする	plt . ylabel ( <val2> )	plt . ylabel ( <val2> )
<name1> 表中の欠損値を <name1> 表の平均値で埋めた結果で置き換える	<name1> . fillna ( <name1> . mean ( ) , inplace = True )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
エクセルファイル <val5> の <val1> を読み込み、表に格納した結果を <name4> に代入する	<name4> = pd . read_excel ( <val5> , sheet_name = <val1> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val1> )
表 <name6> 内の重複する行を消し、 <name6> にする	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
表 <name6> の中の未入力の値を <name4> に置換して、再代入する	<name6> = <name6> . fillna ( <name4> )	<name6> = <name6> . fillna ( <name4> )
エクセルファイル <val6> の <val1> シート名から表を読んで、 <name3> とする	<name3> = pd . read_excel ( <val6> , sheet_name = <val1> )	<name3> = pd . read_excel ( <val6> , sheet_name = <val1> )
列 <val2> とカラム <val1> を元に表 <name5> を値が大きい順でソートして、再代入する	<name5> = <name5> . sort_values ( [ <val2> , <val1> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val2> , <val1> ] , ascending = False )
<name3> 表中に重複があるのかどうか検出をチェックする	<name3> . duplicated ( )	<name3> . duplicated ( )
表 <name6> 上のダブる行を落とし、 <name2> に代入する	<name2> = <name6> . drop_duplicates ( )	<name2> = <name6> . drop_duplicates ( )
列番号 <val3> をインデックスと <val6> データを表に格納し、 <name1> に代入する	<name1> = pd . read_csv ( <val6> , index_col = <val3> )	<name1> = pd . read_csv ( <val6> , index_col = <val3> )
表 <name1> と表 <name4> を 1 つにまとめて、 <name2> にする	<name2> = pd . merge ( <name1> , <name4> )	<name2> = pd . merge ( <name1> , <name4> )
<name6> の <val5> の名前を <val2> に <val4> に <val1> の名前をリネームした結果を <name3> にする	<name3> = <name6> . rename ( columns = { <val5> : <val2> , <val1> : <val4> } )	<name3> = <name6> . rename ( columns = { <val5> : <val2> , <val1> : <val4> } )
データ <val3> という名前の CSV データとして表 <name2> をセーブする	<name2> . to_csv ( <val3> )	<name2> . to_csv ( <val3> )
<val6> データを <val4> 区切りで読み込んだ結果を <name3> とする	<name3> = pd . read_csv ( <val6> , sep = <val4> )	<name3> = pd . read_csv ( <val6> , sep = <val4> )
<name4> 表全体をインデックスに沿って昇順でソートして、 <name4> にする	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
<name2> 表の <val3> に <val1> コラムの名前を <val6> に <val5> コラムの名前をリネームし、再代入する	<name2> = <name2> . rename ( columns = { <val1> : <val3> , <val5> : <val6> } )	<name2> = <name2> . rename ( columns = { <val1> : <val3> , <val5> : <val6> } )
<name1> 表のインデックス名を <val5> から <val3> にリネームし、 <name6> とする	<name6> = <name1> . rename ( index = { <val5> : <val3> } )	<name6> = <name1> . rename ( index = { <val5> : <val3> } )
マーカーの形状はアスタリスクを用いる	marker = '*'	marker = '*'
マーカーの形状の色はシアンを使用する	markerfacecolor = 'cyan'	markerfacecolor = 'cyan'
<name4> 表中にある <val6> を未記入の値に置き換え、 <name1> に代入する	<name1> = <name4> . replace ( <val6> , np . nan )	<name1> = <name4> . replace ( <val6> , np . nan )
表 <name1> 中のダブっているデータをえる	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
<name5> 表の <val1> コラムをインデックスに変更して、 <name5> にする	<name5> = <name5> . set_index ( <val1> )	<name5> = <name5> . set_index ( <val1> )
表 <name5> をインデックスで順番になるようにソートする	<name5> . sort_index ( )	<name5> . sort_index ( )
ある <val1> を <name6> 表に未入力の値で埋め、置き換える	<name6> . replace ( <val1> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val1> , np . nan )
マーカーの大きさを <val6> とする	markersize = <val6>	markersize = <val6>
区間を <name4> として表 <name2> の列 <val1> をビンに含まれる個数が等しくなるように分割された結果を <name3> に代入する	<name3> = pd . qcut ( <name2> [ <val1> ] , <name4> )	<name3> = pd . qcut ( <name2> [ <val1> ] , <name4> )
表 <name1> 中の欠損を <name3> に置き換えた結果を <name6> に代入する	<name6> = <name1> . fillna ( <name3> )	<name6> = <name1> . fillna ( <name3> )
<val2> から <val1> に <name5> 表のインデックス名をリネームした結果で置き換える	<name5> = <name5> . rename ( index = { <val2> : <val1> } )	<name5> = <name5> . rename ( index = { <val2> : <val1> } )
<name5> 表の <val4> 列を区間を <name6> 、ビンのラベルを <name1> リストとして分割して、 <name3> に代入する	<name3> = pd . cut ( <name5> [ <val4> ] , <name6> , label = <name1> )	<name3> = pd . cut ( <name5> [ <val4> ] , <name6> , label = <name1> )
<val3> という名前のエクセルファイルの全てのシートを表として読んだ結果を <name6> とする	<name6> = pd . read_excel ( <val3> , sheet_name = None )	<name6> = pd . read_excel ( <val3> , sheet_name = None )
列の最大表示幅を <val4> に設定する	pd . set_option ( 'max_colwidth' , <val4> )	pd . set_option ( 'max_colwidth' , <val4> )
CSV ファイル <val2> を表データとして読み込んだ結果を <name3> に代入する	<name3> = pd . read_csv ( <val2> )	<name3> = pd . read_csv ( <val2> )
<val3> から <val1> に <name4> の行名をリネームし、 <name4> にする	<name4> = <name4> . rename ( index = { <val3> : <val1> } )	<name4> = <name4> . rename ( index = { <val3> : <val1> } )
表 <name6> 中の欠損を表 <name6> の平均をとって埋め、インプレースする	<name6> . fillna ( <name6> . mean ( ) , inplace = True )	<name6> . fillna ( <name6> . mean ( ) , inplace = True )
ビン数を <name4> 、ビンのラベルを 0 始まりの連番として表 <name3> の列 <val5> を分割する	pd . cut ( <name3> [ <val5> ] , <name4> , label = False )	pd . cut ( <name3> [ <val5> ] , <name4> , label = False )
<name1> 内のコラムにある <val3> の個数	<name1> . isin ( [ <val3> ] ) . sum ( )	<name1> . isin ( [ <val3> ] ) . sum ( )
<name3> 表のもともとのインデックスをリセットされた結果を <name3> とする	<name3> = <name3> . reset_index ( drop = True )	<name3> = <name3> . reset_index ( drop = True )
表 <name4> 内に重複があるかどうか検出する	<name4> . duplicated ( )	<name4> . duplicated ( )
<name3> の中の未入力の値を <name1> に置き換え、書き換える	<name3> . fillna ( <name1> , inplace = True )	<name3> . fillna ( <name1> , inplace = True )
<val6> というファイル名でエクセル形式に表 <name5> を入れる	<name5> . to_excel ( <val6> )	<name5> . to_excel ( <val6> )
<name6> の <val4> を要素の数が等しくなるようにビンの数を <name2> として分割して、 <name5> とする	<name5> = pd . qcut ( <name6> [ <val4> ] , <name2> )	<name5> = pd . qcut ( <name6> [ <val4> ] , <name2> )
<val4> から <val1> に表 <name3> の列の名前を変更して、再代入する	<name3> = <name3> . rename ( columns = { <val4> : <val1> } )	<name3> = <name3> . rename ( columns = { <val4> : <val1> } )
元のインデックスを削除し、表 <name2> のインデックスをリセットし、 <name2> とする	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
グラフの <name3> 軸を <name3> とした <name4> の縦棒グラフをグラフ幅を <val1> として描写する	plt . bar ( <name3> , <name4> , width = <val1> )	plt . bar ( <name3> , <name4> , width = <val1> )
マーカーの種類を点とする	marker = '.'	marker = '.'
データフレーム <name6> のカラム <val1> とカラム <val3> とカラム <val5> を箱ひげ図で描写する	plt . boxplot ( [ <name6> [ <val1> ] , <name6> [ <val3> ] , <name6> [ <val5> ] ] )	plt . boxplot ( [ <name6> [ <val1> ] , <name6> [ <val3> ] , <name6> [ <val5> ] ] )
インデックスを元に <name3> をソートされた結果で置き換える	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name5> 上の未記入の値を含む行を落とし、書き換える	<name5> . dropna ( inplace = True )	<name5> . dropna ( inplace = True )
<val2> × <val6> に出力するグラフの大きさを設定する	plt . figure ( figsize = ( <val2> , <val6> ) )	plt . figure ( figsize = ( <val2> , <val6> ) )
<name4> 表の <val1> を NaN で補う	<name4> . replace ( <val1> , np . nan )	<name4> . replace ( <val1> , np . nan )
<name4> 表のインデックスを振り直して、元のインデックスを削除して、書き換える	<name4> . reset_index ( drop = True , inplace = True )	<name4> . reset_index ( drop = True , inplace = True )
表 <name1> と表 <name5> を縦で結合し、 <name3> に代入する	<name3> = pd . concat ( [ <name1> , <name5> ] )	<name3> = pd . concat ( [ <name1> , <name5> ] )
<name3> の中の欠損を <name6> に置き換え、 <name1> に代入する	<name1> = <name3> . fillna ( <name6> )	<name1> = <name3> . fillna ( <name6> )
の <val5> をインデックスにする	. set_index ( <val5> )	. set_index ( <val5> )
エクセルファイル <val2> の全てのシートをデータフレームに読み込んだ結果を <name4> とする	<name4> = pd . read_excel ( <val2> , sheet_name = None )	<name4> = pd . read_excel ( <val2> , sheet_name = None )
構成割合を円グラフ上に示す小数点以下 2 桁までの数値をパーセントで出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
円グラフに割合を示す小数点以下 2 桁までの数値をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
左側のデータのインデックスと右側のデータの <val1> カラムをキーとして <name4> 表と <name2> 表をマージし、 <name3> とする	<name3> = pd . merge ( <name4> , <name2> , left_index = True , right_on = <val1> )	<name3> = pd . merge ( <name4> , <name2> , left_index = True , right_on = <val1> )
<val1> データという CSV として <name6> 表を出力する	<name6> . to_csv ( <val1> )	<name6> . to_csv ( <val1> )
グラフ内のフォントを日本語にする	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
<name4> 表の <val5> 列を昇順にソートした結果を <name3> に代入する	<name3> = <name4> . sort_values ( <val5> )	<name3> = <name4> . sort_values ( <val5> )
<name4> 全体を <val6> と <val5> を軸に逆順でソートした結果でインプレースする	<name4> . sort_values ( [ <val6> , <val5> ] , ascending = False , inplace = True )	<name4> . sort_values ( [ <val6> , <val5> ] , ascending = False , inplace = True )
表 <name2> 内の NaN を <name4> で置き換えた結果でインプレースする	<name2> . fillna ( <name4> , inplace = True )	<name2> . fillna ( <name4> , inplace = True )
出力するグラフのサイズを横 <val2> 縦 <val5> にセットする	plt . figure ( figsize = ( <val2> , <val5> ) )	plt . figure ( figsize = ( <val2> , <val5> ) )
ある <val1> を <name5> の中に未記入の値に置き換え、 <name5> に代入する	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
エクセルファイル <val1> の全てのシートを指定して読み込み、 <name3> に代入する	<name3> = pd . read_excel ( <val1> , sheet_name = None )	<name3> = pd . read_excel ( <val1> , sheet_name = None )
<name6> 表全体をインデックスに沿って昇順でソートした結果で置き換える	<name6> . sort_index ( inplace = True )	<name6> = <name6> . sort_index ( )
マーカーの形のエッジの色をグレーとする	markeredgecolor = 'gray'	markeredgecolor = 'gray'
<name3> の最初の 5 行	<name3> . head ( )	<name3> . head ( )
<name1> 中の未記入の値を <name5> に置き換え、 <name1> とする	<name1> = <name1> . fillna ( <name5> )	<name1> = <name1> . fillna ( <name5> )
<name6> 表中の <val4> を欠損値に変え欠損値が存在する行をドロップした結果を <name2> に代入する	<name2> = <name6> . replace ( <val4> , np . nan ) . dropna ( )	<name2> = <name6> . replace ( <val4> , np . nan ) . dropna ( )
<name1> データフレームにおいて <val5> カラムの箱ひげ図を描写する	plt . boxplot ( <name1> [ <val5> ] )	plt . boxplot ( <name1> [ <val5> ] )
<name5> 表の <val1> 行目から末尾まで	<name5> [ <val1> : ]	<name5> [ <val1> : ]
五角形のマーカーの種類を使う	marker = '*'	marker = '*'
表 <name4> 内の欠損を表 <name4> の平均値で埋めた結果を <name1> に代入する	<name1> = <name4> . fillna ( <name4> . mean ( ) )	<name1> = <name4> . fillna ( <name4> . mean ( ) )
表 <name1> 内に存在する <val6> を NaN に置換した結果を <name1> にする	<name1> = <name1> . replace ( <val6> , np . nan )	<name1> = <name1> . replace ( <val6> , np . nan )
表 <name4> をカラム <val6> を元に昇順でソートして、書き換える	<name4> . sort_values ( <val6> , inplace = True )	<name4> . sort_values ( <val6> , inplace = True )
インデックスを元に <name2> 表を小さい順でソートして、 <name2> とする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name1> 表中にある <val4> を未記入の値とする	<name1> . replace ( <val4> , np . nan )	<name1> . replace ( <val4> , np . nan )
<name3> と <name6> を横方向に結合する	pd . merge ( <name3> , <name6> )	pd . merge ( <name3> , <name6> )
表 <name6> 中の欠損値を表 <name6> の平均値で埋め、置き換える	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
エクセルファイル <val3> のシート名 <val4> から表を読み込まれた結果を <name1> とする	<name1> = pd . read_excel ( <val3> , sheet_name = <val4> )	<name1> = pd . read_excel ( <val3> , sheet_name = <val4> )
<name4> 表上の NaN を含む行を消した結果を <name5> とする	<name5> = <name4> . dropna ( )	<name5> = <name4> . dropna ( )
表 <name5> のカラム <val4> のユニークな要素数	<name5> [ <val4> ] . nunique ( )	<name5> [ <val4> ] . nunique ( )
<name3> 表全体を <val2> カラムに基づいて昇順でソートした結果を <name3> とする	<name3> = <name3> . sort_values ( <val2> )	<name3> = <name3> . sort_values ( <val2> )
<name4> の <val6> に <val5> の名前を <val3> の名前を <val2> にリネームし、インプレースする	<name4> . rename ( columns = { <val5> : <val6> , <val3> : <val2> } , inplace = True )	<name4> . rename ( columns = { <val5> : <val6> , <val3> : <val2> } , inplace = True )
<name6> 表内の欠損値を含む行をドロップして、 <name6> に代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
表 <name1> 内に存在する <val4> を NaN とされた結果で書き換える	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> . replace ( <val4> , np . nan , inplace = True )
表 <name2> の中の欠損を削除した結果でインプレースする	<name2> . dropna ( inplace = True )	<name2> . dropna ( inplace = True )
<name3> を <val6> と <val2> を軸に降順でソートされた結果を <name4> とする	<name4> = <name3> . sort_values ( [ <val6> , <val2> ] , ascending = False )	<name4> = <name3> . sort_values ( [ <val6> , <val2> ] , ascending = False )
表 <name2> 上にある <val5> を NaN で置き換える	<name2> . replace ( <val5> , np . nan )	<name2> . replace ( <val5> , np . nan )
縦軸を <name6> とした <name4> の横向き棒グラフをプロットする	plt . barh ( <name6> , <name4> )	plt . barh ( <name6> , <name4> )
の中のインデックスが <val1> の行	. loc [ <val1> ]	. loc [ <val1> ]
区関数を <name2> として表 <name1> の列 <val5> を分割し、 <name4> とする	<name4> = pd . cut ( <name1> [ <val5> ] , <name2> )	<name4> = pd . cut ( <name1> [ <val5> ] , <name2> )
<name3> を <val6> と <val4> が降順になるようにソートして、書き換える	<name3> . sort_values ( [ <val6> , <val4> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val6> , <val4> ] , ascending = False , inplace = True )
存在する <val6> を <name3> 表中に欠損に置換して、再代入する	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
エクセル <val6> を表データとして読んだ結果を <name4> に代入する	<name4> = pd . read_excel ( <val6> )	<name4> = pd . read_excel ( <val6> )
表 <name2> をインデックスどおりに昇順でソートし、再代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name4> の列名を <val2> から <val5> に変更して、 <name4> とする	<name4> = <name4> . rename ( columns = { <val2> : <val5> } )	<name4> = <name4> . rename ( columns = { <val2> : <val5> } )
<name2> 表内のそれぞれのコラムにある <val3> の合計値を調べる	<name2> . isin ( [ <val3> ] ) . sum ( )	<name2> . isin ( [ <val3> ] ) . sum ( )
ヘッダーなしで <val2> を読んで、 <name6> に代入する	<name6> = pd . read_csv ( <val2> , header = None )	<name6> = pd . read_csv ( <val2> , header = None )
<name2> の中の欠損を直前の行の値で補って、 <name2> に代入する	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
<name6> 表と <name5> 表を 1 つにまとめた結果を <name1> に代入する	<name1> = pd . merge ( <name6> , <name5> )	<name1> = pd . merge ( <name6> , <name5> )
表 <name5> 中のダブる行を落として、書き換える	<name5> . drop_duplicates ( inplace = True )	<name5> . drop_duplicates ( inplace = True )
<name6> 上の NaN を含む行を消し、 <name5> とする	<name5> = <name6> . dropna ( )	<name5> = <name6> . dropna ( )
ビンを <name1> 、ビンのラベルを整数値として <name3> の <val4> を分割する	pd . cut ( <name3> [ <val4> ] , <name1> , label = False )	pd . cut ( <name3> [ <val4> ] , <name1> , label = False )
表 <name5> 内の <val3> を欠損値に変え欠損値が存在する行をドロップし、再代入する	<name5> = <name5> . replace ( <val3> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val3> , np . nan ) . dropna ( )
<name1> 表を <val3> データという名前で CSV ファイルにセーブする	<name1> . to_csv ( <val3> )	<name1> . to_csv ( <val3> )
<name6> の中の欠損を <name6> の平均をとって埋めた結果で置き換える	<name6> . fillna ( <name6> . mean ( ) , inplace = True )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name6> 上の未記入の値を直前の行の値で埋め、 <name6> とする	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
<name4> 内の <val3> の重複している行を削除した結果で置き換える	<name4> = <name4> . drop_duplicates ( subset = <val3> )	<name4> = <name4> . drop_duplicates ( subset = <val3> )
<name2> 中の未記入の値を <name4> で置き換えられた結果を <name1> にする	<name1> = <name2> . fillna ( <name4> )	<name1> = <name2> . fillna ( <name4> )
示す小数点以下 2 桁までの数値を割合を円グラフ中にパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
列番号 <val3> をインデックスに設定して <val5> データを格納した結果を <name4> にする	<name4> = pd . read_csv ( <val5> , index_col = <val3> )	<name4> = pd . read_csv ( <val5> , index_col = <val3> )
エクセルファイル <val1> をデータフレームとした結果を <name3> に代入する	<name3> = pd . read_excel ( <val1> )	<name3> = pd . read_excel ( <val1> )
<name5> 表中の重複を確認する	<name5> . duplicated ( )	<name5> . duplicated ( )
<name1> 中の欠損を削除して、書き換える	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
<name3> を <val2> と <val1> が値の大きい順になるようにソートし、 <name6> にする	<name6> = <name3> . sort_values ( [ <val2> , <val1> ] , ascending = False )	<name6> = <name3> . sort_values ( [ <val2> , <val1> ] , ascending = False )
表 <name4> のダブっている行を取り除いて、書き換える	<name4> . drop_duplicates ( inplace = True )	<name4> . drop_duplicates ( inplace = True )
表 <name3> 上のカラム <val4> に重複はあるのかどうか判定	<name3> . duplicated ( subset = <val4> )	<name3> . duplicated ( subset = <val4> )
エクセルファイル <val4> からデータフレームを読んだ結果を <name5> にする	<name5> = pd . read_excel ( <val4> )	<name5> = pd . read_excel ( <val4> )
<name3> 表の <val4> カラムのユニークな要素の個数を確認する	<name3> [ <val4> ] . nunique ( )	<name3> [ <val4> ] . nunique ( )
表 <name1> の列 <val3> をビン数を <name2> 、ビンの名前をリスト <name4> として分割して、 <name5> に代入する	<name5> = pd . cut ( <name1> [ <val3> ] , <name2> , label = <name4> )	<name5> = pd . cut ( <name1> [ <val3> ] , <name2> , label = <name4> )
<name5> 上で重複した行の合計を確認する	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
<name4> の中の <val1> のダブっている行を取り除き、置き換える	<name4> = <name4> . drop_duplicates ( subset = <val1> )	<name4> = <name4> . drop_duplicates ( subset = <val1> )
表 <name3> をインデックスで小さい順に並び替え、置き換える	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
グラフの日本語表示をできるようにする	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
<name2> 全体を <val4> と <val6> が降順になるようにソートした結果で書き換える	<name2> . sort_values ( [ <val4> , <val6> ] , ascending = False , inplace = True )	<name2> . sort_values ( [ <val4> , <val6> ] , ascending = False , inplace = True )
小数点以下 <val4> 桁まで出力するようにする	pd . set_option ( 'precision' , <val4> )	pd . set_option ( 'precision' , <val4> )
表 <name3> の中の <val2> を欠損に変え欠損が存在する行を削除し、インプレースする	<name3> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name3> . replace ( <val2> , np . nan ) . dropna ( inplace = True )
表 <name2> の中にある <val6> を未記入の値にして、 <name5> とする	<name5> = <name2> . replace ( <val6> , np . nan )	<name5> = <name2> . replace ( <val6> , np . nan )
表 <name2> 中のコラム <val5> の重複している行を削除された結果を <name2> とする	<name2> = <name2> . drop_duplicates ( subset = <val5> )	<name2> = <name2> . drop_duplicates ( subset = <val5> )
エクセルファイル <val4> を読み込み、表にした結果を <name2> に代入する	<name2> = pd . read_excel ( <val4> )	<name2> = pd . read_excel ( <val4> )
表 <name1> の <val5> にコラム <val3> の名前を <val4> にコラム <val2> の名前をリネームされた結果を <name1> に代入する	<name1> = <name1> . rename ( columns = { <val3> : <val5> , <val2> : <val4> } )	<name1> = <name1> . rename ( columns = { <val3> : <val5> , <val2> : <val4> } )
表 <name5> を列 <val6> とカラム <val1> を元に逆順でソートして、置き換える	<name5> = <name5> . sort_values ( [ <val6> , <val1> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val6> , <val1> ] , ascending = False )
インデックスを元に <name2> 表を小さい方からソートした結果を再代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name4> 内の NaN の合計値を見る	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
ある行を表 <name1> の中の未入力の値が取り除いて、書き換える	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
表 <name2> と表 <name3> を横に 1 つにする	pd . merge ( <name2> , <name3> )	pd . merge ( <name2> , <name3> )
<name6> 表の欠損を <name1> にして、再代入する	<name6> = <name6> . fillna ( <name1> )	<name6> = <name6> . fillna ( <name1> )
<name2> の列名を <val4> から <val1> に <val6> から <val5> にリネームした結果を <name2> にする	<name2> = <name2> . rename ( columns = { <val4> : <val1> , <val6> : <val5> } )	<name2> = <name2> . rename ( columns = { <val4> : <val1> , <val4> : <val5> } )
区間を <name1> 、ビンの名前をインデックスとして表 <name3> の列 <val6> を分割した結果を <name2> にする	<name2> = pd . cut ( <name3> [ <val6> ] , <name1> , label = False )	<name2> = pd . cut ( <name3> [ <val6> ] , <name1> , label = False )
表 <name4> 中に重複があるのか検出する	<name4> . duplicated ( )	<name4> . duplicated ( )
<name4> 表の <val6> カラムのユニークな要素の数	<name4> [ <val6> ] . nunique ( )	<name4> [ <val6> ] . nunique ( )
表 <name4> 内のカラムそれぞれに存在する <val1> の個数の合計を確認する	<name4> . isin ( [ <val1> ] ) . sum ( )	<name4> . isin ( [ <val1> ] ) . sum ( )
<name4> 内の <val3> に重複はあるのかどうか検出する	<name4> . duplicated ( subset = <val3> )	<name4> . duplicated ( subset = <val3> )
カンマ区切りでデータ <val1> を読み込む	pd . read_csv ( <val1> , sep = ',' )	pd . read_csv ( <val1> , sep = ',' )
表 <name3> の列 <val5> についてダミー変数を生成する	pd . get_dummies ( <name3> [ <val5> ] )	pd . get_dummies ( <name3> [ <val5> ] )
<name5> の中で重複しているデータを取得する	<name5> [ <name5> . duplicated ( ) ]	<name5> [ <name5> . duplicated ( ) ]
最大カラム数を <val5> にセットする	pd . set_option ( 'display.max_columns' , <val5> )	pd . set_option ( 'display.max_columns' , <val5> )
表 <name6> 上の欠損がある行を消した結果を <name4> とする	<name4> = <name6> . dropna ( )	<name4> = <name6> . dropna ( )
表 <name5> 内の <val4> を欠損に置き換え欠損が存在する行を削除し、再代入する	<name5> = <name5> . replace ( <val4> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val4> , np . nan ) . dropna ( )
<name3> 表全体を <val1> カラムと <val6> コラムが降順になるようにソートし、 <name3> にする	<name3> = <name3> . sort_values ( [ <val1> , <val6> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val1> , <val6> ] , ascending = False )
表 df をインデックスを軸に小さい順にソートする	df . sort_index ( )	df . sort_index ( )
<name4> のダブっている行を取り除いた結果を <name4> とする	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
区関数を <val4> として <name5> の柱状図を出力する	plt . hist ( <name5> , bins = <val4> )	plt . hist ( <name5> , bins = <val4> )
<name4> を <val2> から <val5> の間の柱状グラフにする	plt . hist ( <name4> , range = ( <val2> , <val5> ) )	plt . hist ( <name4> , range = ( <val2> , <val5> ) )
<name6> 表の中に存在する <val4> を欠損にして、 <name5> にする	<name5> = <name6> . replace ( <val4> , np . nan )	<name5> = <name6> . replace ( <val4> , np . nan )
<name2> 表の <val1> コラムについての統計的な情報を確認する	<name2> [ <val1> ] . describe ( )	<name2> [ <val1> ] . describe ( )
<name3> 内の欠損値を <name1> で置き換えた結果を <name5> とする	<name5> = <name3> . fillna ( <name1> )	<name5> = <name3> . fillna ( <name1> )
<name2> の <val4> を昇順にソートし、置き換える	<name2> . sort_values ( <val4> , inplace = True )	<name2> = <name2> . sort_values ( <val4> )
<name2> を使用する	encoding = <name2>	<name2> . isin ( [ <val1> ] )
<val3> と <val1> で <name2> を値が大きい順にソートした結果を再代入する	<name2> = <name2> . sort_values ( [ <val3> , <val1> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val3> , <val1> ] , ascending = False )
<name1> 表にある <val3> を未入力の値で埋め、 <name2> に代入する	<name2> = <name1> . replace ( <val3> , np . nan )	<name2> = <name1> . replace ( <val3> , np . nan )
<name2> で <name4> と <name5> のグラフを描写する	plt . plot ( <name4> , <name5> , color = <name2> )	plt . plot ( <name4> , <name5> , color = <name5> )
表 <name6> 内のコラム <val3> に重複はあるのかどうか	<name6> . duplicated ( subset = <val3> )	<name6> . duplicated ( subset = <val3> )
<name5> 表の <val4> を欠損値で埋められた結果を <name5> に代入する	<name5> = <name5> . replace ( <val4> , np . nan )	<name5> = <name5> . replace ( <val4> , np . nan )
<name1> 内の欠損を <name4> で置き換えた結果を <name5> に代入する	<name5> = <name1> . fillna ( <name4> )	<name5> = <name1> . fillna ( <name4> )
表 <name5> 上の NaN を表 <name5> の平均で補い、再代入する	<name5> = <name5> . fillna ( <name5> . mean ( ) )	<name5> = <name5> . fillna ( <name5> . mean ( ) )
<name2> 表の未入力の値を <name6> とした結果を再代入する	<name2> = <name2> . fillna ( <name6> )	<name2> = <name2> . fillna ( <name6> )
色を <val1> にセットする	color = <val1>	color = <val1>
<name2> のもともとのインデックスをリセットし、置き換える	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
列番号 <val6> をインデックスと設定して <val2> からデータフレームを読み込む	pd . read_csv ( <val2> , index_col = <val6> )	pd . read_csv ( <val2> , index_col = <val6> )
<name1> 表から <val6> という名前でエクセルファイルにする	<name1> . to_excel ( <val6> )	<name1> . to_excel ( <val6> )
表 <name1> 内の重複要素がある行をドロップする	<name1> . drop_duplicates ( )	<name1> . drop_duplicates ( )
<name6> 表中の <val3> コラムの重複した行をドロップする	<name6> . drop_duplicates ( subset = <val3> )	<name6> . drop_duplicates ( subset = <val3> )
一番左の列をインデックスにセットして、 <val2> データを読み込み、 <name3> にする	<name3> = pd . read_csv ( <val2> , index_col = 0 )	<name3> = pd . read_csv ( <val2> , index_col = 0 )
<name3> 内の <val6> と <val2> に重複があるのかどうか検出する	<name3> . duplicated ( subset = [ <val6> , <val2> ] )	<name3> . duplicated ( subset = [ <val6> , <val2> ] )
<name2> 表中の重複要素がある行を落として、 <name2> に代入する	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
<name4> 表上の重複する行を消し、 <name4> にする	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
データフレーム <name2> のカラム <val3> とカラム <val1> とカラム <val6> を箱ひげ図で表示する	plt . boxplot ( [ <name2> [ <val3> ] , <name2> [ <val1> ] , <name2> [ <val6> ] ] )	plt . boxplot ( [ <name2> [ <val3> ] , <name2> [ <val1> ] , <name2> [ <val1> ] ] )
表 <name1> をインデックス通りに昇順でソートした結果を <name6> に代入する	<name6> = <name1> . sort_index ( )	<name6> = <name1> . sort_index ( )
表 <name3> の列 <val2> を区間の数を <name6> 、ビンの名前をリスト <name4> として分割された結果を <name1> にする	<name1> = pd . cut ( <name3> [ <val2> ] , <name6> , label = <name4> )	<name1> = pd . cut ( <name3> [ <val2> ] , <name6> , label = <name4> )
<name5> の列の名前を <val6> から <val3> に <val1> から <val2> にリネームした結果を再代入する	<name5> = <name5> . rename ( columns = { <val6> : <val3> , <val1> : <val2> } )	<name5> = <name5> . rename ( columns = { <val6> : <val3> , <val1> : <val2> } )
表 <name1> に重複があるのかどうかを真偽値で返す	<name1> . duplicated ( )	<name1> . duplicated ( )
<val1> というファイル名でエクセルに <name2> を入れる	<name2> . to_excel ( <val1> )	<name2> . to_excel ( <val1> )
<name4> 中の欠損を直前の行の値で補い、 <name1> にする	<name1> = <name4> . fillna ( method = 'ffill' )	<name1> = <name4> . fillna ( method = 'ffill' )
散布図を <name4> をグラフの y 軸、 <name3> をグラフの x 軸として描写する	plt . scatter ( <name4> , <name3> )	plt . scatter ( <name4> , <name3> )
グラフの x 軸の軸の名前を <val4> に指定する	plt . xlabel ( <val4> )	plt . xlabel ( <val4> )
表 <name6> の <val1> を NaN として、置き換える	<name6> . replace ( <val1> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val1> , np . nan )
透過率を <val3> に指定する	alpha = <val3>	alpha = <val3>
表 <name6> の中のコラム <val5> とカラム <val2> に重複はあるのかどうか検出を調べる	<name6> . duplicated ( subset = [ <val5> , <val2> ] )	<name6> . duplicated ( subset = [ <val5> , <val2> ] )
データフレームをデータ <val1> からカンマ区切りで読み込み、 <name6> に代入する	<name6> = pd . read_csv ( <val1> , sep = ',' )	<name6> = pd . read_csv ( <val1> , sep = ',' )
<val2> というファイル名でエクセルファイルに <name3> を書き出す	<name3> . to_excel ( <val2> )	<name3> . to_excel ( <val2> )
表 <name2> をインデックスで順にソートした結果を再代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
datetime 型に <name5> 表の <val3> 列をする	pd . to_datetime ( <name5> [ <val3> ] )	pd . to_datetime ( <name5> [ <val3> ] )
<name4> の <val1> を区間を <name3> 、ビンの名前を <name6> として分割し、 <name2> に代入する	<name2> = pd . cut ( <name4> [ <val1> ] , <name3> , label = <name6> )	<name2> = pd . cut ( <name4> [ <val1> ] , <name3> , label = <name6> )
<name4> の <val6> を NaN に置き換え、 <name2> にする	<name2> = <name4> . replace ( <val6> , np . nan )	<name2> = <name4> . replace ( <val6> , np . nan )
表 <name1> 中に重複はあるか判定を確認する	<name1> . duplicated ( )	<name1> . duplicated ( )
エクセルファイル <val6> の <val2> をデータフレームとした結果を <name1> に代入する	<name1> = pd . read_excel ( <val6> , sheet_name = <val2> )	<name1> = pd . read_excel ( <val6> , sheet_name = <val2> )
<name4> の <val5> を取り除き、再代入する	<name4> = <name4> . drop ( <val5> , axis = 1 )	<name4> = <name4> . drop ( <val5> , axis = 1 )
ダブっている最後の行を残して <name6> の重複している行を取り除く	<name6> . drop_duplicates ( keep = False )	<name6> . drop_duplicates ( keep = False )
<val3> から <val6> に表 <name1> の列の名前をリネームして、 <name1> とする	<name1> = <name1> . rename ( columns = { <val3> : <val6> } )	<name1> = <name1> . rename ( columns = { <val3> : <val6> } )
<name4> 上の NaN を <name6> で埋めて、 <name4> とする	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
<name5> 表の <val1> を NaN とした結果を再代入する	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
<name5> の未記入の値がある行を落とす	<name5> . dropna ( )	<name5> . dropna ( )
ヘッダーをなしでデータ <val6> を読み込み、 <name1> に代入する	<name1> = pd . read_csv ( <val6> , header = None )	<name1> = pd . read_csv ( <val6> , header = None )
文字コードがシフト JIS の <val1> を読む	pd . read_csv ( <val1> , encoding = 'shift_jis' )	pd . read_csv ( <val1> , encoding = 'shift_jis' )
片方のテーブルにしかないデータも全て残して <name4> と <name1> をマージして、 <name2> にする	<name2> = pd . merge ( <name4> , <name1> , how = 'outer' )	<name2> = pd . merge ( <name4> , <name1> , how = 'outer' )
<name5> 表内の <val4> コラムに重複がある行を削除された結果を <name5> に代入する	<name5> = <name5> . drop_duplicates ( subset = <val4> )	<name5> = <name5> . drop_duplicates ( subset = <val4> )
<name4> 表の列名を <val5> から <val2> に変更した結果で置き換える	<name4> = <name4> . rename ( columns = { <val5> : <val2> } )	<name4> = <name4> . rename ( columns = { <val5> : <val2> } )
表 <name3> 全体を列 <val2> とカラム <val4> を軸に逆順でソートした結果で書き換える	<name3> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )
<val1> と <val5> が降順になるように <name2> をソートした結果を再代入する	<name2> = <name2> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val5> ] , ascending = False )
エンコーディングを shift - jis で、 <val2> を読み込んだ結果を <name5> にする	<name5> = pd . read_csv ( <val2> , encoding = 'shift_jis' )	<name5> = pd . read_csv ( <val2> , encoding = 'shift_jis' )
表をデータ <val6> からタブ区切りで読んで、 <name5> とする	<name5> = pd . read_csv ( <val6> , sep = '\t' )	<name5> = pd . read_csv ( <val6> , sep = '\t' )
0 行目をヘッダーとしない	header = None	pd . set_option ( 'display.max_rows' , None )
<name2> を <val3> を元に昇順でソートし、 <name2> に代入する	<name2> = <name2> . sort_values ( <val3> )	<name2> = <name2> . sort_values ( <val3> )
先頭の列をインデックスと、 <val2> を表として読んで、 <name4> に代入する	<name4> = pd . read_csv ( <val2> , index_col = 0 )	<name4> = pd . read_csv ( <val2> , index_col = 0 )
表 <name3> から <val1> という名前でエクセルファイルに変換する	<name3> . to_excel ( <val1> )	<name3> . to_excel ( <val1> )
<name3> をエクセルファイル <val5> に表示する	<name3> . to_excel ( <val5> )	<name3> . to_excel ( <val5> )
<name3> をインデックスを元に小さい順でソートし、置き換える	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
エクセルファイル <val3> の <val6> 番目のシートを指定して読み込まれた結果を <name2> とする	<name2> = pd . read_excel ( <val3> , sheet_name = <val6> )	<name2> = pd . read_excel ( <val3> , sheet_name = <val6> )
表 <name6> 中の欠損を <name3> とする	<name6> . fillna ( <name3> )	<name6> . fillna ( <name3> )
表 <name2> 内の <val6> を欠損値に変え欠損値が存在する行をドロップした結果で置き換える	<name2> . replace ( <val6> , np . nan ) . dropna ( inplace = True )	<name2> = <name2> . replace ( <val6> , np . nan ) . dropna ( )
<name6> の度数分布図を区間の数を <val1> として表示する	plt . hist ( <name6> , bins = <val1> )	plt . hist ( <name6> , bins = <val1> )
<val3> から <val1> に <name2> のカラム名を変える	<name2> . rename ( columns = { <val3> : <val1> } )	<name2> . rename ( columns = { <val3> : <val1> } )
表 <name4> の列 <val2> をビン数を <name3> 、ビンのラベルを 0 始まりの連番として分割した結果を <name5> にする	<name5> = pd . cut ( <name4> [ <val2> ] , <name3> , label = False )	<name5> = pd . cut ( <name4> [ <val2> ] , <name3> , label = False )
表 <name1> のダブっている行を取り除いて、再代入する	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
<name1> 表を <val2> 列と <val4> カラムに基づいて降順でソートされた結果を <name1> にする	<name1> = <name1> . sort_values ( [ <val2> , <val4> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val2> , <val4> ] , ascending = False )
<name1> の <val6> と <val3> を選択する	<name1> [ [ <val6> , <val3> ] ]	<name1> [ [ <val6> , <val3> ] ]
表 <name4> のインデックスを振り直し、インプレースする	<name4> . reset_index ( inplace = True )	<name4> . reset_index ( inplace = True )
<name1> 表の <val3> コラムについて <val4> 列をインデックス、 <val5> コラムを列としたピボットテーブルを作成し、 <name2> にする	<name2> = <name1> . pivot_table ( index = <val4> , columns = <val5> , values = <val3> )	<name2> = <name1> . pivot_table ( index = <val4> , columns = <val5> )
表 <name1> の未入力の値がある行を取り除く	<name1> . dropna ( )	<name1> . dropna ( )
<name2> をインデックス通りに昇順でソートされた結果で置き換える	<name2> . sort_index ( inplace = True )	<name2> = <name2> . sort_index ( )
<name5> 内に重複があるのかどうか確認を調べる	<name5> . duplicated ( )	<name5> . duplicated ( )
<name1> 表上の <val4> コラムに重複がある行を消す	<name1> . drop_duplicates ( subset = <val4> )	<name1> . drop_duplicates ( subset = <val4> )
<val2> と <val5> を元に <name4> を値が大きい順でソートした結果を <name1> に代入する	<name1> = <name4> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name1> = <name4> . sort_values ( [ <val2> , <val5> ] , ascending = False )
<name2> 表内の <val1> コラムの重複した行をドロップされた結果を再代入する	<name2> = <name2> . drop_duplicates ( subset = <val1> )	<name2> = <name2> . drop_duplicates ( subset = <val1> )
<name3> 表中のカラムそれぞれに存在する <val2> の個数の合計値をチェックする	<name3> . isin ( [ <val2> ] ) . sum ( )	<name3> . isin ( [ <val2> ] ) . sum ( )
<name4> の列名を <val1> から <val5> にリネームされた結果を <name4> にする	<name4> = <name4> . rename ( columns = { <val1> : <val5> } )	<name4> = <name4> . rename ( columns = { <val1> : <val5> } )
表 <name5> 中の未記入の値を直前の行の値で補う	<name5> . fillna ( method = 'ffill' )	<name5> . fillna ( method = 'ffill' )
表 <name4> 中の未記入の値を <name5> で埋める	<name4> . fillna ( <name5> )	<name4> . fillna ( <name5> )
<name6> 表のインデックスをリセットした結果で置き換える	<name6> . reset_index ( inplace = True )	<name6> = <name6> . reset_index ( )
表をデータ <val4> から <val6> 区切りで読む	pd . read_csv ( <val4> , sep = <val6> )	pd . read_csv ( <val4> , sep = <val6> )
線グラフの種類はヒストグラムを用いる	kind = 'hist'	kind = 'hist'
y 軸を <name4> として <name1> の横方向の棒グラフを出力する	plt . barh ( <name4> , <name1> )	plt . barh ( <name4> , <name1> )
表 <name5> の <val6> を欠損値で置換して、 <name5> に代入する	<name5> = <name5> . replace ( <val6> , np . nan )	<name5> = <name5> . replace ( <val6> , np . nan )
<name2> の <val5> , <val3> , <val4> 行目の <val1> , <val3> 列目	<name2> . iloc [ [ <val5> , <val3> , <val4> ] , [ <val1> , <val3> ] ]	<name2> . iloc [ [ <val5> , <val3> , <val3> ] , [ <val1> , <val3> ] ]
表 <name1> の未記入の値がある行を取り除いて、 <name6> に代入する	<name6> = <name1> . dropna ( )	<name6> = <name1> . dropna ( )
柱状グラフに <name5> データフレームの <val2> カラムをする	plt . hist ( <name5> [ <val2> ] )	plt . hist ( <name5> [ <val2> ] )
<name1> の NaN を <name5> に変えて、置き換える	<name1> = <name1> . fillna ( <name5> )	<name1> = <name1> . fillna ( <name5> )
<name4> 表全体をインデックスで順番になるようにソートした結果で置き換える	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
エクセルファイル <val5> の <val6> 番目のシートを読み込み、表とする	pd . read_excel ( <val5> , sheet_name = <val6> )	pd . read_excel ( <val5> , sheet_name = <val6> )
表 <name4> のインデックス <val5> の名前を <val1> にリネームする	<name4> . rename ( index = { <val5> : <val1> } )	<name4> . rename ( index = { <val5> : <val1> } )
表 <name5> の末尾の 5 行	<name5> . tail ( )	<name5> . tail ( )
<val6> カラムで <name3> 表を昇順にソートして、置き換える	<name3> = <name3> . sort_values ( <val6> )	<name3> = <name3> . sort_values ( <val6> )
マーカーの種類の輪郭の色は赤紫色を使う	markeredgecolor = 'magenta'	markeredgecolor = 'magenta'
<val1> から <val3> に <name4> 表の行名をリネームされた結果を <name2> にする	<name2> = <name4> . rename ( index = { <val1> : <val3> } )	<name2> = <name4> . rename ( index = { <val1> : <val3> } )
<val2> データから表で読み込む	pd . read_csv ( <val2> )	pd . read_csv ( <val2> )
<name3> をインデックス通りに昇順でソートし、再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name5> の <val4> をインデックスに変更し、置き換える	<name5> . set_index ( <val4> , inplace = True )	<name5> = <name5> . set_index ( <val4> )
<name2> の <val1> をインデックスとして設定した結果でインプレースする	<name2> . set_index ( <val1> , inplace = True )	<name2> . set_index ( <val1> , inplace = True )
<name6> の中に存在する <val5> を欠損で置換して、置き換える	<name6> . replace ( <val5> , np . nan , inplace = True )	<name6> = <name6> . replace ( <val5> , np . nan )
インデックスを軸に <name5> 表を昇順でソートして、再代入する	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
マーカーの形状をバツ印とする	marker = 'x'	marker = 'x'
区間を <name1> として要素の数が等しくなるように表 <name3> の列 <val5> を分割した結果を <name4> に代入する	<name4> = pd . qcut ( <name3> [ <val5> ] , <name1> )	<name4> = pd . qcut ( <name3> [ <val5> ] , <name1> )
エクセルファイル <val1> の <val3> を表データに読んで、 <name4> にする	<name4> = pd . read_excel ( <val1> , sheet_name = <val3> )	<name4> = pd . read_excel ( <val1> , sheet_name = <val3> )
<name1> の中の未記入の値を落とした結果で置き換える	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<name1> の <val6> と <val4> を落とす	<name1> . drop ( [ <val6> , <val4> ] , axis = 1 )	<name1> . drop ( [ <val6> , <val4> ] , axis = 1 )
エクセルファイル <val4> のシート名 <val2> を表に読まれた結果を <name6> に代入する	<name6> = pd . read_excel ( <val4> , sheet_name = <val2> )	<name6> = pd . read_excel ( <val4> , sheet_name = <val2> )
列番号 <val1> をインデックスとデータ <val4> から表を読んで、 <name5> とする	<name5> = pd . read_csv ( <val4> , index_col = <val1> )	<name5> = pd . read_csv ( <val4> , index_col = <val1> )
データフレーム <name4> においてカラム <val1> とカラム <val6> とカラム <val2> の関係性を一度にプロットする	sns . pairplot ( <name4> [ [ <val1> , <val6> , <val2> ] ] )	sns . pairplot ( <name4> [ [ <val1> , <val6> , <val2> ] ] )
<name2> 表をインデックスに基づき昇順でソートした結果を <name2> とする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name3> 表中に存在する <val6> を欠損値で置換して、再代入する	<name3> = <name3> . replace ( <val6> , np . nan )	<name3> = <name3> . replace ( <val6> , np . nan )
<name1> と <name2> を 1 つにまとめ、 <name3> とする	<name3> = pd . merge ( <name1> , <name2> )	<name3> = pd . merge ( <name1> , <name2> )
列名をセットせずにデータ <val4> を読み、 <name3> に代入する	<name3> = pd . read_csv ( <val4> , header = None )	<name3> = pd . read_csv ( <val4> , header = None )
表 <name4> の <val5> を NaN に置換する	<name4> . replace ( <val5> , np . nan )	<name4> . replace ( <val5> , np . nan )
<val3> から <val2> に <name5> の行の名前をリネームして、再代入する	<name5> = <name5> . rename ( index = { <val3> : <val2> } )	<name5> = <name5> . rename ( index = { <val3> : <val2> } )
<val3> データを表に格納する	pd . read_csv ( <val3> )	pd . read_csv ( <val3> )
横軸を <name4> とした <name5> の縦向き棒グラフをプロットする	plt . bar ( <name4> , <name5> )	plt . bar ( <name4> , <name5> )
列番号 <val6> をインデックスとしてデータ <val3> から表データを読み込んだ結果を <name1> とする	<name1> = pd . read_csv ( <val3> , index_col = <val6> )	<name1> = pd . read_csv ( <val3> , index_col = <val6> )
エクセルファイル <val5> に <name6> を描く	<name6> . to_excel ( <val5> )	<name6> . to_excel ( <val5> )
エクセル <val6> をデータフレームに読まれた結果を <name5> に代入する	<name5> = pd . read_excel ( <val6> )	<name5> = pd . read_excel ( <val6> )
<name4> の列名を <val2> から <val3> に変えて、置き換える	<name4> = <name4> . rename ( columns = { <val2> : <val3> } )	<name4> = <name4> . rename ( columns = { <val2> : <val3> } )
表 <name5> 中にある <val6> を未記入の値とし、 <name2> に代入する	<name2> = <name5> . replace ( <val6> , np . nan )	<name2> = <name5> . replace ( <val6> , np . nan )
存在する <val1> を <name3> 内に欠損値にした結果を再代入する	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
表 <name5> のインデックスをリセット、元のインデックスを削除して、 <name5> にする	<name5> = <name5> . reset_index ( drop = True )	<name5> = <name5> . reset_index ( drop = True )
横軸のラベルを <val4> にセットする	plt . xlabel ( <val4> )	plt . xlabel ( <val4> )
<name2> 表の末尾の 5 行をチェックする	<name2> . tail ( )	<name2> . tail ( )
ビンの数を <name1> として <name2> 表の <val4> 列を分割して、 <name3> とする	<name3> = pd . cut ( <name2> [ <val4> ] , <name1> )	<name3> = pd . cut ( <name2> [ <val4> ] , <name1> )
表 <name2> 上にある <val6> を未記入の値で埋める	<name2> . replace ( <val6> , np . nan )	<name2> . replace ( <val6> , np . nan )
マーカーの形状は六角形を使用する	marker = 'h'	marker = 'h'
表 <name5> の中のカラムにある <val6> の個数の数をチェックする	<name5> . isin ( [ <val6> ] ) . sum ( )	<name5> . isin ( [ <val6> ] ) . sum ( )
<val4> という名前のエクセルファイルの <val1> を表データとして読み込んだ結果を <name2> に代入する	<name2> = pd . read_excel ( <val4> , sheet_name = <val1> )	<name2> = pd . read_excel ( <val4> , sheet_name = <val1> )
カラム <val2> とコラム <val6> が降順になるように表 <name1> をソートする	<name1> . sort_values ( [ <val2> , <val6> ] , ascending = False )	<name1> . sort_values ( [ <val2> , <val6> ] , ascending = False )
<name2> の中の未入力の値を <name2> の平均で補った結果を <name1> にする	<name1> = <name2> . fillna ( <name2> . mean ( ) )	<name1> = <name2> . fillna ( <name2> . mean ( ) )
<name6> 表の <val1> を未入力の値に置き換え未入力の値がある行を取り除いて、書き換える	<name6> . replace ( <val1> , np . nan ) . dropna ( inplace = True )	<name6> . replace ( <val1> , np . nan ) . dropna ( inplace = True )
マーカーの色を紫色とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
年月日のファイルに <name6> の <val5> をする	pd . to_datetime ( <name6> [ <val5> ] )	pd . to_datetime ( <name6> [ <val5> ] )
<val2> にグラフタイトルを設定する	plt . title ( <val2> )	plt . title ( <val2> )
<name1> 表内に存在する <val4> を NaN で埋めた結果を再代入する	<name1> = <name1> . replace ( <val4> , np . nan )	<name1> = <name1> . replace ( <val4> , np . nan )
表 <name2> のコラム <val5> をインデックスとしてセットする	<name2> . set_index ( <val5> )	<name2> . set_index ( <val5> )
カンマ区切りで <val1> を読む	pd . read_csv ( <val1> , sep = ',' )	pd . read_csv ( <val1> , sep = ',' )
<name1> 中にある <val4> を未記入の値にした結果を <name3> に代入する	<name3> = <name1> . replace ( <val4> , np . nan )	<name3> = <name1> . replace ( <val4> , np . nan )
エクセルファイル <val5> の全てのシートを表データとし、 <name6> に代入する	<name6> = pd . read_excel ( <val5> , sheet_name = None )	<name6> = pd . read_excel ( <val5> , sheet_name = None )
表 <name2> 上の NaN を <name3> として、 <name2> に代入する	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
列番号 <val5> をインデックスとデータ <val6> から表を読む	pd . read_csv ( <val6> , index_col = <val5> )	pd . read_csv ( <val6> , index_col = <val5> )
<name1> の <val3> を日付型に変換する	pd . to_datetime ( <name1> [ <val3> ] )	pd . to_datetime ( <name1> [ <val3> ] )
<name2> 内の欠損値を直前の行の値で補い、 <name4> に代入する	<name4> = <name2> . fillna ( method = 'ffill' )	<name4> = <name2> . fillna ( method = 'ffill' )
ある <val3> を <name1> 表の中に未記入の値で置き換えて、 <name6> とする	<name6> = <name1> . replace ( <val3> , np . nan )	<name6> = <name1> . replace ( <val3> , np . nan )
<name3> の <val4> の出現回数	<name3> [ <val4> ] . value_counts ( )	<name3> [ <val4> ] . value_counts ( )
存在する行を <name5> の欠損が取り除き、置き換える	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
表 <name1> 中のコラム <val6> に重複がある行を落とした結果を <name5> とする	<name5> = <name1> . drop_duplicates ( subset = <val6> )	<name5> = <name1> . drop_duplicates ( subset = <val6> )
<val4> にグラフの x 軸の軸の名前を指定する	plt . xlabel ( <val4> )	plt . xlabel ( <val4> )
<name2> 表の <val4> を NaN で補って、 <name2> に代入する	<name2> = <name2> . replace ( <val4> , np . nan )	<name2> = <name2> . replace ( <val4> , np . nan )
<name3> 表にある <val1> を未入力の値にし、置き換える	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
表 <name3> 中の <val5> を欠損値に置き換え欠損値が存在する行をドロップする	<name3> . replace ( <val5> , np . nan ) . dropna ( )	<name3> . replace ( <val5> , np . nan ) . dropna ( )
<name4> 座標を <name4> とした <name3> の棒グラフを棒と棒の隙間を <val5> として表示する	plt . bar ( <name4> , <name3> , width = <val5> )	plt . bar ( <name4> , <name3> , width = <val5> )
グラフの x 軸を <name6> として <name3> の鉛直棒グラフを描写する	plt . bar ( <name6> , <name3> )	plt . bar ( <name6> , <name3> )
<val2> と <val5> を元に <name3> を値が大きい順でソートして、書き換える	<name3> . sort_values ( [ <val2> , <val5> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val2> , <val5> ] , ascending = False , inplace = True )
表 <name6> の中の欠損を削除し、 <name4> にする	<name4> = <name6> . dropna ( )	<name4> = <name6> . dropna ( )
<name1> 表の未記入の値がある行を落とした結果を再代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
<name3> 中の欠損値を <name6> とされた結果を <name3> に代入する	<name3> = <name3> . fillna ( <name6> )	<name3> = <name3> . fillna ( <name6> )
表 <name2> をカラム <val5> とコラム <val6> が逆順になるようにソートされた結果で書き換える	<name2> . sort_values ( [ <val5> , <val6> ] , ascending = False , inplace = True )	<name2> . sort_values ( [ <val5> , <val6> ] , ascending = False , inplace = True )
表 <name4> の <val1> を未入力の値に置き換える	<name4> . replace ( <val1> , np . nan )	<name4> . replace ( <val1> , np . nan )
<name1> 表を <val4> カラムを使って昇順でソートして、 <name1> にする	<name1> = <name1> . sort_values ( <val4> )	<name1> = <name1> . sort_values ( <val4> )
表 <name1> 内の欠損値をドロップし、 <name1> に代入する	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
柱状図を用いてデータフレーム <name2> のカラム <val6> を出力する	plt . hist ( <name2> [ <val6> ] )	plt . hist ( <name2> [ <val6> ] )
<name2> 内の欠損の合計値	<name2> . isnull ( ) . sum ( )	<name2> . isnull ( ) . sum ( )
表 <name4> の中のカテゴリーをダミー変数に変換された結果を <name5> に代入する	<name5> = pd . get_dummies ( <name4> )	<name5> = pd . get_dummies ( <name4> )
表 <name3> の列の名前を <val6> から <val5> にリネームして、 <name3> に代入する	<name3> = <name3> . rename ( columns = { <val6> : <val5> } )	<name3> = <name3> . rename ( columns = { <val6> : <val5> } )
<name1> 表の <val6> を NaN に置換して、 <name3> とする	<name3> = <name1> . replace ( <val6> , np . nan )	<name3> = <name1> . replace ( <val6> , np . nan )
<name4> 表上の未記入の値を <name3> で置き換え、再代入する	<name4> = <name4> . fillna ( <name3> )	<name4> = <name4> . fillna ( <name3> )
<name1> 中の <val2> に重複がある行を落とした結果を <name5> に代入する	<name5> = <name1> . drop_duplicates ( subset = <val2> )	<name5> = <name1> . drop_duplicates ( subset = <val2> )
<name4> の未入力の値を <name6> にし、置き換える	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
<name5> 表にある NaN の数を見る	<name5> . isnull ( ) . sum ( )	<name5> . isnull ( ) . sum ( )
<name3> 内の欠損値をドロップして、書き換える	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
表 <name3> をデータ <val4> に書き出す	<name3> . to_csv ( <val4> )	<name3> . to_csv ( <val4> )
エクセルファイル <val5> のシート名 <val6> を読み込んで表データに格納して、 <name1> にする	<name1> = pd . read_excel ( <val5> , sheet_name = <val6> )	<name1> = pd . read_excel ( <val5> , sheet_name = <val6> )
<name6> の <val4> をインデックスにした結果で書き換える	<name6> . set_index ( <val4> , inplace = True )	<name6> . set_index ( <val4> , inplace = True )
表 <name3> のコラム <val6> に重複がある行を取り除いた結果を <name3> とする	<name3> = <name3> . drop_duplicates ( subset = <val6> )	<name3> = <name3> . drop_duplicates ( subset = <val6> )
<name2> の <val1> を削除して、再代入する	<name2> = <name2> . drop ( <val1> , axis = 1 )	<name2> = <name2> . drop ( <val1> , axis = 1 )
表を <val5> からカンマ区切りで読み込まれた結果を <name1> にする	<name1> = pd . read_csv ( <val5> , sep = ',' )	<name1> = pd . read_csv ( <val5> , sep = ',' )
<name4> の中の欠損値が含まれる部分に色をつける	<name4> . style . highlight_null ( )	<name4> . style . highlight_null ( )
インデックスを軸に <name2> 表全体を昇順でソートして、インプレースする	<name2> . sort_index ( inplace = True )	<name2> . sort_index ( inplace = True )
存在する <val3> を <name4> 表の中に欠損で補う	<name4> . replace ( <val3> , np . nan )	<name4> . replace ( <val3> , np . nan )
<name3> 表内にいくつ欠損値がどの程度あるのか確認する	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
目印の大きさは <val4> を適用する	markersize = <val4>	markersize = <val4>
<name1> の中の <val5> と <val3> に重複はあるのかどうかを表示する	<name1> . duplicated ( subset = [ <val5> , <val3> ] )	<name1> . duplicated ( subset = [ <val5> , <val3> ] )
<name2> 表中の欠損値を含む行をドロップした結果を <name2> とする	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
インデックスを元に <name2> 表全体を昇順でソートして、置き換える	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name5> の <val2> を未記入の値に置き換える	<name5> . replace ( <val2> , np . nan )	<name5> . replace ( <val2> , np . nan )
エクセルファイル <val4> の <val5> 番目のシートを読み込んだ結果を <name2> に代入する	<name2> = pd . read_excel ( <val4> , sheet_name = <val5> )	<name2> = pd . read_excel ( <val4> , sheet_name = <val5> )
<name3> 表内の <val5> コラムに重複がある行を削除し、 <name2> に代入する	<name2> = <name3> . drop_duplicates ( subset = <val5> )	<name2> = <name3> . drop_duplicates ( subset = <val5> )
<name3> 中の欠損値を <name3> の平均値で埋め、 <name3> に代入する	<name3> = <name3> . fillna ( <name3> . mean ( ) )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
縦軸の軸ラベルを <val1> に設定する	plt . ylabel ( <val1> )	plt . ylabel ( <val1> )
<name5> 表の <val4> 列と <val6> コラムと <val2> コラムと <val3> 列を選ぶ	<name5> [ [ <val4> , <val6> , <val2> , <val3> ] ]	<name5> [ [ <val4> , <val6> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3> , <val3>
<name2> 表の行列を入れかえる	<name2> . T	<name2> . stack ( )
<name3> をインデックスで値が小さい順に並び替えた結果を <name3> とする	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
<name4> 全体を <val2> と <val3> で逆順にソートし、書き換える	<name4> . sort_values ( [ <val2> , <val3> ] , ascending = False , inplace = True )	<name4> . sort_values ( [ <val2> , <val3> ] , ascending = False , inplace = True )
打点の輪郭の色は青を適用する	markeredgecolor = 'blue'	markeredgecolor = 'blue'
<name4> の未入力の値を直前の行の値で埋めた結果を <name4> に代入する	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
表 <name4> の列 <val1> をビンを <name3> 、ビンのラベルをインデックスとして分割して、 <name6> にする	<name6> = pd . cut ( <name4> [ <val1> ] , <name3> , label = False )	<name6> = pd . cut ( <name4> [ <val1> ] , <name3> , label = False )
表 <name5> 内のカテゴリーを one - hot 表現にする	pd . get_dummies ( <name5> )	pd . get_dummies ( <name5> )
<val1> 列と <val5> カラムで <name3> 表を値が大きい順にソートされた結果で書き換える	<name3> . sort_values ( [ <val1> , <val5> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val1> , <val5> ] , ascending = False , inplace = True )
<name1> 表をインデックス通りに昇順でソートして、 <name1> にする	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
<val5> から <val2> に表 <name6> の行の名前をリネームした結果を <name6> にする	<name6> = <name6> . rename ( index = { <val5> : <val2> } )	<name6> = <name6> . rename ( index = { <val5> : <val2> } )
<name3> を <val1> と <val2> を元に降順でソートし、書き換える	<name3> . sort_values ( [ <val1> , <val2> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val1> , <val2> ] , ascending = False , inplace = True )
ある <val4> を <name2> 表上に NaN として、置き換える	<name2> . replace ( <val4> , np . nan , inplace = True )	<name2> = <name2> . replace ( <val4> , np . nan )
<name6> 内の <val1> に重複がある行を消し、書き換える	<name6> . drop_duplicates ( subset = <val1> , inplace = True )	<name6> . drop_duplicates ( subset = <val1> , inplace = True )
<name4> の未入力の値を <name5> に変え、置き換える	<name4> . fillna ( <name5> , inplace = True )	<name4> = <name4> . fillna ( <name5> )
<name6> 表中の未記入の値を <name3> で埋める	<name6> . fillna ( <name3> )	<name6> . fillna ( <name3> )
<name5> の元のインデックスをリセットした結果を <name5> にする	<name5> = <name5> . reset_index ( drop = True )	<name5> = <name5> . reset_index ( drop = True )
表 <name6> 中の未記入の値を直前の行の値で補って、置き換える	<name6> . fillna ( method = 'ffill' , inplace = True )	<name6> = <name6> . fillna ( method = 'ffill' )
<name6> 表中の欠損を <name3> に置換して、 <name5> にする	<name5> = <name6> . fillna ( <name3> )	<name5> = <name6> . fillna ( <name3> )
<name3> 表内の欠損値を <name2> で埋める	<name3> . fillna ( <name2> )	<name3> . fillna ( <name2> )
<name5> と <name2> に対して <val6> をキーとしてデータをマージする	pd . merge ( <name5> , <name2> , on = <val6> )	pd . merge ( <name5> , <name2> , on = <val6> )
表 <name6> の中の未入力の値を含む行を取り除いた結果を再代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
表 <name6> の中のカテゴリーをダミー変数化する	pd . get_dummies ( <name6> )	pd . get_dummies ( <name6> )
<name6> の <val4> を消された結果を再代入する	<name6> = <name6> . drop ( <val4> , axis = 1 )	<name6> = <name6> . drop ( <val4> , axis = 1 )
<name5> 表のカテゴリーをダミー変数化された結果を <name2> とする	<name2> = pd . get_dummies ( <name5> )	<name2> = pd . get_dummies ( <name5> )
<name6> 上の未記入の値を <name5> に置換し、 <name4> に代入する	<name4> = <name6> . fillna ( <name5> )	<name4> = <name6> . fillna ( <name5> )
<name6> と <name4> と <name3> を箱ひげ図に出力する	plt . boxplot ( [ <name6> , <name4> , <name3> ] )	plt . boxplot ( [ <name6> , <name4> , <name3> ] )
<name6> 表中の欠損を <name2> として、 <name3> にする	<name3> = <name6> . fillna ( <name2> )	<name3> = <name6> . fillna ( <name2> )
赤に色を設定する	color = 'red'	color = 'red'
<name6> 表の中にある <val2> を未入力の値で補って、インプレースする	<name6> . replace ( <val2> , np . nan , inplace = True )	<name6> . replace ( <val2> , np . nan , inplace = True )
<name4> 表の列の名前を <val2> から <val3> にリネームし、書き換える	<name4> . rename ( columns = { <val2> : <val3> } , inplace = True )	<name4> . rename ( columns = { <val2> : <val3> } , inplace = True )
表 <name2> の <val1> を NaN で補った結果を <name2> とする	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
<name4> 表を <val5> カラムと <val3> コラムが値の大きい順になるようにソートした結果を <name4> とする	<name4> = <name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )
横 <val5> 縦 <val2> に描画するグラフの大きさを変更する	plt . figure ( figsize = ( <val5> , <val2> ) )	plt . figure ( figsize = ( <val5> , <val2> ) )
ダブっている最後の行を残して <name6> 表の中の重複している行を取り除き、 <name5> とする	<name5> = <name6> . drop_duplicates ( keep = False )	<name5> = <name6> . drop_duplicates ( keep = False )
<name4> 表の中の <val6> コラムのダブる行を落とす	<name4> . drop_duplicates ( subset = <val6> )	<name4> . drop_duplicates ( subset = <val6> )
マーカーを四角とする	marker = 's'	marker = 's'
表 <name5> のコラム <val6> をインデックスにし、 <name5> に代入する	<name5> = <name5> . set_index ( <val6> )	<name5> = <name5> . set_index ( <val6> )
ビンを <name2> 、ビンの名前を <name5> として <name1> の <val6> を分割した結果を <name3> に代入する	<name3> = pd . cut ( <name1> [ <val6> ] , <name2> , label = <name5> )	<name3> = pd . cut ( <name1> [ <val6> ] , <name2> , label = <name5> )
表 <name4> を <val1> というファイル名でエクセル形式でセーブする	<name4> . to_excel ( <val1> )	<name4> . to_excel ( <val1> )
<name4> 表の欠損を <name2> に変えた結果を <name1> に代入する	<name1> = <name4> . fillna ( <name2> )	<name1> = <name4> . fillna ( <name2> )
データフレーム <name3> においてカラム <val6> とカラム <val2> とカラム <val5> の関係性を一度に出力する	sns . pairplot ( <name3> [ [ <val6> , <val2> , <val5> ] ] )	sns . pairplot ( <name3> [ [ <val6> , <val2> , <val5> ] ] ] )
<name1> 表で重複したデータを得る	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
その列の名前を <val3> から <val1> に変える	. rename ( columns = { <val3> : <val1> } )	. rename ( columns = { <val3> : <val1> } )
表 <name2> の中の欠損を直前の行の値で補って、置き換える	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
<name2> の中にある <val1> を未入力の値で埋められた結果を <name2> に代入する	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
<name2> の柱状グラフを区間を <val6> として描写する	plt . hist ( <name2> , bins = <val6> )	plt . hist ( <name2> , bins = <val6> )
<name4> 表をインデックスに沿って昇順でソートして、 <name4> とする	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
マーカーの種類を×とする	marker = 'x'	marker = 'x'
ヘッダーを設定せずにデータ <val1> を読み込み、 <name5> に代入する	<name5> = pd . read_csv ( <val1> , header = None )	<name5> = pd . read_csv ( <val1> , header = None )
表 <name2> 内の欠損値を <name5> で埋めた結果で置き換える	<name2> = <name2> . fillna ( <name5> )	<name2> = <name2> . fillna ( <name5> )
<name2> 中の <val1> に重複がある行を削除し、置き換える	<name2> . drop_duplicates ( subset = <val1> , inplace = True )	<name2> = <name2> . drop_duplicates ( subset = <val1> )
<name2> を <val4> を元に昇順でソートして、書き換える	<name2> . sort_values ( <val4> , inplace = True )	<name2> . sort_values ( <val4> , inplace = True )
箱ひげ図に <name1> と <name4> と <name2> を表示する	plt . boxplot ( [ <name1> , <name4> , <name2> ] )	plt . boxplot ( [ <name1> , <name4> , <name2> ] )
<name4> 内の重複する行を消した結果を <name4> に代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name6> を <val2> と <val3> を軸に降順でソートして、 <name4> に代入する	<name4> = <name6> . sort_values ( [ <val2> , <val3> ] , ascending = False )	<name4> = <name6> . sort_values ( [ <val2> , <val3> ] , ascending = False )
<val1> カラムで <name6> 表全体を昇順にソートした結果で置き換える	<name6> . sort_values ( <val1> , inplace = True )	<name6> = <name6> . sort_values ( <val1> )
真ん中として、 <name1> 座標を <name1> とした <name4> の棒グラフを棒グラフの位置を表示する	plt . bar ( <name1> , <name4> , align = 'center' )	plt . bar ( <name1> , <name4> , align = 'center' )
表 <name1> の <val6> を NaN に置き換える	<name1> . replace ( <val6> , np . nan )	<name1> . replace ( <val6> , np . nan )
カラム <val5> で昇順に表 <name3> をソートし、置き換える	<name3> = <name3> . sort_values ( <val5> )	<name3> = <name3> . sort_values ( <val5> )
<name4> 中に欠損がどの程度あるのか確認する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
<name2> の <val3> を要素の数が等しくなるようにビンの数を <name1> として分割された結果を <name5> に代入する	<name5> = pd . qcut ( <name2> [ <val3> ] , <name1> )	<name5> = pd . qcut ( <name2> [ <val3> ] , <name1> )
重複する最後の行を残して <name4> 表上の重複している行を消し、置き換える	<name4> = <name4> . drop_duplicates ( keep = False )	<name4> = <name4> . drop_duplicates ( keep = False )
存在する <val5> を <name2> 表の中に欠損に置換し、書き換える	<name2> . replace ( <val5> , np . nan , inplace = True )	<name2> . replace ( <val5> , np . nan , inplace = True )
区関数を <name1> 、ビンの名前を整数値として表 <name6> の列 <val5> を分割する	pd . cut ( <name6> [ <val5> ] , <name1> , label = False )	pd . cut ( <name6> [ <val5> ] , <name1> , label = False )
<name6> を <val1> と <val3> を軸に値が大きい順でソートして、 <name6> に代入する	<name6> = <name6> . sort_values ( [ <val1> , <val3> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val1> , <val3> ] , ascending = False )
<name4> 表全体を <val6> カラムを元に昇順でソートされた結果で書き換える	<name4> . sort_values ( <val6> , inplace = True )	<name4> . sort_values ( <val6> , inplace = True )
表 <name5> の列の名前を <val6> から <val4> に <val1> から <val3> にリネームして、 <name2> にする	<name2> = <name5> . rename ( columns = { <val6> : <val4> , <val1> : <val3> } )	<name2> = <name5> . rename ( columns = { <val6> : <val4> , <val1> : <val3> } )
<name4> 表にある <val3> を未入力の値に置き換えて、再代入する	<name4> = <name4> . replace ( <val3> , np . nan )	<name4> = <name4> . replace ( <val3> , np . nan )
列番号 <val6> をインデックスとして <val1> データを表に格納して、 <name5> とする	<name5> = pd . read_csv ( <val1> , index_col = <val6> )	<name5> = pd . read_csv ( <val1> , index_col = <val6> )
区間を <name4> として要素の数が等しくなるように表 <name6> の列 <val2> を分割する	pd . qcut ( <name6> [ <val2> ] , <name4> )	pd . qcut ( <name6> [ <val2> ] , <name4> )
表 <name4> を列 <val2> とカラム <val5> を軸に逆順でソートした結果を <name1> にする	<name1> = <name4> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name1> = <name4> . sort_values ( [ <val2> , <val5> ] , ascending = False )
表 <name1> 中のコラム <val6> に重複がある行を削除して、 <name3> とする	<name3> = <name1> . drop_duplicates ( subset = <val6> )	<name3> = <name1> . drop_duplicates ( subset = <val6> )
エクセルファイル <val4> のシート名 <val1> を読み込み、表とした結果を <name2> に代入する	<name2> = pd . read_excel ( <val4> , sheet_name = <val1> )	<name2> = pd . read_excel ( <val4> , sheet_name = <val1> )
<name2> 内の欠損値を <name2> の平均値で埋め、 <name6> とする	<name6> = <name2> . fillna ( <name2> . mean ( ) )	<name6> = <name2> . fillna ( <name2> . mean ( ) )
インデックスを軸に <name5> 表を小さい順でソートし、 <name5> に代入する	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
<name5> の中の重複要素がある行を取り除いた結果で置き換える	<name5> . drop_duplicates ( inplace = True )	<name5> = <name5> . drop_duplicates ( )
<name2> 表全体を <val5> カラムで昇順にソートして、置き換える	<name2> = <name2> . sort_values ( <val5> )	<name2> = <name2> . sort_values ( <val5> )
<name3> 表の <val4> 列を区間の数を <name2> 、ビンの名前を 0 始まりの連番として分割する	pd . cut ( <name3> [ <val4> ] , <name2> , label = False )	pd . cut ( <name3> [ <val4> ] , <name2> , label = False )
<name3> 表の <val4> 列を区間を <name5> 、ビンの名前を 0 始まりの連番として分割し、 <name6> にする	<name6> = pd . cut ( <name3> [ <val4> ] , <name5> , label = False )	<name6> = pd . cut ( <name3> [ <val4> ] , <name5> , label = False )
<name4> 表中の重複を判定	<name4> . duplicated ( )	<name4> . duplicated ( )
表 <name5> のバリューを <name6> に代入する	<name6> = <name5> . values	<name6> = <name5> . values
<name3> 表全体をインデックスを元に小さい順にソートして、再代入する	<name3> = <name3> . sort_index ( )	<name3> = <name3> . sort_index ( )
表 <name5> 中の欠損値を <name3> に置換した結果で置き換える	<name5> . fillna ( <name3> , inplace = True )	<name5> = <name5> . fillna ( <name3> )
<name2> のカラム名を表示する	<name2> . columns	<name2> . columns
<name3> を <val4> というファイル名でエクセルデータに書き出す	<name3> . to_excel ( <val4> )	<name3> . to_excel ( <val4> )
<name2> 表上のカテゴリーをダミー変数にした結果を <name6> に代入する	<name6> = pd . get_dummies ( <name2> )	<name6> = pd . get_dummies ( <name2> )
<val3> から <val6> に <name2> 表の列名をリネームした結果で書き換える	<name2> . rename ( columns = { <val3> : <val6> } , inplace = True )	<name2> . rename ( columns = { <val3> : <val6> } , inplace = True )
グラフの種類は横方向の棒グラフを用いる	kind = 'barh'	kind = 'barh'
<name5> の <val3> を区間の数を <name4> 、ビンの名前をインデックスとして分割した結果を <name2> にする	<name2> = pd . cut ( <name5> [ <val3> ] , <name4> , label = False )	<name2> = pd . cut ( <name5> [ <val3> ] , <name4> , label = False )
<name6> のデータの性質	<name6> . info ( )	<name6> . info ( )
表 <name5> のコラム <val2> をインデックスにセットした結果を <name5> とする	<name5> = <name5> . set_index ( <val2> )	<name5> = <name5> . set_index ( <val2> )
<name3> の中の <val6> に重複がある行を削除して、再代入する	<name3> = <name3> . drop_duplicates ( subset = <val6> )	<name3> = <name3> . drop_duplicates ( subset = <val6> )
打点の輪郭の色は黄緑を使う	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
ビンを <name4> 、ビンの名前をリスト <name6> として表 <name3> の列 <val1> を分割する	pd . cut ( <name3> [ <val1> ] , <name4> , label = <name6> )	pd . cut ( <name3> [ <val1> ] , <name4> , label = <name6> )
表 <name5> 中の欠損を直前の行の値で埋めた結果で書き換える	<name5> . fillna ( method = 'ffill' , inplace = True )	<name5> . fillna ( method = 'ffill' , inplace = True )
<name5> 上の <val1> のダブる行を落とした結果で置き換える	<name5> = <name5> . drop_duplicates ( subset = <val1> )	<name5> = <name5> . drop_duplicates ( subset = <val1> )
<name4> をインデックスで昇順にソートした結果で置き換える	<name4> . sort_index ( inplace = True )	<name4> = <name4> . sort_index ( )
<name3> 表の未入力の値を <name3> 表の平均をとって補われた、結果で書き換える	<name3> . fillna ( <name3> . mean ( ) , inplace = True )	<name3> . fillna ( <name3> . mean ( ) , inplace = True )
表 <name1> 上のダブる行を落とした結果で置き換える	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
表 <name3> の末尾 5 行	<name3> . tail ( )	<name3> . tail ( )
表 <name1> の列 <val3> をビンの数を <name4> として要素数が等しくなるように分割する	pd . qcut ( <name1> [ <val3> ] , <name4> )	pd . qcut ( <name1> [ <val3> ] , <name4> )
表 <name3> の <val6> を NaN で置換する	<name3> . replace ( <val6> , np . nan )	<name3> . replace ( <val6> , np . nan )
<name3> の中の <val1> を欠損に変え欠損が存在する行を削除し、置き換える	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val1> , np . nan ) . dropna ( )
<name2> についての箱髭図をプロットする	plt . boxplot ( <name2> )	plt . boxplot ( <name2> )
<name2> 表の <val3> コラムをインデックスにした結果を <name5> に代入する	<name5> = <name2> . set_index ( <val3> )	<name5> = <name2> . set_index ( <val3> )
<name1> 表をインデックスに沿って昇順でソートした結果でインプレースする	<name1> . sort_index ( inplace = True )	<name1> . sort_index ( inplace = True )
<name1> データフレームの <val2> カラムを柱状図にする	plt . hist ( <name1> [ <val2> ] )	plt . hist ( <name1> [ <val2> ] )
<name1> の中の <val4> に重複がある行を落とした結果を <name1> にする	<name1> = <name1> . drop_duplicates ( subset = <val4> )	<name1> = <name1> . drop_duplicates ( subset = <val4> )
列番号 <val3> をインデックスとして <val6> からデータフレームを読み込んで、 <name4> とする	<name4> = pd . read_csv ( <val6> , index_col = <val3> )	<name4> = pd . read_csv ( <val6> , index_col = <val3> )
カラム <val6> とコラム <val4> が逆順になるように表 <name5> をソートし、 <name5> に代入する	<name5> = <name5> . sort_values ( [ <val6> , <val4> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val6> , <val4> ] , ascending = False )
<name6> の <val2> についての分散を得る	<name6> [ <val2> ] . var ( )	<name6> [ <val2> ] . var ( )
表 <name5> の <val1> を未入力の値とした結果で置き換える	<name5> . replace ( <val1> , np . nan , inplace = True )	<name5> = <name5> . replace ( <val1> , np . nan )
カラム <val1> とコラム <val6> が降順になるように表 <name2> 全体をソートした結果を <name4> とする	<name4> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )	<name4> = <name2> . sort_values ( [ <val1> , <val6> ] , ascending = False )
<name4> 表の中の未記入の値を <name1> とする	<name4> . fillna ( <name1> )	<name4> . fillna ( <name1> )
<val4> から <val3> に表 <name2> の行の名前をリネームされた結果で置き換える	<name2> . rename ( index = { <val4> : <val3> } , inplace = True )	<name2> = <name2> . rename ( index = { <val4> : <val3> } )
<val2> 区切りで <val5> データを読む	pd . read_csv ( <val5> , sep = <val2> )	pd . read_csv ( <val5> , sep = <val2> )
線の種類を破線とする	linestyle = 'dashed'	linestyle = 'dashed'
表 <name5> のコラム <val6> をインデックスに設定した結果でインプレースする	<name5> . set_index ( <val6> , inplace = True )	<name5> . set_index ( <val6> , inplace = True )
<name4> の中の <val5> と <val3> に重複があるのかどうか検出	<name4> . duplicated ( subset = [ <val5> , <val3> ] )	<name4> . duplicated ( subset = [ <val5> , <val3> ] )
描画したグラフを <val4> という名前でセーブする	plt . savefig ( <val4> )	plt . savefig ( <val4> )
<name3> 表中の欠損を <name4> で埋めて、置き換える	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
<name1> 表の <val2> 列を区間の数を <name3> 、ビンの名前を整数値として分割する	pd . cut ( <name1> [ <val2> ] , <name3> , label = False )	pd . cut ( <name1> [ <val2> ] , <name3> , label = False )
円グラフの中に示す小数点以下 2 桁までの数値を割合をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
表 <name4> 上の <val1> を NaN に置き換え NaN がある行を消された結果で書き換える	<name4> . replace ( <val1> , np . nan ) . dropna ( inplace = True )	<name4> . replace ( <val1> , np . nan ) . dropna ( inplace = True )
<name4> と <name1> のグラフを <val6> と軸の名前をつけて描写する	plt . plot ( <name4> , <name1> , label = <val6> )	plt . plot ( <name4> , <name1> , label = <val6> )
<name2> 中の欠損を <name5> で置き換える	<name2> . fillna ( <name5> )	<name2> . fillna ( <name5> )
タブ区切りで <val5> データを読み込む	pd . read_csv ( <val5> , sep = '\t' )	pd . read_csv ( <val5> , sep = '\t' )
ある行を <name2> の中の未記入の値が削除された結果を <name6> に代入する	<name6> = <name2> . dropna ( )	<name6> = <name2> . dropna ( )
全結合で <name4> 表と <name2> 表をマージする	pd . merge ( <name4> , <name2> , how = 'outer' )	pd . merge ( <name4> , <name2> , how = 'outer' )
df 表全体をインデックスを軸に昇順でソートする	df . sort_index ( )	df . sort_index ( )
<name5> 表上の NaN を直前の行の値で補う	<name5> . fillna ( method = 'ffill' )	<name5> . fillna ( method = 'ffill' )
<name4> 全体をインデックスで順にソートされた結果を再代入する	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
表 <name4> の列 <val6> の出現回数をチェックする	<name4> [ <val6> ] . value_counts ( )	<name4> [ <val6> ] . value_counts ( )
<val4> という名前のエクセルファイルの全てのシートを表として読む	pd . read_excel ( <val4> , sheet_name = None )	pd . read_excel ( <val4> , sheet_name = None )
<name6> 表内の <val5> を欠損値に置き換え欠損値が存在する行をドロップし、 <name6> に代入する	<name6> = <name6> . replace ( <val5> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val5> , np . nan ) . dropna ( )
表 <name3> 中のカテゴリーをダミー変数に変換して、 <name6> にする	<name6> = pd . get_dummies ( <name3> )	<name6> = pd . get_dummies ( <name3> )
<name3> 表全体を昇順に <val5> カラムでソートした結果を再代入する	<name3> = <name3> . sort_values ( <val5> )	<name3> = <name3> . sort_values ( <val5> )
<name3> 表の中で重複した行数の合計を調べる	<name3> . duplicated ( ) . sum ( )	<name3> . duplicated ( ) . sum ( )
<name5> のインデックスを振り直された結果を <name2> にする	<name2> = <name5> . reset_index ( )	<name2> = <name5> . reset_index ( )
<name5> 全体をインデックスに沿って昇順でソートした結果を <name3> とする	<name3> = <name5> . sort_index ( )	<name3> = <name5> . sort_index ( )
打点の輪郭の色を水色とする	markeredgecolor = 'cyan'	markeredgecolor = 'cyan'
<name2> 表の未入力の値を直前の行の値で埋められた結果で置き換える	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
表 <name6> をエクセルファイル <val2> に描く	<name6> . to_excel ( <val2> )	<name6> . to_excel ( <val2> )
<name2> 表の <val5> を NaN で置換する	<name2> . replace ( <val5> , np . nan )	<name2> . replace ( <val5> , np . nan )
<name4> 表内の欠損を <name4> 表の平均をとって埋め、再代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
<val6> から <val3> に <name4> の列名をリネームする	<name4> . rename ( columns = { <val6> : <val3> } )	<name4> . rename ( columns = { <val6> : <val3> } )
表 <name4> 中のコラム <val1> とカラム <val5> に重複はあるのかどうか	<name4> . duplicated ( subset = [ <val1> , <val5> ] )	<name4> . duplicated ( subset = [ <val1> , <val5> ] )
ビンを <name1> として表 <name6> の列 <val4> を要素の数が等しくなるように分割した結果を <name3> にする	<name3> = pd . qcut ( <name6> [ <val4> ] , <name1> )	<name3> = pd . qcut ( <name6> [ <val4> ] , <name1> )
表 <name3> のインデックスを振り直す	<name3> . reset_index ( )	<name3> . reset_index ( )
<val1> から <val6> に表 <name3> の列の名前を変更する	<name3> . rename ( columns = { <val1> : <val6> } )	<name3> . rename ( columns = { <val1> : <val6> } )
ヘッダーなしで <val6> を読み込まれた結果を <name2> にする	<name2> = pd . read_csv ( <val6> , header = None )	<name2> = pd . read_csv ( <val6> , header = None )
<name5> 上の NaN を <name1> で埋めた結果で置き換える	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
<val2> と <val5> で <name3> を値が大きい順にソートする	<name3> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name3> . sort_values ( [ <val2> , <val5> ] , ascending = False )
表 <name6> のインデックスをリセットを再代入する	<name6> = <name6> . reset_index ( )	<name6> = <name6> . reset_index ( drop = True )
表 <name4> のそれぞれの列にある <val6> の数を調べる	<name4> . isin ( [ <val6> ] ) . sum ( )	<name4> . isin ( [ <val6> ] ) . sum ( )
左側のデータのインデックスとカラム <val6> をキーとして表 <name4> と表 <name5> をマージする	pd . merge ( <name4> , <name5> , left_index = True , right_on = <val6> )	pd . merge ( <name4> , <name5> , left_index = True , right_on = <val6> )
きれいな円に円グラフをする	plt . axis ( 'equal' )	plt . axis ( 'equal' )
グラフのフォントを日本語に指定する	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
表 <name3> 中の欠損を表 <name3> の平均値で埋めた結果を再代入する	<name3> = <name3> . fillna ( <name3> . mean ( ) )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
グラフカラーを水色とする	color = 'cyan'	color = 'cyan'
<name1> 表中の未記入の値を <name1> 表の平均で補って、 <name2> に代入する	<name2> = <name1> . fillna ( <name1> . mean ( ) )	<name2> = <name1> . fillna ( <name1> . mean ( ) )
表 <name6> 内の NaN を表 <name6> の平均値で埋めた結果を <name5> にする	<name5> = <name6> . fillna ( <name6> . mean ( ) )	<name5> = <name6> . fillna ( <name6> . mean ( ) )
<name5> の <val1> を区関数を <name4> 、ビンのラベルを <name6> として分割し、 <name2> にする	<name2> = pd . cut ( <name5> [ <val1> ] , <name4> , label = <name6> )	<name2> = pd . cut ( <name5> [ <val1> ] , <name4> , label = <name6> )
<name5> の行列を入れかえる	<name5> . T	<name5> . values
<name5> の <val3> を NaN に置き換える	<name5> . replace ( <val3> , np . nan )	<name5> . replace ( <val3> , np . nan )
グラフ線のスタイルを点線とする	linestyle = 'dotted'	linestyle = 'dotted'
<name3> 内に存在する <val5> を欠損値で補った結果を <name3> とする	<name3> = <name3> . replace ( <val5> , np . nan )	<name3> = <name3> . replace ( <val5> , np . nan )
表 <name3> 中のそれぞれのコラムに存在する <val1> の数の合計値	<name3> . isin ( [ <val1> ] ) . sum ( )	<name3> . isin ( [ <val1> ] ) . sum ( )
<name3> 表中の欠損値を <name3> 表の平均値で埋めて、 <name2> とする	<name2> = <name3> . fillna ( <name3> . mean ( ) )	<name2> = <name3> . fillna ( <name3> . mean ( ) )
<name4> 表のカテゴリーを数値に変え、 <name1> にする	<name1> = pd . get_dummies ( <name4> )	<name1> = pd . get_dummies ( <name4> )
表 <name3> 上の重複する行を消し、 <name3> にする	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
カンマ区切りで <val4> を読み込んだ結果を <name6> とする	<name6> = pd . read_csv ( <val4> , sep = ',' )	<name6> = pd . read_csv ( <val4> , sep = ',' )
<val5> 列と <val3> カラムで <name6> 表を逆順にソートした結果を <name6> とする	<name6> = <name6> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val5> , <val3> ] , ascending = False )
<name6> 全体を <val5> と <val1> を軸に降順でソートし、 <name6> にする	<name6> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val5> , <val1> ] , ascending = False )
<name3> 中の <val2> の重複した行をドロップした結果を <name4> にする	<name4> = <name3> . drop_duplicates ( subset = <val2> )	<name4> = <name3> . drop_duplicates ( subset = <val2> )
<name6> 表の中の重複要素がある行を削除した結果を <name6> にする	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name2> 表の列の名前を <val4> から <val3> に <val1> から <val5> にリネームし、 <name2> にする	<name2> = <name2> . rename ( columns = { <val1> : <val5> , <val4> : <val3> } )	<name2> = <name2> . rename ( columns = { <val4> : <val3> , <val1> : <val5> } )
<name2> の <val3> をインデックスとしてセットし、 <name2> に代入する	<name2> = <name2> . set_index ( <val3> )	<name2> = <name2> . set_index ( <val3> )
エクセルファイル <val1> の <val5> シート名から読み込んだ結果を <name3> とする	<name3> = pd . read_excel ( <val1> , sheet_name = <val5> )	<name3> = pd . read_excel ( <val1> , sheet_name = <val5> )
<name5> 中の欠損値が含まれる箇所に色をつける	<name5> . style . highlight_null ( )	<name5> . style . highlight_null ( )
表 <name4> 中にある <val1> を未記入の値に置き換えられた結果を <name4> にする	<name4> = <name4> . replace ( <val1> , np . nan )	<name4> = <name4> . replace ( <val1> , np . nan )
<name3> 表上の未記入の値を含む行を落とす	<name3> . dropna ( )	<name3> . dropna ( )
表 <name2> の NaN を <name3> にした結果を <name2> に代入する	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
ピボット操作で <name3> の列を行に入れ替える	<name3> . stack ( )	<name3> . unstack ( )
<name5> を <val4> という名前で保存する	<name5> . to_csv ( <val4> )	<name5> . to_csv ( <val4> )
<name4> の中にある <val3> を未記入の値とされた結果を <name4> にする	<name4> = <name4> . replace ( <val3> , np . nan )	<name4> = <name4> . replace ( <val3> , np . nan )
ある行を <name5> の未入力の値が取り除き、置き換える	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<name1> 上の NaN を <name6> で埋め、 <name4> にする	<name4> = <name1> . fillna ( <name6> )	<name4> = <name1> . fillna ( <name6> )
<name1> 内のそれぞれのカラムに存在する <val3> の個数の数	<name1> . isin ( [ <val3> ] ) . sum ( )	<name1> . isin ( [ <val3> ] ) . sum ( )
一番左の列をインデックスと設定して、 <val1> データをデータフレームとして読まれた結果を <name6> にする	<name6> = pd . read_csv ( <val1> , index_col = 0 )	<name6> = pd . read_csv ( <val1> , index_col = 0 )
円グラフ内に構成割合を示す小数点以下 2 桁までの数値をパーセントで出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
列 <val2> とカラム <val1> で表 <name4> を降順にソートし、再代入する	<name4> = <name4> . sort_values ( [ <val2> , <val1> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val2> , <val1> ] , ascending = False )
表 <name6> の列 <val3> とコラム <val5> とコラム <val1> と列 <val2> を抽出する	<name6> [ [ <val3> , <val5> , <val1> , <val2> ] ]	<name6> [ [ <val3> , <val5> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> , <val2> ] ]
表 <name4> 中の欠損を <name2> に置き換えられた結果を再代入する	<name4> = <name4> . fillna ( <name2> )	<name4> = <name4> . fillna ( <name2> )
棒グラフの位置を真ん中として <name3> 軸を <name3> とした <name5> の横向き棒グラフを出力する	plt . barh ( <name3> , <name5> , align = 'center' )	plt . bar ( <name3> , <name5> , align = 'center' )
<name6> の中の欠損を含む行を削除し、インプレースする	<name6> . dropna ( inplace = True )	<name6> . dropna ( inplace = True )
<name4> 表上の <val5> コラムのダブる行を落とした結果で置き換える	<name4> . drop_duplicates ( subset = <val5> , inplace = True )	<name4> = <name4> . drop_duplicates ( subset = <val5> )
<name4> の <val2> をインデックスに指定し、 <name1> に代入する	<name1> = <name4> . set_index ( <val2> )	<name1> = <name4> . set_index ( <val2> )
<name4> の中の列それぞれにある <val2> の数の数	<name4> . isin ( [ <val2> ] ) . sum ( )	<name4> . isin ( [ <val2> ] ) . sum ( )
<val3> として図を保存する	plt . savefig ( <val3> )	plt . savefig ( <val3> )
<name2> 表の中の未記入の値を直前の行の値で埋める	<name2> . fillna ( method = 'ffill' )	<name2> . fillna ( method = 'ffill' )
一番左の列をインデックスにセットセットして、 <val3> データを読む	pd . read_csv ( <val3> , index_col = 0 )	pd . read_csv ( <val3> , index_col = 0 )
表 <name6> の中に存在する <val5> を欠損にされた結果を <name4> に代入する	<name4> = <name6> . replace ( <val5> , np . nan )	<name4> = <name6> . replace ( <val5> , np . nan )
<name1> 表の <val6> が <val3> 以上のデータ	<name1> [ <name1> [ <val6> ] >= <val3> ]	<name1> [ <name1> [ <val6> ] > <val3> ]
<name5> の中にある <val2> を未入力の値で置き換える	<name5> . replace ( <val2> , np . nan )	<name5> . replace ( <val2> , np . nan )
マーカーの種類を五芒星とする	marker = '*'	marker = '*'
表 <name2> のコラム <val3> に重複がある行を取り除き、 <name2> とする	<name2> = <name2> . drop_duplicates ( subset = <val3> )	<name2> = <name2> . drop_duplicates ( subset = <val3> )
エンコーディングをシフト JIS で、データ <val6> を読み込む	pd . read_csv ( <val6> , encoding = 'shift_jis' )	pd . read_csv ( <val6> , encoding = 'shift_jis' )
<val5> から <val4> に表 <name6> のカラム名を変更された結果を <name2> に代入する	<name2> = <name6> . rename ( columns = { <val5> : <val4> } )	<name2> = <name6> . rename ( columns = { <val5> : <val4> } )
表 <name6> の中の未記入の値を表 <name6> の平均で補った結果を再代入する	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name6> のデータの内容	<name6> . info ( )	<name6> . info ( )
<name1> の <val5> をインデックスとして指定する	<name1> . set_index ( <val5> )	<name1> . set_index ( <val5> )
<name4> 表の中の欠損を <name4> 表の平均値で埋め、 <name4> に代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
<name6> の統計的情報	<name6> . describe ( )	<name6> . describe ( )
<name2> 表の <val3> 列を年月日のファイルに変換する	pd . to_datetime ( <name2> [ <val3> ] )	pd . to_datetime ( <name2> [ <val3> ] )
表 <name2> の未入力の値がある行を取り除かれた結果を <name2> にする	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
インデックスを元に <name2> 表を小さい方からソートし、 <name2> にする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<val2> から <val5> に <name3> 表の列名を変更された結果を <name6> にする	<name6> = <name3> . rename ( columns = { <val2> : <val5> } )	<name6> = <name3> . rename ( columns = { <val2> : <val5> } )
<name2> の元々あったインデックスをリセットした結果を <name3> に代入する	<name3> = <name2> . reset_index ( drop = True )	<name3> = <name2> . reset_index ( drop = True )
<name3> 表内に存在する <val5> を NaN で埋める	<name3> . replace ( <val5> , np . nan )	<name3> . replace ( <val5> , np . nan )
<name5> 表のオブジェクトデータの統計的な情報	<name5> . describe ( include = 'O' )	<name5> . describe ( include = 'O' )
<name4> をグラフの y 軸、 <name6> をグラフの x 軸と設定して、グラフを描写する	plt . plot ( <name4> , <name6> )	plt . plot ( <name4> , <name6> )
<name3> 中で重複するデータを得る	<name3> [ <name3> . duplicated ( ) ]	<name3> [ <name3> . duplicated ( ) ]
表 <name1> のコラム <val3> を削除した結果で置き換える	<name1> = <name1> . drop ( <val3> , axis = 1 )	<name1> = <name1> . drop ( <val3> , axis = 1 )
<name6> 表の <val1> を未入力の値に変え未入力の値がある行を取り除いた結果でインプレースする	<name6> . replace ( <val1> , np . nan ) . dropna ( inplace = True )	<name6> . replace ( <val1> , np . nan ) . dropna ( inplace = True )
表 <name4> の列名を <val5> から <val6> にリネームして、 <name1> に代入する	<name1> = <name4> . rename ( columns = { <val5> : <val6> } )	<name1> = <name4> . rename ( columns = { <val5> : <val6> } )
表 <name5> の中のコラム <val1> に重複がある行を削除する	<name5> . drop_duplicates ( subset = <val1> )	<name5> . drop_duplicates ( subset = <val1> )
<name5> 表の未記入の値を <name4> に変え、置き換える	<name5> = <name5> . fillna ( <name4> )	<name5> = <name5> . fillna ( <name4> )
最大カラム数を <val2> に設定する	pd . set_option ( 'display.max_columns' , <val2> )	pd . set_option ( 'display.max_columns' , <val2> )
表 <name6> 内の <val4> を NaN に置換し NaN が存在する行を消した結果を再代入する	<name6> = <name6> . replace ( <val4> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val4> , np . nan ) . dropna ( )
<name2> のオブジェクトデータの要約統計量	<name2> . describe ( include = 'O' )	<name2> . describe ( include = 'O' )
グラフの y 軸に <val6> という軸の名前を加える	plt . ylabel ( <val6> )	plt . ylabel ( <val6> )
表 <name3> の欠損値を <name4> に変えた結果を <name3> とする	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
表 <name5> 内のコラム <val3> の重複している行を削除し、再代入する	<name5> = <name5> . drop_duplicates ( subset = <val3> )	<name5> = <name5> . drop_duplicates ( subset = <val3> )
<name2> 表から <val1> データという名前で CSV に変換する	<name2> . to_csv ( <val1> )	<name2> . to_csv ( <val1> )
左寄せにヘッダーの表示をする	pd . set_option ( 'colheader_justify' , 'left' )	pd . set_option ( 'colheader_justify' , 'left' )
<name1> 上に重複はあるか確認	<name1> . duplicated ( )	<name1> . duplicated ( )
表 <name5> の <val6> 行目を削除した結果を <name5> にする	<name5> = <name5> . drop ( <val6> )	<name5> = <name5> . drop ( <val6> )
表 <name5> の未記入の値を <name4> に変え、置き換える	<name5> . fillna ( <name4> , inplace = True )	<name5> = <name5> . fillna ( <name4> )
エクセルファイル <val6> の <val1> 番目のシートを表データに読む	pd . read_excel ( <val6> , sheet_name = <val1> )	pd . read_excel ( <val6> , sheet_name = <val1> )
<name6> 表の中にある <val3> を未記入の値とされた結果を <name6> に代入する	<name6> = <name6> . replace ( <val3> , np . nan )	<name6> = <name6> . replace ( <val3> , np . nan )
<name3> 中の <val6> を欠損に置き換え欠損が存在する行を削除された結果で置き換える	<name3> . replace ( <val6> , np . nan ) . dropna ( inplace = True )	<name3> = <name3> . replace ( <val6> , np . nan ) . dropna ( )
表 <name6> 内の重複した行をドロップされた結果を <name5> に代入する	<name5> = <name6> . drop_duplicates ( )	<name5> = <name6> . drop_duplicates ( )
<name5> 表のインデックスをリセット、元のインデックスを削除し、 <name2> に代入する	<name2> = <name5> . reset_index ( drop = True )	<name2> = <name5> . reset_index ( drop = True )
表 <name6> の列名を <name2> に代入する	<name2> = <name6> . columns	<name2> = <name6> . columns
表 <name3> のインデックスを振り直して、元のインデックスを削除された結果で置き換える	<name3> . reset_index ( drop = True , inplace = True )	<name3> = <name3> . reset_index ( drop = True )
エクセルファイル <val3> のシート名 <val4> を表データとして、 <name2> にする	<name2> = pd . read_excel ( <val3> , sheet_name = <val4> )	<name2> = pd . read_excel ( <val3> , sheet_name = <val4> )
<val5> カラムで昇順に <name6> 表全体をソートして、 <name3> とする	<name3> = <name6> . sort_values ( <val5> )	<name3> = <name6> . sort_values ( <val5> )
表 <name2> の <val5> を欠損値に置換した結果で書き換える	<name2> . replace ( <val5> , np . nan , inplace = True )	<name2> . replace ( <val5> , np . nan , inplace = True )
表 <name1> のコラム <val2> をインデックスにし、置き換える	<name1> = <name1> . set_index ( <val2> )	<name1> = <name1> . set_index ( <val2> )
区関数を <name2> 、ビンの名前を整数値として <name5> の <val3> を分割された結果を <name4> とする	<name4> = pd . cut ( <name5> [ <val3> ] , <name2> , label = False )	<name4> = pd . cut ( <name5> [ <val3> ] , <name2> , label = False )
マーカーのエッジの色は紺色を用いる	markeredgecolor = 'navy'	markeredgecolor = 'navy'
エクセルファイル <val6> のシート名 <val5> から表を読み込む	pd . read_excel ( <val6> , sheet_name = <val5> )	pd . read_excel ( <val6> , sheet_name = <val5> )
<name2> をインデックスどおりに昇順でソートする	<name2> . sort_index ( )	<name2> . sort_index ( )
CSV <val5> を <val6> 区切りで読む	pd . read_csv ( <val5> , sep = <val6> )	pd . read_csv ( <val5> , sep = <val6> )
表 <name5> の中のそれぞれの列にある <val4> の数の数	<name5> . isin ( [ <val4> ] ) . sum ( )	<name5> . isin ( [ <val4> ] ) . sum ( )
<name6> 表を <val5> 列と <val3> カラムを元に値が大きい順でソートして、置き換える	<name6> . sort_values ( [ <val5> , <val3> ] , ascending = False , inplace = True )	<name6> = <name6> . sort_values ( [ <val5> , <val3> ] , ascending = False )
表 <name3> の <val6> を未記入の値とし、 <name2> にする	<name2> = <name3> . replace ( <val6> , np . nan )	<name2> = <name3> . replace ( <val6> , np . nan )
マーカーの種類の色を紫とする	markerfacecolor = 'purple'	markerfacecolor = 'purple'
表 <name4> 内の重複した行をドロップした結果を <name4> とする	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name2> の <val1> と <val3> ごとの <val6> の値の和	<name2> . groupby ( [ <val1> , <val3> ] ) [ <val6> ] . sum ( )	<name2> . groupby ( [ <val1> , <val3> ] ) [ <val6> ] . sum ( )
エクセルファイル <val6> のシート名 <val4> を読み込んで表データに格納する	pd . read_excel ( <val6> , sheet_name = <val4> )	pd . read_excel ( <val6> , sheet_name = <val4> )
<val1> から <val3> に <name4> のカラム名を変更した結果を再代入する	<name4> = <name4> . rename ( columns = { <val1> : <val3> } )	<name4> = <name4> . rename ( columns = { <val1> : <val3> } )
<name2> を <val5> から <val4> の区間のヒストグラムにする	plt . hist ( <name2> , range = ( <val5> , <val4> ) )	plt . hist ( <name2> , range = ( <val5> , <val4> ) )
<name4> についての箱ひげ図を出力する	plt . boxplot ( <name4> )	plt . boxplot ( <name4> )
ある <val2> を <name4> に未入力の値で置き換えた結果を <name5> にする	<name5> = <name4> . replace ( <val2> , np . nan )	<name5> = <name4> . replace ( <val2> , np . nan )
<val6> 列目までを出力するように変更する	pd . set_option ( 'display.max_columns' , <val6> )	pd . set_option ( 'display.max_columns' , <val6> )
色を <val1> に設定する	color = <val1>	color = <val1>
データフレームにデータ <val4> を格納する	pd . read_csv ( <val4> )	pd . read_csv ( <val4> )
表 <name5> 内の欠損値を直前の行の値で補われた、結果を <name5> とする	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
<name4> の中の未入力の値を <name5> に置き換え、置き換える	<name4> = <name4> . fillna ( <name5> )	<name4> = <name4> . fillna ( <name5> )
列名をセットせずにデータ <val6> を読み込み、 <name4> とする	<name4> = pd . read_csv ( <val6> , header = None )	<name4> = pd . read_csv ( <val6> , header = None )
エクセルファイル <val4> の <val5> 番目のシートを読み込んでデータフレームに格納する	pd . read_excel ( <val4> , sheet_name = <val5> )	pd . read_excel ( <val4> , sheet_name = <val5> )
片方のテーブルにしかないデータも全て残して <name3> と <name5> をマージする	pd . merge ( <name3> , <name5> , how = 'outer' )	pd . merge ( <name3> , <name5> , how = 'outer' )
<name6> 全体を <val3> と <val4> に基づいて降順でソートし、書き換える	<name6> . sort_values ( [ <val3> , <val4> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val3> , <val4> ] , ascending = False , inplace = True )
表 <name1> 内の欠損が存在する行をドロップする	<name1> . dropna ( )	<name1> . dropna ( )
表 <name3> の数値じゃないデータを数値データに変換して、 <name1> に代入する	<name1> = pd . get_dummies ( <name3> )	<name1> = pd . get_dummies ( <name3> )
表 <name6> 上の重複要素がある行を落とし、置き換える	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<val1> という名前のエクセルファイルのシート名 <val2> をデータフレームとして読んで、 <name3> にする	<name3> = pd . read_excel ( <val1> , sheet_name = <val2> )	<name3> = pd . read_excel ( <val1> , sheet_name = <val2> )
表 <name4> 内の欠損値を含む行をドロップし、再代入する	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
エクセル <val1> をデータフレームに読み込んだ結果を <name4> に代入する	<name4> = pd . read_excel ( <val1> )	<name4> = pd . read_excel ( <val1> )
表 <name4> の中の重複している行を削除した結果を <name5> にする	<name5> = <name4> . drop_duplicates ( )	<name5> = <name4> . drop_duplicates ( )
<name4> 表内の欠損値を直前の行の値で補った結果で置き換える	<name4> . fillna ( method = 'ffill' , inplace = True )	<name4> = <name4> . fillna ( method = 'ffill' )
ダブる最後の行を残して表 <name3> の中の重複している行を落とされた結果を <name2> にする	<name2> = <name3> . drop_duplicates ( keep = False )	<name2> = <name3> . drop_duplicates ( keep = False )
メモリをグラフに表示する	plt . grid ( True )	plt . grid ( True )
<name4> を <val1> を使って昇順でソートして、インプレースする	<name4> . sort_values ( <val1> , inplace = True )	<name4> . sort_values ( <val1> , inplace = True )
ある <val4> を <name6> に未入力の値で補われた、結果を <name2> に代入する	<name2> = <name6> . replace ( <val4> , np . nan )	<name2> = <name6> . replace ( <val4> , np . nan )
<name6> 表を <val1> カラムを元に昇順でソートして、 <name6> に代入する	<name6> = <name6> . sort_values ( <val1> )	<name6> = <name6> . sort_values ( <val1> )
表 <name4> の中の未入力の値を表 <name4> の平均で補い、 <name6> に代入する	<name6> = <name4> . fillna ( <name4> . mean ( ) )	<name6> = <name4> . fillna ( <name4> . mean ( ) )
表 <name4> 上に重複はあるか確認	<name4> . duplicated ( )	<name4> . duplicated ( )
表 <name6> のコラム <val2> をインデックスとして変更して、 <name6> に代入する	<name6> = <name6> . set_index ( <val2> )	<name6> = <name6> . set_index ( <val2> )
<name4> 表内の <val6> コラムの重複する行を消された結果を <name4> に代入する	<name4> = <name4> . drop_duplicates ( subset = <val6> )	<name4> = <name4> . drop_duplicates ( subset = <val6> )
マーカーの形状の輪郭線の幅は <val5> を使用する	markeredgewidth = <val5>	markeredgewidth = <val5>
エクセルファイル <val2> の <val3> 番目のシートをデータフレームとする	pd . read_excel ( <val2> , sheet_name = <val3> )	pd . read_excel ( <val2> , sheet_name = <val3> )
表 <name5> についてダミー変数を作成し、 <name6> に代入する	<name6> = pd . get_dummies ( <name5> )	<name6> = pd . get_dummies ( <name5> )
CSV データ <val3> を表として読んで、 <name1> にする	<name1> = pd . read_csv ( <val3> )	<name1> = pd . read_csv ( <val3> )
<name5> 中に存在する <val6> を欠損で置換して、書き換える	<name5> . replace ( <val6> , np . nan , inplace = True )	<name5> . replace ( <val6> , np . nan , inplace = True )
存在する行を <name2> 表の中の欠損が取り除かれた結果を再代入する	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
区間の数を <name3> として <name1> 表の <val4> 列をビンに含まれる個数が等しくなるように分割する	pd . qcut ( <name1> [ <val4> ] , <name3> )	pd . qcut ( <name1> [ <val4> ] , <name3> )
<val4> 番目の列をインデックスと設定して、 <val6> をデータフレームとして読み込まれた結果を <name5> とする	<name5> = pd . read_csv ( <val6> , index_col = <val4> )	<name5> = pd . read_csv ( <val6> , index_col = <val4> )
<name1> の中のインデックスが <val2> の行	<name1> . loc [ <val2> ]	<name1> . loc [ <val2> ]
表 <name5> の列 <val2> を区関数を <name1> 、ビンの名前をリスト <name4> として分割された結果を <name3> にする	<name3> = pd . cut ( <name5> [ <val2> ] , <name1> , label = <name4> )	<name3> = pd . cut ( <name5> [ <val2> ] , <name1> , label = <name4> )
<name2> 表の未入力の値を <name5> に置換した結果を再代入する	<name2> = <name2> . fillna ( <name5> )	<name2> = <name2> . fillna ( <name5> )
<name3> 表内の重複要素がある行を消した結果を <name5> に代入する	<name5> = <name3> . drop_duplicates ( )	<name5> = <name3> . drop_duplicates ( )
の最初の 5 行	. head ( )	. head ( )
表 <name1> 中の欠損を削除する	<name1> . dropna ( )	<name1> . dropna ( )
表 <name4> の中のそれぞれの列に存在する <val5> の数の数を表示する	<name4> . isin ( [ <val5> ] ) . sum ( )	<name4> . isin ( [ <val5> ] ) . sum ( )
表 <name1> 内の重複した行をドロップし、置き換える	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
エクセルファイル <val6> の <val4> シート名をデータフレームに格納された結果を <name3> にする	<name3> = pd . read_excel ( <val6> , sheet_name = <val4> )	<name3> = pd . read_excel ( <val6> , sheet_name = <val4> )
表 df をインデックスを軸に小さい順にソートした結果で書き換える	df . sort_index ( inplace = True )	df . sort_index ( inplace = True )
ピボット操作で表 <name5> の列に行を入れかえる	<name5> . unstack ( )	<name5> . unstack ( )
<name4> 全体をインデックスを元に小さい順にソートした結果で置き換える	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
<name1> の列名を <val6> から <val4> に変え、書き換える	<name1> . rename ( columns = { <val6> : <val4> } , inplace = True )	<name1> . rename ( columns = { <val6> : <val4> } , inplace = True )
<name4> 表中の <val5> コラムの重複した行をドロップして、書き換える	<name4> . drop_duplicates ( subset = <val5> , inplace = True )	<name4> . drop_duplicates ( subset = <val5> , inplace = True )
<name1> の中の未記入の値を含む行を落とした結果を <name6> にする	<name6> = <name1> . dropna ( )	<name6> = <name1> . dropna ( )
<name5> 中の <val4> を欠損値に置き換え欠損値が存在する行をドロップした結果を再代入する	<name5> = <name5> . replace ( <val4> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val4> , np . nan ) . dropna ( )
<name3> 中の <val4> を未記入の値に置換し未記入の値がある行を落とした結果を再代入する	<name3> = <name3> . replace ( <val4> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val4> , np . nan ) . dropna ( )
表 <name3> の <val2> が <val1> 以下のデータ	<name3> [ <name3> [ <val2> ] <= <val1> ]	<name3> [ <name3> [ <val2> ] > <val1> ]
<name5> 表の列の名前を <val2> から <val3> に変更した結果でインプレースする	<name5> . rename ( columns = { <val2> : <val3> } , inplace = True )	<name5> . rename ( columns = { <val2> : <val3> } , inplace = True )
<name5> 中の重複している行を削除された結果でインプレースする	<name5> . drop_duplicates ( inplace = True )	<name5> . drop_duplicates ( inplace = True )
<name2> にダブりがあるかどうか確認する	<name2> . duplicated ( )	<name2> . duplicated ( )
インデックスを軸に表 <name4> 全体を小さい順にソートし、 <name5> とする	<name5> = <name4> . sort_index ( )	<name5> = <name4> . sort_index ( )
存在する行を表 <name2> の中の欠損が取り除いて、置き換える	<name2> = <name2> . dropna ( )	<name2> = <name2> . dropna ( )
存在する <val5> を <name3> 内に欠損値で補い、再代入する	<name3> = <name3> . replace ( <val5> , np . nan )	<name3> = <name3> . replace ( <val5> , np . nan )
<name5> 表の中の未入力の値を <name5> 表の平均で補い、 <name2> とする	<name2> = <name5> . fillna ( <name5> . mean ( ) )	<name2> = <name5> . fillna ( <name5> . mean ( ) )
<name5> 内の重複している行を削除した結果を <name3> にする	<name3> = <name5> . drop_duplicates ( )	<name3> = <name5> . drop_duplicates ( )
<name2> のインデックスを振り直して、元のインデックスを削除して、 <name2> にする	<name2> = <name2> . reset_index ( drop = True )	<name2> = <name2> . reset_index ( drop = True )
<name5> 表内の欠損値を <name2> に置換して、置き換える	<name5> . fillna ( <name2> , inplace = True )	<name5> = <name5> . fillna ( <name2> )
CSV ファイル <val2> を表として読み込んだ結果を <name5> にする	<name5> = pd . read_csv ( <val2> )	<name5> = pd . read_csv ( <val2> )
四角形の打点を適用する	marker = 's'	marker = 's'
ある行を <name4> 上の NaN が消した結果を再代入する	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name3> の <val1> の日にちを確認する	<name3> [ <val1> ] . dt . day	<name3> [ <val1> ] . dt . day
<name3> 表を <val6> データという名前で出力する	<name3> . to_csv ( <val6> )	<name3> . to_csv ( <val6> )
<name1> のもともとあったインデックスをリセットする	<name1> . reset_index ( drop = True )	<name1> . reset_index ( drop = True )
表 <name5> の <val2> を欠損で置換した結果を再代入する	<name5> = <name5> . replace ( <val2> , np . nan )	<name5> = <name5> . replace ( <val2> , np . nan )
最大列数を <val4> 列にする	pd . set_option ( 'display.max_columns' , <val4> )	pd . set_option ( 'display.max_columns' , <val4> )
<name3> 表の NaN を <name4> に変えた結果を <name3> とする	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
示す小数点以下 2 桁までの数値を円グラフ内に割合をパーセントで出力する	autopct = '%.2f%%'	autopct = '%.2f%%'
<name3> 表内に存在する <val4> を NaN に置換された結果を <name3> とする	<name3> = <name3> . replace ( <val4> , np . nan )	<name3> = <name3> . replace ( <val4> , np . nan )
<name5> 表中の <val3> コラムのダブる行を落とした結果を <name5> とする	<name5> = <name5> . drop_duplicates ( subset = <val3> )	<name5> = <name5> . drop_duplicates ( subset = <val3> )
<name1> の中の未記入の値を <name4> で埋めた結果で置き換える	<name1> = <name1> . fillna ( <name4> )	<name1> = <name1> . fillna ( <name4> )
<name5> 表の <val6> 列をビンを <name3> としてビンに含まれる個数が等しくなるように分割した結果を <name4> にする	<name4> = pd . qcut ( <name5> [ <val6> ] , <name3> )	<name4> = pd . qcut ( <name5> [ <val6> ] , <name3> )
<val4> と <val3> を軸に <name6> を降順でソートして、置き換える	<name6> . sort_values ( [ <val4> , <val3> ] , ascending = False , inplace = True )	<name6> = <name6> . sort_values ( [ <val4> , <val3> ] , ascending = False )
表 <name5> 中の重複している行を削除した結果でインプレースする	<name5> . drop_duplicates ( inplace = True )	<name5> . drop_duplicates ( inplace = True )
<name6> を出力先として使う	file = <name6>	file = <name6>
表 <name2> をインデックスにそって昇順でソートし、置き換える	<name2> . sort_index ( inplace = True )	<name2> = <name2> . sort_index ( )
<name4> 表をエクセルファイル <val2> に書き込む	<name4> . to_excel ( <val2> )	<name4> . to_excel ( <val2> )
ヘッダーを指定せずにデータ <val5> を読み、 <name1> とする	<name1> = pd . read_csv ( <val5> , header = None )	<name1> = pd . read_csv ( <val5> , header = None )
データフレーム <name3> においてカラム <val5> の箱ひげ図を描写する	plt . boxplot ( <name3> [ <val5> ] )	plt . boxplot ( <name3> [ <val5> ] )
<name6> 表の中の欠損が存在する行を落とされた結果を <name6> とする	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
表 <name4> のコラム <val5> についての標準偏差	<name4> [ <val5> ] . std ( )	<name4> [ <val5> ] . std ( )
<name6> 表内の <val3> コラムの重複する行を消した結果でインプレースする	<name6> . drop_duplicates ( subset = <val3> , inplace = True )	<name6> . drop_duplicates ( subset = <val3> , inplace = True )
<name6> 表の未入力の値を <name4> にした結果を <name3> にする	<name3> = <name6> . fillna ( <name4> )	<name3> = <name6> . fillna ( <name4> )
表 <name4> 上に重複はあるか判定を表示する	<name4> . duplicated ( )	<name4> . duplicated ( )
<val2> 番目の列をインデックスとセットして、 <val1> データを表データとして読み込まれた結果を <name5> にする	<name5> = pd . read_csv ( <val1> , index_col = <val2> )	<name5> = pd . read_csv ( <val1> , index_col = <val2> )
インデックスを軸に <name5> 表を小さい順でソートした結果を再代入する	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
<name3> にある NaN の数を見る	<name3> . isnull ( ) . sum ( )	<name3> . isnull ( ) . sum ( )
x の横方向の棒グラフを軸を <name3> として描写する	plt . barh ( <name3> , x , align = 'center' )	plt . barh ( <name3> , x , align = 'center' )
<name2> の <val1> を未記入の値で補って、 <name3> とする	<name3> = <name2> . replace ( <val1> , np . nan )	<name3> = <name2> . replace ( <val1> , np . nan )
存在する <val4> を <name5> 中に欠損値に置換して、インプレースする	<name5> . replace ( <val4> , np . nan , inplace = True )	<name5> . replace ( <val4> , np . nan , inplace = True )
<val6> という名前のエクセルファイルのシート名 <val4> を表として読み込んだ結果を <name1> に代入する	<name1> = pd . read_excel ( <val6> , sheet_name = <val4> )	<name1> = pd . read_excel ( <val6> , sheet_name = <val4> )
<name5> 表中の欠損がある行をドロップした結果を <name5> とする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
表として <val2> データをタブ区切りで読んで、 <name5> にする	<name5> = pd . read_csv ( <val2> , sep = '\t' )	<name5> = pd . read_csv ( <val2> , sep = '\t' )
表 <name1> 内の欠損を表 <name1> の平均値で埋めた結果を <name1> に代入する	<name1> = <name1> . fillna ( <name1> . mean ( ) )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
表 <name5> を昇順にカラム <val1> でソートし、 <name5> とする	<name5> = <name5> . sort_values ( <val1> )	<name5> = <name5> . sort_values ( <val1> )
<name3> 表を <val2> 列と <val1> カラムを元に逆順でソートして、置き換える	<name3> = <name3> . sort_values ( [ <val2> , <val1> ] , ascending = False )	<name3> = <name3> . sort_values ( [ <val2> , <val1> ] , ascending = False )
<name6> 表内に存在する <val2> を NaN に置換して、 <name1> にする	<name1> = <name6> . replace ( <val2> , np . nan )	<name1> = <name6> . replace ( <val2> , np . nan )
<name4> の <val5> と <val1> を削除された結果で置き換える	<name4> . drop ( [ <val5> , <val1> ] , axis = 1 , inplace = True )	<name4> = <name4> . drop ( [ <val5> , <val1> ] , axis = 1 )
<name5> のもともとのインデックスをリセットした結果でインプレースする	<name5> . reset_index ( drop = True , inplace = True )	<name5> . reset_index ( drop = True , inplace = True )
表 <name3> の <val2> を未入力の値に変え未入力の値がある行を取り除かれた結果を <name3> にする	<name3> = <name3> . replace ( <val2> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val2> , np . nan ) . dropna ( )
<name5> をインデックスに基づき昇順でソートした結果を <name2> とする	<name2> = <name5> . sort_index ( )	<name2> = <name5> . sort_index ( )
表 <name6> の中の <val5> を未入力の値に置き換え未入力の値がある行を取り除き、 <name6> に代入する	<name6> = <name6> . replace ( <val5> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val5> , np . nan ) . dropna ( )
重複する最後の行を残して <name4> 上の重複している行を消して、 <name4> にする	<name4> = <name4> . drop_duplicates ( keep = False )	<name4> = <name4> . drop_duplicates ( keep = False )
エクセルファイル <val1> の <val2> 番目のシートを読み込み、表に格納する	pd . read_excel ( <val1> , sheet_name = <val2> )	pd . read_excel ( <val1> , sheet_name = <val2> )
エクセルファイル <val6> の全てのシートをデータフレームとして、 <name4> とする	<name4> = pd . read_excel ( <val6> , sheet_name = None )	<name4> = pd . read_excel ( <val6> , sheet_name = None )
要素の数が等しくなるようにビンを <name2> として <name6> の <val3> を分割し、 <name5> に代入する	<name5> = pd . qcut ( <name6> [ <val3> ] , <name2> )	<name5> = pd . qcut ( <name6> [ <val3> ] , <name2> )
<name3> の未記入の値がある行を落とした結果を <name3> に代入する	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
先頭の列をインデックスとして、 <val5> データを表として読み込む	pd . read_csv ( <val5> , index_col = 0 )	pd . read_csv ( <val5> , index_col = 0 )
<name1> を <val6> を元に昇順でソートする	<name1> . sort_values ( <val6> )	<name1> . sort_values ( <val6> )
<name5> の <val1> をインデックスに指定し、再代入する	<name5> = <name5> . set_index ( <val1> )	<name5> = <name5> . set_index ( <val1> )
<name5> 上に重複はあるか確認を確認する	<name5> . duplicated ( )	<name5> . duplicated ( )
<name3> の <val4> 行目までを表示する	<name3> [ : <val4> ]	<name3> [ <val4> : ]
<name3> 表のオブジェクトデータの統計的な情報を確認する	<name3> . describe ( include = 'O' )	<name3> . describe ( include = 'O' )
<name2> 表上の NaN を含む行を消して、 <name3> とする	<name3> = <name2> . dropna ( )	<name3> = <name2> . dropna ( )
<name2> 表の <val4> を未入力の値で埋めて、再代入する	<name2> = <name2> . replace ( <val4> , np . nan )	<name2> = <name2> . replace ( <val4> , np . nan )
<name3> の未記入の値を <name5> にした結果で書き換える	<name3> . fillna ( <name5> , inplace = True )	<name3> . fillna ( <name5> , inplace = True )
表 <name1> 内に存在する <val2> を NaN とされた結果を <name1> とする	<name1> = <name1> . replace ( <val2> , np . nan )	<name1> = <name1> . replace ( <val2> , np . nan )
重複する最後の行を残して <name3> 表上の重複している行を消し、 <name6> にする	<name6> = <name3> . drop_duplicates ( keep = False )	<name6> = <name3> . drop_duplicates ( keep = False )
<name5> 表の <val2> を未記入の値で補う	<name5> . replace ( <val2> , np . nan )	<name5> . replace ( <val2> , np . nan )
最適な位置に凡例を入れる	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
真偽値で重複があるのかどうかを表 <name6> に返す	<name6> . duplicated ( )	<name6> . duplicated ( )
<name1> 表の <val4> 列が <val6> または <val5> のデータを抽出する	<name1> [ <name1> [ <val4> ] . isin ( [ <val6> , <val5> ] ) ]	<name1> [ <name1> [ <val4> , <val5> ] ]
<name4> 中の重複要素がある行を削除して、再代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
<name2> 内の <val6> に重複がある行を削除して、置き換える	<name2> = <name2> . drop_duplicates ( subset = <val6> )	<name2> = <name2> . drop_duplicates ( subset = <val6> )
のインデックスを振り直して、元のインデックスを削除する	. reset_index ( drop = True )	. reset_index ( drop = True )
データ <val4> を表に格納した結果を <name1> に代入する	<name1> = pd . read_csv ( <val4> )	<name1> = pd . read_csv ( <val4> )
<name6> 表内のそれぞれのカラムに存在する <val4> の合計	<name6> . isin ( [ <val4> ] ) . sum ( )	<name6> . isin ( [ <val4> ] ) . sum ( )
表 <name6> の中のダブっている行を取り除いて、置き換える	<name6> . drop_duplicates ( inplace = True )	<name6> = <name6> . drop_duplicates ( )
存在する <val2> を表 <name6> 中に欠損に置換した結果を再代入する	<name6> = <name6> . replace ( <val2> , np . nan )	<name6> = <name6> . replace ( <val2> , np . nan )
<name4> 表の中のダブる行を落とし、置き換える	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
列番号 <val4> をインデックスに <val2> を格納し、 <name6> とする	<name6> = pd . read_csv ( <val2> , index_col = <val4> )	<name6> = pd . read_csv ( <val2> , index_col = <val4> )
カラム <val4> とコラム <val2> が逆順になるように表 <name6> 全体をソートし、書き換える	<name6> . sort_values ( [ <val4> , <val2> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val4> , <val2> ] , ascending = False , inplace = True )
<name4> 上の <val6> , <val3> , <val1> 行目の <val5> , <val3> 列目	<name4> . iloc [ [ <val6> , <val3> , <val1> ] , [ <val5> , <val3> ] ]	<name4> . iloc [ [ <val6> , <val3> , <val3> ] , [ <val5> , <val3> ] ]
<name1> 内の <val3> の重複している行を削除して、 <name6> にする	<name6> = <name1> . drop_duplicates ( subset = <val3> )	<name6> = <name1> . drop_duplicates ( subset = <val3> )
<name2> 表中の <val1> カラムに重複はあるのかどうか判定	<name2> . duplicated ( subset = <val1> )	<name2> . duplicated ( subset = <val1> )
表 <name3> の中の未入力の値がある行を落とした結果を再代入する	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
表 <name4> の列 <val5> をビンの数を <name6> として分割する	pd . cut ( <name4> [ <val5> ] , <name6> )	pd . cut ( <name4> [ <val5> ] , <name6> )
df 表全体をインデックスを軸に昇順でソートし、再代入する	df = df . sort_index ( )	df = df . sort_index ( )
マーカーの種類の輪郭の色を紺色とする	markeredgecolor = 'navy'	markeredgecolor = 'navy'
表 <name6> の未入力の値がある行を取り除かれた結果を <name6> に代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name5> 表の <val1> コラムの名前を <val4> に <val6> コラムの名前を <val3> にリネームされた結果を再代入する	<name5> = <name5> . rename ( columns = { <val1> : <val4> , <val6> : <val3> } )	<name5> = <name5> . rename ( columns = { <val1> : <val4> , <val6> : <val3> } )
<name2> 表中の <val1> を欠損値に置換し欠損値が存在する行をドロップして、 <name6> とする	<name6> = <name2> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name2> . replace ( <val1> , np . nan ) . dropna ( )
グラフ幅を <val1> として <name6> 軸を <name6> とした <name4> の垂直棒グラフを出力する	plt . bar ( <name6> , <name4> , width = <val1> )	plt . bar ( <name6> , <name4> , width = <val1> )
<name3> 表の未入力の値を <name4> にし、 <name3> とする	<name3> = <name3> . fillna ( <name4> )	<name3> = <name3> . fillna ( <name4> )
柱状図を用いて <name6> データフレームの <val4> カラムを出力する	plt . hist ( <name6> [ <val4> ] )	plt . hist ( <name6> [ <val4> ] )
表 <name6> と表 <name5> を合わせる	pd . merge ( <name6> , <name5> )	pd . merge ( <name6> , <name5> )
表 <name2> をインデックスで小さい順に並び替えた結果を <name2> に代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
ある行を表 <name1> 中の未入力の値が削除した結果を <name2> に代入する	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
<name3> 表の中の未記入の値を <name3> 表の平均をとって補われた、結果を <name2> とする	<name2> = <name3> . fillna ( <name3> . mean ( ) )	<name2> = <name3> . fillna ( <name3> . mean ( ) )
<val6> と <val3> が降順になるように <name2> 全体をソートした結果でインプレースする	<name2> . sort_values ( [ <val6> , <val3> ] , ascending = False , inplace = True )	<name2> . sort_values ( [ <val6> , <val3> ] , ascending = False , inplace = True )
凡例をグラフに被らない位置に表示する	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
CSV データ <val5> をタブ区切りで読んで、 <name4> にする	<name4> = pd . read_csv ( <val5> , sep = '\t' )	<name4> = pd . read_csv ( <val5> , sep = '\t' )
<name4> 表をインデックスで順にソートした結果でインプレースする	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
<name5> 内のカテゴリ変数を one - hot 表現にする	pd . get_dummies ( <name5> )	pd . get_dummies ( <name5> )
昇順に <name3> の <val2> をソートされた結果を <name4> とする	<name4> = <name3> . sort_values ( <val2> )	<name4> = <name3> . sort_values ( <val2> )
表 <name4> 上のダブる行を落とし、再代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
ある行を表 <name2> の中の欠損が削除して、置き換える	<name2> . dropna ( inplace = True )	<name2> = <name2> . dropna ( )
表 <name5> 中の欠損値を表 <name5> の平均をとって埋めて、置き換える	<name5> = <name5> . fillna ( <name5> . mean ( ) )	<name5> = <name5> . fillna ( <name5> . mean ( ) )
表 <name5> 上のそれぞれのコラムにある <val4> の数の合計値	<name5> . isin ( [ <val4> ] ) . sum ( )	<name5> . isin ( [ <val4> ] ) . sum ( )
表 <name1> の中の未入力の値を <name5> に置換した結果でインプレースする	<name1> . fillna ( <name5> , inplace = True )	<name1> . fillna ( <name5> , inplace = True )
<name3> 表の <val1> を欠損で埋めた結果を <name5> に代入する	<name5> = <name3> . replace ( <val1> , np . nan )	<name5> = <name3> . replace ( <val1> , np . nan )
インデックスを軸に <name3> を昇順でソートした結果を <name5> にする	<name5> = <name3> . sort_index ( )	<name5> = <name3> . sort_index ( )
<name6> の列名を <val5> から <val4> に変えて、 <name3> にする	<name3> = <name6> . rename ( columns = { <val5> : <val4> } )	<name3> = <name6> . rename ( columns = { <val5> : <val4> } )
出力するグラフのサイズを縦 <val5> 横 <val3> に設定する	plt . figure ( figsize = ( <val3> , <val5> ) )	plt . figure ( figsize = ( <val3> , <val5> ) )
棒グラフの位置を真ん中として <name3> と <name6> の縦向き棒グラフを出力する	plt . bar ( <name3> , <name6> , align = 'center' )	plt . bar ( <name3> , <name6> , align = 'center' )
<name1> の未入力の値を <name5> とした結果で置き換える	<name1> = <name1> . fillna ( <name5> )	<name1> = <name1> . fillna ( <name5> )
表 <name1> の中の未記入の値を <name4> で置き換えて、 <name3> に代入する	<name3> = <name1> . fillna ( <name4> )	<name3> = <name1> . fillna ( <name4> )
横軸に <val2> という軸ラベルを付与する	plt . xlabel ( <val2> )	plt . xlabel ( <val2> )
<name2> と <name5> の縦向き棒グラフを棒グラフの位置を真ん中として出力する	plt . bar ( <name2> , <name5> , align = 'center' )	plt . bar ( <name2> , <name5> , align = 'center' )
存在する <val1> を <name5> 内に NaN で置換した結果で置き換える	<name5> = <name5> . replace ( <val1> , np . nan )	<name5> = <name5> . replace ( <val1> , np . nan )
<name3> 表中に重複はあるのか検出を表示する	<name3> . duplicated ( )	<name3> . duplicated ( )
<name2> 表内に存在する <val6> を欠損値で置換し、インプレースする	<name2> . replace ( <val6> , np . nan , inplace = True )	<name2> . replace ( <val6> , np . nan , inplace = True )
ある <val2> を <name5> 表の中に未入力の値で補い、再代入する	<name5> = <name5> . replace ( <val2> , np . nan )	<name5> = <name5> . replace ( <val2> , np . nan )
表 <name4> の列 <val2> が <val6> のデータ	<name4> [ <name4> [ <val2> ] == <val6> ]	<name4> [ <name4> [ <val2> ] > <val6> ]
<name5> 内の <val1> を NaN に変え NaN が存在する行を消して、 <name5> に代入する	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )	<name5> = <name5> . replace ( <val1> , np . nan ) . dropna ( )
プロットを <val1> として出力する	plt . savefig ( <val1> )	plt . savefig ( <val1> )
<name5> 表の列の名前を調べる	<name5> . columns	<name5> . columns
ヘッダーいらない	header = None	header = None
箱ひげ図を用いて <name5> と <name1> を描写する	plt . boxplot ( [ <name5> , <name1> ] )	plt . boxplot ( [ <name5> , <name1> ] )
<name6> 表を <val3> 列と <val2> カラムで降順にソートした結果を <name5> に代入する	<name5> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name5> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )
<name6> 表上の <val4> コラムの重複する行を消された結果を <name6> とする	<name6> = <name6> . drop_duplicates ( subset = <val4> )	<name6> = <name6> . drop_duplicates ( subset = <val4> )
<name1> 表中の <val2> コラムに重複がある行を削除された結果を <name4> にする	<name4> = <name1> . drop_duplicates ( subset = <val2> )	<name4> = <name1> . drop_duplicates ( subset = <val2> )
<name2> 表を <val4> データという CSV ファイルとして保存する	<name2> . to_csv ( <val4> )	<name2> . to_csv ( <val4> )
一番左の列をインデックスと、データ <val2> を表データとして読み、 <name3> にする	<name3> = pd . read_csv ( <val2> , index_col = 0 )	<name3> = pd . read_csv ( <val2> , index_col = 0 )
存在する <val6> を <name2> 内に NaN に置換された結果を <name4> とする	<name4> = <name2> . replace ( <val6> , np . nan )	<name4> = <name2> . replace ( <val6> , np . nan )
<name5> の中の未記入の値を直前の行の値で補った結果を <name5> に代入する	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
表 <name6> を列 <val3> とカラム <val2> で降順にソートし、 <name6> にする	<name6> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )
<name5> の <val6> をインデックスとしてセットした結果を再代入する	<name5> = <name5> . set_index ( <val6> )	<name5> = <name5> . set_index ( <val6> )
重複する最後の行を残して <name5> 上の重複している行を消して、 <name3> に代入する	<name3> = <name5> . drop_duplicates ( keep = False )	<name3> = <name5> . drop_duplicates ( keep = False )
表 <name1> の中の未入力の値を直前の行の値で補って、 <name6> にする	<name6> = <name1> . fillna ( method = 'ffill' )	<name6> = <name1> . fillna ( method = 'ffill' )
<name1> 表を <val2> カラムと <val3> コラムが降順になるようにソートする	<name1> . sort_values ( [ <val2> , <val3> ] , ascending = False )	<name1> . sort_values ( [ <val2> , <val3> ] , ascending = False )
エクセルファイル <val5> のシート名 <val1> を読まれた結果を <name2> に代入する	<name2> = pd . read_excel ( <val5> , sheet_name = <val1> )	<name2> = pd . read_excel ( <val5> , sheet_name = <val1> )
エクセルファイル <val2> の全てのシートをデータフレームとされた結果を <name6> に代入する	<name6> = pd . read_excel ( <val2> , sheet_name = None )	<name6> = pd . read_excel ( <val2> , sheet_name = None )
<name2> 中の <val6> を欠損値に変え欠損値が存在する行をドロップして、 <name2> に代入する	<name2> = <name2> . replace ( <val6> , np . nan ) . dropna ( )	<name2> = <name2> . replace ( <val6> , np . nan ) . dropna ( )
<name1> の <val3> を NaN で置換した結果を <name1> に代入する	<name1> = <name1> . replace ( <val3> , np . nan )	<name1> = <name1> . replace ( <val3> , np . nan )
ビンの数を <name6> として表 <name5> の列 <val1> を分割した結果を <name3> とする	<name3> = pd . cut ( <name5> [ <val1> ] , <name6> )	<name3> = pd . cut ( <name5> [ <val1> ] , <name6> )
<name4> の <val2> と <val5> を消された結果で置き換える	<name4> . drop ( [ <val2> , <val5> ] , axis = 1 , inplace = True )	<name4> = <name4> . drop ( [ <val2> , <val5> ] , axis = 1 )
表 <name5> の未入力の値を取り除いた結果を <name3> に代入する	<name3> = <name5> . dropna ( )	<name3> = <name5> . dropna ( )
<name5> 表中の欠損値をドロップし、 <name5> に代入する	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<name2> 全体を <val5> と <val3> に基づいて降順でソートする	<name2> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name2> . sort_values ( [ <val5> , <val3> ] , ascending = False )
<name4> 表の <val5> コラムをドロップして、置き換える	<name4> . drop ( <val5> , axis = 1 , inplace = True )	<name4> = <name4> . drop ( <val5> , axis = 1 )
表 <name3> のコラム <val5> に重複があるのかどうかをチェックする	<name3> . duplicated ( subset = <val5> )	<name3> . duplicated ( subset = <val5> )
<name6> 表の <val3> コラムをインデックスに設定し、 <name6> にする	<name6> = <name6> . set_index ( <val3> )	<name6> = <name6> . set_index ( <val3> )
格子をグラフに描画する	plt . grid ( True )	plt . grid ( True )
列番号 <val2> をインデックスとして <val1> から表データを読み込み、 <name5> とする	<name5> = pd . read_csv ( <val1> , index_col = <val2> )	<name5> = pd . read_csv ( <val1> , index_col = <val2> )
真ん中として棒グラフの位置を <name1> と <name4> の鉛直棒グラフを描写する	plt . bar ( <name1> , <name4> , align = 'center' )	plt . bar ( <name1> , <name4> , align = 'center' )
表を <val5> データからタブ区切りで読む	pd . read_csv ( <val5> , sep = '\t' )	pd . read_csv ( <val5> , sep = '\t' )
表 <name6> のコラム <val4> と <val1> を削除した結果を <name3> に代入する	<name3> = <name6> . drop ( [ <val4> , <val1> ] , axis = 1 )	<name3> = <name6> . drop ( [ <val4> , <val1> ] , axis = 1 )
<val6> にグラフの x 軸の軸の名前を設定する	plt . xlabel ( <val6> )	plt . xlabel ( <val6> )
( <name6> [ <val1> ] ) の統計情報	<name6> [ <val1> ] . describe ( )	<name6> [ <val1> ] . describe ( )
<val1> から <val2> に <name4> のカラム名を変えた結果を <name5> とする	<name5> = <name4> . rename ( columns = { <val1> : <val2> } )	<name5> = <name4> . rename ( columns = { <val1> : <val2> } )
目印の色を黄緑とする	markerfacecolor = 'greenyellow'	markerfacecolor = 'greenyellow'
<name2> 表をインデックスで小さい順に並び替えた結果を <name2> にする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name2> 表の <val4> コラムをインデックスにして、 <name3> にする	<name3> = <name2> . set_index ( <val4> )	<name3> = <name2> . set_index ( <val4> )
<val2> から <val4> に表 <name1> のカラム名をリネームした結果を <name3> に代入する	<name3> = <name1> . rename ( columns = { <val2> : <val4> } )	<name3> = <name1> . rename ( columns = { <val2> : <val4> } )
<name3> 表の <val1> コラムをインデックスにする	<name3> . set_index ( <val1> )	<name3> . set_index ( <val1> )
マーカーの形状の色は黄色を使用する	markerfacecolor = 'yellow'	markerfacecolor = 'yellow'
<name5> 表を <val4> カラムと <val2> コラムが値の大きい順になるようにソートする	<name5> . sort_values ( [ <val4> , <val2> ] , ascending = False )	<name5> . sort_values ( [ <val4> , <val2> ] , ascending = False )
<name5> 中の <val2> に重複がある行を削除し、 <name4> にする	<name4> = <name5> . drop_duplicates ( subset = <val2> )	<name4> = <name5> . drop_duplicates ( subset = <val2> )
データ <val6> という名前の CSV として表 <name1> を出力する	<name1> . to_csv ( <val6> )	<name1> . to_csv ( <val6> )
<name5> を <val4> を使って昇順でソートされた結果を再代入する	<name5> = <name5> . sort_values ( <val4> )	<name5> = <name5> . sort_values ( <val4> )
表 <name1> の列名を <val5> から <val3> に変えた結果を <name2> に代入する	<name2> = <name1> . rename ( columns = { <val5> : <val3> } )	<name2> = <name1> . rename ( columns = { <val5> : <val3> } )
<name5> 表中に存在する <val1> を欠損値で置換された結果を <name3> とする	<name3> = <name5> . replace ( <val1> , np . nan )	<name3> = <name5> . replace ( <val1> , np . nan )
<name3> の <val2> をドロップして、 <name3> にする	<name3> = <name3> . drop ( <val2> , axis = 1 )	<name3> = <name3> . drop ( <val2> , axis = 1 )
<name1> 中に存在する <val2> を欠損値で置換し、 <name1> にする	<name1> = <name1> . replace ( <val2> , np . nan )	<name1> = <name1> . replace ( <val2> , np . nan )
<name6> 表の <val1> を未記入の値とした結果で書き換える	<name6> . replace ( <val1> , np . nan , inplace = True )	<name6> . replace ( <val1> , np . nan , inplace = True )
エンコーディングを shift - jis で、データ <val4> を読み込む	pd . read_csv ( <val4> , encoding = 'shift_jis' )	pd . read_csv ( <val4> , encoding = 'shift_jis' )
<name1> 表をインデックスを元に小さい方からソートする	<name1> . sort_index ( )	<name1> . sort_index ( )
<val4> カラムに <name3> 表全体を基づいて昇順でソートした結果で置き換える	<name3> = <name3> . sort_values ( <val4> )	<name3> = <name3> . sort_values ( <val4> )
<name3> 表の重複要素がある行を取り除いた結果を <name3> とする	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
<name2> をエクセルファイル <val3> というファイル名で入れる	<name2> . to_excel ( <val3> )	<name2> . to_excel ( <val3> )
カラム <val1> に表 <name4> を基づいて昇順でソートし、 <name4> とする	<name4> = <name4> . sort_values ( <val1> )	<name4> = <name4> . sort_values ( <val1> )
<name2> 表中の欠損値を直前の行の値で埋めた結果を <name3> にする	<name3> = <name2> . fillna ( method = 'ffill' )	<name3> = <name2> . fillna ( method = 'ffill' )
<val5> 列と <val6> カラムを軸に <name2> 表を逆順でソートされた結果を <name4> に代入する	<name4> = <name2> . sort_values ( [ <val5> , <val6> ] , ascending = False )	<name4> = <name2> . sort_values ( [ <val5> , <val6> ] , ascending = False )
<name2> 表の <val3> コラムと <val5> を取り除いた結果を <name2> にする	<name2> = <name2> . drop ( [ <val3> , <val5> ] , axis = 1 )	<name2> = <name2> . drop ( [ <val3> , <val5> ] , axis = 1 )
ピボット操作で <name4> 表の行に列を入れ替える	<name4> . stack ( )	<name4> . unstack ( )
表 <name5> をインデックスに基づいて昇順でソートし、 <name5> に代入する	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
表 <name1> にある <val6> を未入力の値で埋めて、 <name4> にする	<name4> = <name1> . replace ( <val6> , np . nan )	<name4> = <name1> . replace ( <val6> , np . nan )
<name6> の中の未記入の値を <name6> の平均をとって補う	<name6> . fillna ( <name6> . mean ( ) )	<name6> . fillna ( <name6> . mean ( ) )
<name4> 表の列名を <val5> から <val1> にリネームして、インプレースする	<name4> . rename ( columns = { <val5> : <val1> } , inplace = True )	<name4> . rename ( columns = { <val5> : <val1> } , inplace = True )
格子線をグラフに表示する	plt . grid ( True )	plt . grid ( True )
<name6> 上にある <val5> を NaN で埋める	<name6> . replace ( <val5> , np . nan )	<name6> . replace ( <val5> , np . nan )
<name1> 中の重複要素がある行をドロップした結果を <name4> に代入する	<name4> = <name1> . drop_duplicates ( )	<name4> = <name1> . drop_duplicates ( )
表 <name1> のカラム <val3> の要素	<name1> [ <val3> ] . values	<name1> [ <val3> ] . values
表 <name6> をインデックスどおりに昇順でソートし、 <name6> に代入する	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<val6> から <val5> に表 <name2> のカラム名をリネームし、再代入する	<name2> = <name2> . rename ( columns = { <val6> : <val5> } )	<name2> = <name2> . rename ( columns = { <val6> : <val5> } )
<name1> 表の列名を <val5> から <val2> に <val4> から <val3> にリネームして、置き換える	<name1> = <name1> . rename ( columns = { <val4> : <val3> , <val5> : <val2> } )	<name1> = <name1> . rename ( columns = { <val5> : <val2> , <val5> : <val2> } )
<name5> 表の列名を <val4> から <val6> に変更された結果でインプレースする	<name5> . rename ( columns = { <val4> : <val6> } , inplace = True )	<name5> . rename ( columns = { <val4> : <val6> } , inplace = True )
<name1> 表の <val2> 列を区間を <name3> 、ビンの名前を整数値として分割し、 <name6> にする	<name6> = pd . cut ( <name1> [ <val2> ] , <name3> , label = False )	<name6> = pd . cut ( <name1> [ <val2> ] , <name3> , label = False )
<name2> 表の要約情報	<name2> . info ( )	<name2> . info ( )
<name2> 表の <val1> コラムをインデックスにセットする	<name2> . set_index ( <val1> )	<name2> . set_index ( <val1> )
表 <name3> の列 <val4> をビンを <name5> 、ビンのラベルをリスト <name2> として分割する	pd . cut ( <name3> [ <val4> ] , <name5> , label = <name2> )	pd . cut ( <name3> [ <val4> ] , <name5> , label = <name2> )
<name5> 表の <val6> コラムごとの <val4> コラムの数	<name5> . groupby ( [ <val6> ] ) [ <val4> ] . count ( )	<name5> . groupby ( [ <val6> ] ) [ <val4> ] . count ( )
表 <name5> 内で重複したデータ	<name5> [ <name5> . duplicated ( ) ]	<name5> [ <name5> . duplicated ( ) ]
<name3> 表中の未記入の値を <name3> 表の平均で補って、再代入する	<name3> = <name3> . fillna ( <name3> . mean ( ) )	<name3> = <name3> . fillna ( <name3> . mean ( ) )
<name4> 表中の重複を確認を表示する	<name4> . duplicated ( )	<name4> . duplicated ( )
<name6> 表のインデックスを振り直す	<name6> . reset_index ( )	<name6> . reset_index ( )
ある <val4> を表 <name3> に未入力の値で補われた、結果を <name2> に代入する	<name2> = <name3> . replace ( <val4> , np . nan )	<name2> = <name3> . replace ( <val4> , np . nan )
インデックスを軸に表 <name5> を小さい順でソートし、置き換える	<name5> . sort_index ( inplace = True )	<name5> = <name5> . sort_index ( )
表示するグラフのサイズを横 <val1> 縦 <val6> に指定する	plt . figure ( figsize = ( <val1> , <val6> ) )	plt . figure ( figsize = ( <val1> , <val6> ) )
マーカーのエッジの色は赤色を用いる	markeredgecolor = 'red'	markeredgecolor = 'red'
<name1> 表の <val3> を未記入の値にし、書き換える	<name1> . replace ( <val3> , np . nan , inplace = True )	<name1> . replace ( <val3> , np . nan , inplace = True )
<name2> を <val1> という CSV データとしてセーブする	<name2> . to_csv ( <val1> )	<name2> . to_csv ( <val1> )
ビンを <name1> 、ビンの名前をリスト <name2> として表 <name6> の列 <val3> を分割された結果を <name4> にする	<name4> = pd . cut ( <name6> [ <val3> ] , <name1> , label = <name2> )	<name4> = pd . cut ( <name6> [ <val3> ] , <name1> , label = <name2> )
<name1> の <val5> をビン数を <name6> 、ビンのラベルを整数値として分割する	pd . cut ( <name1> [ <val5> ] , <name6> , label = False )	pd . cut ( <name1> [ <val5> ] , <name6> , label = False )
<name3> 表内に存在する <val1> を NaN で埋め、インプレースする	<name3> . replace ( <val1> , np . nan , inplace = True )	<name3> . replace ( <val1> , np . nan , inplace = True )
<name3> 表の重複行を判定する	<name3> . duplicated ( )	<name3> . duplicated ( )
存在する <val2> を表 <name3> の中に欠損に置換した結果で置き換える	<name3> . replace ( <val2> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val2> , np . nan )
改行の代わりに <name5> を用いる	end = <name5>	end = <name5>
<name3> 表内の NaN を <name2> で置き換えた結果を <name3> とする	<name3> = <name3> . fillna ( <name2> )	<name3> = <name3> . fillna ( <name2> )
<name5> 表中の未記入の値を落とし、 <name5> とする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
エクセルファイル <val3> を読み込み、データフレームとして、 <name2> にする	<name2> = pd . read_excel ( <val3> )	<name2> = pd . read_excel ( <val3> )
<name4> の <val2> を NaN にし、 <name3> とする	<name3> = <name4> . replace ( <val2> , np . nan )	<name3> = <name4> . replace ( <val2> , np . nan )
<name4> 表の <val5> を NaN に置き換え、 <name4> に代入する	<name4> = <name4> . replace ( <val5> , np . nan )	<name4> = <name4> . replace ( <val5> , np . nan )
<name4> 内のそれぞれのコラムに存在する <val6> の個数の合計値を表示する	<name4> . isin ( [ <val6> ] ) . sum ( )	<name4> . isin ( [ <val6> ] ) . sum ( )
<name4> 表の <val6> を NaN で埋め、 <name2> にする	<name2> = <name4> . replace ( <val6> , np . nan )	<name2> = <name4> . replace ( <val6> , np . nan )
<name4> 表と <name6> 表を縦にマージ	pd . concat ( [ <name4> , <name6> ] )	pd . concat ( [ <name4> , <name6> ] )
棒グラフの位置を <name2> と <name3> の棒グラフを真ん中として表示する	plt . bar ( <name2> , <name3> , align = 'center' )	plt . bar ( <name2> , <name3> , align = 'center' )
表 <name4> 内の NaN を <name6> に置き換えられた結果を <name4> にする	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
列番号 <val3> をインデックスと設定して、 <val4> データを表として読む	pd . read_csv ( <val4> , index_col = <val3> )	pd . read_csv ( <val4> , index_col = <val3> )
<name2> 表中の <val6> コラムに重複がある行を落とす	<name2> . drop_duplicates ( subset = <val6> )	<name2> . drop_duplicates ( subset = <val6> )
<name4> 内の <val2> を欠損値に置換し欠損値が存在する行をドロップして、 <name1> に代入する	<name1> = <name4> . replace ( <val2> , np . nan ) . dropna ( )	<name1> = <name4> . replace ( <val2> , np . nan ) . dropna ( )
エンコーディングをシフト JIS で、 <val6> データを読まれた結果を <name1> に代入する	<name1> = pd . read_csv ( <val6> , encoding = 'shift_jis' )	<name1> = pd . read_csv ( <val6> , encoding = 'shift_jis' )
<name4> 表内の欠損を含む行を削除された結果を <name1> にする	<name1> = <name4> . dropna ( )	<name1> = <name4> . dropna ( )
表 <name6> の <val1> を未記入の値に置き換えた結果でインプレースする	<name6> . replace ( <val1> , np . nan , inplace = True )	<name6> . replace ( <val1> , np . nan , inplace = True )
カラム <val6> で昇順に表 <name3> をソートし、 <name1> とする	<name1> = <name3> . sort_values ( <val6> )	<name1> = <name3> . sort_values ( <val6> )
表 <name5> の <val1> 行目をドロップして、インプレースする	<name5> . drop ( <val1> , inplace = True )	<name5> . drop ( <val1> , inplace = True )
表 <name1> 中の未記入の値を <name3> で埋めた結果を再代入する	<name1> = <name1> . fillna ( <name3> )	<name1> = <name1> . fillna ( <name3> )
表 <name2> のカラム <val5> のデータの種類の数	<name2> [ <val5> ] . nunique ( )	<name2> [ <val5> ] . unique ( )
<name2> 表の中の <val5> コラムのダブる行を落として、 <name6> とする	<name6> = <name2> . drop_duplicates ( subset = <val5> )	<name6> = <name2> . drop_duplicates ( subset = <val5> )
列名をなしで <val6> を読み込み、 <name2> とする	<name2> = pd . read_csv ( <val6> , header = None )	<name2> = pd . read_csv ( <val6> , header = None )
<name2> 中の未記入の値を直前の行の値で埋めて、 <name2> とする	<name2> = <name2> . fillna ( method = 'ffill' )	<name2> = <name2> . fillna ( method = 'ffill' )
表 <name2> 全体をインデックスを元に小さい順でソートし、再代入する	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
<name6> 内の NaN を <name6> の平均値で埋められた結果で書き換える	<name6> . fillna ( <name6> . mean ( ) , inplace = True )	<name6> . fillna ( <name6> . mean ( ) , inplace = True )
<val5> 番目まで行を表示できるように指定する	pd . set_option ( 'display.max_rows' , <val5> )	pd . set_option ( 'display.max_rows' , <val5> )
重複している最後の行を残して <name4> 表中の重複している行を削除して、 <name4> に代入する	<name4> = <name4> . drop_duplicates ( keep = False )	<name4> = <name4> . drop_duplicates ( keep = False )
エンコーディングをシフト JIS として、 <val3> データを読み込む	pd . read_csv ( <val3> , encoding = 'shift_jis' )	pd . read_csv ( <val3> , encoding = 'shift_jis' )
列番号 <val6> をインデックスとして、 <val4> を表として読む	pd . read_csv ( <val4> , index_col = <val6> )	pd . read_csv ( <val4> , index_col = <val6> )
<name1> の <val3> を区間の数を <name2> 、ビンのラベルを <name5> として分割して、 <name4> に代入する	<name4> = pd . cut ( <name1> [ <val3> ] , <name2> , label = <name5> )	<name4> = pd . cut ( <name1> [ <val3> ] , <name2> , label = <name5> )
グラフ線のスタイルを点と線とする	linestyle = 'dashbot'	linestyle = 'dashbot'
<val2> から <val5> に <name1> 表のインデックス名をリネームし、 <name6> とする	<name6> = <name1> . rename ( index = { <val2> : <val5> } )	<name6> = <name1> . rename ( index = { <val2> : <val5> } )
<name2> の柱状図を区間の数を <val1> として出力する	plt . hist ( <name2> , bins = <val1> )	plt . hist ( <name2> , bins = <val1> )
<name1> の <val4> を未入力の値で置き換えて、インプレースする	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> . replace ( <val4> , np . nan , inplace = True )
表 <name5> の列 <val2> ごとのコラム <val1> の平均を求める	<name5> . groupby ( [ <val2> ] ) [ <val1> ] . mean ( )	<name5> . groupby ( [ <val2> ] ) [ <val1> ] . mean ( )
一番左の列をインデックスと、 <val2> データを表データとして読み込む	pd . read_csv ( <val2> , index_col = 0 )	pd . read_csv ( <val2> , index_col = 0 )
プロットを <val6> としてセーブする	plt . savefig ( <val6> )	plt . savefig ( <val6> )
<name4> 表の行の重複を確認を表示する	<name4> . duplicated ( )	<name4> . duplicated ( )
表 <name4> 全体をインデックスを元に小さい順にソートし、 <name1> にする	<name1> = <name4> . sort_index ( )	<name1> = <name4> . sort_index ( )
<val6> 列と <val3> カラムを軸に <name2> 表全体を降順でソートする	<name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )	<name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )
表 <name6> 内に存在する <val5> を NaN に置換した結果を <name4> にする	<name4> = <name6> . replace ( <val5> , np . nan )	<name4> = <name6> . replace ( <val5> , np . nan )
<name4> の <val6> を未入力の値で置き換えた結果で書き換える	<name4> . replace ( <val6> , np . nan , inplace = True )	<name4> . replace ( <val6> , np . nan , inplace = True )
インデックスを軸に表 <name1> を小さい順にソートして、 <name2> にする	<name2> = <name1> . sort_index ( )	<name2> = <name1> . sort_index ( )
表 <name6> の列 <val3> をビン数を <name4> 、ビンの名前をリスト <name2> として分割した結果を <name5> にする	<name5> = pd . cut ( <name6> [ <val3> ] , <name4> , label = <name2> )	<name5> = pd . cut ( <name6> [ <val3> ] , <name4> , label = <name2> )
x 軸の軸名を <val3> にする	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
表をデータ <val4> から <val1> 区切りで読んだ結果を <name6> とする	<name6> = pd . read_csv ( <val4> , sep = <val1> )	<name6> = pd . read_csv ( <val4> , sep = <val1> )
エクセルファイル <val3> の <val1> 番目のシートを読み込み、データフレームにする	pd . read_excel ( <val3> , sheet_name = <val1> )	pd . read_excel ( <val3> , sheet_name = <val1> )
表 <name5> 中の未記入の値を <name6> とし、 <name5> とする	<name5> = <name5> . fillna ( <name6> )	<name5> = <name5> . fillna ( <name6> )
線のスタイルを一点鎖線とする	linestyle = 'dashbot'	linestyle = 'dashbot'
エクセルファイル <val4> の全てのシートを読み込み、データフレームに格納し、 <name5> にする	<name5> = pd . read_excel ( <val4> , sheet_name = None )	<name5> = pd . read_excel ( <val4> , sheet_name = None )
<name4> 表の <val2> 列をインデックス、 <val3> コラムをコラムとしたピボットテーブルを作成して、 <name1> にする	<name1> = <name4> . pivot_table ( index = <val2> , columns = <val3> )	<name1> = <name4> . pivot_table ( index = <val2> , columns = <val3> )
<name2> 表の未入力の値を <name2> 表の平均で補う	<name2> . fillna ( <name2> . mean ( ) )	<name2> . fillna ( <name2> . mean ( ) )
<name4> の欠損値を <name6> に変えた結果を <name4> とする	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
<name2> の <val5> の秒を調べる	<name2> [ <val5> ] . dt . second	<name2> [ <val5> ] . dt . second
<name6> の未入力の値を <name4> に置き換え、 <name2> に代入する	<name2> = <name6> . fillna ( <name4> )	<name2> = <name6> . fillna ( <name4> )
エクセルファイル <val5> の全てのシートから読み込む	pd . read_excel ( <val5> , sheet_name = None )	pd . read_excel ( <val5> , sheet_name = None )
<val3> というファイル名でエクセルファイルに <name2> 表を入れる	<name2> . to_excel ( <val3> )	<name2> . to_excel ( <val3> )
真ん中として、 <name3> 軸を <name3> とした <name6> の鉛直棒グラフを棒グラフの位置を出力する	plt . bar ( <name3> , <name6> , align = 'center' )	plt . bar ( <name3> , <name6> , align = 'center' )
表 <name4> と表 <name5> を縦にマージして、 <name3> にする	<name3> = pd . concat ( [ <name4> , <name5> ] )	<name3> = pd . concat ( [ <name4> , <name5> ] )
表 <name2> の <val1> を NaN とした結果でインプレースする	<name2> . replace ( <val1> , np . nan , inplace = True )	<name2> . replace ( <val1> , np . nan , inplace = True )
<val6> カラムに <name1> 表全体を基づいて昇順でソートして、再代入する	<name1> = <name1> . sort_values ( <val6> )	<name1> = <name1> . sort_values ( <val6> )
<name6> 表のダブっている行を取り除いて、 <name6> とする	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name3> を y 軸、 <name4> を x 軸として、折れ線グラフを出力する	plt . plot ( <name3> , <name4> )	plt . plot ( <name3> , <name4> )
エクセルファイル <val2> の <val4> から表を読んで、 <name6> とする	<name6> = pd . read_excel ( <val2> , sheet_name = <val4> )	<name6> = pd . read_excel ( <val2> , sheet_name = <val4> )
<name6> 表をインデックスで順番になるようにソートした結果を <name6> にする	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name5> 中のコラムそれぞれに存在する <val4> の数の和を確認する	<name5> . isin ( [ <val4> ] ) . sum ( )	<name5> . isin ( [ <val4> ] ) . sum ( )
グラフを黄緑色で表示する	color = 'greenyellow'	color = 'greenyellow'
<name1> において <val3> の箱ひげ図を描写する	plt . boxplot ( <name1> [ <val3> ] )	plt . boxplot ( <name1> [ <val3> ] )
グラフ線を破線で描く	linestyle = 'dashed'	linestyle = 'dashed'
重複する最後の行を残して <name1> 上の重複している行を消す	<name1> . drop_duplicates ( keep = False )	<name1> . drop_duplicates ( keep = False )
表 <name1> の中の欠損の合計値	<name1> . isnull ( ) . sum ( )	<name1> . isnull ( ) . sum ( )
<name6> 表中の欠損を <name5> とする	<name6> . fillna ( <name5> )	<name6> . fillna ( <name5> )
表 <name4> 内の <val6> を NaN に置き換え NaN が存在する行を消し、インプレースする	<name4> . replace ( <val6> , np . nan ) . dropna ( inplace = True )	<name4> . replace ( <val6> , np . nan ) . dropna ( inplace = True )
<name5> 表の <val1> コラムを消した結果を <name5> にする	<name5> = <name5> . drop ( <val1> , axis = 1 )	<name5> = <name5> . drop ( <val1> , axis = 1 )
<name2> 表の行の名前を <name1> に代入する	<name1> = <name2> . index	<name1> = <name2> . index
インデックスを元に <name6> 表全体を昇順でソートし、書き換える	<name6> . sort_index ( inplace = True )	<name6> . sort_index ( inplace = True )
グラフを紫色で表示する	color = 'purple'	color = 'purple'
<val4> から <val6> に <name1> 表の列の名前をリネームして、再代入する	<name1> = <name1> . rename ( columns = { <val4> : <val6> } )	<name1> = <name1> . rename ( columns = { <val4> : <val6> } )
表 <name6> 内の欠損を表 <name6> の平均をとって埋めた結果で置き換える	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name2> 全体をインデックスで昇順にソートする	<name2> . sort_index ( )	<name2> . sort_index ( )
<name1> を <val4> と <val3> で値が大きい順にソートして、再代入する	<name1> = <name1> . sort_values ( [ <val4> , <val3> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val4> , <val3> ] , ascending = False )
ビンを <name1> 、ビンのラベルをインデックスとして <name3> 表の <val5> 列を分割する	pd . cut ( <name3> [ <val5> ] , <name1> , label = False )	pd . cut ( <name3> [ <val5> ] , <name1> , label = False )
<name4> 表内のカテゴリーを数値データにして、 <name5> とする	<name5> = pd . get_dummies ( <name4> )	<name5> = pd . get_dummies ( <name4> )
表 <name2> 上にある <val1> を未記入の値で置き換えて、インプレースする	<name2> . replace ( <val1> , np . nan , inplace = True )	<name2> . replace ( <val1> , np . nan , inplace = True )
表 <name1> をインデックス通りに昇順でソートされた結果を <name1> とする	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
表 <name2> の中の未入力の値を直前の行の値で埋め、 <name1> にする	<name1> = <name2> . fillna ( method = 'ffill' )	<name1> = <name2> . fillna ( method = 'ffill' )
<name3> 表の <val1> コラムを取り除いた結果を <name3> に代入する	<name3> = <name3> . drop ( <val1> , axis = 1 )	<name3> = <name3> . drop ( <val1> , axis = 1 )
表 <name5> 全体を列 <val3> とカラム <val2> を元に降順でソートされた結果を <name1> とする	<name1> = <name5> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name1> = <name5> . sort_values ( [ <val3> , <val2> ] , ascending = False )
真ん中として棒グラフの位置を <name4> と <name6> の縦棒グラフを表示する	plt . bar ( <name4> , <name6> , align = 'center' )	plt . bar ( <name4> , <name6> , align = 'center' )
<name3> 表中の欠損を <name1> に置換した結果を <name3> に代入する	<name3> = <name3> . fillna ( <name1> )	<name3> = <name3> . fillna ( <name1> )
列 <val1> とカラム <val4> を元に表 <name5> 全体を降順でソートした結果を <name5> とする	<name5> = <name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )
<name4> 表中の欠損の合計	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
表 <name3> 中の <val4> を未記入の値に変え未記入の値がある行を落として、 <name3> とする	<name3> = <name3> . replace ( <val4> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val4> , np . nan ) . dropna ( )
<name2> 全体をインデックスに基づき昇順でソートし、置き換える	<name2> . sort_index ( inplace = True )	<name2> = <name2> . sort_index ( )
<name3> 表の <val6> コラムと <val5> カラムに重複はあるのかどうか検出を見る	<name3> . duplicated ( subset = [ <val6> , <val5> ] )	<name3> . duplicated ( subset = [ <val6> , <val5> ] )
<name1> 表中の欠損値をドロップし、 <name2> とする	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
<name4> 表上の未記入の値を <name4> 表の平均をとって補って、 <name2> にする	<name2> = <name4> . fillna ( <name4> . mean ( ) )	<name2> = <name4> . fillna ( <name4> . mean ( ) )
<name5> 表の <val4> を未入力の値で埋めて、 <name5> とする	<name5> = <name5> . replace ( <val4> , np . nan )	<name5> = <name5> . replace ( <val4> , np . nan )
<name5> 表の元々あったインデックスをリセットする	<name5> . reset_index ( drop = True )	<name5> . reset_index ( drop = True )
エクセルファイル <val5> の全てのシートを読み込み、表データにする	pd . read_excel ( <val5> , sheet_name = None )	pd . read_excel ( <val5> , sheet_name = None )
<name1> 表の <val5> を NaN で埋めて、再代入する	<name1> = <name1> . replace ( <val5> , np . nan )	<name1> = <name1> . replace ( <val5> , np . nan )
ある <val5> を表 <name6> 中に未記入の値にし、 <name6> とする	<name6> = <name6> . replace ( <val5> , np . nan )	<name6> = <name6> . replace ( <val5> , np . nan )
表 <name6> の行数と列数	<name6> . shape	<name6> . shape
昇順にカラム <val1> で表 <name6> 全体をソートした結果を <name5> に代入する	<name5> = <name6> . sort_values ( <val1> )	<name5> = <name6> . sort_values ( <val1> )
<name6> 表中の未入力の値がある行を落として、置き換える	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name1> 中の未記入の値を <name1> の平均をとって補い、置き換える	<name1> . fillna ( <name1> . mean ( ) , inplace = True )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
ビンを <name1> 、ビンのラベルを 0 始まりの連番として <name3> 表の <val5> 列を分割した結果を <name2> に代入する	<name2> = pd . cut ( <name3> [ <val5> ] , <name1> , label = False )	<name2> = pd . cut ( <name3> [ <val5> ] , <name1> , label = False )
表 <name3> の列名を <val1> から <val2> に変更して、再代入する	<name3> = <name3> . rename ( columns = { <val1> : <val2> } )	<name3> = <name3> . rename ( columns = { <val1> : <val2> } )
<name5> 上の <val6> に重複はあるのかどうかを表示する	<name5> . duplicated ( subset = <val6> )	<name5> . duplicated ( subset = <val6> )
ビンの数を <name4> として <name1> の <val6> を分割した結果を <name2> にする	<name2> = pd . cut ( <name1> [ <val6> ] , <name4> )	<name2> = pd . cut ( <name1> [ <val6> ] , <name4> )
表 <name3> のインデックス <val2> の名前を <val5> にリネームされた結果を再代入する	<name3> = <name3> . rename ( index = { <val2> : <val5> } )	<name3> = <name3> . rename ( index = { <val2> : <val5> } )
<val5> と <val3> で <name1> を逆順にソートして、置き換える	<name1> = <name1> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name1> = <name1> . sort_values ( [ <val5> , <val3> ] , ascending = False )
<name1> の <val5> を NaN で置き換えて、置き換える	<name1> = <name1> . replace ( <val5> , np . nan )	<name1> = <name1> . replace ( <val5> , np . nan )
表 <name5> 中の欠損値を <name1> で埋めた結果を再代入する	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
<name2> の列名を <val1> から <val4> に <val5> から <val3> にリネームし、再代入する	<name2> = <name2> . rename ( columns = { <val1> : <val4> , <val5> : <val3> } )	<name2> = <name2> . rename ( columns = { <val1> : <val4> , <val1> : <val3> } )
<name6> と <name4> の散布図を表示する	plt . scatter ( <name6> , <name4> )	plt . scatter ( <name6> , <name4> )
<name2> 表を <val1> 列と <val3> カラムに基づいて降順でソートして、置き換える	<name2> = <name2> . sort_values ( [ <val1> , <val3> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val1> , <val3> ] , ascending = False )
エクセルファイル <val1> の <val5> シート名を表データとして読まれた結果を <name3> とする	<name3> = pd . read_excel ( <val1> , sheet_name = <val5> )	<name3> = pd . read_excel ( <val1> , sheet_name = <val5> )
<name2> 全体を <val5> と <val3> が降順になるようにソートして、 <name6> に代入する	<name6> = <name2> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name6> = <name2> . sort_values ( [ <val5> , <val3> ] , ascending = False )
<name6> 表を <val4> カラムと <val3> コラムが逆順になるようにソートし、インプレースする	<name6> . sort_values ( [ <val4> , <val3> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val4> , <val3> ] , ascending = False , inplace = True )
表 <name1> の中の未入力の値を直前の行の値で補った結果で置き換える	<name1> . fillna ( method = 'ffill' , inplace = True )	<name1> = <name1> . fillna ( method = 'ffill' )
<val1> に <name6> 全体を基づいて昇順でソートし、 <name3> に代入する	<name3> = <name6> . sort_values ( <val1> )	<name3> = <name6> . sort_values ( <val1> )
表 <name2> をカラム <val1> をもとに昇順でソートした結果でインプレースする	<name2> . sort_values ( <val1> , inplace = True )	<name2> . sort_values ( <val1> , inplace = True )
<name5> 表上の NaN を <name2> で埋め、 <name5> に代入する	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name3> 表の中に存在する <val6> を欠損にし、置き換える	<name3> . replace ( <val6> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val6> , np . nan )
エクセルファイル <val6> のシート名 <val2> をデータフレームとし、 <name3> に代入する	<name3> = pd . read_excel ( <val6> , sheet_name = <val2> )	<name3> = pd . read_excel ( <val6> , sheet_name = <val2> )
<name5> の中の重複している行を削除された結果で置き換える	<name5> = <name5> . drop_duplicates ( )	<name5> = <name5> . drop_duplicates ( )
<name1> データフレームにおいて <val2> カラムと <val4> カラムと <val6> カラムの関係性を一気にプロットする	sns . pairplot ( <name1> [ [ <val2> , <val4> , <val6> ] ] )	sns . pairplot ( <name1> [ [ <val2> , <val4> , <val6> ] ] ] )
<name5> 表全体をインデックスを元に小さい順にソートし、 <name3> にする	<name3> = <name5> . sort_index ( )	<name3> = <name5> . sort_index ( )
表 <name2> の未記入の値を <name1> に変え、 <name2> とする	<name2> = <name2> . fillna ( <name1> )	<name2> = <name2> . fillna ( <name1> )
<name2> の中の未記入の値を <name2> の平均をとって補って、 <name5> に代入する	<name5> = <name2> . fillna ( <name2> . mean ( ) )	<name5> = <name2> . fillna ( <name2> . mean ( ) )
<name1> 内の重複するデータをえる	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
<name5> 表中の未記入の値を直前の行の値で補われた、結果で書き換える	<name5> . fillna ( method = 'ffill' , inplace = True )	<name5> . fillna ( method = 'ffill' , inplace = True )
存在する <val1> を <name4> 内に NaN に置換して、 <name5> にする	<name5> = <name4> . replace ( <val1> , np . nan )	<name5> = <name4> . replace ( <val1> , np . nan )
区間の数を <name4> 、ビンのラベルを <name3> として <name1> の <val6> を分割する	pd . cut ( <name1> [ <val6> ] , <name4> , label = <name3> )	pd . cut ( <name1> [ <val6> ] , <name4> , label = <name3> )
その最後の 5 行	. tail ( )	. tail ( )
<name1> 上の NaN がある行を落として、 <name4> にする	<name4> = <name1> . dropna ( )	<name4> = <name1> . dropna ( )
<name4> 中の未記入の値を含む行を落とし、置き換える	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name3> 中に存在する <val5> を欠損にされた結果で置き換える	<name3> . replace ( <val5> , np . nan , inplace = True )	<name3> = <name3> . replace ( <val5> , np . nan )
<name4> 表にある <val5> を未入力の値とし、再代入する	<name4> = <name4> . replace ( <val5> , np . nan )	<name4> = <name4> . replace ( <val5> , np . nan )
出力するグラフの大きさを <val1> × <val3> に設定する	plt . figure ( figsize = ( <val1> , <val3> ) )	plt . figure ( figsize = ( <val1> , <val3> ) )
表 <name4> 中のの列に存在する <val3> の和を確認する	<name4> . isin ( [ <val3> ] ) . sum ( )	<name4> . isin ( [ <val3> ] ) . sum ( )
<name4> の <val6> 行目を落とされた結果を <name2> とする	<name2> = <name4> . drop ( <val6> )	<name2> = <name4> . drop ( <val6> )
表 <name2> の中の欠損を <name6> とした結果を再代入する	<name2> = <name2> . fillna ( <name6> )	<name2> = <name2> . fillna ( <name6> )
表 <name2> の列の名前を <val6> から <val3> に変えて、 <name5> にする	<name5> = <name2> . rename ( columns = { <val6> : <val3> } )	<name5> = <name2> . rename ( columns = { <val6> : <val3> } )
<name4> のインデックスをリセット、元のインデックスを削除し、再代入する	<name4> = <name4> . reset_index ( drop = True )	<name4> = <name4> . reset_index ( drop = True )
<name5> 表上の <val1> を NaN に置き換え NaN がある行を消された結果を <name6> にする	<name6> = <name5> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name5> . replace ( <val1> , np . nan ) . dropna ( )
表 <name5> をインデックス通りに昇順でソートした結果で置き換える	<name5> . sort_index ( inplace = True )	<name5> = <name5> . sort_index ( )
表 <name4> の中の <val1> を未記入の値に置き換え未記入の値がある行を落として、 <name2> にする	<name2> = <name4> . replace ( <val1> , np . nan ) . dropna ( )	<name2> = <name4> . replace ( <val1> , np . nan ) . dropna ( )
表 <name4> の中のコラム <val1> のダブる行を落とし、置き換える	<name4> = <name4> . drop_duplicates ( subset = <val1> )	<name4> = <name4> . drop_duplicates ( subset = <val1> )
元のインデックスを削除し、表 <name4> のインデックスをリセットし、 <name2> とする	<name2> = <name4> . reset_index ( drop = True )	<name2> = <name4> . reset_index ( drop = True )
表 <name2> をインデックスで小さい順に並び替えた結果を <name1> とする	<name1> = <name2> . sort_index ( )	<name1> = <name2> . sort_index ( )
表 <name2> 上にある <val3> を NaN で補い、 <name6> とする	<name6> = <name2> . replace ( <val3> , np . nan )	<name6> = <name2> . replace ( <val3> , np . nan )
<name2> のもともとあったインデックスをリセットして、インプレースする	<name2> . reset_index ( drop = True , inplace = True )	<name2> . reset_index ( drop = True , inplace = True )
<name2> の <val1> をドロップする	<name2> . drop ( <val1> , axis = 1 )	<name2> . drop ( <val1> , axis = 1 )
<name2> 内に重複はあるのか検出を調べる	<name2> . duplicated ( )	<name2> . duplicated ( )
<name5> 中の重複した行の数をチェックする	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
<name5> 表の未入力の値がある行を取り除いた結果を <name6> にする	<name6> = <name5> . dropna ( )	<name6> = <name5> . dropna ( )
<val2> で昇順に <name4> をソートされた結果を再代入する	<name4> = <name4> . sort_values ( <val2> )	<name4> = <name4> . sort_values ( <val2> )
左側の表データに合わせて <name3> 表と <name2> 表をマージされた結果を <name4> にする	<name4> = pd . merge ( <name3> , <name2> , how = 'left' )	<name4> = pd . merge ( <name3> , <name2> , how = 'left' )
<name3> 表上の NaN を <name5> に置き換えて、インプレースする	<name3> . fillna ( <name5> , inplace = True )	<name3> . fillna ( <name5> , inplace = True )
x 軸のラベルを <val2> に指定する	plt . xlabel ( <val2> )	plt . xlabel ( <val2> )
表 <name2> の <val5> 行目をドロップして、 <name1> にする	<name1> = <name2> . drop ( <val5> )	<name1> = <name2> . drop ( <val5> )
<name4> 表のカラム名を <val2> から <val3> に変える	<name4> . rename ( columns = { <val2> : <val3> } )	<name4> . rename ( columns = { <val2> : <val3> } )
<name1> 表の <val6> を欠損値とされた結果でインプレースする	<name1> . replace ( <val6> , np . nan , inplace = True )	<name1> . replace ( <val6> , np . nan , inplace = True )
ビンを <name6> 、ビンのラベルを <name2> リストとして <name1> 表の <val4> 列を分割し、 <name3> とする	<name3> = pd . cut ( <name1> [ <val4> ] , <name6> , label = <name2> )	<name3> = pd . cut ( <name1> [ <val4> ] , <name6> , label = <name2> )
表 <name4> の中のカラム <val5> に重複があるのかどうか検出を調べる	<name4> . duplicated ( subset = <val5> )	<name4> . duplicated ( subset = <val5> )
列名を設定しないで <val1> データを読み込んで、 <name4> とする	<name4> = pd . read_csv ( <val1> , header = None )	<name4> = pd . read_csv ( <val1> , header = None )
<name6> 内の <val4> を NaN に変え NaN が存在する行を消した結果で書き換える	<name6> . replace ( <val4> , np . nan ) . dropna ( inplace = True )	<name6> . replace ( <val4> , np . nan ) . dropna ( inplace = True )
エクセルファイル <val5> の <val6> からデータフレームを読み込まれた結果を <name4> に代入する	<name4> = pd . read_excel ( <val5> , sheet_name = <val6> )	<name4> = pd . read_excel ( <val5> , sheet_name = <val6> )
表 <name4> 内の欠損値を含む行をドロップされた結果で置き換える	<name4> . dropna ( inplace = True )	<name4> = <name4> . dropna ( )
<name1> の中のダブっている行を取り除き、 <name6> に代入する	<name6> = <name1> . drop_duplicates ( )	<name6> = <name1> . drop_duplicates ( )
グラフのラベルを <name2> とする	labels = <name2>	plt . grid ( <name2> )
<name5> をインデックスで順にソートした結果を <name3> にする	<name3> = <name5> . sort_index ( )	<name3> = <name5> . sort_index ( )
<name3> 表の <val2> 列を区間を <name6> 、ビンの名前を <name5> リストとして分割する	pd . cut ( <name3> [ <val2> ] , <name6> , label = <name5> )	pd . cut ( <name3> [ <val2> ] , <name6> , label = <name5> )
<name1> 表の <val3> コラムを消して、置き換える	<name1> = <name1> . drop ( <val3> , axis = 1 )	<name1> = <name1> . drop ( <val3> , axis = 1 )
存在する行を <name6> 上の未記入の値が消す	<name6> . dropna ( )	<name6> . dropna ( )
打点のエッジの色は赤を使う	markeredgecolor = 'red'	markeredgecolor = 'red'
表 <name4> 上の未記入の値を表 <name4> の平均で補った結果を <name4> に代入する	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
区関数を <name6> 、ビンのラベルをリスト <name1> として表 <name2> の列 <val3> を分割した結果を <name5> とする	<name5> = pd . cut ( <name2> [ <val3> ] , <name6> , label = <name1> )	<name5> = pd . cut ( <name2> [ <val3> ] , <name6> , label = <name1> )
<name6> 内の <val1> を欠損値に置換し欠損値が存在する行をドロップして、 <name6> にする	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name6> . replace ( <val1> , np . nan ) . dropna ( )
<name3> 表の中の <val1> コラムと <val4> カラムに重複があるのかどうか検出する	<name3> . duplicated ( subset = [ <val1> , <val4> ] )	<name3> . duplicated ( subset = [ <val1> , <val4> ] )
ある <val4> を <name3> 表上に NaN にする	<name3> . replace ( <val4> , np . nan )	<name3> . replace ( <val4> , np . nan )
要素数が等しくなるように区間を <name4> として <name3> の <val1> を分割された結果を <name2> とする	<name2> = pd . qcut ( <name3> [ <val1> ] , <name4> )	<name2> = pd . qcut ( <name3> [ <val1> ] , <name4> )
<name2> 上の NaN を直前の行の値で埋められた結果を <name5> に代入する	<name5> = <name2> . fillna ( method = 'ffill' )	<name5> = <name2> . fillna ( method = 'ffill' )
カラム <val5> で昇順に表 <name1> をソートされた結果を <name2> にする	<name2> = <name1> . sort_values ( <val5> )	<name2> = <name1> . sort_values ( <val5> )
<name4> 表の中のそれぞれのカラムにある <val3> の個数を見る	<name4> . isin ( [ <val3> ] ) . sum ( )	<name4> . isin ( [ <val3> ] ) . sum ( )
表 <name4> と表 <name1> に対して列 <val6> をキーとしてデータをマージした結果を <name2> にする	<name2> = pd . merge ( <name4> , <name1> , on = <val6> )	<name2> = pd . merge ( <name4> , <name1> , on = <val6> )
<name1> 中の <val6> を欠損値に置き換え欠損値が存在する行をドロップする	<name1> . replace ( <val6> , np . nan ) . dropna ( )	<name1> . replace ( <val6> , np . nan ) . dropna ( )
表 <name5> をカラム <val4> を軸に昇順でソートし、 <name2> とする	<name2> = <name5> . sort_values ( <val4> )	<name2> = <name5> . sort_values ( <val4> )
プロットした図を <val4> というファイル名をつけて出力する	plt . savefig ( <val4> )	plt . savefig ( <val4> )
<name4> の中のそれぞれのカラムにある <val1> の合計値を確認する	<name4> . isin ( [ <val1> ] ) . sum ( )	<name4> . isin ( [ <val1> ] ) . sum ( )
<val6> をカンマ区切りで読み込まれた結果を <name3> にする	<name3> = pd . read_csv ( <val6> , sep = ',' )	<name3> = pd . read_csv ( <val6> , sep = ',' )
<name1> 表を <val2> カラムを元に昇順でソートした結果を <name6> に代入する	<name6> = <name1> . sort_values ( <val2> )	<name6> = <name1> . sort_values ( <val2> )
<name5> 内の欠損値を <name2> に置換した結果を再代入する	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
<name4> 表内の欠損値を含む行をドロップして、再代入する	<name4> = <name4> . dropna ( )	<name4> = <name4> . dropna ( )
<name4> 表についてダミー変数を生成する	pd . get_dummies ( <name4> )	pd . get_dummies ( <name4> )
<name4> をインデックスに基づき昇順でソートして、書き換える	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
<name2> 表上で重複しているデータを取得する	<name2> [ <name2> . duplicated ( ) ]	<name2> [ <name2> . duplicated ( ) ]
表 <name6> のカラム名を <val1> から <val2> に <val3> から <val5> にリネームされた結果でインプレースする	<name6> . rename ( columns = { <val3> : <val5> , <val1> : <val2> } , inplace = True )	<name6> . rename ( columns = { <val1> : <val2> , <val1> : <val5> } , inplace = True )
存在する <val3> を表 <name4> 内に欠損値で置換し、置き換える	<name4> = <name4> . replace ( <val3> , np . nan )	<name4> = <name4> . replace ( <val3> , np . nan )
表データとしてデータ <val1> を <val3> 区切りで読む	pd . read_csv ( <val1> , sep = <val3> )	pd . read_csv ( <val1> , sep = <val3> )
<name1> 表内の欠損を <name4> で埋めて、 <name3> にする	<name3> = <name1> . fillna ( <name4> )	<name3> = <name1> . fillna ( <name4> )
表 <name4> に重複はあるか確認を表示する	<name4> . duplicated ( )	<name4> . duplicated ( )
ある行を表 <name1> の中の未記入の値が落とした結果でインプレースする	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
表 <name3> のコラム <val6> を取り除いた結果を <name3> に代入する	<name3> = <name3> . drop ( <val6> , axis = 1 )	<name3> = <name3> . drop ( <val6> , axis = 1 )
<name4> の <val3> について <val6> をインデックス、 <val1> をコラムとしたピボットテーブルを作成し、 <name5> にする	<name5> = <name4> . pivot_table ( index = <val6> , columns = <val1> , values = <val3> )	<name5> = <name4> . pivot_table ( index = <val6> , columns = <val1> )
表 <name2> の列 <val3> についてダミー変数を作り、 <name1> にする	<name1> = pd . get_dummies ( <name2> [ <val3> ] )	<name1> = pd . get_dummies ( <name2> [ <val3> ] )
要素の数が等しくなるようにビン数を <name1> として <name5> の <val3> を分割して、 <name2> に代入する	<name2> = pd . qcut ( <name5> [ <val3> ] , <name1> )	<name2> = pd . qcut ( <name5> [ <val3> ] , <name1> )
カラム <val4> に表 <name2> を基づいて昇順でソートし、 <name3> とする	<name3> = <name2> . sort_values ( <val4> )	<name3> = <name2> . sort_values ( <val4> )
<name6> の <val4> 行目を消した結果を <name3> とする	<name3> = <name6> . drop ( <val4> )	<name3> = <name6> . drop ( <val4> )
表 <name6> 内の <val5> を NaN に変え NaN が存在する行を消し、インプレースする	<name6> . replace ( <val5> , np . nan ) . dropna ( inplace = True )	<name6> . replace ( <val5> , np . nan ) . dropna ( inplace = True )
<name3> 表内のカテゴリ変数を one - hot 表現にした結果を <name6> とする	<name6> = pd . get_dummies ( <name3> )	<name6> = pd . get_dummies ( <name3> )
透明度を <val2> にセットする	alpha = <val2>	alpha = <val2>
グラフにメモリを出力する	plt . grid ( True )	plt . grid ( True )
<val6> 区切りで <val2> データを読み込み、 <name3> に代入する	<name3> = pd . read_csv ( <val2> , sep = <val6> )	<name3> = pd . read_csv ( <val2> , sep = <val6> )
<name3> 表と <name5> 表を横方向に結合した結果を <name4> とする	<name4> = pd . merge ( <name3> , <name5> )	<name4> = pd . merge ( <name3> , <name5> )
<name5> 表内の欠損値を直前の行の値で補う	<name5> . fillna ( method = 'ffill' )	<name5> . fillna ( method = 'ffill' )
そのオブジェクトデータの統計的情報	. describe ( include = 'O' )	. describe ( include = 'O' )
<name5> 表の <val3> を NaN に置き換えた結果で置き換える	<name5> = <name5> . replace ( <val3> , np . nan )	<name5> = <name5> . replace ( <val3> , np . nan )
表 <name6> 上の NaN を含む行を消して、 <name1> とする	<name1> = <name6> . dropna ( )	<name1> = <name6> . dropna ( )
<name5> 内のカテゴリーをダミー変数化した結果を <name6> にする	<name6> = pd . get_dummies ( <name5> )	<name6> = pd . get_dummies ( <name5> )
表 <name6> の形状を調べる	<name6> . shape	<name6> . shape
表 <name1> のコラム <val6> をインデックスとして変更し、 <name3> にする	<name3> = <name1> . set_index ( <val6> )	<name3> = <name1> . set_index ( <val6> )
文字の大きさを <val3> にセットする	fontsize = <val3>	fontsize = <val3>
先頭の列をインデックスと、 <val5> を表データとして読み込んで、 <name2> に代入する	<name2> = pd . read_csv ( <val5> , index_col = 0 )	<name2> = pd . read_csv ( <val5> , index_col = 0 )
表をデータ <val6> からタブ区切りで読み込んだ結果を <name5> とする	<name5> = pd . read_csv ( <val6> , sep = '\t' )	<name5> = pd . read_csv ( <val6> , sep = '\t' )
表 <name4> を列 <val1> とカラム <val5> で逆順にソートされた結果を <name4> にする	<name4> = <name4> . sort_values ( [ <val1> , <val5> ] , ascending = False )	<name4> = <name4> . sort_values ( [ <val1> , <val5> ] , ascending = False )
エクセルファイル <val5> の <val6> 番目のシートを読み込み、表データにされた結果を <name3> とする	<name3> = pd . read_excel ( <val5> , sheet_name = <val6> )	<name3> = pd . read_excel ( <val5> , sheet_name = <val6> )
<name6> の中の重複要素がある行を削除して、 <name2> とする	<name2> = <name6> . drop_duplicates ( )	<name2> = <name6> . drop_duplicates ( )
表 <name6> の中の欠損を直前の行の値で補った結果で置き換える	<name6> . fillna ( method = 'ffill' , inplace = True )	<name6> = <name6> . fillna ( method = 'ffill' )
<name1> 表の <val5> に <val3> コラムの名前を <val2> に <val6> コラムの名前をリネームする	<name1> . rename ( columns = { <val3> : <val5> , <val6> : <val2> } )	<name1> . rename ( columns = { <val3> : <val5> , <val6> : <val2> } )
<name6> 表の中の欠損を直前の行の値で埋めた結果で書き換える	<name6> . fillna ( method = 'ffill' , inplace = True )	<name6> . fillna ( method = 'ffill' , inplace = True )
<name4> 表上にある <val2> を未記入の値に置き換えて、置き換える	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
<val6> に <name2> を設定して保存する	<name2> . to_csv ( <val6> )	<name2> . to_csv ( <val6> )
<name1> を <val4> に設定してセーブする	<name1> . to_csv ( <val4> )	<name1> . to_csv ( <val4> )
表 <name6> をインデックスで順にソートして、置き換える	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
目印のエッジの色は赤を適用する	markeredgecolor = 'red'	markeredgecolor = 'red'
表 <name6> のコラム <val3> をインデックスに設定して、 <name6> に代入する	<name6> = <name6> . set_index ( <val3> )	<name6> = <name6> . set_index ( <val3> )
エクセルファイル <val1> の <val3> 番目のシートから表を読み込んで、 <name5> にする	<name5> = pd . read_excel ( <val1> , sheet_name = <val3> )	<name5> = pd . read_excel ( <val1> , sheet_name = <val3> )
<name5> 表を <val3> カラムを元に昇順でソートして、再代入する	<name5> = <name5> . sort_values ( <val3> )	<name5> = <name5> . sort_values ( <val3> )
列番号 <val5> をインデックスとセットしてデータ <val3> をデータフレームに格納する	pd . read_csv ( <val3> , index_col = <val5> )	pd . read_csv ( <val3> , index_col = <val5> )
<name2> 表の未入力の値を <name3> に置き換えた結果を再代入する	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
列 <val3> とカラム <val1> で表 <name4> を値が大きい順にソートした結果で置き換える	<name4> . sort_values ( [ <val3> , <val1> ] , ascending = False , inplace = True )	<name4> = <name4> . sort_values ( [ <val3> , <val1> ] , ascending = False )
<name5> 内の欠損値を直前の行の値で補う	<name5> . fillna ( method = 'ffill' )	<name5> . fillna ( method = 'ffill' )
<name4> の <val5> 行目を消し、 <name6> に代入する	<name6> = <name4> . drop ( <val5> )	<name6> = <name4> . drop ( <val5> )
<name6> 表の未入力の値がある行を取り除いた結果で置き換える	<name6> . dropna ( inplace = True )	<name6> = <name6> . dropna ( )
マーカーの種類の色は紫を使う	markerfacecolor = 'purple'	markerfacecolor = 'purple'
x 軸のラベルを <val1> にセットする	plt . xlabel ( <val1> )	plt . xlabel ( <val1> )
ある <val5> を <name4> 表に未入力の値にした結果を <name1> に代入する	<name1> = <name4> . replace ( <val5> , np . nan )	<name1> = <name4> . replace ( <val5> , np . nan )
表 <name1> の <val3> 行目を削除した結果でインプレースする	<name1> . drop ( <val3> , inplace = True )	<name1> . drop ( <val3> , inplace = True )
<name6> 内の欠損値を <name1> で置き換えて、 <name3> とする	<name3> = <name6> . fillna ( <name1> )	<name3> = <name6> . fillna ( <name1> )
区間を <name3> 、ビンのラベルをリスト <name6> として表 <name2> の列 <val1> を分割する	pd . cut ( <name2> [ <val1> ] , <name3> , label = <name6> )	pd . cut ( <name2> [ <val1> ] , <name3> , label = <name6> )
<name2> 表内の NaN を <name6> に置き換える	<name2> . fillna ( <name6> )	<name2> . fillna ( <name6> )
列番号 <val5> をインデックスにして <val3> データを格納した結果を <name4> にする	<name4> = pd . read_csv ( <val3> , index_col = <val5> )	<name4> = pd . read_csv ( <val3> , index_col = <val5> )
表 <name5> の未入力の値を <name6> に置換して、再代入する	<name5> = <name5> . fillna ( <name6> )	<name5> = <name5> . fillna ( <name6> )
<name5> 表中の未記入の値を <name1> で置き換え、 <name4> にする	<name4> = <name5> . fillna ( <name1> )	<name4> = <name5> . fillna ( <name1> )
最大カラム数を <val6> に変更する	pd . set_option ( 'display.max_columns' , <val6> )	pd . set_option ( 'display.max_columns' , <val6> )
ダブっている最後の行を残して表 <name5> の重複している行を取り除いた結果で書き換える	<name5> . drop_duplicates ( keep = False , inplace = True )	<name5> . drop_duplicates ( keep = False , inplace = True )
<name1> の中の重複している行を削除した結果でインプレースする	<name1> . drop_duplicates ( inplace = True )	<name1> . drop_duplicates ( inplace = True )
<name4> を y 座標、 <name6> を x 座標として散布図を表示する	plt . scatter ( <name4> , <name6> )	plt . ylabel ( <name4> )
度数分布図を用いて <name4> の <val5> を表示する	plt . hist ( <name4> [ <val5> ] )	plt . hist ( <name4> [ <val5> ] )
表 <name1> の中の未記入の値を表 <name1> の平均で補い、置き換える	<name1> . fillna ( <name1> . mean ( ) , inplace = True )	<name1> = <name1> . fillna ( <name1> . mean ( ) )
区関数を <name2> 、ビンの名前を <name3> リストとして <name1> 表の <val4> 列を分割する	pd . cut ( <name1> [ <val4> ] , <name2> , label = <name3> )	pd . cut ( <name1> [ <val4> ] , <name2> , label = <name3> )
<name4> 中のそれぞれのカラムに存在する <val6> の個数の和	<name4> . isin ( [ <val6> ] ) . sum ( )	<name4> . isin ( [ <val6> ] ) . sum ( )
<name5> の中のそれぞれのコラムにある <val2> の個数の合計値を見る	<name5> . isin ( [ <val2> ] ) . sum ( )	<name5> . isin ( [ <val2> ] ) . sum ( )
カンマ区切りで <val3> データを読み込んで、 <name5> にする	<name5> = pd . read_csv ( <val3> , sep = ',' )	<name5> = pd . read_csv ( <val3> , sep = ',' )
エンコーディングをシフト JIS で、 <val2> を読んだ結果を <name3> に代入する	<name3> = pd . read_csv ( <val2> , encoding = 'shift_jis' )	<name3> = pd . read_csv ( <val2> , encoding = 'shift_jis' )
ある行を <name6> の中の未入力の値が削除した結果を <name6> とする	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name6> 表全体を <val2> 列と <val5> カラムに基づいて降順でソートした結果で置き換える	<name6> = <name6> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val2> , <val5> ] , ascending = False )
df 全体をインデックスを軸に小さい順にソートする	df . sort_index ( )	df . sort_index ( )
数値で扱えるように表 <name5> の数値以外のデータを処理して、 <name4> にする	<name4> = pd . get_dummies ( <name5> )	<name4> = pd . get_dummies ( <name5> )
<name2> の <val4> の名前を <val1> にリネームした結果を <name2> とする	<name2> = <name2> . rename ( index = { <val4> : <val1> } )	<name2> = <name2> . rename ( columns = { <val4> : <val1> } )
<name5> 内の重複要素がある行をドロップし、置き換える	<name5> = <name5> . drop_duplicates ( )	<name5> = <name5> . drop_duplicates ( )
ビンを <name5> として要素数が等しくなるように表 <name3> の列 <val6> を分割して、 <name4> に代入する	<name4> = pd . qcut ( <name3> [ <val6> ] , <name5> )	<name4> = pd . qcut ( <name3> [ <val6> ] , <name5> )
表 <name5> をインデックスで並び替え、 <name4> にする	<name4> = <name5> . sort_index ( )	<name4> = <name5> . sort_index ( )
グラフのフォントを日本語表示にセットする	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
存在する <val2> を <name4> 内に NaN で補った結果を <name4> に代入する	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
表 <name2> の列 <val3> を年月日のファイルに変換する	pd . to_datetime ( <name2> [ <val3> ] )	pd . to_datetime ( <name2> [ <val3> ] )
表 <name1> 内の NaN を含む行を消して、 <name2> にする	<name2> = <name1> . dropna ( )	<name2> = <name1> . dropna ( )
列名をセットせずに <val2> を読む	pd . read_csv ( <val2> , header = None )	pd . read_csv ( <val2> , header = None )
表 <name5> にある <val6> を未入力の値に置き換えた結果を <name5> に代入する	<name5> = <name5> . replace ( <val6> , np . nan )	<name5> = <name5> . replace ( <val6> , np . nan )
インデックスを元に <name4> 表全体を小さい順にソートし、 <name1> にする	<name1> = <name4> . sort_index ( )	<name1> = <name4> . sort_index ( )
表 <name5> 中の欠損値の合計	<name5> . isnull ( ) . sum ( )	<name5> . isnull ( ) . sum ( )
<name6> をインデックスにそって昇順でソートし、置き換える	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name2> を <val6> と <val3> が降順になるようにソートした結果を再代入する	<name2> = <name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )	<name2> = <name2> . sort_values ( [ <val6> , <val3> ] , ascending = False )
表 <name1> 上のカラム <val3> に重複があるのかどうか判定をチェックする	<name1> . duplicated ( subset = <val3> )	<name1> . duplicated ( subset = <val3> )
インデックスを元に <name4> 表をソートされた結果で置き換える	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
<name3> 表中の欠損値を <name3> 表の平均をとって埋め、 <name6> にする	<name6> = <name3> . fillna ( <name3> . mean ( ) )	<name6> = <name3> . fillna ( <name3> . mean ( ) )
表 <name5> 中の未記入の値を表 <name5> の平均で補って、 <name6> にする	<name6> = <name5> . fillna ( <name5> . mean ( ) )	<name6> = <name5> . fillna ( <name5> . mean ( ) )
表 <name2> の列 <val5> と列 <val1> を降順にソートして、書き換える	<name2> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )	<name2> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )
<name4> 表の中の <val1> コラムに重複がある行を削除する	<name4> . drop_duplicates ( subset = <val1> )	<name4> . drop_duplicates ( subset = <val1> )
<name5> 内の <val2> の重複した行をドロップする	<name5> . drop_duplicates ( subset = <val2> )	<name5> . drop_duplicates ( subset = <val2> )
重複している最後の行を残して <name4> 中の重複している行を削除された結果で置き換える	<name4> . drop_duplicates ( keep = False , inplace = True )	<name4> = <name4> . drop_duplicates ( keep = False )
表 <name4> 内の欠損値を表 <name4> の平均をとって埋め、 <name5> とする	<name5> = <name4> . fillna ( <name4> . mean ( ) )	<name5> = <name4> . fillna ( <name4> . mean ( ) )
表 <name2> のコラム <val1> を選ぶ	<name2> [ <val1> ]	<name2> [ <val1> ] .
ある <val3> を <name2> 表中に未記入の値にし、 <name4> にする	<name4> = <name2> . replace ( <val3> , np . nan )	<name4> = <name2> . replace ( <val3> , np . nan )
表 <name1> の欠損値を <name3> にされた結果を <name1> とする	<name1> = <name1> . fillna ( <name3> )	<name1> = <name1> . fillna ( <name3> )
表 <name5> の中で重複した行数の合計	<name5> . duplicated ( ) . sum ( )	<name5> . duplicated ( ) . sum ( )
表 <name1> の中のインデックスが <val2> の行をえる	<name1> . loc [ <val2> ]	<name1> . loc [ <val2> ]
<name5> の中の欠損を <name1> に置き換えられた結果を <name5> に代入する	<name5> = <name5> . fillna ( <name1> )	<name5> = <name5> . fillna ( <name1> )
<name4> 上の NaN を <name1> に置換して、 <name2> に代入する	<name2> = <name4> . fillna ( <name1> )	<name2> = <name4> . fillna ( <name1> )
表 <name3> の中の未記入の値を直前の行の値で埋め、 <name6> とする	<name6> = <name3> . fillna ( method = 'ffill' )	<name6> = <name3> . fillna ( method = 'ffill' )
棒グラフの位置を真ん中として、 <name1> 座標を <name1> とした <name3> の縦棒グラフを表示する	plt . bar ( <name1> , <name3> , align = 'center' )	plt . bar ( <name1> , <name3> , align = 'center' )
<val1> という名前のエクセルファイルのシート名 <val4> を表として読み込む	pd . read_excel ( <val1> , sheet_name = <val4> )	pd . read_excel ( <val1> , sheet_name = <val4> )
エクセルファイル <val6> の <val2> 番目のシートから表データを読む	pd . read_excel ( <val6> , sheet_name = <val2> )	pd . read_excel ( <val6> , sheet_name = <val2> )
エクセルファイル <val5> の <val1> 番目のシートから表を読み込んだ結果を <name6> とする	<name6> = pd . read_excel ( <val5> , sheet_name = <val1> )	<name6> = pd . read_excel ( <val5> , sheet_name = <val1> )
エクセルファイル <val6> のシート名 <val1> をデータフレームにした結果を <name5> にする	<name5> = pd . read_excel ( <val6> , sheet_name = <val1> )	<name5> = pd . read_excel ( <val6> , sheet_name = <val1> )
列番号 <val2> をインデックスとして <val1> から表を読み込んだ結果を <name4> にする	<name4> = pd . read_csv ( <val1> , index_col = <val2> )	<name4> = pd . read_csv ( <val1> , index_col = <val2> )
<name5> 表上にある <val3> を未記入の値に置き換えた結果を <name5> とする	<name5> = <name5> . replace ( <val3> , np . nan )	<name5> = <name5> . replace ( <val3> , np . nan )
全結合で <name2> 表と <name4> 表をマージした結果を <name1> とする	<name1> = pd . merge ( <name2> , <name4> , how = 'outer' )	<name1> = pd . merge ( <name2> , <name4> , how = 'outer' )
<name4> の中の <val2> を未入力の値に置き換え未入力の値がある行を取り除き、置き換える	<name4> . replace ( <val2> , np . nan ) . dropna ( inplace = True )	<name4> = <name4> . replace ( <val2> , np . nan ) . dropna ( )
表を <val1> から <val3> 区切りで読む	pd . read_csv ( <val1> , sep = <val3> )	pd . read_csv ( <val1> , sep = <val3> )
インデックスを軸に表 <name6> 全体を小さい順でソートされた結果を <name3> にする	<name3> = <name6> . sort_index ( )	<name3> = <name6> . sort_index ( )
ある <val4> を表 <name6> 上に未記入の値に置き換え、書き換える	<name6> . replace ( <val4> , np . nan , inplace = True )	<name6> . replace ( <val4> , np . nan , inplace = True )
<name2> の <val4> を NaN で埋めて、 <name2> とする	<name2> = <name2> . replace ( <val4> , np . nan )	<name2> = <name2> . replace ( <val4> , np . nan )
線グラフを灰色で表示する	color = 'gray'	color = 'gray'
<name3> の <val2> をインデックスにして、書き換える	<name3> . set_index ( <val2> , inplace = True )	<name3> . set_index ( <val2> , inplace = True )
<name1> の中の <val2> のダブる行を落として、 <name1> とする	<name1> = <name1> . drop_duplicates ( subset = <val2> )	<name1> = <name1> . drop_duplicates ( subset = <val2> )
<name6> を <val1> をもとに昇順でソートされた結果で置き換える	<name6> = <name6> . sort_values ( <val1> )	<name6> = <name6> . sort_values ( <val1> )
<name2> 表の未記入の値を <name1> に変え、 <name2> にする	<name2> = <name2> . fillna ( <name1> )	<name2> = <name2> . fillna ( <name1> )
<name2> 内の欠損を <name4> とした結果で置き換える	<name2> . fillna ( <name4> , inplace = True )	<name2> = <name2> . fillna ( <name4> )
表 <name2> の欠損を <name1> に変えた結果で置き換える	<name2> . fillna ( <name1> , inplace = True )	<name2> = <name2> . fillna ( <name1> )
表 <name6> の列 <val1> を中央値で分割する	pd . qcut ( <name6> [ <val1> ] , 2 )	pd . qcut ( <name6> [ <val1> ] , 2 )
<name3> 表内の重複している行を削除した結果を <name3> とする	<name3> = <name3> . drop_duplicates ( )	<name3> = <name3> . drop_duplicates ( )
重複する最後の行を残して表 <name6> 内の重複している行を消す	<name6> . drop_duplicates ( keep = False )	<name6> . drop_duplicates ( keep = False )
表 <name3> をカラム <val5> を使って昇順でソートした結果を <name1> にする	<name1> = <name3> . sort_values ( <val5> )	<name1> = <name3> . sort_values ( <val5> )
データ <val4> という CSV ファイルとして表 <name1> を保存する	<name1> . to_csv ( <val4> )	<name1> . to_csv ( <val4> )
<name2> 表内の重複した行を表示する	<name2> . duplicated ( ) . sum ( )	<name2> . duplicated ( ) . sum ( )
表 <name3> のコラム <val4> をグループ化したときの値ごとのデータ数を計算する	<name3> . groupby ( <val4> ) . size ( )	<name3> . groupby ( <val4> ) . size ( )
表 <name4> 中の未記入の値を <name6> に置換して、置き換える	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
<name6> 表のカテゴリ変数をダミー変数にして、 <name5> とする	<name5> = pd . get_dummies ( <name6> )	<name5> = pd . get_dummies ( <name6> )
表 <name6> のインデックスをリセットして、元のインデックスを削除された結果で置き換える	<name6> = <name6> . reset_index ( drop = True )	<name6> = <name6> . reset_index ( drop = True )
目印をひし形とする	marker = 'D'	marker = 'D'
表 <name5> 内のコラム <val1> の重複している行を削除した結果を <name5> とする	<name5> = <name5> . drop_duplicates ( subset = <val1> )	<name5> = <name5> . drop_duplicates ( subset = <val1> )
<name4> 内で重複した行数の合計をチェックする	<name4> . duplicated ( ) . sum ( )	<name4> . duplicated ( ) . sum ( )
ヘッダーを設定せずにデータ <val6> を読む	pd . read_csv ( <val6> , header = None )	pd . read_csv ( <val6> , header = None )
ある行を <name1> 内の欠損が削除し、 <name3> に代入する	<name3> = <name1> . dropna ( )	<name3> = <name1> . dropna ( )
<val5> データをデータフレームとして読む	pd . read_csv ( <val5> )	pd . read_csv ( <val5> )
<name4> 表の <val5> 列をビンに含まれる個数が等しくなるようにビンの数を <name2> として分割する	pd . qcut ( <name4> [ <val5> ] , <name2> )	pd . qcut ( <name4> [ <val5> ] , <name2> )
<name6> にある <val3> を未入力の値に置き換えた結果を <name2> とする	<name2> = <name6> . replace ( <val3> , np . nan )	<name2> = <name6> . replace ( <val3> , np . nan )
<name6> の中の未記入の値を <name1> とされた結果でインプレースする	<name6> . fillna ( <name1> , inplace = True )	<name6> . fillna ( <name1> , inplace = True )
描画したグラフを <val6> でセーブする	plt . savefig ( <val6> )	plt . savefig ( <val6> )
区関数 <val2> の度数分布図を <name3> を用いて表示する	plt . hist ( <name3> , bins = <val2> )	plt . hist ( <name3> , bins = <val2> )
<name1> 表の中のカテゴリーを one - hot 表現にする	pd . get_dummies ( <name1> )	pd . get_dummies ( <name1> )
<name3> 上の NaN を含む行を消された結果で置き換える	<name3> = <name3> . dropna ( )	<name3> = <name3> . dropna ( )
<name3> 表の中の未入力の値を直前の行の値で補われた、結果を <name1> とする	<name1> = <name3> . fillna ( method = 'ffill' )	<name1> = <name3> . fillna ( method = 'ffill' )
<val6> というファイル名でエクセル形式に <name5> 表を書き出す	<name5> . to_excel ( <val6> )	<name5> . to_excel ( <val6> )
エクセルファイル <val1> を読み込んでデータフレームにして、 <name3> に代入する	<name3> = pd . read_excel ( <val1> )	<name3> = pd . read_excel ( <val1> )
表 <name1> の中に重複はあるのか検出	<name1> . duplicated ( )	<name1> . duplicated ( )
<name5> 表の中の <val6> , <val2> , <val4> 行目の <val1> , <val2> 列目をえる	<name5> . iloc [ [ <val6> , <val2> , <val4> ] , [ <val1> , <val2> ] ]	<name5> . iloc [ [ <val6> , <val2> , <val4> ] , [ <val1> , <val4> ] ]
表 <name2> 内の欠損値の合計を表示する	<name2> . isnull ( ) . sum ( )	<name2> . isnull ( ) . sum ( )
<name4> 表の列名を <name2> とする	<name2> = <name4> . columns	<name2> = <name4> . columns
エクセルファイル <val3> の <val4> シート名を読み込み、表データとして、 <name5> にする	<name5> = pd . read_excel ( <val3> , sheet_name = <val4> )	<name5> = pd . read_excel ( <val3> , sheet_name = <val4> )
ビンを <name4> 、ビンのラベルを 0 始まりの連番として <name2> 表の <val6> 列を分割し、 <name3> にする	<name3> = pd . cut ( <name2> [ <val6> ] , <name4> , label = False )	<name3> = pd . cut ( <name2> [ <val6> ] , <name4> , label = False )
ある行を <name5> 表の欠損値が取り除いた結果を <name5> にする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
マーカーの形状の色はマゼンタを使用する	markerfacecolor = 'magenta'	markerfacecolor = 'magenta'
<name1> 内の NaN を消した結果を <name5> とする	<name5> = <name1> . dropna ( )	<name5> = <name1> . dropna ( )
インデックスを元に <name6> を小さい方からソートし、 <name6> にする	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name5> 上の <val4> を未記入の値に置き換え未記入の値がある行を落とした結果でインプレースする	<name5> . replace ( <val4> , np . nan ) . dropna ( inplace = True )	<name5> . replace ( <val4> , np . nan ) . dropna ( inplace = True )
表 <name3> の <val4> を欠損に置換した結果を <name3> とする	<name3> = <name3> . replace ( <val4> , np . nan )	<name3> = <name3> . replace ( <val4> , np . nan )
列 <val1> とカラム <val4> を元に表 <name2> を値が大きい順でソートした結果を <name5> とする	<name5> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name5> = <name2> . sort_values ( [ <val1> , <val4> ] , ascending = False )
エクセルファイル <val2> の <val6> 番目のシートをデータフレームに格納して、 <name4> にする	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )	<name4> = pd . read_excel ( <val2> , sheet_name = <val6> )
<name4> 表の未入力の値を <name2> で置き換えて、書き換える	<name4> . fillna ( <name2> , inplace = True )	<name4> . fillna ( <name2> , inplace = True )
<name2> の <val1> の曜日の数値型を <name4> とする	<name4> = <name2> [ <val1> ] . dt . dayofweek	<name4> = <name2> [ <val1> ] . dt . dayofweek
<name3> 表中の重複するデータを抽出する	<name3> [ <name3> . duplicated ( ) ]	<name3> [ <name3> . duplicated ( ) ]
<name4> の中の未記入の値を <name1> とされた結果で置き換える	<name4> = <name4> . fillna ( <name1> )	<name4> = <name4> . fillna ( <name1> )
エンコーディングを shift - jis として、データ <val2> を読み込まれた結果を <name1> とする	<name1> = pd . read_csv ( <val2> , encoding = 'shift_jis' )	<name1> = pd . read_csv ( <val2> , encoding = 'shift_jis' )
<name4> 表の中の欠損を <name6> で置き換え、 <name4> にする	<name4> = <name4> . fillna ( <name6> )	<name4> = <name4> . fillna ( <name6> )
<val3> と <val2> が降順になるように <name6> 全体をソートした結果を <name6> にする	<name6> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )	<name6> = <name6> . sort_values ( [ <val3> , <val2> ] , ascending = False )
<name1> の中の未入力の値を <name3> で埋め、 <name5> とする	<name5> = <name1> . fillna ( <name3> )	<name5> = <name1> . fillna ( <name3> )
表 <name4> の列 <val6> を日付の形にする	pd . to_datetime ( <name4> [ <val6> ] )	pd . to_datetime ( <name4> [ <val6> ] )
ある行を <name4> 上の未入力の値が落とし、 <name3> にする	<name3> = <name4> . dropna ( )	<name3> = <name4> . dropna ( )
<name5> 表を <val2> データという CSV データとしてセーブする	<name5> . to_csv ( <val2> )	<name5> . to_csv ( <val2> )
エクセルファイル <val3> のシート名 <val6> を読み込み、表データにした結果を <name2> にする	<name2> = pd . read_excel ( <val3> , sheet_name = <val6> )	<name2> = pd . read_excel ( <val3> , sheet_name = <val6> )
<name3> 全体を <val5> と <val1> を軸に降順でソートして、インプレースする	<name3> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )	<name3> . sort_values ( [ <val5> , <val1> ] , ascending = False , inplace = True )
表 <name4> 中のコラム <val2> の重複した行をドロップし、 <name4> とする	<name4> = <name4> . drop_duplicates ( subset = <val2> )	<name4> = <name4> . drop_duplicates ( subset = <val2> )
<name1> の <val4> についての中央値をチェックする	<name1> [ <val4> ] . median ( )	<name1> [ <val4> ] . median ( )
ヘッダーなしでデータ <val1> を読み込んで、 <name5> とする	<name5> = pd . read_csv ( <val1> , header = None )	<name5> = pd . read_csv ( <val1> , header = None )
表 <name4> 上の NaN を表 <name4> の平均で補った結果を <name4> にする	<name4> = <name4> . fillna ( <name4> . mean ( ) )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
表 <name4> 内の未入力の値がある行をドロップして、 <name2> とする	<name2> = <name4> . dropna ( )	<name2> = <name4> . dropna ( )
表 <name3> の中身	<name3> . head ( )	<name3> . head ( )
<name4> の中の未記入の値を直前の行の値で補った結果を再代入する	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
表 <name1> の中に存在する <val4> を欠損で置換し、書き換える	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> . replace ( <val4> , np . nan , inplace = True )
エクセルファイル <val3> に <name5> を書き込む	<name5> . to_excel ( <val3> )	<name5> . to_excel ( <val3> )
<name2> 表内の <val4> コラムの重複している行を削除された結果を <name2> に代入する	<name2> = <name2> . drop_duplicates ( subset = <val4> )	<name2> = <name2> . drop_duplicates ( subset = <val4> )
<name4> 表の <val2> コラムをドロップした結果を再代入する	<name4> = <name4> . drop ( <val2> , axis = 1 )	<name4> = <name4> . drop ( <val2> , axis = 1 )
棒の位置を中心に設定して横向きの棒グラフを描写する	plt . barh ( y , x , align = 'center' )	plt . barh ( y , x , align = 'center' )
<name6> 表内の欠損を <name5> に置き換えて、 <name6> に代入する	<name6> = <name6> . fillna ( <name5> )	<name6> = <name6> . fillna ( <name5> )
表データにデータ <val2> を格納する	pd . read_csv ( <val2> )	pd . read_csv ( <val2> )
昇順に表 <name1> 全体をカラム <val5> でソートして、置き換える	<name1> = <name1> . sort_values ( <val5> )	<name1> = <name1> . sort_values ( <val5> )
横軸に <val3> という軸ラベルを加える	plt . xlabel ( <val3> )	plt . xlabel ( <val3> )
一番左の列をインデックスにセット設定して、 <val5> データを読み込み、 <name2> にする	<name2> = pd . read_csv ( <val5> , index_col = 0 )	<name2> = pd . read_csv ( <val5> , index_col = 0 )
境界値をリスト <name3> として表 <name6> の列 <val2> を分割し、 <name4> にする	<name4> = pd . cut ( <name6> [ <val2> ] , <name3> )	<name4> = pd . cut ( <name6> [ <val2> ] , <name3> )
表 <name2> 内の未記入の値がある行を削除した結果を <name6> に代入する	<name6> = <name2> . dropna ( )	<name6> = <name2> . dropna ( )
<name2> と <name5> を縦で結合	pd . concat ( [ <name2> , <name5> ] )	pd . concat ( [ <name2> , <name5> ] )
ある <val2> を表 <name4> 上に NaN とし、再代入する	<name4> = <name4> . replace ( <val2> , np . nan )	<name4> = <name4> . replace ( <val2> , np . nan )
表をデータ <val5> からカンマ区切りで読み込む	pd . read_csv ( <val5> , sep = ',' )	pd . read_csv ( <val5> , sep = ',' )
<name4> 上の未記入の値を直前の行の値で補った結果を <name4> に代入する	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
表 <name2> の未記入の値を <name3> にされた結果を <name2> にする	<name2> = <name2> . fillna ( <name3> )	<name2> = <name2> . fillna ( <name3> )
<name2> についてダミー変数を生成する	pd . get_dummies ( <name2> )	pd . get_dummies ( <name2> )
<val4> データから表データで読んで、 <name3> に代入する	<name3> = pd . read_csv ( <val4> )	<name3> = pd . read_csv ( <val4> )
<name3> の <val2> が <val6> 以下のデータを取得する	<name3> [ <name3> [ <val2> ] <= <val6> ]	<name3> [ <name3> [ <val2> ] > <val6> ]
列番号 <val6> をインデックスにして <val4> データから読み込む	pd . read_csv ( <val4> , index_col = <val6> )	pd . read_csv ( <val4> , index_col = <val6> )
<name2> 表中の重複した行をドロップして、置き換える	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
表 <name2> 中の <val5> を未記入の値に変え未記入の値がある行を落とした結果で書き換える	<name2> . replace ( <val5> , np . nan ) . dropna ( inplace = True )	<name2> . replace ( <val5> , np . nan ) . dropna ( inplace = True )
<name3> の中の重複している行を削除して、 <name2> とする	<name2> = <name3> . drop_duplicates ( )	<name2> = <name3> . drop_duplicates ( )
<name2> 表中の未記入の値の和を確認する	<name2> . isnull ( ) . sum ( )	<name2> . isnull ( ) . sum ( )
<name2> 表の <val6> 列のそれぞれのデータの出現頻度	<name2> [ <val6> ] . value_counts ( )	<name2> [ <val6> ] . value_counts ( )
<name5> を <val2> から <val1> の範囲の度数分布図にする	plt . hist ( <name5> , range = ( <val2> , <val1> ) )	plt . hist ( <name5> , range = ( <val2> , <val1> ) )
表 <name6> 中の未記入の値を表 <name6> の平均で補い、インプレースする	<name6> . fillna ( <name6> . mean ( ) , inplace = True )	<name6> . fillna ( <name6> . mean ( ) , inplace = True )
表 <name4> のコラム <val5> とカラム <val6> に重複はあるのかどうかを見る	<name4> . duplicated ( subset = [ <val5> , <val6> ] )	<name4> . duplicated ( subset = [ <val5> , <val6> ] )
<name2> 表の <val1> コラムをドロップした結果を <name2> とする	<name2> = <name2> . drop ( <val1> , axis = 1 )	<name2> = <name2> . drop ( <val1> , axis = 1 )
<name1> についてのボックスチャートを描写する	plt . boxplot ( <name1> )	plt . boxplot ( <name1> )
表 <name2> 内の NaN を <name4> に置き換え、 <name2> とする	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
<val2> という名前のエクセルファイルを表として読み込んで、 <name4> にする	<name4> = pd . read_excel ( <val2> )	<name4> = pd . read_excel ( <val2> )
<name1> の要素を <name2> に代入する	<name2> = <name1> . values	<name2> = <name1> . values
<name1> 表の行の重複を検出	<name1> . duplicated ( )	<name1> . duplicated ( )
<name2> 表内の <val1> カラムに重複はあるのかどうか検出する	<name2> . duplicated ( subset = <val1> )	<name2> . duplicated ( subset = <val1> )
データ <val1> から表データをタブ区切りで読む	pd . read_csv ( <val1> , sep = '\t' )	pd . read_csv ( <val1> , sep = '\t' )
<name5> の <val1> を削除した結果を <name5> にする	<name5> = <name5> . drop ( <val1> , axis = 1 )	<name5> = <name5> . drop ( <val1> , axis = 1 )
<name3> の円グラフを描写する	plt . pie ( <name3> )	plt . pie ( <name3> )
<name3> 表の中の未記入の値を直前の行の値で補われた、結果で置き換える	<name3> = <name3> . fillna ( method = 'ffill' )	<name3> = <name3> . fillna ( method = 'ffill' )
度数分布図で <name2> を表示する	plt . hist ( <name2> )	plt . hist ( <name2> )
<name2> 表の重複行を検出	<name2> . duplicated ( )	<name2> . duplicated ( )
<val2> にグラフの y 軸の軸名をする	plt . ylabel ( <val2> )	plt . ylabel ( <val2> )
表 <name3> 内に存在する <val1> を NaN に置換し、再代入する	<name3> = <name3> . replace ( <val1> , np . nan )	<name3> = <name3> . replace ( <val1> , np . nan )
<name3> 表の中に存在する <val5> を欠損にされた結果を <name3> にする	<name3> = <name3> . replace ( <val5> , np . nan )	<name3> = <name3> . replace ( <val5> , np . nan )
<name3> の <val1> と <val6> を取り除き、 <name3> に代入する	<name3> = <name3> . drop ( [ <val1> , <val6> ] , axis = 1 )	<name3> = <name3> . drop ( [ <val1> , <val6> ] , axis = 1 )
<name3> 表中の重複要素がある行を落として、インプレースする	<name3> . drop_duplicates ( inplace = True )	<name3> . drop_duplicates ( inplace = True )
ピボット操作で <name1> の行を列に入れ替える	<name1> . unstack ( )	<name1> . unstack ( )
<val1> 列と <val4> カラムで <name5> 表全体を降順にソートする	<name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )	<name5> . sort_values ( [ <val1> , <val4> ] , ascending = False )
<name6> 表をエクセルファイル <val1> に書き出す	<name6> . to_excel ( <val1> )	<name6> . to_excel ( <val1> )
表 <name4> をインデックスで並び替えた結果で書き換える	<name4> . sort_index ( inplace = True )	<name4> . sort_index ( inplace = True )
<name4> 表中の欠損値を直前の行の値で埋めた結果を <name4> とする	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
グラフのフォントを日本語表示に設定する	sns . set ( font = 'IPAexGothic' , style = 'white' )	sns . set ( font = 'IPAexGothic' , style = 'white' )
円グラフの構成割合を小数点 2 位まで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
<name1> の中の欠損を <name6> で置き換え、 <name1> に代入する	<name1> = <name1> . fillna ( <name6> )	<name1> = <name1> . fillna ( <name6> )
ダブる最後の行を残して <name6> 中の重複している行を落とした結果を <name6> にする	<name6> = <name6> . drop_duplicates ( keep = False )	<name6> = <name6> . drop_duplicates ( keep = False )
<name4> 中の <val1> に重複がある行を落とされた結果を <name4> にする	<name4> = <name4> . drop_duplicates ( subset = <val1> )	<name4> = <name4> . drop_duplicates ( subset = <val1> )
エクセルファイル <val2> をデータフレームに読んで、 <name1> にする	<name1> = pd . read_excel ( <val2> )	<name1> = pd . read_excel ( <val2> )
<name1> において <val5> と <val2> と <val3> の関係性を一度にプロットする	sns . pairplot ( <name1> [ [ <val5> , <val2> , <val3> ] ] )	plt . pairplot ( <name1> [ [ <val5> , <val2> , <val3> ] ] )
<name3> 表の <val6> を未記入の値で置き換えた結果を <name5> に代入する	<name5> = <name3> . replace ( <val6> , np . nan )	<name5> = <name3> . replace ( <val6> , np . nan )
ヘッダーを設定せずに <val1> データを読み、 <name5> にする	<name5> = pd . read_csv ( <val1> , header = None )	<name5> = pd . read_csv ( <val1> , header = None )
データフレームをデータ <val2> から読み込み、 <name5> に代入する	<name5> = pd . read_csv ( <val2> )	<name5> = pd . read_csv ( <val2> )
表 <name5> の列 <val6> を日付の型に変換する	pd . to_datetime ( <name5> [ <val6> ] )	pd . to_datetime ( <name5> [ <val6> ] )
<name2> 表中に存在する <val6> を欠損で補った結果でインプレースする	<name2> . replace ( <val6> , np . nan , inplace = True )	<name2> . replace ( <val6> , np . nan , inplace = True )
<val1> で昇順に <name2> をソートされた結果を <name5> にする	<name5> = <name2> . sort_values ( <val1> )	<name5> = <name2> . sort_values ( <val1> )
エクセルファイル <val5> の <val3> シート名を表に読み込む	pd . read_excel ( <val5> , sheet_name = <val3> )	pd . read_excel ( <val5> , sheet_name = <val3> )
ある行を表 <name1> 上の未記入の値が消して、インプレースする	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
打点は丸を使う	marker = 'o'	marker = 'o'
表 <name1> に重複があるのかどうか判定を調べる	<name1> . duplicated ( )	<name1> . duplicated ( )
<name2> 表に重複はあるのか判定を表示する	<name2> . duplicated ( )	<name2> . duplicated ( )
<name4> の <val6> を NaN で置き換えて、インプレースする	<name4> . replace ( <val6> , np . nan , inplace = True )	<name4> . replace ( <val6> , np . nan , inplace = True )
<name5> 表中の未入力の値がある行を落とした結果を再代入する	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<val6> 列と <val1> カラムを軸に <name5> 表を降順でソートし、置き換える	<name5> = <name5> . sort_values ( [ <val6> , <val1> ] , ascending = False )	<name5> = <name5> . sort_values ( [ <val6> , <val1> ] , ascending = False )
表 <name1> の <val3> を NaN にし、 <name6> とする	<name6> = <name1> . replace ( <val3> , np . nan )	<name6> = <name1> . replace ( <val3> , np . nan )
<name5> の <val2> を欠損で埋め、 <name1> に代入する	<name1> = <name5> . replace ( <val2> , np . nan )	<name1> = <name5> . replace ( <val2> , np . nan )
インデックスを元に <name4> を小さい方からソートし、 <name3> に代入する	<name3> = <name4> . sort_index ( )	<name3> = <name4> . sort_index ( )
<name3> の未入力の値を <name3> の平均をとって補って、インプレースする	<name3> . fillna ( <name3> . mean ( ) , inplace = True )	<name3> . fillna ( <name3> . mean ( ) , inplace = True )
<name3> 表の <val4> 列を分割数を <name5> として分割する	pd . cut ( <name3> [ <val4> ] , <name5> )	pd . cut ( <name3> [ <val4> ] , <name5> )
列番号 <val2> をインデックスにセットして <val1> データを格納して、 <name5> とする	<name5> = pd . read_csv ( <val1> , index_col = <val2> )	<name5> = pd . read_csv ( <val1> , index_col = <val2> )
カンマ区切りで <val5> データを読み込む	pd . read_csv ( <val5> , sep = ',' )	pd . read_csv ( <val5> , sep = ',' )
表 <name5> の中の未記入の値を表 <name5> の平均をとって補い、 <name1> とする	<name1> = <name5> . fillna ( <name5> . mean ( ) )	<name1> = <name5> . fillna ( <name5> . mean ( ) )
<name6> 内の <val1> に重複がある行を消した結果を <name6> に代入する	<name6> = <name6> . drop_duplicates ( subset = <val1> )	<name6> = <name6> . drop_duplicates ( subset = <val1> )
要素の数が等しくなるようにビンを <name5> として <name6> 表の <val4> 列を分割した結果を <name3> にする	<name3> = pd . qcut ( <name6> [ <val4> ] , <name5> )	<name3> = pd . qcut ( <name6> [ <val4> ] , <name5> )
表 <name4> の未入力の値を直前の行の値で補われた、結果で置き換える	<name4> . fillna ( method = 'ffill' , inplace = True )	<name4> = <name4> . fillna ( method = 'ffill' )
<name6> 表と <name4> 表を横方向にマージされた結果を <name2> にする	<name2> = pd . merge ( <name6> , <name4> )	<name2> = pd . merge ( <name6> , <name4> )
<name6> 表の <val1> 列をビン数を <name5> 、ビンの名前を <name4> リストとして分割した結果を <name2> にする	<name2> = pd . cut ( <name6> [ <val1> ] , <name5> , label = <name4> )	<name2> = pd . cut ( <name6> [ <val1> ] , <name5> , label = <name4> )
<name2> 表内の欠損を <name2> 表の平均値で埋めた結果で書き換える	<name2> . fillna ( <name2> . mean ( ) , inplace = True )	<name2> . fillna ( <name2> . mean ( ) , inplace = True )
<name6> の行の名前を <val3> から <val5> にリネームされた結果で置き換える	<name6> . rename ( index = { <val3> : <val5> } , inplace = True )	<name6> = <name6> . rename ( index = { <val3> : <val5> } )
凡例を最適な位置に表示する	plt . legend ( loc = 'best' )	plt . legend ( loc = 'best' )
存在する <val5> を表 <name4> 中に欠損で置換した結果でインプレースする	<name4> . replace ( <val5> , np . nan , inplace = True )	<name4> . replace ( <val5> , np . nan , inplace = True )
表 <name1> で重複するデータを取得する	<name1> [ <name1> . duplicated ( ) ]	<name1> [ <name1> . duplicated ( ) ]
エクセルファイル <val4> のシート名 <val2> を読み込み、表とする	pd . read_excel ( <val4> , sheet_name = <val2> )	pd . read_excel ( <val4> , sheet_name = <val2> )
<name2> の <val1> を未入力の値で置き換え、置き換える	<name2> = <name2> . replace ( <val1> , np . nan )	<name2> = <name2> . replace ( <val1> , np . nan )
<name2> を <val4> に基づいて昇順でソートした結果でインプレースする	<name2> . sort_values ( <val4> , inplace = True )	<name2> . sort_values ( <val4> , inplace = True )
表 <name2> の <val4> 行目まで	<name2> [ : <val4> ]	<name2> [ : <val4> ]
表 <name3> 内の <val5> を欠損値に置換し欠損値が存在する行をドロップして、 <name3> にする	<name3> = <name3> . replace ( <val5> , np . nan ) . dropna ( )	<name3> = <name3> . replace ( <val5> , np . nan ) . dropna ( )
df 表全体をインデックスを軸に小さい順にソートし、インプレースする	df . sort_index ( inplace = True )	df . sort_index ( inplace = True )
作画したプロットを <val2> という名前で保存する	plt . savefig ( <val2> )	plt . savefig ( <val2> )
<name3> の中の未入力の値を含む行を取り除き、インプレースする	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
ある <val6> を <name2> 表に未入力の値に置き換える	<name2> . replace ( <val6> , np . nan )	<name2> . replace ( <val6> , np . nan )
表 <name2> 内の重複要素がある行を消した結果で書き換える	<name2> . drop_duplicates ( inplace = True )	<name2> . drop_duplicates ( inplace = True )
表 <name4> の中の未入力の値を直前の行の値で補って、 <name4> とする	<name4> = <name4> . fillna ( method = 'ffill' )	<name4> = <name4> . fillna ( method = 'ffill' )
<name3> のカラム名	<name3> . columns	<name3> . columns
表データを <val5> データから <val2> 区切りで読み、 <name1> にする	<name1> = pd . read_csv ( <val5> , sep = <val2> )	<name1> = pd . read_csv ( <val5> , sep = <val2> )
<name6> 中の <val5> を欠損値に変え欠損値が存在する行をドロップし、 <name1> とする	<name1> = <name6> . replace ( <val5> , np . nan ) . dropna ( )	<name1> = <name6> . replace ( <val5> , np . nan ) . dropna ( )
文字コードはシフト JIS を用いる	encoding = 'shift_jis'	encoding = 'shift_jis'
表 <name6> の列 <val1> の各要素の出現頻度を表示する	<name6> [ <val1> ] . value_counts ( )	<name6> [ <val1> ] . value_counts ( )
<name3> 表内の <val2> コラムに重複がある行をドロップした結果を再代入する	<name3> = <name3> . drop_duplicates ( subset = <val2> )	<name3> = <name3> . drop_duplicates ( subset = <val2> )
<name4> データフレームにおいて <val2> カラムの箱ひげ図を出力する	plt . boxplot ( <name4> [ <val2> ] )	plt . boxplot ( <name4> [ <val2> ] )
<name5> の <val6> を欠損に置換し、 <name1> とする	<name1> = <name5> . replace ( <val6> , np . nan )	<name1> = <name5> . replace ( <val6> , np . nan )
<name3> 上の <val1> と <val4> に重複はあるのかどうか	<name3> . duplicated ( subset = [ <val1> , <val4> ] )	<name3> . duplicated ( subset = [ <val1> , <val4> ] )
<name1> の <val6> を未記入の値に置き換えた結果で置き換える	<name1> = <name1> . replace ( <val6> , np . nan )	<name1> = <name1> . replace ( <val6> , np . nan )
エクセルファイル <val3> の <val6> 番目のシートを読み込み、表データに格納する	pd . read_excel ( <val3> , sheet_name = <val6> )	pd . read_excel ( <val3> , sheet_name = <val6> )
<name6> の行と列を入れかえる	<name6> . T	<name6> . T
ビンを <name3> 、ビンのラベルをリスト <name1> として表 <name4> の列 <val2> を分割された結果を <name5> にする	<name5> = pd . cut ( <name4> [ <val2> ] , <name3> , label = <name1> )	<name5> = pd . cut ( <name4> [ <val2> ] , <name3> , label = <name1> )
インデックスを元に <name4> 表を小さい順でソートして、再代入する	<name4> = <name4> . sort_index ( )	<name4> = <name4> . sort_index ( )
ピボット操作で <name3> 表の列に行を入れ替える	<name3> . unstack ( )	<name3> . unstack ( )
表 <name2> 内で重複した行数の合計を調べる	<name2> . duplicated ( ) . sum ( )	<name2> . duplicated ( ) . sum ( )
左側のデータのインデックスとカラム <val6> をキーとして表 <name5> と表 <name3> をマージした結果を <name4> に代入する	<name4> = pd . merge ( <name5> , <name3> , left_index = True , right_on = <val6> )	<name4> = pd . merge ( <name5> , <name3> , left_index = True , right_on = <val6> )
<name5> 表の <val6> コラムと <val4> カラムに重複があるのかどうか検出を調べる	<name5> . duplicated ( subset = [ <val6> , <val4> ] )	<name5> . duplicated ( subset = [ <val6> , <val4> ] )
<name6> 表中の欠損を <name6> 表の平均をとって埋めて、置き換える	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name1> 表上の <val6> カラムに重複はあるのかどうか判定	<name1> . duplicated ( subset = <val6> )	<name1> . duplicated ( subset = <val6> )
<name5> 表内の <val2> コラムの重複する行を消す	<name5> . drop_duplicates ( subset = <val2> )	<name5> . drop_duplicates ( subset = <val2> )
表 <name6> の列 <val4> の曜日の数値型を <name5> とする	<name5> = <name6> [ <val4> ] . dt . dayofweek	<name5> = <name6> [ <val4> ] . dt . dayofweek
<name2> 表中の <val6> コラムの重複している行を削除し、置き換える	<name2> . drop_duplicates ( subset = <val6> , inplace = True )	<name2> = <name2> . drop_duplicates ( subset = <val6> )
表 <name5> の <val4> 行目を落として、置き換える	<name5> = <name5> . drop ( <val4> )	<name5> = <name5> . drop ( <val4> )
<name3> 中の未記入の値を含む行を落とされた結果で書き換える	<name3> . dropna ( inplace = True )	<name3> . dropna ( inplace = True )
<name5> 全体をインデックスで順にソートし、置き換える	<name5> = <name5> . sort_index ( )	<name5> = <name5> . sort_index ( )
<name6> 表の <val5> 列についてダミー変数を生成する	pd . get_dummies ( <name6> [ <val5> ] )	pd . get_dummies ( <name6> [ <val5> ] )
表 <name2> 中の重複要素がある行をドロップして、 <name4> に代入する	<name4> = <name2> . drop_duplicates ( )	<name4> = <name2> . drop_duplicates ( )
<name1> 表の中の <val4> コラムのダブる行を落とした結果で置き換える	<name1> = <name1> . drop_duplicates ( subset = <val4> )	<name1> = <name1> . drop_duplicates ( subset = <val4> )
<name6> 表中の欠損を含む行を削除した結果を <name6> とする	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
<name6> 表を <val2> カラムと <val4> コラムが逆順になるようにソートした結果で書き換える	<name6> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )	<name6> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )
<name1> 表を <val2> 列と <val5> カラムを元に値が大きい順でソートした結果を <name4> にする	<name4> = <name1> . sort_values ( [ <val2> , <val5> ] , ascending = False )	<name4> = <name1> . sort_values ( [ <val2> , <val5> ] , ascending = False )
表 <name5> 中のコラム <val1> のダブる行を落とされた結果を <name5> にする	<name5> = <name5> . drop_duplicates ( subset = <val1> )	<name5> = <name5> . drop_duplicates ( subset = <val1> )
<name4> 中の欠損を <name3> に置換する	<name4> . fillna ( <name3> )	<name4> . fillna ( <name3> )
<name1> 中の重複要素がある行を削除された結果を <name1> とする	<name1> = <name1> . drop_duplicates ( )	<name1> = <name1> . drop_duplicates ( )
表 <name4> の <val6> を未入力の値に置き換え、置き換える	<name4> = <name4> . replace ( <val6> , np . nan )	<name4> = <name4> . replace ( <val6> , np . nan )
エクセルファイル <val5> を表にされた結果を <name2> に代入する	<name2> = pd . read_excel ( <val5> )	<name2> = pd . read_excel ( <val5> )
<name3> の中の <val1> と <val2> に重複があるのかどうか検出を確認する	<name3> . duplicated ( subset = [ <val1> , <val2> ] )	<name3> . duplicated ( subset = [ <val1> , <val2> ] )
<name1> を <val3> というファイル名でエクセル形式に書き込む	<name1> . to_excel ( <val3> )	<name1> . to_excel ( <val3> )
表 <name2> 内のコラム <val5> の重複している行を削除して、置き換える	<name2> . drop_duplicates ( subset = <val5> , inplace = True )	<name2> = <name2> . drop_duplicates ( subset = <val5> )
エクセルファイル <val1> の <val6> シート名を読み、 <name5> とする	<name5> = pd . read_excel ( <val1> , sheet_name = <val6> )	<name5> = pd . read_excel ( <val1> , sheet_name = <val6> )
表 <name6> のカラム名を <val2> から <val1> にリネームし、 <name6> にする	<name6> = <name6> . rename ( columns = { <val2> : <val1> } )	<name6> = <name6> . rename ( columns = { <val2> : <val1> } )
一番左の列をインデックスにセット、データ <val6> を読み込み、 <name1> にする	<name1> = pd . read_csv ( <val6> , index_col = 0 )	<name1> = pd . read_csv ( <val6> , index_col = 0 )
<name2> 表の <val1> を未記入の値とする	<name2> . replace ( <val1> , np . nan )	<name2> . replace ( <val1> , np . nan )
<name6> を昇順に <val5> でソートする	<name6> . sort_values ( <val5> )	<name6> . sort_values ( <val5> )
<name2> 表内の <val1> を NaN に変え NaN が存在する行を消し、 <name6> にする	<name6> = <name2> . replace ( <val1> , np . nan ) . dropna ( )	<name6> = <name2> . replace ( <val1> , np . nan ) . dropna ( )
<name6> をインデックスどおりに昇順でソートした結果で置き換える	<name6> = <name6> . sort_index ( )	<name6> = <name6> . sort_index ( )
<name5> の <val6> のそれぞれのデータの出現回数	<name5> [ <val6> ] . value_counts ( )	<name5> [ <val6> ] . value_counts ( )
表示する行数を最大 <val3> に指定する	pd . set_option ( 'display.max_rows' , <val3> )	pd . set_option ( 'display.max_rows' , <val3> )
昇順に <val1> で <name6> 全体をソートした結果を再代入する	<name6> = <name6> . sort_values ( <val1> )	<name6> = <name6> . sort_values ( <val1> )
<name4> の <val5> をインデックスとしてセットした結果を <name4> とする	<name4> = <name4> . set_index ( <val5> )	<name4> = <name4> . set_index ( <val5> )
<val1> データを <val3> 区切りで読み込み、 <name5> とする	<name5> = pd . read_csv ( <val1> , sep = <val3> )	<name5> = pd . read_csv ( <val1> , sep = <val3> )
<val1> から表データを <val4> 区切りで読んだ結果を <name2> に代入する	<name2> = pd . read_csv ( <val1> , sep = <val4> )	<name2> = pd . read_csv ( <val1> , sep = <val4> )
<name4> の欠損を <name1> にした結果でインプレースする	<name4> . fillna ( <name1> , inplace = True )	<name4> . fillna ( <name1> , inplace = True )
<name2> 表中のそれぞれの列にある <val3> の数の数	<name2> . isin ( [ <val3> ] ) . sum ( )	<name2> . isin ( [ <val3> ] ) . sum ( )
<name4> の <val1> を区間を <name6> 、ビンの名前を <name2> として分割された結果を <name3> にする	<name3> = pd . cut ( <name4> [ <val1> ] , <name6> , label = <name2> )	<name3> = pd . cut ( <name4> [ <val1> ] , <name6> , label = <name2> )
バイトオーダーはビックエンディアンとする	byteorder = 'big'	byteorder = 'big'
格子線をグラフに描く	plt . grid ( True )	plt . grid ( True )
<name6> の <val1> を欠損値で置換する	<name6> . replace ( <val1> , np . nan )	<name6> . replace ( <val1> , np . nan )
<name3> の <val2> をインデックスとして指定した結果で置き換える	<name3> = <name3> . set_index ( <val2> )	<name3> = <name3> . set_index ( <val2> )
重複した最後の行を残して <name1> 表中の重複している行をドロップして、 <name3> にする	<name3> = <name1> . drop_duplicates ( keep = False )	<name3> = <name1> . drop_duplicates ( keep = False )
<name3> 表の列の名前を <val1> から <val6> に <val2> から <val5> にリネームされた結果を <name3> にする	<name3> = <name3> . rename ( columns = { <val1> : <val6> , <val2> : <val5> } )	<name3> = <name3> . rename ( columns = { <val1> : <val6> , <val1> : <val5> } )
<name5> の <val4> と <val1> をドロップして、 <name5> に代入する	<name5> = <name5> . drop ( [ <val4> , <val1> ] , axis = 1 )	<name5> = <name5> . drop ( [ <val4> , <val1> ] , axis = 1 )
<name4> の <val5> のデータの種類	<name4> [ <val5> ] . unique ( )	<name4> [ <val5> ] . unique ( )
表 <name4> の列 <val5> と列 <val3> を降順にソートする	<name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )
昇順に <val2> で <name6> をソートする	<name6> . sort_values ( <val2> )	<name6> . sort_values ( <val2> )
線グラフの色を紫色とする	color = 'purple'	color = 'purple'
<name4> の <val6> に <val1> の名前を <val3> の名前を <val2> にリネームする	<name4> . rename ( columns = { <val1> : <val6> , <val3> : <val2> } )	<name4> . rename ( columns = { <val1> : <val6> , <val3> : <val2> } )
存在する行を表 <name5> の中の欠損が取り除かれた結果を <name5> にする	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
<name4> 中の重複した行をドロップし、再代入する	<name4> = <name4> . drop_duplicates ( )	<name4> = <name4> . drop_duplicates ( )
透過させる	alpha = 0.5	encoding = 'D'
<name3> の <val6> と <val2> をドロップし、 <name5> にする	<name5> = <name3> . drop ( [ <val6> , <val2> ] , axis = 1 )	<name5> = <name3> . drop ( [ <val6> , <val2> ] , axis = 1 )
表 <name4> の <val2> 行目をドロップされた結果で置き換える	<name4> = <name4> . drop ( <val2> )	<name4> = <name4> . drop ( <val2> )
先頭の列をインデックスと設定して、データ <val5> をデータフレームとして読み込む	pd . read_csv ( <val5> , index_col = 0 )	pd . read_csv ( <val5> , index_col = 0 )
マーカーの形状のエッジの色を赤色とする	markeredgecolor = 'red'	markeredgecolor = 'red'
<name6> 内の欠損を <name6> の平均をとって埋めた結果を再代入する	<name6> = <name6> . fillna ( <name6> . mean ( ) )	<name6> = <name6> . fillna ( <name6> . mean ( ) )
<name1> 表の <val6> コラムの一意の値	<name1> [ <val6> ] . unique ( )	<name1> [ <val6> ] . unique ( )
マーカーの形のエッジの色を紫色とする	markeredgecolor = 'purple'	markeredgecolor = 'purple'
<name2> データフレームの <val6> カラムを箱ひげ図に描写する	plt . boxplot ( <name2> [ <val6> ] )	plt . boxplot ( <name2> [ <val6> ] )
表 <name1> の列 <val3> の年を <name4> に代入する	<name4> = <name1> [ <val3> ] . dt . year	<name4> = <name1> [ <val3> ] . dt . year
<name3> の <val4> をインデックスとして変更し、 <name6> にする	<name6> = <name3> . set_index ( <val4> )	<name6> = <name3> . set_index ( <val4> )
マーカーの種類を正方形とする	marker = 's'	marker = 's'
存在する行を <name5> 表内の欠損が削除して、 <name5> に代入する	<name5> = <name5> . dropna ( )	<name5> = <name5> . dropna ( )
表として CSV データ <val6> を <val4> 区切りで読む	pd . read_csv ( <val6> , sep = <val4> )	pd . read_csv ( <val6> , sep = <val4> )
<name1> の <val5> をドロップされた結果を再代入する	<name1> = <name1> . drop ( <val5> , axis = 1 )	<name1> = <name1> . drop ( <val5> , axis = 1 )
CSV データ <val6> を表としてタブ区切りで読み込む	pd . read_csv ( <val6> , sep = '\t' )	pd . read_csv ( <val6> , sep = '\t' )
<name5> の列の名前を <val6> から <val1> にリネームして、再代入する	<name5> = <name5> . rename ( columns = { <val6> : <val1> } )	<name5> = <name5> . rename ( columns = { <val6> : <val1> } )
表 <name6> 中の重複している行を削除して、置き換える	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name1> 全体を <val3> を軸に昇順でソートする	<name1> . sort_values ( <val3> )	<name1> . sort_values ( <val3> )
x 座標の軸名を <val1> にセットする	plt . xlabel ( <val1> )	plt . xlabel ( <val1> )
カラム <val4> とコラム <val1> が逆順になるように表 <name5> 全体をソートして、 <name6> にする	<name6> = <name5> . sort_values ( [ <val4> , <val1> ] , ascending = False )	<name6> = <name5> . sort_values ( [ <val4> , <val1> ] , ascending = False )
<name1> 全体をインデックスで順番になるようにソートした結果で書き換える	<name1> . sort_index ( inplace = True )	<name1> . sort_index ( inplace = True )
<name2> の <val6> の名前を <val5> にリネームした結果を再代入する	<name2> = <name2> . rename ( index = { <val6> : <val5> } )	<name2> = <name2> . rename ( index = { <val6> : <val5> } )
<val3> と <val6> を元に <name5> を値が大きい順でソートする	<name5> . sort_values ( [ <val3> , <val6> ] , ascending = False )	<name5> . sort_values ( [ <val3> , <val6> ] , ascending = False )
表 <name3> 全体を列 <val4> とカラム <val6> に基づいて降順でソートし、置き換える	<name3> . sort_values ( [ <val4> , <val6> ] , ascending = False , inplace = True )	<name3> = <name3> . sort_values ( [ <val4> , <val6> ] , ascending = False )
<name6> 中の欠損値を直前の行の値で補われた、結果を <name6> にする	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
<name5> の <val2> をドロップして、 <name3> に代入する	<name3> = <name5> . drop ( <val2> , axis = 1 )	<name3> = <name5> . drop ( <val2> , axis = 1 )
データ <val2> という CSV データとして表 <name1> をセーブする	<name1> . to_csv ( <val2> )	<name1> . to_csv ( <val2> )
表 <name4> の列 <val3> が <val2> のデータを取得する	<name4> [ <name4> [ <val3> ] == <val2> ]	<name4> [ <name4> [ <val3> ] > <val2> ]
<name1> 内の欠損を <name4> とし、書き換える	<name1> . fillna ( <name4> , inplace = True )	<name1> . fillna ( <name4> , inplace = True )
表 <name2> 全体をインデックスを元に昇順でソートする	<name2> . sort_index ( )	<name2> . sort_index ( )
<name6> 表内で重複した行の数の合計を確認する	<name6> . duplicated ( ) . sum ( )	<name6> . duplicated ( ) . sum ( )
重複している最後の行を残して <name5> 中の重複している行を削除し、 <name1> にする	<name1> = <name5> . drop_duplicates ( keep = False )	<name1> = <name5> . drop_duplicates ( keep = False )
<name5> の度数分布図を区間を <val6> として表示する	plt . hist ( <name5> , bins = <val6> )	plt . hist ( <name5> , bins = <val6> )
<name2> 表中の重複要素がある行を削除した結果を <name2> に代入する	<name2> = <name2> . drop_duplicates ( )	<name2> = <name2> . drop_duplicates ( )
<name5> の中の未入力の値を <name2> に置き換えた結果で置き換える	<name5> = <name5> . fillna ( <name2> )	<name5> = <name5> . fillna ( <name2> )
表 <name3> の要約情報を見る	<name3> . info ( )	<name3> . info ( )
<name4> の中の欠損値がある部分に色をつける	<name4> . style . highlight_null ( )	<name4> . style . highlight_null ( )
<name6> 表全体を <val4> 列と <val1> カラムで逆順にソートした結果を <name5> とする	<name5> = <name6> . sort_values ( [ <val4> , <val1> ] , ascending = False )	<name5> = <name6> . sort_values ( [ <val4> , <val1> ] , ascending = False )
<name3> の <val1> をインデックスにした結果を <name3> にする	<name3> = <name3> . set_index ( <val1> )	<name3> = <name3> . set_index ( <val1> )
<name6> 表の中の欠損を直前の行の値で補い、 <name6> にする	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
ある <val3> を <name4> に未入力の値にし、再代入する	<name4> = <name4> . replace ( <val3> , np . nan )	<name4> = <name4> . replace ( <val3> , np . nan )
<name5> 表の中の <val6> コラムの重複している行を削除した結果を <name5> に代入する	<name5> = <name5> . drop_duplicates ( subset = <val6> )	<name5> = <name5> . drop_duplicates ( subset = <val6> )
要素の数が等しくなるように <name2> 表の <val3> 列を区関数を <name4> として分割した結果を <name5> とする	<name5> = pd . qcut ( <name2> [ <val3> ] , <name4> )	<name5> = pd . qcut ( <name2> [ <val3> ] , <name4> )
表 <name5> のコラム <val1> と <val3> を削除した結果を再代入する	<name5> = <name5> . drop ( [ <val1> , <val3> ] , axis = 1 )	<name5> = <name5> . drop ( [ <val1> , <val3> ] , axis = 1 )
<name6> 表の中のそれぞれの列にある <val4> の数の合計	<name6> . isin ( [ <val4> ] ) . sum ( )	<name6> . isin ( [ <val4> ] ) . sum ( )
<name2> 表の未入力の値を <name2> 表の平均をとって補う	<name2> . fillna ( <name2> . mean ( ) )	<name2> . fillna ( <name2> . mean ( ) )
<name4> 表の中の <val6> コラムと <val3> カラムに重複はあるのかどうか検出	<name4> . duplicated ( subset = [ <val6> , <val3> ] )	<name4> . duplicated ( subset = [ <val6> , <val3> ] )
<name1> 内の <val4> に重複がある行を消して、置き換える	<name1> = <name1> . drop_duplicates ( subset = <val4> )	<name1> = <name1> . drop_duplicates ( subset = <val4> )
<name4> の <val1> を落として、再代入する	<name4> = <name4> . drop ( <val1> , axis = 1 )	<name4> = <name4> . drop ( <val1> , axis = 1 )
エクセルファイル <val4> を表データとされた結果を <name2> にする	<name2> = pd . read_excel ( <val4> )	<name2> = pd . read_excel ( <val4> )
円グラフ上に示す小数点以下 2 桁までの数値を割合をパーセントで表示する	autopct = '%.2f%%'	autopct = '%.2f%%'
エクセルファイル <val2> の <val1> から読まれた結果を <name6> とする	<name6> = pd . read_excel ( <val2> , sheet_name = <val1> )	<name6> = pd . read_excel ( <val2> , sheet_name = <val1> )
<name4> 表の未記入の値を <name1> に変え、置き換える	<name4> . fillna ( <name1> , inplace = True )	<name4> = <name4> . fillna ( <name1> )
<name3> 表の NaN を <name4> に変えた結果を <name1> に代入する	<name1> = <name3> . fillna ( <name4> )	<name1> = <name3> . fillna ( <name4> )
ビンを <val1> として <name2> の柱状図を出力する	plt . hist ( <name2> , bins = <val1> )	plt . hist ( <name2> , bins = <val1> )
散布図を <name1> を y 座標、 <name2> を x 座標として表示する	plt . scatter ( <name1> , <name2> )	plt . scatter ( <name1> , <name2> )
区間を <name1> として <name5> 表の <val2> 列を分割した結果を <name3> とする	<name3> = pd . cut ( <name5> [ <val2> ] , <name1> )	<name3> = pd . cut ( <name5> [ <val2> ] , <name1> )
ある <val4> を <name6> 表に未入力の値に置き換え、 <name6> に代入する	<name6> = <name6> . replace ( <val4> , np . nan )	<name6> = <name6> . replace ( <val4> , np . nan )
<name2> 表の未入力の値を <name4> とした結果を <name2> にする	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
棒グラフのそれぞれのラベルを <name1> から <val5> 、 <val2> 、 <val3> へ変更する	plt . yticks ( <name1> , [ <val5> , <val2> , <val3> ] )	plt . xticks ( <name1> , [ <val5> , <val2> , <val3> ] )
データフレームとして CSV ファイル <val6> をタブ区切りで読み込む	pd . read_csv ( <val6> , sep = '\t' )	pd . read_csv ( <val6> , sep = '\t' )
表 <name2> を列 <val4> とカラム <val6> で逆順にソートした結果を <name3> とする	<name3> = <name2> . sort_values ( [ <val4> , <val6> ] , ascending = False )	<name3> = <name2> . sort_values ( [ <val4> , <val6> ] , ascending = False )
存在する <val4> を <name5> 表内に NaN にされた結果を <name6> とする	<name6> = <name5> . replace ( <val4> , np . nan )	<name6> = <name5> . replace ( <val4> , np . nan )
<val4> 番目の列をインデックスに指定して、 <val3> を読み込む	pd . read_csv ( <val3> , index_col = <val4> )	pd . read_csv ( <val3> , index_col = <val4> )
<name4> の <val6> をビンの数を <name3> 、ビンの名前を <name2> として分割して、 <name5> に代入する	<name5> = pd . cut ( <name4> [ <val6> ] , <name3> , label = <name2> )	<name5> = pd . cut ( <name4> [ <val6> ] , <name3> , label = <name2> )
<name3> 上の NaN を <name3> の平均をとって補い、 <name2> に代入する	<name2> = <name3> . fillna ( <name3> . mean ( ) )	<name2> = <name3> . fillna ( <name3> . mean ( ) )
表データに CSV <val2> を格納した結果を <name3> にする	<name3> = pd . read_csv ( <val2> )	<name3> = pd . read_csv ( <val2> )
列名をセットせずに <val1> データを読んで、 <name6> に代入する	<name6> = pd . read_csv ( <val1> , header = None )	<name6> = pd . read_csv ( <val1> , header = None )
降順に <name4> 表の <val5> 列と <val3> 列をソートした結果を <name2> にする	<name2> = <name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )	<name2> = <name4> . sort_values ( [ <val5> , <val3> ] , ascending = False )
<val6> データからデータフレームをカンマ区切りで読み込む	pd . read_csv ( <val6> , sep = ',' )	pd . read_csv ( <val6> , sep = ',' )
<name5> の <val1> 、 <val3> 、 <val4> 、 <val2> を抽出する	<name5> [ [ <val1> , <val3> , <val4> , <val2> ] ]	<name5> [ [ <val1> , <val3> , <val2> , <val2> ] ]
インデックスを軸に <name4> を小さい順でソートした結果で置き換える	<name4> . sort_index ( inplace = True )	<name4> = <name4> . sort_index ( )
<val3> に y 座標の軸ラベルをセットする	plt . ylabel ( <val3> )	plt . ylabel ( <val3> )
ビン数を <name2> 、ビンのラベルを整数値として <name3> の <val4> を分割する	pd . cut ( <name3> [ <val4> ] , <name2> , label = False )	pd . cut ( <name3> [ <val4> ] , <name2> , label = False )
区間の数を <name6> 、ビンのラベルを <name3> リストとして <name4> 表の <val2> 列を分割し、 <name1> に代入する	<name1> = pd . cut ( <name4> [ <val2> ] , <name6> , label = <name3> )	<name1> = pd . cut ( <name4> [ <val2> ] , <name6> , label = <name3> )
<name3> 表中の <val6> コラムに重複はあるのかどうか	<name3> . duplicated ( subset = <val6> )	<name3> . duplicated ( subset = <val6> )
透明度を <val4> にする	alpha = <val4>	alpha = <val4>
左外部結合で <name4> と <name2> をマージする	pd . merge ( <name4> , <name2> , how = 'left' )	pd . merge ( <name4> , <name2> , how = 'left' )
<name2> 表を <val4> 列と <val6> カラムに基づいて降順でソートする	<name2> . sort_values ( [ <val4> , <val6> ] , ascending = False )	<name2> . sort_values ( [ <val4> , <val6> ] , ascending = False )
降順に <name1> 表の <val5> 列と <val4> 列をソートして、 <name2> とする	<name2> = <name1> . sort_values ( [ <val5> , <val4> ] , ascending = False )	<name2> = <name1> . sort_values ( [ <val5> , <val4> ] , ascending = False )
ビン数を <name4> として <name5> 表の <val6> 列を分割し、 <name2> にする	<name2> = pd . cut ( <name5> [ <val6> ] , <name4> )	<name2> = pd . cut ( <name5> [ <val6> ] , <name4> )
<name2> 中の欠損を <name2> の平均をとって埋める	<name2> . fillna ( <name2> . mean ( ) )	<name2> . fillna ( <name2> . mean ( ) )
<name6> 表上の NaN を含む行を消された結果を再代入する	<name6> = <name6> . dropna ( )	<name6> = <name6> . dropna ( )
表 <name2> 中の重複要素がある行を削除して、置き換える	<name2> . drop_duplicates ( inplace = True )	<name2> = <name2> . drop_duplicates ( )
表 <name2> をインデックスを元に小さい順でソートして、 <name2> とする	<name2> = <name2> . sort_index ( )	<name2> = <name2> . sort_index ( )
表 <name6> 上の NaN を直前の行の値で埋められた結果を <name6> に代入する	<name6> = <name6> . fillna ( method = 'ffill' )	<name6> = <name6> . fillna ( method = 'ffill' )
<name2> 表全体をインデックスに沿って昇順でソートし、 <name4> とする	<name4> = <name2> . sort_index ( )	<name4> = <name2> . sort_index ( )
<name6> 表中の重複要素がある行を削除した結果で置き換える	<name6> = <name6> . drop_duplicates ( )	<name6> = <name6> . drop_duplicates ( )
<name4> 表の形状	<name4> . shape	<name4> . shape
ある <val6> を <name2> 上に NaN に置き換え、 <name2> に代入する	<name2> = <name2> . replace ( <val6> , np . nan )	<name2> = <name2> . replace ( <val6> , np . nan )
<name2> 上の NaN を消された結果を <name3> とする	<name3> = <name2> . dropna ( )	<name3> = <name2> . dropna ( )
<val6> というエクセルファイルとして <name2> をセーブする	<name2> . to_excel ( <val6> )	<name2> . to_excel ( <val6> )
<name5> 表中の欠損値を <name6> とされた結果を <name2> に代入する	<name2> = <name5> . fillna ( <name6> )	<name2> = <name5> . fillna ( <name6> )
表 <name2> 内の NaN を <name4> に置き換え、置き換える	<name2> = <name2> . fillna ( <name4> )	<name2> = <name2> . fillna ( <name4> )
存在する <val2> を表 <name5> 内に欠損値で埋めた結果でインプレースする	<name5> . replace ( <val2> , np . nan , inplace = True )	<name5> . replace ( <val2> , np . nan , inplace = True )
エクセルファイル <val4> の <val2> をデータフレームにし、 <name3> とする	<name3> = pd . read_excel ( <val4> , sheet_name = <val2> )	<name3> = pd . read_excel ( <val4> , sheet_name = <val2> )
区関数は <val4> を用いる	bins = <val4>	bins = <val4>
プロットした図を <val4> で出力する	plt . savefig ( <val4> )	plt . savefig ( <val4> )
ある <val4> を <name5> 表中に未記入の値で置き換え、再代入する	<name5> = <name5> . replace ( <val4> , np . nan )	<name5> = <name5> . replace ( <val4> , np . nan )
<name4> に未入力の値がどの程度あるのか確認する	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
<name2> 表の <val5> コラムをドロップする	<name2> . drop ( <val5> , axis = 1 )	<name2> . drop ( <val5> , axis = 1 )
表 <name5> の欠損値を <name4> にした結果を <name3> に代入する	<name3> = <name5> . fillna ( <name4> )	<name3> = <name5> . fillna ( <name4> )
<name5> を <val1> を元に昇順でソートした結果を <name2> にする	<name2> = <name5> . sort_values ( <val1> )	<name2> = <name5> . sort_values ( <val1> )
表 <name5> 中の欠損値を <name2> とされた結果を <name1> とする	<name1> = <name5> . fillna ( <name2> )	<name1> = <name5> . fillna ( <name2> )
エクセルファイル <val5> の <val3> から読む	pd . read_excel ( <val5> , sheet_name = <val3> )	pd . read_excel ( <val5> , sheet_name = <val3> )
エクセルファイル <val4> の <val2> 番目のシートから読む	pd . read_excel ( <val4> , sheet_name = <val2> )	pd . read_excel ( <val4> , sheet_name = <val2> )
改行の代わりに <name4> を適用する	end = <name4>	end = <name4>
表 <name1> をデータ <val2> という CSV ファイルとして保存する	<name1> . to_csv ( <val2> )	<name1> . to_csv ( <val2> )
<name4> 表の中の未記入の値を <name4> 表の平均をとって補った結果で置き換える	<name4> . fillna ( <name4> . mean ( ) , inplace = True )	<name4> = <name4> . fillna ( <name4> . mean ( ) )
エクセルファイル <val6> の <val5> シート名を読み込んでデータフレームにし、 <name4> にする	<name4> = pd . read_excel ( <val6> , sheet_name = <val5> )	<name4> = pd . read_excel ( <val6> , sheet_name = <val5> )
<val1> から表で読み込む	pd . read_csv ( <val1> )	pd . read_csv ( <val1> )
ダブる最後の行を残して <name4> 中の重複している行を落として、置き換える	<name4> = <name4> . drop_duplicates ( keep = False )	<name4> = <name4> . drop_duplicates ( keep = False )
カラム <val3> に表 <name2> 全体を基づいて昇順でソートした結果で置き換える	<name2> = <name2> . sort_values ( <val3> )	<name2> = <name2> . sort_values ( <val3> )
バイナリモードを適用する	mode = 'b'	mode = 'b'
<name4> の <val2> を取り除いた結果を <name4> とする	<name4> = <name4> . drop ( <val2> , axis = 1 )	<name4> = <name4> . drop ( <val2> , axis = 1 )
<name5> を <val1> と <val3> で値が大きい順にソートした結果を <name2> にする	<name2> = <name5> . sort_values ( [ <val1> , <val3> ] , ascending = False )	<name2> = <name5> . sort_values ( [ <val1> , <val3> ] , ascending = False )
表 <name1> の列 <val6> を区間の数を <name4> 、ビンのラベルをリスト <name2> として分割された結果を <name3> にする	<name3> = pd . cut ( <name1> [ <val6> ] , <name4> , label = <name2> )	<name3> = pd . cut ( <name1> [ <val6> ] , <name4> , label = <name2> )
x 軸の軸の名前を <val2> に設定する	plt . xlabel ( <val2> )	plt . xlabel ( <val2> )
エクセルファイル <val1> のシート名 <val2> を読み込み、データフレームとし、 <name5> とする	<name5> = pd . read_excel ( <val1> , sheet_name = <val2> )	<name5> = pd . read_excel ( <val1> , sheet_name = <val2> )
<name2> 表中の未記入の値を <name2> 表の平均で補われた、結果を <name2> とする	<name2> = <name2> . fillna ( <name2> . mean ( ) )	<name2> = <name2> . fillna ( <name2> . mean ( ) )
左寄せにヘッダーの表示をセットする	pd . set_option ( 'colheader_justify' , 'left' )	pd . set_option ( 'colheader_justify' , 'left' )
<name2> 表の <val5> コラムについての最頻値を表示する	<name2> [ <val5> ] . mode ( )	<name2> [ <val5> ] . mode ( )
表 <name2> の未入力の値を表 <name2> の平均をとって補い、置き換える	<name2> = <name2> . fillna ( <name2> . mean ( ) )	<name2> = <name2> . fillna ( <name2> . mean ( ) )
表 <name2> の中の未記入の値を表 <name2> の平均で補い、 <name3> にする	<name3> = <name2> . fillna ( <name2> . mean ( ) )	<name3> = <name2> . fillna ( <name2> . mean ( ) )
左側のデータのインデックスと右側のデータのカラム <val5> をキーとして表 <name6> と表 <name4> をマージした結果を <name1> にする	<name1> = pd . merge ( <name6> , <name4> , left_index = True , right_on = <val5> )	<name1> = pd . merge ( <name6> , <name4> , left_index = True , right_on = <val5> )
<name2> 表中に存在する <val5> を欠損に置換し、 <name2> にする	<name2> = <name2> . replace ( <val5> , np . nan )	<name2> = <name2> . replace ( <val5> , np . nan )
<val1> から <val6> に <name2> 表の列の名前をリネームし、インプレースする	<name2> . rename ( columns = { <val1> : <val6> } , inplace = True )	<name2> . rename ( columns = { <val1> : <val6> } , inplace = True )
インデックスを元に表 <name5> を小さい順でソートし、書き換える	<name5> . sort_index ( inplace = True )	<name5> . sort_index ( inplace = True )
<name6> 表をエクセルファイル <val3> というファイル名で出力する	<name6> . to_excel ( <val3> )	<name6> . to_excel ( <val3> )
列番号 <val2> をインデックスに <val1> データを格納した結果を <name3> とする	<name3> = pd . read_csv ( <val1> , index_col = <val2> )	<name3> = pd . read_csv ( <val1> , index_col = <val2> )
表示するカラム数を最大 <val6> に設定する	pd . set_option ( 'display.max_columns' , <val6> )	pd . set_option ( 'display.max_columns' , <val6> )
<name5> 全体を <val2> と <val4> を元に逆順でソートした結果でインプレースする	<name5> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )	<name5> . sort_values ( [ <val2> , <val4> ] , ascending = False , inplace = True )
棒と棒の隙間を <val5> としてグラフの <name6> 軸を <name6> とした <name4> の縦向きの棒グラフを描写する	plt . bar ( <name6> , <name4> , width = <val5> )	plt . bar ( <name6> , <name4> , width = <val5> )
データフレーム <name1> においてカラム <val2> とカラム <val5> とカラム <val6> の関係性を一気に表示する	sns . pairplot ( <name1> [ [ <val2> , <val5> , <val6> ] ] )	sns . pairplot ( <name1> [ [ <val2> , <val5> , <val6> ] ] ] )
<name1> 表の <val5> 行目より前を調べる	<name1> [ : <val5> ]	<name1> [ <val5> : ]
表 <name1> 全体をインデックスに基づき昇順でソートし、再代入する	<name1> = <name1> . sort_index ( )	<name1> = <name1> . sort_index ( )
表 <name4> 内の欠損の合計値を調べる	<name4> . isnull ( ) . sum ( )	<name4> . isnull ( ) . sum ( )
区関数を <name1> 、ビンのラベルをリスト <name5> として表 <name2> の列 <val6> を分割し、 <name4> に代入する	<name4> = pd . cut ( <name2> [ <val6> ] , <name1> , label = <name5> )	<name4> = pd . cut ( <name2> [ <val6> ] , <name1> , label = <name5> )
表 <name2> 内に存在する <val5> を NaN に置換し、 <name2> に代入する	<name2> = <name2> . replace ( <val5> , np . nan )	<name2> = <name2> . replace ( <val5> , np . nan )
<name1> 表の中の重複している行を削除する	<name1> . drop_duplicates ( )	<name1> . drop_duplicates ( )
表 <name5> 内の欠損値を直前の行の値で埋めた結果を <name5> に代入する	<name5> = <name5> . fillna ( method = 'ffill' )	<name5> = <name5> . fillna ( method = 'ffill' )
表 <name3> 上のそれぞれのコラムに存在する <val6> の数の数	<name3> . isin ( [ <val6> ] ) . sum ( )	<name3> . isin ( [ <val6> ] ) . sum ( )
表 <name6> 全体をカラム <val3> を元に昇順でソートし、 <name5> に代入する	<name5> = <name6> . sort_values ( <val3> )	<name5> = <name6> . sort_values ( <val3> )
エクセルファイル <val2> の全てのシートを表にした結果を <name6> とする	<name6> = pd . read_excel ( <val2> , sheet_name = None )	<name6> = pd . read_excel ( <val2> , sheet_name = None )
<name4> の中の欠損値が含まれる部分を色付けする	<name4> . style . highlight_null ( )	<name4> . style . highlight_null ( )
ダブる最後の行を残して <name3> 上の重複している行を落とし、書き換える	<name3> . drop_duplicates ( keep = False , inplace = True )	<name3> . drop_duplicates ( keep = False , inplace = True )
マーカーの形状を*とする	marker = '*'	marker = '*'
表 <name3> 内の欠損値を直前の行の値で補い、 <name1> とする	<name1> = <name3> . fillna ( method = 'ffill' )	<name1> = <name3> . fillna ( method = 'ffill' )
表 <name1> 上の NaN を含む行を消した結果で書き換える	<name1> . dropna ( inplace = True )	<name1> . dropna ( inplace = True )
<name1> の中の未記入の値を含む行を落とし、 <name1> にする	<name1> = <name1> . dropna ( )	<name1> = <name1> . dropna ( )
打点を星とする	marker = '*'	marker = '*'
表 <name6> の中の欠損を直前の行の値で埋められた結果で書き換える	<name6> . fillna ( method = 'ffill' , inplace = True )	<name6> . fillna ( method = 'ffill' , inplace = True )
マーカーの形状のエッジの色は黄緑色を用いる	markeredgecolor = 'greenyellow'	markeredgecolor = 'greenyellow'
<name6> の横方向の棒グラフをグラフの y 軸を <name4> として描写する	plt . barh ( <name4> , <name6> )	plt . barh ( <name4> , <name6> )
<name4> のインデックスを振り直した結果を再代入する	<name4> = <name4> . reset_index ( )	<name4> = <name4> . reset_index ( )
<name2> と <name5> を縦にマージする	pd . concat ( [ <name2> , <name5> ] )	pd . concat ( [ <name2> , <name5> ] )
<name2> 表中の重複要素がある行を落とされた結果で置き換える	<name2> . drop_duplicates ( inplace = True )	<name2> = <name2> . drop_duplicates ( )
<name4> の <val5> をインデックスとしてセットする	<name4> . set_index ( <val5> )	<name4> . set_index ( <val5> )
表 <name1> の <val4> を未記入の値にして、置き換える	<name1> . replace ( <val4> , np . nan , inplace = True )	<name1> = <name1> . replace ( <val4> , np . nan )
エクセルファイル <val3> のシート全部を表として読み、 <name4> に代入する	<name4> = pd . read_excel ( <val3> , sheet_name = None )	<name4> = pd . read_excel ( <val3> , sheet_name = None )
表 <name4> 内の欠損値を <name2> で埋められた結果でインプレースする	<name4> . fillna ( <name2> , inplace = True )	<name4> . fillna ( <name2> , inplace = True )
<name2> 表で重複するデータを得る	<name2> [ <name2> . duplicated ( ) ]	<name2> [ <name2> . duplicated ( ) ]
<name5> 中の <val3> に重複があるのかどうか確認	<name5> . duplicated ( subset = <val3> )	<name5> . duplicated ( subset = <val3> )
の数値データ以外の統計的な情報	. describe ( include = 'O' )	. describe ( include = 'O' )
エンコーディング <name1> を使う	encoding = <name1>	encoding = <name1>
<val1> 区切りで <val2> を読み込んだ結果を <name5> にする	<name5> = pd . read_csv ( <val2> , sep = <val1> )	<name5> = pd . read_csv ( <val2> , sep = <val1> )
