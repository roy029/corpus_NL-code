<name1> の最後の 5 行を表示する	<name1> . tail ( )	<name1> . tail ( )
グラフのタイトルを <val6> とする。	plt . title ( <val6> )	plt . title ( <val6> )
<name1> の <val2> 列が <val3> より大きければ <val4> に置換し、上 5 行を表示する	pd . DataFrame ( <name1> [ <val2> ] . mask ( <name1> [ <val2> ] > <val3> , <val4> ) ) . head ( )	<name3> [ <name1> [ <val2> , <val3> , <val4> ] ] ] . head ( )
<name4> を <name2> と名前を付けてインポート	import <name4> as <name2>	import <name4> as <name2>
<name1> の <val2> 列と <val3> 列の上 5 行を表示する	<name1> [ [ <val2> , <val3> ] ] . head ( )	<name5> [ [ <val2> , <val3> ] ] ] . head ( )
複数のグラフを <val3> つにまとめて表示して、これは <val2> 行 <val3> 列の <val3> 番目の位置にプロットする	plt . subplot ( <val2> , <val3> , <val3> )	subplot . subplot ( <val3> , <val2> , <val3> )
<name6> <name1> を <name2> としてインポートする	import <name6> <name1> as <name2>	<name1> import <name6> as <name2>
列 <val3> , 列 <val6> , 列 <val4> , 列 <val1> , 列 <val5> を全てダミー化したものを <name2> とする	<name2> = pd . get_dummies ( df , columns = [ <val3> , <val6> , <val4> , <val1> , <val5> ] )	<name4> = pd . get_dummies ( <name2> , columns = [ <val3> , <val1> , <val5> , <val5> , <val6> ] )
<name1> の <val2> 列を <val3> 列とする	<name1> . rename ( columns = { <val2> : <val3> } , inplace = True )	<name4> [ [ <val2> , <val3> ] ] ]
<name3> について、列 <val4> の値ごとに <val2> の数をカウント	<name3> . groupby ( [ <val4> ] ) [ <val2> ] . count ( )	<name6> . groupby ( [ <val2> ] ) [ <val3> ] . count ( )
<name1> の 'wether' 列の値をカウントする	<name1> [ 'weather' ] . value_counts ( )	<name4> . groupby ( ) [ 'sales' ] . count ( )
ラベルを <val4> として、 <name3> と <name6> の値からプロット	plt . plot ( <name3> , <name6> , label = <val4> )	plt . plot ( <name6> , <name3> , color = ( <val4> ) )
<name6> の欠損値が含まれている行を抽出し、その列数と行数を確認する	<name6> [ <name6> . isnull ( ) . any ( axis = 1 ) ] . shape	<name3> [ <name6> ] . any ( ) . any ( axis = 1 )
<name1> の列 <val2> に存在する値を重複を省いて取得	<name1> [ <val2> ] . unique ( )	from <name1> [ <val2> ] ] . mean ( )
<name1> の 'paypay' 列に含まれる欠損値を <val2> に置き換える	<name1> . fillna ( value = { 'payday' : <val2> } , inplace = True )	<name1> . rename ( [ <val2> ] ) . sum ( )
weather 'を軸に' temperature 'の平均値を求める。	df . groupby ( [ 'weather' ] ) [ 'temperature' ] . mean ( )	<name6> . groupby ( [ 'sales' ] ) . mean ( [ 'sales' ] . mean ( )
<name1> に含まれる欠損値の有無を行ごとに判定し、初めの５行について結果を表示	<name1> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . head ( )	<name3> [ <name1> . isnull ( ) . any ( axis = 1 ) ] . head ( )
<name1> の <val2> 列が <val3> より大きいものを抽出する	<name1> [ <name1> [ <val2> ] > <val3> ]	<name3> [ <name1> [ <val2> ] > <val3> ]
<name1> <name2> を参照し、年月日をハイフン区切りの形式に変更する。	<name1> <name2> = pd . to_datetime ( <name1> <name2> , format = '%Y-%m-%d' )	import <name1> as <name2> as <name2>
<name1> のうち、列 <val6> , <val2> , <val5> に１つでも欠損値がある行は削除	<name1> . dropna ( subset = [ <val6> , <val2> , <val5> ] , axis = 0 , inplace = True )	<name1> . dropna ( subset = [ <val2> , <val3> , <val5> ] , axis , inplace = True )
<name2> の下 5 行を表示する	<name2> . tail ( )	<name2> . head ( )
グラフのタイトルを <val1> とする。	plt . title ( <val1> )	plt . title ( <val1> )
<name1> の列 <val2> を降順で並び替え、最初の５行を表示	<name1> . sort_values ( by = <val2> , ascending = True ) . head ( )	<name1> . sort_values ( by = <val2> , ascending = True ) . head ( )
<name3> の <val4> 列の値を折れ線グラフとして表示する	<name3> [ <val4> ] . plot ( )	<name3> [ <val2> , <val4> ] ] . head ( )
<name3> のうち、 index が <val4> の行のみを取得	<name3> . loc [ <val4> ]	<name6> . loc [ <val2> ]
<name4> のインデックスを確認する	<name4> . index	import <name4> <name4> <name4> . columns
<name3> の形状を取得する。	<name3> . dtypes	<name5> . describe ( )
列’ temperature ', 列' temperature_rolling_mean ', 列' temperature_pct_change 'の値をサイズ <val6> × <val4> 、透過度 <val5> の折れ線グラフで表示	df . plot ( y = [ 'temperature' , 'temperature_rolling_mean' , 'temperature_pct_change' ] , figsize = ( <val6> , <val4> ) , alpha = <val5> )	<name1> . plot ( y = [ <val1> , 'temperature_rolling_mean' , 'temperature_rolling_mean' , 'temperature_rolling_mean' , <val2> ] , figsize = ( <val5> ) , alpha = <val6> ] )
<name1> のインデックスを datetime 型に変換する	<name1> . index = pd . to_datetime ( <name1> . index , format = '%Y-%m-%d' )	<name4> . index = pd . index . index
. / data / lunch_box .csv 'をカンマ区切りで読み込んで、 <name6> とする	<name6> = pd . read_csv ( './data/lunch_box.csv' , sep = ',' )	<name6> = pd . read_csv ( './data/lunch_box.csv' , sep = ',' )
回帰係数を算出	reg . coef_	<name5> [ <val2> ) .
グラフのデザインを seaborn のスタイルに適用する	sns . set ( )	<name5> . sort_values ( ) . head ( )
列 <val3> に欠損値があれば <val1> に置換する	df . fillna ( value = { <val3> : <val1> } , inplace = True )	random . fillna ( <val1> , <val2> )
x 軸のラベルをそれぞれ <val1> , <val2> , <val3> とする	plt . xticks ( x , [ <val1> , <val2> , <val3> ] )	plt . xticks ( <val1> , <val2> , <val3> )
<name1> の <val3> 列の移動平均を <name4> サイズを <val5> として計算し、 <val2> 列とする	<name1> [ <val2> ] = <name1> [ <val3> ] . rolling ( <name4> = <val5> ) . mean ( )	<name4> . plot ( kind = [ <val5> , <val3> ] ) [ <val5> ] . mean ( )
<name1> <name2> を <name3> という名前でインポートする。	import <name1> <name2> as <name3>	import <name1> <name2> as <name3>
<name4> から <name3> と <name1> をインポート	from <name4> import <name3> , <name1>	import <name1> <name4> as <name3>
<name1> のデータ型を確認する	<name1> . dtypes	<name1> . dtypes
線形回帰直線を引く	plt . plot ( X , reg . predict ( X ) )	random . LinearRegression ( )
<name1> の最後の 5 行を表示させる	<name1> . tail ( )	<name1> . tail ( )
. / data / lunch_box .csv をカンマ区切りで読み込み、 <name1> として扱う	<name1> = pd . read_csv ( './data/lunch_box.csv' , sep = ',' )	<name6> = pd . read_csv ( './data/lunch_box.csv' , sep = ',' )
<name5> の列 <val6> について、頭から <name1> サイズ <val3> で移動平均を算出	<name5> [ 'temperature_rolling_mean' ] = <name5> [ <val6> ] . rolling ( <name1> = <val3> ) . mean ( )	from <name1> [ <val2> , <val3> ] ] . head ( <name5> )
<name1> の最初の <val2> 行を表示させる	<name1> . head ( <val2> )	<name6> . head ( <val2> )
グラフの大きさを <val5> × <val4> に指定	plt . figure ( figsize = ( <val5> , <val4> ) )	plt . figure ( figsize = ( <val2> , <val4> ) ) )
<name4> の行数と列数を確認する	<name4> . shape	<name6> . shape
<name1> の最初の 5 行を表示させる	<name1> . head ( )	<name5> . head ( )
y 軸のラベルをそれぞれ <val1> , <val2> , <val3> とする	plt . yticks ( x , [ <val1> , <val2> , <val3> ] )	plt . xticks ( <val1> , <val2> , <val3> )
列 <val1> の値が 0 より大きいとき <val2> に置き換えて、初めの 5 行を表示する。	pd . DataFrame ( df [ <val1> ] . mask ( df [ <val1> ] > 80 , <val2> ) ) . head ( )	df [ <val1> ] = df [ <val2> ] . head ( ) . head ( )
データフレームの <val5> の値が <val4> よりも大きければ、その値を <val6> に置換し、最初の５行を出力	pd . DataFrame ( df [ <val5> ] . mask ( df [ <val5> ] > <val4> , <val6> ) ) . head ( )	<name6> . groupby ( [ <val2> , <val3> ] ) [ <val5> ] . head ( )
グラフの <name1> 軸の目盛り文字列を <name1> から [ <val2> , <val3> , <val4> ] に変更	plt . xticks ( <name1> , [ <val2> , <val3> , <val4> ] )	plt . xticks ( <name1> , [ <val2> , <val2> ] )
<name1> を <val2> に utf -8 で保存する	<name1> . to_csv ( <val2> , encoding = 'utf-8' )	<name6> . to_csv ( <val2> , encoding = 'utf-8' )
グリッドを表示する	plt . grid ( True )	grid . grid ( )
<name1> の <val2> 列と <val3> 列の相関を求める	<name1> [ [ <val2> , <val3> ] ] . corr ( )	<name1> [ [ <val2> , <val3> ] ] ] . head ( )
' sales' 列と <val1> 列が降順になるよう <name3> をソートし、上 5 行を表示する	<name3> . sort_values ( [ 'sales' , <val1> ] , ascending = False ) . head ( )	<name1> . sort_values ( [ 'sales' , 'sales' ] , ascending = False ) . head ( )
<name1> について、列 <val2> , 列 <val3> の値ごとに 'soldout' の数をカウント	<name1> . groupby ( [ <val2> , <val3> ] ) [ 'sales' ] . sum ( )	<name1> . groupby ( [ <val2> , <val3> ] ) [ <val3> ] . count ( )
<name1> の <name6> モジュールを <name6> としてインポートする	import <name1> . random as <name6>	import <name6> <name6> as <name1>
<name1> の列 <val2> , 列 <val3> について最初の５行を表示	<name1> [ [ <val2> , <val3> ] ] . head ( )	<name5> [ [ <val2> , <val3> ] ] ] . head ( )
<name1> の <val3> 列内の前の行との差を計算し、 <val2> 列とする	<name1> [ <val2> ] = <name1> [ <val3> ] . diff ( periods = 1 )	<name5> [ <val2> , <val3> ] ] . head ( )
<name1> の <val2> を参照し、各要素の出現回数を取得する	<name1> [ <val2> ] . value_counts ( )	<name5> [ <val2> ]
データ <name4> の absences についてのヒストグラムを表示	plt . hist ( <name4> [ 'absences' ] )	<name4> [ <val5> ] . head ( )
切片を算出	reg . intercept_	random . seed ( )
<name6> の <val3> 列を <val4> 列とする	<name6> . rename ( columns = { <val3> : <val4> } , inplace = True )	<name5> [ [ <val2> , <val3> ] ] ]
<name1> の列 <val2> について、頭から <name3> サイズ <val4> で移動平均を算出	<name1> [ 'temperature_rolling_mean' ] = <name1> [ <val2> ] . rolling ( <name3> = <val4> ) . mean ( )	<name5> [ <val2> , <val4> ] ] ] . mean ( )
<name1> の統計情報を取得する	<name1> . describe ( )	<name1> . describe ( )
<name1> <name5> 'を' <name2> 'としてインポートする。	import <name1> <name5> as <name2>	from <name1> import <name2> , <name5> as <name5>
<name6> の <val3> 列を値としたヒストグラムを表示する	plt . hist ( <name6> [ <val3> ] )	plt . plot ( <name6> , <name6> = [ <val3> ] )
<name3> の先頭の <val5> 行を表示	<name3> . head ( <val5> )	<name6> . head ( )
<val1> 行 <val2> 列のグラフの <val1> つ目を指定	plt . subplot ( <val1> , <val2> , <val1> )	plt . subplot ( <val1> , <val2> , <val2> )
<name1> から <name2> をインポートする	from <name1> import <name2>	import <name1> as <name2>
データ <name3> の absences についての標準偏差を取得	<name3> [ 'absences' ] . std ( )	<name5> [ 'absences' ] . describe ( )
<name1> の列 <val2> の値を折れ線グラフとしてプロット	<name1> [ <val2> ] . plot ( )	<name3> [ <val2> ] . plot ( )
<name1> の columns を表示する	<name1> . columns	<name5> . shape
