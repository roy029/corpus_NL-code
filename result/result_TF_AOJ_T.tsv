<name3> を <name2> を <val5> で割った商の階乗分の一にする	<name3> // = factorial ( <name2> // <val5> )	<name3> // = factorial ( <name2> // <val5> )
入力された文字列を空白で分割した字句列の各要素に <name3> をパラメータとして <name3> の整数値を返す関数を適用した列のリストを <name1> とする	<name1> = list ( map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) ) )	<name1> = list ( map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) ) )
( <name2> 、 <name6> ) の組が ( <name4> 、 <name3> ) の組と等しいとき、	if ( <name2> , <name6> ) == ( <name4> , <name3> ) :	continue ( <name2> , <name6> ) == ( <name4> , <name3> ) :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name4> 、 <name3> 、 <name5> とする	<name4> , <name3> , <name5> = input ( ) . split ( )	str , <name3> , <name5> = input ( ) . split ( )
<name1> の <name4> の末尾に ( <name3> 、 <name5> ) の組を追加する	<name1> . <name4> . append ( ( <name3> , <name5> ) )	<name2> . <name4> . append ( ( <name3> , <name5> ) )
<name3> の <name6> に <name2> の <name4> 番目を掛けた値に <name5> の <name4> 番目を加えた値から、つまり末尾までの部分列を <val1> だけ増加させる	<name3> [ <name6> * <name2> [ <name4> ] + <name5> [ <name4> ] : ] += <val1>	<name5> [ <name3> [ <name6> * <name2> [ <name4> ] + <name5> [ <name4> ] : ] += <val1>
<name2> ( <name6> , ( <name1> , <name3> , <val4> ) )	<name2> ( <name6> , ( <name1> , <name3> , <val4> ) )	set ( <name2> ( <name6> , ( <name1> , <name3> , <val4> ) ) )
<name3> の末尾に <name2> . <name5> ( <name6> , <name1> ) のとき <name2> . <name4> ( <name6> , <name1> ) 、そうでなければ <val3> を追加する	<name3> . append ( <name2> . <name4> ( <name6> , <name1> ) if <name2> . <name5> ( <name6> , <name1> ) else <val3> )	<name1> . append ( <name2> . <name4> ( <name6> , <name1> ) if <name2> . <name5> ( <name6> , <name1> ) else <val3> )
{ 0 : . 6 f }を書式として <name4> で整形した文字列を出力する	print ( '{0:.6f}' . format ( <name4> ) )	range ( <val6> . format ( <name4> ) )
<name3> の <name1> の間、次を繰り返す	while <name3> . <name1> :	for <name3> . <name1> in <name3> . <name1> :
<name3> の <name4> 番目と <name3> の <name4> から <val1> を引いた値番目を入れ替える	<name3> [ <name4> ] , <name3> [ <name4> - <val1> ] = <name3> [ <name4> - <val1> ] , <name3> [ <name4> ]	<name4> [ <name4> ] , <name3> [ <name4> - <val1> ] = <name3> [ <name4> - <val1> ] , <name3> [ <name4> ]
<name4> を追加して <name3> を拡張する	<name3> . extend ( <name4> )	<name3> . extend ( <name4> )
<name5> の <val4> 番目の末尾に <name3> を追加する	<name5> [ <val4> ] . append ( <name3> )	<name2> [ <val4> ] . append ( <name3> )
<name1> の <val5> 番目が <name3> から <name6> を引いた値から <val2> を引いた値に <name1> の <val2> 番目を加えた値より大きいとき、	if <name1> [ <val5> ] > ( <name3> - <name6> - <val2> ) + <name1> [ <val2> ] :	if <name1> [ <val5> ] > <name3> - <name6> - <val2> + <name1> [ <val2> ] :
<name2> の <name1> の <name6> から <val3> を引いた値番目に <name2> の <name5> の <name4> から <val3> を引いた値番目を掛けた値に <name2> の <name5> の <name6> から <name4> を引いた値番目を掛けた値を返す	return <name2> . <name1> [ <name6> - <val3> ] * <name2> . <name5> [ <name4> - <val3> ] * <name2> . <name5> [ <name6> - <name4> ]	x return <name2> . <name1> [ <name6> - <val3> ] * <name2> . <name5> [ <name4> - <val3> ] * <name2> . <name5> [ <name6> - <name4> ]
<name3> . <name5> . <name6> ( <name1> )	<name3> . <name5> . <name6> ( <name1> )	<name3> . <name5> . <name6> ( <name1> )
<val4> から <val1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> , <val1> ) :	continue for <name6> in range ( <val4> , <val1> ) :
<name3> の <name1> から読み込んだデータを英小文字に変換した文字列を <name6> とする	<name6> = <name3> . <name1> . read ( ) . lower ( )	<name2> = <name3> . <name1> . read ( ) . lower ( )
<name4> を <name5> に <name3> を加えた値だけ増加させる	<name4> += <name5> + <name3>	<name4> += ( <name5> + <name3> )
<name4> . <name5> ( ) を順に <name3> として、繰り返す	for <name3> in <name4> . <name5> ( ) :	for <name3> in <name4> . <name5> ( ) :
<name3> 、 <name1> 、 <name6> 、 <name4> から <name2> を引いた値、 <name5> から <name4> を引いた値の最小値の最大値を <name3> とする	<name3> = max ( <name3> , min ( <name1> , <name6> , <name4> - <name2> , <name5> - <name4> ) )	else = max ( <name3> , min ( <name1> , <name6> , <name4> - <name2> , <name5> - <name4> ) )
<name3> の整数値を <name1> とする	<name1> = int ( <name3> )	( <name1> = int ( <name3> ) )
<name5> の <name4> 番目の <val2> 番目の整数値を <name6> とする	<name6> = int ( <name5> [ <name4> ] [ <val2> ] )	<name6> = int ( <name5> [ <name4> ] [ <val2> ] )
<name5> の <name1> 番目の <name6> 番目が、つまり未定値と等しいとき、	if <name5> [ <name1> ] [ <name6> ] is not None :	if <name5> [ <name1> ] [ <name6> ] == None :
<name6> . <name4> ( <val1> * <name3> , <val1> * <name3> + <val2> , <name3> ) を <name5> とする	<name5> = <name6> . <name4> ( <val1> * <name3> , <val1> * <name3> + <val2> , <name3> )	<name5> = <name6> . <name4> ( <val1> * <name3> , <val1> * <name3> + <val2> , <name3> )
<name1> に <val3> を加えた値を <val4> で割った余りを <name1> とする	<name1> = ( <name1> + <val3> ) % <val4>	<name1> = ( <name1> + <val3> ) % <val4>
<name3> 、 <name1> の総和から <name3> 、 <name4> から <val6> を引いた値の総和を引いた値を出力する	print ( <name3> . sum ( <name1> ) - <name3> . sum ( <name4> - <val6> ) )	range ( <name3> . sum ( <name1> ) - <name3> . sum ( <name4> - <val6> ) )
<name5> の <name1> 番目の <val3> 番目を <name2> だけ減少させる	<name5> [ <name1> ] [ <val3> ] -= <name2>	<name3> [ <name1> ] [ <val3> ] -= <name2>
<name2> の <name1> の <name4> 番目、 <name2> の <name3> の <name6> 番目の最小値を <name2> の <name1> の <name4> 番目にする	<name2> . <name1> [ <name4> ] = min ( <name2> . <name1> [ <name4> ] , <name2> . <name3> [ <name6> ] )	<name6> . <name1> [ <name4> ] = min ( <name2> . <name1> [ <name4> ] , <name2> . <name3> [ <name6> ] )
<name2> ( <name5> . <name6> [ <val4> : ] )	<name2> ( <name5> . <name6> [ <val4> : ] )	<name2> ( <name5> . <name6> [ <val4> : ] )
<val5> が <name2> の <name1> 番目の先頭の長さより小さくかつ <name2> の <name1> 番目の先頭の長さが <val4> より小さいとき、	if <val5> < len ( <name2> [ <name1> ] [ 0 ] ) and len ( <name2> [ <name1> ] [ 0 ] ) < <val4> :	list ( <val5> < len ( <name2> [ <name1> ] [ 0 ] ) and len ( <name2> [ <name1> ] [ 0 ] ) < <val4> :
<val6> を <name2> の <val1> を <name5> だけ左シフトした値から <val1> を引いた値番目の <val6> 番目にする	<name2> [ ( <val1> << <name5> ) - <val1> ] [ <val6> ] = <val6>	<name2> [ ( <val1> << <name5> ) - <val1> ] [ <val6> ] = <val6>
<name2> の先頭を除いた部分列を展開し、それぞれ <name1> 、 <name4> 、 <name3> とする	<name1> , <name4> , <name3> = <name2> [ 1 : ]	<name1> , <name4> , <name3> = <name2> [ 1 : ]
<val3> から <name6> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val3> , len ( <name6> ) ) :	. for <name2> in range ( <val3> , len ( <name6> ) ) :
<val4> から <name1> に <val3> を加えた値の平方根の切り上げ整数値未満までの <val2> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> , math . ceil ( math . sqrt ( <name1> + <val3> ) ) , <val2> ) :	( for <name6> in range ( <val4> , math . ceil ( math . sqrt ( <name1> + <val3> ) ) , <val2> ) :
<name1> が <name3> の <name4> 番目以下のとき、	if <name1> <= <name3> [ <name4> ] :	if <name1> <= <name3> [ <name4> ] :
<name4> を英小文字に変換した文字列を <name5> とする	<name5> = <name4> . lower ( )	<name6> = <name4> . lower ( )
<name1> を <name3> 倍にする	<name1> *= <name3>	not <name1> *= <name3>
<name2> の <name5> の <name3> の <val6> 番目番目の末尾に ( <name3> の先頭、 <name3> の <val4> 番目 ) の組を追加する	<name2> . <name5> [ <name3> [ <val6> ] ] . append ( ( <name3> [ 0 ] , <name3> [ <val4> ] ) )	<name5> . <name5> [ <name3> [ <val6> ] ] . append ( ( <name3> [ 0 ] , <name3> [ <val4> ] ) )
<name3> から読み込んだ一行の両端から空白改行を取り除いた文字列を <name5> とする	<name5> = <name3> . readline ( ) . strip ( )	( <name5> = <name3> . readline ( ) . strip ( ) )
<name3> を <val4> を <name2> だけ左シフトした値との論理和にする	<name3> | = <val4> << <name2>	<name1> | = ( <val4> << <name2> )
<name6> の両端キューを <name5> とする	<name5> = deque ( <name6> )	) <name5> = deque ( <name6> )
<name5> . <name1> ( <name4> . <name3> )	<name5> . <name1> ( <name4> . <name3> )	<name3> . <name1> ( <name4> . <name3> )
<name3> の <val1> 乗から <name4> 未満までの <name3> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name3> ** <val1> , <name4> , <name3> ) :	. for <name3> in range ( <name3> ** <val1> , <name4> , <name3> ) :
<name1> <name3> - <name2>	<name1> <name3> - <name2>	( <name1> <name3> - <name2> )
<name3> の先頭を取り出した値を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name3> . pop ( )	<name2> , <name4> , <name1> = <name3> . pop ( )
<name6> ( <name3> [ <val5> ] ) に <val1> を加えた値に <name3> [ <val2> ] の文字列を加えた値に <val1> を加えた値に <name3> の <val4> 番目の文字列を加えた値を出力する	print ( <name6> ( <name3> [ <val5> ] ) + <val1> + <name6> ( <name3> [ <val2> ] ) + <val1> + <name6> ( <name3> [ <val4> ] ) )	<name6> ( <name3> [ <val5> ] ) + <val1> + str ( <name3> [ <val2> ] ) + <val1> + str ( <name3> [ <val4> ] ) )
<name1> の <name2> が <val4> と等しいとき、	if <name1> . <name2> == <val4> :	: if <name1> . <name2> == <val4> :
<name3> の <name6> 番目が <name2> より小さいとき、	if <name3> [ <name6> ] < <name2> :	while <name3> [ <name6> ] < <name2> :
<name4> の <name2> を順に <name5> 、 <name1> として、繰り返す	for <name5> , <name1> in <name4> . <name2> :	. for <name5> , <name1> in <name4> . <name2> :
<name5> の末尾に ( <name4> 、 <name1> ) からなる列を追加する	<name5> . append ( [ <name4> , <name1> ] )	<name5> . append ( [ <name4> , <name1> ] )
<name4> が <name2> より大きいとき、 <blk> <name5> の <name1> から <val3> を引いた値番目を <val6> だけ増加させる </blk>	if <name4> > <name2> : <blk> <name5> [ <name1> - <val3> ] += <val6> </blk>	try : <blk> <name5> [ <name1> - <val3> ] += <val6> </blk>
- <name4> の y 座標を <name3> で割った値を <name2> とする	<name2> = - <name4> . y / <name3>	( <name2> = - <name4> . y / <name3> )
<name1> の <name3> に対応する値、もし存在しなければ <name2> を返す	return <name1> . <name3> . get ( <name2> )	x return <name1> . <name3> . get ( <name2> )
<name2> の <name5> の <name6> 番目の末尾に ( <name4> 、 <name2> の <name5> の <name4> 番目の長さ、 <name3> ) からなる列を追加する	<name2> . <name5> [ <name6> ] . append ( [ <name4> , len ( <name2> . <name5> [ <name4> ] ) , <name3> ] )	<name1> . <name5> [ <name6> ] . append ( [ <name4> , len ( <name2> . <name5> [ <name4> ] ) , <name3> ] )
<name4> が <val2> 以上かつ <name6> の <name4> 番目が <name3> より大きい間、次を繰り返す	while ( <name4> >= <val2> ) and ( <name6> [ <name4> ] > <name3> ) :	del ( <name4> >= <val2> and <name6> [ <name4> ] > <name3> ) :
( <val2> 、 <name1> に <val4> に <val3> に <val5> を掛けた値を加えた値を掛けた値、 <name6> に <val4> に <val3> に <val2> を掛けた値を加えた値を掛けた値、 <name1> に <val4> を掛けた値、 - <name3> 、 <name5> -6 * <name1> -4 * <name6> - <name1> から <name3> を引いた値から <name6> を引いた値に -3 を掛けた値 ) からなる列の総和を返す	return sum ( [ <val2> , <name1> * ( <val4> + <val3> * <val5> ) , <name6> * ( <val4> + <val3> * <val2> ) , <name1> * <val4> , - <name3> , ( <name5> - 6 * <name1> - <val4> * <name6> - <name1> - <name3> - <name6> ) * - <val2> ] )	assert [ <val2> , <name1> * ( <val4> + <val3> * <val5> ) , <name6> + <val4> * ( <val3> * <val2> ) , <name1> * <val4> , ( <name3> - <name5> , <name6> * ( <name1> - <name3> ) ) * ( <name6> - <name1> ) * ( <name3> ) ) ]
<name6> の <name5> の <name3> から <name2> を引いた値番目の末尾に ( <name1> から <name2> を引いた値、 <name4> ) の組を追加する	<name6> . <name5> [ <name3> - <name2> ] . append ( ( <name1> - <name2> , <name4> ) )	<name5> [ <name3> - <name2> ] . append ( ( <name1> - <name2> , <name4> ) )
<name1> の長さを <val5> で割った余りが <val3> と等しいとき、	if len ( <name1> ) % <val5> == <val3> :	while ( len ( <name1> ) % <val5> ) == <val3> :
0 から <name6> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]
<name5> が <name4> に <name6> を加えた値より大きいとき、	if <name5> > <name4> + <name6> :	if <name5> > <name4> + <name6> :
<name6> の <name4> 番目を <name5> に <val1> を加えた値を <val2> で割った値だけ増加させる	<name6> [ <name4> ] += ( <name5> + <val1> ) / <val2>	<name6> [ <name4> ] += ( <name5> + <val1> ) / <val2>
<name5> の末尾に <name6> から <name1> を引いた値を追加する	<name5> . append ( <name6> - <name1> )	<name1> . append ( <name6> - <name1> )
<name1> を <name6> の <name2> の <val5> 番目にする	<name6> . <name2> [ <val5> ] = <name1>	( <name6> . <name2> [ <val5> ] = <name1> )
<name1> の <name4> に <val3> を加えた値番目が <val2> と等しいとき、	if <name1> [ <name4> + <val3> ] == <val2> :	while <name1> [ <name4> + <val3> ] == <val2> :
<name3> の <name5> 番目が -1 と等しくないとき、	if <name3> [ <name5> ] != - 1 :	while <name3> [ <name5> ] != - 1 :
<val3> から <name1> 未満までの数列の各要素を <name5> とし、 <val3> から <name4> 未満までの数列の各要素を <name2> とし、 <val3> の列の列を <name6> とする	<name6> = [ [ <val3> for <name2> in range ( <name4> ) ] for <name5> in range ( <name1> ) ]	<name6> = [ [ <val3> for <name2> in range ( <name4> ) ] for <name5> in range ( <name1> ) ]
ソートされた順序を保ったまま <name6> の <val5> 番目を <name2> に挿入できる位置を <name4> とする	<name4> = bisect . bisect_left ( <name2> , <name6> [ <val5> ] )	<name4> = bisect . bisect_left ( <name2> , <name6> [ <val5> ] )
<name3> の末尾に <name1> から <name2> に <name1> を加えた値未満までの数列のリストを追加する	<name3> . append ( list ( range ( <name1> , <name2> + <name1> ) ) )	<name3> . append ( list ( range ( <name1> , <name2> + <name1> ) ) )
<name4> の各要素を <name6> 、 <name1> とし、 <name1> の列の総和を出力する	print ( sum ( [ <name1> for <name6> , <name1> in <name4> ] ) )	) print ( sum ( [ <name1> for <name6> , <name1> in <name4> ] ) )
<name1> が ( <name6> 、 <name3> 、 <name2> 、 <name5> 、 <name4> 、 <name1> 、 <name6> 、 <name3> ) からなる列に含まれないとき、	if <name1> not in [ <name6> , <name3> , <name2> , <name5> , <name4> , <name1> , <name6> , <name3> ] :	if not <name1> not in [ <name6> , <name3> , <name2> , <name5> , <name4> , <name1> , <name6> , <name3> ] : , [ <name3> , <name3> ] :
<name3> ( <name2> - <name4> , <name1> - <name5> , <name6> - <name4> , <name3> - <name5> ) を <name6> とする	<name6> = <name3> ( <name2> - <name4> , <name1> - <name5> , <name6> - <name4> , <name3> - <name5> )	<name6> = <name3> ( <name2> - <name4> , <name1> - <name5> , <name6> - <name4> , <name3> - <name5> )
<name3> の <name2> を <val5> で割った商番目を <name4> とする	<name4> = <name3> [ <name2> // <val5> ]	<name4> = <name3> [ <name2> // <val5> ]
<name1> ( <name2> , <name6> -1 , <name4> [ ( <name3> , <name5> ) ] ) を <name5> とする	<name5> = <name1> ( <name2> , <name6> - 1 , <name4> [ ( <name3> , <name5> ) ] )	<name6> = <name1> ( <name2> , <name6> - 1 , <name4> [ ( <name3> , <name5> ) ] )
<name5> の <name1> の <name2> 番目を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name5> . <name1> [ <name2> ] :	for <name3> , <name6> in <name5> . <name1> [ <name2> ] :
<name5> ( <name1> , [ - <name2> , <name6> ] )	<name5> ( <name1> , [ - <name2> , <name6> ] )	<name5> ( <name1> , [ - <name2> , <name6> ] )
<val6> を間に入れて <name5> を連結した文字列を <name3> とする	<name3> = <val6> . join ( <name5> )	<name3> = <val6> . join ( <name5> )
<name3> . <name6> ( <val1> )	<name3> . <name6> ( <val1> )	<name3> . <name6> ( <val1> )
<name2> と <name3> を割ったときの ( 商を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = divmod ( <name2> , <name3> )	<name1> , <name4> = divmod ( <name2> , <name3> )
改行せずに <val3> を書式として <name5> の <name2> から <val4> を引いた値番目で整形した文字列を出力する	print ( <val3> . format ( <name5> [ <name2> - <val4> ] ) , end = '' )	end = <val3> . format ( <name5> [ <name2> - <val4> ] ) , end = '' )
<name2> が <val5> と等しいとき、 <blk> <name6> を <val4> だけ増加させる </blk>	if <name2> == <val5> : <blk> <name6> += <val4> </blk>	<blk> if <name2> == <val5> : <blk> <name6> += <val4> </blk>
( <val2> ) からなる列の <val3> に <name4> を掛けた値に <val3> を加えた値回分の列を <name5> とする	<name5> = [ <val2> ] * ( <val3> * <name4> + <val3> )	<name5> = [ <val2> ] * ( <val3> * <name4> + <val3> )
<name4> . <name3> ( <name2> . <name1> , <name6> , <name5> ) を <name5> とする	<name5> = <name4> . <name3> ( <name2> . <name1> , <name6> , <name5> )	<name5> = <name4> . <name3> ( <name2> . <name1> , <name6> , <name5> )
<name1> の先頭、 <name1> の <val4> 番目、 <name2> の先頭を <name3> 、 <name5> 、 <name6> とする	<name3> , <name5> , <name6> = <name1> [ 0 ] , <name1> [ <val4> ] , <name2> [ 0 ]	<name3> , <name5> , <name6> = <name1> [ 0 ] , <name1> [ <val4> ] , <name2> [ 0 ]
<val5> の <name6> 乗から <val3> を引いた値を <name1> とする	<name1> = <val5> ** <name6> - <val3>	<name1> = <val5> ** <name6> - <val3>
<name2> が <name6> と等しくないとき、 <blk> <name4> を <val5> だけ増加させる </blk>	if <name2> != <name6> : <blk> <name4> += <val5> </blk>	<blk> if <name2> != <name6> : <blk> <name4> += <val5> </blk>
<name1> の <name5> を <name3> として <val2> を <name4> として <name6> をソートする	<name6> . sort ( <name3> = <name1> . <name5> , <name4> = <val2> )	<name2> . sort ( <name3> = <name1> . <name5> , <name4> = <val2> )
<val3> が <name6> より小さいとき、 <blk> <val5> を間に入れて <name4> の <name6> から <val2> を引いた値番目の各要素に整数を適用した列を連結した文字列を出力する </blk>	if <val3> < <name6> : <blk> print ( <val5> . join ( map ( str , <name4> [ <name6> - <val2> ] ) ) ) </blk>	\ print ( <val3> if <name6> < <val5> : <blk> print ( <val5> . join ( map ( str , <name4> [ <name6> - <val2> ] ) ) ) </blk>
<name4> の末尾に <name2> の <val6> 番目に <name1> の <val5> 番目を加えた値に <name3> の先頭を加えた値を追加する	<name4> . append ( <name2> [ <val6> ] + <name1> [ <val5> ] + <name3> [ 0 ] )	<name5> . append ( <name2> [ <val6> ] + <name1> [ <val5> ] + <name3> [ 0 ] )
<name4> のとき、 <blk> <val3> を返す </blk>	if <name4> : <blk> return <val3> </blk>	if <name4> : <blk> return <val3> </blk>
<name2>	<name2>	print ( <name2> )
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列のリストを <name2> とする	<name2> = list ( map ( int , input ( ) . split ( <val5> ) ) )	<name2> = list ( map ( int , input ( ) . split ( <val5> ) ) )
0 から <name2> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name2> ) :	: for <name1> in range ( <name2> ) :
0 から <name3> 未満までの数列を順に <name5> として、繰り返す <blk> <name2> の末尾に入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組を追加する </blk>	for <name5> in range ( <name3> ) : <blk> <name2> . append ( tuple ( map ( int , input ( ) . split ( ) ) ) ) </blk>	for <name5> in range ( <name3> ) : <blk> <name2> . append ( tuple ( input ( ) . split ( ) ) ) </blk>
<name2> を <val5> だけ左シフトする	<name2> << = <val5>	( <name2> << = <val5> )
<name5> の <name4> が、つまり未定値と等しくかつ <name5> の <name6> が、つまり未定値と等しいとき、	if <name5> . <name4> == None and <name5> . <name6> == None :	. if <name5> . <name4> is not None and <name5> . <name6> is not None :
<name4> が <name3> 以下かどうかが <name1> から <name4> を引いた値より小さくかつ <name5> の <name3> から <name4> を引いた値番目が <name5> の <name3> に <name4> を加えた値番目と等しい間、次を繰り返す	while <name4> <= <name3> < <name1> - <name4> and <name5> [ <name3> - <name4> ] == <name5> [ <name3> + <name4> ] :	: while <name4> <= <name3> < <name1> - <name4> and <name5> [ <name3> - <name4> ] == <name5> [ <name3> + <name4> ] :
<val3> から <name2> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , <name2> ) :	continue for <name6> in range ( <val3> , <name2> ) :
<name2> が <name5> の <name3> 番目より大きいとき、	if <name2> > <name5> [ <name3> ] :	> <name2> > <name5> [ <name3> ] :
<name3> を <name2> の <name1> から <val6> を引いた値から <name5> を引いた値番目の <name5> 番目にする	<name2> [ <name1> - <val6> - <name5> ] [ <name5> ] = <name3>	<name4> [ <name2> [ <name1> - <val6> - <name5> ] [ <name5> ] = <name3>
<name5> . <name4> ( <name3> , <name1> )	<name5> . <name4> ( <name3> , <name1> )	<name2> . <name4> ( <name3> , <name1> )
<name2> または <name3> ( <name1> ) を <name2> とする	<name2> = <name2> or <name3> ( <name1> )	<name2> = <name2> or <name3> ( <name1> )
\ <name1> ( <val6> % <val4> . <name5> ( <name2> ) ) \	\ <name1> ( <val6> % <val4> . <name5> ( <name2> ) ) \	\ <name1> ( <val6> % <val4> . <name5> ( <name2> ) ) \
<name6> を <val5> で割った余りが <val2> と等しいとき、	if <name6> % <val5> == <val2> :	> ( <name6> % <val5> == <val2> ) :
<name5> を <val3> だけ右シフトする <name1> を <val3> だけ右シフトする	<name5> >> = <val3> <name1> >> = <val3>	<name1> >> = <val3> <name1> >> = <val3>
<name3> のキーの集まりをソートした列を順に <name6> として、繰り返す	for <name6> in sorted ( <name3> . keys ( ) ) :	. for <name6> in sorted ( <name3> . keys ( ) ) :
<name4> かつ <name6> が <name4> の末尾の先頭以下の間、次を繰り返す	while <name4> and <name6> <= <name4> [ - 1 ] [ 0 ] :	del <name4> and <name6> <= <name4> [ - 1 ] [ 0 ] :
<name3> の <val6> 番目を出力する	print ( <name3> [ <val6> ] )	print ( <name3> [ <val6> ] )
ソートされた順序を保ったまま <name5> を <name4> に挿入できる位置を出力する	print ( bisect_left ( <name4> , <name5> ) )	print ( bisect . bisect_left ( <name4> , <name5> ) )
<name3> ( * <name6> ( <name1> , <name2> ( ) . <name4> ( ) ) ) を <name5> とする	<name5> = <name3> ( * <name6> ( <name1> , <name2> ( ) . <name4> ( ) ) )	<name6> = <name3> ( * <name6> ( <name1> , <name2> ( ) . <name4> ( ) ) )
<name5> が <name6> から <name3> を引いた値から <name5> を引いた値より小さいかどうかが <name1> 以下のとき、	if <name5> < ( <name6> - <name3> - <name5> ) <= <name1> :	list ( <name5> < <name6> - <name3> - <name5> <= <name1> ) :
<name6> の末尾に ( <name4> から <name2> を引いた値、 <name1> から <name5> を引いた値 ) からなる列を追加する	<name6> . append ( [ <name4> - <name2> , <name1> - <name5> ] )	<name4> . append ( [ <name4> - <name2> , <name1> - <name5> ] )
<name6> に対応する値、もし存在しなければ <name2> 、 <name5> に <val1> を加えた値を出力する	print ( <name6> . get ( <name2> , <name5> + <val1> ) )	print ( <name6> . get ( <name2> , <name5> + <val1> ) )
( <val6> ) からなる列、 ( <val6> ) からなる列、 ( <val6> ) からなる列を <name1> 、 <name4> 、 <name3> とする	<name1> , <name4> , <name3> = [ <val6> ] , [ <val6> ] , [ <val6> ]	<name2> , <name1> , <name4> , <name3> = [ <val6> ] , [ <val6> ] , [ <val6> ]
<name6> と <val1> の論理積のとき、	if <name6> & <val1> :	list ( <name6> & <val1> ) :
<name4> の組を <name2> とする	<name2> = tuple ( <name4> )	( <name2> = tuple ( <name4> ) )
<name3> を <name1> の <name4> 番目の <name5> 番目だけ増加させる	<name3> += <name1> [ <name4> ] [ <name5> ]	( <name3> += <name1> [ <name4> ] [ <name5> ] )
<name4> を順に <name5> 、 <name6> 、 <name3> として、繰り返す	for <name5> , <name6> , <name3> in <name4> :	. for <name5> , <name6> , <name3> in <name4> :
( ( <val2> , <val2> ) ) からなる辞書を <name5> とする	<name5> = { <val2> : <val2> }	<name5> = { <val2> : <val2> }
<name3> の先頭の長さを <name1> とする	<name1> = len ( <name3> [ 0 ] )	<name1> = len ( <name3> [ 0 ] )
<name2> の総和を <name5> で割った値、 <name3> の総和を <name5> で割った値を <name6> 、 <name1> とする	<name6> , <name1> = sum ( <name2> ) / <name5> , sum ( <name3> ) / <name5>	<name6> , <name1> = sum ( <name2> ) / <name5> , sum ( <name3> ) / <name5>
<name2> を <name5> の <name3> から <val1> を引いた値番目にする	<name5> [ <name3> - <val1> ] = <name2>	( <name5> [ <name3> - <val1> ] = <name2> )
<name2> が <name5> と等しいかどうかが <name1> と等しいかどうかが <name3> と等しいかどうかが -1 と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name5> == <name1> == <name3> == - 1 : <blk> break </blk>	\ break </blk> if <name2> == <name5> == <name1> == <name3> == - 1 : <blk> break </blk>
<name3> ( <name6> , <name2> , <name4> ) を出力する	print ( <name3> ( <name6> , <name2> , <name4> ) )	print ( <name3> ( <name6> , <name2> , <name4> ) )
<name5> の <name6> 番目に <name2> の <name1> 番目を掛けた値を <name4> とする	<name4> = <name5> [ <name6> ] * <name2> [ <name1> ]	<name4> = <name5> [ <name6> ] * <name2> [ <name1> ]
<name2> から <name1> を引いた値を返す	return <name2> - <name1>	yield <name2> - <name1>
<name3> . <name5> ( <name6> ) を返す	return <name3> . <name5> ( <name6> )	self return <name3> . <name5> ( <name6> )
<name6> の <name1> の <name3> を <name6> の <name1> にする	<name6> . <name1> = <name6> . <name1> . <name3>	<name2> . <name1> = <name6> . <name1> . <name3>
( <name1> 、 ( <name2> 、 <name5> ) の組 ) の組を <name3> とする	<name3> = ( <name1> , ( <name2> , <name5> ) )	<name3> = ( <name1> , ( <name2> , <name5> ) )
<name3> を <name3> に <name6> を加えた値で割った値を <name1> とする	<name1> = <name3> / ( <name3> + <name6> )	<name1> = <name3> / ( <name3> + <name6> )
<name6> の整数値から <name4> の整数値を引いた値が <val1> と等しくないとき、	if int ( <name6> ) - int ( <name4> ) != <val1> :	!= ( int ( <name6> ) - int ( <name4> ) ) != <val1> :
0 から <name5> から <name3> を引いた値に <val1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> - <name3> + <val1> ) :	for <name2> in range ( <name5> - <name3> + <val1> ) :
<name5> に <val3> を加えた値が <name2> と等しいとき、	if <name5> + <val3> == <name2> :	continue + <val3> == <name2> :
<name5> かつ <name6> の <name5> -1 番目と <name3> の論理積が <val2> と等しくかつ <name6> の <name5> 番目と <name1> の論理積が <val2> と等しい間、次を繰り返す	while <name5> and <name6> [ <name5> - 1 ] & <name3> == <val2> and <name6> [ <name5> ] & <name1> == <val2> :	while <name5> and ( <name6> [ <name5> - 1 ] & <name3> == <val2> and <name6> [ <name5> ] & <name1> ) == <val2> :
<name2> の <name3> を返す	return <name2> . <name3>	yield <name2> . <name3>
<name1> の <name2> の <name5> 番目が <name3> と等しくなくかつ <name1> の <name2> の <name5> 番目に <name4> を加えた値が <name1> の <name2> の <name6> 番目より小さいとき、	if <name1> . <name2> [ <name5> ] != <name3> and <name1> . <name2> [ <name5> ] + <name4> < <name1> . <name2> [ <name6> ] :	for <name3> in <name1> . <name2> [ <name5> ] != <name3> and <name1> . <name2> [ <name5> ] + <name4> < <name1> . <name2> [ <name6> ] :
現在の日時を <val3> だけ増加させる	now += <val3>	from now += <val3>
URDL を <name1> とする	<name1> = 'URDL'	<name1> = dict ( zip ' )
<name4> の先頭の <val6> 番目を <name2> とする	<name2> = <name4> [ 0 ] [ <val6> ]	<name2> = <name4> [ 0 ] [ <val6> ]
<name2> 、 <name2> の <name1> 番目を出力する	print ( 'S' , <name2> [ <name1> ] )	<name2> . print ( <name2> , <name2> [ <name1> ] )
( ( -1 、 -1 ) からなる列、 ( -1 、 <val6> ) からなる列、 ( -1 、 <val5> ) からなる列、 ( <val6> 、 -1 ) からなる列、 ( <val6> 、 <val6> ) からなる列、 ( <val6> 、 <val5> ) からなる列、 ( <val5> 、 -1 ) からなる列、 ( <val5> 、 <val6> ) からなる列、 ( <val5> 、 <val5> ) からなる列 ) からなる列を <name2> とする	<name2> = [ [ - <val5> , - <val5> ] , [ - <val5> , <val6> ] , [ - <val5> , <val5> ] , [ <val6> , - <val5> ] , [ <val6> , <val6> ] , [ <val6> , <val5> ] , [ <val5> , - <val5> ] , [ <val5> , <val6> ] , [ <val5> , <val5> ] ]	<name6> = [ [ - <val6> , - <val6> ] , [ - <val6> , <val6> ] , [ - <val6> , <val5> ] , [ <val6> , - <val6> ] , [ <val6> , <val6> ] , [ <val6> , <val6> ] , [ <val5> , <val6> ] , [ <val6> , <val5> ] , [ <val5> , <val6> , <val5> ] , [ <val5> , <val6> , <val5> ] , [ <val5> , <val5> , <val6> , <val5> , <val5> , <val5> , <val5> ] ] ]
<val4> が <name2> 以下のとき、	if <val4> <= <name2> :	list if <val4> <= <name2> :
<name6> の <name5> の <name6> の <name4> の <name2> 番目番目を <name2> とする	<name2> = <name6> . <name5> [ <name6> . <name4> [ <name2> ] ]	<name2> = <name6> . <name5> [ <name6> . <name4> [ <name2> ] ]
<name5> の末尾に <name1> に <name6> に <name3> を掛けた値を加えた値を追加する	<name5> . append ( <name1> + <name6> * <name3> )	<name5> . append ( <name1> + <name6> * <name3> )
<name2> が <val3> より小さくかつ <name6> ( ( <name4> , <name2> ) )	<name2> < <val3> and <name6> ( ( <name4> , <name2> ) )	<name1> < <val3> and <name6> ( ( <name4> , <name2> ) )
<name3> の総和を <name4> とするを <name2> とする	<name2> = <name4> = sum ( <name3> )	<name2> = <name4> = sum ( <name3> )
<val2> から <name1> 未満までの数列の各要素を <name6> とし、 <val2> の列を <name4> の <name5> にする	<name4> . <name5> = [ <val2> for <name6> in range ( <name1> ) ]	) . <name5> = [ <val2> for <name6> in range ( <name1> ) ]
<name5> の x 座標を <name6> で割った値を <name1> とする	<name1> = <name5> . x / <name6>	( <name1> = <name5> . x / <name6> )
<val3> の <val2> 乗を <name1> とする	<name1> = <val3> ** <val2>	<name1> = <val3> ** <val2>
sample - input . txt 、 <val3> を開いたファイルストリームを <name2> の <name6> にする	<name2> . <name6> = open ( 'sample-input.txt' , <val3> )	<name2> . <name6> = open ( 'sample-input.txt' , <val3> )
<name3> の <val2> 番目を <name1> の <name5> にする	<name1> . <name5> = <name3> [ <val2> ]	<name1> . <name5> = <name3> [ <val2> ]
<name5> の <val3> 番目から <name4> の <val3> 番目を引いた値を <val6> で割った値に <val1> を掛けた値に <name4> の <val3> 番目を加えた値を <name2> の <val3> 番目にする	<name2> [ <val3> ] = ( <name5> [ <val3> ] - <name4> [ <val3> ] ) / <val6> * <val1> + <name4> [ <val3> ]	<name2> [ <val3> ] = ( <name5> [ <val3> ] - <name4> [ <val3> ] ) / <val6> * <val1> + <name4> [ <val3> ]
<name3> の <name6> 番目の末尾に <name4> を追加する	<name3> [ <name6> ] . append ( <name4> )	<name1> [ <name6> ] . append ( <name4> )
<name3> の最大値を <name4> とする	<name4> = max ( <name3> )	( <name4> = max ( <name3> ) )
0 から <val3> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の整数値の列を <name6> とする	<name6> = [ int ( input ( ) ) for <name1> in range ( <val3> ) ]	<name6> = [ int ( input ( ) ) for <name1> in range ( <val3> ) ]
<name5> を <val2> で割った余りが <val6> と等しいとき、	if <name5> % <val2> == <val6> :	continue <name5> % <val2> == <val6> :
<name6> 、 <name1> は非ローカル変数とする	nonlocal <name6> , <name1>	global <name6> , <name1>
<val6> から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <val6> , - 1 , - 1 ) :	for <name2> in range ( <val6> , - 1 , - 1 ) :
<name1> の最小値に <val6> を掛けた値を出力する	print ( min ( <name1> ) * <val6> )	print ( min ( <name1> ) * <val6> )
<name5> の <name3> の <name6> 番目を <name5> の <name3> の <name5> の <name2> の <name6> 番目番目だけ増加させる	<name5> . <name3> [ <name6> ] += <name5> . <name3> [ <name5> . <name2> [ <name6> ] ]	( <name5> . <name3> [ <name6> ] += <name5> . <name3> [ <name5> . <name2> [ <name6> ] ] )
( -1 ) からなる列の <name4> の <name5> 回分の列を <name4> の <name3> にする	<name4> . <name3> = [ - 1 ] * <name4> . <name5>	) . <name3> = [ - 1 ] * <name4> . <name5>
<name5> ( <name1> . <name6> / <name4> , <name1> . <name3> / <name4> ) を返す	return <name5> ( <name1> . <name6> / <name4> , <name1> . <name3> / <name4> )	yield <name5> ( <name1> . <name6> / <name4> , <name1> . <name3> / <name4> )
<name3> の <name2> 番目、 <name3> の <name6> 番目を <name3> の <name6> 番目、 <name3> の <name2> 番目とする	<name3> [ <name6> ] , <name3> [ <name2> ] = <name3> [ <name2> ] , <name3> [ <name6> ]	<name1> [ <name6> ] , <name3> [ <name2> ] = <name3> [ <name2> ] , <name3> [ <name6> ]
<name2> が <val6> を <name3> だけ左シフトした値から <val6> を引いた値と等しいとき、	if <name2> == ( <val6> << <name3> ) - <val6> :	continue == ( <val6> << <name3> ) - <val6> :
( <name5> ) からなる列の <name3> の <name4> 回分の列を <name1> とする	<name1> = [ <name5> ] * <name3> . <name4>	<name1> = [ <name5> ] * <name3> . <name4>
<name5> を <name2> から <name6> を引いた値だけ増加させる	<name5> += <name2> - <name6>	( <name5> += <name2> - <name6> )
<name6> の末尾の総和を <name4> とする	<name4> = sum ( <name6> [ - 1 ] )	<name4> = sum ( <name6> [ - 1 ] )
<name3> の <name6> の <name5> 番目の末尾に <name3> . <name1> ( <name2> , <name3> . <name4> ( ) , <name3> ( <name3> . <name6> [ <name2> ] ) -1 ) を追加する	<name3> . <name6> [ <name5> ] . append ( <name3> . <name1> ( <name2> , <name3> . <name4> ( ) , <name3> ( <name3> . <name6> [ <name2> ] ) - 1 ) )	<name3> . <name6> [ <name5> ] . append ( <name3> . <name1> ( <name2> , <name3> . <name4> ( ) , <name3> ( <name3> . <name6> [ <name2> ] ) - 1 ) )
<name2> ( <name6> , <name5> ) . <name1> ( <name4> ) が <name3> 以下のとき、	if <name2> ( <name6> , <name5> ) . <name1> ( <name4> ) <= <name3> :	for <name3> in <name2> ( <name6> , <name5> ) . <name1> ( <name4> ) <= <name3> :
<val6> を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <val6>	( <name2> [ <name5> ] = <val6> )
<name5> から <name1> から <val3> を引いた値未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> , <name1> - <val3> , - <val3> ) :	( for <name6> in range ( <name5> , <name1> - <val3> , - <val3> ) :
<name5> が <name2> と等しくなくかつ <name2> を <val3> で割った余りが <val4> と等しいとき、	if <name5> != <name2> and <name2> % <val3> == <val4> :	raise <name5> != <name2> and <name2> % <val3> == <val4> :
<val2> に <name4> を掛けた値に <name6> を加えた値を <name5> で割った余りを <name4> とする	<name4> = ( <val2> * <name4> + <name6> ) % <name5>	<name4> = ( <val2> * <name4> + <name6> ) % <name5>
<name2> の、つまり先頭から <name5> 番目までの部分列を削除する	del <name2> [ : <name5> ]	count = <name2> [ : <name5> ]
<name6> . <name3> ( <name5> ) が <name6> . <name3> ( <name1> ) と等しいかどうかを返す	return <name6> . <name3> ( <name5> ) == <name6> . <name3> ( <name1> )	x return <name6> . <name3> ( <name5> ) == <name6> . <name3> ( <name1> )
<name2> の <name6> 番目から <name6> に <val3> を加えた値までの部分列を <name1> とする	<name1> = <name2> [ <name6> : <name6> + <val3> ]	<name1> = <name2> [ <name6> : <name6> + <val3> ]
<name2> が <name3> ( <name6> ^ <name1> , <val5> ) より小さいとき、	if <name2> < <name3> ( <name6> ^ <name1> , <val5> ) :	list <name2> < <name3> ( <name6> ^ <name1> , <val5> ) :
<name4> の <name2> 番目の <name1> が、つまり未定値と等しいとき、	if <name4> [ <name2> ] . <name1> == None :	gcd if <name4> [ <name2> ] . <name1> is not None :
<name6> を <name3> の先頭の <name6> 番目にする	<name3> [ 0 ] [ <name6> ] = <name6>	<name4> [ 0 ] [ <name6> ] = <name6>
( <val5> 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val5> , <val1> ]	<name4> = [ <val5> , <val1> ]
<name6> の <name2> から <val4> を引いた値番目を <name3> とする	<name3> = <name6> [ <name2> - <val4> ]	<name6> [ <name2> - <val4> ] = <name6> [ <name2> - <val4> ]
<name1> ( <name2> , <name5> ) を <name4> とする	<name4> = <name1> ( <name2> , <name5> )	<name4> = <name1> ( <name2> , <name5> )
0 から <name6> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列の整数値の列を <name5> とする	<name5> = [ int ( input ( ) ) for <name4> in range ( <name6> ) ]	<name5> = [ int ( input ( ) ) for <name4> in range ( <name6> ) ]
<name5> を <name1> の <name4> 番目の <name2> 番目にする	<name1> [ <name4> ] [ <name2> ] = <name5>	( <name1> [ <name4> ] [ <name2> ] = <name5> )
<name1> の <name3> 番目を <name6> とする	<name6> = <name1> [ <name3> ]	( <name6> = <name1> [ <name3> ] )
<name2> を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = [ int ( <name1> ) for <name1> in <name2> . split ( ) ]	<name6> = [ int ( <name1> ) for <name1> in <name2> . split ( ) ]
無限の整数列の <name4> ( <name3> ) 番目の <val1> 番目を <val2> だけ増加させる	count [ <name4> ( <name3> ) ] [ <val1> ] += <val2>	<name6> [ <name4> ( <name3> ) ] [ <val1> ] += <val2>
<name4> ( <name1> , <name5> ( ) . <name2> ( ) ) のリストをソートした列の逆順を展開してを出力する	print ( * sorted ( list ( <name4> ( <name1> , <name5> ( ) . <name2> ( ) ) ) ) [ : : - 1 ] )	( * sorted ( list ( <name4> ( <name1> , <name5> ( ) . <name2> ( ) ) ) ) [ : : - 1 ] )
0 から <val3> 未満までの数列の各要素を <name1> とし、、つまり未定値の列を <name6> とする	<name6> = [ None for <name1> in range ( <val3> ) ]	<name6> = [ None for <name1> in range ( <val3> ) ]
<name1> の <val4> に ( -1 ) からなる列の <name6> に <val5> を加えた値回分の列を挿入する	<name1> . insert ( <val4> , [ - 1 ] * ( <name6> + <val5> ) )	<name1> . insert ( <val4> , [ - 1 ] * ( <name6> + <val5> ) )
( <val2> 、 <val3> 、 <val4> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val2> , <val3> , <val4> , <val1> ]	else = [ <val2> , <val3> , <val4> , <val1> ]
<name3> を <name2> で割った余りを <name3> とする	<name3> = <name3> % <name2>	( <name3> = <name3> % <name2> )
<name4> ( [ <name5> ( <name3> ) forxininput ( ) . <name6> ( ) ] ) を <name1> とする	<name1> = <name4> ( [ <name5> ( <name3> ) for <name3> in input ( ) . <name6> ( ) ] )	<name1> = <name4> ( [ <name5> ( <name3> ) for <name3> in input ( ) . <name6> ( ) ] )
<val3> から <name1> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <val3> から <name1> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <val3> の列の列を <name6> の <name5> にする	<name6> . <name5> = [ [ <val3> for <name4> in range ( <name1> + <val2> ) ] for <name6> in range ( <name1> + <val2> ) ]	<name2> . <name5> = [ [ <val3> for <name4> in range ( <name1> + <val2> ) ] for <name6> in range ( <name1> + <val2> ) ]
<name3> から <val5> を引いた値から <val4> 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> - <val5> , <val4> , - <val5> ) :	) : for <name6> in range ( <name3> - <val5> , <val4> , - <val5> ) :
<name3> をパラメータとして <name3> を <val5> で割った商に <val2> を掛けた値に <name3> を <val5> で割った余りを加えた値を返す関数を <name6> とする	<name6> = lambda <name3> : ( <name3> // <val5> ) * <val2> + ( <name3> % <val5> )	<name2> = lambda <name3> : ( <name3> // <val5> ) * <val2> + ( <name3> % <val5> )
<name3> を空白で分割した字句列を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name3> . split ( )	<name4> , <name5> = <name3> . split ( )
<name6> の長さが <val5> と等しくかつ <name3> の長さが <val5> と等しいとき、	if len ( <name6> ) == <val5> and len ( <name3> ) == <val5> :	list ( len ( <name6> ) == <val5> and len ( <name3> ) == <val5> :
<name5> の <name4> 番目の <name6> 番目のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name4> ] [ <name6> ] : <blk> continue </blk>	for if <name5> [ <name4> ] [ <name6> ] : <blk> continue </blk>
<name1> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> ) を返す	return <name1> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> )	yield <name1> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> )
0 から <name6> 未満までの数列の各要素を <name3> とし、 ( ( 、つまり無限大 ) からなる列の 0 から <name6> 未満までの数列の各要素を <name5> とし、 <val4> の列回分の列 ) からなる列の列を <name2> とする	<name2> = [ [ [ inf ] * [ <val4> for <name5> in range ( <name6> ) ] ] for <name3> in range ( <name6> ) ]	<name2> = [ [ [ inf ] * [ <val4> for <name5> in range ( <name6> ) ] ] for <name3> in range ( <name6> ) ]
<name3> . <name5> ( <name1> . <name4> ) を返す	return <name3> . <name5> ( <name1> . <name4> )	self return <name3> . <name5> ( <name1> . <name4> )
<name3> の <name2> 番目を展開し、それぞれ <name6> 、 <name4> とする <name3> の <name2> に <val6> を加えた値番目を展開し、それぞれ <name5> 、 <name1> とする	<name6> , <name4> = <name3> [ <name2> ] <name5> , <name1> = <name3> [ <name2> + <val6> ]	( <name6> , <name4> = <name3> [ <name2> ] <name5> , <name1> = <name3> [ <name2> + <val6> ] )
<name6> の <name5> の <name4> 番目の <name3> 番目、 <name6> の <name5> の <name4> 番目の <name2> 番目に <name6> の <name5> の <name2> 番目の <name3> 番目を加えた値の最小値を <name6> の <name5> の <name4> 番目の <name3> 番目にする	<name6> . <name5> [ <name4> ] [ <name3> ] = min ( <name6> . <name5> [ <name4> ] [ <name3> ] , <name6> . <name5> [ <name4> ] [ <name2> ] + <name6> . <name5> [ <name2> ] [ <name3> ] )	<name6> . <name5> [ <name4> ] [ <name3> ] = min ( <name6> . <name5> [ <name4> ] [ <name3> ] , <name6> . <name5> [ <name4> ] [ <name2> ] + <name6> . <name5> [ <name2> ] [ <name3> ] )
<name2> の <name6> に <val1> を加えた値番目、 <name2> の <name6> 番目を <name2> の <name6> 番目、 <name2> の <name6> に <val1> を加えた値番目とする	<name2> [ <name6> ] , <name2> [ <name6> + <val1> ] = <name2> [ <name6> + <val1> ] , <name2> [ <name6> ]	<name2> [ <name6> ] , <name2> [ <name6> + <val1> ] = <name2> [ <name6> + <val1> ] , <name2> [ <name6> ]
{ : . 020 f }を書式として <name4> で整形した文字列を出力する	print ( '{:.020f}' . format ( <name4> ) )	print ( '{:.6f}' . format ( <name4> ) )
<name4> と <val2> を割ったときの ( 商を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = divmod ( <name4> , <val2> )	<name3> , <name1> = divmod ( <name4> , <val2> )
<name6> に <val4> を加えた値を出力する	print ( <name6> + <val4> )	<name6> print ( <val4> + <val4> )
326154 のリストを <name5> とする	<name5> = list ( '326154' )	<name5> = list ( dict ) )
<name6> . <name4> ( <val3> )	<name6> . <name4> ( <val3> )	pow ( <name6> . <name4> ( <val3> ) )
<name4> の <name5> から <val1> を引いた値番目の <name2> 番目を <val1> だけ増加させる	<name4> [ <name5> - <val1> ] [ <name2> ] += <val1>	[ <name4> [ <name5> - <val1> ] [ <name2> ] += <val1>
<name6> の -1 に <name2> を掛けた値番目の文字列を出力する	print ( str ( <name6> [ - 1 * <name2> ] ) )	<name6> [ - 1 * <name2> ] ) print ( str ( <name6> [ - 1 * <name2> ] ) )
<name6> の長さ、 <name1> の長さを <name4> 、 <name3> とする	<name4> , <name3> = len ( <name6> ) , len ( <name1> )	<name2> , <name3> = len ( <name6> ) , len ( <name1> )
<name2> ( <val4> )	<name2> ( <val4> )	tuple ( <name2> ( <val4> ) )
<name3> の先頭を取り出した値を <name4> とする	<name4> = <name3> . pop ( )	<name4> = <name3> . pop ( )
<name1> を展開し、それぞれ <name3> 、 <name6> とする <name4> を展開し、それぞれ <name2> 、 <name5> とする <name1> を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = <name1> <name2> , <name5> = <name4> <name3> , <name6> = <name1>	<name1> , <name6> = <name1> <name2> , <name5> = <name4> <name3> , <name6> = <name1>
<name6> ( <name5> ) を <name1> とする	<name1> = <name6> ( <name5> )	<name1> = <name6> ( <name5> )
<name1> の <name6> から読み込んだ行の列を <name3> とする	<name3> = <name1> . <name6> . readlines ( )	<name3> = <name1> . <name6> . readlines ( )
<val1> から <name4> 未満までの数列の各要素を <name5> とし、 <name6> [ <name5> ] [ <val1> ] * <name6> [ <name5> -1 ] [ <val3> ] から <name6> [ <name5> -1 ] [ <val1> ] * <name6> [ <name5> ] [ <val3> ] を引いた値の列の総和の絶対値を <val2> で割った値を <name2> とする	<name2> = abs ( sum ( [ <name6> [ <name5> ] [ <val1> ] * <name6> [ <name5> - <val3> ] [ <val3> ] - <name6> [ <name5> - <val3> ] [ <val1> ] * <name6> [ <name5> ] [ <val3> ] for <name5> in range ( <name4> ) ] ) ) / <val2>	<name2> = abs ( sum ( [ <name6> [ <name5> ] [ <val1> ] * <name6> [ <name5> - <val3> ] [ <val3> ] - <name6> [ <name5> - <val1> ] [ <val1> ] * <name6> [ <name5> - <val3> ] [ <val3> ] for <name5> in range ( <name4> ) ] ) / <val2>
<name5> の <name6> 番目に <val1> を加えた値に <name2> の <name6> 番目を加えた値に <name3> の <name6> 番目を加えた値に <name4> の <name6> 番目を加えた値を <name5> の <name6> に <val1> を加えた値番目にする	<name5> [ <name6> + <val1> ] = <name5> [ <name6> ] + <val1> + <name2> [ <name6> ] + <name3> [ <name6> ] + <name4> [ <name6> ]	<name6> [ <val1> + <val1> ] = <name5> [ <name6> ] + <val1> + <name2> [ <name6> ] + <name3> [ <name6> ] + <name4> [ <name6> ]
<name4> に <name5> を加えた値の集合のリストをソートした列を <name2> とする	<name2> = sorted ( list ( set ( <name4> + <name5> ) ) )	<name2> = sorted ( list ( set ( <name4> + <name5> ) ) )
<name5> を <name1> の <name4> 番目の <name2> 番目の <name3> 番目にする	<name1> [ <name4> ] [ <name2> ] [ <name3> ] = <name5>	not <name1> [ <name4> ] [ <name2> ] [ <name3> ] = <name5>
<name1> が <name3> の <name4> 番目の <name6> 番目より小さくまたは <name6> が <name5> と等しいとき、	if <name1> < <name3> [ <name4> ] [ <name6> ] or <name6> == <name5> :	list ( <name1> < <name3> [ <name4> ] [ <name6> ] or <name6> == <name5> :
<val5> から <name2> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す <blk> <name1> を <name3> だけ増加させる </blk>	for <name3> in range ( <val5> , <name2> + <val5> ) : <blk> <name1> += <name3> </blk>	for <name3> in range ( <val5> , <name2> + <val5> ) : <blk> <name1> += <name3> </blk>
<name1> の <name2> に <name3> の <name2> を掛けた値に <name1> の <name5> に <name3> の <name5> を掛けた値を加えた値を返す	return <name1> . <name2> * <name3> . <name2> + <name1> . <name5> * <name3> . <name5>	x return <name1> . <name2> * <name3> . <name2> + <name1> . <name5> * <name3> . <name5>
<name1> から <name6> を引いた値の <val5> 乗に <name4> から <name3> を引いた値の <val5> 乗を加えた値の . <val2> 乗を <name2> とする	<name2> = ( ( <name1> - <name6> ) ** <val5> + ( <name4> - <name3> ) ** <val5> ) ** . <val2>	<name2> = ( ( <name1> - <name6> ) ** <val5> + ( <name4> - <name3> ) ** <val5> ) ** . <val2>
<name1> の <name2> の <name4> の <name5> 番目が <name4> の <name6> より小さいとき、	if <name1> . <name2> [ <name4> . <name5> ] < <name4> . <name6> :	. if <name1> . <name2> [ <name4> . <name5> ] < <name4> . <name6> :
<name5> を <name4> の <name2> 番目の <name1> に <val6> を加えた値番目にする	<name4> [ <name2> ] [ <name1> + <val6> ] = <name5>	<name4> [ <name2> ] [ <name1> + <val6> ] = <name5>
( ( <val6> 、 <name4> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val6> , <name4> ) ]	<name3> = [ ( <val6> , <name4> ) ]
<name3> が <name2> 以下かつ <name5> が <name6> 以下のとき、	if <name3> <= <name2> and <name5> <= <name6> :	or <name3> <= <name2> and <name5> <= <name6> :
<name2> の整数値から <name4> の整数値を引いた値の文字列を <name1> とする	<name1> = str ( int ( <name2> ) - int ( <name4> ) )	<name1> = str ( int ( <name2> ) - int ( <name4> ) )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name3> 、 <name1> 、 <name2> とする	<name3> , <name1> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name3> , <name1> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name6> の <name6> の <name1> 番目、 <name6> の <name6> の <name3> 番目を <name6> の <name6> の <name3> 番目、 <name6> の <name6> の <name1> 番目とする	<name6> . <name6> [ <name3> ] , <name6> . <name6> [ <name1> ] = <name6> . <name6> [ <name1> ] , <name6> . <name6> [ <name3> ]	<name1> . <name6> [ <name3> ] , <name6> . <name6> [ <name1> ] = <name6> . <name6> [ <name1> ] , <name6> [ <name3> ]
<val1> を書式として <name2> 、 <name4> で整形した文字列を <name5> とする	<name5> = <val1> . format ( <name2> , <name4> )	else = <val1> . format ( <name2> , <name4> )
<name1> ( <name2> ( <name5> , <name3> ( ) . <name4> ( ) ) ) をソートした列に番号付した組の列の各要素を <name4> 、 <name6> とし、 <name3> から <name4> を引いた値に <name6> を掛けた値の列の総和を出力する	print ( sum ( [ ( <name3> - <name4> ) * <name6> for <name4> , <name6> in enumerate ( sorted ( <name1> ( <name2> ( <name5> , <name3> ( ) . <name4> ( ) ) ) ) ) ] ) )	print ( sum ( [ ( <name3> - <name4> ) * <name6> for <name4> , <name6> in enumerate ( sorted ( sorted ( <name2> ( <name5> , <name3> ( ) . <name4> ( ) ) ) ) ] ) )
<name4> を <name5> から <val2> を引いた値だけ減少させる	<name4> -= <name5> - <val2>	<name4> -= ( <name5> - <val2> )
<name1> の <name3> 番目が <val2> と等しくかつ <name3> が <val5> と等しくまたは <name1> の <name3> -1 番目が <val4> と等しくなくかつ <name3> が <name1> から <val6> を引いた値と等しくまたは <name1> の <name3> に <val6> を加えた値番目が <val4> と等しくないとき、	if <name1> [ <name3> ] == <val2> and ( <name3> == <val5> or <name1> [ <name3> - <val6> ] != <val4> ) and ( <name3> == <name1> - <val6> or <name1> [ <name3> + <val6> ] != <val4> ) :	if ( <name1> [ <name3> ] == <val2> and <name3> == <val5> ) or ( <name1> [ <name3> - <val6> ] != <val4> and <name3> == <name1> - <val6> or <name1> [ <name3> + <val6> ] != <val4> ) :
<name1> から <val2> を引いた値を <val2> だけ右シフトした値を <name1> とする	<name1> = ( <name1> - <val2> ) >> <val2>	<name1> = ( <name1> - <val2> ) >> <val2>
辞書を <name5> とする	<name5> = dict ( <name5> )	( <name5> = dict ( zip . dict ( ) )
( <name2> ( <name6> ) 、 <name2> ( <name6> ) ) の組を一旦、返す	yield ( <name2> ( <name6> ) , <name2> ( <name6> ) )	global ( <name2> ( <name6> ) , <name2> ( <name6> ) )
<name3> の <name2> に番号付した組の列を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in enumerate ( <name3> . <name2> ) :	for <name1> , <name6> in enumerate ( <name3> . <name2> ) :
<name4> の <name2> を <name3> とする	<name3> = <name4> . <name2>	<name2> = <name4> . <name2>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストに <val5> を掛けた値を <name6> とする	<name6> = list ( map ( int , input ( ) . split ( ) ) ) * <val5>	<name6> = list ( map ( int , input ( ) . split ( ) ) ) * <val5>
0 から <name1> の長さ未満までの数列の各要素を <name5> とし、、つまり空列の列を <name2> とする	<name2> = [ [ ] for <name5> in range ( len ( <name1> ) ) ]	<name2> = [ [ ] for <name5> in range ( len ( <name1> ) ) ]
<name4> から <name3> を引いた値を <name1> とする	<name1> = <name4> - <name3>	<name1> = <name4> - <name3>
( <name6> の <name1> の <name3> 番目の先頭、 <name4> 、 <name2> に <name5> を加えた値、 <name5> 、 <name6> ) の組を返す	return ( <name6> . <name1> [ <name3> ] [ 0 ] , <name4> , <name2> + <name5> , <name5> , <name6> )	yield ( <name6> . <name1> [ <name3> ] [ 0 ] , <name4> , <name2> + <name5> , <name6> )
<name2> の各要素を <name4> とし、 <name4> が <name1> 以上のときの <name4> の列の長さが <name1> 以上のとき、	if len ( [ <name4> for <name4> in <name2> if <name4> >= <name1> ] ) >= <name1> :	continue if len ( [ <name4> for <name4> in <name2> if <name4> >= <name1> ] ) >= <name1> :
<name4> の <name1> から <val5> を引いた値番目、 <name4> の <name1> 番目を <name4> の <name1> 番目、 <name4> の <name1> から <val5> を引いた値番目とする	<name4> [ <name1> ] , <name4> [ <name1> - <val5> ] = <name4> [ <name1> - <val5> ] , <name4> [ <name1> ]	<name4> [ <name1> ] , <name4> [ <name1> - <val5> ] = <name4> [ <name1> - <val5> ] , <name4> [ <name1> ]
( <name1> 、 <name5> から <val3> を引いた値 ) の組を返す	return ( <name1> , <name5> - <val3> )	yield ( <name1> , <name5> - <val3> )
<val1> を <val4> だけ左シフトした値から <val1> を引いた値を <name6> とする	<name6> = ( <val1> << <val4> ) - <val1>	<name6> = ( <val1> << <val4> ) - <val1>
<name2> から <name1> を引いた値に <name6> を掛けた値から <name3> から <name5> を引いた値に <name4> を掛けた値を引いた値に <name3> に <name1> を掛けた値から <name5> に <name2> を掛けた値を引いた値を加えた値を <name4> とする	<name4> = ( ( <name2> - <name1> ) * <name6> - ( <name3> - <name5> ) * <name4> + ( <name3> * <name1> - <name5> * <name2> ) )	<name4> = ( <name2> - <name1> ) * <name6> - ( <name3> - <name5> ) * <name4> + ( <name3> * <name1> - <name5> * <name2> )
<name3> を ( <name3> の <val2> 番目の各要素を <name1> とし、 <name3> の <val2> 番目の <name1> 番目の列 ) からなる列だけ増加させる	<name3> += [ [ <name3> [ <val2> ] [ <name1> ] for <name1> in <name3> [ <val2> ] ] ]	<name3> += [ [ <name3> [ <val2> ] [ <name1> ] for <name1> in <name3> [ <val2> ] ] ]
<name3> の <name5> 番目から <name6> 番目までの部分列に ( 、つまり無限大 ) からなる列を加えた値を <name4> とする	<name4> = <name3> [ <name5> : <name6> ] + [ inf ]	<name4> = <name3> [ <name5> : <name6> ] + [ inf ]
<name4> の順序数に <name6> を加えた値を <name3> とする	<name3> = ord ( <name4> ) + <name6>	<name3> = ord ( <name4> ) + <name6>
<name1> 内の <val4> を <name2> の文字列で置き換えた文字列を <name3> とする	<name3> = <name1> . replace ( <val4> , str ( <name2> ) )	<name3> = <name1> . replace ( <val4> , str ( <name2> ) )
<name2> の <name3> から <val6> を引いた値番目の <name1> から <val6> を引いた値番目かつ <name5> の <name1> から <val6> を引いた値番目が <val4> と等しいとき、	if <name2> [ <name3> - <val6> ] [ <name1> - <val6> ] and <name5> [ <name1> - <val6> ] == <val4> :	continue <name2> [ <name3> - <val6> ] [ <name1> - <val6> ] and <name5> [ <name1> - <val6> ] == <val4> :
<name6> の <name4> に <val5> を加えた値番目の <name3> に <val5> を加えた値番目、 <name2> に <name1> を加えた値に <name6> を加えた値の最大値を <name6> の <name4> に <val5> を加えた値番目の <name3> に <val5> を加えた値番目にする	<name6> [ <name4> + <val5> ] [ <name3> + <val5> ] = max ( <name6> [ <name4> + <val5> ] [ <name3> + <val5> ] , <name2> + <name1> + <name6> )	<name6> [ <name4> + <val5> ] [ <name3> + <val5> ] = max ( <name6> [ <name4> + <val5> ] [ <name3> + <val5> ] , <name2> + <name1> + <name6> )
<name3> の、つまり先頭から <name6> 番目までの部分列の総和を出力する	print ( sum ( <name3> [ : <name6> ] ) )	print ( sum ( <name3> [ : <name6> ] ) )
<name2> を <name6> の <name3> 番目で割った商を <name5> とする	<name5> = <name2> // <name6> [ <name3> ]	<name5> = <name2> // <name6> [ <name3> ]
<name3> が <val5> より大きくかつ <name4> の <name1> の <name6> 番目が <val5> より小さいとき、	if <name3> > <val5> and <name4> . <name1> [ <name6> ] < <val5> :	> if <name3> > <val5> and <name4> . <name1> [ <name6> ] < <val5> :
<name2> を <name5> の <name1> から <name6> を引いた値番目だけ増加させる	<name2> += <name5> [ <name1> - <name6> ]	( <name2> += <name5> [ <name1> - <name6> ] )
( ( <val2> ) からなる列の <val2> から <name5> 未満までの数列の各要素を <name4> とし、 <name5> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val2> ] * [ <name5> for <name4> in range ( <name5> ) ] ]	<name1> = [ [ <val2> ] * [ <name5> for <name4> in range ( <name5> ) ] ]
<name5> の ( <name4> 、 <name1> 、 <name2> ) の組番目、 <name5> の ( <name4> 、 <name1> 、 <name3> ) の組番目の最小値を出力する	print ( min ( <name5> [ ( <name4> , <name1> , <name2> ) ] , <name5> [ ( <name4> , <name1> , <name3> ) ] ) )	print ( min ( <name5> [ ( <name4> , <name1> , <name2> ) ] , <name5> [ ( <name4> , <name1> , <name3> ) ] ) )
<name1> . <name6> ( <val3> ) を <name2> とする	<name2> = <name1> . <name6> ( <val3> )	<name2> = <name1> . <name6> ( <val3> )
<name4> から <name5> を引いた値から <val2> を引いた値を <name3> とする	<name3> = <name4> - <name5> - <val2>	<name3> = <name4> - <name5> - <val2>
<name6> の <val3> 番目を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <name6> [ <val3> ]	<name2> [ <val1> ] = <name6> [ <val3> ]
<name2> の末尾に文字列 <name3> に <name4> を加えた値に <name1> を加えた値を評価した値の浮動小数点数を追加する	<name2> . append ( float ( eval ( <name3> + <name4> + <name1> ) ) )	<name2> . append ( float ( eval ( <name3> + <name4> + <name1> ) ) )
<name1> ( <name3> , <name2> , <name6> ) を <name2> とする	<name2> = <name1> ( <name3> , <name2> , <name6> )	<name2> = <name1> ( <name3> , <name2> , <name6> )
<name1> の <name2> の <name3> の <name6> 番目を順に <name4> として、繰り返す	for <name4> in <name1> . <name2> . <name3> [ <name6> ] :	. for <name4> in <name1> . <name2> [ <name3> . <name6> ] :
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = map ( int , input ( ) . split ( <val4> ) )	<name3> , <name2> = map ( int , input ( ) . split ( <val4> ) )
<name1> に <name2> を加えた値を <val4> で割った商を <name3> とする	<name3> = ( <name1> + <name2> ) // <val4>	<name3> = ( <name1> + <name2> ) // <val4>
( <val2> 、 <val5> 、 <val3> 、 <val6> ) からなる列を順に <name1> として、繰り返す	for <name1> in [ <val2> , <val5> , <val3> , <val6> ] :	for <name1> in [ <val2> , <val5> , <val3> , <val6> ] :
<name4> の <name5> に <name6> を掛けた値番目が <val3> と等しいかどうか	<name4> [ <name5> * <name6> ] == <val3>	<name2> [ <name5> * <name6> ] == <val3>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name3> とする	<name1> , <name6> , <name3> = map ( int , input ( ) . split ( ) )	<name6> , <name3> = map ( int , input ( ) . split ( ) )
<val6> を間に入れて <name1> を連結した文字列を出力する	print ( <val6> . join ( <name1> ) )	print ( <val6> . join ( <name1> ) )
( <name2> ) からなる列の <name1> 回分の列を <name4> とする	<name4> = [ <name2> ] * <name1>	( <name4> = [ <name2> ] * <name1> )
<name5> が、つまり未定値と等しいとき、	if <name5> is not None :	> if <name5> is not None :
<name3> ( <name5> [ : <name1> ] , <name1> ) 、 <name3> ( <name5> [ <name1> : ] , <name4> - <name1> ) の最小値を <name6> とする	<name6> = min ( <name3> ( <name5> [ : <name1> ] , <name1> ) , <name3> ( <name5> [ <name1> : ] , <name4> - <name1> ) )	<name6> = min ( <name3> ( <name5> [ : <name1> ] , <name1> ) , min ( <name3> ( <name5> [ <name1> : ] , <name4> - <name1> ) ) )
dai - kichi を出力する	print ( 'dai-kichi' )	& print ( '+-*' ) )
<name2> の長さを <val5> で割った商を <name1> とする	<name1> = len ( <name2> ) // <val5>	<name1> = len ( <name2> ) // <val5>
<name3> をソートした列の -3 番目から、つまり末尾までの部分列の総和に <name1> をソートした列の末尾を加えた値を出力する	print ( sum ( sorted ( <name3> ) [ - 3 : ] ) + sorted ( <name1> ) [ - 1 ] )	[ print ( sum ( sorted ( <name3> ) [ - 3 : ] ) ) + sorted ( <name1> ) [ - 1 ] )
<name1> の <val5> 番目が <val5> より小さくまたは <name1> の <val5> 番目が <val3> より大きくまたは <name1> の <val2> 番目が <val5> より小さくまたは <name1> の <val2> 番目が <val3> より大きいとき、	if <name1> [ <val5> ] < <val5> or <name1> [ <val5> ] > <val3> or <name1> [ <val2> ] < <val5> or <name1> [ <val2> ] > <val3> :	isinstance ( <name1> [ <val5> ] < <val5> or <name1> [ <val5> ] > <val3> or <name1> [ <val2> ] < <val5> or <name1> [ <val2> ] > <val3> :
<name3> の <name1> を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name3> . <name1>	<name1> [ <name5> ] = <name3> . <name1>
<name2> を <name6> の <name4> 番目だけ増加させる	<name2> += <name6> [ <name4> ]	( <name2> += <name6> [ <name4> ] )
<name5> の末尾に <name5> の先頭を取り出した値に <name5> の先頭を取り出した値を加えた値を追加する	<name5> . append ( <name5> . pop ( ) + <name5> . pop ( ) )	<name1> . append ( <name5> . pop ( ) + <name5> . pop ( ) )
<name2> を <name3> とする	<name3> = <name2> ( li , x )	( <name3> = <name2> ) ( a - 1 )
<name6> に <name4> を加えた値に <name6> に <name4> を加えた値を掛けた値を <name1> とする	<name1> = ( <name6> + <name4> ) * ( <name6> + <name4> )	<name1> = ( <name6> + <name4> ) * ( <name6> + <name4> )
<name3> ( ) を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = <name3> ( )	<name3> , <name5> = <name3> ( )
<name3> の <name6> 番目の <name2> の <val4> 番目番目の <val1> 番目を <name5> だけ増加させる	<name3> [ <name6> ] [ <name2> [ <val4> ] ] [ <val1> ] += <name5>	<name1> [ <name6> ] [ <name2> [ <val4> ] ] [ <val1> ] += <name5>
os . <name4> を返す	return <name4>	self return ( <name4> )
<name3> の <name4> に <val6> を加えた値から <name4> に <val2> を加えた値までの部分列を削除する	del <name3> [ <name4> + <val6> : <name4> + <val2> ]	| = <name3> [ <name4> + <val6> : <name4> + <val2> ]
<name5> を展開してを出力する	print ( * <name5> )	<name2> . print ( * <name5> ) )
<name2> に <name6> を加えた値を <val4> で割った値を出力する	print ( ( <name2> + <name6> ) / <val4> )	print ( ( <name2> + <name6> ) / <val4> )
<name5> ( <name3> , <name4> , <name1> [ <name2> ] )	<name5> ( <name3> , <name4> , <name1> [ <name2> ] )	<name5> ( <name3> , <name4> , <name1> [ <name2> ] )
( ( <name1> , 0 から <name5> 未満までの数列の各要素を <name1> とし、、つまり偽の列 ) ) からなる辞書を <name2> とする	<name2> = { <name1> : [ False for <name1> in range ( <name5> ) ] }	<name2> = { <name1> : [ False for <name1> in range ( <name5> ) ] }
E を <name5> とする	<name5> = 'E'	<name5> = '+-*' ( in 'ON' )
( <val6> ) からなる列の <name5> に <val4> を加えた値回分の列を <name3> とする	<name3> = [ <val6> ] * ( <name5> + <val4> )	<name3> = [ <val6> ] * ( <name5> + <val4> )
<name6> が <name5> に <val2> を加えた値より小さくかつ <name1> の <name6> 番目の <name3> 番目の <val4> 番目が <val4> と等しい間、次を繰り返す	while <name6> < <name5> + <val2> and <name1> [ <name6> ] [ <name3> ] [ <val4> ] == <val4> :	del <name6> < <name5> + <val2> and <name1> [ <name6> ] [ <name3> ] [ <val4> ] == <val4> :
<name1> の <name2> の <name5> 番目に <name5> に <val6> を加えた値を掛けた値を <name4> で割った余りを <name1> の <name2> の <name5> に <val6> を加えた値番目にする	<name1> . <name2> [ <name5> + <val6> ] = <name1> . <name2> [ <name5> ] * ( <name5> + <val6> ) % <name4>	<name1> . <name2> [ <name5> + <val6> ] = <name1> . <name2> [ <name5> ] * ( <name5> + <val6> ) % <name4>
<name3> の <name4> 番目の各要素を <name2> とし、 ( <name2> 、 <name4> 、 <name5> に <val1> を加えた値 ) の組の列を追加して <name6> を拡張する	<name6> . extend ( [ ( <name2> , <name4> , <name5> + <val1> ) for <name2> in <name3> [ <name4> ] ] )	<name6> . extend ( [ ( <name2> , <name4> , <name5> + <val1> ) for <name2> in <name3> [ <name4> ] ] )
<name3> が、つまり偽と等しいとき、	if <name3> == False :	list ( <name3> == False ) :
<name1> の <name6> 番目が <name1> の <name3> 番目より小さいとき、	if <name1> [ <name6> ] < <name1> [ <name3> ] :	raise <name1> [ <name6> ] < <name1> [ <name3> ] :
<name3> の <val5> 番目、 <name3> の <val4> 番目、 <name3> の <val2> 番目、 <name3> の <val6> 番目を <name4> 、 <name2> 、 <name6> 、 <name1> とする	<name4> , <name2> , <name6> , <name1> = <name3> [ <val5> ] , <name3> [ <val4> ] , <name3> [ <val2> ] , <name3> [ <val6> ]	<name3> , <name2> , <name6> , <name1> = <name3> [ <val5> ] , <name3> [ <val4> ] , <name3> [ <val2> ] , <name3> [ <val6> ]
<name2> が <name6> 以下かつ <name3> が <name4> 以下のとき、	if <name2> <= <name6> and <name3> <= <name4> :	or <name2> <= <name6> and <name3> <= <name4> :
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name4> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name5> ( <name2> , <name6> ) が <val4> と等しいとき、	if <name5> ( <name2> , <name6> ) == <val4> :	list ( <name5> ( <name2> , <name6> ) == <val4> :
<name5> の <name2> の <name6> 番目番目を <val1> だけ増加させる	<name5> [ <name2> [ <name6> ] ] += <val1>	<name2> [ <name2> [ <name6> ] ] += <val1>
<name2> の先頭を取り出した値を <name6> の <name1> 番目にする	<name6> [ <name1> ] = <name2> . pop ( )	<name6> [ <name1> ] = <name2> . pop ( )
<name3> . <name2> ( <name6> * -1 , <name1> ) が <val5> 以下のとき、	if <name3> . <name2> ( <name6> * - 1 , <name1> ) <= <val5> :	for <name3> in <name3> . <name2> ( <name6> * - 1 , <name1> ) <= <val5> :
<name6> の -1 番目が <val3> と等しいとき、	if <name6> [ - 1 ] == <val3> :	> <name6> [ - 1 ] == <val3> :
<name3> の <name6> の <name1> 番目を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in <name3> . <name6> [ <name1> ] :	for <name4> , <name5> in <name3> . <name6> [ <name1> ] :
<name3> . <name6> ( ) を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name3> . <name6> ( )	<name3> , <name5> = <name3> . <name6> ( )
真、 <name1> 、 <name2> を <name4> 、 <name5> 、 <name3> とする	<name4> , <name5> , <name3> = True , <name1> , <name2>	<name2> , <name5> , <name3> = True , <name1> , <name2>
0 から <name4> 未満までの数列の各要素を <name1> とし、 <name5> の <name1> 番目の整数値の列を <name3> とする	<name3> = [ int ( <name5> [ <name1> ] ) for <name1> in range ( <name4> ) ]	<name3> = [ int ( <name5> [ <name1> ] ) for <name1> in range ( <name4> ) ]
<name4> ( <name2> ( <val5> , <name3> ) , <name2> ( <name3> , <name1> ) , <name3> ) を <name6> とする	<name6> = <name4> ( <name2> ( <val5> , <name3> ) , <name2> ( <name3> , <name1> ) , <name3> )	else = <name4> ( <name2> ( <val5> , <name3> ) , <name2> ( <name3> , <name1> ) , <name3> )
<name1> に <name2> を加えた値を <name4> とする	<name4> = <name1> + <name2>	<name4> = <name1> + <name2>
a の順序数から <val3> の順序数に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( ord ( 'a' ) , ord ( <val3> ) + <val2> ) :	. for <name4> in range ( ord ( 'a' ) , ord ( <val3> ) + <val2> ) :
\ <name4> ( <val6> % ( <name5> , <name1> ) ) \	\ <name4> ( <val6> % ( <name5> , <name1> ) ) \	) <name4> ( <val6> % ( <name5> , <name1> ) ) \
<name1> の <name3> 番目の <name4> 番目を <name1> の <name2> 番目の <name4> 番目だけ増加させる	<name1> [ <name3> ] [ <name4> ] += <name1> [ <name2> ] [ <name4> ]	<name2> [ <name3> ] [ <name4> ] += <name1> [ <name2> ] [ <name4> ]
<name1> . <name3> ( <name2> )	<name1> . <name3> ( <name2> )	<name2> . <name3> ( <name2> )
<name3> . <name2> ( <name5> , <name1> , <name3> . <name6> ) を <name4> とする	<name4> = <name3> . <name2> ( <name5> , <name1> , <name3> . <name6> )	<name4> = <name3> . <name2> ( <name5> , <name1> , <name3> . <name6> )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( int , <name4> ( ) . split ( ) )	input , <name1> = map ( int , <name4> ( ) . split ( ) )
<name5> が <name4> より小さくかつ <name1> の <name5> 番目が <name1> の <name5> から <val3> を引いた値番目に <val3> を加えた値と等しい間、次を繰り返す <blk> <name5> を <val3> だけ増加させる </blk>	while <name5> < <name4> and <name1> [ <name5> ] == <name1> [ <name5> - <val3> ] + <val3> : <blk> <name5> += <val3> </blk>	if <name5> < <name4> and <name1> [ <name5> ] == <name1> [ <name5> - <val3> ] + <val3> : <blk> <name5> += <val3> </blk>
<name1> を展開し、それぞれ <name6> 、 <name3> 、 <name5> とする	<name6> , <name3> , <name5> = <name1>	( <name6> , <name3> , <name5> = <name1> )
<name3> を展開し、それぞれ <name3> 、 <name6> 、 <name2> 、 <name5> 、 <name4> 、 <name1> とする	<name3> , <name6> , <name2> , <name5> , <name4> , <name1> = <name3>	<name3> , <name6> , <name2> , <name5> , <name4> , <name1> = <name3>
<val4> が <name6> 以下かどうかが <val1> 以下のとき、	if <val4> <= <name6> <= <val1> :	list ( <val4> <= <name6> <= <val1> ) :
0 から <name2> 未満までの数列の各要素を <name5> とし、 ( <val4> 、 <val5> ) からなる列の <name1> の <name2> . <name3> ( <name6> , <name4> [ <name5> ] ) 番目が <name1> の <name5> 番目より小さいかどうか番目を出力するの列	[ print ( [ <val4> , <val5> ] [ <name1> [ <name2> . <name3> ( <name6> , <name4> [ <name5> ] ) ] < <name1> [ <name5> ] ] ) for <name5> in range ( <name2> ) ]	print ( [ [ <val4> , <val5> ] [ <name1> [ <name2> . <name3> ( <name6> , <name4> [ <name5> ] ) ] < <name1> [ <name5> ] ] for <name5> in range ( <name2> ) ] )
<name4> ( <name6> , <val3> ) を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name4> ( <name6> , <val3> )	<name2> , <name5> , <name2> = <name4> ( <name6> , <val3> )
<name6> を <val1> で割った余りが <val5> と等しくないとき、	if <name6> % <val1> != <val5> :	!= <name6> % <val1> != <val5> :
<val3> に <name1> のとき <name1> の <val2> 番目、そうでなければ <val6> を加えた値に <name4> のとき <name4> の <val2> 番目、そうでなければ <val6> を加えた値を <name5> の <val2> 番目にする	<name5> [ <val2> ] = <val3> + ( <name1> [ <val2> ] if <name1> else <val6> ) + ( <name4> [ <val2> ] if <name4> else <val6> )	( <name5> [ <val2> ] = <val3> ) + ( <name1> [ <val2> ] if <name1> else <val6> ) + ( <name4> [ <val2> ] if <name4> else <val6> )
<name1> の先頭が <name1> の <val6> 番目と等しくかつ <name1> の <val4> 番目が <name1> の <val2> 番目と等しいとき、	if <name1> [ 0 ] == <name1> [ <val6> ] and <name1> [ <val4> ] == <name1> [ <val2> ] :	list ( <name1> [ 0 ] == <name1> [ <val6> ] and <name1> [ <val4> ] == <name1> [ <val2> ] ) :
<name1> ( <name4> [ : ] ) を <name2> とする	<name2> = <name1> ( <name4> [ : ] )	dict = <name1> ( <name4> [ : ] )
真の間、次を繰り返す	while ( True ) :	while True :
<name3> ( <name4> -1 , <name1> )	<name3> ( <name4> - 1 , <name1> )	<name1> ( <name3> ( <name4> - 1 , <name1> ) )
<name6> の <name2> 番目を一旦、返す	yield <name6> [ <name2> ]	global <name6> [ <name2> ]
<name2> ( <name3> , <name1> ) を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name2> ( <name3> , <name1> )	<name2> , <name6> = <name2> ( <name3> , <name1> )
<name6> ( ) のとき <val5> 、そうでなければ <val4> を出力する	print ( <val5> if <name6> ( ) else <val4> )	print ( <val5> if <name6> ( ) else <val4> )
<name3> ( <name4> . <name1> * <name2> . <name6> , - <name4> . <name6> * <name2> . <name1> ) を返す	return <name3> ( <name4> . <name1> * <name2> . <name6> , - <name4> . <name6> * <name2> . <name1> )	yield <name3> ( <name4> . <name1> * <name2> . <name6> , - <name4> . <name6> * <name2> . <name1> )
<name5> の <name1> の y 座標から <name5> の <name3> の y 座標を引いた値を <name5> の <name1> の x 座標から <name5> の <name3> の x 座標を引いた値で割った値を <name5> の <name2> にする	<name5> . <name2> = ( <name5> . <name1> . y - <name5> . <name3> . y ) / ( <name5> . <name1> . x - <name5> . <name3> . x )	<name5> . <name2> = ( <name5> . <name1> . y - <name5> . <name3> . y ) / ( <name5> . <name1> . x - <name5> . <name3> . x )
<name3> に <name1> を加えた値、 <name5> に <name2> を加えた値を <name6> 、 <name4> とする	<name6> , <name4> = <name3> + <name1> , <name5> + <name2>	<name2> , <name4> = <name3> + <name1> , <name5> + <name2>
<val2> に <name5> を加えた値に <name1> に <name4> を加えた値を加えた値を <name6> とする	<name6> = <val2> + <name5> + ( <name1> + <name4> )	<name6> = <val2> + <name5> + ( <name1> + <name4> )
<name2> 、 <name5> を追加して <name6> を更新する	<name6> . update ( <name2> , <name5> )	<name6> . update ( <name2> , <name5> )
<name4> の末尾の順序数から <name1> を引いた値を <name6> とする	<name6> = ord ( <name4> [ - 1 ] ) - <name1>	<name6> = ord ( <name4> [ - 1 ] ) - <name1>
<name1> の <name5> の <name6> の <name4> 番目が <name6> の <name3> より小さいとき、	if <name1> . <name5> [ <name6> . <name4> ] < <name6> . <name3> :	for <name1> . <name5> [ <name6> . <name4> ] < <name6> . <name3> :
<name5> の <name3> 番目が <val6> と等しいとき、	if <name5> [ <name3> ] == <val6> :	continue <name5> [ <name3> ] == <val6> :
( <val4> ) からなる列の <name3> に <val1> を加えた値回分の列を <name2> とする	<name2> = [ <val4> ] * ( <name3> + <val1> )	<name2> = [ <val4> ] * ( <name3> + <val1> )
( <val2> 、 <val6> ) からなる列の <name4> と <name5> の論理積と <name3> の論理和番目を出力する	print ( [ <val2> , <val6> ] [ <name4> & <name5> | <name3> ] )	print ( [ <val2> , <val6> ] [ <name4> & <name5> | <name3> ] )
0 から <name5> の <val2> 番目未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> [ <val2> ] ) :	. for <name1> in range ( <name5> [ <val2> ] ) :
( <val4> ) からなる列の <name2> の <name5> 回分の列を <name2> の <name1> にする	<name2> . <name1> = [ <val4> ] * <name2> . <name5>	<name2> . <name1> = [ <val4> ] * <name2> . <name5>
<name6> ( ) の整数値から <val3> を引いた値を <name5> とする	<name5> = int ( <name6> ( ) ) - <val3>	<name2> <name5> = int ( <name6> ( ) ) - <val3>
<name5> と ( ( <name4> の先頭、 <name4> の <val3> 番目、 <name4> の <val1> 番目、 <name4> の <val2> 番目、 <name4> の <val6> 番目、 <name4> の <val5> 番目 ) の組 ) の集合の和集合を <name5> とする	<name5> = <name5> . union ( { ( <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val1> ] , <name4> [ <val2> ] , <name4> [ <val6> ] , <name4> [ <val5> ] ) } )	else = <name5> . union ( { ( <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val1> ] , <name4> [ <val2> ] , <name4> [ <val6> ] , <name4> [ <val5> ] ) } )
<val5> を <name4> の <val2> 番目にする	<name4> [ <val2> ] = <val5>	( <name4> [ <val2> ] = <val5> )
<name5> の <name1> の <name2> 番目を <name4> だけ増加させる	<name5> . <name1> [ <name2> ] += <name4>	( <name5> . <name1> [ <name2> ] += <name4> )
<name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name4> 、 <name2> とする	<name6> , <name3> , <name4> , <name2> = map ( int , <name5> . readline ( ) . split ( ) )	<name3> , <name4> , <name2> = map ( int , <name5> . readline ( ) . split ( ) )
<name5> の <val6> 番目を <val6> だけ増加させる	<name5> [ <val6> ] += <val6>	<name1> [ <val6> ] += <val6>
<name4> に <name1> を加えた値の <val3> 乗が <name6> 以下のとき、	if ( <name4> + <name1> ) ** <val3> <= <name6> :	for <name6> in ( <name4> + <name1> ) ** <val3> <= <name6> :
<name6> から <name4> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> , <name4> + <val1> ) :	continue for <name5> in range ( <name6> , <name4> + <val1> ) :
<name5> の <val2> 番目が <val1> と等しいとき、	if <name5> [ <val2> ] == <val1> :	if <name5> [ <val2> ] == <val1> :
<name3> が正規表現 <val6> にマッチした箇所を <val4> に置き換えた文字列を <name5> とする	<name5> = re . sub ( <val6> , <val4> , <name3> )	<name5> = re . sub ( <val6> , <val4> , <name3> )
<val1> から <name3> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> , <name3> ) :	. for <name4> in range ( <val1> , <name3> ) :
<name1> の <name2> に <val6> を掛けた値に <val3> を加えた値番目を <name5> とする	<name5> = <name1> [ <name2> * <val6> + <val3> ]	<name5> = <name1> [ <name2> * <val6> + <val3> ]
( <val5> ) からなる列に ( <val4> ) からなる列の <val1> 回分の列を加えた値を <name6> とする	<name6> = [ <val5> ] + [ <val4> ] * <val1>	<name6> = [ <val5> ] + [ <val4> ] * <val1>
<name4> . <name1> ( <name2> ) でなくなければならない	assert not <name4> . <name1> ( <name2> )	pi = not <name4> . <name1> ( <name2> )
<name4> ( <val6> , <name5> ) を <name3> とする	<name3> = <name4> ( <val6> , <name5> )	<name3> = <name4> ( <val6> , <name5> )
<name1> ( <name3> , <name2> , <name4> ) を <name6> とする	<name6> = <name1> ( <name3> , <name2> , <name4> )	<name6> = <name1> ( <name3> , <name2> , <name4> )
逆順に <name6> をパラメータとして <name6> の <val4> 番目を返す関数をキーとして <name5> をソートした列を <name5> とする	<name5> = sorted ( <name5> , reverse = True , key = lambda <name6> : <name6> [ <val4> ] )	<name2> = sorted ( <name5> , key = lambda <name6> : <name6> [ <val4> ] , reverse = True )
<name4> と <name3> の排他論理和を返す	return <name4> ^ <name3>	yield <name4> ^ <name3>
0 から <name2> の <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> . <name3> ) :	) : for <name5> in range ( <name2> . <name3> ) :
<name1> 内の <val6> を <name4> で置き換えた文字列を <name1> とする	<name1> = <name1> . replace ( <val6> , <name4> )	<name1> = <name1> . replace ( <val6> , <name4> )
<name6> に <name2> を加えた値を出力する	print ( <name6> + <name2> )	print ( <name6> + <name2> )
<name3> を空白で分割した字句列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name3> . split ( )	<name3> , <name2> = <name3> . split ( )
( <name5> 、 <name4> 、 <name1> ) からなる列を <name2> とするを <name1> の <val3> 番目にする	<name1> [ <val3> ] = <name2> = [ <name5> , <name4> , <name1> ]	<name1> [ <val3> ] = <name2> = [ <name5> , <name4> , <name1> ]
<name6> の長さが <name4> と等しくなければならない	assert ( len ( <name6> ) == <name4> )	sep = len ( <name6> ) == <name4>
<name1> を展開し、それぞれ <name4> 、 <name2> 、 <name3> 、 <name6> とする	<name4> , <name2> , <name3> , <name6> = <name1>	( <name4> , <name2> , <name3> , <name6> = <name1> )
<name6> ( <name5> ( <name2> ( <name3> , <name4> ( ) . <name1> ( ) ) ) ) を <name1> とする	<name1> = <name6> ( <name5> ( <name2> ( <name3> , <name4> ( ) . <name1> ( ) ) ) )	<name1> = <name6> ( <name5> ( <name2> ( <name3> , <name4> ( ) . <name1> ( ) ) ) )
<name5> が <val6> と等しいとき <name2> に <val6> を加えた値、そうでなければ <val4> を <name2> とする	<name2> = <name2> + <val6> if <name5> == <val6> else <val4>	<name2> = <name2> + <val6> if <name5> == <val6> else <val4>
<name6> に <name5> に <name3> を掛けた値を加えた値から <name1> に <name2> を掛けた値を引いた値が <val4> 以上のとき、	if <name6> + <name5> * <name3> - <name1> * <name2> >= <val4> :	> <name6> + <name5> * <name3> - <name1> * <name2> >= <val4> :
<name4> に <name3> から <name6> を引いた値を追加した集まり	<name4> . add ( <name3> - <name6> )	not <name4> . add ( <name3> - <name6> )
<name3> の <val4> 番目に <val2> を掛けた値に <val2> を掛けた値に <name3> の <val5> 番目に <val2> を掛けた値を加えた値に <name3> の <val6> 番目を加えた値を <name1> とする	<name1> = <name3> [ <val4> ] * <val2> * <val2> + <name3> [ <val5> ] * <val2> + <name3> [ <val6> ]	<name1> = <name3> [ <val4> ] * <val2> * <val2> + <name3> [ <val5> ] * <val2> + <name3> [ <val6> ]
<name3> の末尾に <val1> のリストを追加する	<name3> . append ( list ( <val1> ) )	<name1> . append ( list ( <val1> ) )
<name5> を <name4> の <name3> に <val2> を加えた値番目にする	<name4> [ <name3> + <val2> ] = <name5>	<name4> [ <name3> + <val2> ] = <name5>
<name1> から読み込んだ行の列を <name6> とする	<name6> = <name1> . readlines ( )	<name6> = <name1> . readlines ( )
<name4> の <val1> 番目を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name4> [ <val1> ]	<name4> [ <name2> ] = <name4> [ <val1> ]
<name3> の <name5> 番目の <name6> 番目、 <name3> の <name5> と <val1> << <name4> の論理和番目の <name4> 番目に <name2> を加えた値の最小値を <name3> の <name5> 番目の <name6> 番目にする	<name3> [ <name5> ] [ <name6> ] = min ( <name3> [ <name5> ] [ <name6> ] , <name3> [ <name5> | <val1> << <name4> ] [ <name4> ] + <name2> )	<name2> [ <name5> ] [ <name6> ] = min ( <name3> [ <name5> ] [ <name6> ] , <name3> [ <name5> | ( <val1> << <name4> ) ] [ <name4> ] + <name2> )
( <val2> ) からなる列の <val4> 回分の列を <name1> とする	<name1> = [ <val2> ] * <val4>	<name1> = [ <val2> ] * <val4>
<name4> と <name5> の <name2> 番目の論理積の 2 進数文字列内の <val3> の出現回数を出力する	print ( bin ( <name4> & <name5> [ <name2> ] ) . count ( <val3> ) )	<name4> . count ( bin ( <name4> & <name5> [ <name2> ] ) . count ( <val3> ) )
( <val6> 、 <val1> 、 <val2> 、 <val3> 、 <val4> 、 <val5> 、 <val6> ) の組の、つまり入力された文字列の整数値を <val1> で割った余り番目を出力する	print ( ( <val6> , <val1> , <val2> , <val3> , <val4> , <val5> , <val6> ) [ int ( input ( ) ) % <val1> ] )	print ( [ <val6> , <val1> , <val2> , <val3> , <val4> , <val5> , <val6> ) % int ( input ( ) ) % <val1> ] )
<val3> を書式として <val2> で整形した文字列を出力する	print ( <val3> . format ( <val2> ) )	print ( <val3> . format ( <val2> ) )
<name4> の逆順を展開してを出力する	print ( * <name4> [ : : - 1 ] )	print ( * <name4> [ : : - 1 ] )
<name3> の <name6> の <name5> 番目に <name3> の位置 <name1> に <val2> を加えた値、 <name3> 、 <name6> から <name5> に <val4> を掛けた値に <val2> を加えた値を探して見つかった位置を加えた値を返す	return <name3> . <name6> [ <name5> ] + <name3> . find ( <name5> * <val4> + <val2> , <name1> + <val2> , <name3> , <name6> )	yield <name3> . <name6> [ <name5> ] + <name3> . find ( ( <name5> * <val4> + <val2> , <name1> + <val2> , <name3> , <name6> ) )
<name1> が <name6> 以下のとき <val4> 、そうでなければ <val2> を出力する	print ( <val4> if <name1> <= <name6> else <val2> )	print ( <val4> if <name1> <= <name6> else <val2> )
( <val3> 、 <val4> ) の組	( <val3> , <val4> )	) ( <val3> , <val4> )
改行せずに <val3> 、 <name6> の <name4> を出力する	print ( <val3> , <name6> . <name4> , end = <val3> )	print ( <val3> , <name6> . <name4> , end = <val3> )
<name1> から読み込んだ一行を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name6> 、 <name3> 、 <name2> とする	<name5> , <name6> , <name3> , <name2> = map ( float , <name1> . readline ( ) . split ( ) )	<name6> , <name3> , <name2> = map ( float , <name1> . readline ( ) . split ( ) )
<name4> の <name6> 番目を順に <name3> 、 <name5> 、 <name2> として、繰り返す	for <name3> , <name5> , <name2> in <name4> [ <name6> ] :	for <name3> , <name5> , <name2> in <name4> [ <name6> ] :
<name3> から <name3> を <name5> で割った余りを引いた値に <name6> から <name6> を <name2> で割った余りを引いた値を掛けた値を <name1> とする	<name1> = ( <name3> - <name3> % <name5> ) * ( <name6> - <name6> % <name2> )	<name1> = ( <name3> - <name3> % <name5> ) * ( <name6> - <name6> % <name2> )
<name6> ( ) の整数値を <name1> とする	<name1> = int ( <name6> ( ) )	( <name1> = int ( <name6> ( ) ) )
( ( - <name3> ) からなる列の 0 から <name1> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <name5> に <val2> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ - <name3> ] * [ ( <name5> + <val2> ) for <name6> in range ( <name1> + <val2> ) ] ]	<name4> = [ [ - <name3> ] * [ ( <name5> + <val2> ) for <name6> in range ( <name1> + <val2> ) ] ]
<name5> が <name6> の先頭と等しいとき、	if <name5> == <name6> [ 0 ] :	for <name5> in <name6> [ 0 ] :
<name5> を <name2> とする	<name2> = <name5> ( P , s )	input = <name5> ( )
( - <name5> ) からなる列の <name4> に <val6> を加えた値回分の列を <name1> とする	<name1> = [ - <name5> ] * ( <name4> + <val6> )	<name1> = [ - <name5> ] * ( <name4> + <val6> )
<name5> を <name3> を <name4> で割った商だけ増加させる	<name5> += <name3> // <name4>	( <name5> += <name3> // <name4> )
<name3> の <name1> に <name4> の <name6> を掛けた値から <name3> の <name6> に <name4> の <name1> を掛けた値を引いた値を返す	return <name3> . <name1> * <name4> . <name6> - <name3> . <name6> * <name4> . <name1>	x return <name3> . <name1> * <name4> . <name6> - <name3> . <name6> * <name4> . <name1>
% . 16 f を <name2> に <name6> を加えた値を <val5> で割った値で割った余りを出力する	print ( '%.16f' % ( ( <name2> + <name6> ) / <val5> ) )	print ( %.16f' % ( ( <name2> + <name6> ) / <val5> ) )
<name4> が <val1> 以下のとき、 <blk> <name5> の <name4> 番目を <val6> だけ増加させる </blk>	if <name4> <= <val1> : <blk> <name5> [ <name4> ] += <val6> </blk>	\ <name4> <= <val1> : <blk> <name5> [ <name4> ] += <val6> </blk>
<name6> の <name5> に <name2> 、 - <name3> に <name2> を掛けた値を追加した集まり	<name6> . <name5> . add ( <name2> , - <name3> * <name2> )	<name6> . <name5> . add ( <name2> , - <name3> * <name2> )
( <val1> ) からなる列の <name2> 回分の列を <name4> の <name6> にする	<name4> . <name6> = [ <val1> ] * <name2>	<name4> . <name6> = [ <val1> ] * <name2>
<name6> に <name5> を加えた値から <name3> を引いた値を <name1> とする	<name1> = <name6> + <name5> - <name3>	<name1> = <name6> + <name5> - <name3>
( <val5> ) からなる列の <name4> に <val6> を加えた値回分の列を <name1> とする ( <val5> ) からなる列の <name4> に <val6> を加えた値回分の列を <name3> とする ( <val5> ) からなる列の <name4> に <val6> を加えた値回分の列を <name2> とする	<name1> = [ <val5> ] * ( <name4> + <val6> ) <name3> = [ <val5> ] * ( <name4> + <val6> ) <name2> = [ <val5> ] * ( <name4> + <val6> )	<name6> = [ <val5> ] * ( <name4> + <val6> ) <name3> = [ <val5> ] * ( <name4> + <val6> ) <name2> = [ <val5> ] * ( <name4> + <val6> )
<name6> を <name2> に <val5> を掛けた値だけ減少させる	<name6> -= <name2> * <val5>	<name6> -= <name2> * <val5>
空列を <name1> とする ( ( -1 ) からなる列の 0 から <name3> 未満までの数列の各要素を <name5> とし、 <name2> の列回分の列 ) からなる列を <name4> とする	<name1> = [ ] <name4> = [ [ - 1 ] * [ <name2> for <name5> in range ( <name3> ) ] ]	<name1> = [ [ ] <name4> = [ - 1 ] * [ <name2> for <name5> in range ( <name3> ) ] ]
<name6> を書式として <name3> 、 <name1> で整形した文字列を <name6> とする	<name6> = <name6> . format ( <name3> , <name1> )	<name6> = <name6> . format ( <name3> , <name1> )
 を間に入れて、つまり逆順に <name6> ( ) . <name1> ( ) の各要素に <name2> を適用した列をソートした列の各要素に整数を適用した列を連結した文字列を出力する	print ( ' ' . join ( map ( str , sorted ( map ( <name2> , <name6> ( ) . <name1> ( ) ) , reverse = True ) ) ) )	print ( ' ' . join ( map ( str , sorted ( map ( <name2> , reverse key = True ) ) [ : : - 1 ] ) ) )
<name3> の <name4> の <name6> 番目に <name3> の <name1> の <name6> 番目の <name5> 番目を加えた値が <name3> の <name4> の <name5> 番目より小さいとき、	if <name3> . <name4> [ <name6> ] + <name3> . <name1> [ <name6> ] [ <name5> ] < <name3> . <name4> [ <name5> ] :	list ( <name3> . <name4> [ <name6> ] + <name3> . <name1> [ <name6> ] [ <name5> ] < <name3> . <name4> [ <name5> ] :
<name5> ( <name1> , <name4> , <name2> ) を <name6> とする	<name6> = <name5> ( <name1> , <name4> , <name2> )	<name6> = <name5> ( <name1> , <name4> , <name2> )
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name2> 、 <name3> 、 <name4> とする	<name2> , <name3> , <name4> = sorted ( map ( int , input ( ) . strip ( ) . split ( ) ) )	<name2> , <name3> , <name4> = sorted ( map ( int , input ( ) . strip ( ) . split ( ) ) )
<name4> に <name4> から <name1> を引いた値を掛けた値に <name4> から <name6> を引いた値を掛けた値に <name4> から <name2> を引いた値を掛けた値の平方根を <name3> とする	<name3> = math . sqrt ( <name4> * ( <name4> - <name1> ) * ( <name4> - <name6> ) * ( <name4> - <name2> ) )	<name4> = math . sqrt ( <name4> * ( <name4> - <name1> ) * ( <name4> - <name6> ) * ( <name4> - <name2> ) )
0 から <name4> に <val6> を加えた値未満までの数列の各要素を <name3> とし、、つまり真の列を <name1> とする	<name1> = [ True for <name3> in range ( <name4> + <val6> ) ]	<name4> = [ True for <name3> in range ( <name4> + <val6> ) ]
<name5> の <name1> が、つまり未定値と等しくなければならない	assert <name5> . <name1> is not None	find = <name5> . <name1> is not None
<name5> に <val6> を加えた値を <name4> の <name1> で割った余りを <name5> とする	<name5> = ( <name5> + <val6> ) % <name4> . <name1>	<name5> = ( <name5> + <val6> ) % <name4> . <name1>
<name2> を <name6> で割った余りにする	<name2> % = <name6>	( <name2> % = <name6> )
<name1> を <val5> で割った余りが <val6> と等しいとき、	if <name1> % <val5> == <val6> :	continue <name1> % <val5> == <val6> :
<name4> の <name5> の <name2> 番目の <name1> 番目を返す	return <name4> . <name5> [ <name2> ] [ <name1> ]	yield <name4> . <name5> [ <name2> ] [ <name1> ]
<name6> が <val4> より小さくかつ <name2> の <name6> に <val3> を加えた値番目でないとき、	if <name6> < <val4> and not <name2> [ <name6> + <val3> ] :	list ( <name6> < <val4> and not <name2> [ <name6> + <val3> ] ) :
<name4> の各要素を <name5> とし、 <name5> が <name1> の部分集合のときの <name5> の列の集合を <name6> とする	<name6> = set ( [ <name5> for <name5> in <name4> if <name5> . issubset ( <name1> ) ] )	<name6> = set ( [ <name5> for <name5> in <name4> if <name5> . issubset ( <name1> ) ] )
<name5> ( <name3> , <name2> , <name1> )	<name5> ( <name3> , <name2> , <name1> )	( <name5> ( <name3> , <name2> , <name1> ) )
<name3> を <val6> で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name4> 、 <name1> 、 <name5> とする	<name4> , <name1> , <name5> = [ int ( <name2> ) for <name2> in <name3> . split ( <val6> ) ]	<name4> , <name1> , <name5> = [ int ( <name2> ) for <name2> in <name3> . split ( <val6> ) ]
<name6> の各要素を <name5> とし、 <name4> の <name5> 番目の列を <name1> とする	<name1> = [ <name4> [ <name5> ] for <name5> in <name6> ]	<name1> = [ <name4> [ <name5> ] for <name5> in <name6> ]
( <val3> ) からなる列の <name4> 回分の列を <name2> とする	<name2> = [ <val3> ] * <name4>	( <name2> = [ <val3> ] * <name4> )
<name6> の末尾に ( - <name4> を <name1> で割った値、 <name2> ) の組を追加する	<name6> . append ( ( - <name4> / <name1> , <name2> ) )	<name4> . append ( ( - <name4> / <name1> , <name2> ) )
<name1> の <name2> から <val6> を引いた値番目、 <name1> の <name2> 番目を <name1> の <name2> 番目、 <name1> の <name2> から <val6> を引いた値番目とする	<name1> [ <name2> ] , <name1> [ <name2> - <val6> ] = <name1> [ <name2> - <val6> ] , <name1> [ <name2> ]	<name1> [ <name2> ] , <name1> [ <name2> - <val6> ] = <name1> [ <name2> - <val6> ] , <name1> [ <name2> ]
<name6> の <name2> 番目が <name4> 以下のとき、	if <name6> [ <name2> ] <= <name4> :	list if <name6> [ <name2> ] <= <name4> :
<name2> の各要素を <name5> とし、 <name5> から <name4> を引いた値の <val3> 乗の列を <name1> とする	<name1> = [ ( <name5> - <name4> ) ** <val3> for <name5> in <name2> ]	<name1> = [ ( <name5> - <name4> ) ** <val3> for <name5> in <name2> ]
<name5> 、 <name4> から <name3> を引いた値に <name1> を掛けた値の最大値を <name5> とする	<name5> = max ( <name5> , ( <name4> - <name3> ) * <name1> )	<name5> = max ( <name5> , ( <name4> - <name3> ) * <name1> )
( <val3> ) からなる列の、つまり入力された文字列の整数値回分の列を順に <name2> として、繰り返す <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name4> 、 <name6> 、 <name1> とする <sep> ( <val5> 、 <val2> ) からなる列の <name4> に <name4> を掛けた値に <name6> に <name6> を掛けた値を加えた値が <name1> に <name1> を掛けた値と等しいかどうか番目を出力する </blk>	for <name2> in [ <val3> ] * int ( input ( ) ) : <blk> <name4> , <name6> , <name1> = sorted ( map ( int , input ( ) . split ( ) ) ) <sep> print ( [ <val5> , <val2> ] [ <name4> * <name4> + <name6> * <name6> == <name1> * <name1> ] ) </blk>	for <name2> in [ <val3> ] * int ( input ( ) ) : <blk> print ( [ <val3> ] ) , sorted ( map ( str , input ( ) . split ( ) ) ) <sep> <name6> ( <name1> , <val5> + <val2> ) * <name4> * <name6> [ <name1> ] == <name6> [ <name4> ] + <name6> [ <name1> * <name4> ] * <name6>
<name1> の <name5> に <val4> を加えた値番目に <val3> を追加した集まり	<name1> [ <name5> + <val4> ] . add ( <val3> )	<name1> [ <name5> + <val4> ] . add ( <val3> )
<name1> の <name3> 番目が <name2> より小さいとき、	if <name1> [ <name3> ] < <name2> :	if <name1> [ <name3> ] < <name2> :
<name2> の <name5> 番目に <name4> の <name5> 番目の <name6> 番目を加えた値を <name2> の <name6> 番目にする	<name2> [ <name6> ] = <name2> [ <name5> ] + <name4> [ <name5> ] [ <name6> ]	( <name2> [ <name6> ] = <name2> [ <name5> ] + <name4> [ <name5> ] [ <name6> ] )
( <val5> 、 <val3> 、 <val4> ) からなる列を <name6> とする	<name6> = [ <val5> , <val3> , <val4> ]	<name6> = [ <val5> , <val3> , <val4> ]
0 から <val3> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列を <name4> とする	<name4> = [ int ( input ( ) ) for <name6> in range ( <val3> ) ]	<name4> = [ int ( input ( ) ) for <name6> in range ( <val3> ) ]
<name5> ( <name2> , <name3> ) を <name4> とする	<name4> = <name5> ( <name2> , <name3> )	<name4> = <name5> ( <name2> , <name3> )
<name6> の <name3> 番目が <val2> と等しいとき、	if <name6> [ <name3> ] == <val2> :	: if <name6> [ <name3> ] == <val2> :
<name5> の <name6> の <name1> 番目の長さを <name5> の <name3> の <name1> 番目にする	<name5> . <name3> [ <name1> ] = len ( <name5> . <name6> [ <name1> ] )	<name2> . <name5> [ <name3> . <name1> ] = len ( <name5> . <name6> [ <name1> ] )
<name5> の長さが <val4> と等しいとき、	if len ( <name5> ) == <val4> :	for <name5> in len ( <name5> ) == <val4> :
( <val1> 、 <val2> ) からなる列を <name3> とする	<name3> = [ <val1> , <val2> ]	<name2> = [ <val1> , <val2> ]
<name4> . <name5> ( <name4> . <name3> , <name2> , <name6> ) を <name4> の <name3> にする	<name4> . <name3> = <name4> . <name5> ( <name4> . <name3> , <name2> , <name6> )	) . <name4> . <name3> = <name4> . <name5> ( <name4> . <name3> , <name2> , <name6> )
<name1> の整数値から <name5> の整数値を引いた値を出力する	print ( int ( <name1> ) - int ( <name5> ) )	print ( int ( <name1> ) - int ( <name5> ) )
<name5> の整数値を <name2> の <name5> にする	<name2> . <name5> = int ( <name5> )	( <name2> . <name5> = int ( <name5> ) )
<name1> の <name4> 番目が <name2> に <name6> を加えた値より大きいとき、	if <name1> [ <name4> ] > <name2> + <name6> :	continue <name1> [ <name4> ] > <name2> + <name6> :
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name3> とする	<name1> , <name6> , <name3> = map ( int , <name2> ( ) . split ( ) )	<name1> , <name6> , <name3> = map ( int , <name2> ( ) . split ( ) )
<name1> を <name5> の <name2> 番目の <val6> 番目だけ増加させる	<name1> += <name5> [ <name2> ] [ <val6> ]	( <name1> += <name5> [ <name2> ] [ <val6> ] )
<name4> の <name1> の整数値番目を展開してを出力する	print ( * <name4> [ int ( <name1> ) ] )	print ( * <name4> [ int ( <name1> ) ] )
<name5> が <name4> の <name6> 番目のリストと等しいとき、	if <name5> == list ( <name4> [ <name6> ] ) :	continue <name5> == list ( <name4> [ <name6> ] ) :
<name2> の末尾に <name4> の <name6> 番目を追加する	<name2> . append ( <name4> [ <name6> ] )	<name1> . append ( <name4> [ <name6> ] )
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name5> とする	<name6> , <name3> , <name5> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )	<name3> , <name5> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )
<name3> の <name6> 番目が <name5> 以下または <name2> の <val4> 番目が <val1> と等しいとき、	if <name3> [ <name6> ] <= <name5> or <name2> [ <val4> ] == <val1> :	list ( <name3> [ <name6> ] <= <name5> or <name2> [ <val4> ] == <val1> ) :
<name6> . <name3> ( <name1> . <name5> , <name1> . <name4> ) でないとき、	if not <name6> . <name3> ( <name1> . <name5> , <name1> . <name4> ) :	list ( not <name6> . <name3> ( <name1> . <name5> , <name1> . <name4> ) ) :
<name2> . <name6> ( <name3> . <name4> ) を返す	return <name2> . <name6> ( <name3> . <name4> )	self return <name2> . <name6> ( <name3> . <name4> )
<name6> の <name4> の <name5> 番目を <name6> の <name4> の <name3> 番目だけ増加させる	<name6> . <name4> [ <name5> ] += <name6> . <name4> [ <name3> ]	<name1> . <name4> [ <name5> ] += <name6> . <name4> [ <name3> ]
<val4> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val4> . join ( map ( str , <name5> ) ) )	print ( <val4> . join ( map ( str , <name5> ) ) )
<name3> を <name5> の -2 番目の <name4> 番目だけ増加させる	<name3> += <name5> [ - 2 ] [ <name4> ]	<name1> += <name5> [ - 2 ] [ <name4> ]
<name2> の <name1> の <name5> 番目に <name5> に <val4> を加えた値を掛けた値を <name3> で割った余りを <name2> の <name1> の <name5> に <val4> を加えた値番目にする	<name2> . <name1> [ <name5> + <val4> ] = <name2> . <name1> [ <name5> ] * ( <name5> + <val4> ) % <name3>	input . <name1> [ <name5> + <val4> ] = <name2> . <name1> [ <name5> ] * ( <name5> + <val4> ) % <name3>
<name1> ( <name2> , <name3> , <name4> ) を <name5> とする	<name5> = <name1> ( <name2> , <name3> , <name4> )	else = <name1> ( <name2> , <name3> , <name4> )
\ <name3> の末尾から <val5> を取り除いた文字列を順に <name4> として、繰り返す\	\ for <name4> in <name3> . rstrip ( <val5> ) : \	) for <name4> in <name3> [ - 1 : <val5> ] :
<name3> の <name5> から <val6> を引いた値番目の <name4> 番目を <name1> とする <name3> の <name5> に <val6> を加えた値番目の <name4> 番目を <name2> とする	<name1> = <name3> [ <name5> - <val6> ] [ <name4> ] <name2> = <name3> [ <name5> + <val6> ] [ <name4> ]	<name2> = <name1> = <name3> [ <name5> - <val6> ] [ <name4> ] <name2> = <name3> [ <name5> + <val6> ] [ <name4> ]
<name3> の末尾に <name1> を実部、 <name2> を虚部とした複素数を追加する	<name3> . append ( complex ( <name1> , <name2> ) )	<name3> . append ( complex ( <name1> , <name2> ) )
<name2> を <name3> の <name6> に <name5> を加えた値番目にする	<name3> [ <name6> + <name5> ] = <name2>	( <name3> [ <name6> + <name5> ] = <name2> )
<name2> の <name1> 番目の <name3> 番目が <name2> の <name1> 番目の <name5> 番目と等しくないとき、	if <name2> [ <name1> ] [ <name3> ] != <name2> [ <name1> ] [ <name5> ] :	while <name2> [ <name1> ] [ <name3> ] != <name2> [ <name1> ] [ <name5> ] :
<name5> の <name2> 番目を <val6> との排他的論理和にする	<name5> [ <name2> ] ^ = <val6>	( <name5> [ <name2> ] ^ = <val6> )
<name5> の <name4> 番目の先頭に <name3> を追加する	<name5> [ <name4> ] . appendleft ( <name3> )	<name1> [ <name4> ] . appendleft ( <name3> )
<name4> が <name1> 以上の間、次を繰り返す	while <name4> >= <name1> :	del <name4> >= <name1> :
-1 を <name3> の <name6> 番目にする	<name3> [ <name6> ] = - 1	( <name3> [ <name6> ] = - 1 )
<name6> と <val3> の論理積のとき、	if <name6> & <val3> :	: if <name6> & <val3> :
<name4> の <name6> 番目が <name1> に <name2> を加えた値より大きいとき、	if <name4> [ <name6> ] > <name1> + <name2> :	list if <name4> [ <name6> ] > <name1> + <name2> :
<name5> を <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val6> ] ) から <name5> を引いた値の <name2> だけ増加させる	<name5> += ( <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val6> ] ) - <name5> ) . <name2>	<name1> += <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val6> ] ) - <name5> . <name2>
<name3> の <name6> 番目の末尾に ( <name1> 、 <name2> ) の組を追加する	<name3> [ <name6> ] . append ( ( <name1> , <name2> ) )	<name2> [ <name6> ] . append ( ( <name1> , <name2> ) )
<name3> ( <name4> , <name2> ) を出力する	print ( <name3> ( <name4> , <name2> ) )	print ( <name3> ( <name4> , <name2> ) )
<name5> の <name6> 番目の <name1> から <val3> を引いた値から <name4> を引いた値番目を <name2> の <name4> 番目の <name6> 番目にする	<name2> [ <name4> ] [ <name6> ] = <name5> [ <name6> ] [ <name1> - <val3> - <name4> ]	( <name2> [ <name4> ] [ <name6> ] = <name5> [ <name6> ] [ <name1> - <val3> - <name4> ] )
辞書のキーと値の集まりを順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in dict ( C ) . items ( ) :	[ <name4> , <name3> in dict ( dict ) [ items ( ) ] :
<name4> の <val6> 番目の各要素を <name3> とし、 <name4> の <val5> 番目の列の各要素を <name1> とし、 <name1> に <name3> を加えた値の列の辞書カウンタを <name2> とする	<name2> = Counter ( [ <name1> + <name3> for <name1> in [ <name4> [ <val5> ] for <name3> in <name4> [ <val6> ] ] ] )	<name6> = Counter ( [ <name1> + <name3> for <name1> in [ <name4> [ <val5> ] for <name3> in <name4> [ <val6> ] ] ] )
( <name2> 、 <name4> の <val6> 番目に <val6> を加えた値 ) からなる列を <name1> とする	<name1> = [ <name2> , <name4> [ <val6> ] + <val6> ]	<name1> = [ <name2> , <name4> [ <val6> ] + <val6> ]
<name1> の末尾に <name4> の <name5> 番目が <name4> の <name2> 番目と等しいとき <val6> 、そうでなければ <val3> を追加する	<name1> . append ( <val6> if <name4> [ <name5> ] == <name4> [ <name2> ] else <val3> )	<name1> . append ( <val6> if <name4> [ <name5> ] == <name4> [ <name2> ] else <val3> )
<name2> ( <name1> , ( <name6> + <val5> , <name3> + <val4> , <name2> ) )	<name2> ( <name1> , ( <name6> + <val5> , <name3> + <val4> , <name2> ) )	<name2> ( <name1> , ( <name6> + <val5> , <name3> + <val4> , <name2> ) )
<name6> の <name4> の <name5> 番目の <name1> 番目に <name6> の <name2> の <name1> 番目を掛けた値を <name6> の <name3> で割った余りを返す	return <name6> . <name4> [ <name5> ] [ <name1> ] * <name6> . <name2> [ <name1> ] % <name6> . <name3>	return <name6> . <name4> [ <name5> ] [ <name1> ] * <name6> . <name2> [ <name1> ] % <name6> . <name3>
<name6> から <name4> を引いた値を <name1> から <name2> を引いた値で割った商を <name3> とする	<name3> = ( <name6> - <name4> ) // ( <name1> - <name2> )	<name3> = ( <name6> - <name4> ) // ( <name1> - <name2> )
<name5> の <name2> 番目、 <name5> の <name6> 番目を <name5> の <name6> 番目、 <name5> の <name2> 番目とする	<name5> [ <name6> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name6> ]	) [ <name6> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name6> ]
<name1> が <val6> と等しくない間、次を繰り返す	while <name1> != <val6> :	del ( <name1> != <val6> ) :
<name6> の末尾に ( <name2> 、 <name4> ) からなる列を追加する	<name6> . append ( [ <name2> , <name4> ] )	<name4> . append ( [ <name2> , <name4> ] )
( <name4> の先頭を除いた部分列、 <name6> ) の組を返す	return ( <name4> [ 1 : ] , <name6> )	yield ( <name4> [ 1 : ] , <name6> )
( ( <val6> 、 -3 ) からなる列、 ( <val6> 、 -2 ) からなる列、 ( <val6> 、 -1 ) からなる列、 ( <val2> 、 <val6> ) からなる列、 ( <val1> 、 <val6> ) からなる列、 ( <val3> 、 <val6> ) からなる列、 ( <val6> 、 <val2> ) からなる列、 ( <val6> 、 <val1> ) からなる列、 ( <val6> 、 <val3> ) からなる列、 ( -3 、 <val6> ) からなる列、 ( -2 、 <val6> ) からなる列、 ( -1 、 <val6> ) からなる列 ) からなる列を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in [ [ <val6> , - <val2> ] , [ <val6> , - <val1> ] , [ <val6> , - <val3> ] , [ <val2> , <val6> ] , [ <val1> , <val6> ] , [ <val3> , <val6> ] , [ <val6> , <val2> ] , [ <val6> , <val1> ] , [ <val6> , <val3> ] , [ - <val2> , <val6> ] , [ - <val1> , <val6> ] , [ - <val3> , <val6> ] ] :	for <name4> in [ [ <val6> , - <val6> ] , [ <val6> , - <val6> ] , [ <val6> , - <val6> ] , [ <val2> , <val6> ] , [ <val1> , <val6> ] , [ <val6> , <val6> , <val6> ] , [ <val6> , - <val2> ] , [ <val6> , <val2> ] ] :
<name6> の、つまり先頭から <name2> 番目までの部分列を <name3> とする	<name3> = <name6> [ : <name2> ]	<name3> = <name6> [ : <name2> ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name3> 、 <name1> 、 <name4> 、 <name5> とする	<name3> , <name1> , <name4> , <name5> = sorted ( map ( int , input ( ) . split ( ) ) )	<name2> , <name3> , <name1> , <name4> , <name5> = sorted ( map ( int , input ( ) . split ( ) ) )
入力された文字列に <val4> を掛けた値を <name2> とする	<name2> = input ( ) * <val4>	<name2> = input ( ) * <val4>
<name5> ( <name3> ( <name2> ) ) を <name4> とする	<name4> = <name5> ( <name3> ( <name2> ) )	<name4> = <name5> ( <name3> ( <name2> ) )
<val5> の <val4> 乗に <val6> を加えた値を <name2> とする	<name2> = <val5> ** <val4> + <val6>	<name2> = <val5> ** <val4> + <val6>
- <name1> を <name4> で割った値に <name5> から <name3> を <val2> で割った値を引いた値を掛けた値に <name6> に <name1> を加えた値を <val2> で割った値を加えた値を <name6> とする	<name6> = - ( <name1> / <name4> ) * ( <name5> - <name3> / <val2> ) + ( <name6> + <name1> ) / <val2>	<name6> = - ( <name1> / <name4> ) * ( <name5> - <name3> / <val2> ) + ( <name6> + <name1> ) / <val2>
( <name4> から <val1> を引いた値、 <name4> 、 <name4> に <val1> を加えた値 ) の組を順に <name6> として、繰り返す	for <name6> in ( <name4> - <val1> , <name4> , <name4> + <val1> ) :	. for <name6> in ( <name4> - <val1> , <name4> , <name4> + <val1> ) :
( <val6> ) からなる列の <val2> 回分の列を <name4> とする	<name4> = [ <val6> ] * <val2>	<name4> = [ <val6> ] * <val2>
<name6> に <name5> を掛けた値を <val3> で割った値を出力する	print ( <name6> * <name5> / <val3> )	print ( <name6> * <name5> / <val3> )
<name2> の先頭の浮動小数点数を返す	return float ( <name2> [ 0 ] )	yield float ( <name2> [ 0 ] )
<name1> の <name3> の <name5> 番目の <name2> の末尾に <name2> を追加する	<name1> . <name3> [ <name5> ] . <name2> . append ( <name2> )	. <name1> [ <name3> . <name5> ] . <name2> . append ( <name2> )
<name4> の <name6> 番目が <name3> と等しいとき、 <blk> ( <name3> 、空列 ) の組を返す </blk>	if <name4> [ <name6> ] == <name3> : <blk> return ( <name3> , [ ] ) </blk>	while <name4> [ <name6> ] == <name3> : <blk> return ( <name3> , [ ] ) </blk>
<name1> を展開し、それぞれ <name6> 、 <name4> 、 <name5> 、 <name2> とする	<name6> , <name4> , <name5> , <name2> = <name1>	( <name6> , <name4> , <name5> , <name2> = <name1> )
<name2> の <name5> 番目の末尾に ( <name1> 、 <name4> 、 <name6> ) の組を追加する	<name2> [ <name5> ] . append ( ( <name1> , <name4> , <name6> ) )	<name4> [ <name5> ] . append ( ( <name1> , <name4> , <name6> ) )
0 から <name4> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name2> in range ( <name4> ) ]	<name3> = [ [ ] for <name2> in range ( <name4> ) ]
<name2> の <name3> の <name4> 番目番目が <val6> と等しいとき、 <blk> <name5> を <val6> を <name4> だけ左シフトした値だけ増加させる </blk>	if <name2> [ <name3> [ <name4> ] ] == <val6> : <blk> <name5> += ( <val6> << <name4> ) </blk>	\ <name2> [ <name3> [ <name4> ] ] == <val6> : <blk> <name5> += <val6> << <name4> </blk>
<name2> の <val4> 番目を <name3> の y 座標にする	<name3> . y = <name2> [ <val4> ]	( <name3> . y = <name2> [ <val4> ] )
<name2> の <name5> の 2 進数文字列内の <val6> の出現回数を返す	return bin ( <name2> . <name5> ) . count ( <val6> )	assert bin ( <name2> . count ( <name5> ) . count ( <val6> ) )
0 から <val1> を <name4> だけ左シフトした値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> << <name4> ) :	) for <name5> in range ( <val1> << <name4> ) :
0 から <name2> 未満までの数列の各要素を <name1> とし、 <name6> ( ) の整数値の列の総和を <name2> で割った商を出力する	print ( sum ( [ int ( <name6> ( ) ) for <name1> in range ( <name2> ) ] ) // <name2> )	return sum ( [ int ( <name6> ( ) ) for <name1> in range ( <name2> ) ] ) // <name2> )
<val1> の <val4> 乗から <val2> を引いた値を <name5> とする	<name5> = <val1> ** <val4> - <val2>	<name5> = <val1> ** <val4> - <val2>
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , <name1> ( ) . split ( ) )	<name6> , <name3> = map ( int , <name1> ( ) . split ( ) )
<name6> の <name1> 番目の末尾に ( <name2> 、 <name5> ) の組を追加する	<name6> [ <name1> ] . append ( ( <name2> , <name5> ) )	<name2> [ <name1> ] . append ( ( <name2> , <name5> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> 、 <name3> とする	<name2> , <name4> , <name3> = map ( int , input ( ) . split ( ) )	<name2> , <name4> , <name3> = map ( int , input ( ) . split ( ) )
入力された文字列を空白で分割した字句列のリストを展開し、それぞれ <name3> 、 <name6> 、 <name5> とする	<name3> , <name6> , <name5> = list ( input ( ) . split ( ) )	<name3> , <name6> , <name5> = list ( input ( ) . split ( ) )
( ( <val6> の浮動小数点数 ) からなる列の 0 から <name5> 未満までの数列の各要素を <name4> とし、 <name5> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ float ( <val6> ) ] * [ <name5> for <name4> in range ( <name5> ) ] ]	else = [ [ float ( <val6> ) ] * [ <name5> for <name4> in range ( <name5> ) ] ]
<name6> の <name5> 番目の <name1> 番目の <name4> 番目を <val3> だけ減少させる	<name6> [ <name5> ] [ <name1> ] [ <name4> ] -= <val3>	<name1> [ <name5> ] [ <name1> ] [ <name4> ] -= <val3>
<name3> と <name6> 、 <name2> の和集合	<name3> . union ( <name6> , <name2> )	<name1> . union ( <name6> , <name2> )
<name3> 、 <name4> 、 <name1> を出力する	print ( <name3> , <name4> , <name1> )	print ( <name3> , <name4> , <name1> )
次は例外に関する条件がある <blk> 入力された文字列を <val5> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name3> とする </blk>	try : <blk> <name6> , <name3> = map ( float , input ( ) . split ( <val5> ) ) </blk>	\ <name6> , <name3> = try : <blk> <name6> , <name3> = map ( float , input ( ) . split ( <val5> ) ) </blk>
<name1> に <name5> を掛けた値を <name1> と <name5> の最大公約数で割った商を <name1> とする	<name1> = <name1> * <name5> // gcd ( <name1> , <name5> )	<name1> = <name1> * <name5> // gcd ( <name1> , <name5> )
<name2> の <name3> 番目の <name1> に [ MASK ] を挿入する	<name2> [ <name3> ] . insert ( <name1> )	<name1> . insert ( <name2> [ <name3> ] . insert ( <name1> ) )
<val5> のラジアンを <name6> とする	<name6> = math . radians ( <val5> )	<name6> = math . radians ( <val5> )
, を間に入れて ( <name6> の <name3> 、 <name6> の <name1> 、 <name6> の <name5> 、 <name6> の <name2> 、 <name6> の <name4> 、 <name6> の <name6> ) の組の各要素を <name4> とし、 <name4> を <name2> として整数の列を連結した文字列を返す	return ',' . join ( [ str ( <name2> = <name4> ) for <name4> in ( <name6> . <name3> , <name6> . <name1> , <name6> . <name5> , <name6> . <name2> , <name6> . <name4> , <name6> . <name6> ) ] )	<name5> . update ( ) . join ( [ str ( <name4> = <name2> for <name4> in ( <name6> . <name3> , <name6> . <name1> , <name6> . <name5> , <name6> . <name2> , <name6> . <name4> , <name6> . <name6> . <name6> ) ] ) )
<name4> ( <name1> ( <name3> ( ) ) ) を <name5> とするを <name2> とする	<name2> = <name5> = <name4> ( <name1> ( <name3> ( ) ) )	<name6> = <name5> = <name4> ( <name1> ( <name3> ( ) ) )
整数の <name6> に <val2> を加えた値番目を <name4> とする	<name4> = str [ <name6> + <val2> ]	<name3> = str [ <name6> + <val2> ]
<name5> の <val1> 番目を <name2> とする	<name2> = <name5> [ <val1> ]	<name2> = <name5> [ <val1> ]
<name2> の <name6> の <name1> の <name5> 番目の末尾に <name1> を追加する	<name2> . <name6> [ <name1> . <name5> ] . append ( <name1> )	<name2> . <name6> [ <name1> . <name5> ] . append ( <name1> )
入力された文字列を <val6> で分割した字句列の各要素に整数を適用した列のリストを <name5> とする	<name5> = list ( map ( str , input ( ) . split ( <val6> ) ) )	<name5> = list ( map ( int , input ( ) . split ( <val6> ) ) )
<name2> が ( <name3> 、 <name6> 、 <name1> 、 <name5> 、 <name4> 、 <name2> 、 <name3> ) からなる列に含まれないとき、	if <name2> not in [ <name3> , <name6> , <name1> , <name5> , <name4> , <name2> , <name3> ] :	list not in <name2> not in [ <name3> , <name6> , <name1> , <name5> , <name4> , <name2> , <name3> ] :
<name1> の <name5> から <val4> を引いた値番目の <name6> 番目、 <name1> の <name5> 番目の <name6> から <name3> [ <name5> ] の <val4> 番目を引いた値番目に <name3> の <name5> 番目の先頭を加えた値の最大値を <name1> の <name5> 番目の <name6> 番目にする	<name1> [ <name5> ] [ <name6> ] = max ( <name1> [ <name5> - <val4> ] [ <name6> ] , <name1> [ <name5> ] [ <name6> - <name3> [ <name5> ] [ <val4> ] ] + <name3> [ <name5> ] [ 0 ] )	<name1> [ <name5> ] [ <name6> ] = max ( <name1> [ <name5> - <val4> ] [ <name6> ] , <name1> [ <name5> ] [ <name6> - <name3> [ <name5> ] [ <val4> ] ] + <name3> [ <name5> ] [ 0 ] )
<name2> の先頭から <name2> の <name6> の <name3> 番目を探して見つかった位置を <name4> とする	<name4> = <name2> . find ( <name2> . <name6> [ <name3> ] )	<name4> = <name2> . find ( <name2> . <name6> [ <name3> ] )
<val1> から <name4> の <val2> 乗の整数値を <val5> で割った商に <val1> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , int ( <name4> ** <val2> ) // <val5> + <val1> ) :	( <val1> , <name3> in range ( <val1> , int ( <name4> ** <val2> ) // <val5> + <val1> ) :
<name6> ( <name1> , ( ( <name5> , <name3> ) , ( <name4> , <name2> ) ) ) を <name2> とする	<name2> = <name6> ( <name1> , ( ( <name5> , <name3> ) , ( <name4> , <name2> ) ) )	<name4> = <name6> ( <name1> , ( ( <name5> , <name3> ) , ( <name4> , <name2> ) ) )
<name6> のとき <val4> に <name6> を掛けた値、そうでなければ -1 を出力する	print ( <val4> * <name6> if <name6> else - 1 )	<name6> . print ( <val4> * <name6> if <name6> else - 1 )
<name2> 、 <name1> 、 <name6> 、 <name5> の要素をそれぞれ組にした列を順に <name6> 、 <name5> 、 <name4> 、 <name3> として、繰り返す	for <name6> , <name5> , <name4> , <name3> in zip ( <name2> , <name1> , <name6> , <name5> ) :	( <name6> , <name5> , <name4> , <name3> in zip ( <name2> , <name1> , <name6> , <name5> ) :
<val3> を開始番号として <name4> の先頭を除いた部分列に番号付した組の列を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in enumerate ( <name4> [ <val3> : ] , start = <val3> ) :	. for <name5> , <name6> in enumerate ( <name4> [ <val3> : ] , start = <val3> ) :
<val2> から <name4> に <name6> を加えた値に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , <name4> + <name6> + <val2> ) :	. for <name5> in range ( <val2> , <name4> + <name6> + <val2> ) :
<name4> . <name2> . <name3> . <name1> ( ) でなくかつ <name4> . <name2> . <name6> . <name1> ( ) でないとき、	if not <name4> . <name2> . <name3> . <name1> ( ) and not <name4> . <name2> . <name6> . <name1> ( ) :	list ( not <name4> . <name2> . <name3> . <name1> ( ) ) and not <name4> . <name2> . <name6> . <name1> ( ) :
<name6> が <name2> と等しいかどうかが <name3> と等しいかどうかが <val5> と等しいとき、	if <name6> == <name2> == <name3> == <val5> :	list == <name6> == <name2> == <name3> == <val5> :
<name5> の <name3> 番目の <val1> 番目が <name5> の <name4> 番目の <val1> 番目より大きいとき、	if <name5> [ <name3> ] [ <val1> ] > <name5> [ <name4> ] [ <val1> ] :	while <name5> [ <name3> ] [ <val1> ] > <name5> [ <name4> ] [ <val1> ] :
<name6> の <name1> の <name4> から <name3> を引いた値番目の <name3> 番目を返す	return <name6> . <name1> [ <name4> - <name3> ] [ <name3> ]	yield <name6> . <name1> [ <name4> - <name3> ] [ <name3> ]
<val3> を <name2> の <name5> の <name6> 番目にする	<name2> . <name5> [ <name6> ] = <val3>	<name4> . <name2> [ <name5> . <name6> ] = <val3>
<name5> と <name5> に <val1> を加えた値の論理積から <val1> を引いた値を <name5> とする	<name5> = ( <name5> & ( <name5> + <val1> ) ) - <val1>	else = <name5> & ( <name5> + <val1> ) - <val1>
<name3> が <name1> の <name2> の <name1> の <name6> 番目と等しくないとき、	if <name3> != <name1> . <name2> [ <name1> . <name6> ] :	for <name3> != <name1> . <name2> [ <name1> . <name6> ] :
<name6> を <val4> で割った余りが <val2> と等しいとき、	if <name6> % <val4> == <val2> :	> ( <name6> % <val4> ) == <val2> :
( <val5> ) からなる列を追加して <name3> を拡張する	<name3> . extend ( [ <val5> ] )	<name3> . extend ( [ <val5> ] )
<name2> の <name5> 番目に <val3> を加えた値を <name4> とする	<name4> = <name2> [ <name5> ] + <val3>	<name4> = <name2> [ <name5> ] + <val3>
<name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> 、 <name6> とする	<name2> , <name4> , <name6> = map ( int , <name5> . readline ( ) . split ( ) )	<name3> , <name4> , <name6> = map ( int , <name5> . readline ( ) . split ( ) )
<name6> の <name2> の <val5> 番目、 <name6> の <name2> の先頭、 <name6> の <name2> の <val3> 番目、 <name6> の <name2> の <val4> 番目を <name6> の <name2> の先頭、 <name6> の <name2> の <val4> 番目、 <name6> の <name2> の <val5> 番目、 <name6> の <name2> の <val3> 番目とする	<name6> . <name2> [ 0 ] , <name6> . <name2> [ <val4> ] , <name6> . <name2> [ <val5> ] , <name6> . <name2> [ <val3> ] = <name6> . <name2> [ <val5> ] , <name6> . <name2> [ 0 ] , <name6> . <name2> [ <val3> ] , <name6> . <name2> [ <val4> ]	<name4> . <name2> [ 0 ] , <name6> . <name2> [ <val4> ] , <name6> . <name2> [ <val5> ] , <name6> . <name2> [ <val3> ] = <name6> . <name2> [ <val5> ] , <name6> . <name2> [ 0 ] , <name6> . <name2> [ <val3> ] , <name6> . <name2> [ <val4> ]
<name1> の <val3> 番目に <name1> の <val4> 番目を加えた値が <name2> より大きいとき、	if <name1> [ <val3> ] + <name1> [ <val4> ] > <name2> :	continue <name1> [ <val3> ] + <name1> [ <val4> ] > <name2> :
<name3> に <val5> を加えた値から <name2> に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> + <val5> , <name2> + <val5> ) :	. for <name6> in range ( <name3> + <val5> , <name2> + <val5> ) :
<name3> の <name1> 番目の先頭から <name3> の <name1> + <val2> 番目の先頭を引いた値の <val5> 乗に <name3> の <name1> 番目の <val2> 番目から <name3> の <name1> + <val2> 番目の <val2> 番目を引いた値の <val5> 乗を加えた値を <name4> とする	<name4> = ( <name3> [ <name1> ] [ 0 ] - <name3> [ <name1> + <val2> ] [ 0 ] ) ** <val5> + ( <name3> [ <name1> ] [ <val2> ] - <name3> [ <name1> + <val2> ] [ <val2> ] ) ** <val5>	<name4> = ( <name3> [ <name1> ] [ 0 ] - <name3> [ <name1> + <val2> ] [ 0 ] ) ** <val5> + ( <name3> [ <name1> ] [ <val2> ] - <name3> [ <name1> + <val2> ] [ <val2> ] ) ** <val5>
<name2> 、 <name4> を <name1> の先頭、 <name1> の <val3> 番目とする	<name1> [ 0 ] , <name1> [ <val3> ] = <name2> , <name4>	<name1> [ 0 ] , <name1> [ <val3> ] = <name2> , <name4>
<name6> の <name4> 番目を展開し、それぞれ <name4> 、 <name3> 、 <name5> 、 <name1> 、 <name2> とする	<name4> , <name3> , <name5> , <name1> , <name2> = <name6> [ <name4> ]	( <name4> , <name3> , <name5> , <name1> , <name2> = <name6> [ <name4> ] )
<val5> の <val2> に ( <val1> - <name4> ) を掛けた値の切り上げ整数値乗から <val1> を引いた値、 <val3> の最大値を <name3> の <name6> にする	<name3> . <name6> = max ( <val5> ** ceil ( <val2> * ( <val1> - <name4> ) ) - <val1> , <val3> )	<name1> . <name6> = max ( <val5> ** math . ceil ( <val2> * ( <val1> - <name4> ) ) - <val1> , <val3> )
<name5> の <name3> 番目の <name4> 番目が <name5> の <name3> 番目の <name6> 番目に <name5> の <name6> 番目の <name4> 番目を加えた値より大きいとき、	if <name5> [ <name3> ] [ <name4> ] > <name5> [ <name3> ] [ <name6> ] + <name5> [ <name6> ] [ <name4> ] :	> <name5> [ <name3> ] [ <name4> ] > <name5> [ <name3> ] [ <name6> ] + <name5> [ <name6> ] [ <name4> ] :
<name2> から <name6> を引いた値の <val3> 乗に <name5> から <name4> を引いた値の <val3> 乗を加えた値の <val1> 乗を <name1> とする	<name1> = ( ( <name2> - <name6> ) ** <val3> + ( <name5> - <name4> ) ** <val3> ) ** <val1>	<name1> = ( ( <name2> - <name6> ) ** <val3> + ( <name5> - <name4> ) ** <val3> ) ** <val1>
<name5> の <name2> に <val4> を加えた値を <val6> で割った余り番目を <name1> とする	<name1> = <name5> [ ( <name2> + <val4> ) % <val6> ]	<name6> = <name5> [ ( <name2> + <val4> ) % <val6> ]
<name3> の <name4> が -1 と等しいとき、	if <name3> . <name4> == - 1 :	: if <name3> . <name4> == - 1 :
<name2> の <name4> 番目の <name3> 番目を <name5> とする	<name5> = <name2> [ <name4> ] [ <name3> ]	<name5> = <name2> [ <name4> ] [ <name3> ]
<name2> から <name5> を引いた値を <name6> から <name4> を引いた値で割った値を <name3> とする	<name3> = ( <name2> - <name5> ) / ( <name6> - <name4> )	<name3> = ( <name2> - <name5> ) / ( <name6> - <name4> )
<name2> の <name5> を <name2> の <name1> にする	<name2> . <name1> = <name2> . <name5>	<name2> . <name1> = <name2> . <name5>
<name2> の <name3> 番目が <name6> と等しいとき、 <blk> <val4> を <name2> の <name3> 番目にする </blk>	if <name2> [ <name3> ] == <name6> : <blk> <name2> [ <name3> ] = <val4> </blk>	list if <name2> [ <name3> ] == <name6> : <blk> <name2> [ <name3> ] = <val4> </blk>
<name4> の末尾を除いた部分列を <name4> とする	<name4> = <name4> [ : - 1 ]	<name4> = <name4> [ : - 1 ]
<name4> の <name2> から <name5> を引いた値番目が -1 と等しくなくかつ <name4> の <name2> から <name5> を引いた値番目が <name1> 以下のとき、	if <name4> [ <name2> - <name5> ] != - 1 and <name4> [ <name2> - <name5> ] <= <name1> :	if <name4> [ <name2> - <name5> ] != - 1 and <name4> [ <name2> - <name5> ] <= <name1> :
<val5> 、 <val5> を出力する	print ( <val5> , <val5> )	print ( <val5> , <val5> )
<name4> に番号付した組の列の各要素を <name3> 、 <name1> とし、 <name3> が <name1> と等しくないときの ( <name3> 、 <name1> ) の組の列を <name6> とする	<name6> = [ ( <name3> , <name1> ) for <name3> , <name1> in enumerate ( <name4> ) if <name3> != <name1> ]	<name6> = [ ( <name3> , <name1> ) for <name3> , <name1> in enumerate ( <name4> ) if <name3> != <name1> ]
<name5> が <val1> と等しいとき、 <blk> <name4> に <name2> を加えた値を出力する </blk>	if <name5> == <val1> : <blk> print ( <name4> + <name2> ) </blk>	\ print ( <name5> == <val1> : <blk> print ( <name4> + <name2> ) ) </blk>
<val6> を <name5> を <name2> を <name1> とするとするとするを <name4> とする	<name4> = <name1> = <name2> = <name5> = <val6>	<name4> = <name1> = <name2> = <name5> = <val6>
0 から <val1> 未満までの数列の各要素を <name6> とし、 <name4> の <name6> 番目の <name3> に <name5> を加えた値番目の列が全てが真のとき、	if all ( [ <name4> [ <name6> ] [ <name3> + <name5> ] for <name6> in range ( <val1> ) ] ) :	list ( all ( [ <name4> [ <name6> ] [ <name3> + <name5> ] for <name6> in range ( <val1> ) ] ) :
( <val3> 、 <val4> 、 <val6> ) からなる列を順に <name1> として、繰り返す	for <name1> in [ <val3> , <val4> , <val6> ] :	len ( <name1> in [ <val3> , <val4> , <val6> ] ) :
<name5> の先頭の <val6> 乗に <name5> の <val1> 番目の <val6> 乗を加えた値から <name5> の <val6> 番目の <val6> 乗を引いた値を <name4> とする	<name4> = <name5> [ 0 ] ** <val6> + <name5> [ <val1> ] ** <val6> - <name5> [ <val6> ] ** <val6>	<name4> = <name5> [ 0 ] ** <val6> + <name5> [ <val1> ] ** <val6> - <name5> [ <val6> ] ** <val6>
空列を無限の整数列とする	count = [ ]	count = [ ]
<name3> の <val2> 乗に <name1> の <val2> 乗を加えた値から <val2> に <name3> を掛けた値に <name1> を掛けた値に <name6> . <name4> * <name5> を <val6> で割った値の余弦を掛けた値を引いた値の平方根を <name5> とする	<name5> = <name6> . sqrt ( <name3> ** <val2> + <name1> ** <val2> - <val2> * <name3> * <name1> * <name6> . cos ( <name6> . <name4> * <name5> / <val6> ) )	else = math . sqrt ( <name3> ** <val2> + <name1> ** <val2> - <val2> * <name3> * <name1> * math . cos ( <name6> . <name4> * <name5> / <val6> ) )
<name1> ( <name5> , <name3> * <name2> ) を <name6> とする	<name6> = <name1> ( <name5> , <name3> * <name2> )	<name6> = <name1> ( <name5> , <name3> * <name2> )
<name6> の <name5> 番目に <name4> を加えた値を <name6> の <name5> に <name3> を加えた値番目にする	<name6> [ <name5> + <name3> ] = <name6> [ <name5> ] + <name4>	<name4> [ <name5> + <name3> ] = <name6> [ <name5> ] + <name4>
入力された文字列を <val3> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name4> 、 <name6> とする	<name1> , <name4> , <name6> = list ( map ( int , input ( ) . split ( <val3> ) ) )	<name4> , <name6> = list ( map ( int , input ( ) . split ( <val3> ) ) )
<name5> を <name2> ( <name3> , <name1> ) だけ増加させる	<name5> += <name2> ( <name3> , <name1> )	<name2> += <name2> ( <name3> , <name1> )
区切りなしで改行せずに <val6> を出力する	print ( <val6> , sep = '' , end = '' )	print ( <val6> , sep = '' , end = '' )
<name4> の <val5> 番目の <val2> 番目を <name1> だけ増加させる	<name4> [ <val5> ] [ <val2> ] += <name1>	( <name4> [ <val5> ] [ <val2> ] += <name1> )
0 から <val2> 未満までの数列の各要素を <name6> とし、 <name1> ( <name6> ) の列を <name3> とする	<name3> = [ <name1> ( <name6> ) for <name6> in range ( <val2> ) ]	<name3> = [ <name1> ( <name6> ) for <name6> in range ( <val2> ) ]
<name3> の <name5> 番目の <name5> 番目が <val2> より小さいとき、	if <name3> [ <name5> ] [ <name5> ] < <val2> :	continue <name3> [ <name5> ] [ <name5> ] < <val2> :
<name2> を <name6> の、つまり文字コード <name5> に <name2> を加えた値の文字番目にする	<name6> [ chr ( <name5> + <name2> ) ] = <name2>	<name1> [ chr ( <name5> + <name2> ) ] = <name2>
<val2> に <val5> を加えた値に <name3> から <val1> を引いた値に <val6> を掛けた値を加えた値を <name4> とする	<name4> = <val2> + <val5> + ( <name3> - <val1> ) * <val6>	<name4> = <val2> + <val5> + ( <name3> - <val1> ) * <val6>
<name5> の <val3> 番目から <name6> の先頭を引いた値の <val1> 乗に <name5> の <val4> 番目から <name6> の <val4> 番目を引いた値の <val1> 乗を加えた値の <val2> 乗を返す	return ( ( <name5> [ <val3> ] - <name6> [ <val3> ] ) ** <val1> + ( <name5> [ <val4> ] - <name6> [ <val4> ] ) ** <val1> ) ** <val2>	<val2> return ( ( <name5> [ <val3> ] - <name6> [ <val3> ] ) ** <val1> + ( <name5> [ <val4> ] - <name6> [ <val4> ] ) ** <val1> ) ** <val2>
<val1> が <name4> 以下かどうかが <name6> より小さくなくまたは <val1> が <name3> 以下かどうかが <name5> より小さくなくまたは <name2> の <name3> 番目の <name4> 番目が <name1> より小さいとき、	if not <val1> <= <name4> < <name6> or not <val1> <= <name3> < <name5> or <name2> [ <name3> ] [ <name4> ] < <name1> :	list ( not <val1> <= <name4> < <name6> or not <val1> <= <name3> < <name5> or <name2> [ <name3> ] [ <name4> ] < <name1> :
<name6> . <name4> ( [ <name3> , <name5> , <name2> + <val1> ] )	<name6> . <name4> ( [ <name3> , <name5> , <name2> + <val1> ] )	<name6> . <name4> ( [ <name3> , <name5> , <name2> + <val1> ] )
( ( <val5> ) からなる列の <val5> から <name3> 未満までの数列の各要素を <name2> とし、 <name4> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val5> ] * [ <name4> for <name2> in range ( <name3> ) ] ]	<name6> = [ [ <val5> ] * [ <name4> for <name2> in range ( <name3> ) ] ]
<name3> の総和が <val1> と等しいとき、	if sum ( <name3> ) == <val1> :	for <name3> in sum ( <name3> ) == <val1> :
<val1> を <name5> の <name6> にする	<name5> . <name6> = <val1>	( <name5> . <name6> = <val1> )
<name3> に <name2> の <name6> 番目を掛けた値を <name1> . <name5> ( <name3> , <name2> [ <name6> ] ) で割った商を <name3> とする	<name3> = <name3> * <name2> [ <name6> ] // <name1> . <name5> ( <name3> , <name2> [ <name6> ] )	<name3> = <name3> * <name2> [ <name6> ] // <name1> . <name5> ( <name3> , <name2> [ <name6> ] )
<name6> を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name6>	( <name2> , <name3> = <name6> )
<name1> が <val2> と等しくかつ <name6> が <val2> と等しくかつ <name4> が <val2> と等しいとき、	if <name1> == <val2> and <name6> == <val2> and <name4> == <val2> :	or <name1> == <val2> and <name6> == <val2> and <name4> == <val2> :
<name1> の <name5> 番目の <val3> 番目が <name6> に <val2> を加えた値と等しいとき、	if <name1> [ <name5> ] [ <val3> ] == <name6> + <val2> :	raise <name1> [ <name5> ] [ <val3> ] == <name6> + <val2> :
<name3> . <name1> ( <name5> ) の <val2> 番目を <name4> とする	<name4> = <name3> . <name1> ( <name5> ) [ <val2> ]	<name4> = <name3> . <name1> ( <name5> ) [ <val2> ]
<name6> の <name1> 番目が <val4> と等しくなくかつ <name5> の <name1> 番目が <name3> より小さいとき、	if <name6> [ <name1> ] != <val4> and <name5> [ <name1> ] < <name3> :	raise if <name6> [ <name1> ] != <val4> and <name5> [ <name1> ] < <name3> :
( ( <name2> 、 <name5> 、 <name4> ) の組、 ( <name2> 、 <name5> 、 <name1> ) の組、 ( <name4> 、 <name1> 、 <name2> ) の組、 ( <name4> 、 <name1> 、 <name5> ) の組 ) からなる列を順に <name1> 、 <name6> 、 <name3> として、繰り返す	for <name1> , <name6> , <name3> in [ ( <name2> , <name5> , <name4> ) , ( <name2> , <name5> , <name1> ) , ( <name4> , <name1> , <name2> ) , ( <name4> , <name1> , <name5> ) ] :	in [ ( <name2> , <name5> , <name4> ) , ( <name2> , <name5> , <name1> ) , ( <name4> , <name1> , <name2> ) , ( <name4> , <name1> , <name5> ) ] :
<name5> ( <name3> -1 , <name6> ) を <name1> とする	<name1> = <name5> ( <name3> - 1 , <name6> )	<name1> = <name5> ( <name3> - 1 , <name6> )
<name2> が <val4> と等しくかつ <name6> の <name1> 番目が <val5> と等しいとき、	if <name2> == <val4> and <name6> [ <name1> ] == <val5> :	list ( <name2> == <val4> and <name6> [ <name1> ] == <val5> ) :
<name5> が <name3> ( <name2> ) に含まれるかどうか	<name5> in <name3> ( <name2> )	( <name5> in <name3> ( <name2> ) )
<name2> から <name6> を引いた値が <val4> 以上かつ <name2> に <name6> を加えた値が <name5> 以下かつ <name3> から <name6> を引いた値が <val4> 以上かつ <name3> に <name6> を加えた値が <name1> 以下のとき、	if <name2> - <name6> >= <val4> and <name2> + <name6> <= <name5> and <name3> - <name6> >= <val4> and <name3> + <name6> <= <name1> :	list ( <name2> - <name6> >= <val4> and <name2> + <name6> <= <name5> and <name3> - <name6> >= <val4> and <name3> + <name6> <= <name1> ) :
<name2> の <name3> 番目の末尾に <name1> を追加する	<name2> [ <name3> ] . append ( <name1> )	<name1> [ <name3> ] . append ( <name1> )
<name5> の末尾に <val2> に <name6> に <val1> を加えた値を掛けた値を追加する	<name5> . append ( <val2> * ( <name6> + <val1> ) )	<name3> . append ( <val2> * ( <name6> + <val1> ) )
<val4> から <name5> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <val4> の列を <name2> の <name3> にする	<name2> . <name3> = [ <val4> for <name6> in range ( <name5> + <val1> ) ]	<name2> . <name3> = [ <val4> for <name6> in range ( <name5> + <val1> ) ]
<name4> を <name5> を英小文字に変換した文字列を空白で分割した字句列内の <name2> の出現回数だけ増加させる	<name4> += <name5> . lower ( ) . split ( ) . count ( <name2> )	<name5> += <name4> . count ( <name5> . lower ( ) ) . count ( <name2> )
<name5> ( <name2> . <name6> - <name2> . <name4> ) を <name3> とする	<name3> = <name5> ( <name2> . <name6> - <name2> . <name4> )	else = <name5> ( <name2> . <name6> - <name2> . <name4> )
<name2> の <name3> の各要素を <name6> とし、 <name2> . <name4> ( <name6> ) の列を <name1> とする	<name1> = [ <name2> . <name4> ( <name6> ) for <name6> in <name2> . <name3> ]	<name1> = [ <name2> . <name4> ( <name6> ) for <name6> in <name2> . <name3> ]
<val4> <name3> <val5> を <name6> とする	<name6> = <val4> <name3> <val5>	( <name6> = <val4> <name3> <val5> )
<name5> の <name6> 番目の <name4> 番目を <name2> とする	<name2> = <name5> [ <name6> ] [ <name4> ]	<name2> = <name5> [ <name6> ] [ <name4> ]
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組を <name5> とする </blk>	try : <blk> <name5> = tuple ( map ( int , input ( ) . split ( ) ) ) </blk>	\ <name5> = try : <blk> <name5> = tuple ( map ( int , input ( ) . split ( ) ) ) </blk>
<name6> の最小値、 <name6> の最大値を出力する	print ( min ( <name6> ) , max ( <name6> ) )	print ( min ( <name6> ) , max ( <name6> ) )
<name6> の各要素を <name5> とし、 <name3> の各要素に <name5> を適用した列の総和と <val1> の論理積の列を <name4> の <name2> 番目の、つまり先頭から、つまり末尾までの部分列にする	<name4> [ <name2> ] [ : ] = ( [ sum ( map ( <name5> , <name3> ) ) & <val1> for <name5> in <name6> ] )	<name2> [ <name2> ] [ : ] = [ sum ( map ( <name5> , <name3> ) ) & <val1> for <name5> in <name6> ]
入力された文字列を空白で分割した字句列の各要素に <name3> をパラメータとして <name3> の整数値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) )	<name3> , <name4> = map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) )
<name2> . <name1> ( <name3> ) を <name5> とする	<name5> = <name2> . <name1> ( <name3> )	else = <name2> . <name1> ( <name3> )
を間に入れて、つまり逆順に <name3> をソートした列を連結した文字列を <name1> とする	<name1> = '' . join ( sorted ( <name3> , reverse = True ) )	<name1> = '' . join ( sorted ( <name3> , reverse = True ) )
<val2> を <name4> とする -1 を <name3> とする	<name4> = <val2> <name3> = - 1	<name5> = <name4> = <val2> <name3> = - 1
入力された文字列を空白で分割した字句列の各要素に <name6> をパラメータとして <name6> の整数値を返す関数を適用した列の集合を <name2> とする	<name2> = set ( map ( lambda <name6> : int ( <name6> ) , input ( ) . split ( ) ) )	<name2> = set ( map ( lambda <name6> : int ( <name6> ) , input ( ) . split ( ) ) )
<name2> を <val3> から <val5> を引いた値に <name6> を掛けた値だけ増加させる	<name2> += ( <val3> - <val5> ) * <name6>	<name2> += ( <val3> - <val5> ) * <name6>
<name2> の . <val1> 乗の整数値に <val3> を加えた値を <name5> とする	<name5> = int ( <name2> ** . <val1> ) + <val3>	<name5> = int ( <name2> ** . <val1> ) + <val3>
<name1> ( <name5> [ <name2> ] [ <val3> ] )	<name1> ( <name5> [ <name2> ] [ <val3> ] )	<name1> ( <name5> [ <name2> ] [ <val3> ] )
<name4> の <val6> 番目が <val3> と等しくかつ <name4> の長さが <val5> と等しくなくまたは <name2> の <val6> 番目が <val3> と等しくかつ <name2> の長さが <val5> と等しくなくまたは <name1> の <val6> 番目が <val3> と等しくかつ <name1> の長さが <val5> と等しくないとき、	if ( <name4> [ <val6> ] == <val3> and len ( <name4> ) != <val5> ) or ( <name2> [ <val6> ] == <val3> and len ( <name2> ) != <val5> ) or ( <name1> [ <val6> ] == <val3> and len ( <name1> ) != <val5> ) :	if ( <name4> [ <val6> ] == <val3> and len ( <name4> ) != <val5> or <name2> [ <val6> ] == <val3> and len ( <name2> ) != <val5> or len ( <name1> [ <val6> ] ) != <val3> and len ( <name1> ) != <val5> :
<name3> の <name4> 番目の先頭を出力する	print ( <name3> [ <name4> ] [ 0 ] )	print ( <name3> [ <name4> ] [ 0 ] )
<name5> の <name6> から <val1> を引いた値番目の <name4> を <name2> に <name5> の <name6> から <val1> を引いた値番目の <name3> の <name5> 番目を加えた値だけ増加させる	<name5> [ <name6> - <val1> ] . <name4> += <name2> + <name5> [ <name6> - <val1> ] . <name3> [ <name5> ]	<name2> [ <name6> - <val1> ] [ <name4> ] += <name2> + <name5> [ <name6> - <val1> ] [ <name3> ] [ <name5> ]
<name5> を <val2> で割った余りが <name6> と等しいとき、	if <name5> % <val2> == <name6> :	continue <name5> % <val2> == <name6> :
<name1> から <name4> の <name3> を引いた値の絶対値を返す	return abs ( <name1> - <name4> . <name3> )	self return abs ( <name1> - <name4> . <name3> )
<name3> を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name3>	( <name1> [ <name6> ] = <name3> )
0 を <name5> の <name2> 番目の <name3> 番目にする	<name5> [ <name2> ] [ <name3> ] = '0'	( <name5> [ <name2> ] [ <name3> ] = '0' )
<name6> の先頭を除いた部分列に番号付した組の列を順に <name2> 、 <name3> として、繰り返す	for <name2> , <name3> in enumerate ( <name6> [ 1 : ] ) :	for <name2> , <name3> in enumerate ( <name6> [ 1 : ] ) :
<name1> が -1 と等しくなくかつ <name4> の <name3> が <name1> と等しいとき、	if <name1> != - 1 and <name4> . <name3> == <name1> :	if <name1> != - 1 and <name4> . <name3> == <name1> :
<name4> の <name1> に <val3> を掛けた値番目に <name4> の <name1> に <val3> を掛けた値に <val2> を加えた値番目を加えた値を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name4> [ <name1> * <val3> ] + <name4> [ <name1> * <val3> + <val2> ]	( <name4> [ <name1> ] = <name4> [ <name1> * <val3> ] + <name4> [ <name1> * <val3> + <val2> ] )
<name6> の <name2> 番目が <name5> より大きいとき、	if <name6> [ <name2> ] > <name5> :	> <name6> [ <name2> ] > <name5> :
<name6> の <name3> から <val2> を引いた値番目の <name4> 番目でないとき、	if not <name6> [ <name3> - <val2> ] [ <name4> ] :	isinstance ( <name6> [ <name3> - <val2> ] [ <name4> ] ) :
<name2> の <name5> を <name6> の <name5> にする	<name6> . <name5> = <name2> . <name5>	<name6> . <name5> = <name2> . <name5>
<name6> に <name2> を加えた値を <name3> とする	<name3> = <name6> + <name2>	<name2> = <name6> + <name2>
<name3> の <val5> 乗に <name1> の <val5> 乗を加えた値を返す	return <name3> ** <val5> + <name1> ** <val5>	self = <name3> ** <val5> + <name1> ** <val5>
<name4> を展開し、それぞれ <name1> 、 <name6> とする <name3> を展開し、それぞれ <name2> 、 <name5> とする	<name1> , <name6> = <name4> <name2> , <name5> = <name3>	<name1> , <name6> = <name4> <name2> , <name5> = <name3>
<name6> の <name5> 番目のとき、	if <name6> [ <name5> ] :	[ if <name6> [ <name5> ] :
0 から <name1> から <val4> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> - <val4> ) :	in range ( <name1> - <val4> ) :
<name2> を <name1> で割った値の整数値を <name4> とする	<name4> = int ( <name2> / <name1> )	count = int ( <name2> / <name1> )
<name3> の末尾に <name4> に <name2> を掛けた値を追加する	<name3> . append ( <name4> * <name2> )	<name3> . append ( <name4> * <name2> )
<name6> に <name3> から <name1> を引いた値を掛けた値に <name4> に <name1> から <name5> を引いた値を掛けた値を加えた値に <name2> に <name5> から <name3> を引いた値を掛けた値を加えた値が <val6> より大きいかどうかを返す	return <name6> * ( <name3> - <name1> ) + <name4> * ( <name1> - <name5> ) + <name2> * ( <name5> - <name3> ) > <val6>	<val2> return <name6> * ( <name3> - <name1> ) + <name4> * ( <name1> - <name5> ) + <name2> * ( <name5> - <name3> ) > <val6>
<name5> の先頭の先頭を取り出した値を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name5> [ 0 ] . pop ( )	<name2> , <name3> = <name5> [ 0 ] . pop ( )
正規表現 <val5> ( = + ) # ( = + ) ~ ' を s にマッチさせた結果のとき、 <blk> ' <name1> ' を出力する </blk>	if re . match ( <val5> ( = + ) # ( = + ) ~ ' , s ) : <blk> print ( ' <name1> ' ) </blk>	if re . match ( <val5> ( = + ) ~ ' , s ) </blk> . ' <name1> ' ' ' : <blk> print ( ' ' ' </blk>
( ( <name2> , 未定値 ) ) からなる辞書を <name1> とする	<name1> = { <name2> : None }	<name1> = { <name2> : None }
( <name2> 、 <name1> ) の組を <name5> の <name4> にする	<name5> . <name4> = ( <name2> , <name1> )	<name2> . <name4> = ( <name2> , <name1> )
0 から <val5> 未満までの数列の各要素を <name1> とし、 <val6> を <name1> だけ左シフトした値の列を <name4> の <name2> にする	<name4> . <name2> = [ <val6> << <name1> for <name1> in range ( <val5> ) ]	<name5> . <name4> . <name2> = [ <val6> << <name1> for <name1> in range ( <val5> ) ]
<name1> から <val5> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> , <val5> , - 1 ) :	. for <name2> in range ( <name1> , <val5> , - 1 ) :
<name5> の <name3> 番目の <name1> 番目が <name6> と等しくかつ <name2> の <name4> 番目が <val5> と等しいとき、	if <name5> [ <name3> ] [ <name1> ] == <name6> and <name2> [ <name4> ] == <val5> :	while <name5> [ <name3> ] [ <name1> ] == <name6> and <name2> [ <name4> ] == <val5> :
<name4> の <name2> から <val5> を引いた値番目の <name3> 番目、 <name4> の <name2> から <val5> を引いた値番目の <name3> に <val5> を加えた値番目の最大値に <name4> の <name2> 番目の <name3> 番目を加えた値を <name4> の <name2> 番目の <name3> 番目にする	<name4> [ <name2> ] [ <name3> ] = max ( <name4> [ <name2> - <val5> ] [ <name3> ] , <name4> [ <name2> - <val5> ] [ <name3> + <val5> ] ) + <name4> [ <name2> ] [ <name3> ]	<name3> [ <name2> ] [ <name3> ] = max ( <name4> [ <name2> - <val5> ] [ <name3> ] , <name4> [ <name2> - <val5> ] [ <name3> + <val5> ] ) + <name4> [ <name2> ] [ <name3> ]
<name3> の <name4> の <name2> + <name1> から <val5> を引いた値番目に <name3> の <name6> の <name2> 番目を掛けた値に <name3> の <name6> の <name1> から <val5> を引いた値番目を掛けた値を <name3> の <name3> で割った余りを返す	return <name3> . <name4> [ <name2> + <name1> - <val5> ] * <name3> . <name6> [ <name2> ] * <name3> . <name6> [ <name1> - <val5> ] % <name3> . <name3>	x return <name3> . <name4> [ <name2> + <name1> - <val5> ] * <name3> . <name6> [ <name2> ] * <name3> . <name6> [ <name1> - <val5> ] % <name3> . <name3>
<name1> の <name3> 番目の <name2> 番目を出力する	print ( <name1> [ <name3> ] [ <name2> ] )	print ( <name1> [ <name3> ] [ <name2> ] )
<name6> の <val5> 番目を <name3> とする	<name3> = <name6> [ <val5> ]	<name3> = <name6> [ <val5> ]
<val1> <name5> を <name3> とする	<name3> = <val1> <name5>	<name3> = <val1> <name5>
<name3> が <name4> より小さい間、次を繰り返す	while <name3> < <name4> :	del <name3> < <name4> :
0 から <val4> を <name3> だけ左シフトした値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> << <name3> ) :	in range ( <val4> << <name3> ) :
<name3> に <name4> の <name1> 番目の <name6> 番目の <val5> 番目を <name2> の <name3> 番目で割った値を加えた値を <name2> とする	<name2> = <name3> + <name4> [ <name1> ] [ <name6> ] [ <val5> ] / <name2> [ <name3> ]	<name2> = <name3> + <name4> [ <name1> ] [ <name6> ] [ <val5> ] / <name2> [ <name3> ]
<name1> に <name3> を加えた値が <name5> より小さいとき、	if <name1> + <name3> < <name5> :	while <name1> + <name3> < <name5> :
<name4> の <name5> 番目の <val2> 番目の整数値が <name4> の <name5> から <val2> を引いた値番目の <val2> 番目の整数値より小さいとき、	if int ( <name4> [ <name5> ] [ <val2> ] ) < int ( <name4> [ <name5> - <val2> ] [ <val2> ] ) :	> if int ( <name4> [ <name5> ] [ <val2> ] ) < int ( <name4> [ <name5> - <val2> ] [ <val2> ] ) :
<name3> ( <name5> , <name2> ) を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name3> ( <name5> , <name2> )	<name3> , <name2> = <name3> ( <name5> , <name2> )
<val3> を間に入れて <name5> を連結した文字列を <name2> とする	<name2> = <val3> . join ( <name5> )	<name2> = <val3> . join ( <name5> )
<name4> の <name6> 番目の先頭、 <name4> の <name6> 番目の <val3> 番目を <name5> 、 <name2> とする	<name5> , <name2> = <name4> [ <name6> ] [ 0 ] , <name4> [ <name6> ] [ <val3> ]	<name5> , <name2> = <name4> [ <name6> ] [ 0 ] , <name4> [ <name6> ] [ <val3> ]
<name4> の <name5> 番目、 <name2> の <name5> から <val6> を引いた値番目、 <name4> の <name5> から <name1> を引いた値番目に <name3> を加えた値の最大値を <name2> の <name5> 番目にする	<name2> [ <name5> ] = max ( <name4> [ <name5> ] , <name2> [ <name5> - <val6> ] , <name4> [ <name5> - <name1> ] + <name3> )	<name2> [ <name5> ] = max ( <name4> [ <name5> ] , <name2> [ <name5> - <val6> ] , <name4> [ <name5> - <name1> ] + <name3> )
<name4> の <name6> から <val5> を引いた値番目の <name2> 番目でないとき、	if not <name4> [ <name6> - <val5> ] [ <name2> ] :	isinstance ( <name4> [ <name6> - <val5> ] [ <name2> ] ) :
空列を <name6> の [ MASK ] と等しい要素の最初の位置にする	<name6> . index = [ ]	<name6> . index = [ ]
<name6> の <name3> 番目から <name2> 番目までの部分列を <name5> とする	<name5> = <name6> [ <name3> : <name2> ]	<name5> = <name6> [ <name3> : <name2> ]
<name4> . <name6> ( <name2> [ <name3> ] )	<name4> . <name6> ( <name2> [ <name3> ] )	<name5> . <name4> . <name6> ( <name2> [ <name3> ] )
<name2> 、 <name6> 、 <name1> の最大値を <name5> の <name4> 番目の <name3> 番目にする	<name5> [ <name4> ] [ <name3> ] = max ( <name2> , <name6> , <name1> )	( <name5> [ <name4> ] [ <name3> ] = max ( <name2> , <name6> , <name1> )
<name4> の <name3> 番目の <name2> 番目のとき、	if <name4> [ <name3> ] [ <name2> ] :	continue if <name4> [ <name3> ] [ <name2> ] :
<name3> の <name5> 番目の末尾に ( <name2> 、 <name4> ) の組を追加する	<name3> [ <name5> ] . append ( ( <name2> , <name4> ) )	<name2> [ <name5> ] . append ( ( <name2> , <name4> ) )
改行せずに <val1> に <name6> の <name3> の文字列を加えた値を出力する	print ( <val1> + str ( <name6> . <name3> ) , end = '' )	dict = <val1> + str ( <name6> . <name3> ) , end = '' )
( <name5> から <name4> を引いた値、 <name6> から <name2> を引いた値 ) からなる列を <name1> とする	<name1> = [ <name5> - <name4> , <name6> - <name2> ]	<name4> = [ <name5> - <name4> , <name6> - <name2> ]
<name5> に <name6> を掛けた値から <name1> に <name2> を掛けた値を引いた値に <name3> から <name4> を引いた値を掛けた値から <name5> に <name3> を掛けた値から <name4> に <name6> を掛けた値を引いた値に <name6> から <name1> を引いた値を掛けた値を引いた値を <name1> で割った値を <name4> とする	<name4> = ( ( <name5> * <name6> - <name1> * <name2> ) * ( <name3> - <name4> ) - ( <name5> * <name3> - <name4> * <name6> ) * ( <name6> - <name1> ) ) / <name1>	<name5> = ( <name5> * <name6> - <name1> * <name2> ) * ( <name3> - <name4> ) - ( <name5> * <name3> - <name4> * <name6> - <name1> ) / ( <name1> * <name4> )
<name3> . <name6> ( <name5> , <name4> ) の絶対値が <name3> の <name2> より小さいかどうかを返す	return abs ( <name3> . <name6> ( <name5> , <name4> ) ) < <name3> . <name2>	x return abs ( <name3> . <name6> ( <name5> , <name4> ) ) < <name3> . <name2>
<name1> の <name2> 番目を <name6> の <name2> 番目、 <name6> の <name2> に <val4> を加えた値番目の最大値だけ増加させる	<name1> [ <name2> ] += max ( <name6> [ <name2> ] , <name6> [ <name2> + <val4> ] )	<name2> [ <name2> ] += max ( <name6> [ <name2> ] , <name6> [ <name2> + <val4> ] )
<name3> の <name2> から <val1> を引いた値番目が <val5> より小さいとき、	if <name3> [ <name2> - <val1> ] < <val5> :	for <name3> [ <name2> - <val1> ] < <val5> :
<name3> の <name5> から <val4> を引いた値番目の <name6> 番目を <name3> の <name5> 番目の <name6> 番目にする	<name3> [ <name5> ] [ <name6> ] = <name3> [ <name5> - <val4> ] [ <name6> ]	<name3> [ <name5> ] [ <name6> ] = <name3> [ <name5> - <val4> ] [ <name6> ]
( ( <name3> の <name4> ) からなる列の 0 から <name6> 未満までの数列の各要素を <name1> とし、 <name6> の列回分の列 ) からなる列を <name5> の <name2> にする	<name5> . <name2> = [ [ <name3> . <name4> ] * [ <name6> for <name1> in range ( <name6> ) ] ]	<name1> . <name2> = [ [ <name3> . <name4> ] * [ <name6> for <name1> in range ( <name6> ) ] ]
<name5> の <name1> の 2 進数文字列内の <val2> の出現回数を返す	return bin ( <name5> . <name1> ) . count ( <val2> )	assert bin ( <name5> . count ( <name1> ) . count ( <val2> ) )
<val2> を <name4> で割った余り、 <val2> を <name1> で割った余りを出力する	print ( <val2> % <name4> , <val2> % <name1> )	end = <val2> % <name4> , <val2> % <name1> )
ソートされた順序を保ったまま <name3> を <name4> に挿入できる最後の位置を <name2> とする	<name2> = bisect . bisect_right ( <name4> , <name3> )	<name2> = bisect_right ( <name4> , <name3> )
0 から <val2> 未満までの数列の各要素を <name5> とし、 <val3> に入力された文字列を加えた値に <val3> を加えた値のリストの列を <name1> とする	<name1> = [ list ( <val3> + input ( ) + <val3> ) for <name5> in range ( <val2> ) ]	<name1> = [ list ( <val3> + input ( ) + <val3> ) for <name5> in range ( <val2> ) ]
<name4> の、つまり先頭から <name2> を <val5> で割った商までの部分列を <name1> とする	<name1> = <name4> [ : <name2> // <val5> ]	<name1> = <name4> [ : <name2> // <val5> ]
( <val5> ) からなる列の <name1> 回分の列を <name2> とする	<name2> = [ <val5> ] * <name1>	<name2> = [ <val5> ] * <name1>
( <name1> から <name6> を引いた値、 <name5> から <name3> を引いた値 ) の組を <name2> とする	<name2> = ( <name1> - <name6> , <name5> - <name3> )	<name2> = ( <name1> - <name6> , <name5> - <name3> )
<val6> に <name2> の文字列を加えた値に <val3> を加えた値を <name1> とする	<name1> = <val6> + str ( <name2> ) + <val3>	<name1> = <val6> + str ( <name2> ) + <val3>
辞書を <name6> の <name3> にする	<name6> . <name3> = dict ( zip ( dataset , [ 1 ] * len ( dataset ) ) )	( <name6> . <name3> = dict ( ) )
<name1> の <name4> 番目が <val5> と等しくかつ <name1> の <name4> に <val6> を加えた値番目が <name3> に含まれないとき、	if <name1> [ <name4> ] == <val5> and not <name1> [ <name4> + <val6> ] in <name3> :	list <name1> [ <name4> ] == <val5> and <name1> [ <name4> + <val6> ] not in <name3> :
<val5> から <name4> を引いた値を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <val5> - <name4>	<name1> [ <name4> ] = <val5> - <name4>
( <val2> ) からなる列の <name6> に <val3> を加えた値回分の列を <name5> とする	<name5> = [ <val2> ] * ( <name6> + <val3> )	<name5> = [ <val2> ] * ( <name6> + <val3> )
<name2> 、 <name6> を <name5> の <name1> 番目、 <name5> の <name4> 番目とする	<name5> [ <name1> ] , <name5> [ <name4> ] = <name2> , <name6>	[ <name5> [ <name1> ] , <name5> [ <name4> ] = <name2> , <name6>
0 から <val1> の <name3> 乗から <val6> を引いた値未満までの数列の逆順を順に <name4> として、繰り返す	for <name4> in range ( <val1> ** <name3> - <val6> ) [ : : - <val6> ] :	( for <name4> in range ( <val1> ** <name3> - <val6> ) [ : : - <val6> ] :
<name2> ( <name4> ) を <name1> とする	<name1> = <name2> ( <name4> )	<name1> = <name2> ( <name4> )
<name1> の <val6> 番目から、つまり末尾までの部分列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name1> [ <val6> : ] . split ( )	<name5> , <name2> = <name1> [ <val6> : ] . split ( )
<name5> の末尾に ( <name2> 、 <name6> 、 <name3> ) の組を追加する	<name5> . append ( ( <name2> , <name6> , <name3> ) )	<name4> . append ( ( <name2> , <name6> , <name3> ) )
0 から <val3> に <name2> を掛けた値から <val1> を引いた値未満までの数列の各要素を <name5> とし、 <name6> の列を <name4> とする	<name4> = [ <name6> for <name5> in range ( <val3> * <name2> - <val1> ) ]	<name4> = [ <name6> for <name5> in range ( <val3> * <name2> - <val1> ) ]
<name3> に <val2> を加えた値を <name5> の <name1> から <val2> を引いた値番目にする	<name5> [ <name1> - <val2> ] = <name3> + <val2>	<name1> [ <name1> - <val2> ] = <name3> + <val2>
<val6> から <val1> 未満までの数列の各要素を <name3> とし、 <val6> の列を <name4> とする	<name4> = [ <val6> for <name3> in range ( <val1> ) ]	<name4> = [ <val6> for <name3> in range ( <val1> ) ]
<name5> . <name6> ( <val3> )	<name5> . <name6> ( <val3> )	[ <name5> . <name6> ( <val3> ) ]
<name5> を <name3> の <name2> の <val4> 番目にする	<name3> . <name2> [ <val4> ] = <name5>	<name3> . <name2> [ <val4> ] = <name5>
<name6> . <name4> ( ) を <name5> とする	<name5> = <name6> . <name4> ( )	<name4> = <name6> . <name4> ( )
<name3> を <name5> の <val2> を間に入れて <name1> の <name6> の各要素に整数を適用した列を連結した文字列番目にする	<name5> [ <val2> . join ( map ( str , <name1> . <name6> ) ) ] = <name3>	<name1> [ <val2> . join ( map ( str , <name1> . <name6> ) ) ] = <name3>
<name5> に <name3> を掛けた値を出力する	print ( <name5> * <name3> )	print ( <name5> * <name3> )
<name1> が <name3> より小さいとき、	if <name1> < <name3> :	isclose if <name1> < <name3> :
<name4> の <name5> 番目のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name4> [ <name5> ] : <blk> continue </blk>	for if <name4> [ <name5> ] : <blk> continue </blk>
<name3> ( <name6> ) を <name4> とする	<name4> = <name3> ( <name6> )	<name4> = <name3> ( <name6> )
<val5> から <name6> の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , len ( <name6> ) ) :	. for <name1> in range ( <val5> , len ( <name6> ) ) :
<name5> ( <name4> , <name3> , <name6> )	<name5> ( <name4> , <name3> , <name6> )	<name4> ( <name4> , <name3> , <name6> )
<name2> が <name6> の <name5> の先頭と等しいとき、	if <name2> == <name6> . <name5> [ 0 ] :	for <name2> in <name6> . <name5> [ 0 ] :
無限の整数列を <name5> の長さから <name6> を引いた値だけ増加させる	count += len ( <name5> ) - <name6>	count += ( len ( <name5> ) - <name6> )
( <val5> 、 <val5> 、 <name4> ) からなる列を <name2> とするを <name4> の <val3> 番目にする	<name4> [ <val3> ] = <name2> = [ <val5> , <val5> , <name4> ]	<name4> [ <val3> ] = <name2> = [ <val5> , <val5> , <name4> ]
<name6> から <val4> を引いた値から <name2> を引いた値を <name1> の <val3> 番目にする	<name1> [ <val3> ] = <name6> - <val4> - <name2>	( <name1> [ <val3> ] = <name6> - <val4> - <name2> )
<val2> を <name4> の <name1> 番目から、つまり末尾までの部分列にする	<name4> [ <name1> : ] = <val2>	<name4> [ <name1> : ] = <val2>
( <val6> 、 <val3> ) からなる列の <name5> 番目を出力する	print ( [ <val6> , <val3> ] [ <name5> ] )	print ( [ <val6> , <val3> ] [ <name5> ] )
<name2> ( <name1> [ : ] ) を <name6> とする	<name6> = <name2> ( <name1> [ : ] )	else = <name2> ( <name1> [ : ] )
<name1> の <name5> 番目をソートした列を展開してを出力する	print ( * sorted ( <name1> [ <name5> ] ) )	print ( * sorted ( <name1> [ <name5> ] ) )
<name1> 内の <name3> の <val4> 番目から、つまり末尾までの部分列と等しい要素を取り除く	<name1> . remove ( <name3> [ <val4> : ] )	not <name1> . remove ( <name3> [ <val4> : ] )
<name3> の <name1> 番目の先頭、 <name3> の <name1> から <val6> を引いた値番目の先頭、 <name3> の <name4> の <name5> 番目の <name2> 番目番目の先頭を <name4> 、 <name5> 、 <name2> とする	<name4> , <name5> , <name2> = <name3> [ <name1> ] [ 0 ] , <name3> [ <name1> - <val6> ] [ 0 ] , <name3> [ <name4> [ <name5> ] [ <name2> ] ] [ 0 ]	<name4> , <name5> , <name2> = <name3> [ <name1> ] [ 0 ] , <name3> [ <name1> - <val6> ] [ 0 ] , <name3> [ <name4> [ <name5> ] [ <name2> ] ] [ 0 ]
<val6> 、 <val6> 、 <val6> を <name1> 、 <name5> 、 <name2> とする	<name1> , <name5> , <name2> = <val6> , <val6> , <val6>	<name4> , <name1> , <name5> , <name2> = <val6> , <val6> , <val6>
<name5> の <name4> に対応する値、もし存在しなければ <val6> を <name3> とする	<name3> = <name5> . <name4> . get ( <val6> )	<name3> = <name5> . <name4> . get ( <val6> )
<name6> の <name2> に <name3> を加えた値番目の <name4> に <name5> を加えた値番目が <val1> と等しくない間、次を繰り返す	while <name6> [ <name2> + <name3> ] [ <name4> + <name5> ] != <val1> :	del <name6> [ <name2> + <name3> ] [ <name4> + <name5> ] != <val1> :
<name3> の <name6> 番目を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name3> [ <name6> ]	( <name2> , <name4> = <name3> [ <name6> ] )
<name1> の、つまり先頭から <name4> 番目までの部分列が <name3> に含まれるとき、	if <name1> [ : <name4> ] in <name3> :	for <name1> in <name1> [ : <name4> ] in <name3> :
ソートされた順序を保ったまま <name6> を <name2> に挿入できる最後の位置を出力する	print ( bisect . bisect ( <name2> , <name6> ) )	print ( bisect . bisect_right ( <name2> , <name6> ) )
<name1> の末尾に <val2> <name6> に <val3> を加えた値を追加する	<name1> . append ( <val2> <name6> + <val3> )	<name1> . append ( <val2> <name6> + <val3> )
<name3> から <name2> を引いた値に <name6> ** <val4> - <name5> ** <val4> に <name1> ** <val4> を加えた値から <name2> の <val4> 乗を引いた値を掛けた値に <name2> から <name1> を引いた値に <name3> ** <val4> - <name5> ** <val4> に <name3> ** <val4> を加えた値から <name2> の <val4> 乗を引いた値を掛けた値を加えた値を <name2> で割った値を <name1> とする	<name1> = ( ( <name3> - <name2> ) * ( <name6> ** <val4> - <name5> ** <val4> + <name1> ** <val4> - <name2> ** <val4> ) + ( <name2> - <name1> ) * ( <name3> ** <val4> - <name5> ** <val4> + <name3> ** <val4> - <name2> ** <val4> ) ) / <name2>	<name6> = ( ( <name3> - <name2> ) * ( <name6> ** <val4> - <name5> ** <val4> + <name1> ** <val4> - <name2> ** <val4> ) + ( <name2> - <name1> ) * ( <name3> ** <val4> + <name5> ** <val4> - <name3> ** <val4> ) ) / ( ( <name2> ** <val4> - <name1> ) )
<name3> に <name6> を掛けた値が <name4> 以下のとき、	if <name3> * <name6> <= <name4> :	if <name3> * <name6> <= <name4> :
<val6> を <name4> の <name3> から <name5> を引いた値番目の <name2> 番目にする	<name4> [ <name3> - <name5> ] [ <name2> ] = <val6>	<name1> [ <name3> - <name5> ] [ <name2> ] = <val6>
<name2> ( <name6> , <name1> , <name5> ) を <name3> とする	<name3> = <name2> ( <name6> , <name1> , <name5> )	else = <name2> ( <name6> , <name1> , <name5> )
<name4> モジュールを用いる	from <name4> import sqrt , atan2 , acos , sin , cos	return from <name4> import deque
<name5> に <name6> の正弦を掛けた値を <name3> とする	<name3> = <name5> * sin ( <name6> )	<name3> = <name5> * math . sin ( <name6> )
<name1> の長さが <val5> と等しくないとき、	if len ( <name1> ) != <val5> :	while ( len ( <name1> ) != <val5> ) :
<val1> が <name3> 以下かどうかが <val2> 以下かつ <val1> が <name5> 以下かどうかが <val2> 以下かつ <name4> の <name5> 番目の <name3> 番目が <val6> と等しいとき、	if <val1> <= <name3> <= <val2> and <val1> <= <name5> <= <val2> and <name4> [ <name5> ] [ <name3> ] == <val6> :	list ( <val1> <= <name3> <= <val2> and <val1> <= <name5> <= <val2> and <name4> [ <name5> ] [ <name3> ] == <val6> :
<name2> を <name6> で割った余りを <name3> とする	<name3> = <name2> % <name6>	( <name3> = <name2> % <name6> )
( 、つまり未定値 ) からなる列の <name2> の <name5> 回分の列を <name2> の <name6> にする	<name2> . <name6> = [ None ] * <name2> . <name5>	<name2> . <name6> = [ None ] * <name2> . <name5>
<name2> の末尾に <name3> の先頭の整数値を追加する	<name2> . append ( int ( <name3> [ 0 ] ) )	<name2> . append ( int ( <name3> [ 0 ] ) )
<name4> の <name5> の <name1> 番目番目の末尾に <name1> を追加する	<name4> [ <name5> [ <name1> ] ] . append ( <name1> )	<name4> [ <name5> [ <name1> ] ] . append ( <name1> )
- <name5> を出力する	print ( - <name5> )	print ( - <name5> )
<name3> の各要素を <name4> とし、 <name6> が <name4> より小さいかどうかが <val2> に <name6> を掛けた値以下のときの <name4> の列を <name1> とする	<name1> = [ <name4> for <name4> in <name3> if <name6> < <name4> <= <val2> * <name6> ]	<name4> = [ <name4> for <name4> in <name3> if <name6> < <name4> <= <val2> * <name6> ]
<name3> の <name2> 番目の <name5> 番目が <val4> と等しいとき ( <val1> 、 <val6> ) の組、そうでなければ ( <val6> 、 <val1> ) の組を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = ( <val1> , <val6> ) if <name3> [ <name2> ] [ <name5> ] == <val4> else ( <val6> , <val1> )	<name5> , <name4> = ( <val1> , <val6> ) if <name3> [ <name2> ] [ <name5> ] == <val4> else ( <val6> , <val1> )
<val5> から <name4> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <val5> から <name4> に <val1> を加えた値未満までの数列の各要素を <name2> とし、 <val5> の列の列を <name3> の <name6> にする	<name3> . <name6> = [ [ <val5> for <name2> in range ( <name4> + <val1> ) ] for <name3> in range ( <name4> + <val1> ) ]	<name6> = [ [ <val5> for <name2> in range ( <name4> + <val1> ) ] for <name3> in range ( <name4> + <val1> ) ]
<name4> の末尾に ( <name1> 、 <name6> の整数値 ) の組を追加する	<name4> . append ( ( <name1> , int ( <name6> ) ) )	<name4> . append ( ( <name1> , int ( <name6> ) ) )
<val4> を <name1> だけ左シフトした値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <val4> << <name1>	<name2> . <name5> [ <name6> ] = <val4> << <name1>
<name4> の <val1> 番目から <name5> の先頭を引いた値を <name3> とする <name4> の <val6> 番目から <name5> の <val6> 番目を引いた値を <name2> とする	<name3> = <name4> [ <val1> ] - <name5> [ <val1> ] <name2> = <name4> [ <val6> ] - <name5> [ <val6> ]	<name3> = <name4> [ <val1> ] - <name5> [ <val1> ] <name2> = <name4> [ <val6> ] - <name5> [ <val6> ]
( 、つまり未定値 ) からなる列の <name2> 回分の列を <name5> の <name1> にする	<name5> . <name1> = [ None ] * <name2>	) . <name1> = [ None ] * <name2>
<name5> の <val1> 番目から、つまり末尾までの部分列に <name5> の、つまり先頭から <val1> 番目までの部分列を加えた値を <name5> とする	<name5> = <name5> [ <val1> : ] + <name5> [ 0 : <val1> ]	<name6> = <name5> [ <val1> : ] + <name5> [ : <val1> ]
<name4> ( <name1> ) が <val5> と等しいとき、	if ( <name4> ( <name1> ) == <val5> ) :	list ( <name4> ( <name1> ) == <val5> :
<val1> から <name4> を引いた値から <name3> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> - <name4> , <name3> ) :	continue - <name4> , <name3> in range ( <val1> - <name3> ) :
<name6> を <val3> を <name5> の <name1> 番目だけ左シフトした値だけ増加させる	<name6> += <val3> << <name5> [ <name1> ]	<name6> += ( <val3> << <name5> [ <name1> ] )
<name1> かつ <name2> の <name5> 番目が、つまり未定値と等しくないとき、	if <name1> and <name2> [ <name5> ] is None :	for <name1> in <name1> and <name2> [ <name5> ] is None :
<name3> から読み込んだ一行を <name5> とする	<name5> = <name3> . <name5>	<name5> = <name3> . <name5>
入力された文字列を空白で分割した字句列を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = input ( ) . split ( )	<name1> , <name2> = input ( ) . split ( )
<name5> から <val2> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <val2> , - 1 ) :	for <name1> in range ( <name5> , <val2> , - 1 ) :
<name3> を <name1> の <name2> ( <name3> , <name6> ) 番目にする	<name1> [ <name2> ( <name3> , <name6> ) ] = <name3>	<name4> [ <name1> [ <name2> ( <name3> , <name6> ) ] ] = <name3>
<name4> の <name5> の各要素を <name6> とし、 <name3> ( <name6> . <name1> ( ) ) の列を <name2> とする	<name2> = [ <name3> ( <name6> . <name1> ( ) ) for <name6> in <name4> . <name5> ]	<name6> = [ <name3> ( <name6> . <name1> ( ) ) for <name6> in <name4> . <name5> ]
次は例外に関する条件がある <blk> <name5> ( <name6> ( ) ) を出力する </blk>	try : <blk> print ( <name5> ( <name6> ( ) ) ) </blk>	\ try : <blk> print ( <name5> ( <name6> ( ) ) ) </blk>
<name3> に <name5> を加えた値から <val2> を引いた値を <name6> とする	<name6> = <name3> + <name5> - <val2>	( <name6> = <name3> + <name5> - <val2> )
<name2> の <val6> 番目を <name3> だけ減少させる	<name2> [ <val6> ] -= <name3>	pow ( <name2> [ <val6> ] -= <name3> )
<name4> の末尾に <name6> の <name1> の <name2> 番目を追加する	<name4> . append ( <name6> . <name1> [ <name2> ] )	<name4> . append ( <name6> . <name1> [ <name2> ] )
<name3> の <name5> の <name4> 番目が <val1> 以上の間、次を繰り返す	while <name3> . <name5> [ <name4> ] >= <val1> :	for <name3> in <name3> . <name5> [ <name4> ] >= <val1> :
<name4> の <name1> 番目でないとき、	if not <name4> [ <name1> ] :	while not <name4> [ <name1> ] :
0 から <val3> から <name1> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> - <name1> ) :	for <name6> in range ( <val3> - <name1> ) :
<name2> . <name5> ( <val1> ** <val6> )	<name2> . <name5> ( <val1> ** <val6> )	<name1> . <name5> ( <val1> ** <val6> )
<val4> の <val2> 乗を <name6> の <name3> にする	<name6> . <name3> = <val4> ** <val2>	<name4> . <name6> . <name3> = <val4> ** <val2>
<val6> が <name2> と等しいとき、	if ( <val6> == <name2> ) :	if <val6> == <name2> :
<name5> ( <val4> , <val6> )	<name5> ( <val4> , <val6> )	<name5> ( <val4> , <val6> )
<name1> の <name3> から <val6> を引いた値番目の <name4> 番目が <name5> と等しくないとき、	if <name1> [ <name3> - <val6> ] [ <name4> ] != <name5> :	!= <name1> [ <name3> - <val6> ] [ <name4> ] != <name5> :
<name6> 、 <name1> の最小値を出力する	print ( min ( <name6> , <name1> ) )	print ( min ( <name6> , <name1> ) )
<name5> の <name3> を <val2> だけ増加させる	<name5> . <name3> += <val2>	( <name5> . <name3> += <val2> )
<name5> が <name6> と等しいかどうかが <val3> と等しいとき、	if <name5> == <name6> == <val3> :	for if <name5> == <name6> == <val3> :
<name2> の末尾に <name5> の <name6> に <name3> を掛けた値から <name6> に <name3> を掛けた値に <name3> を加えた値までの部分列を追加する	<name2> . append ( <name5> [ <name6> * <name3> : <name6> * <name3> + <name3> ] )	<name1> . append ( <name5> [ <name6> * <name3> : <name6> * <name3> + <name3> ] )
<name6> 、 <name1> 、 <name3> 、 <name4> を出力する	print ( <name6> , <name1> , <name3> , <name4> )	print ( <name6> , <name1> , <name3> , <name4> )
<name5> の各要素を <name1> とし、 <name1> が <name6> の部分集合のときの <name1> の列の集合を <name2> とする	<name2> = set ( [ <name1> for <name1> in <name5> if <name1> . issubset ( <name6> ) ] )	<name2> = set ( [ <name1> for <name1> in <name5> if <name1> . issubset ( <name6> ) ] )
<name5> の <name1> 番目を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name5> [ <name1> ]	<name2> , <name4> = <name5> [ <name1> ]
<name5> を順に <name6> として、繰り返す	for <name6> in <name5> :	. for <name6> in <name5> :
<val6> を書式として <name5> の <name3> 、 <name5> の <name2> で整形した文字列を返す	return <val6> . format ( <name5> . <name3> , <name5> . <name2> )	x return <val6> . format ( <name5> . <name3> , <name5> . <name2> )
<name4> を <name5> から <name6> を引いた値の絶対値の <name1> 乗だけ増加させる	<name4> += abs ( <name5> - <name6> ) ** <name1>	<name1> += abs ( <name5> - <name6> ) ** <name1>
<name4> の <name5> の <name6> 番目が <name3> の <name5> の <name6> 番目と等しくないとき、	if <name4> . <name5> [ <name6> ] != <name3> . <name5> [ <name6> ] :	raise <name4> . <name5> [ <name6> ] != <name3> . <name5> [ <name6> ] :
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name4> . <name5> ( <name1> [ <name6> [ <val3> ] ] , <val2> )	<name4> . <name5> ( <name1> [ <name6> [ <val3> ] ] , <val2> )	<name4> . <name5> ( <name1> [ <name6> [ <val3> ] ] , <val2> )
( <name1> の <name4> 番目、 os . <name3> の逆順 ) の組を返す	return ( <name1> [ <name4> ] , <name3> [ : : - 1 ] )	assert ( <name1> [ <name4> ] , <name3> [ : : - 1 ] )
<name1> を <val6> で割った商を <name2> の <name5> にする	<name2> . <name5> = <name1> // <val6>	( <name2> . <name5> = <name1> // <val6> )
<name1> の <val2> 番目が <name4> の <val2> 番目と等しくない間、次を繰り返す	while <name1> [ <val2> ] != <name4> [ <val2> ] :	del <name1> [ <val2> ] != <name4> [ <val2> ] :
\ <name3> の末尾に <val4> を <name6> に ( <val2> - <name5> ) を掛けた値を <name1> で割った値の整数値で割った余りを追加する\	\ <name3> . append ( <val4> % int ( <name6> * ( <val2> - <name5> ) / <name1> ) ) \	<name3> . append ( <val4> % int ( ( <name6> * ( <val2> - <name5> ) / <name1> ) ) \
<name3> . <name6> ( <name5> ) でないとき、	if not <name3> . <name6> ( <name5> ) :	isinstance ( <name3> . <name6> ( <name5> ) ) :
0 から <name1> から <name2> を引いた値に <val3> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> - <name2> + <val3> ) :	for <name6> in range ( <name1> - <name2> + <val3> ) :
<name5> ( ) を空白で分割した字句列を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = <name5> ( ) . split ( )	<name1> , <name4> = <name5> ( ) . split ( )
偽を <name2> の <name1> 番目にする	<name2> [ <name1> ] = False	( <name2> [ <name1> ] = False )
<val1> に <name4> の先頭を除いた部分列の <val6> と等しい要素の最初の位置を加えた値をそうでなければ、とする	else = <val1> + <name4> [ <val1> : ] . index ( <val6> )	else = <val1> + <name4> [ <val1> : ] . index ( <val6> )
<name4> の <name3> から <name4> の <name6> を引いた値を <name5> とする	<name5> = <name4> . <name3> - <name4> . <name6>	<name5> = <name4> . <name3> - <name4> . <name6>
<name6> の先頭を取り出した値の浮動小数点数を <name3> とする	<name3> = float ( <name6> . pop ( ) )	<name3> = float ( <name6> . pop ( ) )
<name2> が <val6> より小さいとき、 <blk> <val6> を <name2> とする </blk>	if <name2> < <val6> : <blk> <name2> = <val6> </blk>	\ <name2> = <name2> < <val6> : <blk> <name2> = <val6> </blk>
<name4> ( ) . <name2> ( <name3> . <name6> , <name3> . <name1> )	<name4> ( ) . <name2> ( <name3> . <name6> , <name3> . <name1> )	<name2> ( ) . <name2> ( <name3> . <name6> , <name3> . <name1> )
<name5> を <name4> ( <name6> ) 倍にする	<name5> *= <name4> ( <name6> )	( <name5> *= <name4> ( <name6> ) )
 を間に入れて <name5> の <name6> から <val4> を引いた値から、つまり末尾までの部分列の各要素を <name1> とし、 <name1> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name1> ) for <name1> in <name5> [ <name6> - <val4> : ] ] ) )	print ( '' . join ( [ str ( <name1> ) for <name1> in <name5> [ <name6> - <val4> : ] ] ) )
<name6> が、つまり未定値と等しくなくまたは <name6> の長さが <val5> と等しくないとき、	if <name6> is None or len ( <name6> ) != <val5> :	while <name6> != None or len ( <name6> ) != <val5> :
( <val5> ) からなる列の <name4> 回分の列を <name2> の <name3> にする	<name2> . <name3> = [ <val5> ] * <name4>	<name2> . <name3> = [ <val5> ] * <name4>
<name2> ( <name3> , <name6> , <name4> )	<name2> ( <name3> , <name6> , <name4> )	( <name2> ( <name3> , <name6> , <name4> ) )
<name5> の <name3> の <val2> 番目の整数値番目内の全ての要素を取り除く	<name5> [ int ( <name3> [ <val2> ] ) ] . clear ( )	<name5> [ int ( <name3> [ <val2> ] ) ] . clear ( )
<name5> から <val4> を引いた値から <name5> から <name2> を引いた値から <val4> を引いた値未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> - <val4> , <name5> - <name2> - <val4> , - <val4> ) :	. for <name1> in range ( <name5> - <val4> , <name5> - <name2> - <val4> , - <val4> ) :
<name3> を <val6> だけ右シフトする <name4> を <val6> だけ右シフトする	<name3> >> = <val6> <name4> >> = <val6>	<name3> >> = <val6> <name4> >> = <val6>
<name3> から <name1> を引いた値から <name5> を引いた値が <val4> より小さいとき、	if <name3> - <name1> - <name5> < <val4> :	continue - <name1> - <name5> < <val4> :
<name3> を <name6> から <val4> を引いた値だけ増加させる	<name3> += <name6> - <val4>	( <name3> += <name6> - <val4> )
<name1> の <name6> を <name5> の <name3> にする	<name5> . <name3> = <name1> . <name6>	<name1> . <name3> = <name1> . <name6>
<name3> が <name1> と等しくなくかつ ( <name3> 、 <name1> ) の組の各要素を <name6> とし、 <name6> が ( <val5> 、 <val4> ) の組に含まれるかどうかの列が全てが真のとき、	if <name3> != <name1> and all ( [ <name6> in ( <val5> , <val4> ) for <name6> in ( <name3> , <name1> ) ] ) :	while <name3> != <name1> and all ( [ <name6> in ( <val5> , <val4> ) for <name6> in ( <name3> , <name1> ) ] ) :
<name5> ( <name4> ) に <val6> を加えた値に <name2> の文字列を加えた値に <val6> を加えた値に <name1> の文字列を加えた値を出力する	print ( <name5> ( <name4> ) + <val6> + <name5> ( <name2> ) + <val6> + <name5> ( <name1> ) )	<name5> ( <name4> ) + <val6> + str ( <name2> ) + <val6> + <name5> ( <name1> ) )
<name5> の <name2> の末尾に <name1> を追加する	<name5> . <name2> . append ( <name1> )	<name1> . <name2> . append ( <name1> )
<name4> から <name6> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> , <name6> + <val1> ) :	. for <name5> in range ( <name4> , <name6> + <val1> ) :
<name2> の <val5> 番目を <val6> だけ増加させる	<name2> [ <val5> ] += <val6>	<name1> [ <val5> ] += <val6>
<name1> に <val4> を加えた値が <name6> より小さくかつ <name2> が <name3> より小さいとき、	if <name1> + <val4> < <name6> and <name2> < <name3> :	raise <name1> + <val4> < <name6> and <name2> < <name3> :
<val2> を書式として <name4> で整形した文字列を出力する	print ( <val2> . format ( <name4> ) )	print ( <val2> . format ( <name4> ) )
0 から <val6> 未満までの数列の各要素を <name4> とし、 <val5> の <name4> 乗の列を <name2> とする	<name2> = [ <val5> ** <name4> for <name4> in range ( <val6> ) ]	<name2> = [ <val5> ** <name4> for <name4> in range ( <val6> ) ]
<name4> ( <name3> , -1 , <name6> ) を <name5> とする	<name5> = <name4> ( <name3> , - 1 , <name6> )	<name5> = <name4> ( <name3> , - 1 , <name6> )
<name1> を <name3> に <val4> を加えた値に <name6> を掛けた値だけ減少させる <name2> を <name3> に <val4> を加えた値だけ減少させる	<name1> -= ( <name3> + <val4> ) * <name6> <name2> -= <name3> + <val4>	not <name1> -= ( <name3> + <val4> ) * <name6> <name2> -= ( <name3> + <val4> )
<name6> の整数値が <val3> より小さいとき、 <blk> <val4> に <val1> を掛けた値を出力する </blk>	if int ( <name6> ) < <val3> : <blk> print ( <val4> * <val1> ) </blk>	\ print ( int ( <name6> ) < <val3> : <blk> print ( <val4> * <val1> ) </blk>
<name5> の <name6> から <val4> を引いた値番目の末尾に ( <name1> から <val4> を引いた値、 <name3> 、 <name2> ) の組を追加する	<name5> [ <name6> - <val4> ] . append ( ( <name1> - <val4> , <name3> , <name2> ) )	<name1> [ <name6> - <val4> ] . append ( ( <name1> - <val4> , <name3> , <name2> ) )
<name1> の <name4> 番目の末尾に ( <name5> ) からなる列に <name3> を加えた値を追加する	<name1> [ <name4> ] . append ( [ <name5> ] + <name3> )	<name1> [ <name4> ] . append ( [ <name5> ] + <name3> )
<name6> の末尾に <val1> に <name5> に <val3> を加えた値を掛けた値を追加する	<name6> . append ( <val1> * ( <name5> + <val3> ) )	<name3> . append ( <val1> * ( <name5> + <val3> ) )
meiji { 0 } { 1 } { 2 }を書式として <name2> から <val4> を引いた値、 <name1> 、 <name6> で整形した文字列を返す	return 'meiji {0} {1} {2}' . format ( <name2> - <val4> , <name1> , <name6> )	input = '{0} {1} '{0} . format ( <name2> - <val4> , <name1> , <name6> )
<name4> の各要素を <name3> 、 <name5> 、 <name6> 、 <name2> とし、 <name5> が <name1> 以下かどうかが <name2> 以下かどうかの列が少なくともひとつは真のとき、	if any ( [ <name5> <= <name1> <= <name2> for <name3> , <name5> , <name6> , <name2> in <name4> ] ) :	for <name3> in any ( [ <name5> <= <name1> <= <name2> for <name3> , <name5> , <name6> , <name2> in <name4> ] ) :
<name1> から <name5> を引いた値が <name3> より大きい間、次を繰り返す	while <name1> - <name5> > <name3> :	yield ( <name1> - <name5> > <name3> ) :
<name5> の絶対値を <name5> の絶対値に <name4> の絶対値を加えた値で割った値を <name2> とする	<name2> = abs ( <name5> ) / ( abs ( <name5> ) + abs ( <name4> ) )	<name2> = abs ( <name5> ) / ( abs ( <name5> ) + abs ( <name4> ) )
<name6> の <name5> 番目が ( <name3> 、 <name1> ) の組と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> [ <name5> ] == ( <name3> , <name1> ) : <blk> break </blk>	\ if <name6> [ <name5> ] == ( <name3> , <name1> ) : <blk> break </blk>
<name6> を <name3> に <val1> を掛けた値に <name4> に <val5> を掛けた値を加えた値だけ増加させる	<name6> += <name3> * <val1> + <name4> * <val5>	<name2> += <name3> * <val1> + <name4> * <val5>
<name5> を展開し、それぞれ <name2> 、 <name4> とする <name3> を展開し、それぞれ <name1> 、 <name6> とする	<name2> , <name4> = <name5> <name1> , <name6> = <name3>	<name2> , <name4> = <name5> <name1> , <name6> = <name3>
<name6> の <name4> 番目の末尾に <name3> を追加する	<name6> [ <name4> ] . append ( <name3> )	<name3> [ <name4> ] . append ( <name3> )
<name3> の各要素を <name4> とし、 <name5> ( <name2> , <name4> ) の列を順に <name1> として、繰り返す	for <name1> in [ <name5> ( <name2> , <name4> ) for <name4> in <name3> ] :	. for <name1> in [ <name5> ( <name2> , <name4> ) for <name4> in <name3> ] :
<name3> 内の <name1> の出現回数を出力する	print ( <name3> . count ( <name1> ) )	print ( <name3> . count ( <name1> ) )
<name3> を <name4> の <name5> にソート順で最後に挿入する	insort ( <name4> . <name5> , <name3> )	insort_left ( <name4> . <name5> , <name3> )
<name5> の <name4> 番目の先頭を <name4> とする	<name4> = <name5> [ <name4> ] [ 0 ]	( <name4> = <name5> [ <name4> ] [ 0 ] )
<name6> . <name4> ( <name2> ) でなくなければならない	assert not <name6> . <name4> ( <name2> )	<val1> assert not <name6> . <name4> ( <name2> )
<name4> の <name6> 番目が <name3> と等しいとき <val1> 、そうでなければ <val2> を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <val1> if <name4> [ <name6> ] == <name3> else <val2>	( <name2> [ <name5> ] = <val1> if <name4> [ <name6> ] == <name3> else <val2> )
<name4> から <name3> を引いた値を出力する	print ( <name4> - <name3> )	<name4> print ( <name3> - <name3> )
<name5> . <name1> ( <name5> . <name2> ) を <name6> とする	<name6> = <name5> . <name1> ( <name5> . <name2> )	else = <name5> . <name1> ( <name5> . <name2> )
<name6> の <name5> 番目の <name1> 番目を <name6> の <name5> から <val2> を引いた値番目の <name1> から <name3> を引いた値番目だけ増加させる	<name6> [ <name5> ] [ <name1> ] += <name6> [ <name5> - <val2> ] [ <name1> - <name3> ]	<name1> [ <name5> ] [ <name1> ] += <name6> [ <name5> - <val2> ] [ <name1> - <name3> ]
<name2> を <name6> の <name3> 番目から <name6> の <name4> 番目を引いた値だけ増加させる	<name2> += <name6> [ <name3> ] - <name6> [ <name4> ]	<name1> += <name6> [ <name3> ] - <name6> [ <name4> ]
<name6> の <name3> の <name2> 番目が <name6> の <name3> の <name1> 番目と等しいとき、	if <name6> . <name3> [ <name2> ] == <name6> . <name3> [ <name1> ] :	for <name6> . <name3> [ <name2> ] == <name6> . <name3> [ <name1> ] :
<name5> を <val3> で分割した字句列を <name5> とする	<name5> = <name5> . split ( <val3> )	<name5> = <name5> . split ( <val3> )
<name1> を <name3> の総和から <name3> の最小値を引いた値だけ増加させる	<name1> += sum ( <name3> ) - min ( <name3> )	<name1> += sum ( <name3> ) - min ( <name3> )
<name5> が <name4> の <name1> 以下の間、次を繰り返す	while <name5> <= <name4> . <name1> :	del ( <name5> <= <name4> . <name1> ) :
<name3> 、 <name6> の <name3> 番目、 <name1> の <name3> 番目を出力する	print ( <name3> , <name6> [ <name3> ] , <name1> [ <name3> ] )	print ( <name3> , <name6> [ <name3> ] , <name1> [ <name3> ] )
0 から <name3> 未満までの数列の各要素を <name6> とし、 <name2> から読み込んだ一行の両端から空白改行を取り除いた文字列の列を <name1> とする	<name1> = [ <name2> . readline ( ) . strip ( ) for <name6> in range ( <name3> ) ]	<name1> = [ <name2> . readline ( ) . strip ( ) for <name6> in range ( <name3> ) ]
<name1> が <val3> と等しくなくまたは <name2> が <val3> と等しくない間、次を繰り返す	while <name1> != <val3> or <name2> != <val3> :	del ( <name1> != <val3> or <name2> != <val3> ) :
<val5> の <name4> 番目から、つまり末尾までの部分列を順に <name1> として、繰り返す	for <name1> in <val5> [ <name4> : ] :	in <val5> [ <name4> : ] :
<name4> に <name1> から <name4> を引いた値を <val5> で割った商を加えた値を <name2> とする	<name2> = <name4> + ( <name1> - <name4> ) // <val5>	<name2> = <name4> + ( <name1> - <name4> ) // <val5>
<name4> の <name2> の <name6> 番目の末尾に <name3> を追加する	<name4> . <name2> [ <name6> ] . append ( <name3> )	<name1> . <name2> [ <name6> ] . append ( <name3> )
<name1> のキーと値の集まりを順に <name4> 、 <name6> として、繰り返す	for <name4> , <name6> in <name1> . items ( ) :	. for <name4> , <name6> in <name1> . items ( ) :
<name3> の <name6> の x 座標から <name3> の <name2> の x 座標を引いた値と <name3> の <name6> の y 座標から <name3> の <name2> の y 座標を引いた値のノルムを <name5> とする	<name5> = hypot ( <name3> . <name6> . x - <name3> . <name2> . x , <name3> . <name6> . y - <name3> . <name2> . y )	<name2> . <name5> = hypot ( <name3> . <name6> . x - <name3> . <name2> . <name2> . x , <name3> . <name6> [ 0 ] - <name3> . <name2> . y )
<name5> の <name3> を <name5> の <name4> の <name3> にする	<name5> . <name4> . <name3> = <name5> . <name3>	<name2> . <name4> . <name3> = <name5> . <name3>
<name5> の階乗を <name5> から <name3> を引いた値の階乗で割った商を返す	return factorial ( <name5> ) // factorial ( <name5> - <name3> )	x return factorial ( <name5> ) // factorial ( <name5> - <name3> )
<name3> を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name3>	( <name4> [ <name5> ] = <name3> )
<name4> ( <name3> ) に <val2> を加えた値に <name6> の文字列を加えた値に <val1> を加えた値に <name3> に <name6> を掛けた値の文字列を加えた値を出力する	print ( <name4> ( <name3> ) + <val2> + <name4> ( <name6> ) + <val1> + <name4> ( <name3> * <name6> ) )	str = <name4> ( <name3> ) + <val2> + str ( <name6> ) + <val1> + str ( <name3> * <name6> ) )
<name1> を <name3> とする <name5> から <val2> を引いた値を <name6> とする	<name3> = <name1> <name6> = <name5> - <val2>	<name6> = <name1> <name6> = <name5> - <val2>
<name5> ( <name3> , ( <name1> + <val2> , <name4> + <val6> , <name5> -1 ) )	<name5> ( <name3> , ( <name1> + <val2> , <name4> + <val6> , <name5> - <val6> ) )	<name2> ( <name3> , ( <name1> + <val2> , <name4> + <val6> , <name5> - <val6> ) )
<name4> . <name3> ( <name1> - <name6> . <name2> ) を <name4> . <name5> ( ) で割った値を <name5> とする	<name5> = <name4> . <name3> ( <name1> - <name6> . <name2> ) / <name4> . <name5> ( )	else = <name4> . <name3> ( <name1> - <name6> . <name2> ) / <name4> . <name5> ( )
<name5> 、 <name3> の最小値を <name5> とする	<name5> = min ( <name5> , <name3> )	<name5> = min ( <name5> , <name3> )
<name2> が <name3> 以下かつ <name3> が <name5> 以下かつ <name1> <= <name6> かつ <name1> <= <name4> かつ <name4> が <name6> 以下かどうかと <name1> > <name6> かつ <name6> <= <name4> かつ <name4> が <name1> 以下かどうかの論理和かつ <name4> から <name1> を引いた値に <name5> から <name2> を引いた値を掛けた値が <name6> から <name1> を引いた値に <name3> から <name2> を引いた値を掛けた値と等しいかどうかを返す	return <name2> <= <name3> and <name3> <= <name5> and ( ( <name1> <= <name6> and <name1> <= <name4> and <name4> <= <name6> ) | ( <name1> > <name6> and <name6> <= <name4> and <name4> <= <name1> ) ) and ( <name4> - <name1> ) * ( <name5> - <name2> ) == ( <name6> - <name1> ) * ( <name3> - <name2> )	<name5> = <name2> <= <name3> and <name3> <= <name5> and ( ( <name1> <= <name6> and <name1> <= <name4> and <name4> <= <name6> ) | ( <name1> > <name6> and <name6> and <name4> <= <name4> and <name4> and <name1> ) ) and ( <name4> - <name1> ) * ( <name5> - <name2> ) == ( <name6> - <name1> ) * ( <name3> - <name3> ) )
<name3> ( ) の両端から空白改行を取り除いた文字列を空白で分割した字句列を展開し、それぞれ <name4> 、 <name2> 、 <name5> 、 <name1> とする	<name4> , <name2> , <name5> , <name1> = <name3> ( ) . strip ( ) . split ( )	<name3> , <name2> , <name5> , <name1> = <name3> ( ) . strip ( ) . split ( )
<name5> が <val6> より小さいとき -1 、そうでなければ <name4> から <name5> を引いた値を <name3> の <name2> 番目の <name4> 番目にする	<name3> [ <name2> ] [ <name4> ] = - 1 if <name5> < <val6> else <name4> - <name5>	<name3> [ <name2> ] [ <name4> ] = - 1 if <name5> < <val6> else <name4> - <name5>
<name5> の <name6> に <name3> の <name6> を掛けた値に <name5> の <name1> に <name3> の <name1> を掛けた値を加えた値を返す	return <name5> . <name6> * <name3> . <name6> + <name5> . <name1> * <name3> . <name1>	x return <name5> . <name6> * <name3> . <name6> + <name5> . <name1> * <name3> . <name1>
<name4> モジュールを用いる	from <name4> import heapify , heappush , heappop	return from <name4> import deque
<val6> から <name1> の <name2> を引いた値を <name1> の <name3> にする	<name1> . <name3> = <val6> - <name1> . <name2>	. <name1> . <name3> = <val6> - <name1> . <name2>
( <val1> ) からなる列の <name2> に <val3> を加えた値回分の列を <name5> とする	<name5> = [ <val1> ] * ( <name2> + <val3> )	<name5> = [ <val1> ] * ( <name2> + <val3> )
<name6> の <name5> を <val4> だけ増加させる	<name6> . <name5> += <val4>	( <name6> . <name5> += <val4> )
<name6> を <name4> で割った余りでなくかつ <name6> を <name4> で割った商を <val1> で割った余りが <name4> を <val1> で割った余りと等しくないとき、 <blk> <name2> を <val3> だけ増加させる </blk>	if not ( <name6> % <name4> ) and <name6> // <name4> % <val1> != <name4> % <val1> : <blk> <name2> += <val3> </blk>	try not <name4> and ( <name6> // <name4> ) % <val1> != <name4> % <val1> : <blk> <name2> += <val3> </blk>
( <name2> の <val1> 番目に <name6> を加えた値、 <name2> の <val4> 番目 ) からなる列を <name5> とする	<name5> = [ <name2> [ <val1> ] + <name6> , <name2> [ <val4> ] ]	<name5> = [ <name2> [ <val1> ] + <name6> , <name2> [ <val4> ] ]
<name4> の値の集まりの各要素に <name6> を適用した列の総和を出力する	print ( sum ( map ( <name6> , <name4> . values ( ) ) ) )	sum ( map ( <name6> , <name4> . values ( ) ) )
<name6> の <name4> 番目の <name2> 番目を返す	return <name6> [ <name4> ] [ <name2> ]	yield <name6> [ <name4> ] [ <name2> ]
<name5> を <val3> から <val3> を <name2> で割った値を引いた値倍にする	<name5> *= ( <val3> - <val3> / <name2> )	<name1> *= ( <val3> - <val3> / <name2> )
<name4> が <name3> 以上のとき、 <blk> <val1> を <name4> とする </blk>	if <name4> >= <name3> : <blk> <name4> = <val1> </blk>	\ <name4> = <name4> >= <name3> : <blk> <name4> = <val1> </blk>
<name6> のリストをソートした列を <name3> とする	<name3> = sorted ( list ( <name6> ) )	<name3> = sorted ( list ( <name6> ) )
<name5> . <name3> ( <name4> , <name2> )	<name5> . <name3> ( <name4> , <name2> )	<name1> . <name3> ( <name4> , <name2> )
( <name2> の <name6> ) からなる列を <name5> とする	<name5> = [ <name2> . <name6> ]	<name5> = [ <name2> . <name6> ]
<name5> が <name3> の長さより小さくかつ <name1> が <name3> の <name5> 番目と等しいとき、	if <name5> < len ( <name3> ) and <name1> == <name3> [ <name5> ] :	for <name5> < len ( <name3> ) and <name1> == <name3> [ <name5> ] :
入力された文字列を <name2> とする	<name2> = input	input = input ( )
<name5> の <name6> 番目に <name5> の <name2> 番目を加えた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name5> [ <name6> ] + <name5> [ <name2> ]	<name4> [ <name1> ] = <name5> [ <name6> ] + <name5> [ <name2> ]
<name4> の <val5> 番目を <name4> の <val2> 番目で割った余りが <val5> と等しいとき、	if <name4> [ <val5> ] % <name4> [ <val2> ] == <val5> :	if <name4> [ <val5> ] % <name4> [ <val2> ] == <val5> :
<name3> が <name1> 以上のとき、 <blk> <name4> を <name3> から <name1> を引いた値に <val6> を加えた値だけ増加させる </blk>	if <name3> >= <name1> : <blk> <name4> += <name3> - <name1> + <val6> </blk>	if <name3> >= <name1> : <blk> <name4> += <name3> - <name1> + <val6> </blk>
<name4> ( [ <name5> [ <val6> : <val2> ] forlineindrawing [ <val1> : <val3> ] ] ) を <name3> とする	<name3> = <name4> ( [ <name5> [ <val6> : <val2> ] for <name5> in drawing [ <val1> : <val3> ] ] )	<name2> = <name4> ( [ <name5> [ <val6> : <val2> ] for <name5> in ] ) [ <val1> : <val3> ] ] )
<name1> を順に <name6> 、 <name2> 、 <name3> として、繰り返す	for <name6> , <name2> , <name3> in <name1> :	. for <name6> , <name2> , <name3> in <name1> :
<name6> ( <name1> . <name2> [ <val5> : ] )	<name6> ( <name1> . <name2> [ <val5> : ] )	<name5> ( <name1> . <name2> [ <val5> : ] )
no を返す	return 'no'	self -= 'WNES'
<name4> の、つまり先頭から <name1> 番目までの部分列に <val2> を加えた値に <name4> の <name1> 番目から、つまり末尾までの部分列を加えた値を出力する	print ( <name4> [ : <name1> ] + <val2> + <name4> [ <name1> : ] )	return <name4> [ : <name1> ] + <val2> + <name4> [ <name1> : ] )
<name4> の先頭、 <name4> の <val2> 番目、 <name4> の <val5> 番目、 <name4> の <val1> 番目を出力する	print ( <name4> [ 0 ] , <name4> [ <val2> ] , <name4> [ <val5> ] , <name4> [ <val1> ] )	print ( <name4> [ 0 ] , <name4> [ <val2> ] , <name4> [ <val5> ] , <name4> [ <val1> ] )
<name1> に <name6> を加えた値を <val5> で割った商を <name3> とする	<name3> = ( <name1> + <name6> ) // <val5>	<name3> = ( <name1> + <name6> ) // <val5>
<name1> の <name4> の <name6> 番目を <name2> とする	<name2> = <name1> . <name4> [ <name6> ]	<name2> = <name1> . <name4> [ <name6> ]
<name4> の <name1> 番目から <name5> を引いた値を <name6> とする	<name6> = <name4> [ <name1> ] - <name5>	<name6> = <name4> [ <name1> ] - <name5>
<name5> の先頭を除いた部分列の各要素を <name4> とし、 ( <name4> を空白で分割した字句列の先頭、 <name4> を空白で分割した字句列の <val6> 番目の整数値 ) の組の列を <name2> とする	<name2> = [ ( <name4> . split ( ) [ 0 ] , int ( <name4> . split ( ) [ <val6> ] ) ) for <name4> in <name5> [ <val6> : ] ]	<name5> = [ ( <name4> . split ( ) , int ( <name4> . split ( <val6> ] ) ) for <name4> in <name5> [ <val6> : ] ]
0 から <val1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> ) :	( <name6> in range ( <val1> ) :
<name5> に <name5> に <val2> を加えた値を掛けた値を <val3> で割った商から <name4> . <name6> ( <name5> -1 ) を引いた値を出力する	print ( <name5> * ( <name5> + <val2> ) // <val3> - <name4> . <name6> ( <name5> - <val2> ) )	end = <name5> * ( <name5> + <val2> ) // <val3> - <name4> . <name6> ( <name5> - <val2> ) )
<name2> から読み込んだ一行の整数値を <name4> とする	<name4> = int ( <name2> . readline ( ) )	<name4> = int ( <name2> . readline ( ) )
<name1> ( ( <name3> ** <val4> + <name5> ** <val4> - <name2> ** <val4> ) / ( <val4> * <name3> * <name5> ) ) を <name6> とする	<name6> = <name1> ( ( <name3> ** <val4> + <name5> ** <val4> - <name2> ** <val4> ) / ( <val4> * <name3> * <name5> ) )	<name6> = <name1> ( ( <name3> ** <val4> + <name5> ** <val4> - <name2> ** <val4> ) / ( <val4> * <name3> * <name5> ) )
<name5> に <val4> を加えた値が <name1> の長さと等しいとき、 <blk> 繰り返しを中断する </blk>	if <name5> + <val4> == len ( <name1> ) : <blk> break </blk>	list ( <name5> + <val4> ) == len ( <name1> ) : <blk> break </blk>
( <name5> 、 <name6> 、 <name4> ) からなる列をソートした列の、つまり先頭から <val2> 番目までの部分列を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = sorted ( [ <name5> , <name6> , <name4> ] ) [ : <val2> ]	<name6> , <name1> , <name3> = sorted ( [ <name5> , <name6> , <name4> ] ) [ : <val2> ]
<name5> から <name1> を引いた値、 <name2> から <name6> を引いた値を <name3> 、 <name4> とする	<name3> , <name4> = <name5> - <name1> , <name2> - <name6>	<name3> , <name4> = <name5> - <name1> , <name2> - <name6>
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列をソートした列を展開し、それぞれ <name3> 、 <name6> 、 <name4> とする	<name3> , <name6> , <name4> = sorted ( [ int ( <name5> ) for <name5> in input ( ) . split ( ) ] )	<name3> , <name6> , <name4> = sorted ( [ int ( <name5> ) for <name5> in input ( ) . split ( ) ] )
<name3> の <name4> 番目から、つまり末尾までの部分列を追加して <name1> を拡張する	<name1> . extend ( <name3> [ <name4> : ] )	<name1> . extend ( <name3> [ <name4> : ] )
<name2> に <val1> を加えた値を <name3> の <name6> で割った余りを <name2> とする	<name2> = ( <name2> + <val1> ) % <name3> . <name6>	input = ( <name2> + <val1> ) % <name3> . <name6>
<name5> を <name4> . <name3> ( <name2> , <name1> ) だけ増加させる	<name5> += <name4> . <name3> ( <name2> , <name1> )	<name6> += <name4> . <name3> ( <name2> , <name1> )
{} {} {} {} {}を書式として <name3> の <name2> 、 <name3> の <name1> 、 <name3> の <name6> 、 <name3> の日付、 <name3> の <name4> で整形した文字列を返す	return '{} {} {} {} {}' . format ( <name3> . <name2> , <name3> . <name1> , <name3> . <name6> , <name3> . date , <name3> . <name4> )	yield '{} {}' . format ( <name3> [ <name2> ] , <name3> . <name1> , <name3> . <name6> , <name3> , <name3> . <name4> )
<name1> の末尾に <name4> を追加する	<name1> . append ( ( <name4> ) )	not <name1> . append ( <name4> )
<name4> の先頭から <name5> を探して見つかった位置を <name5> とする	<name5> = <name4> . find ( <name5> )	<name5> = <name4> . find ( <name5> )
<name1> ( <val4> , <name3> ) のとき、	if <name1> ( <val4> , <name3> ) :	isinstance ( <name1> ( <val4> , <name3> ) ) :
<name5> の <name1> 番目が <name4> と等しくないとき、	if <name5> [ <name1> ] != <name4> :	raise <name5> [ <name1> ] != <name4> :
0 から <val1> に <val1> を掛けた値に <val6> を掛けた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> * <val1> * <val6> ) :	) for <name2> in range ( <val1> * <val1> * <val6> ) :
入力された文字列を <val1> で分割した字句列の各要素を <name3> とし、 <name3> の整数値から <val4> を引いた値の列を <name5> とする	<name5> = [ int ( <name3> ) - <val4> for <name3> in input ( ) . split ( <val1> ) ]	<name5> = [ int ( <name3> ) - <val4> for <name3> in input ( ) . split ( <val1> ) ]
( ( <val5> 、 <val3> ) の組、 ( <val3> 、 -1 ) の組、 ( -1 、 <val3> ) の組、 ( <val3> 、 <val5> ) の組 ) の組を <name2> とする	<name2> = ( ( <val5> , <val3> ) , ( <val3> , - <val5> ) , ( - <val5> , <val3> ) , ( <val3> , <val5> ) )	input = ( ( <val5> , <val3> ) , ( <val3> , - <val5> ) , ( - <val5> , <val3> ) , ( <val3> , <val5> ) )
<name1> ( <name6> , <name5> , <name2> , <name4> , <name3> )	<name1> ( <name6> , <name5> , <name2> , <name4> , <name3> )	<name5> ( <name1> ( <name6> , <name5> , <name2> , <name4> , <name3> ) )
<name3> ( <name5> , <name4> ) を <name2> とする	<name2> = <name3> ( <name5> , <name4> )	dict = <name3> ( <name5> , <name4> )
<name4> ( <name2> ( ) , <val5> ) を出力する	print ( <name4> ( <name2> ( ) , <val5> ) )	print ( <name4> ( <name2> ( ) , <val5> ) )
<name3> の <name4> 番目に <name2> を追加した集まり	<name3> [ <name4> ] . add ( <name2> )	<name4> [ <name4> ] . add ( <name2> )
<name5> に <name6> に <name3> を掛けた値を加えた値を <name4> の <name2> に <name6> に <name1> を掛けた値を加えた値番目にする	<name4> [ <name2> + <name6> * <name1> ] = <name5> + <name6> * <name3>	<name4> [ <name2> + <name6> * <name1> ] = <name5> + <name6> * <name3>
<name6> の <name5> から <name1> を引いた値から <val2> を引いた値番目を <name3> とする	<name3> = <name6> [ <name5> - <name1> - <val2> ]	<name3> = <name6> [ <name5> - <name1> - <val2> ]
<val6> に <name2> を掛けた値に <name4> を掛けた値を <name3> とする	<name3> = <val6> * <name2> * <name4>	( <name3> = <val6> * <name2> * <name4> )
入力された文字列の整数値を <val4> で割った商から <val1> を引いた値を出力する	print ( int ( input ( ) ) // <val4> - <val1> )	print ( int ( input ( ) ) // <val4> - <val1> )
<val3> を <name4> の <name2> 番目の <name2> 番目にする	<name4> [ <name2> ] [ <name2> ] = <val3>	( <name4> [ <name2> ] [ <name2> ] = <val3> )
<name5> でなくまたは <name6> でなくなければならない	assert not <name5> or not <name6>	<val1> assert not <name5> or not <name6>
<name6> を <val1> で割った余りを <name2> とする	<name2> = <name6> % <val1>	( <name2> = <name6> % <val1> )
<name2> を <name6> の <name1> 番目の <name3> 番目にする	<name6> [ <name1> ] [ <name3> ] = <name2>	( <name6> [ <name1> ] [ <name3> ] = <name2> )
<name2> を <name1> ( <name5> ) だけ増加させる	<name2> += <name1> ( <name5> )	<name1> += <name1> ( <name5> )
<name1> から <name2> を引いた値を <name3> とする	<name3> = ( <name1> - <name2> )	( <name3> = <name1> - <name2> )
<name2> を <val3> だけ右シフトする	<name2> >> = <val3>	( <name2> >> = <val3> )
<name4> ( <name1> ) を展開し、それぞれ <name6> 、無限の整数列、 <name3> とする	<name6> , count , <name3> = <name4> ( <name1> )	( <name6> , count ) , <name3> = <name4> ( <name1> )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name4> 、 <name3> 、 <name2> とする	<name4> , <name3> , <name2> = input ( ) . split ( )	<name3> , <name2> = input ( ) . split ( )
<name5> . <name2> ( <name1> ) を <name2> とする	<name2> = <name5> . <name2> ( <name1> )	( <name2> = <name5> . <name2> ( <name1> ) )
<name5> ( <val3> . <name1> ( <name4> ) )	<name5> ( <val3> . <name1> ( <name4> ) )	map <name5> ( <val3> . <name1> ( <name4> ) )
<val5> の <val6> 乗を <name2> とする	<name2> = <val5> ** <val6>	<name2> = <val5> ** <val6>
<name6> に <val3> を加えた値から <name1> の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> + <val3> , len ( <name1> ) ) :	for <name5> in range ( <name6> + <val3> , len ( <name1> ) ) :
! OUT を出力する	print ( '!OUT' )	& print ( 'NONE' )
<name5> 、 <name1> を出力する	print ( <name5> , <name1> )	print ( <name5> , <name1> )
<name4> が <name5> より大きいとき <name4> の <val1> 乗から <name4> から <name5> を引いた値の <val1> 乗を引いた値の . <val3> 乗、そうでなければ <name4> を <name6> とする	<name6> = ( <name4> ** <val1> - ( <name4> - <name5> ) ** <val1> ) ** . <val3> if <name4> > <name5> else <name4>	<name5> = ( ( <name4> ** <val1> - ( <name4> - <name5> ) ** <val1> ) ** . <val3> if <name4> > <name5> else <name4>
<name4> を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in <name4> :	. for <name2> , <name5> in <name4> :
0 から <name6> から <name1> を引いた値から <val5> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> - <name1> - <val5> ) :	range for <name3> in range ( <name6> - <name1> - <val5> ) :
<name4> の <name6> の <val2> 番目から、つまり末尾までの部分列の整数値番目を出力する	print ( <name4> [ int ( <name6> [ <val2> : ] ) ] )	print ( <name4> [ int ( <name6> [ <val2> : ] ) ] )
<name3> の <name1> 番目を <val5> だけ減少させる	<name3> [ <name1> ] -= <val5>	<name1> [ <name1> ] -= <val5>
<name5> から <name1> を引いた値が <val3> より小さいとき、 <blk> <val3> を返す </blk>	if <name5> - <name1> < <val3> : <blk> return <val3> </blk>	\ if <name5> - <name1> < <val3> : <blk> return <val3> </blk>
<name1> . <name3> ( <name6> ) が <name1> . <name3> ( <name2> ) と等しいかどうかを返す	return <name1> . <name3> ( <name6> ) == <name1> . <name3> ( <name2> )	x return <name1> . <name3> ( <name6> ) == <name1> . <name3> ( <name2> )
<name6> を <name6> に <val1> を加えた値との論理和にする	<name6> | = <name6> + <val1>	( <name6> | = ( <name6> + <val1> )
<name4> に <name2> を掛けた値から <name5> に <name1> を掛けた値を引いた値を <name3> に <name2> を掛けた値から <name5> に <name6> を掛けた値を引いた値で割った値を <name6> とする	<name6> = ( <name4> * <name2> - <name5> * <name1> ) / ( <name3> * <name2> - <name5> * <name6> )	<name6> = ( <name4> * <name2> - <name5> * <name1> ) / ( <name3> * <name2> - <name5> * <name6> )
<name2> の <name4> 番目に <name5> を掛けた値と <name6> の最小公倍数を <name1> とする	<name1> = lcm ( <name2> [ <name4> ] * <name5> , <name6> )	<name1> = lcm ( <name2> [ <name4> ] * <name5> , <name6> )
<name6> の <name3> を <val4> で割った商に <val5> を加えた値番目の <name1> に <val5> を加えた値番目を <val2> だけ増加させる	<name6> [ <name3> // <val4> + <val5> ] [ <name1> + <val5> ] += <val2>	( <name6> [ <name3> // <val4> + <val5> ] [ <name1> + <val5> ] ) += <val2>
<name4> の <name5> 番目の末尾に ( <name2> 、 <name3> ) からなる列を追加する	<name4> [ <name5> ] . append ( [ <name2> , <name3> ] )	<name3> [ <name5> ] . append ( [ <name2> , <name3> ] )
<name4> を <name2> ( <val6> , <val1> ) で割った余りを <name4> とする	<name4> = <name4> % <name2> ( <val6> , <val1> )	<name4> = <name4> % <name2> ( <val6> , <val1> )
( ( <val4> ) からなる列の <val4> から <name3> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 <name3> に <val6> を加えた値の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val4> ] * [ ( <name3> + <val6> ) for <name1> in range ( <name3> + <val6> ) ] ]	<name5> = [ [ <val4> ] * [ ( <name3> + <val6> ) for <name1> in range ( <name3> + <val6> ) ] ]
<name6> の <name3> 番目、 <name6> の <name3> から <val1> を引いた値番目の各要素に <name5> を適用した列のリストを <name6> の <name3> 番目にする	<name6> [ <name3> ] = list ( map ( <name5> , <name6> [ <name3> ] , <name6> [ <name3> - <val1> ] ) )	<name3> [ <name3> ] = list ( map ( <name5> , <name6> [ <name3> ] , <name6> [ <name3> - <val1> ] ) )
<name6> の長さが <val5> より大きい間、次を繰り返す	while len ( <name6> ) > <val5> :	del ( len ( <name6> ) > <val5> ) :
<val5> を <name1> の <name4> 番目の <name2> 番目とするを <name6> の <name4> 番目の <name2> 番目にする	<name6> [ <name4> ] [ <name2> ] = <name1> [ <name4> ] [ <name2> ] = <val5>	now [ <name4> ] [ <name2> ] = <name1> [ <name4> ] [ <name2> ] = <val5>
<name1> の <name2> 番目を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name1> [ <name2> ]	( <name4> [ <name2> ] = <name1> [ <name2> ] )
<name4> の、つまり先頭から <name3> 番目までの部分列の総和を出力する	print ( sum ( <name4> [ : <name3> ] ) )	print ( sum ( <name4> [ : <name3> ] ) )
<name5> ( <name1> , <name6> , <name2> ) を出力する	print ( <name5> ( <name1> , <name6> , <name2> ) )	print ( <name5> ( <name1> , <name6> , <name2> ) )
<name5> の <name6> を <name1> とする	<name1> = <name5> . <name6>	<name6> = <name5> . <name6>
<name4> が <name2> より小さくかつ ( <name3> 、 <name4> に <val5> を加えた値、 <name1> ) の組が <name6> の <name4> 番目の <name2> 番目に含まれないとき、	if <name4> < <name2> and ( <name3> , <name4> + <val5> , <name1> ) not in <name6> [ <name4> ] [ <name2> ] :	list ( <name4> < <name2> and ( <name3> , <name4> + <val5> , <name1> ) not in <name6> [ <name4> ] [ <name2> ] ) :
( ( <val1> ) からなる列の <val1> から <name4> 未満までの数列の各要素を <name5> とし、 <name6> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val1> ] * [ <name6> for <name5> in range ( <name4> ) ] ]	<name3> = [ [ <val1> ] * [ <name6> for <name5> in range ( <name4> ) ] ]
<name3> の <val2> 番目の <val2> 番目を <name5> とする	<name5> = <name3> [ <val2> ] [ <val2> ]	<name5> = <name3> [ <val2> ] [ <val2> ]
<val6> 〜 <name4> から <val6> を引いた値の整数乱数を <name2> とする	<name2> = random . randint ( <val6> , <name4> - <val6> )	<name6> . <name2> = random . randint ( <val6> , <name4> - <val6> )
<val2> を <name3> の <name4> 番目の <name4> 番目にする	<name3> [ <name4> ] [ <name4> ] = <val2>	( <name3> [ <name4> ] [ <name4> ] = <val2> )
<val5> から <name2> の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , len ( <name2> ) ) :	continue for <name1> in range ( <val5> , len ( <name2> ) ) :
<name6> の <name5> 番目を <name3> だけ増加させる	<name6> [ <name5> ] += <name3>	<name3> [ <name5> ] += <name3>
<name4> の <val6> 番目を <name3> だけ増加させる	<name4> [ <val6> ] += <name3>	<name2> [ <val6> ] += <name3>
<name6> を <name2> から <name2> を引いた値だけ増加させる	<name6> += <name2> ( data [ L - 1 ] , b - 1 ) - <name2> ( data [ L - 1 ] , a - 1 )	( <name6> += <name2> - <name2> )
<name5> ( <name1> , <name6> )	<name5> ( <name1> , <name6> )	<name5> ( <name1> , <name6> )
<name6> の <name2> 番目の <name4> が -1 と等しいとき、	if <name6> [ <name2> ] . <name4> == - 1 :	if <name6> [ <name2> ] . <name4> == - 1 :
<name5> の値の集まりの各要素を <name6> とし、 <name6> の <name3> の列に <name5> の値の集まりの各要素を <name6> とし、 <name6> の <name1> の列を加えた値の集合を <name4> とする	<name4> = set ( [ <name6> . <name3> for <name6> in <name5> . values ( ) ] + [ <name6> . <name1> for <name6> in <name5> . values ( ) ] )	<name4> = set ( [ <name6> . <name3> for <name6> in <name5> . values ( ) + [ <name6> . <name1> for <name6> in <name5> . values ] )
<name2> に <name6> を加えた値、 <name5> において正規表現 <name4> に <name1> を加えた値が最初にマッチする位置	search ( <name4> + <name1> , <name2> + <name6> , <name5> )	[ search ( <name4> + <name1> , <name2> + <name6> , <name5> ) ] = <name2> + <name6> , <name5> )
<val1> を <val5> で割った値を実部、 <val2> の平方根を <val5> で割った値を虚部とした複素数を <name3> とする	<name3> = complex ( <val1> / <val5> , sqrt ( <val2> ) / <val5> )	else = complex ( <val1> / <val5> , math . sqrt ( <val2> ) / <val5> )
<name4> の <name6> 番目を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name4> [ <name6> ]	) [ <name6> ] = <name4> [ <name6> ]
<name5> の <val6> 番目に <name5> の <val1> 番目を加えた値に <name5> の <val1> 番目に <val4> を加えた値、 <name5> の <val3> 番目の最小値を加えた値を出力する	print ( <name5> [ <val6> ] + <name5> [ <val1> ] + min ( <name5> [ <val1> ] + <val4> , <name5> [ <val3> ] ) )	print ( <name5> [ <val6> ] + min ( <name5> [ <val1> ] + <val4> , <name5> [ <val3> ] ) )
<name3> から <name4> を引いた値に <name5> を掛けた値から <name6> から <name2> を引いた値に <name1> を掛けた値を引いた値を <name1> とする	<name1> = ( <name3> - <name4> ) * <name5> - ( <name6> - <name2> ) * <name1>	<name1> = ( <name3> - <name4> ) * <name5> - ( <name6> - <name2> ) * <name1>
セパレータが <name4> より大きい間、次を繰り返す	while sep > <name4> :	del sep > <name4> :
<name4> を <name3> のキーの集まりの <name2> 番目にする	<name3> . keys [ <name2> ] = <name4>	<name3> . keys [ <name2> ] = <name4>
<name2> を <name5> とする <name6> から <val1> を引いた値を <name3> とする	<name5> = <name2> <name3> = <name6> - <val1>	else = <name2> <name3> = <name6> - <val1>
<name5> を <name1> の <name4> 番目の <name2> 番目に <name3> の <name2> 番目を掛けた値だけ増加させる	<name5> += <name1> [ <name4> ] [ <name2> ] * <name3> [ <name2> ]	( <name5> += <name1> [ <name4> ] [ <name2> ] * <name3> [ <name2> ] )
<name4> が、つまり未定値と等しくかつ <name4> が <name5> と等しくない間、次を繰り返す	while <name4> is not None and <name4> != <name5> :	: while <name4> is not None and <name4> != <name5> :
<name4> の <val2> 番目から、つまり末尾までの部分列の整数値を <name1> とする	<name1> = int ( <name4> [ <val2> : ] )	<name1> = int ( <name4> [ <val2> : ] )
<name4> の <name6> 番目が <val1> と等しいとき、	if <name4> [ <name6> ] == <val1> :	if <name4> [ <name6> ] == <val1> :
0 から <name6> 未満までの数列の各要素を <name2> とし、 <name5> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name4> とする	<name4> = [ tuple ( map ( int , <name5> ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]	<name4> = [ tuple ( map ( int , <name5> ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]
<name6> かつ <name1> の <name4> 番目が <val3> と等しいとき、 <blk> <val5> を <name2> の <name4> 番目にする <sep> <val6> を <name1> の <name4> 番目にする <sep> <name6> を <val1> だけ減少させる </blk>	if <name6> and <name1> [ <name4> ] == <val3> : <blk> <name2> [ <name4> ] = <val5> <sep> <name1> [ <name4> ] = <val6> <sep> <name6> -= <val1> </blk>	<blk> if <name6> and <name1> [ <name4> ] == <val3> : <blk> <name2> [ <name4> ] = <val5> <sep> <name1> [ <name4> ] = <val6> <sep> <name6> -= <val1> </blk>
<val6> から <val1> 未満までの数列の各要素を <name3> とし、 <val6> から <val2> 未満までの数列の各要素を <name4> とし、 <val6> の列の列を <name5> とする	<name5> = [ [ <val6> for <name4> in range ( <val2> ) ] for <name3> in range ( <val1> ) ]	<name5> = [ [ <val6> for <name4> in range ( <val2> ) ] for <name3> in range ( <val1> ) ]
<name3> の <name1> 番目が <val5> と等しくないとき、 <blk> 無限大を返す </blk>	if <name3> [ <name1> ] != <val5> : <blk> return inf </blk>	\ if <name3> [ <name1> ] != <val5> : <blk> return inf </blk>
<name5> を <name4> の <name3> 番目とするを <name2> とする	<name2> = <name4> [ <name3> ] = <name5>	<name2> = <name4> [ <name3> ] = <name5>
<name1> の <name4> 番目の末尾に ( <name6> 、 <name2> ) の組を追加する	<name1> [ <name4> ] . append ( ( <name6> , <name2> ) )	not <name1> [ <name4> ] . append ( ( <name6> , <name2> ) )
<name3> に <name4> を追加した集まり	<name3> . add ( <name4> )	not <name3> . add ( <name4> )
<name2> が -1 と等しくない間、次を繰り返す	while <name2> != - 1 :	for <name2> in <name2> != - 1 :
<name3> を展開しての要素をそれぞれ組にした列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = zip ( * <name3> )	<name2> , <name5> , <name2> = zip ( * <name3> )
<name6> の各要素を <name2> とし、 <name2> の列を <name3> とする	<name3> = [ <name2> for <name2> in <name6> ]	<name3> = [ <name2> for <name2> in <name6> ]
<name2> の <name5> を <name6> の <name3> の <name1> 番目の <name1> 番目にする	<name6> . <name3> [ <name1> ] [ <name1> ] = <name2> . <name5>	<name6> . <name3> [ <name1> ] [ <name1> ] = <name2> . <name5>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name6> 、 <name4> とする	<name3> , <name2> , <name6> , <name4> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name4> = map ( int , input ( ) . split ( ) )
<name1> に <val5> に <name2> を掛けた値に <name4> を加えた値を掛けた値を <name3> とする	<name3> = <name1> * ( <val5> * <name2> + <name4> )	else = <name1> * ( <val5> * <name2> + <name4> )
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name5> とする </blk>	try : <blk> <name5> = list ( map ( int , input ( ) . split ( ) ) ) </blk>	\ <name5> = try : <blk> <name5> = list ( map ( int , input ( ) . split ( ) ) ) </blk>
<val4> を書式として <name1> 、 <name3> 、 <name5> で整形した文字列を出力する	print ( <val4> . format ( <name1> , <name3> , <name5> ) )	print ( <val4> . format ( <name1> , <name3> , <name5> ) )
<name5> に <name5> を掛けた値から <val2> 未満までの <name5> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> * <name5> , <val2> , <name5> ) :	: for <name1> in range ( <name5> * <name5> , <val2> , <name5> ) :
0 から <name4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の列を <name5> とする	<name5> = [ input ( ) . split ( ) for <name3> in range ( <name4> ) ]	<name5> = [ input ( ) . split ( ) for <name3> in range ( <name4> ) ]
<val3> を書式として <name4> に <name1> に <val2> を掛けた値を加えた値で整形した文字列を出力する	print ( <val3> . format ( <name4> + <name1> * <val2> ) )	print ( <val3> . format ( <name4> + <name1> * <val2> ) )
<name2> の <name1> の <name4> 番目の末尾に <name2> . <name6> ( <name3> , <val5> , <name2> ( <name2> . <name1> [ <name3> ] ) -1 ) を追加する	<name2> . <name1> [ <name4> ] . append ( <name2> . <name6> ( <name3> , <val5> , <name2> ( <name2> . <name1> [ <name3> ] ) - 1 ) )	<name5> . <name1> [ <name4> ] . append ( <name2> . <name6> ( <name3> , <val5> , <name2> ( <name2> . <name1> [ <name3> ] ) - 1 ) )
<name6> 、 <name3> 、 <name2> を出力する	print ( <name6> , <name3> , <name2> )	print ( <name6> , <name3> , <name2> )
<val2> <name5> <val3> を <name1> とする	<name1> = <val2> <name5> <val3>	<name2> <name1> = <val2> <name5> <val3>
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name4> 、 <name3> 、 <name1> とする	<name4> , <name3> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name3> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name4> の x 座標が <name3> の x 座標より小さいかどうかを返す	return <name4> . x < <name3> . x	x return <name4> . x < <name3> . x
<name2> が <name3> と等しいかどうかが <val4> と等しいとき、	if <name2> == <name3> == <val4> :	: if <name2> == <name3> == <val4> :
<name5> に <name2> の <name6> 番目を加えた値を <name1> とする	<name1> = <name5> + <name2> [ <name6> ]	<name1> = <name5> + <name2> [ <name6> ]
<name2> の末尾に <name6> ( <name3> , <name1> ) を追加する	<name2> . append ( <name6> ( <name3> , <name1> ) )	<name2> . append ( <name6> ( <name3> , <name1> ) )
0 から <name1> 未満までの数列の各要素を <name4> とし、 ( -1 ) からなる列に <name5> ( ) . <name3> ( ) の各要素に <name2> を適用した列のリストを加えた値に ( -1 ) からなる列を加えた値の列を <name6> とする	<name6> = [ [ - 1 ] + list ( map ( <name2> , <name5> ( ) . <name3> ( ) ) ) + [ - 1 ] for <name4> in range ( <name1> ) ]	<name6> = [ [ - 1 ] + list ( map ( <name2> , <name5> ( ) . <name3> ( ) ) ) + [ - 1 ] for <name4> in range ( <name1> ) ]
<name6> 、 <name3> を <name2> 、 <name4> とする	<name2> , <name4> = <name6> , <name3>	( <name2> , <name4> = <name6> , <name3> )
<name2> の <val5> 番目が、つまり辞書に含まれるとき、	if <name2> [ <val5> ] in dict :	while <name2> [ <val5> ] in dict :
<name6> が <name1> の <name3> の <name4> 番目より小さいとき、	if <name6> < <name1> . <name3> [ <name4> ] :	: if <name6> < <name1> . <name3> [ <name4> ] :
<name2> . <name3> ( ) を <name6> とするを展開し、それぞれ <name5> 、 <name1> 、 <name4> とする	<name5> , <name1> , <name4> = <name6> = <name2> . <name3> ( )	<name3> , <name1> , <name4> = <name6> = <name2> . <name3> ( )
<name5> の <name3> の <name6> 番目を順に <name2> として、繰り返す	for <name2> in <name5> . <name3> [ <name6> ] :	. for <name2> in <name5> . <name3> [ <name6> ] :
<name3> を <name5> に <name6> の <name1> から ( <name2> + <name4> + <val3> ) を引いた値番目を掛けた値に <name1> から ( <name4> + <val3> ) を引いた値から <name2> を引いた値に <val3> を加えた値を掛けた値を <name5> で割った余りだけ増加させる	<name3> += <name5> * <name6> [ <name1> - ( <name2> + <name4> + <val3> ) ] * ( <name1> - ( <name4> + <val3> ) - <name2> + <val3> ) % <name5>	<name1> += ( <name5> * ( <name6> [ <name1> - ( <name2> + <name4> + <val3> ) ] ) * ( <name1> - ( <name4> + <val3> ) - <name2> + <val3> ) % <name5> )
<name3> の <name1> が、つまり未定値と等しくなければならない	assert <name3> . <name1> is not None	find = <name3> . <name1> is not None
( ( <name5> ) からなる列の 0 から <name1> の <name3> 未満までの数列の各要素を <name6> とし、 <name1> の <name3> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <name5> ] * [ <name1> . <name3> for <name6> in range ( <name1> . <name3> ) ] ]	<name4> = [ [ <name5> ] * [ <name1> . <name3> for <name6> in range ( <name1> . <name3> ) ] ]
<name3> を <name5> の <name6> 番目の <name1> 番目にする	<name5> [ <name6> ] [ <name1> ] = <name3>	<name4> [ <name6> ] [ <name1> ] = <name3>
<name1> が <name6> の <name2> と等しい間、次を繰り返す	while <name1> is not <name6> . <name2> :	del <name1> is not <name6> . <name2> :
0 から <val5> 未満までの数列の各要素を <name4> とし、 <name2> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , <name2> ( ) . split ( ) ) ) for <name4> in range ( <val5> ) ]	<name6> = [ list ( map ( int , <name2> ( ) . split ( ) ) ) for <name4> in range ( <val5> ) ]
<name1> の <name6> に <val2> を加えた値番目が <val3> と等しいとき、	if <name1> [ <name6> + <val2> ] == <val3> :	continue <name1> [ <name6> + <val2> ] == <val3> :
<name4> ( <val6> ) を <name1> とする	<name1> = <name4> ( <val6> )	<name1> = <name4> ( <val6> )
<name2> の各要素を <name6> とし、 <name6> が <name4> 以下のときの <name6> の列を <name2> とする	<name2> = [ <name6> for <name6> in <name2> if <name6> <= <name4> ]	<name2> = [ <name6> for <name6> in <name2> if <name6> <= <name4> ]
<name5> を <name3> の ( <name4> 、 <name1> 、 <name6> ) の組番目にする	<name3> [ ( <name4> , <name1> , <name6> ) ] = <name5>	<name4> [ ( <name4> , <name1> , <name6> ) ] = <name5>
<name3> の末尾に ( <name1> 、 <val6> ) の組を追加する	<name3> . append ( ( <name1> , <val6> ) )	<name4> . append ( ( <name1> , <val6> ) )
<val1> を <name2> の <name3> から <val5> を引いた値番目にする	<name2> [ <name3> - <val5> ] = <val1>	( <name2> [ <name3> - <val5> ] = <val1> )
<name2> を <name4> で割った余りが <val6> と等しいとき、 <blk> 偽を返す </blk>	if <name2> % <name4> == <val6> : <blk> return ( False ) </blk>	if <name2> % <name4> == <val6> : <blk> return False </blk>
<name1> の <val4> 番目を <name2> だけ減少させる	<name1> [ <val4> ] -= <name2>	<name1> [ <val4> ] -= <name2>
<val5> が <name6> に <name3> の <val2> 番目を加えた値以下かどうかが <name4> 以下のとき、	if <val5> <= <name6> + <name3> [ <val2> ] <= <name4> :	<= <val5> <= <name6> + <name3> [ <val2> ] <= <name4> :
( -1 ) からなる列の <name4> 回分の列を <name5> とする	<name5> = [ - 1 ] * <name4>	else = [ - 1 ] * <name4>
入力された文字列を <val2> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を ( <name3> 、 <name4> ) の組とする	( <name3> , <name4> ) = [ int ( <name1> ) for <name1> in input ( ) . split ( <val2> ) ]	<name3> , <name4> ) = [ int ( <name1> ) for <name1> in input ( ) . split ( <val2> ) ]
<name5> が <name3> から <val1> を引いた値より小さいとき、	if <name5> < <name3> - <val1> :	while <name5> < <name3> - <val1> :
<name4> の末尾に ( <name3> 、 <name6> ) の組を追加する	<name4> . append ( ( <name3> , <name6> ) )	<name4> . append ( ( <name3> , <name6> ) )
<name1> の <name3> に <val2> を加えた値番目を <name6> とする	<name6> = <name1> [ <name3> + <val2> ]	else = <name1> [ <name3> + <val2> ]
<name6> ( ( <name1> , <name3> , <name5> ) , ( <name4> , <name2> ) ) を <name2> とする	<name2> = <name6> ( ( <name1> , <name3> , <name5> ) , ( <name4> , <name2> ) )	<name6> = <name6> ( ( <name1> , <name3> , <name5> ) , ( <name4> , <name2> ) )
<val5> に <name6> の <name4> を加えた値に <name1> を加えた値を <name3> とする	<name3> = <val5> + <name6> . <name4> + <name1>	<name3> = <val5> + <name6> . <name4> + <name1>
421653 のリストを <name6> とする	<name6> = list ( '421653' )	<name6> = list ( in isnumeric ( ) )
<name1> が <name3> ( <name4> , <name5> ) 以下かつ <val2> が <name6> 以下かどうかを返す	return <name1> <= <name3> ( <name4> , <name5> ) and <val2> <= <name6>	x return <name1> <= <name3> ( <name4> , <name5> ) and <val2> <= <name6>
<val4> を <val5> だけ左シフトした値から <val4> を引いた値を <name1> とする	<name1> = ( <val4> << <val5> ) - <val4>	<name1> = ( <val4> << <val5> ) - <val4>
<name5> ( <name4> , <name3> )	<name5> ( <name4> , <name3> )	<name5> ( <name4> , <name3> )
<name4> の <name2> 番目の <name1> 番目、 <name4> の <name6> 番目の <name5> 番目に <name3> を加えた値の最小値を <name4> の <name2> 番目の <name1> 番目にする	<name4> [ <name2> ] [ <name1> ] = min ( <name4> [ <name2> ] [ <name1> ] , <name4> [ <name6> ] [ <name5> ] + <name3> )	<name2> [ <name2> ] [ <name1> ] = min ( <name4> [ <name2> ] [ <name1> ] , <name4> [ <name6> ] [ <name5> ] + <name3> )
入力された文字列を <val2> で分割した字句列を <name1> とする	<name1> = input ( ) . split ( <val2> )	<name1> = input ( ) . split ( <val2> )
 を間に入れて ( <name2> 、 <name1> 、 <name4> ) からなる列の各要素を <name6> とし、 <val3> を書式として <name6> で整形した文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ <val3> . format ( <name6> ) for <name6> in [ <name2> , <name1> , <name4> ] ] ) )	print ( '' . join ( [ <val3> . format ( <name6> ) for <name6> in [ <name2> , <name1> , <name4> ] ] ) )
<name6> ( <name5> , <name3> ) を <name4> の <name1> にする	<name4> . <name1> = <name6> ( <name5> , <name3> )	<name4> . <name1> = <name6> ( <name5> , <name3> )
<name1> の <name5> から <val2> を引いた値番目を展開し、それぞれ <name3> 、 <name4> とする <name1> の <name5> 番目を展開し、それぞれ <name6> 、 <name3> とする	<name3> , <name4> = <name1> [ <name5> - <val2> ] <name6> , <name3> = <name1> [ <name5> ]	<name1> , <name3> , <name4> = <name1> [ <name5> - <val2> ] <name6> , <name3> = <name1> [ <name5> ]
<name5> の <val6> 番目を <name5> とする	<name5> = <name5> [ <val6> ]	else = <name5> [ <val6> ]
<name2> と <name3> の差を <name2> とする	<name2> = <name2> . difference ( <name3> )	<name2> = <name2> . difference ( <name3> )
( <val6> 、 <val3> 、 <val6> 、 <val3> 、 <val3> 、 <val6> 、 <val3> 、 <val6> 、 <val6> 、 <val3> 、 <val6> 、 <val3> 、 <val3> 、 <val6> 、 <val3> 、 <val6> ) の組を <name2> とする	<name2> = ( <val6> , <val3> , <val6> , <val3> , <val3> , <val6> , <val3> , <val6> , <val6> , <val3> , <val6> , <val3> , <val3> , <val6> , <val3> , <val6> )	input = ( <val6> , <val3> , <val6> , <val3> , <val6> , <val3> , <val6> , <val3> , <val6> , <val6> , <val6> , <val3> , <val6> , <val3> , <val6> )
<name1> から <name2> を引いた値を <name6> とする <name5> から <name4> を引いた値を <name3> とする	<name6> = <name1> - <name2> <name3> = <name5> - <name4>	<name2> = <name1> - <name2> <name3> = <name5> - <name4>
<name2> を空白で分割した字句列を展開し、それぞれ <name3> 、 <name4> 、 <name6> 、 <name1> とする	<name3> , <name4> , <name6> , <name1> = <name2> . split ( )	<name3> , <name4> , <name6> , <name1> = <name2> . split ( )
( <val3> 、 <val3> ) からなる列に ( <val1> ) からなる列の <val4> 回分の列を加えた値を <name5> とする	<name5> = [ <val3> , <val3> ] + [ <val1> ] * <val4>	<name5> = [ <val3> , <val3> ] + [ <val1> ] * <val4>
0 から <val6> 未満までの数列の各要素を <name1> とし、 <name5> の <name1> 番目の列を <name4> とする	<name4> = [ <name5> [ <name1> ] for <name1> in range ( <val6> ) ]	<name5> = [ <name5> [ <name1> ] for <name1> in range ( <val6> ) ]
<name4> の <name1> 番目を <name2> の <name1> 番目が <val3> と等しいかどうかだけ増加させる	<name4> [ <name1> ] += ( <name2> [ <name1> ] == <val3> )	<name6> [ <name1> ] += ( <name2> [ <name1> ] == <val3> )
入力された文字列の整数値、入力された文字列の整数値を <name5> 、 <name1> とする	<name5> , <name1> = int ( input ( ) ) , int ( input ( ) )	<name1> , <name5> , <name1> = int ( input ( ) ) , int ( input ( ) )
<name3> ( <name1> , <name6> ) を <name2> とする	<name2> = <name3> ( <name1> , <name6> )	dict = <name3> ( <name1> , <name6> )
<name2> を反転した列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in reversed ( <name2> ) :	. for <name1> , <name4> in reversed ( <name2> ) :
<name2> の各要素を <name3> とし、 ( <name6> - <name3> ) の <val1> 乗の列の総和を <name4> で割った値の平方根を <name5> とする	<name5> = math . sqrt ( sum ( [ ( <name6> - <name3> ) ** <val1> for <name3> in <name2> ] ) / <name4> )	<name6> = math . sqrt ( sum ( [ ( <name6> - <name3> ) ** <val1> for <name3> in <name2> ] ) / <name4> )
<name2> に <name1> に <val4> を加えた値を掛けた値を <name3> で割った余りを <name2> とする	<name2> = <name2> * ( <name1> + <val4> ) % <name3>	<name2> = <name2> * ( <name1> + <val4> ) % <name3>
<name3> の <name6> 番目の末尾に ( <name5> 、 <name2> ) の組を追加する	<name3> [ <name6> ] . append ( ( <name5> , <name2> ) )	<name2> [ <name6> ] . append ( ( <name5> , <name2> ) )
<name5> に <name4> を加えた値に <name1> を加えた値に <name6> を加えた値を <name2> とする	<name2> = <name5> + <name4> + <name1> + <name6>	<name2> = <name5> + <name4> + <name1> + <name6>
<val4> の <name5> 乗に対する <name3> の剰余に <val1> を加えた値を <name3> で割った余りを出力する	print ( ( pow ( <val4> , <name5> , <name3> ) + <val1> ) % <name3> )	print ( ( pow ( <val4> , <name5> , <name3> ) + <val1> , <name3> ) )
0 から <name5> 未満までの数列の各要素を <name1> とし、 <val3> を <name1> だけ左シフトした値の列を <name4> とする	<name4> = [ <val3> << <name1> for <name1> in range ( <name5> ) ]	<name4> = [ <val3> << <name1> for <name1> in range ( <name5> ) ]
<name4> に <val5> を加えた値から <name6> に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> + <val5> , <name6> + <val5> ) :	. for <name1> in range ( <name4> + <val5> , <name6> + <val5> ) :
<name6> から <val3> を引いた値を <val2> で割った余りを <name5> とする	<name5> = ( <name6> - <val3> ) % <val2>	<name5> = ( <name6> - <val3> ) % <val2>
<name6> の整数値を <name2> とする	<name2> = int ( <name6> )	<name2> = int ( <name6> )
<name6> <name4> <name3>	<name6> <name4> <name3>	( <name6> <name4> <name3> )
<name6> が <val5> と等しいとき、 <blk> 真を返す </blk>	if <name6> == <val5> : <blk> return True </blk>	\ if <name6> == <val5> : <blk> return True </blk>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = map ( int , input ( ) . split ( ) )	<name3> , <name4> = map ( int , input ( ) . split ( ) )
( ( ( <val5> 、 <val2> ) の組 ) からなる列の <val5> から <name6> 未満までの数列の各要素を <name3> とし、 <name1> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ ( <val5> , <val2> ) ] * [ <name1> for <name3> in range ( <name6> ) ] ]	<name4> = [ [ ( <val5> , <val2> ) ] * [ <name1> for <name3> in range ( <name6> ) ] ]
<name2> 、 <name6> を <name4> 、 <name2> とする	<name4> , <name2> = <name2> , <name6>	<name1> , <name2> = <name2> , <name6>
<name4> の長さが <val6> より大きいとき、	if len ( <name4> ) > <val6> :	continue len ( <name4> ) > <val6> :
<name4> を <name5> の先頭だけ増加させる	<name4> += <name5> [ 0 ]	( <name4> += <name5> [ 0 ] )
<name5> を ( <name4> に <val1> の <name6> ( <name2> ) の長さ乗を掛けた値に <name2> を加えた値 ) からなる列だけ増加させる	<name5> += [ <name4> * <val1> ** len ( <name6> ( <name2> ) ) + <name2> ]	<name1> += [ <name4> * ( <val1> ** len ( <name6> ( <name2> ) ) ) + <name2> ]
<val2> を <name4> の <name5> 番目の <name3> の <name6> 番目から <val2> を引いた値番目にする	<name4> [ <name5> ] [ <name3> [ <name6> ] - <val2> ] = <val2>	<name4> [ <name5> ] [ <name3> [ <name6> ] - <val2> ] = <val2>
<val1> を <name6> の <name2> 番目の <name5> 番目にする	<name6> [ <name2> ] [ <name5> ] = <val1>	( <name6> [ <name2> ] [ <name5> ] = <val1> )
<name5> の <name4> 番目に <name2> を加えた値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name5> [ <name4> ] + <name2>	( <name5> [ <name6> ] = <name5> [ <name4> ] + <name2> )
<name5> が <name3> の、つまり先頭から <name5> の長さまでの部分列と等しいとき、	if <name5> == <name3> [ : len ( <name5> ) ] :	for <name5> == <name3> [ : len ( <name5> ) ] :
( <val4> 、 <val4> ) からなる列に ( <val1> ) からなる列の <val2> 回分の列を加えた値を <name5> とする	<name5> = [ <val4> , <val4> ] + [ <val1> ] * <val2>	<name5> = [ <val4> , <val4> ] + [ <val1> ] * <val2>
<name5> ( <name6> , <name1> , <name3> ) を <name4> とする	<name4> = <name5> ( <name6> , <name1> , <name3> )	<name4> = <name5> ( <name6> , <name1> , <name3> )
<name6> の <name2> の <name5> から <name1> を引いた値番目の <name1> 番目を返す	return <name6> . <name2> [ <name5> - <name1> ] [ <name1> ]	yield <name6> . <name2> [ <name5> - <name1> ] [ <name1> ]
( <name4> 、 <name5> 、未定値 ) からなる列を <name6> とする	<name6> = [ <name4> , <name5> , None ]	else = [ <name4> , <name5> , None ]
<name6> の <name3> が <name1> の <name4> と等しいかどうかを返す	return <name6> . <name3> == <name1> . <name4>	x return <name6> . <name3> == <name1> . <name4>
<name6> の <name2> 番目に <val3> を加えた値が <name6> の <name2> に <val3> を加えた値番目と等しくないとき、	if <name6> [ <name2> ] + <val3> != <name6> [ <name2> + <val3> ] :	raise <name6> [ <name2> ] + <val3> != <name6> [ <name2> + <val3> ] :
<name2> 、 <name3> ( { <name1> } , <name6> & <name4> [ <name1> ] , <name5> & <name4> [ <name1> ] ) の最大値を <name2> とする	<name2> = max ( <name2> , <name3> ( { <name1> } , <name6> & <name4> [ <name1> ] , <name5> & <name4> [ <name1> ] ) )	input = max ( <name2> , <name3> ( { <name1> } , <name6> & <name4> [ <name1> ] , <name5> & <name4> [ <name1> ] ) )
改行せずに <val5> 、 <name1> を出力する	print ( <val5> , <name1> , end = <val5> )	print ( <val5> , <name1> , end = <val5> )
<name2> の <name4> に <val3> を加えた値番目を <name5> を <val6> で割った商だけ増加させる	<name2> [ <name4> + <val3> ] += <name5> // <val6>	<name2> [ <name4> + <val3> ] += <name5> // <val6>
<name3> と <name5> の論理積を <name6> とする	<name6> = <name3> & <name5>	<name6> = <name3> & <name5>
<val4> から <val1> 未満までの数列の各要素を <name3> とし、 ( <val4> 、 <val4> 、 <val4> 、 <val4> ) の組の列を <name2> とする	<name2> = [ ( <val4> , <val4> , <val4> , <val4> ) for <name3> in range ( <val1> ) ]	<name6> = [ ( <val4> , <val4> , <val4> ) for <name3> in range ( <val1> ) ]
<val2> が <name3> と等しいとき、	if ( <val2> == <name3> ) :	if ( <val2> == <name3> ) :
<name5> の <name1> の <name3> 番目が <name4> と等しくまたは <name5> の <name6> の <name3> 番目が <name4> と等しいとき、	if <name5> . <name1> [ <name3> ] == <name4> or <name5> . <name6> [ <name3> ] == <name4> :	or <name5> . <name1> [ <name3> ] == <name4> or <name5> . <name6> [ <name3> ] == <name4> :
<name3> を <name2> の <name1> 番目に <name5> の <name1> 番目に <val6> を加えた値を掛けた値だけ増加させる	<name3> += <name2> [ <name1> ] * ( <name5> [ <name1> ] + <val6> )	<name1> += <name2> [ <name1> ] * ( <name5> [ <name1> ] + <val6> )
<name1> を ( <name6> 、 <name3> ) の組とする	( <name6> , <name3> ) = <name1>	( <name6> , <name3> ) = <name1>
<name4> の <name3> から <val5> を引いた値番目が <val6> と等しくかつ <name2> の、つまり現在の日時から <val5> を引いた値番目の <name3> から <val5> を引いた値番目のとき、	if <name4> [ <name3> - <val5> ] == <val6> and <name2> [ now - <val5> ] [ <name3> - <val5> ] :	isinstance ( <name4> [ <name3> - <val5> ] == <val6> and <name2> [ now - <val5> ] [ <name3> - <val5> ] ) :
<name2> を <val6> だけ減少させる <name3> を <val6> だけ減少させる	<name2> -= <val6> <name3> -= <val6>	<name1> -= <val6> <name3> -= <val6>
( <name6> -1 、 <name4> ) の組が <name1> に含まれまたは ( <name6> + <val5> 、 <name4> ) の組が <name1> に含まれまたは ( <name6> 、 <name4> から <val5> を引いた値 ) の組が <name1> に含まれまたは ( <name6> 、 <name4> に <val5> を加えた値 ) の組が <name1> に含まれるとき、 <blk> <val2> を <name3> の <name6> 番目の <name4> 番目にする </blk>	if ( <name6> - <val5> , <name4> ) in <name1> or ( <name6> + <val5> , <name4> ) in <name1> or ( <name6> , <name4> - <val5> ) in <name1> or ( <name6> , <name4> + <val5> ) in <name1> : <blk> <name3> [ <name6> ] [ <name4> ] = <val2> </blk>	for <name6> in ( <name6> - <val2> , <name4> ) in ( <name1> ) or ( <name6> + <val5> , <name4> ) in <name1> or ( <name6> , <name4> - <val5> ) in <name1> or ( <name6> , <name4> + <val5> ) not in <name1> : <blk> <name3> [ <name4> + <val2> ] [ <name6> ] = <val2> </blk>
<val1> が <name4> より小さいかどうかが <name6> 以下かつ <name5> の <name2> 番目の <name4> 番目の、つまり現在の日時番目が <name5> [ <name3> ] の <name1> 番目の <name4> 番目に <name6> を <name4> で割った値を加えた値より大きいとき、	if <val1> < <name4> <= <name6> and <name5> [ <name2> ] [ <name4> ] [ <name3> ] > <name5> [ <name3> ] [ <name1> ] [ <name4> ] + <name6> / <name4> :	isinstance ( <val1> < <name4> <= <name6> and <name5> [ <name2> ] [ <name4> ] ] [ <name1> ] > <name5> [ <name3> ] [ <name1> ] [ <name4> ] + <name6> / <name4> :
<name6> の <name5> の <name4> 番目番目の整数値から <name6> の <name5> の <name4> + <val3> 番目番目の整数値を引いた値を <name1> の <name4> 番目の <name4> に <val2> を加えた値番目とするを <name3> の <name4> 番目の <name4> に <val2> を加えた値番目にする	<name3> [ <name4> ] [ <name4> + <val2> ] = <name1> [ <name4> ] [ <name4> + <val2> ] = int ( <name6> [ <name5> [ <name4> ] ] ) - int ( <name6> [ <name5> [ <name4> + <val3> ] ] )	<name4> [ <name4> ] [ <name4> + <val2> ] = <name1> [ <name4> ] [ <name4> + <val2> ] = int ( <name6> [ <name5> [ <name4> ] ] ) - int ( <name6> [ <name5> [ <name4> + <val3> ] ] )
<name5> が <name6> の <name4> に含まれるとき、	if <name5> in <name6> . <name4> :	if <name5> in <name6> . <name4> :
<name1> の <name3> から <val6> を引いた値番目の <name2> 番目に <name1> の <name3> 番目の <name2> 番目を加えた値を <name1> の <name3> 番目の <name2> 番目にする	<name1> [ <name3> ] [ <name2> ] = <name1> [ <name3> - <val6> ] [ <name2> ] + <name1> [ <name3> ] [ <name2> ]	<name2> [ <name1> [ <name3> ] [ <name2> ] = <name1> [ <name3> - <val6> ] [ <name2> ] + <name1> [ <name3> ] [ <name2> ]
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name4> 、 <name3> 、 <name2> 、 <name5> 、 <name6> 、 <name1> 、 <name4> 、 <name3> とする	<name4> , <name3> , <name2> , <name5> , <name6> , <name1> , <name4> , <name3> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	[ <name4> , <name3> , <name2> , <name5> , <name6> , <name1> , <name4> , <name3> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
<name1> の <name4> 番目内の全ての要素を取り除く	<name1> [ <name4> ] . clear ( )	( <name1> [ <name4> ] . clear ( ) )
<name6> . <name5> ( <name1> -1 , <name2> + <val3> )	<name6> . <name5> ( <name1> - <val3> , <name2> + <val3> )	<name5> . <name5> ( <name1> - <val3> , <name2> + <val3> )
<name2> の <name6> から <val5> を引いた値番目、 <name2> の <name6> 番目を <name2> の <name6> 番目、 <name2> の <name6> から <val5> を引いた値番目とする	<name2> [ <name6> ] , <name2> [ <name6> - <val5> ] = <name2> [ <name6> - <val5> ] , <name2> [ <name6> ]	<name6> [ <name6> ] , <name2> [ <name6> - <val5> ] = <name2> [ <name6> - <val5> ] , <name2> [ <name6> ]
/ を <name4> の <name1> 番目の <name5> 番目にする	<name4> [ <name1> ] [ <name5> ] = '/'	( <name4> [ <name1> ] [ <name5> ] = '/' )
0 から <name2> 未満までの数列の各要素を <name4> とし、 0 から <val5> 未満までの数列の各要素を <name6> とし、、つまり空列の列の列を <name1> とする	<name1> = [ [ [ ] for <name6> in range ( <val5> ) ] for <name4> in range ( <name2> ) ]	<name6> = [ [ [ ] for <name6> in range ( <val5> ) ] for <name4> in range ( <name2> ) ]
<name6> を <val4> に <val5> を掛けた値に <val4> を掛けた値で割った商を <val4> で割った余りの文字列を <name1> の <val3> 番目にする	<name1> [ <val3> ] = str ( <name6> // ( <val4> * <val5> * <val4> ) % <val4> )	<name1> [ <val3> ] = str ( <name6> // ( <val4> * <val5> * <val4> ) % <val4> )
<name6> の各要素を <name1> とし、 <name1> を空白で分割した字句列の各要素に整数を適用した列の列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in ( [ map ( int , <name1> . split ( ) ) for <name1> in <name6> ] ) :	in [ map ( int , <name1> . split ( ) ) for <name1> in <name6> ] :
<name6> . <name4> ( <val5> )	<name6> . <name4> ( <val5> )	<name3> . <name4> ( <val5> )
<name2> を <name5> の <val4> 乗に <name1> を掛けた値だけ増加させる	<name2> += ( <name5> ** <val4> ) * <name1>	<name2> += ( <name5> ** <val4> ) * <name1>
<name1> を <val5> で割った値を <name2> とする	<name2> = <name1> / <val5>	( <name2> = <name1> / <val5> )
\改行せずに <val3> に <val4> に ( <name1> -2 ) を掛けた値を加えた値に <val5> を加えた値に <name6> から <val2> を引いた値を掛けた値を出力する\	\ print ( ( <val3> + <val4> * ( <name1> - <val2> ) + <val5> ) * ( <name6> - <val2> ) , end = '' ) \	bit_length ( <val3> + <val4> * ( <name1> - 2 ) + <val5> ) * ( <name6> - <val2> , end = '' ) \
<name2> を <name6> の <name4> 番目の -1 番目にする	<name6> [ <name4> ] [ - 1 ] = <name2>	( <name6> [ <name4> ] [ - 1 ] = <name2> )
( <val2> 、 <val5> 、 <val6> 、 <val3> 、 <val1> 、 <val4> ) の組の各要素を <name4> とし、 <name1> の <name4> 番目の列を返す	return [ <name1> [ <name4> ] for <name4> in ( <val2> , <val5> , <val6> , <val3> , <val1> , <val4> ) ]	return [ <name1> [ <name4> ] for <name4> in ( <val2> , <val5> , <val6> , <val3> , <val1> , <val4> ) ]
<name4> が <name5> の長さと等しくないとき、	if <name4> != len ( <name5> ) :	!= <name4> != len ( <name5> ) :
<name2> 、 <name3> ( <name1> , <name4> , <name5> ) の最大値を <name2> とする	<name2> = max ( <name2> , <name3> ( <name1> , <name4> , <name5> ) )	<name2> = max ( <name2> , <name3> ( <name1> , <name4> , <name5> ) )
<name1> から <name4> を引いた値を <name3> で割った商に <name3> を掛けた値に <name4> を加えた値を <name6> とする	<name6> = ( <name1> - <name4> ) // <name3> * <name3> + <name4>	<name6> = ( <name1> - <name4> ) // <name3> * <name3> + <name4>
<name2> の <name5> 番目のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name2> [ <name5> ] : <blk> continue </blk>	for if <name2> [ <name5> ] : <blk> continue </blk>
<name6> の辞書カウンタを <name2> とする	<name2> = Counter ( <name6> )	<name2> = Counter ( <name6> )
<name6> ( <name1> ) を os . <name3> とする	<name3> = <name6> ( <name1> )	<name3> = <name6> ( <name1> )
<name2> ( ) の両端から空白改行を取り除いた文字列を <name6> とする	<name6> = <name2> ( ) . strip ( )	<name6> = <name2> ( ) . strip ( )
<name1> 、 <val4> に <name3> に <name2> を掛けた値の . <val5> 乗を掛けた値に <name6> の <name1> 番目を加えた値の最大値を <name1> とする	<name1> = max ( <name1> , <val4> * ( <name3> * <name2> ) ** . <val5> + <name6> [ <name1> ] )	<name1> = max ( <name1> , <val4> * ( <name3> * <name2> ) ** . <val5> + <name6> [ <name1> ] )
0 から <name5> から <name3> を引いた値に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> - <name3> + <val2> ) :	range for <name4> in range ( <name5> - <name3> + <val2> ) :
<name1> の <name6> 番目を順に <name2> として、繰り返す	for <name2> in <name1> [ <name6> ] :	continue <name1> [ <name6> ] :
<val3> の <name5> 乗を <name1> とする	<name1> = <val3> ** <name5>	<name1> = <val3> ** <name5>
<name1> から <name2> を引いた値の <val6> を <val3> で割った値乗の整数値を <name5> とする	<name5> = int ( ( <name1> - <name2> ) ** ( <val6> / <val3> ) )	<name5> = int ( ( <name1> - <name2> ) ** ( <val6> / <val3> ) )
( <val2> ) からなる列の <name6> に <val1> を掛けた値回分の列を <name5> とする	<name5> = [ <val2> ] * ( <name6> * <val1> )	<name5> = [ <val2> ] * ( <name6> * <val1> )
<name4> から読み込んだ一行を空白で分割した字句列を <name1> とする	<name1> = <name4> . readline ( ) . split ( )	<name1> = <name4> . readline ( ) . split ( )
<name4> に <name2> を加えた値を <name6> とする	<name6> = <name4> + <name2>	( <name6> = <name4> + <name2> )
<name3> の値の集まりを順に <name5> として、繰り返す	for <name5> in <name3> . values ( ) :	: for <name5> in <name3> . values ( ) :
<name3> ( <name4> , <name5> , <name1> ) を <name6> とする	<name6> = <name3> ( <name4> , <name5> , <name1> )	<name6> = <name3> ( <name4> , <name5> , <name1> )
<name6> に <name3> を加えた値が <name1> より大きいとき、	if <name6> + <name3> > <name1> :	continue <name6> + <name3> > <name1> :
<name2> . <name3> ( <name6> . <name1> )	<name2> . <name3> ( <name6> . <name1> )	set ( <name2> . <name3> ( <name6> . <name1> ) )
<name6> と <name1> の論理和でないとき、	if not ( <name6> | <name1> ) :	list ( not ( <name6> | <name1> ) ) :
<val5> の <val2> 乗に <val4> を加えた値を <name3> とする	<name3> = <val5> ** <val2> + <val4>	<name3> = <val5> ** <val2> + <val4>
<name4> ( <name2> , <name6> [ <val1> ] ) を <name2> とする	<name2> = <name4> ( <name2> , <name6> [ <val1> ] )	dict = <name4> ( <name2> , <name6> [ <val1> ] )
<name1> を <name3> の文字列に <name2> を加えた値だけ増加させる	<name1> += str ( <name3> ) + <name2>	( <name1> += str ( <name3> ) + <name2> )
<val5> の <val4> 乗を一旦、返す	yield <val5> ** <val4>	global <val5> ** <val4>
<name2> の <val6> 番目の整数値を <name3> とする	<name3> = int ( <name2> [ <val6> ] )	<name3> = int ( <name2> [ <val6> ] )
( ( <val4> ) からなる列の <val4> から <name2> 未満までの数列の各要素を <name5> とし、 <name2> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val4> ] * [ <name2> for <name5> in range ( <name2> ) ] ]	<name1> = [ [ <val4> ] * [ <name2> for <name5> in range ( <name2> ) ] ]
<name6> ( <name2> [ <name4> ] . <name3> , <name2> [ <name4> ] . <name5> , <name3> , <name5> [ <name1> ] ) を <name1> とする	<name1> = <name6> ( <name2> [ <name4> ] . <name3> , <name2> [ <name4> ] . <name5> , <name3> , <name5> [ <name1> ] )	<name1> = <name6> ( <name2> [ <name4> ] . <name3> , <name2> [ <name4> ] . <name5> , <name3> , <name5> [ <name1> ] )
<name6> の <name2> 番目に <name4> を追加した集まり	<name6> [ <name2> ] . add ( <name4> )	<name1> [ <name2> ] . add ( <name4> )
<name2> から <name4> を引いた値を <name3> とする <name1> から <name6> を引いた値を <name5> とする	<name3> = <name2> - <name4> <name5> = <name1> - <name6>	<name6> = <name2> - <name4> <name5> = <name1> - <name6>
<name3> から <name5> に <val2> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> , <name5> + <val2> ) :	continue for <name1> in range ( <name3> , <name5> + <val2> ) :
<name5> ( <name1> [ : ] ) を <name6> とする	<name6> = <name5> ( <name1> [ : ] )	else = <name5> ( <name1> [ : ] )
<name2> を <name3> から <name4> を引いた値だけ増加させる	<name2> += <name3> - <name4>	<name1> += ( <name3> - <name4> )
<name3> ( * [ <name4> ( <name1> ) foriininput ( ) . <name5> ( <val6> ) ] ) を <name2> とする	<name2> = <name3> ( * [ <name4> ( <name1> ) for <name1> in input ( ) . <name5> ( <val6> ) ] )	input = <name3> ( * [ <name4> ( <name1> ) for <name1> in input ( ) . <name5> ( <val6> ) ] )
( <val4> ) からなる列の <name6> の長さに <val3> を加えた値回分の列を <name5> とする	<name5> = [ <val4> ] * ( len ( <name6> ) + <val3> )	<name5> = [ <val4> ] * ( len ( <name6> ) + <val3> )
<name3> の <name4> + <val1> 番目が <val2> と等しくまたは <name3> の <name4> + <val1> 番目が <val6> と等しくまたは <name3> の <name4> に <val1> を加えた値番目が <val5> と等しくまたは <name3> の <name4> に <val1> を加えた値番目が <val3> と等しいとき、 <blk> <name4> を <val1> だけ減少させる </blk>	if <name3> [ <name4> + <val1> ] == <val2> or <name3> [ <name4> + <val1> ] == <val6> or <name3> [ <name4> + <val1> ] == <val5> or <name3> [ <name4> + <val1> ] == <val3> : <blk> <name4> -= <val1> </blk>	for <name4> in <name3> [ <name4> + <val1> ] == <val2> or <name3> [ <name4> + <val1> ] == <val6> or <name3> [ <name4> + <val1> ] == <val5> or <name3> [ <name4> + <val1> ] == <val3> : <blk> <name4> -= <val1> </blk>
<val2> から <val6> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , <val6> ) :	. for <name4> in range ( <val2> , <val6> ) :
<name1> と <name2> [ <name5> ] の排他論理和の <val3> 進数文字列の <val3> 番目から、つまり末尾までの部分列を長さ <val4> になるように '0' 左詰めした文字列を出力する	print ( bin ( <name1> ^ <name2> [ <name5> ] ) [ <val3> : ] . zfill ( <val4> ) )	print ( bin ( <name1> ^ <name2> [ <name5> ] ) [ <val3> : ] . zfill ( <val4> ) )
\ <name2> ( <val6> % <name1> ) \	\ <name2> ( <val6> % <name1> ) \	% <name2> ( <val6> % <name1> ) \
( <val2> ) からなる列の <name4> の <name3> 回分の列を <name4> の <name5> にする	<name4> . <name5> = [ <val2> ] * <name4> . <name3>	<name3> . <name5> = [ <val2> ] * <name4> . <name3>
<name4> を展開し、それぞれ <name1> 、 <name2> 、 <name5> 、 <name6> とする	<name1> , <name2> , <name5> , <name6> = <name4>	[ <name1> , <name2> , <name5> , <name6> = <name4>
<name2> から <val5> を引いた値のビット長を <name4> とする	<name4> = ( <name2> - <val5> ) . bit_length ( )	<name4> = ( <name2> - <val5> ) . bit_length ( )
<name2> の <name6> 番目を <name4> とする	<name4> = <name2> [ <name6> ]	<name4> = <name2> [ <name6> ]
( <name6> 、 <name5> ) の組を <name4> とする	<name4> = ( <name6> , <name5> )	<name4> = ( <name6> , <name5> )
<name3> . <name6> ( <name1> ) を順に <name4> として、繰り返す	for <name4> in <name3> . <name6> ( <name1> ) :	for <name4> in <name3> . <name6> ( <name1> ) :
<name2> の末尾に ( <name1> の <val6> 乗に <name3> の <val6> 乗を加えた値、 <name1> 、 <name3> ) からなる列を追加する	<name2> . append ( [ <name1> ** <val6> + <name3> ** <val6> , <name1> , <name3> ] )	<name1> . append ( [ <name1> ** <val6> + <name3> ** <val6> , <name1> , <name3> ] )
偽を <name1> の <name3> にする	<name1> . <name3> = False	( <name1> . <name3> = False )
<name4> の <val5> 乗に <name4> の <val5> 乗に <val6> に ( <name1> ** <val5> ) を掛けた値を加えた値の平方根に <name4> を掛けた値を加えた値を <name2> とする	<name2> = <name4> ** <val5> + math . sqrt ( <name4> ** <val5> + <val6> * ( <name1> ** <val5> ) ) * <name4>	<name2> = <name4> ** <val5> + math . sqrt ( <name4> ** <val5> + <val6> * ( <name1> ** <val5> ) ) * <name4>
\ <name4> ( <val5> ) \	\ <name4> ( <val5> ) \	if <name4> ( <val5> ) \
<name6> の <name4> 番目が <name1> 以下のとき、	if <name6> [ <name4> ] <= <name1> :	if <name6> [ <name4> ] <= <name1> :
taisho 、 <name6> から <val5> を引いた値に <val1> を加えた値、 <name2> 、 <name3> を出力する	print ( 'taisho' , <name6> - <val5> + <val1> , <name2> , <name3> )	print ( 'taisho' , <name6> - <val5> + <val1> , <name2> , <name3> )
<name1> を <val3> を <name5> だけ左シフトした値との排他的論理和にする	<name1> ^ = <val3> << <name5>	<name2> ^ = <name1> << ( <val3> << <name5> )
<name6> に <val2> を加えた値を <val4> で割った余りが <val1> と等しくまたは <val3> が <name6> に <val2> を加えた値の文字列に含まれるとき、	if ( <name6> + <val2> ) % <val4> == <val1> or <val3> in str ( <name6> + <val2> ) :	isinstance ( ( <name6> + <val2> ) % <val4> == <val1> or <val3> in str ( <name6> + <val2> ) :
<name5> を <val3> で割った商に <val2> を加えた値が <name6> より大きいとき、	if <name5> // <val3> + <val2> > <name6> :	list ( <name5> // <val3> + <val2> > <name6> :
<name1> を <name3> を <name5> で割った商だけ増加させる	<name1> += <name3> // <name5>	<name2> += <name1> // <name3> // <name5>
<name2> が <name5> と等しくなくかつ <name3> の <name6> 番目が <name4> の <name2> 番目より小さいとき、	if <name2> != <name5> and <name3> [ <name6> ] < <name4> [ <name2> ] :	for <name2> != <name5> and <name3> [ <name6> ] < <name4> [ <name2> ] :
<name2> の <name1> を <val3> で割った余りのとき <name1> を <val3> で割った商、そうでなければ <name1> を <val3> で割った商から <val4> を引いた値番目を <name5> とする	<name5> = <name2> [ <name1> // <val3> if <name1> % <val3> else <name1> // <val3> - <val4> ]	<name2> = <name2> [ <name1> // <val3> if <name1> % <val3> else <name1> // <val3> - <val4> ]
<name5> の <name3> 番目が <name1> の <name2> 番目より小さいとき、	if <name5> [ <name3> ] < <name1> [ <name2> ] :	while <name5> [ <name3> ] < <name1> [ <name2> ] :
<name3> でなくまたは <name3> の <val2> 番目が <name4> と等しくかつ <name3> の <val1> 番目が <name4> と等しいとき、	if not <name3> or ( <name3> [ <val2> ] is not <name4> and <name3> [ <val1> ] is not <name4> ) :	for <name3> in <name3> or ( <name3> [ <val2> ] is not <name4> and <name3> [ <val1> ] is not <name4> ) :
<name1> ( <name4> , <name3> , <name5> , <name2> ) を <name6> とする	<name6> = <name1> ( <name4> , <name3> , <name5> , <name2> )	<name6> = <name1> ( <name4> , <name3> , <name5> , <name2> )
<name1> の末尾に <name6> に <name4> ( <name3> , <name5> -2 , <name5> ) を掛けた値を <name5> で割った余りを追加する	<name1> . append ( ( <name6> * <name4> ( <name3> , <name5> - 2 , <name5> ) ) % <name5> )	<name1> . append ( <name6> * <name4> ( <name3> , <name5> - 2 , <name5> ) % <name5> )
<name3> ( <name6> , <name4> ) に <val2> を加えた値を <name1> とする	<name1> = <name3> ( <name6> , <name4> ) + <val2>	<name1> = <name3> ( <name6> , <name4> ) + <val2>
<name5> を ( ( <name1> 、 <name2> の整数値 ) の組 ) からなる列だけ増加させる	<name5> += [ ( <name1> , int ( <name2> ) ) ]	<name2> += [ [ ( <name1> , int ( <name2> ) ) ] ]
<name6> ( ) の両端から空白改行を取り除いた文字列を <name5> とする	<name5> = <name6> ( ) . strip ( )	<name5> = <name6> ( ) . strip ( )
<name1> ( <name5> ) . <name6> ( <name1> ( <val3> ) , <name4> = <name2> ) を <name2> とする	<name2> = <name1> ( <name5> ) . <name6> ( <name1> ( <val3> ) , <name4> = <name2> )	input = <name1> ( <name5> ) . <name6> ( <name1> ( <val3> ) , <name4> = <name2> )
<name1> の <name2> を <name1> の <name5> にする	<name1> . <name5> = <name1> . <name2>	not <name1> . <name5> = <name1> . <name2>
<name2> ( <name6> , <val1> , <name3> ( <name6> ) -1 ) を <name5> とする	<name5> = <name2> ( <name6> , <val1> , <name3> ( <name6> ) - 1 )	<name5> = <name2> ( <name6> , <val1> , <name3> ( <name6> ) - 1 )
<name3> が <name4> より小さいとき '{} {}' を出力する、そうでなければ '{} {}' を出力する	print ( { <name3> } { <name4> } ) if <name3> < <name4> else print ( { <name4> } { <name3> } )	[ print ( { <name3> < <name4> } , end f } ) if <name3> < <name4> else { }
改行せずに <val6> を書式として <name2> の <name1> を <val5> で割った商から <val4> を引いた値番目で整形した文字列を出力する	print ( <val6> . format ( <name2> [ <name1> // <val5> - <val4> ] ) , end = '' )	<val6> . format ( <name2> [ <name1> // <val5> - <val4> ] ) , end = '' )
<name2> の <name1> から <val4> を引いた値番目を <name2> の <name3> から <val4> を引いた値番目との論理和にする	<name2> [ <name1> - <val4> ] | = <name2> [ <name3> - <val4> ]	( <name2> [ <name1> - <val4> ] | = <name2> [ <name3> - <val4> ] )
<name6> モジュールを用いる	from <name6> import Dict	sqrt ( <name6> ) import sqrt
<name3> が <name1> と等しいかどうかが <val4> と等しいとき、	if <name3> == <name1> == <val4> :	\ if <name3> == <name1> == <val4> :
<name5> の末尾を出力する	print ( <name5> [ - 1 ] )	print ( <name5> [ - 1 ] )
<name3> ( <name5> + <val6> , <name2> , <name1> , <name4> )	<name3> ( <name5> + <val6> , <name2> , <name1> , <name4> )	<name4> ( <name5> + <val6> , <name2> , <name1> , <name4> )
<name4> に <name2> を加えた値に <name3> を加えた値を出力する	print ( <name4> + <name2> + <name3> )	print ( <name4> + <name2> + <name3> )
<name6> の <name3> を <name4> とする	<name4> = <name6> . <name3>	<name4> = <name6> . <name3>
<name1> と <val6> を割ったときの ( 商を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = divmod ( <name1> , <val6> )	<name1> , <name4> = divmod ( <name1> , <val6> )
<name5> から <name6> を引いた値が <val4> より小さいとき、 <blk> <val4> を返す </blk>	if <name5> - <name6> < <val4> : <blk> return <val4> </blk>	\ return <name5> - <name6> < <val4> : <blk> return <val4> </blk>
<name4> 、 <name3> 、 <name5> はグローバル変数とする	global <name4> , <name3> , <name5>	>> = <name4> , <name3> , <name5>
<name3> を空白で分割した字句列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = <name3> . split ( )	<name2> , <name5> = <name3> . split ( )
<val6> を区切りとして <name2> 、 <name4> 、 <name5> を出力する	print ( <name2> , <name4> , <name5> , sep = <val6> )	print ( <name2> , <name4> , <name5> , sep = <val6> )
<name1> 、 <name5> の最小値、 <name1> 、 <name5> の最大値を <name1> 、 <name5> とする	<name1> , <name5> = min ( <name1> , <name5> ) , max ( <name1> , <name5> )	<name6> , <name5> = min ( <name1> , <name5> ) , max ( <name1> , <name5> )
<name4> を <name6> の <name5> 番目に <name6> の <name2> 番目を加えた値だけ増加させる	<name4> += <name6> [ <name5> ] + <name6> [ <name2> ]	<name2> += <name6> [ <name5> ] + <name6> [ <name2> ]
<name1> ( <name2> , <name3> , <name5> )	<name1> ( <name2> , <name3> , <name5> )	<name4> ( <name2> , <name3> , <name5> )
<name1> を <val2> で割った商を <name6> とする	<name6> = <name1> // <val2>	( <name6> = <name1> // <val2> )
<name2> ( [ <val3> ] * <name5> . <name4> ) を <name5> の <name6> にする	<name5> . <name6> = <name2> ( [ <val3> ] * <name5> . <name4> )	<name2> . <name6> = <name2> ( [ <val3> ] * <name5> . <name4> )
<name3> の <name1> 番目の先頭を <name2> とする	<name2> = <name3> [ <name1> ] [ 0 ]	<name2> = <name3> [ <name1> ] [ 0 ]
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開してを出力する	print ( * sorted ( map ( int , <name6> ( ) . split ( ) ) ) )	<val3> print ( * sorted ( map ( int , <name6> ( ) . split ( ) ) ) )
( <val5> 、 <val2> 、 <val1> 、 <val4> 、 <val6> 、 <val3> 、 <val5> 、 <val2> 、 <val1> 、 <val4> 、 <val6> 、 <val3> 、 <val5> 、 <val2> 、 <val1> 、 <val4> 、 <val6> ) からなる列を <name3> とする	<name3> = [ <val5> , <val2> , <val1> , <val4> , <val6> , <val3> , <val5> , <val2> , <val1> , <val4> , <val6> , <val3> , <val5> , <val2> , <val1> , <val4> , <val6> ]	<name1> = [ <val5> , <val2> , <val1> , <val4> , <val6> , <val3> , <val5> , <val2> , <val1> , <val4> , <val6> , <val3> , <val5> , <val2> , <val1> , <val4> , <val6> ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> 、 <name6> 、 <name3> とする	<name2> , <name1> , <name6> , <name3> = map ( int , input ( ) . split ( ) )	<name6> , <name3> = map ( int , input ( ) . split ( ) )
<name2> の <name3> に <val5> を加えた値番目に <name1> を加えた値をそうでなければ、とする	else = <name2> [ <name3> + <val5> ] + <name1>	now = <name2> [ <name3> + <val5> ] + <name1>
<name6> の末尾に ( <name2> 、 <name5> ) からなる列を追加する	<name6> . append ( [ <name2> , <name5> ] )	<name4> . append ( [ <name2> , <name5> ] )
<name4> . <name1> ( <name3> )	<name4> . <name1> ( <name3> )	<name3> <name4> . <name1> ( <name3> )
<name5> 、 <name1> を <name5> で割った余りを <name1> 、 <name5> とする	<name1> , <name5> = <name5> , <name1> % <name5>	<name1> , <name5> = <name5> , <name1> % <name5>
<val6> から <name2> に <val3> を掛けた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <name2> * <val3> ) :	for <name5> in range ( <val6> , <name2> * <val3> ) :
<name4> の先頭を <name3> の <val1> 番目にする	<name3> [ <val1> ] = <name4> [ 0 ]	( <name3> [ <val1> ] = <name4> [ 0 ] )
<name2> に <name3> を掛けた値が <val4> 以下かつ <name5> に <name1> を掛けた値が <val4> 以下かつ <name6> が <val4> 以下または <name2> が <val4> 以下かつ <name3> が <val4> 以下または <name4> が <val4> 以下かどうかを返す	return <name2> * <name3> <= <val4> and <name5> * <name1> <= <val4> and ( <name6> <= <val4> or <name2> <= <val4> ) and ( <name3> <= <val4> or <name4> <= <val4> )	x return <name2> * <name3> <= <val4> and <name5> * <name1> <= <val4> and <name6> <= <val4> or <name2> <= <val4> and <name3> <= <val4> or <name4> <= <val4>
<name4> が <name5> と等しいとき <val6> 、そうでなければ <val1> を書式として <name4> で整形した文字列を出力する	print ( <val6> if <name4> == <name5> else <val1> . format ( <name4> ) )	print ( <val6> if <name4> == <name5> else <val1> . format ( <name4> ) )
<name3> ( <name4> , <name5> ) に <name3> ( <name5> , <name6> ) を加えた値を出力する	print ( <name3> ( <name4> , <name5> ) + <name3> ( <name5> , <name6> ) )	print ( <name3> ( <name4> , <name5> ) + <name3> ( <name5> , <name6> ) )
<name1> の <name5> 番目を <name2> の <name4> の <name6> 番目にする	<name2> . <name4> [ <name6> ] = <name1> [ <name5> ]	<name6> . <name4> [ <name6> ] = <name1> [ <name5> ]
<name3> を <name1> から <name6> を引いた値だけ増加させる	<name3> += <name1> - <name6>	<val2> += ( <name1> - <name6> )
<name4> の <val5> に ( -1 ) からなる列の <name1> に <val3> を加えた値回分の列を挿入する	<name4> . insert ( <val5> , [ - 1 ] * ( <name1> + <val3> ) )	<name2> . insert ( <name4> , <val5> , [ - 1 ] * ( <name1> + <val3> ) )
<name2> を順に <name1> 、 <name4> 、 <name5> として、繰り返す	for <name1> , <name4> , <name5> in <name2> :	. for <name1> , <name4> , <name5> in <name2> :
<name3> . <name2> ( <name1> . <name4> , <name1> . <name5> ) を <name6> とする	<name6> = <name3> . <name2> ( <name1> . <name4> , <name1> . <name5> )	<name6> = <name3> . <name2> ( <name1> . <name4> , <name1> . <name5> )
<name6> ( <name2> , <name1> , <name2> [ <val3> ] )	<name6> ( <name2> , <name1> , <name2> [ <val3> ] )	<name6> ( <name2> , <name1> , <name2> [ <val3> ] )
<name4> に <val3> を加えた値が <name5> に含まれかつ <name1> が <name5> の <name4> に <val3> を加えた値番目に含まれるとき、	if <name4> + <val3> in <name5> and <name1> in <name5> [ <name4> + <val3> ] :	for <name5> in <name4> + <val3> in <name5> and <name1> in <name5> [ <name4> + <val3> ] :
( <name6> の <name1> 番目、 os . <name5> の逆順 ) の組を返す	return ( <name6> [ <name1> ] , <name5> [ : : - 1 ] )	yield ( <name6> [ <name1> ] , <name5> [ : : - 1 ] )
<name2> を順に <name3> 、 <name4> として、繰り返す	for <name3> , <name4> in <name2> :	from <name3> , <name4> in <name2> :
辞書を <name5> とする	<name5> = dict ( zip ( range ( 1 , N + 1 ) , pq ) )	( <name5> = dict ( zip . dict ( ) )
<name1> ( <name6> * <val2> + <val4> , <name5> , <name3> , <name1> )	<name1> ( <name6> * <val2> + <val4> , <name5> , <name3> , <name1> )	<name3> ( <name1> ( <name6> * <val2> + <val4> , <name5> , <name3> , <name1> ) )
<name2> に <val1> 、 <name3> を追加した集まり	<name2> . add ( <val1> , <name3> )	<name2> . add ( <val1> , <name3> )
<name1> を <name6> の先頭を取り出した値だけ増加させる	<name1> += <name6> . pop ( )	<name1> += <name6> . pop ( )
<name3> の <name1> の <name2> 番目が <name3> の <name1> の <name4> 番目より大きいとき、	if <name3> . <name1> [ <name2> ] > <name3> . <name1> [ <name4> ] :	if <name3> . <name1> [ <name2> ] > <name3> . <name1> [ <name4> ] :
<name6> を <val2> で割った余りのとき、 <blk> <val5> を書式として <name1> 、 <name1> に <val3> を加えた値、 <name1> に <val4> を加えた値、 <name1> に <val6> を加えた値で整形した文字列を出力する </blk>	if <name6> % <val2> : <blk> print ( <val5> . format ( <name1> , <name1> + <val3> , <name1> + <val4> , <name1> + <val6> ) ) </blk>	for if <name6> % <val2> : <blk> print ( <val5> . format ( <name1> , <name1> + <val3> , <name1> + <val4> , <name1> + <val6> ) ) </blk>
<name1> の末尾に ( <name2> の整数値、 <name4> ) からなる列を追加する	<name1> . append ( [ int ( <name2> ) , <name4> ] )	<name1> . append ( [ int ( <name2> ) , <name4> ] )
<val6> の <name5> から <val2> を引いた値のビット長乗を <name1> の <name4> にする	<name1> . <name4> = <val6> ** ( ( <name5> - <val2> ) . bit_length ( ) )	<name4> = <val6> ** ( ( <name5> - <val2> ) . bit_length ( ) )
<name6> が <val5> と等しいとき、 <blk> <name1> の先頭に <name2> を追加する </blk>	if <name6> == <val5> : <blk> <name1> . appendleft ( <name2> ) </blk>	\ <name6> == <val5> : <blk> <name1> . appendleft ( <name2> ) </blk>
<name4> を <name2> ( [ <name5> , <name3> , <name1> , <name6> , <name4> -1 ] ) に <name2> の <val5> 番目を掛けた値だけ増加させる	<name4> += <name2> ( [ <name5> , <name3> , <name1> , <name6> , <name4> - 1 ] ) * <name2> [ <val5> ]	<name3> += <name2> ( [ <name5> , <name3> , <name1> , <name6> , <name4> - 1 ] ) * <name2> [ <val5> ]
<name6> の <name3> 番目の末尾に ( <name2> に <name1> を加えた値、 <name5> に <val4> を加えた値 ) の組を追加する	<name6> [ <name3> ] . append ( ( <name2> + <name1> , <name5> + <val4> ) )	<name5> [ <name3> ] . append ( ( <name2> + <name1> , <name5> + <val4> ) )
<name6> の <val1> を <val5> で割った値乗を <name4> とする	<name4> = <name6> ** ( <val1> / <val5> )	<name4> = <name6> ** ( <val1> / <val5> )
( <val6> ) からなる列の <val6> を <name2> だけ左シフトした値回分の列を <name4> とする	<name4> = [ <val6> ] * ( <val6> << <name2> )	<name4> = [ <val6> ] * ( <val6> << <name2> )
<name2> の <name6> 番目を <name3> の <name5> 番目にする	<name3> [ <name5> ] = <name2> [ <name6> ]	( <name3> [ <name5> ] = <name2> [ <name6> ] )
<name5> の <name2> の <name1> 番目の末尾に <name3> を追加する	<name5> . <name2> [ <name1> ] . append ( <name3> )	<name1> . <name2> [ <name1> ] . append ( <name3> )
<name4> ( ( <name1> , <name2> ) , ( <name5> , <name6> ) ) を <name3> とする	<name3> = <name4> ( ( <name1> , <name2> ) , ( <name5> , <name6> ) )	<name6> = <name4> ( ( <name1> , <name2> ) , ( <name5> , <name6> ) )
<name4> ( <name1> , ( <name6> , <name3> , <name5> + <val2> ) )	<name4> ( <name1> , ( <name6> , <name3> , <name5> + <val2> ) )	<name3> ( <name4> ( <name1> , ( <name6> , <name3> , <name5> + <val2> ) ) )
<name2> の末尾に入力された文字列の整数値を <val1> で割った商を追加する	<name2> . append ( int ( input ( ) ) // <val1> )	<name2> . append ( int ( input ( ) ) // <val1> )
\ <name1> ( <val6> . <name2> ( <name3> ) ) \	\ <name1> ( <val6> . <name2> ( <name3> ) ) \	for <name1> ( <val6> . <name2> ( <name3> ) ) \
<name6> の <name2> 番目の各要素を <name1> とし、 <name3> の <name1> 番目の列を <name3> とする	<name3> = [ <name3> [ <name1> ] for <name1> in <name6> [ <name2> ] ]	<name3> = [ <name3> [ <name1> ] for <name1> in <name6> [ <name2> ] ]
<name4> を <name2> で割った値を <name1> とする	<name1> = <name4> / <name2>	( <name1> = <name4> / <name2> )
<name4> に <name3> を加えた値、 <name6> に <name1> を加えた値を <name5> 、 <name2> とする	<name5> , <name2> = <name4> + <name3> , <name6> + <name1>	<name5> , <name2> = <name4> + <name3> , <name6> + <name1>
<name2> 年 <name6> 月 <name5> 日の日時、 <name1> 年 <name4> 月 <name3> 日の日時を <name4> 、 <name3> とする	<name4> , <name3> = datetime . datetime ( <name2> , <name6> , <name5> ) , datetime . datetime ( <name1> , <name4> , <name3> )	<name4> , <name3> = datetime . datetime ( <name2> , <name6> , <name5> ) , datetime . datetime ( <name1> , <name4> , <name3> )
<name1> を <name4> の <name6> 番目の <name2> 番目だけ増加させる	<name1> += <name4> [ <name6> ] [ <name2> ]	<name1> += <name4> [ <name6> ] [ <name2> ]
<name4> の先頭から <name4> の <name2> の <name1> 番目を探して見つかった位置を <name4> の <name2> の <name1> 番目にする	<name4> . <name2> [ <name1> ] = <name4> . find ( <name4> . <name2> [ <name1> ] )	<name3> . <name2> [ <name1> ] = <name4> . find ( <name4> . <name2> [ <name1> ] )
<name6> の <name1> 番目を <val2> との排他的論理和にする	<name6> [ <name1> ] ^ = <val2>	<name3> [ <name1> ] ^ = <val2>
<name3> の <val5> 番目から <name3> の <val1> 番目を引いた値を <name2> とする	<name2> = <name3> [ <val5> ] - <name3> [ <val1> ]	<name2> = <name3> [ <val5> ] - <name3> [ <val1> ]
( 0 から <name1> 未満までの数列の各要素を <name6> とし、 <name4> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列 ) の集合を <name3> とする	<name3> = { [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name6> in range ( <name1> ) ] }	<name3> = { [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name6> in range ( <name1> ) ] }
0 から <val6> 未満までの数列を順に <name1> として、繰り返す <blk> <name4> の <name2> に <val3> を加えた値番目の <name1> 番目に <name5> の <name1> 番目を加えた値を <name4> の <name2> に <val3> を加えた値番目の <name1> に <val3> を加えた値番目にする </blk>	for <name1> in range ( <val6> ) : <blk> <name4> [ <name2> + <val3> ] [ <name1> + <val3> ] = <name4> [ <name2> + <val3> ] [ <name1> ] + <name5> [ <name1> ] </blk>	for <name1> in range ( <val6> ) : <blk> <name4> [ <name2> + <val3> ] [ <name1> + <val3> ] = <name4> [ <name2> + <val3> ] [ <name1> ] + <name5> [ <name1> ] </blk>
<name3> 、 <name4> の <name1> 番目の <val5> 番目の最小値を <name3> とする	<name3> = min ( <name3> , <name4> [ <name1> ] [ <val5> ] )	<name3> = min ( <name3> , <name4> [ <name1> ] [ <val5> ] )
<name2> を <name6> の <name1> に <val3> を加えた値番目の <name5> 番目にする	<name6> [ <name1> + <val3> ] [ <name5> ] = <name2>	<name4> [ <name6> [ <name1> + <val3> ] [ <name5> ] = <name2>
<name2> の <name5> に <val4> を加えた値番目が <val6> より小さいとき、	if <name2> [ <name5> + <val4> ] < <val6> :	for <name2> [ <name5> + <val4> ] < <val6> :
<name4> と <name2> の <name1> 番目の論理積が <val5> と等しいとき、	if <name4> & <name2> [ <name1> ] == <val5> :	continue if <name4> & <name2> [ <name1> ] == <val5> :
insert が <name2> と等しいとき、	if 'insert' == <name2> :	for <name2> in 'insert' == <name2> :
<name6> に <val1> を加えた値から <name4> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> + <val1> , <name4> + <val1> ) :	for <name5> in range ( <name6> + <val1> , <name4> + <val1> ) :
<name2> ( <name4> , <val1> , <name3> ( <name4> ) )	<name2> ( <name4> , <val1> , <name3> ( <name4> ) )	set ( <name2> ( <name4> , <val1> , <name3> ( <name4> ) ) )
<name5> ( - <name6> / <name1> , <val4> ) を <name2> の <name3> にする	<name2> . <name3> = <name5> ( - <name6> / <name1> , <val4> )	dict . <name3> = <name5> ( - <name6> / <name1> , <val4> )
<val2> から <name5> に <val6> を加えた値未満までの数列の各要素を <name4> とし、 <val2> の列を <name1> の <name3> にする	<name1> . <name3> = [ <val2> for <name4> in range ( <name5> + <val6> ) ]	<name1> . <name3> = [ <val2> for <name4> in range ( <name5> + <val6> ) ]
<name1> を実部、 <name3> を虚部とした複素数を <name5> とする	<name5> = complex ( <name1> , <name3> )	<name5> = complex ( <name1> , <name3> )
<name4> の <name3> の <name5> 番目から、つまり末尾までの部分列の <val1> 番目が <val2> と等しいとき、	if <name4> . <name3> [ <name5> : ] [ <val1> ] == <val2> :	list ( <name4> [ <name3> [ <name5> : ] [ <val1> : ] == <val2> :
<name1> の <val2> 番目を <name3> とする	<name3> = <name1> [ <val2> ]	( <name3> = <name1> [ <val2> ] )
( <name2> ) からなる列に <name3> をソートした列を加えた値を <name3> とする	<name3> = [ <name2> ] + sorted ( <name3> )	<name3> = [ <name2> ] + sorted ( <name3> )
<name2> が <name5> の長さと等しくなければならない	assert ( <name2> == len ( <name5> ) )	sep = <name2> == len ( <name5> )
<name5> を <name2> の ( <name4> 、現在の日時 ) の組番目にする	<name2> [ ( <name4> , now ) ] = <name5>	<name4> [ <name2> ( <name4> , now ) ] = <name5>
<name3> の <name4> 番目が -1 と等しいとき、 <blk> <name6> ( <name4> ) </blk>	if <name3> [ <name4> ] == - 1 : <blk> <name6> ( <name4> ) </blk>	\ <name3> [ <name4> ] == - 1 : <blk> <name6> ( <name4> ) </blk>
<name5> に <name5> から <name6> を引いた値を掛けた値に <name5> から <name3> を引いた値を掛けた値に <name5> から <name1> を引いた値を掛けた値の平方根を返す	return math . sqrt ( <name5> * ( <name5> - <name6> ) * ( <name5> - <name3> ) * ( <name5> - <name1> ) )	yield sqrt ( <name5> * ( <name5> - <name6> ) * ( <name5> - <name3> ) * ( <name5> - <name1> ) )
<name4> の総和を <name4> の長さで割った値を <name3> とする	<name3> = sum ( <name4> ) / len ( <name4> )	<name3> = sum ( <name4> ) / len ( <name4> )
<name2> の <name1> に <name4> を加えた値番目の <name6> に <name5> を加えた値番目が <val3> と等しくない間、次を繰り返す	while <name2> [ <name1> + <name4> ] [ <name6> + <name5> ] != <val3> :	try while <name2> [ <name1> + <name4> ] [ <name6> + <name5> ] != <val3> :
<name1> の <name2> の <name3> 番目の <name5> 番目に <name1> の <name6> の <name5> 番目を掛けた値を <name1> の <name4> で割った余りを返す	return <name1> . <name2> [ <name3> ] [ <name5> ] * <name1> . <name6> [ <name5> ] % <name1> . <name4>	x return <name1> . <name2> [ <name3> ] [ <name5> ] * <name1> . <name6> [ <name5> ] % <name1> . <name4>
<name1> と <name3> の <name6> 番目の論理積を <name5> とする	<name5> = <name1> & <name3> [ <name6> ]	<name5> = <name1> & <name3> [ <name6> ]
<name2> の、つまり先頭から、つまり末尾までの <val4> 間隔による部分列、 <name2> の <val3> 番目から、つまり末尾までの <val4> 間隔による部分列の要素をそれぞれ組にした列の各要素を <name5> 、 <name1> とし、 ( <name5> 、 <name1> ) の組の列を <name3> の <name6> 番目にする	<name3> [ <name6> ] = [ ( <name5> , <name1> ) for <name5> , <name1> in zip ( <name2> [ : : <val4> ] , <name2> [ <val3> : : <val4> ] ) ]	<name4> [ <name6> ] = [ ( <name5> , <name1> ) for <name5> , <name1> in zip ( <name2> [ : : <val4> ] , <name2> [ <val3> : : <val4> ] ) ]
<name4> を <val3> で割った余りにする	<name4> % = <val3>	<name1> % = <name4> % = <val3>
<name3> の、つまり先頭から <name1> 番目までの部分列に <name3> の <name1> 番目から <name6> 番目までの部分列の、つまり先頭から、つまり末尾までの -1 間隔による部分列を加えた値に <name3> の <name6> 番目から、つまり末尾までの部分列を加えた値を <name3> とする	<name3> = <name3> [ : <name1> ] + <name3> [ <name1> : <name6> ] [ : : - 1 ] + <name3> [ <name6> : ]	<name3> = <name3> [ : <name1> ] + <name3> [ <name1> : <name6> ] [ : : - 1 ] + <name3> [ <name6> : ]
Safe を出力する	print ( 'Safe' )	dict print ( 'Data ' )
<name5> の <name1> 番目の先頭を取り出した値	<name5> [ <name1> ] . pop ( )	( <name5> [ <name1> ] . pop ( ) )
<name2> ( <name3> + <val1> , <name5> ) または <name2> ( <name3> + <val1> , <name5> - <name4> [ <name3> ] ) を <name6> とする	<name6> = <name2> ( <name3> + <val1> , <name5> ) or <name2> ( <name3> + <val1> , <name5> - <name4> [ <name3> ] )	<name6> = <name2> ( <name3> + <val1> , <name5> ) or <name2> ( <name3> + <val1> , <name5> - <name4> [ <name3> ] )
<name1> または <name2> または <name3> の間、次を繰り返す	while <name1> or <name2> or <name3> :	for <name3> in <name1> or <name2> or <name3> :
<val3> から <name1> を引いた値を <name1> とする	<name1> = <val3> - <name1>	( <name1> = <val3> - <name1> )
<name4> の長さを <name6> の <name1> 番目にする	<name6> [ <name1> ] = len ( <name4> )	dict [ <name1> ] = len ( <name4> )
<name1> の <name3> 番目を <name2> だけ増加させる	<name1> [ <name3> ] += <name2>	not <name1> [ <name3> ] += <name2>
<name4> ( <name2> . <name6> , <name1> )	<name4> ( <name2> . <name6> , <name1> )	<name4> ( <name2> . <name6> , <name1> )
<name3> の <name6> に <val1> を加えた値を <name4> で割った余り番目の先頭、 <name3> の <name6> に <val1> を加えた値を <name4> で割った余り番目の <val1> 番目を <name5> 、 <name2> とする	<name5> , <name2> = <name3> [ ( <name6> + <val1> ) % <name4> ] [ 0 ] , <name3> [ ( <name6> + <val1> ) % <name4> ] [ <val1> ]	<name1> , <name5> , <name2> = <name3> [ ( <name6> + <val1> ) % <name4> ] [ 0 ] , <name3> [ ( <name6> + <val1> ) % <name4> ] [ <val1> ]
<name5> を <val4> で割った余りが <val3> と等しくないとき、 <blk> <name6> の末尾に ( <val3> 、 <val3> ) の組を追加する </blk>	if <name5> % <val4> != <val3> : <blk> <name6> . append ( ( <val3> , <val3> ) ) </blk>	while <name5> % <val4> != <val3> : <blk> <name6> . append ( ( <val3> , <val3> ) ) </blk>
<name1> 、 ( <name4> 、 <name5> ) の組の最大値を <name1> とする	<name1> = max ( <name1> , ( <name4> , <name5> ) )	<name1> = max ( <name1> , ( <name4> , <name5> ) )
<name4> 、 <name6> を <name5> 、 <name1> とする	<name5> , <name1> = <name4> , <name6>	<name1> , <name1> = <name4> , <name6>
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を <name6> 、 <name4> とする	<name6> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name4> を <name3> の <name6> の <val1> 番目にする	<name3> . <name6> [ <val1> ] = <name4>	( <name3> . <name6> [ <val1> ] = <name4> )
<name5> に <val3> を <name2> だけ左シフトした値を加えた値に <val3> を <name1> だけ左シフトした値を加えた値を <name6> とする	<name6> = <name5> + ( <val3> << <name2> ) + ( <val3> << <name1> )	<name6> = <name5> + ( <val3> << <name2> ) + ( <val3> << <name1> )
<name3> の <name5> 番目が <name1> の <name2> と等しくなくかつ <name4> の <name6> 番目の <name5> 番目が -1 と等しくないとき、	if <name3> [ <name5> ] != <name1> . <name2> and <name4> [ <name6> ] [ <name5> ] != - 1 :	!= <name3> [ <name5> ] != <name1> . <name2> and <name4> [ <name6> ] [ <name5> ] != - 1 :
<name5> の <name2> の <val3> 番目、 <name5> の <name2> の <val1> 番目、 <name5> の <name2> の <val6> 番目、 <name5> の <name2> の先頭を <name5> の <name2> の先頭、 <name5> の <name2> の <val3> 番目、 <name5> の <name2> の <val1> 番目、 <name5> の <name2> の <val6> 番目とする	<name5> . <name2> [ 0 ] , <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] = <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] , <name5> . <name2> [ 0 ]	<name2> [ 0 ] . <name5> [ <name2> . <name2> [ <val3> ] , <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] = <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] , <name5> . <name2> [ 0 ]
<name5> の末尾に ( <val2> ) からなる列の <name1> に <val6> を加えた値回分の列を追加する	<name5> . append ( [ <val2> ] * ( <name1> + <val6> ) )	<name5> . append ( [ <val2> ] * ( <name1> + <val6> ) )
<name4> の <name2> を <val6> だけ増加させる	<name4> . <name2> += <val6>	( <name4> . <name2> += <val6> )
<name1> が全てアルファベットのとき、	if <name1> . isalpha ( ) :	isdigit . isalpha : if <name1> . isalpha ( ) :
<name3> が <name5> の <name1> 番目以下のとき、	if <name3> <= <name5> [ <name1> ] :	for <name3> in <name3> <= <name5> [ <name1> ] :
<val2> 、 <val2> を <name4> 、 <name6> とする	<name4> , <name6> = <val2> , <val2>	( <name4> , <name6> = <val2> , <val2> )
<name3> を <name2> だけ増加させる	<name3> += <name2>	( <name3> += <name2> )
<name2> の末尾を <name1> とする	<name1> = <name2> [ - 1 ]	( <name1> = <name2> [ - 1 ] )
<name1> に <val4> を掛けた値を <name6> で割った商を <name2> とする	<name2> = <name1> * <val4> // <name6>	<name2> = <name1> * <val4> // <name6>
<name4> [ <name3> ] の <name6> 番目の <val5> 番目から <name4> [ <name2> -1 ] の <name6> 番目の <val5> 番目を引いた値から <name4> の <name3> 番目の <name5> から <val1> を引いた値番目の <val5> 番目を引いた値に <name4> の <name2> から <val1> を引いた値番目の <name5> から <val1> を引いた値番目の先頭を加えた値を <name1> の <val5> 番目にする	<name1> [ <val5> ] = <name4> [ <name3> ] [ <name6> ] [ <val5> ] - <name4> [ <name2> - <val1> ] [ <name6> ] [ <val5> ] - <name4> [ <name3> ] [ <name5> - <val1> ] [ <val5> ] + <name4> [ <name2> - <val1> ] [ <name5> - <val1> ] [ <val5> ]	<name1> [ <val5> ] = <name4> [ <name3> ] [ <name6> ] [ <val5> ] - <name4> [ <name2> - <val1> ] [ <name6> ] [ <val5> ] - <name4> [ <name3> ] [ <name5> - <val1> ] [ <val5> ] + <name4> [ <name2> - <val1> ] [ <name5> - <val1> ] [ <val1> ]
入力された文字列を空白で分割した字句列の各要素に <name4> を適用した列のリストを展開し、それぞれ <name4> 、 <name3> 、 <name1> 、 <name2> 、 <name6> 、 <name5> とする	<name4> , <name3> , <name1> , <name2> , <name6> , <name5> = list ( map ( <name4> , input ( ) . split ( ) ) )	<name4> , <name3> , <name1> , <name2> , <name6> , <name5> = list ( map ( <name4> , input ( ) . split ( ) ) )
<val1> から <name2> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , <name2> + <val5> ) :	continue for <name3> in range ( <val1> , <name2> + <val5> ) :
<name3> の <name1> 番目が -1 と等しくないとき、 <blk> 何もしない </blk>	if <name3> [ <name1> ] != - 1 : <blk> pass </blk>	<blk> if <name3> [ <name1> ] != - 1 : <blk> pass </blk>
<name1> を英小文字に変換した文字列を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name1> . lower ( )	<name1> [ <name2> ] = <name1> . lower ( )
<name6> に <name4> の <name3> 番目を加えた値を <name1> とする	<name1> = <name6> + <name4> [ <name3> ]	<name1> = <name6> + <name4> [ <name3> ]
<name6> に <val1> を掛けた値が <name3> 以上のとき、	if <name6> * <val1> >= <name3> :	: if <name6> * <val1> >= <name3> :
-2 に <name2> を掛けた値に <val5> に <name3> を掛けた値を加えた値を <name4> とする	<name4> = - <val5> * <name2> + <val5> * <name3>	<name4> = - <val5> * <name2> + <val5> * <name3>
0 から <name2> 未満までの数列の各要素を <name4> とし、 <name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name3> とする	<name3> = [ tuple ( map ( int , <name1> ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]	<name6> = [ tuple ( map ( int , <name1> ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = list ( map ( int , input ( ) . split ( ) ) )	<name1> , <name6> = list ( map ( int , input ( ) . split ( ) ) )
<name2> を <name3> の <name1> にする	<name3> . <name1> = <name2>	( <name3> . <name1> = <name2> )
<name5> を <name2> で割った余りを <name1> とする	<name1> = <name5> % <name2>	( <name1> = <name5> % <name2> )
<name6> ( ) の整数値を <name5> とする	<name5> = int ( <name6> ( ) )	else = int ( <name6> ( ) )
<name5> の <val4> 番目が <val3> と等しいとき、	if <name5> [ <val4> ] == <val3> :	: if <name5> [ <val4> ] == <val3> :
<name5> の末尾に ( <name6> に <val1> を加えた値、 <name4> に <val1> を加えた値、 <name3> ) の組を追加する	<name5> . append ( ( <name6> + <val1> , <name4> + <val1> , <name3> ) )	<name5> . append ( ( <name6> + <val1> , <name4> + <val1> , <name3> ) )
<val5> に <name3> に <name1> を加えた値を掛けた値を <name6> とする	<name6> = <val5> * ( <name3> + <name1> )	<name6> = <val5> * ( <name3> + <name1> )
<name6> ( <name5> , <name1> , <name4> -1 )	<name6> ( <name5> , <name1> , <name4> - 1 )	<name2> ( <name5> , <name1> , <name4> - 1 )
{ : 032 <name4> }を書式として <name3> と <name4> の論理積で整形した文字列を出力する	print ( '{:032b}' . format ( <name3> & <name4> ) )	print ( '{:032b}' . format ( <name3> & <name4> ) )
<name2> の <name6> に <name1> の <name5> を掛けた値から <name2> の <name5> に <name1> の <name6> を掛けた値を引いた値に <name3> の <name6> に <name4> の <name5> を掛けた値を加えた値から <name3> の <name5> に <name4> の <name6> を掛けた値を引いた値を <name4> とする	<name4> = <name2> . <name6> * <name1> . <name5> - <name2> . <name5> * <name1> . <name6> + <name3> . <name6> * <name4> . <name5> - <name3> . <name5> * <name4> . <name6>	<name4> = <name2> . <name6> * <name1> . <name5> - <name2> . <name5> * <name1> . <name6> + <name3> . <name6> * <name4> . <name5> - <name3> . <name5> * <name4> . <name6>
{}を出力する	print ( { length } )	print ( { ( x & 2 ) } )
を間に入れて <name2> の各要素を <name1> 、 <name6> とし、 <val4> に <name3> ( <name1> ) を加えた値に <name6> を掛けた値の列を連結した文字列を出力する	print ( '' . join ( [ ( <val4> + <name3> ( <name1> ) ) * <name6> for <name1> , <name6> in <name2> ] ) )	print ( ' '' . join ( [ ( <val4> + <name3> ( <name1> ) ) * <name6> for <name1> , <name6> in <name2> ] ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name3> 、 <name4> 、 <name6> 、 <name1> とする	<name5> , <name3> , <name4> , <name6> , <name1> = map ( int , input ( ) . split ( ) )	<name3> , <name4> , <name6> , <name1> = map ( int , input ( ) . split ( ) )
ソートされた順序を保ったまま <name5> を <name1> に挿入できる位置を <name4> とする	<name4> = bisect . bisect_left ( <name1> , <name5> )	<name4> = bisect . bisect_left ( <name1> , <name5> )
<name4> の <name5> 番目のキーと値の集まりの各要素を <name6> 、 <name2> とし、 <name2> に <name3> の <name6> 番目を加えた値の列の最小値を <name1> の <name5> 番目にする	<name1> [ <name5> ] = min ( [ <name2> + <name3> [ <name6> ] for <name6> , <name2> in <name4> [ <name5> ] . items ( ) ] )	<name6> [ <name5> ] = min ( [ <name2> + <name3> [ <name6> ] for <name6> , <name2> in <name4> [ <name5> ] . items ( ) ] )
( ( <val3> ) からなる列の <val3> から <name5> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <name1> に <val2> を加えた値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val3> ] * [ ( <name1> + <val2> ) for <name4> in range ( <name5> + <val2> ) ] ]	<name6> = [ [ <val3> ] * [ ( <name1> + <val2> ) for <name4> in range ( <name5> + <val2> ) ] ]
<name4> から <name1> を引いた値が <name6> 以下のとき、	if <name4> - <name1> <= <name6> :	if <name4> - <name1> <= <name6> :
<name6> が <name1> の <name6> より小さいとき、	if <name6> < <name1> . <name6> :	list ( <name6> < <name1> . <name6> ) :
<name4> ( <name5> [ : ] ) を <name3> とする	<name3> = <name4> ( <name5> [ : ] )	else = <name4> ( <name5> [ : ] )
<val6> から <name3> の最大値に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , max ( <name3> ) + <val1> ) :	) for <name5> in range ( <val6> , max ( <name3> ) + <val1> ) :
<name3> . <name5> ( <name4> ) を <name6> とする	<name6> = <name3> . <name5> ( <name4> )	<name6> = <name3> . <name5> ( <name4> )
<name1> の <name4> 番目の末尾に ( <name3> 、 <name5> ) の組を追加する	<name1> [ <name4> ] . append ( ( <name3> , <name5> ) )	not <name1> [ <name4> ] . append ( ( <name3> , <name5> ) )
<name3> の <name4> 番目を <name4> とする	<name4> = <name3> [ <name4> ]	<name4> = <name3> [ <name4> ]
<name1> を <name2> で割った商を出力する	print ( <name1> // <name2> )	print ( <name1> // <name2> )
<name2> を <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name2>	( <name4> [ <val5> ] = <name2> )
<val1> の <val3> 乗を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <val1> ** <val3>	( <name4> [ <name2> ] = <val1> ** <val3> )
<name6> ( <name1> [ <val4> ] , <name1> [ -1 ] ) を <name2> とする	<name2> = <name6> ( <name1> [ <val4> ] , <name1> [ - 1 ] )	<name2> = <name6> ( <name1> [ <val4> ] , <name1> [ - 1 ] )
<name4> の長さから <val1> を引いた値から -1 未満までの -1 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name4> ) - <val1> , - <val1> , - <val1> ) :	. for <name5> in range ( len ( <name4> ) - <val1> , - <val1> , - <val1> ) :
<name3> ( <name1> [ <val2> ] )	<name3> ( <name1> [ <val2> ] )	<name3> ( <name1> [ <val2> ] )
<name6> が <name4> の <name5> の <name4> の <name3> 番目と等しいとき、	if <name6> == <name4> . <name5> [ <name4> . <name3> ] :	for <name6> in <name4> . <name5> [ <name4> . <name3> ] :
<name6> の <val1> 番目から <name2> を引いた値の <val4> 乗が <name3> 以上のとき、	if ( <name6> [ <val1> ] - <name2> ) ** <val4> >= <name3> :	>= ( <name6> [ <val1> ] - <name2> ) ** <val4> >= <name3> :
<name4> の <name3> から <val5> を引いた値番目の <name1> 番目から <name2> の <val6> に <name3> を掛けた値から <val6> を引いた値番目を引いた値から <name2> の <val6> に <name3> を掛けた値から <val5> を引いた値番目を引いた値を <name4> の <name3> 番目の <name1> 番目にする	<name4> [ <name3> ] [ <name1> ] = <name4> [ <name3> - <val5> ] [ <name1> ] - <name2> [ <val6> * <name3> - <val6> ] - <name2> [ <val6> * <name3> - <val5> ]	( <name4> [ <name3> ] [ <name1> ] = <name4> [ <name3> - <val5> ] [ <name1> ] - <name2> [ <val6> * <name3> - <val6> ] - <name2> [ <val6> * <name3> - <val5> ] )
<name3> に <name3> を掛けた値に <name4> を掛けた値を <name6> とする	<name6> = <name3> * <name3> * <name4>	( <name6> = <name3> * <name3> * <name4> )
<name3> の <name5> 番目の順列を順に <name4> として、繰り返す	for <name4> in permutations ( <name3> [ <name5> ] ) :	. for <name4> in permutations ( <name3> [ <name5> ] ) :
<name3> のキーと値の集まりの <name3> のキーと値の集まりの長さから <val6> を引いた値番目を返す	return <name3> . items [ len ( <name3> . items ) - <val6> ]	x return <name3> . items [ len ( <name3> ) - <val6> ]
( ( <val1> 、 <val2> ) からなる列、 ( <val2> 、 <val1> ) からなる列 ) からなる列	[ [ <val1> , <val2> ] , [ <val2> , <val1> ] ]	<name4> [ [ <val1> , <val2> ] , [ <val2> , <val1> ] ]
( <name6> の <name1> 番目、 os . <name4> の逆順 ) の組を返す	return ( <name6> [ <name1> ] , <name4> [ : : - 1 ] )	yield ( <name6> [ <name1> ] , <name4> [ : : - 1 ] )
( ( <val6> 、 -1 ) の組、 ( <val6> 、 <val4> ) の組、 ( -1 、 <val6> ) の組、 ( <val4> 、 <val6> ) の組 ) の組を <name5> とする	<name5> = ( ( <val6> , - <val4> ) , ( <val6> , <val4> ) , ( - <val4> , <val6> ) , ( <val4> , <val6> ) )	<name5> = ( ( <val6> , - <val6> ) , ( <val6> , <val4> ) , ( - <val6> , <val6> ) , ( <val4> , <val6> ) )
無限の整数列の <name5> から <name4> を引いた値番目を <val6> だけ増加させる	count [ <name5> - <name4> ] += <val6>	& count [ <name5> - <name4> ] += <val6>
<name6> を <name3> から <val4> を引いた値で割った商を出力する	print ( <name6> // ( <name3> - <val4> ) )	print ( <name6> // ( <name3> - <val4> ) )
<name6> の末尾に <name4> の <name1> 番目を追加する	<name6> . append ( <name4> [ <name1> ] )	<name3> . append ( <name4> [ <name1> ] )
<name6> の <val3> 番目から、つまり末尾までの部分列が <name2> に含まれるとき <val1> 、そうでなければ <val4> を出力する	print ( <val1> if <name6> [ <val3> : ] in <name2> else <val4> )	print ( <val1> if <name6> [ <val3> : ] in <name2> else <val4> )
未定値を <name5> の <name4> にする	<name5> . <name4> = None	None . <name4> = None
区切りなしで <val2> を代わりの行末として <name1> 、 <val6> を出力する	print ( <name1> , <val6> , sep = '' , end = <val2> )	print ( <name1> , <val6> , sep = <val2> , end = '' )
<val5> を <name3> の <name4> 番目の <name4> 番目にする	<name3> [ <name4> ] [ <name4> ] = <val5>	( <name3> [ <name4> ] [ <name4> ] = <val5> )
<name3> ( <name2> . <name5> ( ) )	<name3> ( <name2> . <name5> ( ) )	<name4> ( <name2> . <name5> ( ) )
{}を出力する	print ( { x >> 1 : 032 b } )	print ( { ( x & 2 ) } )
<val2> を <name1> の <name5> に <val4> を掛けた値に <name3> を加えた値番目にする	<name1> [ <name5> * <val4> + <name3> ] = <val2>	<name4> [ <name1> [ <name5> * <val4> + <name3> ] = <val2>
真を <name6> の <name1> 番目の <val3> 番目にする	<name6> [ <name1> ] [ <val3> ] = True	( <name6> [ <name1> ] [ <val3> ] = True )
<name2> の <name4> の <val1> 番目、 <name2> の <name4> の <val5> 番目、 <name2> の <name4> の <val3> 番目、 <name2> の <name4> の先頭を <name2> の <name4> の先頭、 <name2> の <name4> の <val1> 番目、 <name2> の <name4> の <val5> 番目、 <name2> の <name4> の <val3> 番目とする	<name2> . <name4> [ 0 ] , <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val3> ] = <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val3> ] , <name2> . <name4> [ 0 ]	. <name2> . <name4> [ 0 ] , <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val3> ] = <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val3> ] , <name2> . <name4> [ 0 ]
<name1> を <name2> . <name6> ( <name3> ) に <val4> を加えた値の <val5> 進数文字列の <val5> 番目から、つまり末尾までの部分列の文字列を長さ <val1> になるように '0' 左詰めした文字列だけ増加させる	<name1> += str ( bin ( <name2> . <name6> ( <name3> ) + <val4> ) [ <val5> : ] ) . zfill ( <val1> )	<name1> += str . bin ( <name2> . <name6> ( <name3> ) + <val4> [ <val5> : ] ) . zfill ( <val1> )
<name6> の各要素に整数を適用した列を <name6> とする	<name6> = map ( int , <name6> )	( <name6> = map ( int , <name6> ) )
( <val4> ) からなる列の <name3> 回分の列を <name5> とする	<name5> = [ <val4> ] * <name3>	else = [ <val4> ] * <name3>
<val5> に <name6> を掛けた値に <name1> の整数値を加えた値を <name6> とする	<name6> = <val5> * <name6> + int ( <name1> )	<name6> = <val5> * <name6> + int ( <name1> )
<name2> の末尾に ( <name5> ) からなる列の <name6> に <val3> を加えた値回分の列を追加する	<name2> . append ( [ <name5> ] * ( <name6> + <val3> ) )	input . append ( [ <name5> ] * ( <name6> + <val3> ) )
<name2> と <name6> の最大公約数、 <name2> に <name6> を掛けた値を <name2> と <name6> の最大公約数で割った商を出力する	print ( gcd ( <name2> , <name6> ) , <name2> * <name6> // gcd ( <name2> , <name6> ) )	print ( gcd ( <name2> , <name6> ) , ( <name2> * <name6> ) // gcd ( <name2> , <name6> ) )
<name3> から <name4> を引いた値の <val6> 乗に <name2> から <name1> を引いた値の <val6> 乗を加えた値の平方根を <name5> とする	<name5> = math . sqrt ( ( <name3> - <name4> ) ** <val6> + ( <name2> - <name1> ) ** <val6> )	<name5> = math . sqrt ( ( <name3> - <name4> ) ** <val6> + ( <name2> - <name1> ) ** <val6> )
<name4> の <name3> 番目から <name4> の <name6> から <val2> を引いた値番目に <name1> ( <name3> - <name6> + <val2> ) を掛けた値を引いた値を <name5> で割った余りを <name5> とする	<name5> = ( <name4> [ <name3> ] - <name4> [ <name6> - <val2> ] * <name1> ( <name3> - <name6> + <val2> ) ) % <name5>	<name5> = ( <name4> [ <name3> ] - <name4> [ <name6> - <val2> ] * <name1> ( <name3> - <name6> + <val2> ) ) % <name5>
<name4> に <name3> を加えた値を <name5> とする <name4> に <name2> を加えた値を <name6> とする	<name5> = <name4> + <name3> <name6> = <name4> + <name2>	<name2> = <name4> + <name3> <name6> = <name4> + <name2>
( <name3> の <val6> 番目から <name3> の <val4> 番目を引いた値、 <name3> の <val2> 番目から <name3> の <val5> 番目を引いた値 ) の組を <name1> とする	<name1> = ( <name3> [ <val6> ] - <name3> [ <val4> ] , <name3> [ <val2> ] - <name3> [ <val5> ] )	<name1> = ( <name3> [ <val6> ] - <name3> [ <val4> ] , <name3> [ <val2> ] - <name3> [ <val5> ] )
<val6> を順に <name5> として、繰り返す	for <name5> in <val6> :	. for <name5> in <val6> :
改行せずに <val6> 、 <name3> の <name5> を出力する	print ( <val6> , <name3> . <name5> , end = <val6> )	dict . print ( <val6> , <name3> . <name5> , end = <val6> )
<name5> の <name6> 、 <name1> に <name3> を加えた値の最小値番目を <val2> だけ減少させる	<name5> [ min ( <name6> , <name1> + <name3> ) ] -= <val2>	[ min ( <name5> [ min ( <name6> , <name1> + <name3> ) ] ) ] -= <val2>
( <val5> ) からなる列の <name2> に <val4> を加えた値回分の列を <name1> とする	<name1> = [ <val5> ] * ( <name2> + <val4> )	<name1> = [ <val5> ] * ( <name2> + <val4> )
<name5> に対応する値、もし存在しなければ <name2> 、 <val6> に <val3> を加えた値を <name5> の <name2> 番目にする	<name5> [ <name2> ] = <name5> . get ( <name2> , <val6> ) + <val3>	) <name5> [ <name2> ] = <name5> . get ( <name2> , <val6> ) + <val3>
<name5> の <name2> が、つまり未定値と等しいとき、	if <name5> . <name2> is not None :	: if <name5> . <name2> is not None :
<name3> の、つまり先頭から <name1> 番目までの部分列を <name3> とする	<name3> = <name3> [ : <name1> ]	else = <name3> [ : <name1> ]
<name1> が <val4> より小さいとき、 <blk> <name2> を <name6> 、 <val4> の最小値から <name1> を引いた値に <name3> を掛けた値だけ増加させる </blk>	if <name1> < <val4> : <blk> <name2> += ( min ( <name6> , <val4> ) - <name1> ) * <name3> </blk>	if <name1> < <val4> : <blk> <name2> += ( min ( <name6> , <val4> ) - <name1> ) * <name3> </blk>
<name6> の <name1> の <name5> 番目が <name6> の <name1> の <name3> 番目より小さいとき、	if <name6> . <name1> [ <name5> ] < <name6> . <name1> [ <name3> ] :	list ( <name6> . <name1> [ <name5> ] < <name6> . <name1> [ <name3> ] ) :
<name6> の <name4> 番目に <name5> の <name4> 番目を加えた値を <val1> だけ左シフトした値に <name2> の <name4> 番目を <val3> だけ左シフトした値を加えた値に <name2> の <name4> 番目を加えた値を <name3> とする	<name3> = ( ( <name6> [ <name4> ] + <name5> [ <name4> ] ) << <val1> ) + ( <name2> [ <name4> ] << <val3> ) + <name2> [ <name4> ]	<name3> = ( <name6> [ <name4> ] + <name5> [ <name4> ] ) << <val1> + ( <name2> [ <name4> ] << <val3> ) + <name2> [ <name4> ]
0 から <name2> 未満までの数列の各要素を <name6> とし、 <val5> に入力された文字列を加えた値に <val5> を加えた値の列を <name1> とする	<name1> = [ <val5> + input ( ) + <val5> for <name6> in range ( <name2> ) ]	<name6> = [ <val5> + input ( ) + <val5> for <name6> in range ( <name2> ) ]
<name5> の <name1> 、 <name5> の <name3> 、 <name5> の <name4> 、 <name5> の <name2> を <name5> の <name2> 、 <name5> の <name1> 、 <name5> の <name3> 、 <name5> の <name4> とする	<name5> . <name2> , <name5> . <name1> , <name5> . <name3> , <name5> . <name4> = <name5> . <name1> , <name5> . <name3> , <name5> . <name4> , <name5> . <name2>	<name4> . <name2> , <name5> . <name1> , <name5> . <name3> , <name5> . <name4> = <name5> . <name1> , <name5> . <name3> , <name5> . <name4> , <name5> . <name2>
<name5> の <val1> 番目、 <name3> の最小値を <name5> の <val1> 番目にする	<name5> [ <val1> ] = min ( <name5> [ <val1> ] , <name3> )	) [ <val1> ] = min ( <name5> [ <val1> ] , <name3> )
<val3> 〜 <name4> から <val3> を引いた値の整数乱数を <name2> とする	<name2> = random . randint ( <val3> , <name4> - <val3> )	<name2> = random . randint ( <val3> , <name4> - <val3> )
<name6> の <name2> -1 番目の <name4> 番目の <val3> 番目に <name6> の <name2> 番目の <name4> から <val5> を引いた値番目の <val3> 番目を加えた値から <name6> の <name2> から <val5> を引いた値番目の <name4> から <val5> を引いた値番目の先頭を引いた値を <name6> の <name2> 番目の <name4> 番目の <val3> 番目にする	<name6> [ <name2> ] [ <name4> ] [ <val3> ] = <name6> [ <name2> - <val5> ] [ <name4> ] [ <val3> ] + <name6> [ <name2> ] [ <name4> - <val5> ] [ <val3> ] - <name6> [ <name2> - <val5> ] [ <name4> - <val5> ] [ <val3> ]	<name5> [ <name2> ] [ <name4> ] [ <val3> ] = <name6> [ <name2> - <val5> ] [ <name4> ] [ <val3> ] + <name6> [ <name2> ] [ <name4> - <val5> ] [ <val3> ] - <name6> [ <name2> - <val5> ] [ <name4> - <val5> ] [ <name4> - <val1> ] [ <name4> - <val5> ]
<name5> に <name3> を加えた値の文字列の長さを出力する	print ( len ( str ( <name5> + <name3> ) ) )	<name5> print ( len ( str ( <name5> + <name3> ) ) )
<name4> ( <name6> . <name3> - <name6> . <name2> ) を <name1> とする	<name1> = <name4> ( <name6> . <name3> - <name6> . <name2> )	<name1> = <name4> ( <name6> . <name3> - <name6> . <name2> )
<name6> の <name3> 番目を展開し、それぞれ <name5> 、 <name2> 、 <name4> とする	<name5> , <name2> , <name4> = <name6> [ <name3> ]	( <name5> , <name2> , <name4> = <name6> [ <name3> ] )
<name5> の <name1> を <val4> に <name5> の <name2> の <name3> 、 <val6> を取り出した値を掛けた値だけ増加させる	<name5> . <name1> += <val4> * <name5> . <name2> . pop ( <name3> , <val6> )	<name1> += <val4> * <name5> . <name2> . pop ( <name3> , <val6> )
<name5> . <name6> ( [ <val4> , <val2> , <val2> ] , <name5> . <name3> ( [ <val1> , <val2> , <val1> , <val2> , <val1> , <val5> , <val2> , <val5> ] ) ) を <name1> とする	<name1> = <name5> . <name6> ( [ <val4> , <val2> , <val2> ] , <name5> . <name3> ( [ <val1> , <val2> , <val1> , <val2> , <val1> , <val5> , <val2> , <val5> ] ) )	<name1> = <name5> . <name6> ( [ <val4> , <val2> , <val2> ] , <name5> . <name3> ( [ <val1> , <val2> , <val1> , <val2> , <val5> , <val2> , <val5> ] ) )
<name6> の <name4> 番目の <name5> 番目でないとき、	if not <name6> [ <name4> ] [ <name5> ] :	while not <name6> [ <name4> ] [ <name5> ] :
<name4> を <name2> とする	<name2> = <name4>	( <name2> = <name4> ' )
<name5> が <name2> の <name6> 番目の <val3> 番目から <name2> の <name1> 番目の <val3> 番目を引いた値より小さいとき、	if <name5> < <name2> [ <name6> ] [ <val3> ] - <name2> [ <name1> ] [ <val3> ] :	isinstance ( <name5> < <name2> [ <name6> ] [ <val3> ] - <name2> [ <name1> ] [ <val3> ] ) :
<name4> の <val6> 乗が <name5> 以下の間、次を繰り返す	while <name4> ** <val6> <= <name5> :	for <name4> in <name4> ** <val6> <= <name5> :
空列を <name3> とする	<name3> = [ ]	( <name3> = [ ] )
<name5> の各要素を <name1> とし、 <name1> の最大値の列の最大値を出力する	print ( max ( [ max ( <name1> ) for <name1> in <name5> ] ) )	print ( max ( [ max ( <name1> ) for <name1> in <name5> ] ) )
<name5> から <val6> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> , <val6> ) :	) : for <name4> in range ( <name5> , <val6> ) :
<val2> が <name6> 以下かどうかが <name4> より小さくかつ <val2> が <name5> 以下かどうかが <name1> より小さくかつ <name3> の <name5> 番目の <name6> 番目が <val2> と等しくなくかつ <val6> を書式として <name5> 、 <name6> で整形した文字列が <name4> に含まれないとき、	if ( <val2> <= <name6> < <name4> ) and ( <val2> <= <name5> < <name1> ) and <name3> [ <name5> ] [ <name6> ] != <val2> and <val6> . format ( <name5> , <name6> ) not in <name4> :	isinstance ( <val2> <= <name6> < <name4> and <val2> <= <name5> < <name1> ) and ( <name3> [ <name5> ] [ <name6> ] != <val2> ) and <val6> . format ( <name5> , <name6> ) not in <name4> :
<name5> が <name4> と等しくないとき、	if <name5> != <name4> :	while <name5> != <name4> :
<val5> を <name1> の先頭にする	<name1> [ <val5> ] = <val5>	( <name1> [ <val5> ] = <val5> )
\\\ n を間に入れて <name4> の各要素に整数を適用した列を連結した文字列を出力する\	\ print ( '\\n' . join ( map ( str , <name4> ) ) ) \	\ print ( '\\n' . join ( map ( str , <name4> ) ) ) \
<name4> の整数値が <name1> に含まれるとき、	if int ( <name4> ) in <name1> :	for <name4> in int ( <name4> ) in <name1> :
<name5> が <name1> の <name3> に <name4> を加えた値番目の <name2> 番目から <name2> に <name6> を加えた値までの部分列と等しくないとき、	if not <name5> == <name1> [ <name3> + <name4> ] [ <name2> : <name2> + <name6> ] :	!= <name5> != <name1> [ <name3> + <name4> ] [ <name2> : <name2> + <name6> ] :
<name2> に <name3> を加えた値に <name5> を加えた値に <name4> を加えた値が <name1> と等しいとき、 <blk> <name6> を <val2> だけ増加させる </blk>	if <name2> + <name3> + <name5> + <name4> == <name1> : <blk> <name6> += <val2> </blk>	if <name2> + <name3> + <name5> + <name4> == <name1> : <blk> <name6> += <val2> </blk>
<name6> 内の <val5> を <name3> で置き換えた文字列を <name4> とする	<name4> = <name6> . replace ( <val5> , <name3> )	<name4> = <name6> . replace ( <val5> , <name3> )
<name4> に <name4> を掛けた値に <name5> に <name5> を掛けた値を加えた値が <name3> に <name3> を掛けた値と等しいとき、	if <name4> * <name4> + <name5> * <name5> == <name3> * <name3> :	for <name4> in <name4> * <name4> + <name5> * <name5> == <name3> * <name3> :
<name2> の整数値から <val4> を引いた値を <name2> とする	<name2> = int ( <name2> ) - <val4>	<name6> <name2> = int ( <name2> ) - <val4>
<name3> を <name3> と <name2> の最大公約数で割った商に <name2> を掛けた値を返す	return <name3> // gcd ( <name3> , <name2> ) * <name2>	x return <name3> // gcd ( <name3> , <name2> ) * <name2>
<name3> を <name1> の階乗で割った商を <name4> で割った余りを <name3> とする	<name3> = ( <name3> // math . factorial ( <name1> ) ) % <name4>	<name3> = <name3> // factorial ( <name1> ) % <name4>
<name6> が <val2> より大きいとき、	if <name6> > <val2> :	> if <name6> > <val2> :
<name3> の <val6> 番目の整数値を <name2> とする	<name2> = int ( <name3> [ <val6> ] )	<name2> = int ( <name3> [ <val6> ] )
偽を <name3> の <name5> 番目にする	<name3> [ <name5> ] = False	( <name3> [ <name5> ] = False )
<name1> の -1 番目を <name3> で割った値を <name1> の -1 番目にする	<name1> [ - 1 ] = <name1> [ - 1 ] / <name3>	<name4> [ <name1> - 1 ] = <name1> [ - 1 ] / <name3>
<name6> ( <name1> . <name3> - <name1> . <name2> ) を <name5> とする	<name5> = <name6> ( <name1> . <name3> - <name1> . <name2> )	else = <name6> ( <name1> . <name3> - <name1> . <name2> )
<name5> の <name1> に <name6> の <name1> を掛けた値に <name5> の <name2> に <name6> の <name2> を掛けた値を加えた値を返す	return <name5> . <name1> * <name6> . <name1> + <name5> . <name2> * <name6> . <name2>	x return <name5> . <name1> * <name6> . <name1> + <name5> . <name2> * <name6> . <name2>
<name1> の末尾に ( <name5> 、 <name6> 、 <name3> ) の組を追加する	<name1> . append ( ( <name5> , <name6> , <name3> ) )	<name1> . append ( ( <name5> , <name6> , <name3> ) )
<name6> が <name1> の <name4> 番目の <name2> 番目より小さいとき、 <blk> <name6> 、 <name6> を <name1> の <name4> 番目の <name2> 番目、 <name1> の <name2> 番目の <name4> 番目とする </blk>	if <name6> < <name1> [ <name4> ] [ <name2> ] : <blk> <name1> [ <name4> ] [ <name2> ] , <name1> [ <name2> ] [ <name4> ] = <name6> , <name6> </blk>	if <name6> < <name1> [ <name4> ] [ <name2> ] : <blk> <name1> [ <name4> ] [ <name2> ] , <name1> [ <name2> ] [ <name4> ] = <name6> , <name6> </blk>
<name5> の先頭が <val4> と等しいとき、	if <name5> [ 0 ] == <val4> :	: if <name5> [ 0 ] == <val4> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name1> 、 <name6> とする	<name3> , <name4> , <name1> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name1> , <name6> = map ( int , input ( ) . split ( ) )
<name4> の <name1> 番目内の <val5> を <val3> で置き換えた文字列を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name4> [ <name1> ] . replace ( <val5> , <val3> )	<name4> [ <name1> ] = <name4> [ <name1> ] . replace ( <val5> , <val3> )
<name2> から <name5> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> , <name5> ) :	continue for <name6> in range ( <name2> , <name5> ) :
<name3> の各要素を <name2> 、 <name4> とし、 <name4> の列の総和を出力する	print ( sum ( [ <name4> for <name2> , <name4> in <name3> ] ) )	) print ( sum ( [ <name4> for <name2> , <name4> in <name3> ] ) )
<name4> の整数値を返す	return int ( <name4> )	yield int ( <name4> )
<name5> の長さを出力する	print ( len ( <name5> ) )	print ( len ( <name5> ) )
<name1> の <name6> 番目を <name1> の <name6> に <name4> を加えた値番目にする	<name1> [ <name6> + <name4> ] = <name1> [ <name6> ]	<name4> [ <name1> [ <name6> + <name4> ] ] = <name1> [ <name6> ]
<name2> の <name6> を <name2> の <name3> の <name1> にする	<name2> . <name3> . <name1> = <name2> . <name6>	<name6> . <name3> . <name1> = <name2> . <name6>
<name2> を <name2> と - <name2> の論理積だけ減少させる	<name2> -= <name2> & - <name2>	<name2> -= <name2> & - <name2>
<name3> の先頭の <name6> 番目が <val5> と等しいとき、 <blk> <val2> を <name1> の先頭の <name6> 番目にする </blk>	if <name3> [ <val5> ] [ <name6> ] == <val5> : <blk> <name1> [ <val5> ] [ <name6> ] = <val2> </blk>	if <name3> [ 0 ] [ <name6> ] == <val5> : <blk> <name1> [ 0 ] [ <name6> ] = <val2> </blk>
<name4> の <name6> と等しい要素の最初の位置を <name1> とする	<name1> = <name4> . index ( <name6> )	<name1> = <name4> . index ( <name6> )
<val1> に <name2> を掛けた値に <name4> を加えた値を返す	return <val1> * <name2> + <name4>	x = <val1> * <name2> + <name4>
<name6> の先頭に <name4> の <val2> 番目を追加する	<name6> . appendleft ( <name4> [ <val2> ] )	<name3> . appendleft ( <name4> [ <val2> ] )
<name3> . <name4> ( <name6> * -1 , <name1> ) が <val5> 以下のとき、	if <name3> . <name4> ( <name6> * - 1 , <name1> ) <= <val5> :	for <name3> in <name3> . <name4> ( <name6> * - 1 , <name1> ) <= <val5> :
<val1> を間に入れて <name6> の各要素に整数を適用した列を連結した文字列を <name5> とする	<name5> = <val1> . join ( map ( str , <name6> ) )	<name4> = <val1> . join ( map ( str , <name6> ) )
<val6> に <name1> を掛けた値に <val4> を加えた値を <name3> とする <val6> に <name1> を掛けた値に <val6> を加えた値を <name2> とする	<name3> = <val6> * <name1> + <val4> <name2> = <val6> * <name1> + <val6>	else = <val6> * <name1> + <val4> <name2> = <val6> * <name1> + <val6>
<name1> ( <name5> ) のとき、	if <name1> ( <name5> ) :	isinstance ( <name1> ( <name5> ) ) :
改行せずに <name4> を <val5> で割った値の整数値を出力する	print ( int ( <name4> / <val5> ) , end = '' )	str = int ( <name4> / <val5> ) , end = '' )
<name3> の <name4> に <val6> を加えた値番目を <name2> を <val1> で割った商に <val6> を加えた値だけ増加させる	<name3> [ <name4> + <val6> ] += <name2> // <val1> + <val6>	<name3> [ <name4> + <val6> ] += <name2> // <val1> + <val6>
<name4> 、 <name1> から <name5> を引いた値の最大値を <name4> とする	<name4> = max ( <name4> , <name1> - <name5> )	<name4> = max ( <name4> , <name1> - <name5> )
<name3> の先頭が <val5> と等しいとき、 <blk> <name3> の <val1> 番目を <name2> の <name3> の <val6> 番目番目にする </blk>	if <name3> [ 0 ] == <val5> : <blk> <name2> [ <name3> [ <val6> ] ] = <name3> [ <val1> ] </blk>	for <name2> [ <name3> [ <val6> ] ] = <name3> [ 0 ] == <val5> : <blk> <name2> [ <name3> [ <val6> ] ] = <name3> [ <val1> ] </blk>
<name2> の <name1> が <name1> と等しくかつ <name2> の <name6> が <name4> と等しくないとき、	if <name2> . <name1> == <name1> and <name2> . <name6> is <name4> :	!= <name2> . <name1> == <name1> and <name2> . <name6> != <name4> :
<name6> の <name2> 番目を <val1> だけ増加させる <name6> の <name3> から <name2> を引いた値番目を <val1> だけ増加させる	<name6> [ <name2> ] += <val1> <name6> [ <name3> - <name2> ] += <val1>	<name2> [ <name2> ] += <val1> <name6> [ <name3> - <name2> ] += <val1>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> 、 <name3> 、 <name6> とする	<name2> , <name1> , <name3> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name6> = map ( int , input ( ) . split ( ) )
<name4> を <val6> に <name3> の <name5> 番目を掛けた値に <name3> の <name5> に <val1> を加えた値番目を加えた値だけ増加させる	<name4> += <val6> * <name3> [ <name5> ] + <name3> [ <name5> + <val1> ]	<name2> += <val6> * <name3> [ <name5> ] + <name3> [ <name5> + <val1> ]
<name2> を <name4> ( <val3> , <val6> ) で割った商を <name5> とする	<name5> = <name2> // <name4> ( <val3> , <val6> )	<name5> = <name2> // <name4> ( <val3> , <val6> )
<name1> の <name3> 番目を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name1> [ <name3> ]	( <name4> , <name5> = <name1> [ <name3> ] )
<name6> が <name4> に <name1> を加えた値に <name2> を加えた値より小さいとき、	if <name6> < <name4> + <name1> + <name2> :	while <name6> < <name4> + <name1> + <name2> :
( -1 ) からなる列の <name3> 回分の列を <name4> とする	<name4> = [ - 1 ] * <name3>	<name4> = [ - 1 ] * <name3>
<val3> に <name4> を掛けた値に <name5> を掛けた値から <name1> の <val6> 乗を引いた値の . <val2> 乗を <name2> とする	<name2> = ( <val3> * <name4> * <name5> - <name1> ** <val6> ) ** . <val2>	<name2> = ( <val3> * <name4> * <name5> - <name1> ** <val6> ) ** . <val2>
<name3> . <name2> ( <name6> ( [ <name3> . <name1> ( <name5> [ <name4> ] - <name3> [ <name4> ] ) ** <val2> foriinrange ( <name6> ) ] ) , <val1> / <val2> ) を <name4> とする	<name4> = <name3> . <name2> ( <name6> ( [ <name3> . <name1> ( <name5> [ <name4> ] - <name3> [ <name4> ] ) ** <val2> for <name4> in range ( <name6> ) ] ) , <val1> / <val2> )	<name5> = <name3> . <name2> ( <name6> ( [ <name3> . <name1> ( <name5> [ <name4> ] - <name3> [ <name4> ] ) ** <val2> for <name4> in range ( <name6> ) ] ) , <val1> / <val2> )
0 から <val5> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> ) :	( <name6> in range ( <val5> ) :
<name1> . <name5> ( <name3> + <name6> )	<name1> . <name5> ( <name3> + <name6> )	<name2> . <name5> ( <name3> + <name6> )
<val1> に <name6> を <val3> で割った余りを加えた値を <name5> とする	<name5> = <val1> + <name6> % <val3>	<name5> = <val1> + <name6> % <val3>
<name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , <name5> . readline ( ) . split ( ) ) )	<name1> = list ( map ( int , <name5> . readline ( ) . split ( ) ) )
<name4> に <name3> を加えた値を <name2> で割った余りを <name4> とする	<name4> = ( <name4> + <name3> ) % <name2>	<name4> = ( <name4> + <name3> ) % <name2>
<name5> が <name1> に <val2> を加えた値より小さいとき <name5> 、そうでなければ <val3> を出力する	print ( <name5> if <name5> < <name1> + <val2> else <val3> )	print ( <name5> if <name5> < <name1> + <val2> else <val3> )
<name6> を <val1> で割った余りが <val4> と等しいとき、 <blk> <name3> を <val5> だけ増加させる </blk>	if <name6> % <val1> == <val4> : <blk> <name3> += <val5> </blk>	list ( <name6> % <val1> == <val4> ) : <blk> <name3> += <val5> </blk>
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストを <name5> とする	<name5> = list ( map ( int , <name1> . readline ( ) . split ( ) ) )	<name5> = list ( map ( int , <name1> . readline ( ) . split ( ) ) )
<name5> の、つまり先頭から <name4> 番目までの部分列を <name1> とする	<name1> = <name5> [ : <name4> ]	<name1> = <name5> [ : <name4> ]
<name1> の末尾に ( <name5> に <val3> を加えた値、 <name6> ) の組を追加する	<name1> . append ( ( <name5> + <val3> , <name6> ) )	<name1> . append ( ( <name5> + <val3> , <name6> ) )
<name3> ( <val6> , <val6> , <name5> . <name4> // <val2> , <val6> ) を返す	return <name3> ( <val6> , <val6> , <name5> . <name4> // <val2> , <val6> )	x return <name3> ( <val6> , <val6> , <name5> . <name4> // <val2> , <val6> )
( ( <val4> 、 <val3> ) の組、 ( <val3> 、 <val4> ) の組、 ( <val3> 、 -1 ) の組、 ( <val4> 、 -1 ) の組、 ( -1 、 -1 ) の組、 ( -1 、 <val4> ) の組 ) の組を <name5> とする	<name5> = ( ( <val4> , <val3> ) , ( <val3> , <val4> ) , ( <val3> , - <val3> ) , ( <val4> , - <val3> ) , ( - <val3> , - <val3> ) , ( - <val3> , <val4> ) )	<name4> = ( ( <val4> , <val3> ) , ( <val3> , <val4> ) , ( <val3> , - <val4> ) , ( <val4> , - <val4> ) , ( - <val4> , - <val4> ) , ( - <val4> , - <val4> ) , ( <val4> , - <val4> ) )
0 から <name4> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の浮動小数点数の列を <name6> とする	<name6> = [ float ( input ( ) ) for <name1> in range ( <name4> ) ]	<name6> = [ float ( input ( ) ) for <name1> in range ( <name4> ) ]
<name4> を <name1> の ( <name2> 、 <name3> ) の組番目にする	<name1> [ ( <name2> , <name3> ) ] = <name4>	<name4> [ ( <name2> , <name3> ) ] = <name4>
( <val1> ) からなる列の <val6> 回分の列を <name4> とする	<name4> = [ <val1> ] * <val6>	<name4> = [ <val1> ] * <val6>
<name4> に - - <name3> を <val2> で割った商を掛けた値を出力する	print ( <name4> * ( - ( - <name3> // <val2> ) ) )	<name4> print ( <name4> * ( - <name3> // <val2> ) )
( <val1> ) からなる列の <val5> に <name2> を掛けた値回分の列を <name6> とする	<name6> = [ <val1> ] * ( <val5> * <name2> )	<name6> = [ <val1> ] * ( <val5> * <name2> )
<name4> を <name3> で割った余りが <val2> と等しい間、次を繰り返す	while <name4> % <name3> == <val2> :	del <name4> % <name3> == <val2> :
<name6> を <name5> で割った値の平方根を <name4> とする	<name4> = math . sqrt ( <name6> / <name5> )	<name4> = math . sqrt ( <name6> / <name5> )
<name2> から <name6> に <name4> を加えた値に <name1> を加えた値を引いた値を <name5> とする	<name5> = <name2> - ( <name6> + <name4> + <name1> )	<name5> = <name2> - ( <name6> + <name4> + <name1> )
<name6> または <name2> または <name3> のとき、	if <name6> or <name2> or <name3> :	list ( <name6> ) or <name2> or <name3> :
<name5> . <name2> ( <name1> ( <name5> . <name6> , <name4> ) ) を <name5> . <name3> ( ) の <val5> 乗で割った値を <name3> とする	<name3> = <name5> . <name2> ( <name1> ( <name5> . <name6> , <name4> ) ) / pow ( <name5> . <name3> ( ) , <val5> )	<name3> = <name5> . <name2> ( <name1> ( <name5> . <name6> , <name4> ) ) / pow ( <name5> . <name3> ( ) , <val5> )
<name4> が <name6> と等しいかどうかが -1 と等しいとき、	if <name4> == <name6> == - 1 :	for <name4> == <name6> == - 1 :
<val2> を間に入れて <name6> をソートした列の逆順を連結した文字列の整数値を <name5> とする	<name5> = int ( <val2> . join ( sorted ( <name6> ) [ : : - <val2> ] ) )	( <name5> = int ( <val2> . join ( sorted ( <name6> , reverse = True ) ) [ : : - 1 ] ) )
<name4> が <name2> の <val3> 乗より小さい間、次を繰り返す	while <name4> < ( <name2> ** <val3> ) :	del <name4> < <name2> ** <val3> :
<name4> の先頭に <val3> を掛けた値に <name4> の <val1> 番目に <val5> を掛けた値を加えた値に <name4> の <val6> 番目に <val2> を掛けた値を加えた値に <name4> の <val4> 番目を加えた値を <name2> とする	<name2> = <name4> [ 0 ] * <val3> + <name4> [ <val1> ] * <val5> + <name4> [ <val6> ] * <val2> + <name4> [ <val4> ]	<name2> = <name4> [ 0 ] * <val3> + <name4> [ <val1> ] * <val5> + <name4> [ <val6> ] * <val2> + <name4> [ <val4> ]
<val2> が <name3> 以下かどうかが <name1> より小さくなくまたは <val2> が <name5> 以下かどうかが <name1> より小さくないとき、	if not <val2> <= <name3> < <name1> or not <val2> <= <name5> < <name1> :	[ if not <val2> <= <name3> < <name1> or not <val2> <= <name5> < <name1> :
0 から <name2> に <val6> を加えた値未満までの数列の各要素を <name4> とし、 -1 の列を <name1> とする	<name1> = [ - <val6> for <name4> in range ( <name2> + <val6> ) ]	<name4> = [ - <val6> for <name4> in range ( <name2> + <val6> ) ]
<name2> 、 <name1> の要素をそれぞれ組にした列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in zip ( <name2> , <name1> ) :	( <name6> , <name3> in zip ( <name2> , <name1> ) :
<name5> の <val4> 番目から、つまり末尾までの部分列を <name5> とする	<name5> = <name5> [ <val4> : ]	<name5> = <name5> [ <val4> : ]
<name1> の末尾の <name6> 番目を <name4> とする	<name4> = <name1> [ - 1 ] [ <name6> ]	<name4> = <name1> [ - 1 ] [ <name6> ]
<val4> を書式として <name5> の x 座標、 <name5> の y 座標、 <name6> の x 座標、 <name6> の y 座標で整形した文字列を出力する	print ( <val4> . format ( <name5> . x , <name5> . y , <name6> . x , <name6> . y ) )	print ( <val4> . format ( <name5> . x , <name5> . y , <name6> . x , <name6> . y ) )
<name3> の各要素を <name5> とし、 <name5> を <val4> で割った余りでないときの <name5> の列を <name2> とする	<name2> = [ <name5> for <name5> in <name3> if not <name5> % <val4> ]	( <name2> = [ <name5> for <name5> in <name3> if not <name5> % <val4> ] )
<name1> の <name6> の <name3> 番目が <name4> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name1> . <name6> [ <name3> ] == <name4> : <blk> continue </blk>	\ if <name1> . <name6> [ <name3> ] == <name4> : <blk> continue </blk>
<name1> の <name6> の <val2> 番目、 <name1> の <name6> の <val3> 番目、 <name1> の <name6> の <val5> 番目、 <name1> の <name6> の先頭を <name1> の <name6> の先頭、 <name1> の <name6> の <val2> 番目、 <name1> の <name6> の <val3> 番目、 <name1> の <name6> の <val5> 番目とする	<name1> . <name6> [ 0 ] , <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val5> ] = <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val5> ] , <name1> . <name6> [ 0 ]	. <name1> [ <name6> [ 0 ] , <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val5> ] = <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val5> ] , <name1> . <name6> [ 0 ]
<name1> の <name4> 番目または <name5> の <name4> 番目でないとき、	if <name1> [ <name4> ] or not <name5> [ <name4> ] :	raise <name1> [ <name4> ] or not <name5> [ <name4> ] :
<name2> 、 <name1> の要素をそれぞれ組にした列の各要素を <name3> 、 <name4> とし、 <name3> が <name4> と等しいかどうかの列の総和、 0 から <val6> 未満までの数列の各要素を <name5> とし、 <name2> [ <name5> ] が <name1> [ <name5> ] と等しくなくかつ <name2> [ <name5> ] が <name1> に含まれるかどうかの列の総和を出力する	print ( sum ( [ <name3> == <name4> for <name3> , <name4> in zip ( <name2> , <name1> ) ] ) , sum ( [ <name2> [ <name5> ] != <name1> [ <name5> ] and <name2> [ <name5> ] in <name1> for <name5> in range ( <val6> ) ] ) )	end = sum ( [ <name3> == <name4> for <name3> in zip ( <name2> , <name1> ) ] ) , sum ( [ <name2> [ <name5> ] [ <name1> ] != <name5> and <name1> [ <name5> ] in <name1> for <name5> in zip ( <name1> ) ) ] ) ) )
<name3> ( <name6> - <name4> . <name1> ) を <name5> とする	<name5> = <name3> ( <name6> - <name4> . <name1> )	else = <name3> ( <name6> - <name4> . <name1> )
<val4> から <name5> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 <val4> から <name1> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <val4> の列の列を <name5> とする	<name5> = [ [ <val4> for <name2> in range ( <name1> + <val6> ) ] for <name3> in range ( <name5> + <val6> ) ]	<name5> = [ [ <val4> for <name2> in range ( <name1> + <val6> ) ] for <name3> in range ( <name5> + <val6> ) ]
{} {} {}を出力する	print ( { min } { max } { sum } )	<name2> . print ( set ( ) , . y )
0 から <name4> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列の列を <name6> とする	<name6> = [ input ( ) for <name2> in range ( <name4> ) ]	<name6> = [ input ( ) for <name2> in range ( <name4> ) ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列の総和を <name6> とする	<name6> = sum ( map ( int , input ( ) . split ( ) ) )	else = sum ( map ( int , input ( ) . split ( ) ) )
<name4> と <val5> を割ったときの ( 商を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = divmod ( <name4> , <val5> )	<name1> , <name6> = divmod ( <name4> , <val5> )
<name3> が <name6> より小さいとき、	if <name3> < <name6> :	while <name3> < <name6> :
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name5> とする	<name1> , <name4> , <name5> = map ( int , <name2> . split ( ) )	<name4> , <name5> = map ( int , <name2> . split ( ) )
<name5> ( <val1> ) をキーとして <name6> をソートした列を順に <name2> 、 <name3> として、繰り返す	for <name2> , <name3> in sorted ( <name6> , key = <name5> ( <val1> ) ) :	. <name2> , <name3> in sorted ( <name6> , key = <name5> ( <val1> ) ) :
<name1> を <name4> に <name2> の整数値を掛けた値だけ増加させる	<name1> += <name4> * int ( <name2> )	( <name1> += <name4> * int ( <name2> ) )
<name2> ( <name5> ) 、 <name2> ( <name4> ) を <name6> 、 <name1> とする	<name6> , <name1> = <name2> ( <name5> ) , <name2> ( <name4> )	<name6> , <name1> = <name2> ( <name5> ) , <name2> ( <name4> )
<name6> かつ <name3> が <name1> に <val5> を加えた値より小さい間、次を繰り返す	while <name6> and <name3> < <name1> + <val5> :	del <name6> and <name3> < <name1> + <val5> :
<name4> の先頭が <val3> と等しいとき、	if <name4> [ 0 ] == <val3> :	if <name4> [ 0 ] == <val3> :
<name6> の -1 を取り出した値	<name6> . pop ( - 1 )	<name1> . pop ( - 1 )
<name5> が <val2> より小さいとき、	if ( <name5> < <val2> ) :	: if <name5> < <val2> :
( <val3> 、 <val1> 、 <val2> 、 <val4> 、 <val6> ) からなる列を <name5> とする	<name5> = [ <val3> , <val1> , <val2> , <val4> , <val6> ]	<name5> = [ <val3> , <val1> , <val2> , <val4> , <val6> ]
<name4> を <val1> から <val3> を引いた値に <val5> に <name6> を掛けた値を掛けた値に <val1> から <val2> を引いた値に <name6> を掛けた値を加えた値だけ増加させる	<name4> += ( <val1> - <val3> ) * ( <val5> * <name6> ) + ( <val1> - <val2> ) * <name6>	( <name4> += ( <val1> - <val3> ) * ( <val5> * <name6> ) + ( <val1> - <val2> ) * <name6> )
<name2> が <name3> の <name4> と等しいとき、	if <name2> == <name3> . <name4> :	list if <name2> == <name3> . <name4> :
<name1> . <name6> ( <name3> , <name4> )	<name1> . <name6> ( <name3> , <name4> )	<name4> . <name6> ( <name3> , <name4> )
<val3> から <name1> 未満までの数列の逆順を順に <name5> として、繰り返す	for <name5> in range ( <val3> , <name1> ) [ : : - <val3> ] :	in range ( <val3> , <name1> ) [ : : - 1 ] :
<val4> に <name3> を掛けた値を <name5> とする <name5> に <val1> を加えた値を <name2> とする	<name5> = <val4> * <name3> <name2> = <name5> + <val1>	<name2> = <val4> * <name3> <name2> = <name5> + <val1>
<name4> 、 0 から <name1> 未満までの数列の要素をそれぞれ組にした列をソートした列を <name6> とする	<name6> = sorted ( zip ( <name4> , range ( <name1> ) ) )	( <name6> = sorted ( zip ( <name4> , range ( <name1> ) ) )
<name3> の <name5> の <name4> 番目と等しい要素の最初の位置を <name2> とする	<name2> = <name3> . index ( <name5> [ <name4> ] )	<name6> = <name3> . index ( <name5> [ <name4> ] )
<val3> を書式として <name5> の最小値、 <name5> の最大値で整形した文字列を出力する	print ( <val3> . format ( min ( <name5> ) , max ( <name5> ) ) )	print ( <val3> . format ( min ( <name5> ) , max ( <name5> ) ) )
<name3> ( <name4> , <name6> , <name5> )	<name3> ( <name4> , <name6> , <name5> )	( <name3> ( <name4> , <name6> , <name5> ) )
<name4> ( <name2> . <name3> + <name5> . <name3> , <name2> . <name1> + <name5> . <name1> ) を返す	return <name4> ( <name2> . <name3> + <name5> . <name3> , <name2> . <name1> + <name5> . <name1> )	x return <name4> ( <name2> . <name3> + <name5> . <name3> , <name2> . <name1> + <name5> . <name1> )
<name6> ( ) を順に <name5> として、繰り返す	for <name5> in <name6> ( ) :	for <name5> in <name6> ( ) :
( - <name4> 、 <name4> ) からなる列を <name3> とする ( - <name4> 、 <name4> ) からなる列を <name2> とする	<name3> = [ - <name4> , <name4> ] <name2> = [ - <name4> , <name4> ]	<name2> = [ - <name4> , <name4> ] <name2> = [ - <name4> , <name4> ]
<name5> の <name3> を順に <name6> として、繰り返す	for <name6> in <name5> . <name3> :	. for <name6> in <name5> . <name3> :
<name2> を <val5> で割った余りが <val1> と等しいとき、	if <name2> % <val5> == <val1> :	list ( <name2> % <val5> == <val1> :
0 から <name3> 未満までの数列の各要素を <name6> とし、 <name5> から読み込んだ一行を空白で分割した字句列の列を <name1> とする	<name1> = ( [ <name5> . readline ( ) . split ( ) for <name6> in range ( <name3> ) ] )	<name1> = [ <name5> . readline ( ) . split ( ) for <name6> in range ( <name3> ) ]
<name3> を <name2> に <val6> を掛けた値に <name1> に <val6> を掛けた値を加えた値だけ増加させる	<name3> += <name2> * <val6> + <name1> * <val6>	( <name3> += <name2> * <val6> + <name1> * <val6> )
無限の整数列を <name4> ( <name5> , <name6> ) だけ増加させる	count += <name4> ( <name5> , <name6> )	<name6> += count <name4> ( <name5> , <name6> )
入力された文字列の整数値、入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name3> 、 <name5> とする	<name3> , <name5> = int ( input ( ) ) , list ( map ( int , input ( ) . split ( ) ) )	<name5> = int ( input ( ) ) , list ( map ( int , input ( ) . split ( ) ) )
<name6> の平方根の整数値を <name5> とする	<name5> = int ( math . sqrt ( <name6> ) )	<name5> = int ( math . sqrt ( <name6> ) )
<name2> 、 <name4> に <name6> の <name4> 番目を <val3> で割った商を加えた値の最大値を <name2> とする	<name2> = max ( <name2> , <name4> + <name6> [ <name4> ] // <val3> )	<name2> = max ( <name2> , <name4> + <name6> [ <name4> ] // <val3> )
<name3> ( <name5> . <name1> [ <val2> : ] )	<name3> ( <name5> . <name1> [ <val2> : ] )	<name3> ( <name5> . <name1> [ <val2> : ] )
{ : . 6 f }を書式として <name6> ( ( <val1> , <val1> , <name3> ) , <name4> ) で整形した文字列を出力する	print ( '{:.6f}' . format ( <name6> ( ( <val1> , <val1> , <name3> ) , <name4> ) ) )	<val3> print ( '{:.6f}' . format ( <name6> ( ( <val1> , <val1> , <name3> ) , <name4> ) ) )
<name2> の <val6> に <val6> を挿入する	<name2> . insert ( <val6> , <val6> )	<name1> . insert ( <val6> , <val6> )
-1 を <name6> の <name2> 番目の <name3> 番目にする	<name6> [ <name2> ] [ <name3> ] = - 1	( <name6> [ <name2> ] [ <name3> ] = - 1 )
<name6> 、 <name1> の最小値を <name3> とする	<name3> = min ( <name6> , <name1> )	<name3> = min ( <name6> , <name1> )
<name1> の <name5> 番目の <val6> 番目を <name4> とする	<name4> = <name1> [ <name5> ] [ <val6> ]	<name4> = <name1> [ <name5> ] [ <val6> ]
<name1> の <name4> 番目から <name2> の <name6> から <val3> を引いた値番目を引いた値から <name5> から <val3> を引いた値を引いた値を <name5> とする	<name5> = <name1> [ <name4> ] - <name2> [ <name6> - <val3> ] - ( <name5> - <val3> )	<name6> = <name1> [ <name4> ] - <name2> [ <name6> - <val3> ] - ( <name5> - <val3> )
<name4> ( <name3> , <name6> ) を <name1> とする	<name1> = <name4> ( <name3> , <name6> )	<name1> = <name4> ( <name3> , <name6> )
<name5> のとき <val3> 、そうでなければ <val2> を <name5> とする	<name5> = <val3> if <name5> else <val2>	<name5> = <val3> if <name5> else <val2>
<name5> の、つまり先頭から <name4> から <val3> を引いた値までの部分列を <name6> とする	<name6> = <name5> [ 0 : <name4> - <val3> ]	<name4> = <name5> [ : <name4> - <val3> ]
( <val2> の浮動小数点数 ) からなる列の <name3> 回分の列を <name1> とする	<name1> = [ float ( <val2> ) ] * <name3>	<name1> = [ float ( <val2> ) ] * <name3>
入力された文字列を <val1> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val1> ) ]	<name3> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val1> ) ]
<name6> の最大値を <name4> とする	<name4> = max ( <name6> )	<name4> = max ( <name6> )
<name6> に <name5> を加えた値の文字列が <name2> に含まれるとき、	if str ( <name6> + <name5> ) in <name2> :	list ( str ( <name6> + <name5> ) in <name2> :
<val4> から <name5> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val4> , <name5> ) :	. for <name1> in range ( <val4> , <name5> ) :
<name1> の <name4> 番目を展開し、それぞれ <name5> 、 <name2> とする <name1> の <name4> に <val5> を加えた値を <name2> で割った余り番目を展開し、それぞれ <name6> 、 <name3> とする	<name5> , <name2> = <name1> [ <name4> ] <name6> , <name3> = <name1> [ ( <name4> + <val5> ) % <name2> ]	<name2> = <name1> [ <name4> ] <name6> , <name3> = <name1> [ ( <name4> + <val5> ) % <name2> ]
<name2> の <name1> の <name4> 番目が <val5> より小さいとき、	if <name2> . <name1> [ <name4> ] < <val5> :	if <name2> . <name1> [ <name4> ] < <val5> :
<name3> の <name2> の <name5> から <name4> を引いた値番目の <name4> 番目を返す	return <name3> . <name2> [ <name5> - <name4> ] [ <name4> ]	x return <name3> . <name2> [ <name5> - <name4> ] [ <name4> ]
<name5> の長さを <name3> の <name2> 番目にする	<name3> [ <name2> ] = len ( <name5> )	<name3> [ <name2> ] = len ( <name5> )
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> 、 <name1> 、 <name3> とする	<name5> , <name6> , <name1> , <name3> = map ( int , <name2> ( ) . split ( ) )	<name5> , <name6> , <name1> , <name3> = map ( int , <name2> ( ) . split ( ) )
<name1> をパラメータとして <name1> の <name5> を返す関数を <name2> として <name4> の最小値を <name6> とする	<name6> = min ( <name4> , <name2> = lambda <name1> : <name1> . <name5> )	<name6> = min ( <name4> , <name2> = lambda <name1> : <name1> . <name5> )
<name6> ( <name3> ) が <name3> と等しくなくまたは <name5> の <name3> 番目が <name3> と等しいかどうかが <name1> の <name3> 番目と等しくないとき、	if <name6> ( <name3> ) != <name3> or not <name5> [ <name3> ] == <name3> == <name1> [ <name3> ] :	!= <name6> ( <name3> ) != <name3> or <name5> [ <name3> ] == <name3> != <name1> [ <name3> ] :
<name6> の <name5> の <name4> 番目の <name6> の <name2> の <name4> 番目番目を展開し、それぞれ <name2> 、 <name1> 、 <name3> とする	<name2> , <name1> , <name3> = <name6> . <name5> [ <name4> ] [ <name6> . <name2> [ <name4> ] ]	<name2> , <name1> , <name3> = <name6> . <name5> [ <name4> ] [ <name6> . <name2> [ <name4> ] ]
<name3> ( <name1> . <name4> - <name1> . <name6> ) を <name5> とする	<name5> = <name3> ( <name1> . <name4> - <name1> . <name6> )	else = <name3> ( <name1> . <name4> - <name1> . <name6> )
<name4> 、 <name1> 、 <name5> 、 <name6> の最小値を出力する	print ( min ( <name4> , <name1> , <name5> , <name6> ) )	print ( min ( <name4> , <name1> , <name5> , <name6> ) )
( -1 ) からなる列の <name5> の <name3> 回分の列を <name5> の <name1> にする	<name5> . <name1> = [ - 1 ] * <name5> . <name3>	) . <name1> = [ - 1 ] * <name5> . <name3>
<name4> が ( <val2> 、 <name5> ) からなる列に含まれまたは <name6> が ( <val2> 、 <name1> ) からなる列に含まれなければならない	assert <name4> in [ <val2> , <name5> ] or <name6> in [ <val2> , <name1> ]	<val1> assert <name4> in [ <val2> , <name5> ] or <name6> in [ <val2> , <name1> ]
<val6> を <name5> の <name2> の <val4> 番目から、つまり末尾までの部分列番目にする	<name5> [ <name2> [ <val4> : ] ] = <val6>	<name4> [ <name2> [ <val4> : ] ] = <val6>
<name6> から <name2> を引いた値から <name3> を引いた値が <name1> 以下かつ <name6> から <name2> を引いた値から <name3> を引いた値が <name3> より大きいとき、	if <name6> - <name2> - <name3> <= <name1> and <name6> - <name2> - <name3> > <name3> :	> <name6> - <name2> - <name3> <= <name1> and <name6> - <name2> - <name3> > <name3> :
( <name2> 、 <name3> ) の組を <name1> の <val6> 番目にする	<name1> [ <val6> ] = ( <name2> , <name3> )	( <name2> , <name3> ) = ( <name2> , <name3> )
<name3> から <name6> を引いた値の <val4> 乗に <name1> から <name2> を引いた値の <val4> 乗を加えた値の平方根を出力する	print ( math . sqrt ( ( <name3> - <name6> ) ** <val4> + ( <name1> - <name2> ) ** <val4> ) )	range ( math . sqrt ( ( <name3> - <name6> ) ** <val4> + ( <name1> - <name2> ) ** <val4> ) )
<name1> の長さが <val4> より小さい間、次を繰り返す	while len ( <name1> ) < <val4> :	yield ( len ( <name1> ) < <val4> ) :
<name4> の <name5> 番目の <val2> 番目を <name3> とする	<name3> = <name4> [ <name5> ] [ <val2> ]	<name3> = <name4> [ <name5> ] [ <val2> ]
<name6> に <name6> に <val2> を加えた値を掛けた値を <val4> で割った商を <name3> とする	<name3> = <name6> * ( <name6> + <val2> ) // <val4>	<name3> = <name6> * ( <name6> + <val2> ) // <val4>
<name2> を <name2> に <name4> を加えた値で割った値を <name5> とする	<name5> = <name2> / ( <name2> + <name4> )	else = <name2> / ( <name2> + <name4> )
<name1> . <name6> ( <name4> ) が <name1> . <name6> ( <name5> ) と等しいかどうかを返す	return <name1> . <name6> ( <name4> ) == <name1> . <name6> ( <name5> )	x return <name1> . <name6> ( <name4> ) == <name1> . <name6> ( <name5> )
<name3> の <name1> の <name5> の <val6> 番目から <val4> を引いた値番目の末尾に <name5> の <val4> 番目から <val4> を引いた値を追加する	<name3> . <name1> [ <name5> [ <val6> ] - <val4> ] . append ( <name5> [ <val4> ] - <val4> )	<name1> . <name1> [ <name5> [ <val6> ] - <val4> ] . append ( <name5> [ <val4> ] - <val4> )
<name6> の、つまり先頭から <name4> 番目までの部分列を <name3> の <name5> 番目にする	<name3> [ <name5> ] = <name6> [ : <name4> ]	<name3> [ <name5> ] = <name6> [ : <name4> ]
<name6> の <val4> を <val3> で割った値乗の整数値を <name2> とする	<name2> = int ( <name6> ** ( <val4> / <val3> ) )	<val5> <name2> = int ( <name6> ** ( <val4> / <val3> ) )
<name4> の <name1> 番目、 <name4> の <name1> 番目に <name2> の <name1> から <val3> を引いた値番目を加えた値の最大値を <name6> とする	<name6> = max ( <name4> [ <name1> ] , <name4> [ <name1> ] + <name2> [ <name1> - <val3> ] )	else = max ( <name4> [ <name1> ] , <name4> [ <name1> ] + <name2> [ <name1> - <val3> ] )
<name3> ( <name1> , <name5> , <name4> , <name6> ) のとき、	if <name3> ( <name1> , <name5> , <name4> , <name6> ) :	for <name3> in <name3> ( <name1> , <name5> , <name4> , <name6> ) :
<name4> の <val3> 番目、 <name4> の <val5> 番目、 <name4> の <val1> 番目、 <name4> の <val2> 番目を <name5> 、 <name1> 、 <name2> 、 <name6> とする	<name5> , <name1> , <name2> , <name6> = <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val1> ] , <name4> [ <val2> ]	<name5> , <name1> , <name2> , <name6> = <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val1> ] , <name4> [ <val2> ]
<name4> の <name2> の <name3> 番目が、つまり未定値と等しいとき、	if <name4> . <name2> [ <name3> ] == None :	while <name4> . <name2> [ <name3> ] is not None :
<name3> の浮動小数点数を <name5> の浮動小数点数の <val2> 乗で割った値が <val4> 以上のとき、	if float ( <name3> ) / float ( <name5> ) ** <val2> >= <val4> :	raise float ( <name3> ) / ( float ( <name5> ) ** <val2> ) >= <val4> :
<name5> の <name4> が <name2> より大きいとき、	if <name5> . <name4> > <name2> :	list if <name5> . <name4> > <name2> :
<name2> の <name1> 番目の、つまり先頭から <name3> 番目までの部分列に <name2> の <name1> 番目の <name3> に <val5> を加えた値から、つまり末尾までの部分列を加えた値を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name2> [ <name1> ] [ : <name3> ] + <name2> [ <name1> ] [ <name3> + <val5> : ]	<name3> [ <name1> ] = <name2> [ <name1> ] [ : <name3> ] + <name2> [ <name1> ] [ <name3> + <val5> : ]
( <val6> ) からなる列の <name3> の <name1> に <val5> を掛けた値回分の列を <name3> の <name2> にする	<name3> . <name2> = [ <val6> ] * ( <name3> . <name1> * <val5> )	<name3> . <name2> = [ <val6> ] * ( <name3> . <name1> * <val5> )
<name4> 内の <name1> の先頭の出現回数が <val3> と等しいとき、	if <name4> . count ( <name1> [ 0 ] ) == <val3> :	list ( <name4> . count ( <name1> [ 0 ] ) == <val3> :
<name2> の先頭を <name6> とする <name2> の <val1> 番目を <name4> とする	<name6> = <name2> [ 0 ] <name4> = <name2> [ <val1> ]	<name1> = <name2> [ 0 ] <name4> = <name2> [ <val1> ]
<name6> ( <name3> )	<name6> ( <name3> )	<name3> ( <name6> ( <name3> ) )
0 から <name5> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( len ( <name5> ) ) :	len ( range ( len ( <name5> ) ) :
<name3> の <name2> 番目が <name4> と等しいとき、	if <name3> [ <name2> ] == <name4> :	continue if <name3> [ <name2> ] == <name4> :
<val2> の順序数を <name4> とする	<name4> = ord ( <val2> )	<name4> = ord ( <val2> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name5> の <name3> に <val4> を加えた値番目の <val4> 番目から <val1> 番目までの部分列にする	<name5> [ <name3> + <val4> ] [ <val4> : <val1> ] = list ( map ( int , input ( ) . split ( ) ) )	<name3> [ <name3> + <val4> ] [ <val4> : <val1> ] = list ( map ( int , input ( ) . split ( ) ) )
<name4> ( <name5> + <val1> , <name3> , <name2> + <name6> ) を <name6> とする	<name6> = <name4> ( <name5> + <val1> , <name3> , <name2> + <name6> )	<name6> = <name4> ( <name5> + <val1> , <name3> , <name2> + <name6> )
<name1> の <name4> が <name2> . <name3> ( ) より大きくかつ <name2> の <name5> の <name1> の <name6> 番目が <val1> より小さいとき、	if <name1> . <name4> > <name2> . <name3> ( ) and <name2> . <name5> [ <name1> . <name6> ] < <val1> :	isinstance ( <name1> . <name4> > <name2> . <name3> ( ) and <name2> . <name5> [ <name1> . <name6> ] < <val1> :
<name6> の <name2> の <name4> 番目が <name6> の <name2> の <name1> 番目より小さいとき、	if <name6> . <name2> [ <name4> ] < <name6> . <name2> [ <name1> ] :	for <name6> . <name2> [ <name4> ] < <name6> . <name2> [ <name1> ] :
<name3> の <val6> を取り出した値	<name3> . pop ( <val6> )	<name3> . pop ( <val6> )
\ <name1> ( <val3> % <name2> ( <name5> ) ) \	\ <name1> ( <val3> % <name2> ( <name5> ) ) \	\ <name1> ( <val3> % <name2> ( <name5> ) ) \
<name2> が <name3> 以上のとき、	if <name2> >= <name3> :	: if <name2> >= <name3> :
<name3> ( <val4> , [ <val1> , <val5> , <val6> ] ) を <name2> とする	<name2> = <name3> ( <val4> , [ <val1> , <val5> , <val6> ] )	input = <name3> ( <val4> , [ <val1> , <val5> , <val6> ] )
<val3> を <name1> の <name2> 番目の <name2> 番目にする	<name1> [ <name2> ] [ <name2> ] = <val3>	( <name1> [ <name2> ] [ <name2> ] = <val3> )
<name3> ( <name5> , <val2> )	<name3> ( <name5> , <val2> )	<name3> ( <name5> , <val2> )
<name3> [ <name4> ] . <name2> ( <name5> )	<name3> [ <name4> ] . <name2> ( <name5> )	<name2> [ <name4> ] . <name2> ( <name5> )
<name4> の <name5> 番目から <name5> に <name3> を加えた値までの部分列に ( 、つまり無限大 ) からなる列を加えた値、 <name4> の <name1> 番目から <name1> に <name2> を加えた値までの部分列に ( 、つまり無限大 ) からなる列を加えた値を <name2> 、 <name6> とする	<name2> , <name6> = <name4> [ <name5> : <name5> + <name3> ] + [ inf ] , <name4> [ <name1> : <name1> + <name2> ] + [ inf ]	<name6> = <name4> [ <name5> : <name5> + <name3> ] + [ inf ] , <name4> [ <name1> : <name1> + <name2> ] + [ inf ]
<name3> に <name4> を加えた値を <name5> とする <name3> に <name6> を加えた値を <name2> とする	<name5> = <name3> + <name4> <name2> = <name3> + <name6>	<name1> = <name3> + <name4> <name2> = <name3> + <name6>
<name2> の浮動小数点数を <name4> とする	<name4> = float ( <name2> )	<name4> = float ( <name2> )
<val4> <name2> <val1> を <name3> とする	<name3> = <val4> <name2> <val1>	<name3> = <val4> <name2> <val1>
<name6> ( <name5> ) を <name3> とする <name6> ( <name4> ) を <name1> とする	<name3> = <name6> ( <name5> ) <name1> = <name6> ( <name4> )	<name1> = <name6> ( <name5> ) <name1> = <name6> ( <name4> )
<name6> に対応する値、もし存在しなければ <name1> 、 <name3> に <val4> を加えた値を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name6> . get ( <name1> , <name3> + <val4> )	<name2> [ <name1> ] = <name6> . get ( <name1> , <name3> + <val4> )
<val3> を <name5> の <name1> の先頭の <val6> 番目にする	<name5> . <name1> [ <val6> ] [ <val6> ] = <val3>	<name4> . <name5> [ <name1> [ <val6> ] [ <val6> ] = <val3>
<name4> の <name5> の <name3> から読み込んだ一行を入力された文字列とする	input = <name4> . <name5> . <name3> . readline	now = <name4> . <name5> . <name3> . readline ( )
( <name2> の <name6> の長さ、 <name2> の <name6> の先頭の長さ ) の組を返す	return ( len ( <name2> . <name6> ) , len ( <name2> . <name6> [ 0 ] ) )	x return ( len ( <name2> . <name6> ) , len ( <name2> . <name6> [ 0 ] ) )
<name1> ( <name2> * <val5> + <val5> , ( <name3> + <name6> ) // <val5> , <name6> ) を <name4> とする	<name4> = <name1> ( <name2> * <val5> + <val5> , ( <name3> + <name6> ) // <val5> , <name6> )	<name4> = <name1> ( <name2> * <val5> + <val5> , ( <name3> + <name6> ) // <val5> , <name6> )
<name6> を <name5> の <name1> の <name3> 番目だけ増加させる	<name6> += <name5> . <name1> [ <name3> ]	<name5> <name6> += <name5> . <name1> [ <name3> ]
( <name2> から <val1> を引いた値、 <name2> 、 <name2> に <val1> を加えた値 ) の組を順に <name5> として、繰り返す	for <name5> in ( <name2> - <val1> , <name2> , <name2> + <val1> ) :	. for <name5> in ( <name2> - <val1> , <name2> , <name2> + <val1> ) :
<name2> 内の <name1> と等しい要素を取り除く	<name2> . remove ( <name1> )	not <name2> . remove ( <name1> )
<name4> の <name5> の <name3> 番目が <name4> の <name5> の <name1> 番目より小さいとき、	if <name4> . <name5> [ <name3> ] < <name4> . <name5> [ <name1> ] :	if <name4> . <name5> [ <name3> ] < <name4> . <name5> [ <name1> ] :
<name6> の末尾に <name3> の <val4> を取り出した値を追加する	<name6> . append ( <name3> . pop ( <val4> ) )	<name4> . append ( <name3> . pop ( <val4> ) )
<name1> の <name5> 番目が <name1> の <name5> から <val2> を引いた値番目より大きいとき、	if <name1> [ <name5> ] > <name1> [ <name5> - <val2> ] :	[ if <name1> [ <name5> ] > <name1> [ <name5> - <val2> ] :
<name5> の末尾に ( <name6> 、 <name1> 、 <name2> ) の組を追加する	<name5> . append ( ( <name6> , <name1> , <name2> ) )	<name5> . append ( ( <name6> , <name1> , <name2> ) )
<name3> 、 <name5> の最大値を <name6> の <name1> にする	<name6> . <name1> = max ( <name3> , <name5> )	dict . <name1> = max ( <name3> , <name5> )
<name1> モジュールを用いる	from <name1> import Tuple , List	return from <name1> import combinations
<name2> の <name5> を <name6> だけ減少させる	<name2> . <name5> -= <name6>	<name6> . <name2> -= <name5> -= <name6>
<name6> の末尾に ( <val2> ) からなる列に <name4> ( <name3> ( ) ) の各要素に <name1> を適用した列のリストを加えた値に ( <val2> ) からなる列を加えた値を追加する	<name6> . append ( [ <val2> ] + <name4> ( map ( <name1> , <name4> ( <name3> ( ) ) ) ) + [ <val2> ] )	<name2> . append ( [ <val2> ] + list ( map ( <name1> , <name4> ( <name3> ( ) ) ) ) + [ <val2> ] )
<name2> を <val1> で割った余りが <val5> と等しいとき、	if <name2> % <val1> == <val5> :	list if <name2> % <val1> == <val5> :
<name1> を <val3> に <name5> の末尾から空白改行を取り除いた文字列を加えた値に <val3> を加えた値だけ増加させる	<name1> += <val3> + <name5> . rstrip ( ) + <val3>	<name2> += <val3> + <name5> . rstrip ( ) + <val3>
<name2> 、 <name1> に <name6> の <name3> 番目を加えた値の最小値を <name2> とする	<name2> = min ( <name2> , <name1> + <name6> [ <name3> ] )	<name2> = min ( <name2> , <name1> + <name6> [ <name3> ] )
<name6> が <name3> より小さいとき、 <blk> <name1> の <name2> 番目の先頭を <name3> とする </blk>	if <name6> < <name3> : <blk> <name3> = <name1> [ <name2> ] [ 0 ] </blk>	try : <blk> <name3> = <name1> [ <name2> ] [ 0 ] </blk>
<val4> を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <val4>	( <name2> [ <name5> ] = <val4> )
( <name5> から <name2> を引いた値、 <name6> から <name3> を引いた値 ) の組を <name4> とする	<name4> = ( <name5> - <name2> , <name6> - <name3> )	<name4> = ( <name5> - <name2> , <name6> - <name3> )
<name1> の <name3> に <name4> を加えた値番目を <val2> だけ減少させる	<name1> [ <name3> + <name4> ] -= <val2>	<name4> [ <name1> [ <name3> + <name4> ] ] -= <val2>
<name5> を <name2> のラジアンの余弦に <name3> を掛けた値だけ増加させる	<name5> += math . cos ( math . radians ( <name2> ) ) * <name3>	<name2> += math . cos ( math . radians ( <name2> ) ) * <name3>
<name4> と <val6> を <name5> だけ左シフトした値の論理和を <name3> とする	<name3> = <name4> | ( <val6> << <name5> )	<name3> = <name4> | ( <val6> << <name5> )
<name2> の <val6> 番目の浮動小数点数を <name1> とする	<name1> = float ( <name2> [ <val6> ] )	<name1> = float ( <name2> [ <val6> ] )
<name6> の長さを <name2> の <name4> 番目にする	<name2> [ <name4> ] = len ( <name6> )	<name1> [ <name4> ] = len ( <name6> )
0 から <name6> 未満までの数列を反転した列を順に <name2> として、繰り返す	for <name2> in reversed ( range ( <name6> ) ) :	in reversed ( range ( <name6> ) ) :
<name1> の <name2> 番目が <name5> の <name4> 番目以下のとき、	if <name1> [ <name2> ] <= <name5> [ <name4> ] :	if <name1> [ <name2> ] <= <name5> [ <name4> ] :
<name1> の <name4> 番目の <name6> に <name3> を加えた値番目のとき、	if <name1> [ <name4> ] [ <name6> + <name3> ] :	if <name1> [ <name4> ] [ <name6> + <name3> ] :
<name3> の -2 番目を <name1> の ( <name4> 、 <name5> ) の組番目にする	<name1> [ ( <name4> , <name5> ) ] = <name3> [ - 2 ]	<name1> [ ( <name4> , <name5> ) ] = <name3> [ - 2 ]
<val3> を <name1> とする <val3> を <name2> とする	<name1> = <val3> <name2> = <val3>	<name1> = <val3> <name2> = <val3>
<name4> に <val1> を加えた値が <name5> に含まれないとき、	if <name4> + <val1> not in <name5> :	for <name4> in <name4> + <val1> not in <name5> :
( ( <val4> 、 <val4> ) の組、 ( <val4> 、 -1 ) の組、 ( <val2> 、 <val4> ) の組、 ( <val4> 、 <val2> ) の組、 ( -1 、 <val4> ) の組 ) の組を <name6> の <val2> 番目にする	<name6> [ <val2> ] = ( ( <val4> , <val4> ) , ( <val4> , - <val2> ) , ( <val2> , <val4> ) , ( <val4> , <val2> ) , ( - <val2> , <val4> ) )	<name6> [ <val2> ] = ( ( <val4> , <val4> ) , ( <val4> , - <val4> ) , ( <val2> , <val4> ) , ( <val4> , <val2> ) , ( <val2> , <val4> ) , ( - <val4> , <val4> ) )
<name5> に <val6> を加えた値を <val4> で割った余りを <name5> とする	<name5> = ( <name5> + <val6> ) % <val4>	<name5> = ( <name5> + <val6> ) % <val4>
<name5> の先頭に <name1> の <val3> 番目を掛けた値に <name5> の <val4> 番目に <name1> の <val4> 番目を掛けた値を加えた値を返す	return <name5> [ <val3> ] * <name1> [ <val3> ] + <name5> [ <val4> ] * <name1> [ <val4> ]	x return <name5> [ 0 ] * <name1> [ <val3> ] + <name5> [ <val4> ] * <name1> [ <val4> ]
<val1> から <val5> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <val5> ) :	for <name2> in range ( <val1> , <val5> ) :
<name6> の <val2> 番目、 <name6> の <val1> 番目、 <name6> の <val3> 番目、 <name6> の <val5> 番目、 <name6> の <val4> 番目、 <name6> の先頭を <name6> の先頭、 <name6> の <val4> 番目、 <name6> の <val3> 番目、 <name6> の <val5> 番目、 <name6> の <val1> 番目、 <name6> の <val2> 番目とする	<name6> [ 0 ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] = <name6> [ <val2> ] , <name6> [ <val1> ] , <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val4> ] , <name6> [ 0 ]	( <name6> [ 0 ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] = <name6> [ <val2> ] , <name6> [ <val1> ] , <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val4> ] , <name6> [ 0 ]
<name5> を <name1> の文字列に <val3> を加えた値だけ増加させる	<name5> += str ( <name1> ) + <val3>	( <name5> += str ( <name1> ) + <val3> )
<name2> ( <name5> . <name6> - <name3> . <name6> , <name5> . <name4> - <name3> . <name4> ) を返す	return <name2> ( <name5> . <name6> - <name3> . <name6> , <name5> . <name4> - <name3> . <name4> )	x return <name2> ( <name5> . <name6> - <name3> . <name6> , <name5> . <name4> - <name3> . <name4> )
0 から <name1> の <name5> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> . <name5> ) :	: for <name2> in range ( <name1> . <name5> ) :
( <val1> ) からなる列の <val6> 回分の列、 ( <val3> ) からなる列の <val6> 回分の列を <name2> 、 <name4> とする	<name2> , <name4> = [ <val1> ] * <val6> , [ <val3> ] * <val6>	<name2> , <name4> = [ <val1> ] * <val6> , [ <val3> ] * <val6>
<name3> ( <name4> . <name2> / <name6> , - <name4> . <name5> / <name6> ) に <name1> を掛けた値を <name1> とする	<name1> = <name3> ( <name4> . <name2> / <name6> , - <name4> . <name5> / <name6> ) * <name1>	<name1> = <name3> ( <name4> . <name2> / <name6> , - <name4> . <name5> / <name6> ) * <name1>
<name5> の両端キューを <name2> とする	<name2> = deque ( <name5> )	( <name2> = deque ( <name5> ) )
<name6> に <val2> を加えた値から <name6> に <name1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> + <val2> , <name6> + <name1> ) :	for <name5> in range ( <name6> + <val2> , <name6> + <name1> ) :
<name3> を <name5> とするを <name6> の <val2> 番目にする	<name6> [ <val2> ] = <name5> = <name3>	<name3> [ <val2> ] = <name5> = <name3>
<name3> の <name1> の <name6> 番目を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name3> . <name1> [ <name6> ] :	. for <name2> , <name4> in <name3> . <name1> [ <name6> ] :
<name5> の <name3> の <name2> 番目を順に <name6> として、繰り返す	for <name6> in <name5> . <name3> [ <name2> ] :	. for <name6> in <name5> . <name3> [ <name2> ] :
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = map ( int , <name3> ( ) . split ( ) )	<name3> , <name1> = map ( int , <name3> ( ) . split ( ) )
<name5> の <val2> 番目から、つまり末尾までの部分列を <name1> とする	<name1> = <name5> [ <val2> : ]	<name1> = <name5> [ <val2> : ]
<name6> に <name3> を掛けた値を <val2> で割った値を出力する	print ( ( <name6> * <name3> ) / <val2> )	print ( <name6> * <name3> / <val2> )
<name5> 、 <name6> 、 <name4> 、 <name1> を <name4> 、 <name1> 、 <name5> 、 <name6> とする	<name4> , <name1> , <name5> , <name6> = <name5> , <name6> , <name4> , <name1>	<name2> , <name1> , <name5> , <name6> = <name5> , <name6> , <name4> , <name1>
0 から <val4> 未満までの数列の各要素を <name2> とし、 <name2> に <name3> ( <name1> [ <name2> : ] ) が <name2> 以上かどうかを掛けた値の列の最大値を出力する	print ( max ( [ <name2> * ( <name3> ( <name1> [ <name2> : ] ) >= <name2> ) for <name2> in range ( <val4> ) ] ) )	print ( max ( [ <name2> * ( <name3> ( <name1> [ <name2> : ] ) >= <name2> ) for <name2> in range ( <val4> ) ] ) )
<name5> が <val2> と等しいとき、	if ( <name5> == <val2> ) :	: if <name5> == <val2> :
<val2> を <name5> の <name4> を <name6> で割った余り番目にする	<name5> [ <name4> % <name6> ] = <val2>	<name3> [ <name5> [ <name4> % <name6> ] ] = <val2>
<name6> の <name3> の <name1> から <name5> を引いた値番目の末尾に ( <name4> から <name5> を引いた値、 <name2> ) の組を追加する	<name6> . <name3> [ <name1> - <name5> ] . append ( ( <name4> - <name5> , <name2> ) )	<name5> . <name3> [ <name1> - <name5> ] . append ( ( <name4> - <name5> , <name2> ) )
<name1> が、つまり偽と等しくないとき、	if <name1> is False :	or <name1> is False :
<name5> の <val2> 乗に <name1> の <val2> 乗を加えた値の . <val4> 乗を <name3> とする	<name3> = ( <name5> ** <val2> + <name1> ** <val2> ) ** . <val4>	<name3> = ( <name5> ** <val2> + <name1> ** <val2> ) ** . <val4>
<val3> から <val6> 未満までの数列の各要素を <name2> とし、 <val3> から <val6> 未満までの数列の各要素を <name4> とし、 <val3> の列の列を <name5> とする	<name5> = [ [ <val3> for <name4> in range ( <val6> ) ] for <name2> in range ( <val6> ) ]	<name5> = [ [ <val3> for <name4> in range ( <val6> ) ] for <name2> in range ( <val6> ) ]
<name4> から <name2> を引いた値を <name5> とする <name1> から <name6> を引いた値を <name3> とする	<name5> = <name4> - <name2> <name3> = <name1> - <name6>	<name2> = <name4> - <name2> <name3> = <name1> - <name6>
<name4> の各要素を <name1> 、 <name6> 、 <name5> 、 <name2> とし、 ( <name5> 、 <name5> に <name2> を加えた値 ) の組の列を <name3> とする	<name3> = [ ( <name5> , <name5> + <name2> ) for <name1> , <name6> , <name5> , <name2> in <name4> ]	<name6> = [ ( <name5> , <name5> + <name2> ) for <name1> , <name6> , <name5> , <name2> in <name4> ]
<name6> に <val2> を加えた値、 <val3> を <name5> 、 <name4> とする	<name5> , <name4> = <name6> + <val2> , <val3>	<name5> , <name4> = <name6> + <val2> , <val3>
<name6> の <name1> の <name3> 番目が <name2> と等しくない間、次を繰り返す	while <name6> . <name1> [ <name3> ] != <name2> :	del <name6> [ <name1> . <name3> ] != <name2> :
<name5> の <name4> 番目が <name1> の <name2> 番目と等しいとき、 <blk> <name2> を <val3> だけ増加させる </blk>	if <name5> [ <name4> ] == <name1> [ <name2> ] : <blk> <name2> += <val3> </blk>	\ if <name5> [ <name4> ] == <name1> [ <name2> ] : <blk> <name2> += <val3> </blk>
N が <name1> と等しいとき、	if 'N' == <name1> :	: if 'N' == <name1> :
<name5> の長さが <val6> より大きい間、次を繰り返す	while len ( <name5> ) > <val6> :	map ( len ( <name5> ) > <val6> ) :
<name6> + <val3> * <name4> に <name2> を加えた値に <val1> に <name5> を掛けた値を加えた値に <val3> に <name6> を掛けた値を加えた値に <name3> を加えた値が <val1> に <name4> を掛けた値に <val3> に <name2> を掛けた値を加えた値に <name1> を加えた値と等しいとき、	if <name6> + <val3> * <name4> + <name2> + <val1> * <name5> + <val3> * <name6> + <name3> == <val1> * <name4> + <val3> * <name2> + <name1> :	for <name1> in <name6> + <val3> * <name4> + <name2> + <val1> * <name5> + <val3> * <name6> + <name3> == <val1> * <name4> + <val3> * <name2> + <name1> :
<name5> を <name4> ( <name1> , <name2> , <name6> , <name3> , <name5> ) だけ増加させる	<name5> += <name4> ( <name1> , <name2> , <name6> , <name3> , <name5> )	<name2> += <name5> += <name4> ( <name1> , <name2> , <name6> , <name3> , <name5> )
逆順に <name2> の <name6> 番目から <name1> 番目までの部分列をソートした列を <name2> とする	<name2> = sorted ( <name2> [ <name6> : <name1> ] , reverse = True )	<name2> = sorted ( <name2> [ <name6> : <name1> ] , reverse = True )
<name5> の <val3> 番目を <name4> の <val3> 番目にする	<name4> [ <val3> ] = <name5> [ <val3> ]	<name1> [ <val3> ] = <name5> [ <val3> ]
<name2> の <name4> 番目を <name3> の <name1> 番目の <name4> 番目にする	<name3> [ <name1> ] [ <name4> ] = <name2> [ <name4> ]	<name4> [ <name1> ] [ <name4> ] = <name2> [ <name4> ]
EEENEEENEEESEEESEEENEEEN を順に <name4> として、繰り返す	for <name4> in 'EEENEEENEEESEEESEEENEEEN' :	. for <name4> in 'ON' :
<name5> が <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name5> == <val2> : <blk> break </blk>	: if <name5> == <val2> : <blk> break </blk>
<name6> の末尾に ( <name4> 、 <name1> 、 <val5> ) からなる列を追加する	<name6> . append ( [ <name4> , <name1> , <val5> ] )	<name4> . append ( [ <name4> , <name1> , <val5> ] )
<name5> と <name2> を <name5> で割った余りの最大公約数	gcd ( <name5> , <name2> % <name5> )	gcd ( <name5> , <name2> % <name5> )
<name1> と <name5> の論理和を <name6> とする	<name6> = <name1> | <name5>	( <name6> = <name1> | <name5> )
( <name5> 、 <name2> ) の組が <name6> に含まれるとき、	if ( <name5> , <name2> ) in <name6> :	continue ( <name5> , <name2> ) in <name6> :
<name5> ( <name3> , <name1> ) のとき、	if <name5> ( <name3> , <name1> ) :	for <name5> in <name5> ( <name3> , <name1> ) :
<name1> モジュールを用いる	from <name1> import bisect_left	return from <name1> import combinations
入力された文字列を <val5> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = map ( float , input ( ) . split ( <val5> ) )	<name3> , <name4> = map ( float , input ( ) . split ( <val5> ) )
<name2> に <name4> から <name2> を引いた値を <val6> で割った商を加えた値を <name3> とする	<name3> = <name2> + ( <name4> - <name2> ) // <val6>	<name3> = <name2> + ( <name4> - <name2> ) // <val6>
<name4> ( <name6> , <val1> )	<name4> ( <name6> , <val1> )	<name4> ( <name6> , <val1> )
0 から <val5> を <name3> だけ左シフトした値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val5> << <name3> ) :	for <name2> in range ( <val5> << <name3> ) :
<val6> から <name5> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val6> , <name5> ) :	for <name2> in range ( <val6> , <name5> ) :
<name4> の、つまり先頭から <name2> に <val5> を加えた値までの部分列を削除する	del <name4> [ 0 : <name2> + <val5> ]	| = <name4> [ : <name2> + <val5> ]
<name5> の <name2> 番目を <name5> の <name2> から <val6> を引いた値番目だけ増加させる	<name5> [ <name2> ] += <name5> [ <name2> - <val6> ]	( <name5> [ <name2> ] += <name5> [ <name2> - <val6> ] )
<name5> . <name5> ( ) を <name2> とする	<name2> = <name5> . <name5> ( )	dict = <name5> . <name5> ( )
<name6> の先頭から <val1> を探して見つかった位置を <name4> とする	<name4> = <name6> . find ( <val1> )	<name4> = <name6> . find ( <val1> )
<name3> ( <name4> - <name6> , <name2> - <name6> ) を <name1> とする	<name1> = <name3> ( <name4> - <name6> , <name2> - <name6> )	<name1> = <name3> ( <name4> - <name6> , <name2> - <name6> )
<name5> ( <name2> , <name1> ) を <name2> で割った値の絶対値を返す	return abs ( <name5> ( <name2> , <name1> ) / <name2> )	yield abs ( <name5> ( <name2> , <name1> ) / <name2> )
<val3> を <name6> の <name4> 番目の <name4> 番目にする	<name6> [ <name4> ] [ <name4> ] = <val3>	( <name6> [ <name4> ] [ <name4> ] = <val3> )
<val2> が <name3> より小さいかどうかが <name5> に <name1> を掛けた値より小さくないとき、	if not <val2> < <name3> < <name5> * <name1> :	while not <val2> < <name3> < <name5> * <name1> :
<name5> の各要素に整数を適用した列のリストを <name3> とする	<name3> = list ( map ( int , <name5> ) )	<name3> = list ( map ( int , <name5> ) )
( <val1> ) からなる列の <name5> に <val3> を加えた値回分の列を <name4> の <name2> にする	<name4> . <name2> = [ <val1> ] * ( <name5> + <val3> )	<name3> . <name2> = [ <val1> ] * ( <name5> + <val3> )
<name1> の先頭が <val2> で始まるとき、	if <name1> . startswith ( <val2> ) :	list ( <name1> [ 0 ] . startswith ( <val2> ) :
<name6> ( ) を空白で分割した字句列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name6> ( ) . split ( )	<name4> , <name1> = <name6> ( ) . split ( )
<name3> に <val1> を掛けた値を <name6> とする	<name6> = <name3> * <val1>	( <name6> = <name3> * <val1> )
<val1> を <name6> の <name5> の先頭の <val4> 番目にする	<name6> . <name5> [ <val4> ] [ <val4> ] = <val1>	<name4> . <name5> [ <val4> ] [ <val4> ] = <val1>
<name5> . <name2> ( ) を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = <name5> . <name2> ( )	<name2> , <name6> = <name5> . <name2> ( )
0 から <name3> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <val1> の <val1> 乗の列を <name2> とする	<name2> = [ <val1> ** <val1> for <name5> in range ( <name3> + <val6> ) ]	<name6> = [ <val1> ** <val1> for <name5> in range ( <name3> + <val6> ) ]
<name5> を <name4> の <name3> の <name2> に <val6> を加えた値番目番目から <name4> の <name3> の <name2> 番目番目を引いた値だけ増加させる	<name5> += <name4> [ <name3> [ <name2> + <val6> ] ] - <name4> [ <name3> [ <name2> ] ]	<name1> += <name4> [ <name3> [ <name2> + <val6> ] ] - <name4> [ <name3> [ <name2> ] ]
<name5> から <val1> 未満までの数列のリストに <val3> から -1 未満までの -1 間隔の数列のリストを加えた値に <val4> から <name6> に <val4> を加えた値未満までの数列のリストを加えた値を <name2> の ( <name5> 、 <name6> ) の組番目にする	<name2> [ ( <name5> , <name6> ) ] = list ( range ( <name5> , <val1> ) ) + list ( range ( <val3> , - <val4> , - <val4> ) ) + list ( range ( <val4> , <name6> + <val4> ) )	( <name2> [ ( <name5> , <name6> ) ] = list ( range ( <name5> , <val1> ) ) + list ( range ( <val3> , - <val4> , - <val4> ) ) + list ( range ( <name6> + <val4> ) ) )
<name2> と <name5> の論理和を返す	return <name2> | <name5>	yield <name2> | <name5>
<name2> に <name6> の <name5> 番目を加えた値を出力する	print ( <name2> + <name6> [ <name5> ] )	print ( <name2> + <name6> [ <name5> ] )
<name4> の <name5> の <name3> 番目でないとき、	if not <name4> . <name5> [ <name3> ] :	if not <name4> [ <name5> . <name3> ] :
<val3> の <val6> 乗を <name5> とする	<name5> = <val3> ** <val6>	<name5> = <val3> ** <val6>
<name1> を <name6> の <name3> の <name4> 番目にする	<name6> . <name3> [ <name4> ] = <name1>	<name3> . <name3> [ <name4> ] = <name1>
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を <name6> の <name3> 番目にする	<name6> [ <name3> ] = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	<val6> [ <name3> ] = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
( <val1> ) からなる列の <name3> 回分の列を <name6> とする	<name6> = [ <val1> ] * <name3>	<name6> = [ <val1> ] * <name3>
<name1> に ( <name4> 、 <name3> ) の組を追加した集まり	<name1> . add ( ( <name4> , <name3> ) )	not <name1> . add ( ( <name4> , <name3> ) )
<name3> の <name1> 番目が <name5> の <name6> 番目と等しいとき、	if <name3> [ <name1> ] == <name5> [ <name6> ] :	continue [ <name1> ] == <name5> [ <name6> ] :
0 から <name1> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す <blk> <name5> 、 <name2> の <name3> 番目の最大値を <name5> とする </blk>	for <name3> in range ( <name1> + <val4> ) : <blk> <name5> = max ( <name5> , <name2> [ <name3> ] ) </blk>	) for <name3> in range ( <name1> + <val4> ) : <blk> <name5> = max ( <name5> , <name2> [ <name3> ] ) </blk>
<name6> の <val3> を取り出した値を <name1> とする	<name1> = <name6> . pop ( <val3> )	<name1> = <name6> . pop ( <val3> )
<name4> . <name5> . <name2> . <name3> ( ) のとき、	if <name4> . <name5> . <name2> . <name3> ( ) :	. if <name4> . <name5> . <name2> . <name3> ( ) :
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列のリストを <name2> とする </blk>	try : <blk> <name2> = list ( input ( ) . split ( ) ) </blk>	: try : <blk> <name2> = list ( input ( ) . split ( ) ) </blk>
<name1> を <name3> の <name5> 番目だけ減少させる	<name1> -= <name3> [ <name5> ]	not <name1> -= <name3> [ <name5> ]
<name4> 、 <name1> の最小値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = min ( <name4> , <name1> )	<name6> [ <name6> ] = min ( <name4> , <name1> )
<name2> が <val3> と等しいとき <name1> の各要素を <name5> とし、 <name1> の列の各要素を <name4> とし、 <name6> [ <name4> ] の <val3> 番目の <name5> 番目の列の総和、そうでなければ <val2> を <name1> の先頭の <val3> 番目の <val2> 番目にする	<name1> [ <val2> ] [ <val3> ] [ <val2> ] = sum ( [ <name6> [ <name4> ] [ <val3> ] [ <name5> ] for <name4> in [ <name1> for <name5> in <name1> ] ] ) if <name2> == <val3> else <val2>	<name1> [ <val2> ] [ <val3> ] [ <val2> ] = sum ( [ <name6> [ <name4> ] [ <val3> ] [ <name5> ] for <name4> in [ <name1> for <name5> in [ <name1> ] ] ] ) if <name2> == <val3> else <val2>
<name1> に番号付した組の列を順に <name2> 、 <name6> 、 <name3> として、繰り返す	for <name2> , <name6> , <name3> in enumerate ( <name1> ) :	. for <name2> , <name6> , <name3> in enumerate ( <name1> ) :
<val5> の <val1> 乗から <val6> を引いた値を <name4> とする	<name4> = <val5> ** <val1> - <val6>	<name4> = <val5> ** <val1> - <val6>
<name6> 内の [ MASK ] の出現回数を <name5> として <name6> の最大値、 <name4> を <name5> として <name6> の最大値を出力する	print ( max ( <name6> , <name5> = <name6> . count ) , max ( <name6> , <name5> = <name4> ) )	print ( max ( <name6> , <name5> = <name6> . count ) , max ( <name6> , <name5> = <name4> ) )
<name4> の <name3> 番目に <name1> を加えた値を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name4> [ <name3> ] + <name1>	<name2> [ <name2> ] = <name4> [ <name3> ] + <name1>
<val6> を <name3> とする <name2> を <name1> とする	<name3> = <val6> <name1> = <name2>	<name3> = <val6> <name1> = <name2>
<name2> に <val1> を加えた値を <name4> とする	<name4> = <name2> + <val1>	<name4> = <name2> + <val1>
<name1> ( <name3> , <name2> ) を <name4> とする	<name4> = <name1> ( <name3> , <name2> )	<name4> = <name1> ( <name3> , <name2> )
<name1> の文字列を <name3> とする	<name3> = str ( <name1> )	<name3> = str ( <name1> )
<name4> の . <val2> 乗に <val6> <name5> <val3> を加えた値を <name1> とする	<name1> = <name4> ** . <val2> + <val6> <name5> <val3>	<name1> = <name4> ** . <val2> + <val6> <name5> <val3>
<name6> の <name5> 番目の <val4> 番目が <val2> と等しいとき、	if <name6> [ <name5> ] [ <val4> ] == <val2> :	: if <name6> [ <name5> ] [ <val4> ] == <val2> :
<name2> の <name6> 番目が、つまり真と等しくないとき、	if <name2> [ <name6> ] is True :	for <name2> [ <name6> ] == True :
( ( <val5> ) からなる列の <val5> から <name1> 未満までの数列の各要素を <name6> とし、 <name1> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val5> ] * [ <name1> for <name6> in range ( <name1> ) ] ]	<name3> = [ [ <val5> ] * [ <name1> for <name6> in range ( <name1> ) ] ]
<val5> を <name6> の <name1> 番目の <name2> 番目にする	<name6> [ <name1> ] [ <name2> ] = <val5>	<name4> [ <name1> ] [ <name2> ] = <val5>
<name4> の <name2> * <val3> から <val5> を引いた値番目の <name6> 番目が <val1> と等しいとき、つまり真、そうでなければ、つまり偽を返す	return True if <name4> [ <name2> * <val3> - <val5> ] [ <name6> ] == <val1> else False	x return True if <name4> [ <name2> * <val3> - <val5> ] [ <name6> ] == <val1> else False
<name5> の両端から空白改行を取り除いた文字列を長さ <val3> になるように '0' 左詰めした文字列を <name1> とする	<name1> = <name5> . strip ( ) . zfill ( <val3> )	<name1> = <name5> . strip ( ) . zfill ( <val3> )
<name5> の <val2> 乗に <name3> の <val2> 乗を加えた値を <name4> とする	<name4> = <name5> ** <val2> + <name3> ** <val2>	<name4> = <name5> ** <val2> + <name3> ** <val2>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name4> とする	<name3> , <name1> , <name4> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name4> = map ( int , input ( ) . split ( ) )
<name4> ( <name6> -1 ) を <name1> とする	<name1> = <name4> ( <name6> - 1 )	<name1> = <name4> ( <name6> - 1 )
<name4> かつ <name4> の末尾の <val5> 番目が <val6> と等しい間、次を繰り返す	while <name4> and <name4> [ - <val5> ] [ <val5> ] == <val6> :	\ <name4> and <name4> [ - 1 ] [ <val5> ] == <val6> :
<val4> を <name2> の ( <name1> 、 <name5> ) の組番目にする	<name2> [ ( <name1> , <name5> ) ] = <val4>	<name2> [ ( <name1> , <name5> ) ] = <val4>
<name1> が <val4> と等しくまたは <name1> が <val6> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <val4> or <name1> == <val6> : <blk> break </blk>	enumerate ( <name1> == <val4> or <name1> == <val6> ) : <blk> break </blk>
<name1> の <name4> を <name5> の <name6> の <name3> にする	<name5> . <name6> . <name3> = <name1> . <name4>	<name2> . <name6> . <name3> = <name1> . <name4>
<name4> が <name3> に含まれなくまたは <name1> が <name3> の <name4> 番目より小さいとき、	if not <name4> in <name3> or <name1> < <name3> [ <name4> ] :	or <name4> not in <name3> or <name1> < <name3> [ <name4> ] :
<name2> ( <name1> + <val4> , <name6> + <val4> + <name5> , <val4> ) を <name3> とする	<name3> = <name2> ( <name1> + <val4> , <name6> + <val4> + <name5> , <val4> )	else = <name2> ( <name1> + <val4> , <name6> + <val4> + <name5> , <val4> )
[ MASK ] が正規表現 <name6> にマッチした箇所を <name4> に置き換えた文字列を <name6> とする	<name6> = sub ( <name6> , <name4> )	<name5> = sub ( <name6> , <name4> )
<name5> の <name4> から <val3> を引いた値番目、 <name5> の <name6> から <val3> を引いた値番目を <name5> の <name6> から <val3> を引いた値番目、 <name5> の <name4> から <val3> を引いた値番目とする	<name5> [ <name6> - <val3> ] , <name5> [ <name4> - <val3> ] = <name5> [ <name4> - <val3> ] , <name5> [ <name6> - <val3> ]	<name5> [ <name6> - <val3> ] , <name5> [ <name4> - <val3> ] = <name5> [ <name4> - <val3> ] , <name5> [ <name6> - <val3> ]
<name1> モジュールを用いる	from <name1> import Union	return from <name1> import combinations
<name5> 、 <name1> 、 <name6> を <name2> の <name5> 、 <name2> の <name1> 、 <name2> の <name6> とする	<name2> . <name5> , <name2> . <name1> , <name2> . <name6> = <name5> , <name1> , <name6>	<name2> . <name5> , <name2> . <name1> , <name2> . <name6> = <name5> , <name1> , <name6>
<name5> に <name1> を <name1> に <name3> を加えた値で割った値に <name6> から <name5> を引いた値を掛けた値を加えた値を返す	return <name5> + <name1> / ( <name1> + <name3> ) * ( <name6> - <name5> )	yield <name5> + <name1> / ( <name1> + <name3> ) * ( <name6> - <name5> )
0 から <name2> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組の列を <name5> とする	<name5> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name2> ) ]	<name5> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name2> ) ]
逆順に <name3> をソートした列を返す	return sorted ( <name3> , reverse = True )	True return sorted ( <name3> , reverse = True )
<name2> に <val6> を加えた値が <name3> から <val5> を引いた値より大きいとき、	if <name2> + <val6> > <name3> - <val5> :	continue <name2> + <val6> > <name3> - <val5> :
<name1> の <name3> から <val5> を引いた値番目から <name4> の <name3> から <val5> を引いた値番目を引いた値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = <name1> [ <name3> - <val5> ] - <name4> [ <name3> - <val5> ]	( <name1> [ <name3> ] = <name1> [ <name3> - <val5> ] - <name4> [ <name3> - <val5> ] )
<val1> の浮動小数点数を <name5> とする	<name5> = float ( <val1> )	<name2> = float ( <val1> )
<name6> が <val5> 以上かつ <name6> が <val4> 以下のとき、	if <name6> >= <val5> and <name6> <= <val4> :	or <name6> >= <val5> and <name6> <= <val4> :
<name2> の <name6> 番目から <name5> 番目までの部分列の最小値を出力する	print ( min ( <name2> [ <name6> : <name5> ] ) )	range ( min ( <name2> [ <name6> : <name5> ] ) )
<val4> から <val3> の <name1> 乗未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , <val3> ** <name1> ) :	continue for <name5> in range ( <val4> , <val3> ** <name1> ) :
<name6> の <name4> が <val3> より大きくかつ <name5> の <name1> の <name6> の <name2> 番目が <val3> より小さいとき、	if <name6> . <name4> > <val3> and <name5> . <name1> [ <name6> . <name2> ] < <val3> :	list ( <name6> . <name4> > <val3> and <name5> . <name1> [ <name6> . <name2> ] < <val3> ) :
<name2> に <name3> に <val6> を掛けた値を加えた値を <name4> とする	<name4> = <name2> + <name3> * <val6>	<name4> = <name2> + <name3> * <val6>
<name4> ( <name6> , ( <val3> , <name2> , <name5> , <name1> ) )	<name4> ( <name6> , ( <val3> , <name2> , <name5> , <name1> ) )	<name5> ( <name4> ( <name6> , ( <val3> , <name2> , <name5> , <name1> ) ) )
<name2> ( <name1> * <val6> + <val6> , <name4> + <val5> , <name3> , <name2> ) を返す	return <name2> ( <name1> * <val6> + <val6> , <name4> + <val5> , <name3> , <name2> )	yield <name2> ( <name1> * <val6> + <val6> , <name4> + <val5> , <name3> , <name2> )
<name1> が <val4> より小さくかつ <name2> が <val5> より小さいとき、	if <name1> < <val4> and <name2> < <val5> :	: if <name1> < <val4> and <name2> < <val5> :
<name5> から <name1> を引いた値を <name2> とする	<name2> = <name5> - <name1>	( <name2> = <name5> - <name1> )
<name4> の <name2> 番目を <name6> だけ左シフトした値を <name3> とする	<name3> = <name4> [ <name2> ] << <name6>	( <name3> = <name4> [ <name2> ] << <name6> )
<name6> に <val1> を加えた値を <name6> とする	<name6> = <name6> + <val1>	( <name6> = <name6> + <val1> )
<name5> ( <name2> , <name6> , <name4> ) を <name2> とする	<name2> = <name5> ( <name2> , <name6> , <name4> )	<name2> = <name5> ( <name2> , <name6> , <name4> )
0 から <name5> 未満までの数列の各要素を <name2> とし、 <name4> ( ) の整数値の列を <name6> とする	<name6> = [ int ( <name4> ( ) ) for <name2> in range ( <name5> ) ]	<name4> = [ int ( <name4> ( ) ) for <name2> in range ( <name5> ) ]
<val4> から <name3> を引いた値に <name1> の総和を掛けた値を <name1> の <name2> 番目で割った値の切り捨て整数値を出力する	print ( math . floor ( ( <val4> - <name3> ) * sum ( <name1> ) / <name1> [ <name2> ] ) )	print ( math . floor ( ( <val4> - <name3> ) * math . sqrt ( <name1> [ <name2> ] ) / <name1> [ <name2> ] ) )
<name4> を <val6> で割った余りを <val2> で割った商の文字列を長さ <val5> になるように '0' 左詰めした文字列を <name3> とする	<name3> = str ( <name4> % <val6> // <val2> ) . zfill ( <val5> )	<name3> = str ( <name4> % <val6> // <val2> ) . zfill ( <val5> )
[ MASK ] において正規表現 <name2> が最初にマッチする位置	search ( <name2> )	<name2> . search ( <name2> )
<name4> に <name2> の <name5> 番目を掛けた値を <name4> と <name2> の <name5> 番目の最大公約数で割った商を <name4> とする	<name4> = <name4> * <name2> [ <name5> ] // math . gcd ( <name4> , <name2> [ <name5> ] )	( <name4> = <name4> * <name2> [ <name5> ] ) // gcd ( <name4> , <name2> [ <name5> ] )
<name5> の <name3> 番目を <name1> だけ増加させる	<name5> [ <name3> ] += <name1>	now [ <name3> ] += <name1>
( <name2> から <val4> を引いた値、 <name2> ) からなる列を os . <name3> とする	<name3> = [ <name2> - <val4> , <name2> ]	<name3> = [ <name2> - <val4> , <name2> ]
<name1> が <val4> 以上かつ <name6> の <name1> 番目が <name5> より大きい間、次を繰り返す	while <name1> >= <val4> and <name6> [ <name1> ] > <name5> :	del <name1> >= <val4> and <name6> [ <name1> ] > <name5> :
逆順に <name3> をソートする	<name3> . sort ( reverse = True )	<name3> . sort ( reverse = True )
<name2> [ <name5> ] . <name3> ( )	<name2> [ <name5> ] . <name3> ( )	( <name2> [ <name5> ] . <name3> ( ) )
<name2> ( * <name3> ( <name4> , <name5> ) )	<name2> ( * <name3> ( <name4> , <name5> ) )	<name2> ( * <name3> ( <name4> , <name5> ) )
<name1> の <name3> の間、次を繰り返す	while <name1> . <name3> :	: while <name1> . <name3> :
<name6> を <val3> だけ右シフトする <name5> を <val3> だけ右シフトする	<name6> >> = <val3> <name5> >> = <val3>	<name2> >> = <name6> >> = <val3> <name5> >> = <val3>
-1 を <name2> の <val3> 番目にする	<name2> [ <val3> ] = - 1	( <name2> [ <val3> ] = - 1 )
<name6> の <name2> に番号付した組の列の各要素を <name5> 、 <name1> とし、 <name1> が <val4> より小さいときの <name5> の列を返す	return [ <name5> for <name5> , <name1> in enumerate ( <name6> . <name2> ) if <name1> < <val4> ]	set ( [ <name5> for <name5> , <name1> in enumerate ( <name6> . <name2> ) if <name1> < <val4> ] )
入力された文字列の文字列を順に <name2> として、繰り返す	for <name2> in str ( input ( ) ) :	in str ( input ( ) ) :
<name2> ( <name4> , <name5> ) を <name6> とする	<name6> = <name2> ( <name4> , <name5> )	<name6> = <name2> ( <name4> , <name5> )
<name3> を <val4> だけ減少させる <name1> を <val4> だけ減少させる	<name3> -= <val4> <name1> -= <val4>	<name3> -= <val4> <name1> -= <val4>
<name1> の <name2> 番目の <name6> 番目かつ <name5> . <name4> ( <name3> ( <name2> , <name6> ) ) が <name2> 、 <name6> のオブジェクト識別子と等しいとき、 <blk> <name1> を <val2> だけ増加させる </blk>	if <name1> [ <name2> ] [ <name6> ] and <name5> . <name4> ( <name3> ( <name2> , <name6> ) ) == <name3> ( <name2> , <name6> ) : <blk> <name1> += <val2> </blk>	\ <name1> [ <name2> ] [ <name6> ] and <name5> . <name4> ( <name3> ( <name2> , <name6> ) == <name2> . <name6> . items ( ) : <blk> <name1> += <val2> </blk>
<name1> の両端キューを <name3> とする	<name3> = deque ( <name1> )	<name3> = deque ( <name1> )
( <val6> 、 <val6> 、 <val3> 、 <val3> 、 <val4> 、 <val4> ) からなる列	[ <val6> , <val6> , <val3> , <val3> , <val4> , <val4> ]	all ( [ <val6> , <val6> , <val3> , <val3> , <val4> , <val4> , <val4> ] )
<name1> の <val3> 番目を <name1> の <val5> 番目にする	<name1> [ <val5> ] = <name1> [ <val3> ]	<name4> [ <val5> ] = <name1> [ <val3> ]
<name5> の先頭を除いた部分列をソートした列に ( <name5> の先頭 ) からなる列を加えた値を返す	return sorted ( <name5> [ 1 : ] ) + [ <name5> [ 0 ] ]	return sorted ( <name5> [ 1 : ] ) + [ <name5> [ 0 ] ]
<name5> ( <val4> , <val4> ) が <name6> 以下のとき <val2> 、そうでなければ <val3> を出力する	print ( <val2> if <name5> ( <val4> , <val4> ) <= <name6> else <val3> )	print ( <val2> if <name5> ( <val4> , <val4> ) <= <name6> else <val3> )
<name3> の <name4> を <val2> で割った余り番目を <name1> とする	<name1> = <name3> [ <name4> % <val2> ]	<name1> = <name3> [ <name4> % <val2> ]
<name6> の各要素を <name3> とし、 <name1> の各要素を <name4> とし、 <name5> ( <name3> , <name4> ) の列の列を <name2> とする	<name2> = [ [ <name5> ( <name3> , <name4> ) for <name4> in <name1> ] for <name3> in <name6> ]	<name2> = [ [ <name5> ( <name3> , <name4> ) for <name4> in <name1> ] for <name3> in <name6> ]
<name6> の <name2> の <name4> の <name5> 番目と等しい要素の最初の位置番目を <val3> だけ増加させる	<name6> [ <name2> . index ( <name4> [ <name5> ] ) ] += <val3>	<name1> [ <name2> . index ( <name4> [ <name5> ] ) ] += <val3>
<name3> の末尾に入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を追加する	<name3> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )	<name1> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )
<name3> の <name6> を順に <name5> として、繰り返す	for <name5> in <name3> . <name6> :	. for <name5> in <name3> . <name6> :
<name5> の <name2> 番目が -1 と等しいとき、	if <name5> [ <name2> ] == - 1 :	if <name5> [ <name2> ] == - 1 :
<name1> ( <name4> . <name3> ) を <name2> とする	<name2> = <name1> ( <name4> . <name3> )	dict = <name1> ( <name4> . <name3> )
( <val2> ) からなる列の <name1> に <val5> を加えた値回分の列を <name4> とする	<name4> = [ <val2> ] * ( <name1> + <val5> )	<name4> = [ <val2> ] * ( <name1> + <val5> )
<name1> が <val5> 以上かつ <name3> の <name1> 番目が <name2> より大きい間、次を繰り返す	while <name1> >= <val5> and <name3> [ <name1> ] > <name2> :	del <name1> >= <val5> and <name3> [ <name1> ] > <name2> :
<name6> を <name2> の <name5> 番目から <name3> を引いた値から <val4> に <name1> を掛けた値を引いた値だけ増加させる	<name6> += <name2> [ <name5> ] - <name3> - <val4> * <name1>	<name6> += ( <name2> [ <name5> ] - <name3> ) - ( <val4> * <name1> )
<name5> の <val4> 番目の <val4> 乗が <name5> の先頭の <val4> 乗に <name5> の <val2> 番目の <val4> 乗を加えた値と等しいとき、	if <name5> [ <val4> ] ** <val4> == <name5> [ 0 ] ** <val4> + <name5> [ <val2> ] ** <val4> :	if <name5> [ <val4> ] ** <val4> == <name5> [ <val4> ] ** <val4> + <name5> [ <val2> ] ** <val4> :
<name3> 、 - <name2> を出力する	print ( <name3> , - <name2> )	print ( <name3> , - <name2> )
<name6> . <name2> ( <name3> ) に <val4> を掛けた値から <name3> を引いた値を返す	return <name6> . <name2> ( <name3> ) * <val4> - <name3>	x return <name6> . <name2> ( <name3> ) * <val4> - <name3>
<name6> を空白で分割した字句列の各要素に整数を適用した列の組を <name3> とする	<name3> = tuple ( map ( int , <name6> . split ( ) ) )	<name3> = tuple ( map ( int , <name6> . split ( ) ) )
<name4> を <name5> の <name1> 番目だけ増加させる	<name4> += <name5> [ <name1> ]	( <name4> += <name5> [ <name1> ] )
<name4> の <name1> 番目から <name6> の <name1> 番目を引いた値の絶対値を <name3> とする	<name3> = abs ( <name4> [ <name1> ] - <name6> [ <name1> ] )	<name3> = abs ( <name4> [ <name1> ] - <name6> [ <name1> ] )
<name2> の <name3> に <val4> を掛けた値に <name5> を加えた値番目を <name1> とする	<name1> = <name2> [ <name3> * <val4> + <name5> ]	<name1> = <name2> [ <name3> * <val4> + <name5> ]
( <val5> ) からなる列の <val3> に <name4> + <name6> に <name2> を加えた値に <val1> を加えた値を掛けた値、 <val3> に <name5> を掛けた値に <val3> を加えた値の最大値回分の列を <name1> とする	<name1> = [ <val5> ] * max ( <val3> * ( <name4> + <name6> + <name2> + <val1> ) , <val3> * <name5> + <val3> )	<name1> = [ <val5> ] * max ( <val3> * ( <name4> + <name6> + <name2> + <val1> ) , ( <val3> * <name5> + <val3> ) )
( 、つまり未定値 ) からなる列の <name5> 回分の列を <name4> とする	<name4> = [ None ] * <name5>	<name4> = [ None ] * <name5>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name6> 、 <name5> とする	<name3> , <name4> , <name6> , <name5> = map ( int , input ( ) . split ( ) )	<name3> , <name4> , <name6> , <name5> = map ( int , input ( ) . split ( ) )
<name1> を <name2> の <name1> にする	<name2> . <name1> = <name1>	( <name2> . <name1> = <name1> )
<val4> を <name3> とするを <name1> とする <val6> を <name2> とするを <name5> とする	<name1> = <name3> = <val4> <name5> = <name2> = <val6>	<name1> = <name3> = <name3> = <val4> <name5> = <val6>
<name2> の、つまり先頭から <name4> 番目までの部分列に <name1> に <val3> を掛けた値を加えた値に <name2> の <name4> に <val3> を加えた値から、つまり末尾までの部分列を加えた値を返す	return <name2> [ : <name4> ] + <name1> * <val3> + <name2> [ <name4> + <val3> : ]	return <name2> [ : <name4> ] + <name1> * <val3> + <name2> [ <name4> + <val3> : ]
<name4> を <name6> の先頭に <name6> の <val2> 番目を掛けた値に <name6> の <val3> 番目を掛けた値だけ増加させる	<name4> += ( <name6> [ 0 ] * <name6> [ <val2> ] * <name6> [ <val3> ] )	<name2> += <name6> [ 0 ] * <name6> [ <val2> ] * <name6> [ <val3> ]
( <name5> 、 <name2> 、 <name6> ) の組を <name3> とする	<name3> = ( <name5> , <name2> , <name6> )	<name3> = ( <name5> , <name2> , <name6> )
<name2> ( <name5> , <name1> , <name6> ( <name3> ) , <name4> ) を <name4> とする	<name4> = <name2> ( <name5> , <name1> , <name6> ( <name3> ) , <name4> )	<name6> = <name2> ( <name5> , <name1> , <name6> ( <name3> ) , <name4> )
<name6> . <name4> ( <name1> ) のとき、	if <name6> . <name4> ( <name1> ) :	> <name6> . <name4> ( <name1> ) :
<name6> 、 <name1> の最大値を <name1> とする	<name1> = max ( <name6> , <name1> )	<name1> = max ( <name6> , <name1> )
<name6> ( <name1> , <name3> , <name2> [ <name5> ] )	<name6> ( <name1> , <name3> , <name2> [ <name5> ] )	set ( <name6> ( <name1> , <name3> , <name2> [ <name5> ] ) )
<name6> が <name2> 以下のとき <val4> 、そうでなければ <name6> から <name2> を引いた値を出力する	print ( <val4> if <name6> <= <name2> else <name6> - <name2> )	print ( <val4> if <name6> <= <name2> else <name6> - <name2> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name5> 、 <name3> とする	<name1> , <name2> , <name5> , <name3> = map ( int , input ( ) . split ( ) )	<name2> , <name5> , <name3> = map ( int , input ( ) . split ( ) )
<name6> を <name5> として <name2> をソートする	<name2> . sort ( <name5> = <name6> )	<name3> . sort ( <name5> = <name6> )
<name3> の <name6> 番目の <val2> 番目を <name4> とする	<name4> = <name3> [ <name6> ] [ <val2> ]	<name4> = <name3> [ <name6> ] [ <val2> ]
<name2> の <name6> 番目の <name3> 番目が <val5> と等しいとき、 <blk> <val4> を <name1> の <name6> 番目の <name3> 番目にする </blk>	if <name2> [ <name6> ] [ <name3> ] == <val5> : <blk> <name1> [ <name6> ] [ <name3> ] = <val4> </blk>	if <name2> [ <name6> ] [ <name3> ] == <val5> : <blk> <name1> [ <name6> ] [ <name3> ] = <val4> </blk>
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name4> とする	<name1> , <name5> , <name4> = map ( int , <name3> ( ) . split ( ) )	<name3> , <name5> , <name4> = map ( int , <name3> ( ) . split ( ) )
<name2> ( <name6> , <name4> . <name5> [ <name1> ] ) を <name3> とする	<name3> = <name2> ( <name6> , <name4> . <name5> [ <name1> ] )	else = <name2> ( <name6> , <name4> . <name5> [ <name1> ] )
<name4> 内の <name1> の先頭の出現回数が <val2> と等しくまたは <name4> 内の <name1> の <val6> 番目の出現回数が <val2> と等しいとき、	if <name4> . count ( <name1> [ 0 ] ) == <val2> or <name4> . count ( <name1> [ <val6> ] ) == <val2> :	list <name4> . count ( <name1> [ 0 ] ) == <val2> or <name4> . count ( <name1> [ <val6> ] ) == <val2> :
<val2> を <name1> の <name4> とするを <name1> の <name6> にする	<name1> . <name6> = <name1> . <name4> = <val2>	<name4> . <name1> . <name6> = <name1> . <name4> = <val2>
<name5> . <name1> . <name6> ( <name2> ) を <name3> とする	<name3> = <name5> . <name1> . <name6> ( <name2> )	<name4> = <name5> . <name1> . <name6> ( <name2> )
<name5> の <val2> 乗に <name1> の <val2> 乗を加えた値が <name3> の <val2> 乗と等しいとき <val6> 、そうでなければ <val4> を出力する	print ( <val6> if <name5> ** <val2> + <name1> ** <val2> == <name3> ** <val2> else <val4> )	<name1> . print ( <val6> if <name5> ** <val2> + <name1> ** <val2> == <name3> ** <val2> else <val4> )
<name6> 、 <name2> の <name4> 番目の最小値を <name6> とする	<name6> = min ( <name6> , <name2> [ <name4> ] )	<name6> = min ( <name6> , <name2> [ <name4> ] )
internal <name1> を <name6> の <name1> 番目の <val4> 番目にする	<name6> [ <name1> ] [ <val4> ] = 'internal node'	( <name6> [ <name1> ] [ <val4> ] ) [ <name1> ] = 'internal <name1>
<name1> を <val3> を <name4> の <name6> 番目の <name5> 番目の順序数から <val2> の順序数を引いた値だけ左シフトした値との論理和にする	<name1> | = <val3> << ( ord ( <name4> [ <name6> ] [ <name5> ] ) - ord ( <val2> ) )	<name4> | = <val3> << ( ord ( <name4> [ <name6> ] [ <name5> ] ) - ord ( <val2> ) )
<name1> の末尾に ( <name6> の <name4> 番目の <name5> 番目、 <name2> ) の組を追加する	<name1> . append ( ( <name6> [ <name4> ] [ <name5> ] , <name2> ) )	not <name1> . append ( ( <name6> [ <name4> ] [ <name5> ] , <name2> ) )
- を返す	return '-'	assert - ' )
<val5> から <val5> に <val1> を加えた値未満までの数列の各要素を <name2> とし、、つまり文字コード <name2> の文字の列を <name3> とする	<name3> = [ chr ( <name2> ) for <name2> in range ( <val5> , <val5> + <val1> ) ]	<name6> = [ chr ( <name2> ) for <name2> in range ( <val5> , <val5> + <val1> ) ]
<name3> の <name1> の <name5> 番目を <name5> とする	<name5> = <name3> . <name1> [ <name5> ]	<name5> = <name3> . <name1> [ <name5> ]
<name2> の <name1> 番目に <name5> を加えた値を <name2> の <name4> 番目にする	<name2> [ <name4> ] = <name2> [ <name1> ] + <name5>	<name2> [ <name4> ] = <name2> [ <name1> ] + <name5>
<name4> の <val1> 番目の整数値に <val6> を加えた値を <name2> とする	<name2> = int ( <name4> [ <val1> ] ) + <val6>	<name2> = int ( <name4> [ <val1> ] ) + <val6>
<name6> の <name1> の長さが <val4> と等しいとき、	if len ( <name6> . <name1> ) == <val4> :	> len ( <name6> . <name1> ) == <val4> :
<name3> の先頭を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( int , <name3> [ 0 ] . split ( ) )	<name2> , <name1> = map ( int , <name3> [ 0 ] . split ( ) )
<name3> . <name2> ( <name1> , <name3> . <name6> [ <name4> -1 ] ) を <name1> とする	<name1> = <name3> . <name2> ( <name1> , <name3> . <name6> [ <name4> - 1 ] )	<name1> = <name3> . <name2> ( <name1> , <name3> . <name6> [ <name4> - 1 ] )
<name5> の <name2> 番目を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name5> [ <name2> ]	<name3> [ <name1> ] = <name5> [ <name2> ]
<val3> から <val6> に <val6> を掛けた値未満までの数列の各要素を <name5> とし、 <val3> の列を <name2> とする	<name2> = [ <val3> for <name5> in range ( <val6> * <val6> ) ]	<name2> = [ <val3> for <name5> in range ( <val6> * <val6> ) ]
<name2> の、つまり先頭から <val4> 番目までの部分列が <val1> ' と等しくかつ s の末尾が ' ~ ' と等しくかつ ' #' が <name2> に含まれるとき、	if <name2> [ : <val4> ] == <val1> ' and s [ - 1 ] == ' ~ ' and ' #' in <name2> :	list ( <name2> [ : <val4> ] == <val1> and s [ - 1 : ] in <name2> ' <name2> ) :
<name4> が <name5> に含まれるとき、 <blk> <name5> の <name4> 番目を <val6> だけ増加させる </blk>	if <name4> in <name5> : <blk> <name5> [ <name4> ] += <val6> </blk>	try : if <name4> in <name5> : <blk> <name5> [ <name4> ] += <val6> </blk>
<name6> の <name5> ( <name1> ) 番目を <val2> だけ増加させる	<name6> [ <name5> ( <name1> ) ] += <val2>	<name4> [ <name5> ( <name1> ) ] += <val2>
<name4> が <name6> と等しいとき、 <blk> 何も返さない </blk>	if <name4> == <name6> : <blk> return </blk>	if <name4> == <name6> : <blk> return </blk>
<name5> に <val6> を加えた値を返す	return <name5> + <val6>	self = <name5> + <val6>
( <val5> 、 <val6> 、 <val3> 、 <val1> 、 <val2> 、 <val4> 、 <val5> 、 <val6> ) の組を <name4> とする	<name4> = ( <val5> , <val6> , <val3> , <val1> , <val2> , <val4> , <val5> , <val6> )	<name4> = ( <val5> , <val6> , <val3> , <val1> , <val2> , <val4> , <val5> , <val6> )
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name2> とする	<name6> , <name4> , <name2> = map ( int , <name1> . readline ( ) . split ( ) )	<name4> , <name2> = map ( int , <name1> . readline ( ) . split ( ) )
<name3> から <name1> に <val6> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> , <name1> + <val6> ) :	for <name2> in range ( <name3> , <name1> + <val6> ) :
<val1> の <name4> から <val5> を引いた値のビット長乗を <name3> の <name6> にする	<name3> . <name6> = <val1> ** ( ( <name4> - <val5> ) . bit_length ( ) )	<name4> . <name6> = <val1> ** ( ( <name4> - <val5> ) . bit_length ( ) )
<val1> に <name2> を掛けた値から <val5> 未満までの <val4> に <name2> を掛けた値間隔の数列を順に <name3> として、繰り返す <blk> 偽を <name6> の <name3> 番目にする </blk>	for <name3> in range ( <val1> * <name2> , <val5> , <val4> * <name2> ) : <blk> <name6> [ <name3> ] = False </blk>	) for <name3> in range ( <val1> * <name2> , <val5> , <val4> * <name2> ) : <blk> <name6> [ <name3> ] = False </blk>
<name6> の先頭を取り出した値を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name6> . pop ( )	<name6> , <name4> , <name2> = <name6> . pop ( )
0 から <name3> に <val5> を加えた値に <name4> に <val5> を加えた値を掛けた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( ( <name3> + <val5> ) * ( <name4> + <val5> ) ) :	continue for <name6> in range ( ( <name3> + <val5> ) * ( <name4> + <val5> ) ) :
<name3> を <name5> 分の一にする	<name3> /= <name5>	( <name3> // = <name5> )
{}を出力する	print ( { ( a | b ) & mask : 032 b } )	print ( { ( x & 2 ) } )
<name3> の先頭から <name5> を探して見つかった位置が <name3> の先頭から <name2> を探して見つかった位置と等しいかどうかを返す	return <name3> . find ( <name5> ) == <name3> . find ( <name2> )	x return <name3> . find ( <name5> ) == <name3> . find ( <name2> )
\ <name4> ( <val1> % <name3> ) \	\ <name4> ( <val1> % <name3> ) \	\ <name4> ( <val1> % <name3> ) \
( <val2> 、 <val1> 、 <val2> 、 -1 ) の組を <name3> とする	<name3> = ( <val2> , <val1> , <val2> , - <val1> )	<name3> = ( <val2> , <val1> , <val2> , - <val2> )
. を <name2> の <name1> 番目の <name3> 番目にする	<name2> [ <name1> ] [ <name3> ] = '.'	( <name2> [ <name1> ] [ <name3> ] = '.' )
<name3> を <name1> に <val2> を加えた値で割った余りが <val6> と等しいとき、	if <name3> % ( <name1> + <val2> ) == <val6> :	list ( <name3> % ( <name1> + <val2> ) == <val6> ) :
<name4> 、 <name6> から <name4> を引いた値の最小値を <name4> とする	<name4> = min ( <name4> , <name6> - <name4> )	<name4> = min ( <name4> , <name6> - <name4> )
<name6> の末尾に ( <val5> 、 <name2> 、 <val3> ) の組を追加する	<name6> . append ( ( <val5> , <name2> , <val3> ) )	<name4> . append ( ( <val5> , <name2> , <val3> ) )
<name1> の先頭を <name3> の <name1> 座標にする	<name3> . <name1> = <name1> [ 0 ]	<name3> . <name1> = <name1> [ 0 ]
<name2> 、 <name6> 、 <name1> はグローバル変数とする	global <name2> , <name6> , <name1>	& = <name2> , <name6> , <name1>
<name1> の <name3> 番目の <name6> 番目のとき、	if <name1> [ <name3> ] [ <name6> ] :	[ if <name1> [ <name3> ] [ <name6> ] :
<name2> が <val5> より小さい間、次を繰り返す	while <name2> < <val5> :	del ( <name2> < <val5> ) :
<name1> の末尾に ( <name3> に <name2> に <name6> から <name3> を引いた値を掛けた値を加えた値、 <name4> に <name2> に <name5> から <name4> を引いた値を掛けた値を加えた値 ) の組を追加する	<name1> . append ( ( <name3> + <name2> * ( <name6> - <name3> ) , <name4> + <name2> * ( <name5> - <name4> ) ) )	<name1> . append ( ( <name3> + <name2> * ( <name6> - <name3> ) , <name4> + <name2> * ( <name5> - <name4> ) ) )
( - <name2> 、 <name6> ) の組を返す	return ( - <name2> , <name6> )	yield ( - <name2> , <name6> )
( ( <name5> , <name6> の各要素を <name5> とし、 <name4> ( <name1> ) の列 ) ) からなる辞書を <name2> とする	<name2> = { <name5> : [ <name4> ( <name1> ) for <name5> in <name6> ] }	<name2> = { <name5> : [ <name4> ( <name1> ) for <name5> in <name6> ] }
<name4> が <val5> より大きいとき、	if <name4> > <val5> :	list ( <name4> > <val5> ) :
<name2> ( <name1> , ( <name5> , <name3> , <name6> , <name4> ) )	<name2> ( <name1> , ( <name5> , <name3> , <name6> , <name4> ) )	<name2> ( <name1> , ( <name5> , <name3> , <name6> , <name4> ) )
<name6> . <name4> ( <name2> ) を <name2> とする	<name2> = <name6> . <name4> ( <name2> )	dict = <name6> . <name4> ( <name2> )
入力された文字列を <val6> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name3> とする	<name3> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]	<name3> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]
<name5> の <name1> の <name4> 番目の <val6> 番目を返す	return <name5> . <name1> [ <name4> ] [ <val6> ]	yield <name5> . <name1> [ <name4> ] [ <val6> ]
<name2> ( <name6> , <name3> + <val4> , ( <name5> , <name1> ) )	<name2> ( <name6> , <name3> + <val4> , ( <name5> , <name1> ) )	set ( <name2> ( <name6> , <name3> + <val4> , ( <name5> , <name1> ) ) )
<name1> の <name5> 番目から <name1> の <name4> 番目を引いた値の絶対値を <name6> とする	<name6> = abs ( <name1> [ <name5> ] - <name1> [ <name4> ] )	else = abs ( <name1> [ <name5> ] - <name1> [ <name4> ] )
<val5> を <name4> の先頭の <val3> 番目にする	<name4> [ <val3> ] [ <val3> ] = <val5>	( <name4> [ <val3> ] [ <val3> ] = <val5> )
<name1> が <val2> と等しくないとき、 <blk> 改行せずに <val6> を書式として <name1> で整形した文字列を出力する </blk>	if <name1> != <val2> : <blk> print ( <val6> . format ( <name1> ) , end = '' ) </blk>	while <name1> != <val2> : <blk> print ( <val6> . format ( <name1> ) , end = '' ) </blk>
<name5> に <val4> を掛けた値に <name2> を加えた値から <val3> を引いた値を出力する	print ( <name5> * <val4> + <name2> - <val3> )	<val3> print ( ( <name5> * <val4> + <name2> ) - <val3> )
0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列をソートした列を <name2> とする	<name2> = sorted ( [ int ( input ( ) ) for <name5> in range ( <name6> ) ] )	<name2> = sorted ( [ int ( input ( ) ) for <name5> in range ( <name6> ) ] )
<name3> . <name6> ( <name2> )	<name3> . <name6> ( <name2> )	( <name3> . <name6> ( <name2> ) )
<name3> の <name1> 番目の <val5> 番目を <name2> とする	<name2> = <name3> [ <name1> ] [ <val5> ]	<name2> = <name3> [ <name1> ] [ <val5> ]
<name2> の <name6> 番目の <name4> 番目が <name2> の <name1> 番目の <name5> 番目と等しいとき、	if <name2> [ <name6> ] [ <name4> ] == <name2> [ <name1> ] [ <name5> ] :	while <name2> [ <name6> ] [ <name4> ] == <name2> [ <name1> ] [ <name5> ] :
<name4> から <name1> を引いた値を <val5> で割った商を <name3> とする	<name3> = ( <name4> - <name1> ) // <val5>	<name3> = ( <name4> - <name1> ) // <val5>
<name5> を <name4> を <val2> で割った商だけ増加させる	<name5> += <name4> // <val2>	( <name5> += <name4> // <val2> )
<name3> から読み込んだ一行を空白で分割した字句列を <name5> とする	<name5> = <name3> . readline ( ) . split ( )	) <name5> = <name3> . readline ( ) . split ( )
<name6> の <name1> 番目から <name2> 番目までの部分列に ( <name5> ) からなる列を加えた値を <name4> とする	<name4> = <name6> [ <name1> : <name2> ] + [ <name5> ]	<name4> = <name6> [ <name1> : <name2> ] + [ <name5> ]
( <val6> 、 ( <name1> の先頭、 <name2> の先頭 ) の組 ) からなる列を返す	return [ <val6> , ( <name1> [ 0 ] , <name2> [ 0 ] ) ]	return [ <val6> , ( <name1> [ 0 ] , <name2> [ 0 ] ) ]
<name5> の総和を <name6> で割った値を <name3> とする	<name3> = sum ( <name5> ) / <name6>	<name3> = sum ( <name5> ) / <name6>
<name3> ( ) のリストを <name4> とする	<name4> = list ( <name3> ( ) )	<name4> = list ( <name3> ( ) )
<name5> の末尾を <name6> とする	<name6> = <name5> [ - 1 ]	( <name6> = <name5> [ - 1 ] )
light fly を出力する	print ( 'light fly' )	& print ( 'light 'light heavy' ) )
<name2> の <name3> の <name5> 番目が <name1> の <name4> の <name6> と等しいとき、	if <name2> . <name3> [ <name5> ] == <name1> . <name4> . <name6> :	. if <name2> . <name3> [ <name5> ] == <name1> . <name4> . <name6> :
<val1> を <name5> の <name3> の <name6> 番目にする	<name5> . <name3> [ <name6> ] = <val1>	( <name5> . <name3> [ <name6> ] = <val1> )
<name5> . <name3> ( ) の長さを <name1> とする	<name1> = len ( <name5> . <name3> ( ) )	<name1> = len ( <name5> . <name3> ( ) )
<name6> が os . <name2> の末尾と等しいとき、	if <name6> == <name2> [ - 1 ] :	list ( <name6> == <name2> [ - 1 ] ) :
次は例外に関する条件がある <blk> 入力された文字列の整数値を <name3> とする </blk>	try : <blk> <name3> = int ( input ( ) ) </blk>	try : <blk> <name3> = int ( input ( ) ) </blk>
<name5> の末尾に ( <name4> 、 <name2> ) の組を追加する	<name5> . append ( ( <name4> , <name2> ) )	<name4> . append ( ( <name4> , <name2> ) )
<name4> の値の集まりに番号付した組の列の各要素を <name2> 、 <name5> とし、 ( <name5> 、 <name2> ) の組の列を <name6> とする	<name6> = [ ( <name5> , <name2> ) for <name2> , <name5> in enumerate ( <name4> . values ( ) ) ]	<name6> = [ ( <name5> , <name2> ) for <name2> , <name5> in enumerate ( <name4> . values ( ) ) ]
<name2> の y 座標に <name1> を掛けた値を <name3> とする	<name3> = <name2> . y * <name1>	<name3> = <name2> . y * <name1>
<name3> を <val5> で割った余りが <val1> と等しいとき、	if <name3> % <val5> == <val1> :	list ( <name3> % <val5> == <val1> ) :
<name2> の <val4> 番目が <name6> 以下の間、次を繰り返す	while <name2> [ <val4> ] <= <name6> :	del <name2> [ <val4> ] <= <name6> :
<name5> が、つまり未定値と等しいとき、 <blk> <name3> ( <name1> ) を <name2> とする </blk>	if <name5> == None : <blk> <name2> = <name3> ( <name1> ) </blk>	if <name5> == None : <blk> <name2> = <name3> ( <name1> ) </blk>
<name5> が ( <name1> 、 <name6> 、 <name3> 、 <name4> 、 <name2> ) からなる列に含まれないとき、	if <name5> not in [ <name1> , <name6> , <name3> , <name4> , <name2> ] :	isinstance ( <name5> not in [ <name1> , <name6> , <name3> , <name4> , <name2> ] ) :
<name1> を <name2> の <name6> の <name3> 番目にする	<name2> . <name6> [ <name3> ] = <name1>	<name4> . <name2> [ <name6> . <name3> ] = <name1>
<name1> を <val2> で割った商を <name4> とする	<name4> = ( <name1> // <val2> )	<name4> = <name1> // <val2>
<name1> が <name5> と等しいかどうかが <name6> と等しいかどうかが <name2> と等しいかどうかが <val3> と等しいとき、	if <name1> == <name5> == <name6> == <name2> == <val3> :	list == <name1> == <name5> == <name6> == <name2> == <val3> :
<name6> の <name3> 番目の <name5> に <val1> を加えた値番目が <val1> と等しいとき、	if <name6> [ <name3> ] [ <name5> + <val1> ] == <val1> :	list ( <name6> [ <name3> ] [ <name5> + <val1> ] == <val1> :
<name6> の <name4> の <name2> 番目を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in <name6> . <name4> [ <name2> ] :	for <name5> , <name3> in <name6> . <name4> [ <name2> ] :
<name1> が <name6> と等しくなくかつ <name4> が <name2> と等しくないとき、	if <name1> != <name6> and <name4> != <name2> :	raise <name1> != <name6> and <name4> != <name2> :
( <val2> 、 <val3> 、 <val6> 、 <val1> 、 <val5> 、 <val4> 、 <val2> 、 <val3> 、 <val6> 、 <val1> 、 <val5> 、 <val4> 、 <val2> 、 <val3> 、 <val6> 、 <val1> 、 <val5> 、 <val4> ) の組を <name4> とする	<name4> = ( <val2> , <val3> , <val6> , <val1> , <val5> , <val4> , <val2> , <val3> , <val6> , <val1> , <val5> , <val4> , <val2> , <val3> , <val6> , <val1> , <val5> , <val4> )	<name4> = ( <val2> , <val3> , <val6> , <val1> , <val5> , <val4> , <val2> , <val3> , <val6> , <val1> , <val5> , <val2> , <val3> , <val6> , <val1> , <val5> , <val4> )
<name4> の <name1> 番目の <name3> 番目が <name6> と等しくなくかつ <name4> の <name3> 番目の <name5> 番目が <name6> と等しくないとき、	if <name4> [ <name1> ] [ <name3> ] != <name6> and <name4> [ <name3> ] [ <name5> ] != <name6> :	for <name4> in <name4> [ <name1> ] [ <name3> ] != <name6> and <name4> [ <name3> ] [ <name5> ] != <name6> :
<val3> が <name6> の <name4> 番目の順序数以下かどうかが <val1> 以下のとき、	if <val3> <= ord ( <name6> [ <name4> ] ) <= <val1> :	list ( <val3> <= ord ( <name6> [ <name4> ] ) <= <val1> ) :
0 から <name2> 未満までの数列の各要素を <name1> とし、 <name3> ( ) の列を <name4> とする	<name4> = [ <name3> ( ) for <name1> in range ( <name2> ) ]	<name4> = [ <name3> ( ) for <name1> in range ( <name2> ) ]
<name2> に <val4> を加えた値を出力する	print ( <name2> + <val4> )	print ( <name2> + <val4> )
<name1> の <name2> の <val4> 番目、 <name1> の <name2> の先頭、 <name1> の <name2> の <val3> 番目、 <name1> の <name2> の <val5> 番目を <name1> の <name2> の先頭、 <name1> の <name2> の <val3> 番目、 <name1> の <name2> の <val5> 番目、 <name1> の <name2> の <val4> 番目とする	<name1> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val4> ] = <name1> . <name2> [ <val4> ] , <name1> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val5> ]	<name2> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val4> ] = <name1> . <name2> [ <val4> ] , <name1> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val5> ]
<name1> ( <name4> [ <name5> ] ) のリストを <name4> の <name5> 番目にする	<name4> [ <name5> ] = list ( <name1> ( <name4> [ <name5> ] ) )	<name3> [ <name5> ] = list ( <name1> ( <name4> [ <name5> ] ) )
<name3> の <name5> 番目の末尾に ( <name6> 、 <name1> ) の組を追加する	<name3> [ <name5> ] . append ( ( <name6> , <name1> ) )	<name3> [ <name5> ] . append ( ( <name6> , <name1> ) )
<name6> の <name1> 番目でない間、次を繰り返す	while not <name6> [ <name1> ] :	del not <name6> [ <name1> ] :
0 から <val3> を <name4> だけ左シフトした値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> << <name4> ) :	) : in range ( <val3> << <name4> ) :
<name3> の <name5> の <name1> 番目の各要素を <name4> とし、 <name3> . <name6> と <val2> の論理積を <name4> だけ左シフトした値の列の総和を出力する	print ( sum ( [ <name3> . <name6> & <val2> << <name4> for <name4> in <name3> . <name5> [ <name1> ] ] ) )	) print ( sum ( [ ( <name3> . <name6> & <val2> << <name4> ) for <name4> in <name3> . <name5> [ <name1> ] ] ) )
0 から <name5> から <val2> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> - <val2> ) :	range for <name4> in range ( <name5> - <val2> ) :
<name5> のとき <val1> 、そうでなければ <val2> を返す	return <val1> if <name5> else <val2>	def <name5> else = <val1> if <name5> else <val2>
<name5> を <name6> 分の一にする <name4> を <name6> 分の一にする	<name5> // = <name6> <name4> // = <name6>	<name6> // = <name5> <name4> // = <name6>
<val1> に <name2> に <val4> を加えた値を掛けた値を <name5> とする	<name5> = <val1> * ( <name2> + <val4> )	else = <val1> * ( <name2> + <val4> )
<name3> を <val6> で割った余りが <val1> と等しい間、次を繰り返す	while <name3> % <val6> == <val1> :	for <name3> in <name3> % <val6> == <val1> :
<name4> 、 <name5> の <name6> から <val2> を引いた値番目から <name5> の <name6> 番目を引いた値の最大値を <name4> とする	<name4> = max ( <name4> , <name5> [ <name6> - <val2> ] - <name5> [ <name6> ] )	<name4> = max ( <name4> , <name5> [ <name6> - <val2> ] - <name5> [ <name6> ] )
<name1> の <name3> 番目を展開し、それぞれ <name4> 、 <name2> 、 <name5> とする	<name4> , <name2> , <name5> = <name1> [ <name3> ]	( <name4> , <name2> , <name5> = <name1> [ <name3> ] )
<name4> . <name5> ( <name3> ) を <name6> とする	<name6> = <name4> . <name5> ( <name3> )	<name6> = <name4> . <name5> ( <name3> )
\ <name6> + <val4> に <name1> を加えた値に <val4> を加えた値に <name3> を <val2> で割った商を掛けた値に <name3> を <val2> で割った余りのとき <name6> に <val4> を加えた値、そうでなければ <val5> を加えた値を出力する\	\ print ( ( <name6> + <val4> + <name1> + <val4> ) * ( <name3> // <val2> ) + ( <name6> + <val4> if <name3> % <val2> else <val5> ) ) \	for print ( ( <name6> + <val4> + <name1> + <val4> ) * ( <name3> // <val2> ) + ( <name6> + <val4> if <name3> % <val2> else <val5> ) ) \
<name3> を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name3> 、 <name1> 、 <name2> 、 <name6> 、 <name5> 、 <name4> とする	<name5> , <name4> , <name3> , <name1> , <name2> , <name6> , <name5> , <name4> = map ( float , <name3> . split ( ) )	<name4> , <name3> , <name1> , <name2> , <name6> , <name5> , <name4> = map ( float , <name3> . split ( ) )
<name2> ( <name6> , <name1> ) が <val3> より小さいとき、	if <name2> ( <name6> , <name1> ) < <val3> :	list ( <name2> ( <name6> , <name1> ) < <val3> :
<name6> の <name5> から <val2> を引いた値番目の <name4> から <val2> を引いた値番目、 <name6> の <name5> から <val2> を引いた値番目の <name4> 番目、 <name6> の <name5> 番目の <name4> から <val2> を引いた値番目の最小値に <val2> を加えた値を <name6> の <name5> 番目の <name4> 番目にする	<name6> [ <name5> ] [ <name4> ] = min ( <name6> [ <name5> - <val2> ] [ <name4> - <val2> ] , <name6> [ <name5> - <val2> ] [ <name4> ] , <name6> [ <name5> ] [ <name4> - <val2> ] ) + <val2>	<name2> [ <name5> ] [ <name4> ] = min ( <name6> [ <name5> - <val2> ] [ <name4> - <val2> ] , <name6> [ <name5> - <val2> ] [ <name4> ] , <name6> [ <name5> ] [ <name4> ] - <val2> ] ) + <val2>
<val5> を <name1> の先頭の <val6> 番目にする	<name1> [ <val6> ] [ <val6> ] = <val5>	<name4> [ <val6> ] [ <val6> ] = <val5>
Case 、 '{}:' 、 <name1> を出力する	print ( 'Case' , { c } : , <name1> )	end ( 'Case ' . join ( <name1> ) , <name1> )
<name5> の長さが <val3> より大きい間、次を繰り返す	while len ( <name5> ) > <val3> :	for <name5> in len ( <name5> ) > <val3> :
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = list ( map ( int , input ( ) . split ( <val1> ) ) )	<name3> , <name5> = list ( map ( int , input ( ) . split ( <val1> ) ) )
<name4> の <name6> の先頭番目を順に <name3> として、繰り返す	for <name3> in <name4> [ <name6> [ 0 ] ] :	in <name4> [ <name6> [ 0 ] ] :
<name5> の先頭に <name2> を追加する	<name5> . appendleft ( <name2> )	<name3> . appendleft ( <name2> )
<val4> が <name5> の <name3> 番目の順序数以下かどうかが <val2> 以下かつ <name3> が <val6> と等しくないとき、	if <val4> <= ord ( <name5> [ <name3> ] ) <= <val2> and <name3> != <val6> :	for <name5> in <val4> <= ord ( <name5> [ <name3> ] ) <= <val2> and <name3> != <val6> :
<name4> を <val5> で割った商を <name4> とする	<name4> = <name4> // <val5>	( <name4> = <name4> // <val5> )
<name2> の <name5> から <name6> の <name5> を引いた値を <name1> とする	<name1> = <name2> . <name5> - <name6> . <name5>	<name1> = <name2> . <name5> - <name6> . <name5>
- <name4> の y 座標を <name1> とする	<name1> = - <name4> . y	( <name1> = - <name4> . y )
( ( <val1> ) からなる列の <val1> から <name6> に <val2> を加えた値未満までの数列の各要素を <name3> とし、 <name4> に <val2> を加えた値の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val1> ] * [ ( <name4> + <val2> ) for <name3> in range ( <name6> + <val2> ) ] ]	<name5> = [ [ <val1> ] * [ ( <name4> + <val2> ) for <name3> in range ( <name6> + <val2> ) ] ]
<name4> を <name5> に <val2> を掛けた値だけ増加させる	<name4> += <name5> * <val2>	( <name4> += <name5> * <val2> )
<val1> を書式として <name4> . <name2> ( <name6> ) で整形した文字列を出力する	print ( <val1> . format ( <name4> . <name2> ( <name6> ) ) )	<val3> print ( <val1> . format ( <name4> . <name2> ( <name6> ) ) )
<name1> の各要素を <name4> とし、 <name4> の <val3> 番目が <name5> と等しいときの <name4> の列の先頭を <name6> とする	<name6> = [ <name4> for <name4> in <name1> if <name4> [ <val3> ] == <name5> ] [ 0 ]	<name6> = [ <name4> for <name4> in <name1> if <name4> [ <val3> ] == <name5> ] [ 0 ]
<name6> の <name1> 番目が <val2> と等しくないとき、	if <name6> [ <name1> ] != <val2> :	raise <name6> [ <name1> ] != <val2> :
<name3> ( <name2> . <name6> [ <val4> : ] )	<name3> ( <name2> . <name6> [ <val4> : ] )	<name5> ( <name2> . <name6> [ <val4> : ] )
<name6> に <name1> を加えた値を <val2> で割った商を <name5> とする	<name5> = ( <name6> + <name1> ) // <val2>	<name5> = ( <name6> + <name1> ) // <val2>
0 から <val2> 未満までの数列の各要素を <name5> とし、、つまり未定値の列を <name3> の <val6> 番目にする	<name3> [ <val6> ] = [ None for <name5> in range ( <val2> ) ]	<name3> [ <val6> ] = [ None for <name5> in range ( <val2> ) ]
入力された文字列の両端から空白改行を取り除いた文字列を <val4> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = [ int ( <name1> ) for <name1> in input ( ) . strip ( ) . split ( <val4> ) ]	<name2> , <name5> = [ int ( <name1> ) for <name1> in input ( ) . strip ( ) . split ( <val4> ) ]
<name1> を展開し、それぞれ <name1> 、 <name3> 、 <name2> 、 <name6> 、 <name4> 、 <name5> とする	<name1> , <name3> , <name2> , <name6> , <name4> , <name5> = <name1>	( <name1> , <name3> , <name2> , <name6> , <name4> , <name5> = <name1> )
0 から <name4> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name4> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name4> ) ]
<name1> から <name3> を引いた値を出力する	print ( <name1> - <name3> )	print ( <name1> - <name3> )
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( int , <name3> . readline ( ) . split ( ) )	input , <name1> = map ( int , <name3> . readline ( ) . split ( ) )
- <name5> から <name3> の平方根を引いた値を <name6> で割った値を <name4> とする	<name4> = ( - <name5> - sqrt ( <name3> ) ) / <name6>	<name4> = ( - <name5> - sqrt ( <name3> ) ) / <name6>
<name2> から <name4> の <name6> 番目を引いた値を <name3> とする <name1> の <name6> 番目から <name1> の <name3> 番目を引いた値を <name5> とする	<name3> = ( <name2> - <name4> [ <name6> ] ) <name5> = ( <name1> [ <name6> ] - <name1> [ <name3> ] )	<name3> = <name2> - <name4> [ <name6> ] <name5> = <name1> [ <name6> ] - <name1> [ <name3> ]
空辞書を <name6> とする	<name6> = { }	( <name6> = { } )
<name3> の <name1> の <name5> 番目の末尾に <name4> を追加する	<name3> . <name1> [ <name5> ] . append ( <name4> )	<name1> . <name1> [ <name5> ] . append ( <name4> )
<name2> の <val6> 番目を <name4> の <val1> 番目にする	<name4> [ <val1> ] = <name2> [ <val6> ]	( <name4> [ <val1> ] = <name2> [ <val6> ] )
<name1> に <name2> を加えた値を <name6> とする	<name6> = <name1> + <name2>	( <name6> = <name1> + <name2> )
<name2> . <name3> . <name1> ( )	<name2> . <name3> . <name1> ( )	( <name2> . <name3> . <name1> ( ) )
<name5> を <name4> から <name3> を引いた値、 <name2> から <name4> を引いた値の最小値だけ増加させる	<name5> += min ( <name4> - <name3> , <name2> - <name4> )	<name2> += min ( <name4> - <name3> , <name2> - <name4> )
<name2> を <val5> で割った余りが <val4> と等しくかつ <name2> を <val3> で割った余りが <val4> と等しくなくまたは <name2> を <val1> で割った余りが <val4> と等しいかどうかを返す	return <name2> % <val5> == <val4> and ( <name2> % <val3> != <val4> or <name2> % <val1> == <val4> )	x return <name2> % <val5> == <val4> and <name2> % <val3> != <val4> or <name2> % <val1> == <val4>
<name5> . <name2> ( <name4> ) を <name6> とする	<name6> = <name5> . <name2> ( <name4> )	<name6> = <name5> . <name2> ( <name4> )
<name1> の末尾に <name4> の文字列を追加する	<name1> . append ( str ( <name4> ) )	<name1> . append ( str ( <name4> ) )
( <val6> ) からなる列の <name2> の先頭の長さ回分の列を <name3> とする	<name3> = [ <val6> ] * len ( <name2> [ <val6> ] )	<name3> = [ <val6> ] * len ( <name2> [ <val6> ] )
( <name1> の <val5> 番目、 <name1> の <val2> 番目、 <name1> の先頭、 <name1> の <val6> 番目、 <name1> の <val4> 番目、 <name1> の <val3> 番目 ) からなる列を <name4> の <name3> にする	<name4> . <name3> = [ <name1> [ <val5> ] , <name1> [ <val2> ] , <name1> [ 0 ] , <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val3> ] ]	<name4> . <name3> = [ <name1> [ <val5> ] , <name1> [ <val2> ] , <name1> [ 0 ] , <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val3> ] ]
入力された文字列を <val2> で分割した字句列を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = input ( ) . split ( <val2> )	<name1> , <name3> = input ( ) . split ( <val2> )
<name3> に <name5> を加えた値を <name5> の ( <name1> に <val6> を加えた値、 <name4> 、 <name2> ) の組番目にする	<name5> [ ( <name1> + <val6> , <name4> , <name2> ) ] = <name3> + <name5>	<name1> [ ( <name1> + <val6> , <name4> , <name2> ) ] = <name3> + <name5>
<name5> を展開し、それぞれ <name1> 、 <name2> 、 <name3> とする	<name1> , <name2> , <name3> = <name5>	<name1> , <name2> , <name3> = <name5>
<name6> 、 <name5> の <name4> から <val2> を引いた値番目から <name5> の <name4> 番目を引いた値の最大値を <name6> とする	<name6> = max ( <name6> , <name5> [ <name4> - <val2> ] - <name5> [ <name4> ] )	else = max ( <name6> , <name5> [ <name4> - <val2> ] - <name5> [ <name4> ] )
( <name6> から <name4> を引いた値、 <name3> から <name1> を引いた値 ) の組を <name2> とする	<name2> = ( <name6> - <name4> , <name3> - <name1> )	<name2> = ( <name6> - <name4> , <name3> - <name1> )
<name4> の先頭が <name1> の <name5> 番目から、つまり末尾までの部分列で始まるとき、	if <name4> . startswith ( <name1> [ <name5> : ] ) :	gcd ( <name4> [ 0 ] == <name1> . <name5> [ : ] ) :
<val2> 、 <val3> 、 <val1> を <name4> 、 <name5> 、 <name6> とする	<name4> , <name5> , <name6> = <val2> , <val3> , <val1>	[ <name4> , <name5> , <name6> = <val2> , <val3> , <val1>
<name6> の <name4> の <val5> 番目の整数値番目の末尾に <name4> の <val2> 番目を追加する	<name6> [ int ( <name4> [ <val5> ] ) ] . append ( <name4> [ <val2> ] )	<name4> [ int ( <name4> [ <val5> ] ) ] . append ( <name4> [ <val2> ] )
<name5> の <name6> 番目の <name1> 番目が <val4> と等しくないとき、	if <name5> [ <name6> ] [ <name1> ] != <val4> :	if <name5> [ <name6> ] [ <name1> ] != <val4> :
<name2> の長さに <name1> の長さを加えた値を <name4> ( ) の <name3> とする	<name4> ( ) . <name3> = len ( <name2> ) + len ( <name1> )	( <name4> ) . <name3> = len ( <name2> ) + len ( <name1> )
<name4> の末尾に ( <name5> 、 <name6> ) の組を追加する	<name4> . append ( ( <name5> , <name6> ) )	<name4> . append ( ( <name5> , <name6> ) )
<name3> が <name5> の <name6> 番目より小さい間、次を繰り返す <blk> <name6> を <val4> だけ減少させる </blk>	while <name3> < <name5> [ <name6> ] : <blk> <name6> -= <val4> </blk>	while <name3> < <name5> [ <name6> ] : <blk> <name6> -= <val4> </blk>
<name4> の <name2> 番目を返す	return <name4> [ <name2> ]	yield <name4> [ <name2> ]
<name2> ( <name6> * <val1> + <name3> , <name5> * <val1> + <name4> )	<name2> ( <name6> * <val1> + <name3> , <name5> * <val1> + <name4> )	<name2> ( <name6> * <val1> + <name3> , <name5> * <val1> + <name4> )
<name4> 、 <name6> の総和から <name4> 、 <name1> の総和を引いた値を返す	return <name4> . sum ( <name6> ) - <name4> . sum ( <name1> )	return <name4> . sum ( <name6> ) - <name4> . sum ( <name1> )
<name1> の <name5> から <val3> を引いた値番目の <name4> から <val3> を引いた値番目、 <name1> の <name5> 番目の <name4> から <val3> を引いた値番目、 <name1> の <name5> から <val3> を引いた値番目の <name4> 番目の最小値に <val3> を加えた値を <name1> の <name5> 番目の <name4> 番目にする	<name1> [ <name5> ] [ <name4> ] = min ( <name1> [ <name5> - <val3> ] [ <name4> - <val3> ] , <name1> [ <name5> ] [ <name4> - <val3> ] , <name1> [ <name5> - <val3> ] [ <name4> ] ) + <val3>	<name2> [ <name5> ] [ <name4> ] = min ( <name1> [ <name5> - <val3> ] [ <name4> - <val3> ] , <name1> [ <name5> ] [ <name4> - <val3> ] , <name1> [ <name5> - <val3> ] [ <name4> ] ) + <val3>
<name4> の x 座標が <name5> の x 座標と等しいとき、	if <name4> . x == <name5> . x :	[ if <name4> . x == <name5> . x :
<name5> の <name3> に <val2> を加えた値番目の <name6> に <val2> を加えた値番目、 <name5> の <name3> に <val2> を加えた値番目の <name6> 番目、 <name5> の <name3> 番目の <name6> に <val2> を加えた値番目の最大値を <name5> の <name3> に <val2> を加えた値番目の <name6> に <val2> を加えた値番目にする	<name5> [ <name3> + <val2> ] [ <name6> + <val2> ] = max ( <name5> [ <name3> + <val2> ] [ <name6> + <val2> ] , <name5> [ <name3> + <val2> ] [ <name6> ] , <name5> [ <name3> ] [ <name6> + <val2> ] )	<name1> [ <name3> + <val2> ] [ <name6> + <val2> ] = max ( <name5> [ <name3> + <val2> ] [ <name6> + <val2> ] , <name5> [ <name3> + <val2> ] [ <name6> ] , <name5> [ <name3> ] [ <name6> + <val2> ] )
<name1> の各要素を <name5> とし、 0 から <val3> 未満までの数列の各要素を <name2> とし、 <name5> と <val6> を <name2> だけ左シフトした値の論理積のときの <val4> の <name2> 乗の列の列の各要素を <name2> とし、 <val1> を間に入れて <name2> の各要素に整数を適用した列を連結した文字列を出力するの列	[ print ( <val1> . join ( map ( str , <name2> ) ) ) for <name2> in [ [ <val4> ** <name2> for <name2> in range ( <val3> ) if <name5> & ( <val6> << <name2> ) ] for <name5> in <name1> ] ]	print ( [ [ print ( <val1> . join ( <name2> ) ) for <name2> in [ range ( <name5> & <val6> << <name2> ) for <name2> in <name1> ] ] )
<name6> を順に <name4> 、 <name3> 、 <name2> として、繰り返す	for <name4> , <name3> , <name2> in <name6> :	. for <name4> , <name3> , <name2> in <name6> :
<val4>	<val4>	<name1> ( <val4> )
<val1> を <name4> の <name6> の <name3> 番目の <name5> 番目の <name2> 番目にする	<name4> . <name6> [ <name3> ] [ <name5> ] [ <name2> ] = <val1>	<name2> . <name6> [ <name3> ] [ <name5> ] [ <name2> ] = <val1>
<name6> の <name5> 番目の <val4> 乗が <name3> より大きいとき、 <blk> <name2> を返す </blk>	if <name6> [ <name5> ] ** <val4> > <name3> : <blk> return <name2> </blk>	while <name6> [ <name5> ] ** <val4> > <name3> : <blk> return <name2> </blk>
<name4> モジュールを用いる	from <name4> import heappush , heappop	return from <name4> import deque
<name6> 、 <name2> を <name1> で割った値の最大値を <name6> とする	<name6> = max ( <name6> , <name2> / <name1> )	<name6> = max ( <name6> , <name2> / <name1> )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name1> 、 <name2> とする	<name3> , <name5> , <name1> , <name2> = map ( int , <name4> ( ) . split ( ) )	<name3> , <name5> , <name1> , <name2> = map ( int , <name4> ( ) . split ( ) )
入力された文字列を <val4> で分割した字句列を展開し、それぞれ <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = input ( ) . split ( <val4> )	<name3> , <name1> , <name2> = input ( ) . split ( <val4> )
-1 を <name4> の <name1> 番目の <name6> 番目にする	<name4> [ <name1> ] [ <name6> ] = - 1	( <name4> [ <name1> ] [ <name6> ] = - 1 )
<name4> を <name5> の <name6> の <name2> 番目にする	<name5> . <name6> [ <name2> ] = <name4>	( <name5> [ <name6> . <name2> ] = <name4> )
0 から <name6> から <name1> を引いた値に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> - <name1> + <val2> ) :	) for <name4> in range ( <name6> - <name1> + <val2> ) :
<name3> の <name4> 番目が <val1> の <name6> 乗以上のとき、	if <name3> [ <name4> ] >= <val1> ** <name6> :	if <name3> [ <name4> ] >= <val1> ** <name6> :
0 から <val2> を <name4> だけ左シフトした値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> << <name4> ) :	) for <name5> in range ( <val2> << <name4> ) :
<name1> の <name3> 番目の末尾に ( <name2> 、 <name6> ) の組を追加する	<name1> [ <name3> ] . append ( ( <name2> , <name6> ) )	<name2> [ <name3> ] . append ( ( <name2> , <name6> ) )
<name2> をソートした列を <name3> とする	<name3> = sorted ( <name2> )	<name3> = sorted ( <name2> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name3> 、 <name4> とする	<name5> , <name1> , <name3> , <name4> = map ( int , input ( ) . split ( ) )	<name3> , <name4> = map ( int , input ( ) . split ( ) )
<name5> ( <name2> , <name3> , <name1> ) を <name4> とする	<name4> = <name5> ( <name2> , <name3> , <name1> )	<name6> = <name5> ( <name2> , <name3> , <name1> )
<name3> の <name5> を <name6> とする	<name6> = <name3> . <name5>	<name5> = <name3> . <name5>
<val5> を間に入れて <name1> 、 0 から <val3> 未満までの数列を反転した列の要素をそれぞれ組にした列の各要素を <name2> 、 <name6> とし、 <name2> のときの <name4> ( <name2> , <name6> ) の列を連結した文字列を <name3> とする	<name3> = <val5> . join ( [ <name4> ( <name2> , <name6> ) for <name2> , <name6> in zip ( <name1> , reversed ( range ( <val3> ) ) ) if <name2> ] )	else = <val5> . join ( [ <name4> ( <name2> , <name6> ) for <name2> , <name6> in zip ( <name1> , reversed ( <val3> ) ) if <name2> ] )
<name5> の <name1> に <val3> を加えた値番目の <name6> に <name2> の <val3> 番目を加えた値番目、 <name5> の <name1> 番目の <name6> 番目に <name2> の先頭を加えた値の最大値を <name5> の <name1> に <val3> を加えた値番目の <name6> に <name2> の <val3> 番目を加えた値番目にする	<name5> [ <name1> + <val3> ] [ <name6> + <name2> [ <val3> ] ] = max ( <name5> [ <name1> + <val3> ] [ <name6> + <name2> [ <val3> ] ] , <name5> [ <name1> ] [ <name6> ] + <name2> [ 0 ] )	<name5> [ <name1> + <val3> ] [ <name6> + <name2> [ <val3> ] ] = max ( <name5> [ <name1> + <val3> ] [ <name6> + <name2> [ <val3> ] ] , <name5> [ <name1> ] [ <name6> ] + <name2> [ 0 ] )
<name1> の <name6> に <name4> を加えた値番目の <name2> 番目の整数値が <val5> と等しいとき、	if int ( <name1> [ <name6> + <name4> ] [ <name2> ] ) == <val5> :	continue int ( <name1> [ <name6> + <name4> ] [ <name2> ] ) == <val5> :
関数 <name6> を <name3> 、 <name1> 、 <name4> をパラメータとして定義する <name3> . <name2> ( <name1> ) が <name3> . <name2> ( <name4> ) と等しいかどうかを返す	def <name6> ( <name3> , <name1> , <name4> ) : return <name3> . <name2> ( <name1> ) == <name3> . <name2> ( <name4> )	: <name6> ( <name3> , <name1> , <name4> ) : return <name3> . <name2> ( <name1> ) == <name3> . <name2> ( <name4> )
入力された文字列を <val6> で分割した字句列の各要素を <name3> とし、 <name1> ( <name3> ) の列を展開し、それぞれ <name2> 、 <name4> 、 <name1> 、 <name3> 、 <name6> 、 <name5> 、 <name2> 、 <name4> とする	<name2> , <name4> , <name1> , <name3> , <name6> , <name5> , <name2> , <name4> = [ <name1> ( <name3> ) for <name3> in input ( ) . split ( <val6> ) ]	<name2> , <name4> , <name1> , <name3> , <name6> , <name5> , <name2> , <name4> = [ <name1> ( <name3> ) for <name3> in input ( ) . split ( <val6> ) ]
<name2> の <name5> 番目が <val1> と等しいとき、	if <name2> [ <name5> ] == <val1> :	for <name2> [ <name5> ] == <val1> :
<val4> 、 <val2> を開いたファイルストリームに <val6> を間に入れて <val3> を開いたファイルストリームから読み込んだ一行の各要素に <name1> を適用した列を連結した文字列を書き込む	open ( <val4> , <val2> ) . write ( <val6> . join ( map ( <name1> , open ( <val3> ) . readline ( ) ) ) )	<name1> . open ( <val2> ) . join ( <val6> . join ( map ( <name1> , open ( <val3> ) . readline ( ) . <name6> ) ) )
<name2> が <val4> と等しいとき、	if <name2> == <val4> :	list == <val4> :
<name1> が <name6> と <val4> の論理積が <val3> より大きいかどうかと等しくないとき、	if <name1> != ( ( <name6> & <val4> ) > <val3> ) :	!= ( <name1> != ( <name6> & <val4> ) > <val3> ) :
0 から <name1> 未満までの数列の各要素を <name3> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name3> in range ( <name1> ) ]	<name4> = [ [ ] for <name3> in range ( <name1> ) ]
<name6> が <name1> より小さいとき、 <blk> <name6> を <name5> の <name1> 番目の先頭にする </blk>	if <name6> < <name1> : <blk> <name5> [ <name1> ] [ 0 ] = <name6> </blk>	if <name6> < <name1> : <blk> <name5> [ <name1> ] [ 0 ] = <name6> </blk>
<name2> の <name4> 番目を <val3> だけ増加させる	<name2> [ <name4> ] += <val3>	input [ <name4> ] += <val3>
<name2> の先頭の <name4> を出力する	print ( <name2> [ 0 ] . <name4> )	print ( <name2> [ 0 ] . <name4> )
<name5> の <name1> 番目を <name5> の <name2> に <val3> を加えた値番目にする	<name5> [ <name2> + <val3> ] = <name5> [ <name1> ]	<name1> [ <name2> + <val3> ] = <name5> [ <name1> ]
<name6> ( <name3> , <name4> , <val2> ) を <name5> とする	<name5> = <name6> ( <name3> , <name4> , <val2> )	else = <name6> ( <name3> , <name4> , <val2> )
0 から <name3> の <name1> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> . <name1> ) :	: for <name2> in range ( <name3> . <name1> ) :
<name2> が <name6> 以上のとき <name2> 、そうでなければ <name6> を出力する	print ( <name2> if <name2> >= <name6> else <name6> )	print ( <name2> if <name2> >= <name6> else <name6> )
( -1 ) からなる列の <name1> 回分の列を <name3> とする	<name3> = [ - 1 ] * <name1>	<name3> = [ - 1 ] * <name1>
<name3> の先頭の先頭、 <name5> に <val4> を加えた値を出力する	print ( <name3> [ 0 ] [ 0 ] , <name5> + <val4> )	print ( <name3> [ 0 ] [ 0 ] , <name5> + <val4> )
<name3> の <name5> 番目から <val1> 未満までの <name3> の <name5> 番目間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> [ <name5> ] , <val1> , <name3> [ <name5> ] ) :	for <name6> in range ( <name3> [ <name5> ] , <val1> , <name3> [ <name5> ] ) :
<name6> が <name2> より小さくかつ <name4> の <name6> 番目が <name4> の <name1> 番目より小さくないとき、	if <name6> < <name2> and not <name4> [ <name6> ] < <name4> [ <name1> ] :	for <name6> < <name2> and not <name4> [ <name6> ] < <name4> [ <name1> ] :
<name5> 、 <name6> の最大値、 <name3> の最小値を <name2> とする	<name2> = min ( max ( <name5> , <name6> ) , <name3> )	<name2> = min ( max ( <name5> , <name6> ) , <name3> )
<name4> を <name6> に <name2> を加えた値で割った余りにする	<name4> % = <name6> + <name2>	( <name4> % = <name6> + <name2> )
<name5> モジュールを用いる	from <name5> import heappush , heappop , heapify	from <name5> , Counter
<name3> の <val5> 乗に <name2> の <val5> 乗を <val6> で割った値を加えた値の <val4> 乗を <name1> とする	<name1> = ( <name3> ** <val5> + <name2> ** <val5> / <val6> ) ** <val4>	<name1> = ( <name3> ** <val5> + <name2> ** <val5> / <val6> ) ** <val4>
<name3> が <name2> 以上のとき、 <blk> <val1> を <name3> とする </blk>	if <name3> >= <name2> : <blk> <name3> = <val1> </blk>	\ <name3> = <name3> >= <name2> : <blk> <name3> = <val1> </blk>
<name5> から <name6> を引いた値の <val1> 乗に <name3> から <name4> を引いた値の <val1> 乗を加えた値の . <val2> 乗を <name3> の <name2> 番目の <name4> 番目とするを <name3> の <name4> 番目の <name2> 番目にする	<name3> [ <name4> ] [ <name2> ] = <name3> [ <name2> ] [ <name4> ] = ( ( <name5> - <name6> ) ** <val1> + ( <name3> - <name4> ) ** <val1> ) ** . <val2>	<name2> [ <name3> ] [ <name4> ] [ <name2> ] = <name3> [ <name2> ] [ <name4> ] = ( <name5> - <name6> ) ** <val1> + ( <name3> - <name4> ) ** . <val2>
<name1> を <name5> に <name6> を掛けた値だけ増加させる	<name1> += <name5> * <name6>	<name4> += <name1> ( <name5> * <name6> )
<name4> の <name5> から <val1> を引いた値番目の <name2> 番目、 <name4> の <name5> 番目の <name2> から <val1> を引いた値番目の最大値を <name4> の <name5> 番目の <name2> 番目にする	<name4> [ <name5> ] [ <name2> ] = max ( <name4> [ <name5> - <val1> ] [ <name2> ] , <name4> [ <name5> ] [ <name2> - <val1> ] )	<name4> [ <name5> ] [ <name2> ] = max ( <name4> [ <name5> - <val1> ] [ <name2> ] , <name4> [ <name5> ] [ <name2> - <val1> ] )
<name5> の <val2> 番目から、つまり末尾までの部分列を順に <name3> として、繰り返す	for <name3> in <name5> [ <val2> : - <val2> ] :	while <name5> [ <val2> : ] :
<val3> が <name4> より小さいとき、 <blk> <name1> の末尾に ( <name4> から <val6> を引いた値、 <name2> ) の組を追加する </blk>	if <val3> < <name4> : <blk> <name1> . append ( ( <name4> - <val6> , <name2> ) ) </blk>	if <val3> < <name4> : <blk> <name1> . append ( ( <name4> - <val6> , <name2> ) ) </blk>
<name6> の <name1> の <name3> 番目の各要素を <name4> とし、 <name4> が <name2> と等しくないときの ( <name4> 、 <name3> 、偽 ) の組の列を追加して <name5> を拡張する	<name5> . extend ( [ ( <name4> , <name3> , False ) for <name4> in <name6> . <name1> [ <name3> ] if <name4> != <name2> ] )	<name2> . <name5> . extend ( [ ( <name4> , <name3> , False ) for <name4> in <name6> . <name1> [ <name3> ] if <name4> != <name2> ] )
<name4> を <name1> の <name5> の <name6> にする	<name1> . <name5> . <name6> = <name4>	( <name1> . <name5> . <name6> = <name4> )
<name3> の <name2> 番目を <name2> とする	<name2> = <name3> [ <name2> ]	dict = <name3> [ <name2> ]
<name3> 、 <name5> 、 <name2> はグローバル変数とする	global <name3> , <name5> , <name2>	>> = <name3> , <name5> , <name2>
<name4> の <name2> の <name1> が、つまり未定値と等しくないとき、	if <name4> . <name2> . <name1> is None :	while <name4> . <name2> . <name1> != None :
<name1> の最大値、 <name3> の最大値の最大値を <name4> とする	<name4> = max ( max ( <name1> ) , max ( <name3> ) )	<name4> = max ( max ( <name1> ) , max ( <name3> ) )
<name1> に <name6> に <name5> を掛けた値の <name3> から <val2> を引いた値乗に対する <name4> の剰余を掛けた値を <name4> で割った余りを <name1> とする	<name1> = <name1> * pow ( <name6> * <name5> , <name3> - <val2> , <name4> ) % <name4>	<name1> = <name1> * pow ( <name6> * <name5> , <name3> - <val2> , <name4> ) % <name4>
( <name6> ) からなる列を <name4> とする	<name4> = [ <name6> ]	<name4> = [ <name6> ]
( <val6> から <name4> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <name5> の列 ) の集合を <name2> とする	<name2> = { [ <name5> for <name5> in range ( <val6> , <name4> + <val6> ) ] }	set = { [ <name5> for <name5> in range ( <val6> , <name4> + <val6> ) ] }
( <name1> 、 <name3> ) の組を <name6> の <name5> の <name3> 番目の <name1> 番目の整数値番目にする	<name6> [ int ( <name5> [ <name3> ] [ <name1> ] ) ] = ( <name1> , <name3> )	<name4> [ int ( <name5> [ <name3> ] [ <name1> ] ) ] = ( <name1> , <name3> )
<name6> ( <name4> . <name2> - <name5> . <name2> , <name4> . <name1> - <name5> . <name1> ) を返す	return <name6> ( <name4> . <name2> - <name5> . <name2> , <name4> . <name1> - <name5> . <name1> )	return <name6> ( <name4> . <name2> - <name5> . <name2> , <name4> . <name1> - <name5> . <name1> )
<name4> . <name3> ( ) を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name4> . <name3> ( )	<name1> , <name5> = <name4> . <name3> ( )
<name4> を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = <name4>	( <name3> , <name6> = <name4> )
<name6> の <name3> 番目の <name1> 番目の先頭を <name4> とする	<name4> = <name6> [ <name3> ] [ <name1> ] [ 0 ]	( <name4> = <name6> [ <name3> ] [ <name1> ] [ 0 ] )
<name3> の <name5> が、つまり未定値と等しくなくかつ <name3> の <name1> が、つまり未定値と等しくないとき、	if <name3> . <name5> is None and <name3> . <name1> is None :	!= <name3> . <name5> != None and <name3> . <name1> != None :
<name5> が <name6> より小さくかつ <name3> が <name4> より小さいとき、	if <name5> < <name6> and <name3> < <name4> :	[ if <name5> < <name6> and <name3> < <name4> :
( <val1> 、 <val3> ) からなる列の [ <val5> foriinaifc + <name6> <= <val2> ] の総和を <val4> で割った値が <val1> 以上かどうか番目を出力する	print ( [ <val1> , <val3> ] [ sum ( [ <val5> for <name6> in a if c + <name6> <= <val2> ] ) / <val4> >= <val1> ] )	<val1> print ( [ <val1> , <val3> ] [ sum ( [ <val5> for <name6> in a ] + <name6> <= <val2> ] ) / <val4> >= <val1> ] )
<name4> が <val5> と等しくなくかつ <name2> の <name6> 番目の <name1> 番目かつ <name3> の <name1> に <val4> を加えた値番目の <name6> 番目が <name5> と等しくないとき、	if <name4> != <val5> and <name2> [ <name6> ] [ <name1> ] and <name3> [ <name1> + <val4> ] [ <name6> ] != <name5> :	!= <name4> != <val5> and <name2> [ <name6> ] [ <name1> ] and <name3> [ <name1> + <val4> ] [ <name6> ] != <name5> :
<name5> ( <name1> , [ <name4> + <name6> , <val2> , <name3> , [ <name5> , <name1> ] ] )	<name5> ( <name1> , [ <name4> + <name6> , <val2> , <name3> , [ <name5> , <name1> ] ] )	<name2> ( <name1> , [ <name4> + <name6> , <val2> , <name3> , [ <name5> , <name1> ] ] )
0 から <name6> 未満までの数列の各要素を <name4> とし、 <name1> から読み込んだ一行の整数値の列を <name3> とする	<name3> = [ int ( <name1> . readline ( ) ) for <name4> in range ( <name6> ) ]	<name3> = [ int ( <name1> . readline ( ) ) for <name4> in range ( <name6> ) ]
<name4> ( ) の整数値を <name1> とする	<name1> = int ( <name4> ( ) )	( <name1> = int ( <name4> ( ) ) )
<name2> ( <name1> , <val4> ) を <name5> とする	<name5> = <name2> ( <name1> , <val4> )	<name5> = <name2> ( <name1> , <val4> )
<name1> の <name6> 番目を <val2> だけ増加させる	<name1> [ <name6> ] += <val2>	( <name1> [ <name6> ] += <val2> )
<name2> の <name6> 内の全ての要素を取り除く	<name2> . <name6> . clear ( )	set ( <name2> . <name6> . clear ( ) )
<val3> を <name2> の先頭の <name6> 番目の <name1> 番目の <val3> 番目にする	<name2> [ <val3> ] [ <name6> ] [ <name1> ] [ <val3> ] = <val3>	<name4> [ 0 ] [ <name6> ] [ <name1> ] [ <val3> ] = <val3>
<name6> の <name1> 番目を <name2> とする <name6> の <name3> 番目を <name5> とする	<name2> = <name6> [ <name1> ] <name5> = <name6> [ <name3> ]	<name2> = <name6> [ <name1> ] <name5> = <name6> [ <name3> ]
<name6> を順に <name2> 、 <name4> 、 <name5> として、繰り返す	for <name2> , <name4> , <name5> in <name6> :	. for <name2> , <name4> , <name5> in <name6> :
<name4> の各要素を <name1> とし、 <name6> の列の各要素を <name5> とし、 <name5> に <name1> を加えた値の列を <name3> とする	<name3> = [ <name5> + <name1> for <name5> in [ <name6> for <name1> in <name4> ] ]	<name6> = [ <name5> + <name1> for <name5> in [ <name6> for <name1> in <name4> ] ]
<name3> ( <name5> , <val6> , <name2> ) を <name1> とする	<name1> = <name3> ( <name5> , <val6> , <name2> )	<name1> = <name3> ( <name5> , <val6> , <name2> )
<val1> を書式として ( <name2> - <name5> ) の <val4> 乗に ( <name6> - <name3> ) の <val4> 乗を加えた値の平方根で整形した文字列を出力する	print ( <val1> . format ( math . sqrt ( pow ( ( <name2> - <name5> ) , <val4> ) + pow ( ( <name6> - <name3> ) , <val4> ) ) ) )	<name4> . format ( <val1> . sqrt ( ( ( <name2> - <name5> ) ** <val4> + ( <name6> - <name3> ) ** <val4> ) ) )
<name6> の <name2> 番目の文字列を <name4> とする	<name4> = str ( <name6> [ <name2> ] )	<name4> = str ( <name6> [ <name2> ] )
<name2> の末尾に <name5> を <val4> で割った余りを追加する	<name2> . append ( <name5> % <val4> )	<name4> . append ( <name5> % <val4> )
<name3> の <name6> 番目、 <name3> の <name2> 番目を <name3> の <name2> 番目、 <name3> の <name6> 番目とする	<name3> [ <name2> ] , <name3> [ <name6> ] = <name3> [ <name6> ] , <name3> [ <name2> ]	<name3> [ <name2> ] , <name3> [ <name6> ] = <name3> [ <name6> ] , <name3> [ <name2> ]
0 から <name6> 未満までの数列の各要素を <name4> とし、 <name1> [ <name5> ] [ <name4> ] に <name1> [ <name4> ] [ <name2> ] を加えた値に <name1> [ <name4> ] の <name3> 番目を加えた値の列の最小値を出力する	print ( min ( [ <name1> [ <name5> ] [ <name4> ] + <name1> [ <name4> ] [ <name2> ] + <name1> [ <name4> ] [ <name3> ] for <name4> in range ( <name6> ) ] ) )	print ( min ( [ <name1> [ <name5> ] [ <name4> ] + <name1> [ <name4> ] [ <name2> ] + <name1> [ <name4> ] [ <name3> ] for <name4> in range ( <name6> ) ] ) )
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> とする <name4> を <val2> だけ減少させる	<name6> , <name4> = map ( int , <name5> ( ) . split ( ) ) <name4> -= <val2>	<name2> , <name6> , <name4> = map ( int , <name5> ( ) . split ( ) ) <name4> -= <val2>
<name3> . <name6> ( <name5> , <val1> , <name3> . <name2> ) を返す	return <name3> . <name6> ( <name5> , <val1> , <name3> . <name2> )	yield <name3> . <name6> ( <name5> , <val1> , <name3> . <name2> )
\ <name1> ( <val5> % <name6> ( <name2> ( <name4> , <val3> ) , <name2> ( <name4> , <val1> ) ) ) \	\ <name1> ( <val5> % <name6> ( <name2> ( <name4> , <val3> ) , <name2> ( <name4> , <val1> ) ) ) \	for <name1> in <name1> ( <val5> % <name6> ( <name2> ( <name4> , <val3> ) , <name2> ( <name4> , <val1> ) ) ) \
<name5> の <val6> 番目が <name1> の <val6> 番目、 <name4> の <val6> 番目の最大値以下かつ <name5> の <val6> 番目が <name1> の <val6> 番目、 <name4> の <val6> 番目の最小値以上かどうか	<name5> [ <val6> ] <= max ( <name1> [ <val6> ] , <name4> [ <val6> ] ) and <name5> [ <val6> ] >= min ( <name1> [ <val6> ] , <name4> [ <val6> ] )	<val1> <name5> [ <val6> ] <= max ( <name1> [ <val6> ] , <name4> [ <val6> ] ) and min ( <name5> [ <val6> ] >= <name1> [ <val6> ] , <name4> [ <val6> ] )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = map ( float , input ( ) . split ( ) )	<name3> , <name6> = map ( float , input ( ) . split ( ) )
<name2> に <name3> を掛けた値を <name5> とする	<name5> = <name2> * <name3>	<name2> <name5> = <name2> * <name3>
<name3> を <val6> で割った値を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name3> / <val6>	( <name4> [ <name2> ] = <name3> / <val6> )
<val6> を書式として <name3> 、 <name2> の <name3> 番目で整形した文字列を出力する	print ( <val6> . format ( <name3> , <name2> [ <name3> ] ) )	print ( <val6> . format ( <name3> , <name2> [ <name3> ] ) )
<val6> に <name1> を掛けた値を <name4> で割った値を <name3> とする	<name3> = <val6> * <name1> / <name4>	<name3> = <val6> * <name1> / <name4>
<name1> の <name4> から <val2> を引いた値番目を <name5> とする	<name5> = <name1> [ <name4> - <val2> ]	<name5> = <name1> [ <name4> - <val2> ]
<name6> が <name3> から <name4> を引いた値から <name6> を引いた値より小さいかどうかが <name5> 以下のとき、	if <name6> < <name3> - <name4> - <name6> <= <name5> :	isinstance ( <name6> < <name3> - <name4> - <name6> <= <name5> ) :
<name5> の <name2> 番目が <val4> と等しくなくかつ <name5> の <name2> 番目が <name5> の <name2> に <val1> を加えた値番目と等しくかつ <name5> の <name2> 番目が <name5> の <name2> に <val3> を加えた値番目と等しいとき、	if <name5> [ <name2> ] != <val4> and <name5> [ <name2> ] == <name5> [ <name2> + <val1> ] and <name5> [ <name2> ] == <name5> [ <name2> + <val3> ] :	if <name5> [ <name2> ] != <val4> and <name5> [ <name2> ] == <name5> [ <name2> + <val1> ] and <name5> [ <name2> ] == <name5> [ <name2> + <val3> ] :
( <name1> 、 <name1> に <val5> を加えた値 ) からなる列を <name2> の <name4> 番目にする	<name2> [ <name4> ] = [ <name1> , <name1> + <val5> ]	<name2> [ <name4> ] = [ <name1> , <name1> + <val5> ]
<name6> の <name5> から <val1> を引いた値番目の <name2> から <val1> を引いた値番目を <name4> とする	<name4> = <name6> [ <name5> - <val1> ] [ <name2> - <val1> ]	<name6> = <name6> [ <name5> - <val1> ] [ <name2> - <val1> ]
0 から <val1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列の総和を <name4> とする	<name4> = sum ( [ int ( input ( ) ) for <name3> in range ( <val1> ) ] )	<name4> = sum ( [ int ( input ( ) ) for <name3> in range ( <val1> ) ] )
<name4> の長さを <name4> の <name2> 番目にする	<name4> [ <name2> ] = len ( <name4> )	<name4> [ <name2> ] = len ( <name4> )
<name1> の <name5> から <name3> を引いた値の絶対値を <name4> とする	<name4> = abs ( <name1> . <name5> - <name3> )	<name4> = abs ( <name1> . <name5> - <name3> )
<val3> を <name1> を <name6> とするとするを <name5> とする	<name5> = <name6> = <name1> = <val3>	<name2> = <name6> = <name1> = <val3>
<name1> を <name4> の長さで割った余りを <name1> とする	<name1> = <name1> % len ( <name4> )	<name1> = <name1> % len ( <name4> )
<name3> . <name4> ( <name1> , <name5> ) を出力する	print ( <name3> . <name4> ( <name1> , <name5> ) )	print ( <name3> . <name4> ( <name1> , <name5> ) )
<name6> ( <name2> , <name5> [ <val4> ] ) に <name6> ( <name3> , <name5> [ <val4> ] ) に <name5> の先頭を掛けた値を加えた値を <name1> とする	<name1> = <name6> ( <name2> , <name5> [ <val4> ] ) + <name6> ( <name3> , <name5> [ <val4> ] ) * <name5> [ <val4> ]	<name1> = <name6> ( <name2> , <name5> [ <val4> ] ) + <name6> ( <name3> , <name5> [ <val4> ] ) * <name5> [ 0 ]
<name6> の <val1> 番目を <name4> とする	<name4> = <name6> [ <val1> ]	( <name4> = <name6> [ <val1> ] )
<name6> が <val3> と等しくかつ <name2> が <val3> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <val3> and <name2> == <val3> : <blk> break </blk>	\ if <name6> == <val3> and <name2> == <val3> : <blk> break </blk>
<name1> に <val5> を加えた値、 <name3> の <name1> 番目、 <name6> の <name1> 番目を出力する	print ( <name1> + <val5> , <name3> [ <name1> ] , <name6> [ <name1> ] )	print ( <name1> + <val5> , <name3> [ <name1> ] , <name6> [ <name1> ] )
( ( -1 ) からなる列の 0 から <name5> に <val3> を加えた値未満までの数列の各要素を <name1> とし、 <val2> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ - <val3> ] * [ <val2> for <name1> in range ( <name5> + <val3> ) ] ]	<name6> = [ [ - <val3> ] * [ <val2> for <name1> in range ( <name5> + <val3> ) ] ]
<name3> の <name5> から <val6> を引いた値番目の <name4> 番目を <name2> とする	<name2> = <name3> [ <name5> - <val6> ] [ <name4> ]	<name6> = <name3> [ <name5> - <val6> ] [ <name4> ]
<name6> の <name1> の <name2> が、つまり未定値と等しくないとき、 <blk> <name6> の <name1> の <name5> を <name6> の <name1> の <name2> の <name5> にする </blk>	if <name6> . <name1> . <name2> != None : <blk> <name6> . <name1> . <name2> . <name5> = <name6> . <name1> . <name5> </blk>	if <name6> . <name1> . <name2> != None : <blk> <name6> . <name1> . <name2> . <name5> = <name6> . <name1> . <name5> </blk>
<name4> の逆順を展開しての要素をそれぞれ組にした列のリストを <name4> とする	<name4> = list ( zip ( * <name4> [ : : - 1 ] ) )	<name4> = list ( zip ( * <name4> [ : : - 1 ] ) )
<name4> の末尾に ( <name2> 、 <name3> 、 <name6> 、未定値 ) の組を追加する	<name4> . append ( ( <name2> , <name3> , <name6> , None ) )	<name4> . append ( ( <name2> , <name3> , <name6> , None ) )
<name2> の末尾に ( <name6> 、 <name4> 、 <name6> に <name4> を加えた値、 <name6> から <name4> を引いた値 ) からなる列を追加する	<name2> . append ( [ <name6> , <name4> , <name6> + <name4> , <name6> - <name4> ] )	<name4> . append ( [ <name6> , <name4> , <name6> + <name4> , <name6> - <name4> ] )
<name5> が <val1> と等しくまたは <name2> が <name4> と等しいとき、	if <name5> == <val1> or <name2> == <name4> :	or ( <name5> == <val1> or <name2> == <name4> ) :
<name1> 、 <name6> の最小値を <name2> とする	<name2> = min ( <name1> , <name6> )	dict = min ( <name1> , <name6> )
偽を <name4> の <val6> 番目にする	<name4> [ <val6> ] = False	( <name4> [ <val6> ] = False )
<name4> が <val2> 以上かつ <name1> の <name5> 番目が <name1> の <name4> 番目と等しくない間、次を繰り返す	while <name4> >= <val2> and <name1> [ <name5> ] != <name1> [ <name4> ] :	for <name4> in <name4> >= <val2> and <name1> [ <name5> ] != <name1> [ <name4> ] :
: を区切りとして <name4> 、 <name2> 、 <name6> を出力する	print ( <name4> , <name2> , <name6> , sep = ':' )	print ( <name4> , <name2> , <name6> , sep = ':' )
<name5> の <name3> の <name4> 番目に <name6> を追加した集まり	<name5> . <name3> [ <name4> ] . add ( <name6> )	<name2> . <name3> [ <name4> ] . add ( <name6> )
( <val3> 、 <val1> 、 <val3> 、 <val2> 、 <val3> 、 <val2> 、 <val3> 、 <val3> 、 <val2> 、 <val3> 、 <val2> 、 <val3> ) からなる列を <name6> とする	<name6> = [ <val3> , <val1> , <val3> , <val2> , <val3> , <val2> , <val3> , <val3> , <val2> , <val3> , <val2> , <val3> ]	<name6> = [ <val3> , <val1> , <val3> , <val2> , <val3> , <val2> , <val3> , <val2> , <val3> , <val2> , <val3> , <val2> , <val3> ]
<name6> ( <name1> -1 , <name3> ) を <name2> とする	<name2> = <name6> ( <name1> - 1 , <name3> )	<name2> = <name6> ( <name1> - 1 , <name3> )
<name6> が <name5> 以下の間、次を繰り返す	while <name6> <= <name5> :	del <name6> <= <name5> :
<name2> に <name1> を <name1> に <name4> を加えた値で割った値に <name3> から <name2> を引いた値を掛けた値を加えた値を返す	return <name2> + <name1> / ( <name1> + <name4> ) * ( <name3> - <name2> )	x return <name2> + <name1> / ( <name1> + <name4> ) * ( <name3> - <name2> )
( <name6> 、 <name4> 、 <val1> ) の組を <name2> の <name3> 番目にする	<name2> [ <name3> ] = ( <name6> , <name4> , <val1> )	<name2> [ <name3> ] = ( <name6> , <name4> , <val1> )
<name2> の長さから <val6> を引いた値から -1 未満までの -1 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name2> ) - <val6> , - <val6> , - <val6> ) :	. for <name5> in range ( len ( <name2> ) - <val6> , - <val6> , - <val6> ) :
<name2> ( <name6> , ( <name5> + <name1> + <name4> / <name3> , <val2> , <name6> ) )	<name2> ( <name6> , ( <name5> + <name1> + <name4> / <name3> , <val2> , <name6> ) )	<val3> <name2> ( <name6> , ( <name5> + <name1> + <name4> / <name3> , <val2> , <name6> ) )
<name6> から <name4> に <name3> を掛けた値を引いた値を <name2> とする	<name2> = <name6> - <name4> * <name3>	( <name2> = <name6> - <name4> * <name3> )
<name5> の <name4> 番目に <name6> を加えた値が <name5> の <name2> 番目より小さいとき、	if <name5> [ <name4> ] + <name6> < <name5> [ <name2> ] :	while <name5> [ <name4> ] + <name6> < <name5> [ <name2> ] :
<name6> を <name1> の <val5> 番目にする <name1> を <name6> とする	<name1> [ <val5> ] = <name6> <name6> = <name1>	<name1> [ <val5> ] = <name6> <name6> = <name1>
<name2> の <name1> 番目を <name3> とする	<name3> = <name2> [ <name1> ]	<name3> = <name2> [ <name1> ]
<name1> と <val2> を <name3> だけ左シフトした値の論理積のとき、	if <name1> & ( <val2> << <name3> ) :	for <name1> & ( <val2> << <name3> ) :
0 から <name4> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列を空白で分割した字句列の列を <name1> とする	<name1> = [ input ( ) . split ( ) for <name2> in range ( <name4> ) ]	<name1> = [ input ( ) . split ( ) for <name2> in range ( <name4> ) ]
<name4> から <name4> を <val3> で割った余りを引いた値に <val3> を加えた値を <name4> とする	<name4> = <name4> - ( <name4> % <val3> ) + <val3>	<name4> = <name4> - <name4> % <val3> + <val3>
0 から <name1> の <name3> 番目に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> [ <name3> ] + <val2> ) :	) : for <name6> in range ( <name1> [ <name3> ] + <val2> ) :
<name5> の末尾に <name2> に <val6> を加えた値を追加する	<name5> . append ( <name2> + <val6> )	<name3> . append ( <name2> + <val6> )
<name1> に <name4> の <name2> 番目から <name6> を引いた値を加えた値を出力する	print ( <name1> + ( <name4> [ <name2> ] - <name6> ) )	print ( <name1> + ( <name4> [ <name2> ] - <name6> ) )
<name3> を <name1> で割った値を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name3> / <name1>	( <name6> [ <name4> ] = <name3> / <name1> )
<name1> を <name4> の <name5> に <val2> を加えた値番目とするを <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name4> [ <name5> + <val2> ] = <name1>	else [ <name4> ] = <name4> [ <name5> + <val2> ] = <name1>
( <name1> 、 <name6> ) の組を <name3> の <name5> 番目にする	<name3> [ <name5> ] = ( <name1> , <name6> )	<name3> [ <name5> ] = ( <name1> , <name6> )
<name3> の逆順を順に <name4> として、繰り返す	for <name4> in <name3> [ : : - 1 ] :	: for <name4> in <name3> [ : : - 1 ] :
<name4> の <val3> 乗が <name1> 以下の間、次を繰り返す	while <name4> ** <val3> <= <name1> :	try while <name4> ** <val3> <= <name1> :
<name5> 、 <name6> の <name3> 番目の <name2> 番目の先頭、 <name6> の <name3> 番目の <name2> 番目の <val4> 番目、 <name6> の <name3> 番目の <name2> 番目の <val1> 番目、 <name6> の <name3> 番目の <name2> 番目の <val5> 番目の最大値を <name5> とする	<name5> = max ( <name5> , <name6> [ <name3> ] [ <name2> ] [ 0 ] , <name6> [ <name3> ] [ <name2> ] [ <val4> ] , <name6> [ <name3> ] [ <name2> ] [ <val1> ] , <name6> [ <name3> ] [ <name2> ] [ <val5> ] )	<name5> = max ( <name5> , <name6> [ <name3> ] [ <name2> ] [ 0 ] , <name6> [ <name3> ] [ <name2> ] [ <val4> ] , <name6> [ <name3> ] [ <name2> ] [ <val1> ] , <name6> [ <name3> ] [ <name2> ] [ <val5> ] )
<val2> を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <val2>	( <name3> [ <name6> ] = <val2> )
( <name4> 、 <name2> 、 <name3> ) の組を返す	return ( <name4> , <name2> , <name3> )	yield ( <name4> , <name2> , <name3> )
<name1> の <name6> 番目を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in <name1> [ <name6> ] :	for <name4> , <name5> in <name1> [ <name6> ] :
<name2> の <val3> 番目のとき、	if <name2> [ <val3> ] :	[ if <name2> [ <val3> ] :
<name1> に <val3> を掛けた値から <name5> に <val2> を加えた値未満までの <name1> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> * <val3> , <name5> + <val2> , <name1> ) :	continue for <name6> in range ( <name1> * <val3> , <name5> + <val2> , <name1> ) :
<name4> の <name4> の <name3> と等しい要素の最初の位置を取り出した値	<name4> . pop ( <name4> . index ( <name3> ) )	<name4> . pop ( <name4> . index ( <name3> ) )
<name1> の総和を <val6> で割った商を出力する	print ( sum ( <name1> ) // <val6> )	print ( sum ( <name1> ) // <val6> )
<name1> 内の <val6> を <name5> で置き換えた文字列を <name1> とする	<name1> = <name1> . replace ( <val6> , <name5> )	<name1> = <name1> . replace ( <val6> , <name5> )
<name4> の <val5> 番目が <name2> より大きいとき、	if <name4> [ <val5> ] > <name2> :	list if <name4> [ <val5> ] > <name2> :
<name1> の <val2> 乗に対する <name6> の剰余を <name1> とする	<name1> = pow ( <name1> , <val2> , <name6> )	<name1> = pow ( <name1> , <val2> , <name6> )
<name6> が <name1> の <name3> でない番目に含まれるとき、	if <name6> in <name1> [ not <name3> ] :	> <name6> in <name1> [ not <name3> ] :
<name1> が <name5> の <name1> より小さいとき、 <blk> <name6> の <name2> を <name5> の <name2> にする </blk>	if <name1> < <name5> . <name1> : <blk> <name5> . <name2> = <name6> . <name2> </blk>	\ <name5> . <name2> = <name1> < <name5> . <name1> : <blk> <name5> . <name2> = <name6> . <name2> </blk>
<name2> の末尾に ( <name3> 、 <name4> に <val6> を加えた値 ) の組を追加する	<name2> . append ( ( <name3> , <name4> + <val6> ) )	<name4> . append ( ( <name3> , <name4> + <val6> ) )
<name1> を文字コード <name2> から <val4> を引いた値の文字だけ増加させる	<name1> += chr ( <name2> - <val4> )	<name2> += chr ( <name2> - <val4> )
<name5> を <name4> で割った余りを <name5> とする	<name5> = <name5> % <name4>	else = <name5> % <name4>
<name6> の <name3> の先頭から <name3> の <val4> 番目までの部分列内の <name3> の <val2> 番目の出現回数を出力する	print ( <name6> [ <name3> [ 0 ] : <name3> [ <val4> ] ] . count ( <name3> [ <val2> ] ) )	print ( <name6> [ <name3> [ 0 ] : <name3> [ <val4> ] ] . count ( <name3> [ <val2> ] ) )
<name3> ( <name2> , <name6> -1 , <name1> -1 )	<name3> ( <name2> , <name6> - 1 , <name1> - 1 )	( <name3> ( <name2> , <name6> - 1 , <name1> - 1 ) )
<name4> を <name2> の <name1> 番目の <name3> にする	<name2> [ <name1> ] . <name3> = <name4>	( <name2> [ <name1> ] . <name3> = <name4> )
<name2> ( <name6> . <name3> - <name5> . <name3> , <name6> . <name1> - <name5> . <name1> ) を返す	return <name2> ( <name6> . <name3> - <name5> . <name3> , <name6> . <name1> - <name5> . <name1> )	x return <name2> ( <name6> . <name3> - <name5> . <name3> , <name6> . <name1> - <name5> . <name1> )
<name3> に番号付した組の列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in enumerate ( <name3> ) :	for <name5> , <name2> in enumerate ( <name3> ) :
<name4> の各要素に整数を適用した列を順に <name1> として、繰り返す	for <name1> in map ( int , <name4> ) :	for <name1> in map ( int , <name4> ) :
<name3> の <name4> 番目の <val5> 番目に <name3> の <name1> 番目の <val5> 番目を加えた値に <name2> の <name4> 番目を加えた値に <name2> の <name1> 番目を加えた値を <name3> の <name6> 番目の <val5> 番目にする	<name3> [ <name6> ] [ <val5> ] = <name3> [ <name4> ] [ <val5> ] + <name3> [ <name1> ] [ <val5> ] + <name2> [ <name4> ] + <name2> [ <name1> ]	<name4> [ <name6> ] [ <val5> ] = <name3> [ <name4> ] [ <val5> ] + <name3> [ <name1> ] [ <val5> ] + <name2> [ <name4> ] + <name2> [ <name1> ]
<val5> から <name2> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> , <name2> + <val5> ) :	continue for <name3> in range ( <val5> , <name2> + <val5> ) :
<val5> を <name2> とする	<name2> = <val5>	( <name2> = <val5> )
<name6> から <val3> を引いた値を <name1> とする	<name1> = <name6> - <val3>	<name6> <name1> = <name6> - <val3>
( ( <name5> , <name1> に番号付した組の列の各要素を <name3> 、 <name5> とし、 <name3> の列 ) ) からなる辞書を <name6> とする	<name6> = { <name5> : [ <name3> for <name3> , <name5> in enumerate ( <name1> ) ] }	<name6> = { <name5> : [ <name3> for <name3> , <name5> in enumerate ( <name1> ) ] }
( <val1> に <name4> を加えた値、 <val6> 、未定値 ) からなる列を <name5> とする	<name5> = [ <val1> + <name4> , <val6> , None ]	<name5> = [ <val1> + <name4> , <val6> , None ]
( <name5> のリスト ) からなる列に 0 から <val2> 未満までの数列の各要素を <name6> とし、 <name1> の <name6> 番目の各要素を <name4> とし、 <name4> の列の列を加えた値を <name3> とする	<name3> = [ list ( <name5> ) ] + [ [ <name4> for <name4> in <name1> [ <name6> ] ] for <name6> in range ( <val2> ) ]	<name4> = [ list ( <name5> ) ] + [ [ <name4> for <name4> in <name1> [ <name6> ] ] for <name6> in range ( <val2> ) ]
<name5> 内の <name1> の出現回数を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name5> . count ( <name1> )	<name3> [ <name2> ] = <name5> . count ( <name1> )
<val2> を開始番号として <name4> の先頭を除いた部分列に番号付した組の列を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in enumerate ( <name4> [ <val2> : ] , start = <val2> ) :	. for <name3> , <name6> in enumerate ( <name4> [ <val2> : ] , start = <val2> ) :
<name3> の <name4> 番目を <name2> の <name6> の <name4> 番目にする	<name2> . <name6> [ <name4> ] = <name3> [ <name4> ]	<name2> . <name6> [ <name4> ] = <name3> [ <name4> ]
<name6> のとき <name2> ( <name6> . <name4> ) に <val3> を加えた値に <name6> の <name5> の文字列を加えた値に <name2> ( <name6> . <name1> ) を加えた値、そうでなければ <val2> を返す	return <name2> ( <name6> . <name4> ) + <val3> + str ( <name6> . <name5> ) + <name2> ( <name6> . <name1> ) if <name6> else <val2>	assert <name2> ( <name6> . <name4> ) + <val3> + <name6> . <name5> ) + <name2> ( <name6> . <name1> ) if <name6> else <val2>
<val5> が <name2> の <name3> 番目に含まれかつ <val4> が <name2> の <name3> 番目に含まれまたは <val1> が <name2> の <name3> 番目に含まれかつ <val6> が <name2> の <name3> 番目に含まれるとき、 <blk> <name5> を <val2> だけ増加させる </blk>	if ( ( <val5> in <name2> [ <name3> ] and <val4> in <name2> [ <name3> ] ) or ( <val1> in <name2> [ <name3> ] and <val6> in <name2> [ <name3> ] ) ) : <blk> <name5> += <val2> </blk>	list ( <val5> not in <name2> [ <name3> ] and <val4> in <name2> [ <name3> ] or <val1> in <name2> [ <name3> ] and <val6> in <name2> [ <name3> ] ) : <blk> <name5> += <val2> </blk>
<name1> と ( <name4> 、 <name3> ) の集合の論理和を <name1> とする	<name1> = <name1> | { <name4> , <name3> }	<name1> = <name1> | { <name4> , <name3> }
<val2> から <name4> の <name5> 未満までの数列の各要素を <name1> とし、 <val2> の列を <name3> とする	<name3> = [ <val2> for <name1> in range ( <name4> . <name5> ) ]	<name4> = [ <val2> for <name1> in range ( <name4> . <name5> ) ]
<name2> の <name6> の <name4> 番目の <name5> 番目に <name5> に <val3> を加えた値に <name2> の <name6> の <name4> 番目の <name5> に <val3> を加えた値番目を掛けた値を加えた値を <name2> の <name6> の <name4> に <val3> を加えた値番目の <name5> に <val3> を加えた値番目にする	<name2> . <name6> [ <name4> + <val3> ] [ <name5> + <val3> ] = <name2> . <name6> [ <name4> ] [ <name5> ] + ( <name5> + <val3> ) * <name2> . <name6> [ <name4> ] [ <name5> + <val3> ]	( <name2> [ <name6> . <name4> + <val3> ] [ <name5> + <val3> ] ) = <name2> . <name6> [ <name4> ] [ <name5> ] + ( <name5> + <val3> ) + ( <name2> . <name6> [ <name4> ] [ <name5> + <val3> ] )
( ( <val6> 、 <name2> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <val6> , <name2> ) ]	<name5> = [ ( <val6> , <name2> ) ]
<name5> . <name1> ( <name3> , <name4> ) が <val2> と等しいかどうかを返す	return <name5> . <name1> ( <name3> , <name4> ) == <val2>	x return <name5> . <name1> ( <name3> , <name4> ) == <val2>
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name5> 、 <name4> 、 <name1> とする	<name5> , <name4> , <name1> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	[ <name5> , <name4> , <name1> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name2> の末尾に <val4> を加えた値から <val4> に <name5> を掛けた値に <val4> を加えた値未満までの <val4> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> [ - 1 ] + <val4> , <val4> * <name5> + <val4> , <val4> ) :	. for <name3> in range ( <name2> [ - <val4> ] + <val4> , <val4> * <name5> + <val4> , <val4> ) :
<val3> の <val4> 乗を <name6> とする	<name6> = <val3> ** <val4>	( <name6> = <val3> ** <val4> )
<val5> から <name4> の長さ未満までの数列の各要素を <name3> とし、 <val5> 、 <name1> の <name3> 番目から <name2> の <name3> 番目を引いた値の最大値の列の総和を <name6> とする	<name6> = sum ( [ max ( <val5> , <name1> [ <name3> ] - <name2> [ <name3> ] ) for <name3> in range ( len ( <name4> ) ) ] )	<name6> = sum ( [ max ( max ( <val5> , <name1> [ <name3> ] - <name2> [ <name3> ] ) ) for <name3> in range ( len ( <name4> ) ) ] )
<name2> . <name4> ( <name3> ) を <name5> とする	<name5> = <name2> . <name4> ( <name3> )	else = <name2> . <name4> ( <name3> )
<name2> の <name4> 番目の <val1> 番目が <name2> の <name4> に <val1> を加えた値番目の <val1> 番目より大きいとき、	if <name2> [ <name4> ] [ <val1> ] > <name2> [ <name4> + <val1> ] [ <val1> ] :	if <name2> [ <name4> ] [ <val1> ] > <name2> [ <name4> + <val1> ] [ <val1> ] :
<name1> . <name2> ( <name6> . <name4> - <name6> . <name3> , <name5> - <name6> . <name3> ) が <val1> より小さいとき、	if <name1> . <name2> ( <name6> . <name4> - <name6> . <name3> , <name5> - <name6> . <name3> ) < <val1> :	isinstance ( <name1> . <name2> ( <name6> . <name4> - <name6> . <name3> , <name5> - <name6> . <name3> ) < <val1> :
<name1> が <name4> 以上のとき、 <blk> <val6> 、 <name2> から <val3> を引いた値、 <name5> 、 <name1> を出力する </blk>	if <name1> >= <name4> : <blk> print ( <val6> , <name2> - <val3> , <name5> , <name1> ) </blk>	for if <name1> in <name4> : <blk> print ( <val6> , <name2> - <val3> , <name5> , <name1> ) </blk>
<name6> ( <val5> , <val5> , <name2> . <name3> // <val4> , <name2> . <name1> )	<name6> ( <val5> , <val5> , <name2> . <name3> // <val4> , <name2> . <name1> )	<name2> ( <val5> , <val5> , <name2> . <name3> // <val4> , <name2> . <name1> )
( ( 、つまり未定値 ) からなる列の 0 から <name1> 未満までの数列の各要素を <name3> とし、 <val6> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ None ] * [ <val6> for <name3> in range ( <name1> ) ] ]	<name2> = [ [ None ] * [ <val6> for <name3> in range ( <name1> ) ] ]
( 、つまり未定値 ) からなる列の <name4> の <name2> 回分の列を <name4> の <name3> にする	<name4> . <name3> = [ None ] * <name4> . <name2>	<name2> . <name4> . <name3> = [ None ] * <name4> . <name2>
+ を <name2> の <name6> 番目の <name3> に <val1> を加えた値番目にする	<name2> [ <name6> ] [ <name3> + <val1> ] = '+'	<name4> [ <name2> [ <name6> ] [ <name3> + <val1> ] = '+'
<name3> の <name6> を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name3> . <name6>	<name1> , <name4> , <name2> = <name3> . <name6>
<name1> ( <name6> , <name4> ( <name3> [ <name5> ] [ <val2> : ] ) )	<name1> ( <name6> , <name4> ( <name3> [ <name5> ] [ <val2> : ] ) )	<name4> ( <name6> , <name4> ( <name3> [ <name5> ] [ <val2> : ] ) )
<name4> を順に <name6> 、 <name2> として、繰り返す	for <name6> , <name2> in <name4> :	. for <name6> , <name2> in <name4> :
ソートされた順序を保ったまま <name4> を <name3> に挿入できる位置を <name2> とする	<name2> = bisect . bisect_left ( <name3> , <name4> )	( <name3> ) <name2> = bisect . bisect_left ( <name3> , <name4> )
<val5> を <name6> の <name1> から <val4> を引いた値番目にする	<name6> [ <name1> - <val4> ] = <val5>	<name4> [ <name1> - <val4> ] = <val5>
<val1> の順序数を <name5> とする	<name5> = ord ( <val1> )	<name6> = ord ( <val1> )
<val3> に <name2> を掛けた値に <name4> を掛けた値が <name1> の <val6> 乗と等しいとき、	if <val3> * <name2> * <name4> == <name1> ** <val6> :	continue <val3> * <name2> * <name4> == <name1> ** <val6> :
<name6> ( <name5> ) に <name2> を掛けた値を出力する	print ( <name6> ( <name5> ) * <name2> )	print ( <name6> ( <name5> ) * <name2> )
0 から <name3> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列のリストの列を <name4> とする	<name4> = [ list ( map ( int , input ( ) . split ( <val1> ) ) ) for <name5> in range ( <name3> ) ]	<name4> = [ list ( map ( int , input ( ) . split ( <val1> ) ) ) for <name5> in range ( <name3> ) ]
0 から、つまり入力された文字列の整数値未満までの数列の各要素を <name4> とし、、つまり入力された文字列の列を <name1> とする	<name1> = [ input ( ) for <name4> in range ( int ( input ( ) ) ) ]	<name1> = [ input ( ) for <name4> in range ( int ( input ( ) ) ) ]
<name5> の組を <name3> とする	<name3> = tuple ( <name5> )	( <name3> = tuple ( <name5> ) )
<name3> の <name6> の各要素を <name2> とし、 <name2> の整数値の列の総和を出力する	print ( sum ( [ int ( <name2> ) for <name2> in <name3> . <name6> ] ) )	print ( sum ( [ int ( <name2> ) for <name2> in <name3> . <name6> ] ) )
偽を返す	return False	yield False
<name4> に <name2> を掛けた値に <name1> に <name6> を掛けた値を加えた値に <name5> に <name4> を <val3> で割った商を掛けた値を加えた値に <name4> に <name1> を <val2> で割った商を掛けた値を加えた値を返す	return <name4> * <name2> + <name1> * <name6> + <name5> * ( <name4> // <val3> ) + <name4> * ( <name1> // <val2> )	from return <name4> * <name2> + <name1> * <name6> + <name5> * ( <name4> // <val3> ) + <name4> * ( <name1> // <val2> )
<name1> から <name5> を引いた値を <name3> とする	<name3> = <name1> - <name5>	<name3> = <name1> - <name5>
空列を辞書の <name3> 番目にする	dict [ <name3> ] = [ ]	<val1> [ <name3> ] = [ ]
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name3> 、 <name5> 、 <name1> 、 <name6> とする	<name3> , <name5> , <name1> , <name6> = list ( map ( int , input ( ) . split ( <val4> ) ) )	<name3> , <name5> , <name1> , <name6> = list ( map ( int , input ( ) . split ( <val4> ) ) )
<name5> の x 座標から <name3> の x 座標を引いた値の <val1> 乗に <name5> の y 座標から <name3> の y 座標を引いた値の <val1> 乗を加えた値の平方根を返す	return math . sqrt ( ( <name5> . x - <name3> . x ) ** <val1> + ( <name5> . y - <name3> . y ) ** <val1> )	return sqrt ( ( <name5> . x - <name3> . x ) ** <val1> + ( <name5> . <name3> . y ) ** <val1> )
<name4> に <val5> を掛けた値から <name3> を引いた値に <val1> を加えた値を <name3> とする	<name3> = <name4> * <val5> - <name3> + <val1>	<name3> = <name4> * <val5> - <name3> + <val1>
<name3> の <name1> 番目の <name4> 番目が <val2> と等しいとき、	if <name3> [ <name1> ] [ <name4> ] == <val2> :	continue [ <name1> ] [ <name4> ] == <val2> :
<name3> の末尾に <name5> の <name4> を追加する	<name3> . append ( <name5> . <name4> )	<name4> . append ( <name5> . <name4> )
真を <name3> とする	<name3> = True	( <name3> = True )
<name5> ( <name2> ) <name5> ( <name6> )	<name5> ( <name2> ) <name5> ( <name6> )	( <name5> ( <name2> ) <name5> ( <name6> ) )
<name5> の末尾に ( <name1> 、 <name2> 、 <name4> ) の組を追加する	<name5> . append ( ( <name1> , <name2> , <name4> ) )	<name4> . append ( ( <name1> , <name2> , <name4> ) )
( <name4> ) からなる列の <name6> の <name3> 回分の列を <name5> とする	<name5> = [ <name4> ] * <name6> . <name3>	<name5> = [ <name4> ] * <name6> . <name3>
<val4> を開始番号として <name1> に番号付した組の列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in enumerate ( <name1> , start = <val4> ) :	for <name6> , <name3> in enumerate ( <name1> , start = <val4> ) :
<name5> の <name6> 番目が <name4> に含まれる間、次を繰り返す	while <name5> [ <name6> ] in <name4> :	del <name5> [ <name6> ] in <name4> :
<val2> に <name4> を加えた値に <name1> に <name3> を加えた値に <val6> を加えた値を加えた値を <name4> とする	<name4> = ( <val2> ) + <name4> + ( <name1> + <name3> + <val6> )	<name4> = <val2> + <name4> + ( <name1> + <name3> + <val6> )
<name1> の <name6> の <name5> を返す	return <name1> . <name6> . <name5>	x return <name1> . <name6> . <name5>
<name4> の <name3> から <val6> を引いた値番目から <val2> を引いた値、 <name4> の <name3> から <val6> を引いた値番目を出力する	print ( <name4> [ <name3> - <val6> ] - <val2> , <name4> [ <name3> - <val6> ] )	print ( <name4> [ <name3> - <val6> ] - <val2> , <name4> [ <name3> - <val6> ] )
入力された文字列を空白で分割した字句列の各要素に <name4> の <name5> を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( <name4> . <name5> , input ( ) . split ( ) )	<name2> , <name1> = map ( <name4> . <name5> , input ( ) . split ( ) )
<name3> ( <name2> , <name4> ) を <name5> とする	<name5> = <name3> ( <name2> , <name4> )	else = <name3> ( <name2> , <name4> )
<name2> ( ( <name5> . <name1> + <val4> * <name6> . <name1> ) / <val3> , ( <name5> . <name2> + <val4> * <name6> . <name2> ) / <val3> ) を <name3> とする	<name3> = <name2> ( ( <name5> . <name1> + <val4> * <name6> . <name1> ) / <val3> , ( <name5> . <name2> + <val4> * <name6> . <name2> ) / <val3> )	<name3> = <name2> ( ( <name5> . <name1> + <val4> * <name6> . <name1> ) / <val3> , ( <name5> . <name2> + <val4> * <name6> . <name2> ) / <val3> )
<name2> の <val1> を取り出した値を <name3> とする	<name3> = <name2> . pop ( <val1> )	<name3> = <name2> . pop ( <val1> )
( <name5> が <name3> に含まれるとき <val2> 、そうでなければ <name6> の各要素を <name5> とし、 <val4> の列 ) からなる列を <name6> の <name1> 番目にする	<name6> [ <name1> ] = [ <val2> if <name5> in <name3> else [ <val4> for <name5> in <name6> ] ]	<name3> [ <name1> ] = [ <val2> if <name5> in <name3> else [ <val4> for <name5> in <name6> ] ]
0 から <name1> 未満までの数列の逆順を順に <name3> として、繰り返す	for <name3> in range ( <name1> ) [ : : - 1 ] :	in range ( <name1> ) [ : : - 1 ] :
<name5> が <name6> より小さいとき ( <name5> 、 <name6> ) の組、そうでなければ ( <name6> 、 <name5> ) の組を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = ( <name5> , <name6> ) if <name5> < <name6> else ( <name6> , <name5> )	<name3> , <name4> = ( <name5> , <name6> ) if <name5> < <name6> else ( <name6> , <name5> )
<name2> 、 <name3> の <val4> 乗に <name5> の <val4> 乗を加えた値の最大値を <name2> とする	<name2> = max ( <name2> , <name3> ** <val4> + <name5> ** <val4> )	<name2> = max ( <name2> , <name3> ** <val4> + <name5> ** <val4> )
<name3> の <val4> 番目をそうでなければ、とする	else = <name3> [ <val4> ]	now = <name3> [ <val4> ]
<name3> ( <name4> ) を展開し、それぞれ <name6> 、 <name5> 、 <name2> とする	<name6> , <name5> , <name2> = <name3> ( <name4> )	<name2> , <name6> , <name5> , <name2> = <name3> ( <name4> )
<name2> の <val6> 乗に <name4> の <val6> 乗を加えた値の <val3> 乗を <val6> で割った商を <name5> とする	<name5> = ( <name2> ** <val6> + <name4> ** <val6> ) ** <val3> // <val6>	<name5> = ( <name2> ** <val6> + <name4> ** <val6> ) ** <val3> // <val6>
<name4> の ( <name1> 、 <name5> 、 <val3> ) の組番目を <name4> の ( <name1> から <val2> を引いた値、 <name5> 、 <val3> ) の組番目だけ増加させる	<name4> [ ( <name1> , <name5> , <val3> ) ] += <name4> [ ( <name1> - <val2> , <name5> , <val3> ) ]	<name4> [ ( <name1> , <name5> , <val3> ) ] += <name4> [ ( <name1> - <val2> , <name5> , <val3> ) ]
<name6> ( ) の整数値を <name2> とする	<name2> = int ( <name6> ( ) )	<name6> . <name2> = int ( <name6> ( ) )
<name3> の末尾に ( <name2> から <val1> を引いた値、 <name5> から <val1> を引いた値 ) の組を追加する	<name3> . append ( ( <name2> - <val1> , <name5> - <val1> ) )	<name4> . append ( ( <name2> - <val1> , <name5> - <val1> ) )
<name6> の末尾に文字コード <name5> の <name2> 番目の順序数に <val1> を加えた値の文字を追加する	<name6> . append ( chr ( ord ( <name5> [ <name2> ] ) + <val1> ) )	<name4> . append ( chr ( ord ( <name5> [ <name2> ] ) + <val1> ) )
<name3> ( <val2> ) を <name4> とする	<name4> = <name3> ( <val2> )	<name4> = <name3> ( <val2> )
<name6> が <name4> に <val1> を加えた値を <val2> で割った余りと等しくまたは <name3> の <name5> 番目の <name6> 番目の <name6> 番目でないとき、	if <name6> == ( <name4> + <val1> ) % <val2> or not <name3> [ <name5> ] [ <name6> ] [ <name6> ] :	isinstance ( <name6> == ( <name4> + <val1> ) % <val2> ) or not <name3> [ <name5> ] [ <name6> ] [ <name6> ] :
<name1> 、 <name4> の <name3> 番目の <name2> 番目の最小値を <name1> とする	<name1> = min ( <name1> , <name4> [ <name3> ] [ <name2> ] )	<name1> = min ( <name1> , <name4> [ <name3> ] [ <name2> ] )
% . 3 f % . 3 f を ( <name3> から <name5> * <name1> を引いた値を <name2> で割った値、 <name1> ) の組で割った余りを出力する	print ( '%.3f %.3f' % ( ( <name3> - <name5> * <name1> ) / <name2> , <name1> ) )	print ( '{0:.5f} {1:.5f}' % ( ( <name3> - <name5> * <name1> ) / <name2> , <name1> ) )
<name2> ( <name1> [ <name4> // <val6> : ] , <name3> ) を <name5> とする	<name5> = <name2> ( <name1> [ <name4> // <val6> : ] , <name3> )	else = <name2> ( <name1> [ <name4> // <val6> : ] , <name3> )
<name1> ( [ [ <val3> , <val3> ] , [ <val4> , <val3> ] ] , <name6> ) を <name2> とする	<name2> = <name1> ( [ [ <val3> , <val3> ] , [ <val4> , <val3> ] ] , <name6> )	<name2> = <name1> ( [ <val3> , <val3> ] , [ <val4> , <val3> ] , <name6> )
<name3> の <val5> 乗に <name6> の <val5> 乗を加えた値から <name4> の <val5> 乗を引いた値を <name1> とする	<name1> = <name3> ** <val5> + <name6> ** <val5> - <name4> ** <val5>	<name1> = <name3> ** <val5> + <name6> ** <val5> - <name4> ** <val5>
-1 を <name3> の <name1> 番目にする	<name3> [ <name1> ] = - 1	( <name3> [ <name1> ] = - 1 )
<name5> が <val4> より大きいとき <name5> 、そうでなければ <val2> を出力する	print ( <name5> if <name5> > <val4> else <val2> )	print ( <name5> if <name5> > <val4> else <val2> )
<name6> の <name1> 番目が <name6> の <name1> に <val2> を加えた値番目より小さいとき、	if <name6> [ <name1> ] < <name6> [ <name1> + <val2> ] :	list ( <name6> [ <name1> ] < <name6> [ <name1> + <val2> ] ) :
+ が <name1> に含まれる間、次を繰り返す	while '+' in <name1> :	try not in <name1> :
<name5> の <name1> 番目の <val2> 番目が -1 と等しくないとき、	if <name5> [ <name1> ] [ <val2> ] != - <val2> :	if <name5> [ <name1> ] [ <val2> ] != - 1 :
<name2> の <name6> が <val5> <name1> <val4> 以下のとき、	if <name2> . <name6> <= <val5> <name1> <val4> :	if <name2> . <name6> <= <val5> <name1> <val4> :
<name1> ( <name5> ( <name3> [ <name2> + <val6> ] ) ) の文字列を <name3> の <name2> 番目にする	<name3> [ <name2> ] = str ( <name1> ( <name5> ( <name3> [ <name2> + <val6> ] ) ) )	<name3> [ <name2> ] = str ( <name1> ( <name5> ( <name3> [ <name2> + <val6> ] ) ) )
<name6> 、 <name5> に <name2> を加えた値の最小値を <name6> とする	<name6> = min ( <name6> , <name5> + <name2> )	else = min ( <name6> , <name5> + <name2> )
<name3> を <name1> の <val5> 番目にする	<name1> [ <val5> ] = <name3>	( <name1> [ <val5> ] = <name3> )
<name2> が <name4> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name4> : <blk> break </blk>	if <name2> == <name4> : <blk> break </blk>
<name3> 、 <name2> の <name6> の <name1> 番目番目の <name5> の <name1> 番目番目の <val4> 番目の最小値を <name3> とする	<name3> = min ( <name3> , <name2> [ <name6> [ <name1> ] ] [ <name5> [ <name1> ] ] [ <val4> ] )	<name3> = min ( <name3> , <name2> [ <name6> [ <name1> ] ] [ <name5> [ <name1> ] ] [ <val4> ] )
<name4> ( ( <name1> - <name3> ) / ( <name2> - <name3> ) ) を <name6> とする	<name6> = <name4> ( ( <name1> - <name3> ) / ( <name2> - <name3> ) )	<name6> = <name4> ( ( <name1> - <name3> ) / ( <name2> - <name3> ) )
<name1> を空白で分割した字句列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name1> . split ( )	<name3> , <name2> = <name1> . split ( )
<name4> から <name1> に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> , <name1> + <val2> ) :	. for <name3> in range ( <name4> , <name1> + <val2> ) :
<name2> の <val5> 番目を <name1> とする	<name1> = <name2> [ <val5> ]	\ <name1> = <name2> [ <val5> ]
<name3> を <name5> の整数値に <val6> を加えた値倍にする	<name3> *= int ( <name5> ) + <val6>	<name5> *= <name3> *= ( int ( <name5> ) + <val6> )
( <name3> ) からなる列の両端キューを <name1> とする	<name1> = deque ( [ <name3> ] )	<name1> = deque ( [ <name3> ] )
<name2> から <name5> を引いた値を <name3> とする	<name3> = <name2> - <name5>	<name3> = <name2> - <name5>
<name5> から <val6> を引いた値を <name1> の <name4> 番目にする <val6> を <name3> の <name4> 番目にする	<name1> [ <name4> ] = <name5> - <val6> <name3> [ <name4> ] = <val6>	( <name1> [ <name4> ] = <name5> - <val6> ) <name3> [ <name4> ] = <val6>
<name3> ( <name5> , ( <val1> * <name2> , <val4> , <name2> ) )	<name3> ( <name5> , ( <val1> * <name2> , <val4> , <name2> ) )	<name3> ( <name5> , ( <val1> * <name2> , <val4> , <name2> ) )
<name6> と <name1> 、 <name5> の共通部分のとき、	if <name6> . intersection ( <name1> , <name5> ) :	list ( <name6> . intersection ( <name1> , <name5> ) ) :
<name6> に <name4> の <name5> 番目の <val2> 番目を加えた値が <name3> 以下のとき、	if ( <name6> + <name4> [ <name5> ] [ <val2> ] <= <name3> ) :	for <name3> in <name6> + <name4> [ <name5> ] [ <val2> ] <= <name3> :
<name4> の <val2> 番目を <name3> の <val6> 番目にする	<name3> [ <val6> ] = <name4> [ <val2> ]	<name3> [ <val6> ] = <name4> [ <val2> ]
<name6> . <name4> ( <name1> + <name3> , <name5> + <name2> , <val6> )	<name6> . <name4> ( <name1> + <name3> , <name5> + <name2> , <val6> )	<name4> . <name4> ( <name1> + <name3> , <name5> + <name2> , <val6> )
<name4> を <name1> に <name3> を掛けた値だけ増加させる	<name4> += <name1> * <name3>	( <name4> += ( <name1> * <name3> ) )
<name4> . <name5> ( <name1> . <name6> )	<name4> . <name5> ( <name1> . <name6> )	( <name4> . <name5> ( <name1> . <name6> ) )
os . <name6> の <name1> 番目でないとき、	if not <name6> [ <name1> ] :	raise <name6> [ <name1> ] :
<name5> 、 <name2> の要素をそれぞれ組にした列の各要素を <name6> 、 <name1> とし、 <name6> が <val3> より大きくかつ <name1> が <val3> より大きいかどうかの列が少なくともひとつは真のとき、	if any ( [ <name6> > <val3> and <name1> > <val3> for <name6> , <name1> in zip ( <name5> , <name2> ) ] ) :	for <name6> , <name1> in sorted ( [ <name6> > <val3> and <name1> > <val3> for <name6> , <name1> in zip ( <name5> , <name2> ) ] ) :
<name3> を <name2> の <name1> に <val4> を加えた値番目にする	<name2> [ <name1> + <val4> ] = <name3>	<name4> [ <name2> [ <name1> + <val4> ] ] = <name3>
<name5> の末尾の末尾を返す	return <name5> [ - 1 ] [ - 1 ]	x return <name5> [ - 1 ] [ - 1 ]
<name4> を順に <name1> として、繰り返す <blk> <name1> を出力する </blk>	for <name1> in <name4> : <blk> print ( <name1> ) </blk>	for <name1> in <name4> : <blk> print ( <name1> ) </blk>
空列を <name4> の <name2> の <val5> 番目番目にする	<name4> [ <name2> [ <val5> ] ] = [ ]	<name4> [ <name2> [ <val5> ] ] = [ ]
<name4> から <name3> を引いた値に <val2> を <val5> で割った値を掛けた値に <name3> を加えた値を <name6> とする	<name6> = ( <name4> - <name3> ) * ( <val2> / <val5> ) + <name3>	\ <name6> = ( <name4> - <name3> ) * ( <val2> / <val5> ) + <name3>
<name1> . <name2> ( )	<name1> . <name2> ( )	not <name1> . <name2> ( )
<name3> を <name4> の <name1> 番目の整数値に <name1> から <val5> を引いた値を掛けた値だけ増加させる	<name3> += int ( <name4> [ <name1> ] ) * ( <name1> - <val5> )	<name1> += int ( <name4> [ <name1> ] ) * ( <name1> - <val5> )
<val5> から <val2> 未満までの数列を順に <name4> として、繰り返す <blk> <name3> の末尾に <val5> を追加する </blk>	for <name4> in range ( <val2> ) : <blk> <name3> . append ( <val5> ) </blk>	for <name4> in range ( <val5> , <val2> ) : <blk> <name3> . append ( <val5> ) </blk>
<name6> に <name4> を掛けた値を <name1> とする	<name1> = <name6> * <name4>	<name6> <name1> = <name6> * <name4>
<name6> に <name2> の <name1> 番目を加えた値を <name3> とする	<name3> = <name6> + <name2> [ <name1> ]	else = <name6> + <name2> [ <name1> ]
<name4> の <name1> に対応する値、もし存在しなければ <name6> 、空列を返す	return <name4> . <name1> . get ( <name6> , [ ] )	yield <name4> . <name1> . get ( <name6> , [ ] )
<name6> が <val5> と等しくかつ ( <name4> [ <val5> ] == <val3> かつ <name2> ( <name4> ) >= <val1> のとき、つまり真、そうでなければ <name5> の各要素を <name4> とし、 <name6> の列 ) からなる列が少なくともひとつは真のとき、	if <name6> == <val5> and any ( [ True if <name4> [ <val5> ] == <val3> and <name2> ( <name4> ) >= <val1> else [ <name6> for <name4> in <name5> ] ] ) :	> if <name6> % <val5> and any ( [ True if <name4> [ <val5> ] == <val3> and <name2> ( <name4> ) >= <val1> else [ <name6> for <name4> in <name5> ] ] ) :
<name2> を <name1> として <name4> をソートする	<name4> . sort ( <name1> = <name2> )	<name3> . sort ( <name1> = <name2> )
書式 <name2> を <val3> でフォーマットした文字列を長さ <val4> になるように '0' 左詰めした文字列を <name1> とする	<name1> = format ( <name2> , <val3> ) . zfill ( <val4> )	<name1> = format ( <name2> , <val3> ) . zfill ( <val4> )
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列の集合を <name1> とする	<name1> = set ( map ( int , input ( ) . split ( <val5> ) ) )	<name1> = set ( map ( int , input ( ) . split ( <val5> ) ) )
<val1> から <name5> 未満までの数列の各要素を <name2> とし、 <val1> から <name3> に <val4> を加えた値未満までの数列の各要素を <name6> とし、 <val1> の列の列を <name5> とする	<name5> = [ [ <val1> for <name6> in range ( <name3> + <val4> ) ] for <name2> in range ( <name5> ) ]	<name4> = [ [ <val1> for <name6> in range ( <name3> + <val4> ) ] for <name2> in range ( <name5> ) ]
<name2> の <name3> 番目、 <name2> の <name3> から <name1> [ <name5> ] の <val6> 番目を引いた値番目に <name1> の <name5> 番目の先頭を加えた値の最大値を <name2> の <name3> 番目にする	<name2> [ <name3> ] = max ( <name2> [ <name3> ] , <name2> [ <name3> - <name1> [ <name5> ] [ <val6> ] ] + <name1> [ <name5> ] [ 0 ] )	<name2> [ <name3> ] = max ( <name2> [ <name3> ] , <name2> [ <name3> - <name1> [ <name5> ] [ <val6> ] ] + <name1> [ <name5> ] [ 0 ] )
0 から <name1> の長さ、 <name2> に <val3> を加えた値の最小値未満までの数列の各要素を <name6> とし、 <name5> の <name2> から <name6> を引いた値番目に <name1> の <name6> 番目を加えた値の列の最大値を <name5> の <name2> 番目にする	<name5> [ <name2> ] = max ( [ <name5> [ <name2> - <name6> ] + <name1> [ <name6> ] for <name6> in range ( min ( len ( <name1> ) , <name2> + <val3> ) ) ] )	<name4> [ <name2> ] = max ( [ <name5> [ <name2> - <name6> ] + <name1> [ <name6> ] for <name6> in range ( min ( len ( <name1> ) , <name2> + <val3> ) ) ] )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> 、 <name4> 、 <name3> とする	<name5> , <name6> , <name4> , <name3> = map ( int , <name1> ( ) . split ( ) )	<name5> , <name6> , <name4> , <name3> = map ( int , <name1> ( ) . split ( ) )
<name2> ( <name3> [ <val1> : ] , <name5> [ <val1> : ] ) を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name2> ( <name3> [ <val1> : ] , <name5> [ <val1> : ] )	( <name6> , <name4> = <name2> ( <name3> [ <val1> : ] , <name5> [ <val1> : ] ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name6> = map ( int , input ( ) . split ( ) )
<name2> の末尾に ( <name3> 、 <val6> ) の組を追加する	<name2> . append ( ( <name3> , <val6> ) )	<name4> . append ( ( <name3> , <val6> ) )
<name3> の <name1> 番目を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name3> [ <name1> ]	<name2> , <name5> , <name6> = <name3> [ <name1> ]
<name6> の末尾を除いた部分列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in <name6> [ : - 1 ] :	[ for <name5> , <name2> in <name6> [ : - 1 ] :
( <name6> % <name5> ) * <val4> ** <name1> // <name5> の文字列のリストの各要素に整数を適用した列の総和を出力する	print ( sum ( map ( int , list ( str ( ( <name6> % <name5> ) * <val4> ** <name1> // <name5> ) ) ) ) )	[ print ( sum ( map ( int , str ( <name6> % <name5> ) * <val4> ** <name1> // <name5> ) ) )
T に <name3> の文字列を加えた値を出力する	print ( 'T' + str ( <name3> ) )	print ( '#.' + str ( <name3> ) )
<name2> に <name4> の <name3> 番目を掛けた値に <name6> の <name3> + <name5> に <name1> を加えた値番目の <name3> 番目を掛けた値を <name2> で割った余りを <name1> とする	<name1> = <name2> * <name4> [ <name3> ] * <name6> [ <name3> + <name5> + <name1> ] [ <name3> ] % <name2>	<name1> = <name2> * <name4> [ <name3> ] * <name6> [ <name3> + <name5> + <name1> ] [ <name3> ] % <name2>
<name5> の <val2> 番目の整数値を <name1> とする	<name1> = int ( <name5> [ <val2> ] )	<name1> = int ( <name5> [ <val2> ] )
( <name6> から <name4> を引いた値、 <name5> から <name1> を引いた値 ) からなる列を <name2> とする	<name2> = [ <name6> - <name4> , <name5> - <name1> ]	<name6> = [ <name6> - <name4> , <name5> - <name1> ]
<name5> に <name3> の <name4> の <val2> 番目番目、 - <name4> の <val6> 番目を追加した集まり	<name5> . add ( <name3> [ <name4> [ <val2> ] ] , - <name4> [ <val6> ] )	<name1> . add ( <name3> [ <name4> [ <val2> ] ] , - <name4> [ <val6> ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を追加して <name5> を拡張する	<name5> . extend ( map ( int , input ( ) . split ( ) ) )	<name5> . extend ( map ( int , input ( ) . split ( ) ) )
<name3> . <name4> ( <name6> , <name5> )	<name3> . <name4> ( <name6> , <name5> )	( <name3> . <name4> ( <name6> , <name5> ) )
<name3> 、 <name1> の <name2> 番目の最小値を <name1> の <name2> 番目にする	<name1> [ <name2> ] = min ( <name3> , <name1> [ <name2> ] )	<name3> [ <name2> ] = min ( <name3> , <name1> [ <name2> ] )
<name6> に <val5> を加えた値を <name4> の <name1> にする	<name4> . <name1> = <name6> + <val5>	( <name4> . <name1> = <name6> + <val5> )
<name2> 内の <val6> の出現回数が <val1> 以上のとき <val6> 、そうでなければ <val4> を出力する	print ( <val6> if <name2> . count ( <val6> ) >= <val1> else <val4> )	print ( <val6> if <name2> . count ( <val6> ) >= <val1> else <val4> )
<name2> の末尾に [ MASK ] の両端キューを追加する	<name2> . append ( deque ( ) )	<name4> . append ( deque ( ) )
<name6> から <name5> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> , <name5> ) :	. for <name3> in range ( <name6> , <name5> ) :
-1 、 <val4> を <name5> 、 <name1> とする	<name5> , <name1> = - 1 , <val4>	<name2> , <name1> = - <val4> , <val4>
( <val3> 、 <val5> ) からなる列の <name2> ( <name4> , <name1> , <name6> , <name3> , <name5> , <name2> , <name4> , <name1> ) が <val6> より小さくまたは <name2> ( <name4> , <name1> , <name3> , <name5> , <name5> , <name2> , <name4> , <name1> ) が <val6> より小さくまたは <name2> ( <name6> , <name3> , <name3> , <name5> , <name5> , <name2> , <name4> , <name1> ) が <val6> より小さいかどうか番目を出力する	print ( [ <val3> , <val5> ] [ <name2> ( <name4> , <name1> , <name6> , <name3> , <name5> , <name2> , <name4> , <name1> ) < <val6> or <name2> ( <name4> , <name1> , <name3> , <name5> , <name5> , <name2> , <name4> , <name1> ) < <val6> or <name2> ( <name6> , <name3> , <name3> , <name5> , <name5> , <name2> , <name4> , <name1> ) < <val6> ] )	print ( [ <val3> , <val5> ] [ <name2> ( <name4> , <name1> , <name6> , <name3> , <name5> , <name2> , <name4> , <name1> ) < <val6> or <name2> ( <name4> , <name1> , <name3> , <name5> , <name2> , <name4> , <name1> ) < <val6> or <name2> ( <name6> , <name3> , <name5> , <name2> , <name4> , <name1> ) < <val6> )
<name4> を <name5> 、 <name2> の最小値だけ増加させる	<name4> += min ( <name5> , <name2> )	<name2> += min ( <name5> , <name2> )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name1> 、 <name3> 、 <name2> 、 <name5> 、 <name6> 、 <name4> とする	<name6> , <name4> , <name1> , <name3> , <name2> , <name5> , <name6> , <name4> = map ( float , input ( ) . split ( ) )	<name4> , <name1> , <name3> , <name2> , <name5> , <name6> , <name4> = map ( float , input ( ) . split ( ) )
<val1> 、 <val1> を <name2> 、 <name6> とする	<name2> , <name6> = <val1> , <val1>	<name2> , <name6> = <val1> , <val1>
<name2> から <name6> . <name1> ( <val5> ) を引いた値を出力する	print ( <name2> - <name6> . <name1> ( <val5> ) )	print ( <name2> - <name6> . <name1> ( <val5> ) )
0 から <name5> 未満までの数列の各要素を <name3> とし、、つまり空列の列を <name4> の <name1> にする	<name4> . <name1> = [ [ ] for <name3> in range ( <name5> ) ]	<name4> . <name1> = [ [ ] for <name3> in range ( <name5> ) ]
<name1> ( ) . <name2> ( ) の各要素に <name3> を適用した列をソートした列の逆順を展開してを出力する	print ( * sorted ( map ( <name3> , <name1> ( ) . <name2> ( ) ) ) [ : : - 1 ] )	print ( * sorted ( map ( <name3> , <name1> ( ) . <name2> ( ) ) ) [ : : - 1 ] )
0 から <name4> の長さを <val5> で割った値の整数値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( int ( len ( <name4> ) / <val5> ) ) :	continue for <name6> in range ( int ( len ( <name4> ) / <val5> ) ) :
<name2> ( <name5> ( <name3> ) ) . <name4> ( <name2> ( <val6> ) , <name1> = <name3> ) を <name3> とする	<name3> = <name2> ( <name5> ( <name3> ) ) . <name4> ( <name2> ( <val6> ) , <name1> = <name3> )	<name3> = <name2> ( <name5> ( <name3> ) ) . <name4> ( <name2> ( <val6> ) , <name1> = <name3> )
<name3> ( <name2> , <name4> , <name1> ) を <name6> で割った値を <name5> とする	<name5> = <name3> ( <name2> , <name4> , <name1> ) / <name6>	<name5> = <name3> ( <name2> , <name4> , <name1> ) / <name6>
<name5> が <name3> の <name1> に含まれるとき、	if <name5> in <name3> . <name1> :	for <name5> in <name3> . <name1> :
<name5> の <name4> 番目の <val6> 番目が <name3> と等しいとき、	if <name5> [ <name4> ] [ <val6> ] == <name3> :	continue <name5> [ <name4> ] [ <val6> ] == <name3> :
( <val4> 、 <val5> ) の組	( <val4> , <val5> )	tuple ( ( <val4> , <val5> ) )
入力された文字列を <val2> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val2> ) ]	<name4> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val2> ) ]
( <val6> 、 <val2> 、 <val2> 、 <val4> 、 <val5> ) からなる列	[ <val6> , <val2> , <val2> , <val4> , <val5> ]	all ( [ <val6> , <val2> , <val2> , <val4> , <val5> ] )
<name3> に <name2> を掛けた値を <name5> とする	<name5> = <name3> * <name2>	else = <name3> * <name2>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name5> 、 <name6> とする	<name3> , <name2> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name2> , <name5> , <name6> = map ( int , input ( ) . split ( ) )
<val5> を現在の日時とする	now = <val5>	inf = <val5>
<name2> の先頭から <name4> を探して見つかった位置を <name4> とする	<name4> = <name2> . find ( <name4> )	<name4> = <name2> . find ( <name4> )
<name5> の末尾に <name2> の、つまり先頭から <val3> 番目までの部分列を追加する	<name5> . append ( <name2> [ : <val3> ] )	<name3> . append ( <name2> [ : <val3> ] )
<name5> . <name3> ( <name4> ) を <name5> とする	<name5> = <name5> . <name3> ( <name4> )	else = <name5> . <name3> ( <name4> )
<name3> の末尾に <name5> の <name2> を英大文字に変換した文字列と等しい要素の最初の位置を追加する	<name3> . append ( <name5> . index ( <name2> . upper ( ) ) )	<name5> . append ( <name5> . index ( <name2> . upper ( ) ) )
<name2> ( <name5> ( <name3> + <name1> [ <name6> ] , <name4> ) , <name2> ) を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name2> ( <name5> ( <name3> + <name1> [ <name6> ] , <name4> ) , <name2> )	<name6> , <name4> = <name2> ( <name5> ( <name3> + <name1> [ <name6> ] , <name4> ) , <name2> )
<name2> の <name5> の <name4> 番目を順に <name3> として、繰り返す	for <name3> in <name2> . <name5> [ <name4> ] :	continue <name2> . <name5> [ <name4> ] :
0 から <name4> に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val2> ) :	) : for <name5> in range ( <name4> + <val2> ) :
<name3> ( <name1> , <name6> , <name1> [ <val4> ] )	<name3> ( <name1> , <name6> , <name1> [ <val4> ] )	<name3> ( <name1> , <name6> , <name1> [ <val4> ] )
<name1> ( <name3> + <val5> , <name6> + <val5> , <name2> + <name3> )	<name1> ( <name3> + <val5> , <name6> + <val5> , <name2> + <name3> )	<name1> ( <name3> + <val5> , <name6> + <val5> , <name2> + <name3> )
<name5> から <name6> を引いた値に <name4> から <name1> を引いた値を掛けた値から <name2> から <name6> を引いた値に <name3> から <name1> を引いた値を掛けた値を引いた値を返す	return ( <name5> - <name6> ) * ( <name4> - <name1> ) - ( <name2> - <name6> ) * ( <name3> - <name1> )	return ( <name5> - <name6> ) * ( <name4> - <name1> ) - ( <name2> - <name6> ) * ( <name3> - <name1> )
<name4> の <val1> 乗を出力する	print ( <name4> ** <val1> )	<name4> print ( <name4> ** <val1> )
( <val2> 、 <val3> 、 <val5> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val2> , <val3> , <val5> , <val1> ]	<name6> = [ <val2> , <val3> , <val5> , <val1> ]
<name3> ( <name5> , <name1> , <name6> + <val4> , <name2> )	<name3> ( <name5> , <name1> , <name6> + <val4> , <name2> )	<name2> ( <name5> , <name1> , <name6> + <val4> , <name2> )
<name2> をパラメータとして <name2> の <val4> 番目を返す関数を <name1> として <name6> をソートする	<name6> . sort ( <name1> = lambda <name2> : <name2> [ <val4> ] )	<name1> . sort ( <name6> = lambda <name2> : <name2> [ <val4> ] )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列の組を <name5> とする	<name5> = tuple ( map ( int , input ( ) . split ( <val2> ) ) )	<name5> = tuple ( map ( int , input ( ) . split ( <val2> ) ) )
<name3> の <name4> 番目の <name6> 番目を <name2> とする	<name2> = <name3> [ <name4> ] [ <name6> ]	<name2> = <name3> [ <name4> ] [ <name6> ]
<val1> が <name2> と等しいとき、	if ( <val1> == <name2> ) :	if ( <val1> == <name2> ) :
<name4> 、 <name3> の最大値を <name3> とする	<name3> = max ( <name4> , <name3> )	<name3> = max ( <name4> , <name3> )
0 から <val5> 未満までの数列の各要素を <name3> とし、 ( <val2> ) からなる列の列を <name4> とする	<name4> = [ [ <val2> ] for <name3> in range ( <val5> ) ]	<name4> = [ [ <val2> ] for <name3> in range ( <val5> ) ]
<name5> の <name6> 番目が <name2> の <name6> 番目と等しくないとき、	if <name5> [ <name6> ] != <name2> [ <name6> ] :	while <name5> [ <name6> ] != <name2> [ <name6> ] :
空列を <name4> とする空列を <name6> とする	<name4> = [ ] <name6> = [ ]	<name4> = [ ] <name6> = [ ]
<name2> ( <name4> , <name3> + <val5> , <name6> ) を <name4> とする	<name4> = <name2> ( <name4> , <name3> + <val5> , <name6> )	<name6> = <name2> ( <name4> , <name3> + <val5> , <name6> )
<val6> から <name1> 未満までの数列の各要素を <name3> とし、 <val6> の列のリストを <name2> とする	<name2> = list ( [ <val6> for <name3> in range ( <name1> ) ] )	<name2> = list ( [ <val6> for <name3> in range ( <name1> ) ] )
<name5> の <name4> 番目が <name5> の <name1> 番目に <name2> を加えた値より大きいとき、	if <name5> [ <name4> ] > <name5> [ <name1> ] + <name2> :	continue <name5> [ <name4> ] > <name5> [ <name1> ] + <name2> :
( ( <val1> ) からなる列の <val1> から <name5> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <name4> に <val6> を加えた値の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val1> ] * [ ( <name4> + <val6> ) for <name2> in range ( <name5> + <val6> ) ] ]	<name3> = [ [ <val1> ] * [ ( <name4> + <val6> ) for <name2> in range ( <name5> + <val6> ) ] ]
<name3> の <name4> 番目の整数値を <name3> の <name4> 番目にする	<name3> [ <name4> ] = int ( <name3> [ <name4> ] )	<name3> [ <name4> ] = int ( <name3> [ <name4> ] )
<name1> ( <name6> , <name5> -1 )	<name1> ( <name6> , <name5> - 1 )	<name1> ( <name6> , <name5> - 1 )
: を代わりの行末として <name4> を出力する	print ( <name4> , end = ':' )	print ( <name4> , end ' ' ' ' )
<name6> の <name1> 番目が -1 と等しくなくかつ <name5> が <name3> ( <name1> ) と等しくないとき、	if <name6> [ <name1> ] != - 1 and <name5> != <name3> ( <name1> ) :	for <name6> [ <name1> ] != - 1 and <name5> != <name3> ( <name1> ) :
<name5> から <val4> を引いた値と <name6> を割ったときの ( 商を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = divmod ( <name5> - <val4> , <name6> )	<name1> , <name2> = divmod ( <name5> - <val4> , <name6> )
<name4> の <name1> 番目が <name6> の <name2> 番目以下のとき、	if <name4> [ <name1> ] <= <name6> [ <name2> ] :	[ if <name4> [ <name1> ] <= <name6> [ <name2> ] :
真を <name4> の <name1> の先頭番目の <name1> の <val5> 番目から <val5> を引いた値番目にする	<name4> [ <name1> [ 0 ] ] [ <name1> [ <val5> ] - <val5> ] = True	<name4> [ <name1> [ 0 ] ] [ <name1> [ <val5> ] - <val5> ] = True
<name4> が <name5> より小さくかつ <name3> が <name6> の <name4> 番目より大きい間、次を繰り返す	while <name4> < <name5> and <name3> > <name6> [ <name4> ] :	del ( <name4> < <name5> and <name3> > <name6> [ <name4> ] ) :
<name4> の <name3> から <val2> を引いた値番目に <name4> の <name3> から <val6> を引いた値番目を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name4> [ <name3> - <val2> ] + <name4> [ <name3> - <val6> ]	( <name4> [ <name3> ] = <name4> [ <name3> - <val2> ] + <name4> [ <name3> - <val6> ] )
0 から <val2> を <name3> で割った商未満までの数列の各要素を <name1> とし、 ( <name1> * <name3> ) の <val6> 乗に <name3> を掛けた値の列の総和を出力する	print ( sum ( [ ( <name1> * <name3> ) ** <val6> * <name3> for <name1> in range ( <val2> // <name3> ) ] ) )	print ( sum ( [ ( <name1> * <name3> ) ** <val6> * <name3> for <name1> in range ( <val2> // <name3> ) ] ) )
0 から <name2> を <val6> で割った商未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> // <val6> ) :	for <name5> in range ( <name2> // <val6> ) :
<name6> の <name2> 番目を <name4> の <name2> 番目だけ増加させる	<name6> [ <name2> ] += <name4> [ <name2> ]	<name2> [ <name2> ] += <name4> [ <name2> ]
0 から <name1> に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> + <val5> ) :	for <name2> in range ( <name1> + <val5> ) :
<name1> が <val6> 以上かつ <name1> が <val4> 以下のとき、	if <name1> >= <val6> and <name1> <= <val4> :	if <name1> >= <val6> and <name1> <= <val4> :
<name3> に <name4> の <val6> 乗を掛けた値に <val6> に <name1> を掛けた値に <name4> を掛けた値を加えた値に <name5> を加えた値を <name2> とする	<name2> = <name3> * <name4> ** <val6> + <val6> * <name1> * <name4> + <name5>	<name2> = <name3> * <name4> ** <val6> + <val6> * <name1> * <name4> + <name5>
<name5> をパラメータとして <name5> の <val2> 番目を返す関数を <name1> として逆順に <name3> をソートする	<name3> . sort ( <name1> = lambda <name5> : <name5> [ <val2> ] , reverse = True )	<name3> . sort ( <name1> = lambda <name5> : <name5> [ <val2> ] , reverse = True )
<name2> [ <name4> ] . <name3> ( )	<name2> [ <name4> ] . <name3> ( )	set ( <name2> [ <name4> ] . <name3> ( ) )
<name2> が <name3> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name3> : <blk> break </blk>	list ( <name2> == <name3> ) : <blk> break </blk>
<val2> から <name3> 未満までの数列の各要素を <name1> とし、 <val2> から <name4> 未満までの数列の各要素を <name6> とし、 <val2> の列の列を <name5> とする	<name5> = [ [ <val2> for <name6> in range ( <name4> ) ] for <name1> in range ( <name3> ) ]	<name5> = [ [ <val2> for <name6> in range ( <name4> ) ] for <name1> in range ( <name3> ) ]
<name4> の末尾に <name6> を追加する	<name4> . append ( <name6> )	<name3> . append ( <name6> )
<val3> の <val4> 乗を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <val3> ** <val4>	<name2> [ <val5> ] = <val3> ** <val4>
<name4> でなくかつ <name5> でないとき、 <blk> <val6> を出力する </blk>	if not <name4> and not <name5> : <blk> print ( <val6> ) </blk>	try and not <name4> and not <name5> : <blk> print ( <val6> ) </blk>
<val5> から <name3> に <val2> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , <name3> + <val2> ) :	continue for <name1> in range ( <val5> , <name3> + <val2> ) :
<name5> が <val3> と等しくかつ <name1> が <val3> と等しいとき、	if <name5> == <val3> and <name1> == <val3> :	if <name5> == <val3> and <name1> == <val3> :
<name2> の <name4> の先頭を取り出した値番目を <name1> とする	<name1> = <name2> [ <name4> . pop ( ) ]	<name1> = <name2> [ <name4> . pop ( ) ]
<name3> の <val4> 番目を <val6> だけ増加させる	<name3> [ <val4> ] += <val6>	( <name3> [ <val4> ] += <val6> )
<name6> の <name2> から <val5> を引いた値番目を <val5> だけ増加させる	<name6> [ <name2> - <val5> ] += <val5>	<name1> [ <name2> - <val5> ] += <val5>
<name2> を <name5> . <name3> ( <name6> + <name1> , <name6> + <name1> + <val4> ) だけ増加させる	<name2> += <name5> . <name3> ( <name6> + <name1> , <name6> + <name1> + <val4> )	<name2> += <name5> . <name3> ( <name6> + <name1> , <name6> + <name1> + <val4> )
<name4> の、つまり先頭から <name3> の <name2> までの部分列を <name6> とする	<name6> = <name4> [ : <name3> . <name2> ]	<name4> = <name4> [ : <name3> . <name2> ]
<name4> の <name5> に [ MASK ] を挿入する	<name4> . insert ( <name5> )	<name4> . insert ( <name5> )
<name5> の <name2> の <name1> 番目を <name5> の <name2> の <name4> 番目だけ増加させる	<name5> . <name2> [ <name1> ] += <name5> . <name2> [ <name4> ]	<name1> . <name2> [ <name1> ] += <name5> . <name2> [ <name4> ]
<name1> の <name4> 番目を <name2> の <name5> の <name4> 番目の <name3> 番目にする	<name2> . <name5> [ <name4> ] [ <name3> ] = <name1> [ <name4> ]	<name2> . <name5> [ <name4> ] [ <name3> ] = <name1> [ <name4> ]
<name1> の <name3> 番目が -1 と等しくなくかつ <name4> が <name2> ( <name3> ) と等しくないとき、	if <name1> [ <name3> ] != - 1 and <name4> != <name2> ( <name3> ) :	for <name1> [ <name3> ] != - 1 and <name4> != <name2> ( <name3> ) :
( <val1> ) からなる列の <val2> 回分の列を <name4> とする	<name4> = [ <val1> ] * <val2>	<name4> = [ <val1> ] * <val2>
<name2> モジュールを用いる	from <name2> import factorial	from <name2> , deque
<name3> が <name6> の <name1> に含まれるとき、	if <name3> in <name6> . <name1> :	. if <name3> in <name6> . <name1> :
<val1> から <name6> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , len ( <name6> ) ) :	len ( range ( <val1> , len ( <name6> ) ) :
0 から <name1> に <val3> を加えた値未満までの数列の各要素を <name2> とし、 <name2> の列を <name6> の <name5> にする	<name6> . <name5> = [ <name2> for <name2> in range ( <name1> + <val3> ) ]	<name3> . <name5> = [ <name2> for <name2> in range ( <name1> + <val3> ) ]
<name1> ( <name3> [ : <name2> // <val6> ] ) を <name4> とする	<name4> = <name1> ( <name3> [ : <name2> // <val6> ] )	<name4> = <name1> ( <name3> [ : <name2> // <val6> ] )
<name5> を追加して <name3> を拡張する	<name3> . extend ( <name5> )	<name3> . extend ( <name5> )
<name6> が <name1> の <name2> に含まれないとき、	if not <name6> in <name1> . <name2> :	if <name6> not in <name1> . <name2> :
<name4> から <name3> を引いた値を <val5> で割った商を <name6> とする	<name6> = ( <name4> - <name3> ) // <val5>	<name6> = ( <name4> - <name3> ) // <val5>
<name4> の <val3> 番目を <val6> だけ増加させる	<name4> [ <val3> ] += <val6>	( <name4> [ <val3> ] += <val6> )
<name5> が <name1> の <name2> と等しいとき、	if <name5> == <name1> . <name2> :	if <name5> == <name1> . <name2> :
( <val5> ) からなる列の <name1> に <val4> を加えた値回分の列を <name3> とする	<name3> = [ <val5> ] * ( <name1> + <val4> )	else = [ <val5> ] * ( <name1> + <val4> )
{}を出力する	print ( { ans / 2.0 : . 1 f } )	print ( { ( x & 2 ) } )
( ( <val2> 、 <name3> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val2> , <name3> ) ]	<name4> = [ ( <val2> , <name3> ) ]
<val5> 、 <val4> 、 <name2> の長さを <name6> 、 <name1> 、 <name3> とする	<name6> , <name1> , <name3> = <val5> , <val4> , len ( <name2> )	<name2> , <name1> , <name3> = <val5> , <val4> , len ( <name2> )
<name2> . <name6> ( ) を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name2> . <name6> ( )	<name2> , <name3> , <name1> = <name2> . <name6> ( )
<name5> の <name3> 番目を <name6> とする	<name6> = <name5> [ <name3> ]	else = <name5> [ <name3> ]
<val3> から <name6> の先頭未満までの数列を順に <name4> として、繰り返す <blk> <name1> を <name2> の <name6> の <name4> に <val5> を加えた値番目から <val5> を引いた値番目にする </blk>	for <name4> in range ( <name6> [ <val3> ] ) : <blk> <name2> [ <name6> [ <name4> + <val5> ] - <val5> ] = <name1> </blk>	) for <name4> in range ( <name6> [ <val3> ] ) : <blk> <name2> [ <name6> [ <name4> + <val5> ] - <val5> ] = <name1> </blk>
<name6> の <name4> 番目、 <name2> の <name4> 番目を出力する	print ( <name6> [ <name4> ] , <name2> [ <name4> ] )	print ( <name6> [ <name4> ] , <name2> [ <name4> ] )
<val4> から -1 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> , - 1 , - 1 ) :	for <name6> in range ( <val4> , - 1 , - 1 ) :
<name1> の <name4> の <name3> 番目が <name5> と等しくなくかつ <name1> の <name4> の <name3> 番目が -1 と等しくないとき、	if <name1> [ <name4> . <name3> ] != <name5> and <name1> [ <name4> . <name3> ] != - 1 :	while <name1> . <name4> [ <name3> ] != <name5> and <name1> . <name4> [ <name3> ] != - 1 :
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = map ( int , <name5> ( ) . split ( ) )	<name3> , <name1> = map ( int , <name5> ( ) . split ( ) )
<name4> ( <name6> , ( <name1> * <val2> , <name5> , <name3> + <val4> , <name1> , <name6> ) )	<name4> ( <name6> , ( <name1> * <val2> , <name5> , <name3> + <val4> , <name1> , <name6> ) )	<name5> <name4> ( <name6> , ( <name1> * <val2> , <name5> , <name3> + <val4> , <name1> , <name6> ) )
0 から <name1> 未満までの数列の各要素を <name3> とし、 ( <name3> ) からなる列の列を <name5> とする	<name5> = [ [ <name3> ] for <name3> in range ( <name1> ) ]	<name5> = [ [ <name3> ] for <name3> in range ( <name1> ) ]
<val1> に <name4> を <val3> で割った値を加えた値の <name6> 乗を <name5> とする	<name5> = ( <val1> + <name4> / <val3> ) ** <name6>	<name5> = ( <val1> + <name4> / <val3> ) ** <name6>
<name1> ( <name6> - <name2> , <name5> - <name2> ) を <name3> とする	<name3> = <name1> ( <name6> - <name2> , <name5> - <name2> )	else = <name1> ( <name6> - <name2> , <name5> - <name2> )
<name2> を <name4> の <name5> の <name3> 番目にする	<name4> . <name5> [ <name3> ] = <name2>	( <name4> [ <name5> . <name3> ] = <name2> )
<name5> が <name3> から <val1> を引いた値以上かつ <name5> が <name3> に <val1> を加えた値以下のとき、	if <name5> >= <name3> - <val1> and <name5> <= <name3> + <val1> :	for <name5> in <name5> >= <name3> - <val1> and <name5> <= <name3> + <val1> :
<val3> から <name2> 未満までの数列の各要素を <name6> とし、 <val3> の列を <name5> とする	<name5> = [ <val3> for <name6> in range ( <name2> ) ]	<name1> = [ <val3> for <name6> in range ( <name2> ) ]
<name1> の <name4> から <val5> を引いた値番目の <name3> に <val5> を加えた値番目を <val5> だけ増加させる	<name1> [ <name4> - <val5> ] [ <name3> + <val5> ] += <val5>	<name2> [ <name4> - <val5> ] [ <name3> + <val5> ] += <val5>
<name5> を <name2> に <name6> を加えた値だけ増加させる	<name5> += <name2> + <name6>	<name2> += <name2> + <name6>
( <name2> ) からなる列の <name1> の <name6> 回分の列を <name1> の <name3> にする	<name1> . <name3> = [ <name2> ] * <name1> . <name6>	<name1> . <name3> = [ <name2> ] * <name1> . <name6>
<name1> を <name4> . <name3> ( ) 分の一にする	<name1> /= <name4> . <name3> ( )	( <name1> // = <name4> . <name3> ( ) )
( <name1> 、 <name3> ) の組を順に <name6> として、繰り返す	for <name6> in ( <name1> , <name3> ) :	. for <name6> in ( <name1> , <name3> ) :
<name5> の末尾に <name2> を <name3> で割った商を追加する	<name5> . append ( <name2> // <name3> )	<name1> . append ( <name2> // <name3> )
<val2> 進表記 <name1> の <val5> 番目から <val6> 番目までの部分列の整数値を <name4> とする	<name4> = int ( <name1> [ <val5> : <val6> ] , <val2> )	<name4> = int ( <name1> [ <val5> : <val6> ] , <val2> )
<name3> の先頭を除いた部分列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in <name3> [ 1 : ] :	[ for <name1> , <name4> in <name3> [ 1 : ] :
<name6> と <val2> を <name4> だけ左シフトした値の論理積のとき、	if <name6> & ( <val2> << <name4> ) :	while <name6> & ( <val2> << <name4> ) :
<name3> ( <name5> , <name2> ) を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in <name3> ( <name5> , <name2> ) :	. for <name1> , <name6> in <name3> ( <name5> , <name2> ) :
0 から <name6> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ]	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ]
Closed by 、 <name5> を出力する	print ( 'Closed by' , <name5> )	[ print ( 'Opened by' ) , <name5> )
- <name6> に <name5> を掛けた値を返す	return - <name6> * <name5>	self = - <name6> * <name5>
<name3> の <name6> 番目を <val5> との排他的論理和にする	<name3> [ <name6> ] ^ = <val5>	not = <name3> [ <name6> ] ^ = <val5>
<val2> を <name3> の <name5> とするを <name3> の <name6> にする	<name3> . <name6> = <name3> . <name5> = <val2>	else . <name6> = <name3> . <name5> = <val2>
<name3> の <name5> に <val4> を加えた値番目、 <name3> の <name5> 番目を <name3> の <name5> 番目、 <name3> の <name5> に <val4> を加えた値番目とする	<name3> [ <name5> ] , <name3> [ <name5> + <val4> ] = <name3> [ <name5> + <val4> ] , <name3> [ <name5> ]	<name3> [ <name5> ] , <name3> [ <name5> + <val4> ] = <name3> [ <name5> + <val4> ] , <name3> [ <name5> ]
<name4> の <name5> から <name1> を引いた値番目に <name6> を加えた値を <name3> とする	<name3> = <name4> [ <name5> - <name1> ] + <name6>	<name3> = <name4> [ <name5> - <name1> ] + <name6>
<name5> に番号付した組の列の各要素を <name3> 、 <name6> とし、 <name6> の先頭が ( <name2> 、 <name4> ) の組と等しいときの <name3> の列の先頭を <name1> とする	<name1> = [ <name3> for <name3> , <name6> in enumerate ( <name5> ) if <name6> [ 0 ] == ( <name2> , <name4> ) ] [ 0 ]	<name1> = [ [ <name3> for <name3> , <name6> in enumerate ( <name5> ) if <name6> [ 0 ] == ( <name2> , <name4> ) ] [ 0 ]
<name6> が <name3> の長さより大きいとき、 <blk> <val4> を <name6> とする </blk>	if <name6> > len ( <name3> ) : <blk> <name6> = <val4> </blk>	\ <name6> = <name6> > len ( <name3> ) : <blk> <name6> = <val4> </blk>
( ( <name1> の <val6> 番目の <name1> 、 <val6> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <name1> [ <val6> ] . <name1> , <val6> ) ]	<name3> = [ ( <name1> [ <val6> ] . <name1> , <val6> ) ]
<name2> が <name6> 、 <name3> 、 <name5> 、 <name1> の日付以下の間、次を繰り返す	while <name2> <= <name6> . date ( <name3> , <name5> , <name1> ) :	del <name2> <= <name6> . date ( <name3> , <name5> , <name1> ) :
<name2> が <name3> の <name4> 番目より小さいとき、	if <name2> < <name3> [ <name4> ] :	for <name2> < <name3> [ <name4> ] :
<name5> ( ) の整数値を <name4> とする	<name4> = int ( <name5> ( ) )	input = int ( <name5> ( ) )
<name5> の先頭、 <name3> を出力する	print ( <name5> [ 0 ] , <name3> )	<name5> [ 0 ] , <name3> = <name5> [ 0 ] , <name3> )
<name6> . <name3> ( ) を <name1> とする	<name1> = <name6> . <name3> ( )	<name1> = <name6> . <name3> ( )
<name4> を <name1> 分の一にする	<name4> // = <name1>	( <name4> // = <name1> )
<name3> ( [ <name6> [ <val4> : <val5> ] forlineindrawing [ <val1> : <val2> ] ] ) を <name2> とする	<name2> = <name3> ( [ <name6> [ <val4> : <val5> ] for <name6> in drawing [ <val1> : <val2> ] ] )	<name2> = <name3> ( [ <name6> [ <val4> : <val5> ] for <name6> in b [ <val1> : <val2> ] ] )
<name6> の <name1> 番目、 ( <name3> の <name5> 番目、 <name5> ) の組の最大値を <name6> の <name1> 番目にする	<name6> [ <name1> ] = max ( <name6> [ <name1> ] , ( <name3> [ <name5> ] , <name5> ) )	else [ <name1> ] = max ( <name6> [ <name1> ] , ( <name3> [ <name5> ] , <name5> ) )
<name2> を <name3> とする	<name3> = <name2>	( <name3> = <name2> ) ( a - 1 )
<name6> の <name1> が <name2> の <name5> と等しくないとき、	if <name6> . <name1> != <name2> . <name5> :	!= <name6> . <name1> != <name2> . <name5> :
0 から <name6> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name5> とする	<name5> = [ [ ] for <name2> in range ( <name6> ) ]	<name5> = [ [ ] for <name2> in range ( <name6> ) ]
<name1> の <name4> 個までのコンビネーションを順に <name3> として、繰り返す	for <name3> in combinations ( <name1> , <name4> ) :	. for <name3> in ( combinations ( <name1> , <name4> ) ) :
( 、つまり未定値 ) からなる列の <val3> に <name6> を掛けた値回分の列を <name2> とする	<name2> = [ None ] * ( <val3> * <name6> )	<name2> = [ None ] * ( <val3> * <name6> )
<name5> の <name6> から <val4> を引いた値を取り出した値を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name5> . pop ( <name6> - <val4> )	<name3> , <name2> = <name5> . pop ( <name6> - <val4> )
<name6> の <name5> を <name4> とする	<name4> = <name6> . <name5>	<name4> = <name6> . <name5>
<name3> の文字列の長さが <val2> より大きいとき、	if len ( str ( <name3> ) ) > <val2> :	continue len ( str ( <name3> ) ) > <val2> :
<name3> の <name1> に <val6> を加えた値番目を <name4> を <val5> で割った商に <val6> を加えた値だけ増加させる	<name3> [ <name1> + <val6> ] += <name4> // <val5> + <val6>	<val2> <name3> [ <name1> + <val6> ] += <name4> // <val5> + <val6>
<name4> の <val6> を取り出した値を <name1> の <val2> 番目にする	<name1> [ <val2> ] = <name4> . pop ( <val6> )	<name1> [ <val2> ] = <name4> . pop ( <val6> )
0 から <val1> 未満までの数列の各要素を <name3> とし、 <name6> の <name3> 番目の <name5> 番目の列が全てが真のとき、	if all ( [ <name6> [ <name3> ] [ <name5> ] for <name3> in range ( <val1> ) ] ) :	list ( all ( [ <name6> [ <name3> ] [ <name5> ] for <name3> in range ( <val1> ) ] ) :
<name6> 内の <name5> と等しい要素を取り除く	<name6> . remove ( <name5> )	not <name6> . remove ( <name5> )
<name4> . <name6> ( <name3> , <name4> . <name2> [ <name5> ] ) を <name3> とする	<name3> = <name4> . <name6> ( <name3> , <name4> . <name2> [ <name5> ] )	else = <name4> . <name6> ( <name3> , <name4> . <name2> [ <name5> ] )
( 0 から <name1> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列をソートした列、空列 ) からなる列を <name3> とする	<name3> = [ sorted ( [ int ( input ( ) ) for <name5> in range ( <name1> ) ] ) , [ ] ]	<name5> = [ sorted ( [ int ( input ( ) ) for <name5> in range ( <name1> ) ] ) , [ ] ]
<name6> が <val1> より小さいとき、	if <name6> < <val1> :	isinstance ( <name6> < <val1> ) :
<name6> ( <name5> , <name5> [ <val1> ] , <name2> )	<name6> ( <name5> , <name5> [ <val1> ] , <name2> )	set ( <name6> ( <name5> , <name5> [ <val1> ] , <name2> ) )
( ( <name3> 、 <name2> 、 <val4> 、 <val4> 、 <val4> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name3> , <name2> , <val4> , <val4> , <val4> ) ]	<name6> = [ ( <name3> , <name2> , <val4> , <val4> , <val4> ) ]
<name3> の <name5> 番目の <name1> を返す	return <name3> [ <name5> ] . <name1>	yield <name3> [ <name5> ] . <name1>
<name4> の <val6> 番目を <val2> だけ増加させる	<name4> [ <val6> ] += <val2>	<name2> [ <val6> ] += <val2>
<name2> の末尾に <name4> が <name6> より小さいとき ( <name4> 、 <name6> ) の組、そうでなければ ( <name6> 、 <name4> ) の組を追加する	<name2> . append ( ( <name4> , <name6> ) if <name4> < <name6> else ( <name6> , <name4> ) )	<name2> . append ( ( <name4> , <name6> ) if <name4> < <name6> else ( <name6> , <name4> ) )
0 から <val4> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> ) :	) for <name5> in range ( <val4> ) :
<name3> の <name2> を <val6> で割った商番目の <name2> を <val6> で割った余り番目が <val5> と等しいとき、	if <name3> [ <name2> // <val6> ] [ <name2> % <val6> ] == <val5> :	list ( <name3> [ <name2> // <val6> ] [ <name2> % <val6> ] == <val5> :
<name6> 、 <name2> から <name4> を引いた値から <name1> の <name3> 番目を引いた値の最小値を <name6> とする	<name6> = min ( <name6> , <name2> - <name4> - <name1> [ <name3> ] )	else = min ( <name6> , ( <name2> - <name4> ) - <name1> [ <name3> ] )
( <val1> 、 <val2> ) からなる列を <name5> とする	<name5> = [ <val1> , <val2> ]	<name5> = [ <val1> , <val2> ]
<name5> が <name3> の <name2> 以下の間、次を繰り返す	while <name5> <= <name3> . <name2> :	: while <name5> <= <name3> . <name2> :
0 から <name3> 未満までの数列の各要素を <name1> とし、 <name5> の <name1> 番目のときの <name1> の列を <name4> とする	<name4> = [ <name1> for <name1> in range ( <name3> ) if <name5> [ <name1> ] ]	<name4> = [ <name1> for <name1> in range ( <name3> ) if <name5> [ <name1> ] ]
<val6> に <val6> を間に入れて <name1> の各要素を <name5> とし、 <name5> の文字列の列を連結した文字列を加えた値を出力する	print ( <val6> + <val6> . join ( [ str ( <name5> ) for <name5> in <name1> ] ) )	print ( <val6> + <val6> . join ( [ str ( <name5> ) for <name5> in <name1> ] ) )
<name4> の末尾に ( <name3> 、 <name2> 、 <name1> ) の組を追加する	<name4> . append ( ( <name3> , <name2> , <name1> ) )	<name4> . append ( ( <name3> , <name2> , <name1> ) )
<name3> でなくまたは <name3> の <val1> 番目が <name5> と等しくかつ <name3> の <val6> 番目が <name5> と等しいとき、	if not <name3> or ( <name3> [ <val1> ] is not <name5> and <name3> [ <val6> ] is not <name5> ) :	for <name3> in <name3> or ( <name3> [ <val1> ] is not <name5> and <name3> [ <val6> ] is not <name5> ) :
( ( <name2> 、 <name4> 、 <name5> ) の組 ) からなる列を <name1> とする	<name1> = [ ( <name2> , <name4> , <name5> ) ]	<name6> = [ ( <name2> , <name4> , <name5> ) ]
<name3> 、 <name4> に <name1> から <name6> を引いた値を掛けた値の最大値を <name3> とする	<name3> = max ( <name3> , <name4> * ( <name1> - <name6> ) )	<name3> = max ( <name3> , <name4> * ( <name1> - <name6> ) )
<name3> の末尾に <name5> の先頭を追加する	<name3> . append ( <name5> [ 0 ] )	<name3> . append ( <name5> [ 0 ] )
<name3> が <name5> の <name4> 番目以上の間、次を繰り返す	while <name3> >= <name5> [ <name4> ] :	for <name3> in <name3> >= <name5> [ <name4> ] :
<name2> の末尾に入力された文字列の両端から空白改行を取り除いた文字列を <val5> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を追加する	<name2> . append ( [ int ( <name4> ) for <name4> in input ( ) . strip ( ) . split ( <val5> ) ] )	<name1> . append ( [ int ( <name4> ) for <name4> in input ( ) . strip ( ) . split ( <val5> ) ] )
<name4> の組を <name6> とする	<name6> = tuple ( <name4> )	( <name6> = tuple ( <name4> ) )
<name4> が <name6> の長さから <val1> を引いた値と等しいとき、	if <name4> == len ( <name6> ) - <val1> :	for <name4> == len ( <name6> ) - <val1> :
<name4> ( ) のリストを <name2> とする	<name2> = list ( <name4> ( ) )	( <name2> = list ( <name4> ( ) ) )
<name1> の <name3> 番目の <name4> 番目、 <name1> の <name3> から <val6> を引いた値番目の <name5> 番目に <name2> の <name5> 番目の <name4> 番目を掛けた値の最大値を <name1> の <name3> 番目の <name4> 番目にする	<name1> [ <name3> ] [ <name4> ] = max ( <name1> [ <name3> ] [ <name4> ] , <name1> [ <name3> - <val6> ] [ <name5> ] * <name2> [ <name5> ] [ <name4> ] )	<name2> [ <name3> ] [ <name4> ] = max ( <name1> [ <name3> ] [ <name4> ] , <name1> [ <name3> - <val6> ] [ <name5> ] * <name2> [ <name5> ] [ <name4> ] )
入力された文字列を空白で分割した字句列の各要素に <name3> をパラメータとして <name3> の整数値を返す関数を適用した列を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) )	<name1> , <name2> = map ( lambda <name3> : int ( <name3> ) , input ( ) . split ( ) )
<name5> の <name2> に <name4> を加えた値番目を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <name5> [ <name2> + <name4> ]	<name3> [ <name6> ] = <name5> [ <name2> + <name4> ]
0 から <name1> 未満までの数列の各要素を <name3> とし、 <val2> の列を <name4> とする	<name4> = [ <val2> for <name3> in range ( <name1> ) ]	<name4> = [ <val2> for <name3> in range ( <name1> ) ]
<name2> に <name3> を掛けた値に <name5> を掛けた値を <val6> に <name1> を掛けた値で割った値を <name4> とする	<name4> = <name2> * <name3> * <name5> / ( <val6> * <name1> )	<name4> = <name2> * <name3> * <name5> / ( <val6> * <name1> )
<name5> ( <name1> , <name6> + <val4> )	<name5> ( <name1> , <name6> + <val4> )	map ( <name5> ( <name1> , <name6> + <val4> ) )
<name4> ( <val1> , -1 )	<name4> ( <val1> , - 1 )	<name4> ( <val1> , - 1 )
<name1> の間、次を繰り返す <blk> <name6> が <name1> の <name6> より小さいとき <name1> の <name2> 、そうでなければ <name1> の <name4> 、 <name1> を <name1> 、 <name5> とする </blk>	while <name1> : <blk> <name1> , <name5> = <name1> . <name2> if <name6> < <name1> . <name6> else <name1> . <name4> , <name1> </blk>	\ <name1> , <name5> = <name1> . <name2> if <name1> : <blk> <name1> . <name2> if <name6> < <name1> . <name6> else <name1> . <name4> , <name1> </blk>
<name5> が <name3> から <val2> を引いた値以上かどうかを返す	return <name5> >= <name3> - <val2>	assert <name5> >= <name3> - <val2>
入力された文字列を空白で分割した字句列を展開し、それぞれ <name1> 、 <name4> 、 <name5> とする	<name1> , <name4> , <name5> = input ( ) . split ( )	<name1> , <name4> , <name5> = input ( ) . split ( )
<name1> の集合を <name4> とする	<name4> = set ( <name1> )	<name4> = set ( <name1> )
<name4> の <name2> の <name3> 番目が <name6> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name4> . <name2> [ <name3> ] < <name6> : <blk> continue </blk>	if <name4> . <name2> [ <name3> ] < <name6> : <blk> continue </blk>
<name4> 、 <name2> の <name5> 番目から <name2> の <name5> から <val6> を引いた値番目を引いた値の最大値を <name4> とする	<name4> = max ( <name4> , <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] )	<name4> = max ( <name4> , <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] )
<name2> から <name1> を引いた値の <val5> 乗に <name6> から <name3> を引いた値の <val5> 乗を加えた値を <name4> とする	<name4> = ( <name2> - <name1> ) ** <val5> + ( <name6> - <name3> ) ** <val5>	<name4> = ( <name2> - <name1> ) ** <val5> + ( <name6> - <name3> ) ** <val5>
<name1> を <name4> の <name5> にする	<name4> . <name5> = <name1>	not <name4> [ <name5> ] = <name1>
<name4> . <name3> ( <name2> + <val6> , <name5> )	<name4> . <name3> ( <name2> + <val6> , <name5> )	<name4> . <name3> ( <name2> + <val6> , <name5> )
<name5> の <name4> の <name3> 番目の末尾に ( <name2> 、 <name5> の <name4> の <name2> 番目の長さ、 <name6> ) からなる列を追加する	<name5> . <name4> [ <name3> ] . append ( [ <name2> , len ( <name5> . <name4> [ <name2> ] ) , <name6> ] )	<name1> . <name4> [ <name3> ] . append ( [ <name2> , len ( <name5> . <name4> [ <name2> ] ) , <name6> ] )
<name2> の <name5> が <val4> より大きくかつ <name3> の <name1> の <name2> の <name6> 番目が <val4> より小さいとき、	if <name2> . <name5> > <val4> and <name3> . <name1> [ <name2> . <name6> ] < <val4> :	list ( <name2> . <name5> > <val4> and <name3> . <name1> [ <name2> . <name6> ] < <val4> :
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name3> の <name4> にする	<name3> . <name4> = [ [ ] for <name2> in range ( <name5> ) ]	<name1> . <name4> = [ [ ] for <name2> in range ( <name5> ) ]
<name3> を <name4> ( ) 倍にする	<name3> *= <name4> ( )	( <name3> *= <name4> ( ) )
<name5> . <name6> ( <name5> . <name4> )	<name5> . <name6> ( <name5> . <name4> )	<name1> . <name6> ( <name5> . <name4> )
<name2> の <name1> の <name6> から <val5> を引いた値番目に <name2> の <name4> の <name3> から <val5> を引いた値番目を掛けた値に <name2> の <name4> の <name6> から <name3> を引いた値番目を掛けた値を返す	return <name2> . <name1> [ <name6> - <val5> ] * <name2> . <name4> [ <name3> - <val5> ] * <name2> . <name4> [ <name6> - <name3> ]	x return <name2> . <name1> [ <name6> - <val5> ] * <name2> . <name4> [ <name3> - <val5> ] * <name2> . <name4> [ <name6> - <name3> ]
<name1> から <name5> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> , len ( <name5> ) ) :	. for <name2> in range ( <name1> , len ( <name5> ) ) :
<name1> が <name5> 以下の間、次を繰り返す	while <name1> <= <name5> :	del <name1> <= <name5> :
<name6> の先頭に番号付した組の列を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in enumerate ( <name6> [ 0 ] ) :	for <name2> , <name4> in enumerate ( <name6> [ 0 ] ) :
<name4> に <name3> を掛けた値が <val5> 以下かつ <name2> に <name6> を掛けた値が <val5> 以下かどうかを返す	return <name4> * <name3> <= <val5> and <name2> * <name6> <= <val5>	x return <name4> * <name3> <= <val5> and <name2> * <name6> <= <val5>
<name2> を <name4> に <name6> の正弦を掛けた値だけ増加させる	<name2> += <name4> * math . sin ( <name6> )	<name2> += <name4> * sin ( <name6> )
<val3> を <name6> の <name4> 番目の <name2> 番目にする	<name6> [ <name4> ] [ <name2> ] = <val3>	( <name6> [ <name4> ] [ <name2> ] = <val3> )
<name6> の <val1> 番目が <val3> と等しいとき、 <blk> <name5> . <name4> ( <name2> [ <name6> ( <name6> [ <val1> ] ) ] , - <name6> ( <name6> [ <val3> ] ) ) </blk>	if <name6> [ <val1> ] == <val3> : <blk> <name5> . <name4> ( <name2> [ <name6> ( <name6> [ <val1> ] ) ] , - <name6> ( <name6> [ <val3> ] ) ) </blk>	try == <val3> : <blk> <name5> . <name4> ( <name2> [ <name6> [ <val1> ] ] , - <name6> ( <name6> [ <val3> ] ) ) </blk>
<name5> ( <name2> , <name1> )	<name5> ( <name2> , <name1> )	<name5> ( <name2> , <name1> )
<name5> の総和を <name5> の長さで割った値の整数値を <name6> とする	<name6> = int ( sum ( <name5> ) / len ( <name5> ) )	<name6> = int ( sum ( <name5> ) / len ( <name5> ) )
<name3> を <name4> の <name5> 番目の <name2> 番目にする	<name4> [ <name5> ] [ <name2> ] = <name3>	( <name4> [ <name5> ] [ <name2> ] = <name3> )
<val5> から <name3> を引いた値から <val1> を引いた値に <val4> を掛けた値を <name2> とする	<name2> = ( <val5> - <name3> - <val1> ) * <val4>	<name6> <name2> = ( <val5> - <name3> - <val1> ) * <val4>
0 から <name1> の <name2> から <val3> を引いた値未満までの数列を反転した列を順に <name6> として、繰り返す	for <name6> in reversed ( range ( <name1> . <name2> - <val3> ) ) :	. for <name6> in reversed ( range ( <name1> . <name2> - <val3> ) ) :
( <val5> 、 <val2> 、 <val6> 、 <val4> ) からなる列を <name1> とする	<name1> = [ <val5> , <val2> , <val6> , <val4> ]	<name1> = [ <val5> , <val2> , <val6> , <val4> ]
( ( <name5> から <val4> を引いた値、 <name2> から <val4> を引いた値 ) の組、 ( <name5> から <val4> を引いた値、 <name2> ) の組、 ( <name5> 、 <name2> から <val4> を引いた値 ) の組、 ( <name5> 、 <name2> に <val4> を加えた値 ) の組、 ( <name5> に <val4> を加えた値、 <name2> から <val4> を引いた値 ) の組、 ( <name5> に <val4> を加えた値、 <name2> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name5> - <val4> , <name2> - <val4> ) , ( <name5> - <val4> , <name2> ) , ( <name5> , <name2> - <val4> ) , ( <name5> , <name2> + <val4> ) , ( <name5> + <val4> , <name2> - <val4> ) , ( <name5> + <val4> , <name2> ) ]	<name4> = [ ( <name5> - <val4> , <name2> - <val4> ) , ( <name5> - <val4> , <name2> ) , ( <name5> , <name2> - <val4> ) , ( <name5> , <name2> + <val4> ) , ( <name5> + <val4> ) , ( <name2> + <val4> ) , ( <name5> + <val4> ) , ( <name2> + <val4> ) ]
<name6> が <name2> より小さくかつ <name3> の <name6> 番目が <val5> と等しい間、次を繰り返す	while <name6> < <name2> and <name3> [ <name6> ] == <val5> :	del ( <name6> < <name2> and <name3> [ <name6> ] == <val5> ) :
<name2> 、 <name2> の先頭を除いた部分列の要素をそれぞれ組にした列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in zip ( <name2> , <name2> [ 1 : ] ) :	( <name6> , <name3> in zip ( <name2> , <name2> [ 1 : ] ) :
<val4> の <val3> 乗から <val6> を引いた値を <name2> とする	<name2> = <val4> ** <val3> - <val6>	<name2> = <val4> ** <val3> - <val6>
<name4> の末尾に ( <val6> ) からなる列に <name3> ( <name5> ( ) ) の各要素に <name1> を適用した列のリストを加えた値に ( <val6> ) からなる列を加えた値を追加する	<name4> . append ( [ <val6> ] + <name3> ( map ( <name1> , <name3> ( <name5> ( ) ) ) ) + [ <val6> ] )	<name4> . append ( [ <val6> ] + list ( map ( <name1> , <name3> ( <name5> ( ) ) ) ) + [ <val6> ] )
<name4> を <val3> だけ左シフトする	<name4> << = <val3>	( <name4> << = <val3> )
<name3> が <name3> の逆順と等しいとき、 <blk> <name1> を <val5> だけ増加させる </blk>	if <name3> == <name3> [ : : - <val5> ] : <blk> <name1> += <val5> </blk>	\ <name3> == <name3> [ : : - <val5> ] : <blk> <name1> += <val5> </blk>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name1> とする	<name6> , <name3> , <name1> = map ( int , input ( ) . split ( ) )	<name2> , <name3> , <name1> = map ( int , input ( ) . split ( ) )
<name3> を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name3>	<name5> , <name6> = <name3>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name5> 、 <name6> とする	<name3> , <name1> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name5> , <name6> = map ( int , input ( ) . split ( ) )
<name4> でなくまたは <name4> の <val5> 番目が <name6> と等しくかつ <name4> の <val3> 番目が <name6> と等しいとき、	if not <name4> or ( <name4> [ <val5> ] is not <name6> and <name4> [ <val3> ] is not <name6> ) :	for <name4> in <name4> or ( <name4> [ <val5> ] is not <name6> and <name4> [ <val3> ] is not <name6> ) :
空列を <name4> とする -1 を <name5> とするを <name2> とする	<name4> = [ ] <name2> = <name5> = - 1	<name5> = <name4> = [ ] <name2> = - 1
<name4> の <name6> を返す	return <name4> . <name6>	yield <name4> . <name6>
<name1> の <name2> 番目の <name6> 番目を <name3> とする	<name3> = <name1> [ <name2> ] [ <name6> ]	else = <name1> [ <name2> ] [ <name6> ]
<name1> に <val2> を加えた値が <name5> と等しいとき、	if <name1> + <val2> == <name5> :	continue <name1> + <val2> == <name5> :
<name3> の <name1> から <val2> を引いた値番目の <name5> から <val2> を引いた値番目を <val2> だけ増加させる	<name3> [ <name1> - <val2> ] [ <name5> - <val2> ] += <val2>	[ <name3> [ <name1> - <val2> ] [ <name5> - <val2> ] += <val2>
<name6> . <name1> ( <val5> * <val3> ** <val2> )	<name6> . <name1> ( <val5> * <val3> ** <val2> )	<name6> . <name1> ( <val5> * <val3> ** <val2> )
<val3> が <name4> より小さいかどうかが <name5> 以下かつ <val3> が <name1> より小さいかどうかが <name6> 以下かつ <name2> の <name1> 番目の <name4> 番目が <name3> と等しくかつ ( <name4> 、 <name1> ) の組が <name4> に含まれないとき、	if <val3> < <name4> <= <name5> and <val3> < <name1> <= <name6> and <name2> [ <name1> ] [ <name4> ] == <name3> and ( <name4> , <name1> ) not in <name4> :	while <val3> < <name4> <= <name5> and <val3> < <name1> < <name6> and <name2> [ <name1> ] [ <name4> ] == <name3> and ( <name4> , <name1> ) not in <name4> :
<name1> に <val3> を掛けた値に <name2> に <val4> を掛けた値を加えた値に <name5> に <val3> を掛けた値を加えた値を <name6> とする	<name6> = <name1> * <val3> + <name2> * <val4> + <name5> * <val3>	<name6> = <name1> * <val3> + <name2> * <val4> + <name5> * <val3>
<val6> を <name1> の <val4> から <name2> を引いた値番目にする	<name1> [ <val4> - <name2> ] = <val6>	<name4> [ <name1> [ <val4> - <name2> ] ] = <val6>
<val5> から <val3> 未満までの数列の各要素を <name4> とし、 <val5> から <val3> 未満までの数列の列の各要素を <name2> とし、 <name3> ( <name2> ) + <val6> に <name3> ( <name4> ) を加えた値に <val1> を加えた値に <name2> に <name4> を掛けた値の文字列を加えた値を出力するの列	[ print ( <name3> ( <name2> ) + <val6> + <name3> ( <name4> ) + <val1> + <name3> ( <name2> * <name4> ) ) for <name2> in [ range ( <val5> , <val3> ) for <name4> in range ( <val5> , <val3> ) ] ]	str ( [ [ print ( <name3> ( <name2> ) + <val6> + <name3> ( <name4> ) + <val1> + <name2> + <name4> ) for <name2> in [ <val5> for <name4> in range ( <val3> ) ] ] )
0 から <name5> の <name3> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> . <name3> ) :	continue for <name1> in range ( <name5> . <name3> ) :
<name1> を展開し、それぞれ <name4> 、 <name3> とする <name6> を展開し、それぞれ <name5> 、 <name2> とする	<name4> , <name3> = <name1> <name5> , <name2> = <name6>	<name4> , <name3> = <name1> <name5> , <name2> = <name6>
<name5> に対応する値、もし存在しなければ <name4> 、 <val3> に <val1> を加えた値を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name5> . get ( <name4> , <val3> ) + <val1>	<name4> [ <name4> ] = <name5> . get ( <name4> , <val3> ) + <val1>
<name1> から読み込んだ一行を <name2> とする	<name2> = <name1> . <name2>	<name6> = <name1> . readline ( )
ソートされた順序を保ったまま <name5> を <name6> に挿入できる位置を <name4> とする	<name4> = bisect_left ( <name6> , <name5> )	<name4> = bisect . bisect_left ( <name6> , <name5> )
<name4> に <name5> を加えた値に <name3> を加えた値が <name2> と等しいとき、	if <name4> + <name5> + <name3> == <name2> :	continue <name4> + <name5> + <name3> == <name2> :
<name1> の <name5> と <name3> の論理和番目を <val2> だけ増加させる	<name1> [ <name5> | <name3> ] += <val2>	[ <name1> [ <name5> | <name3> ] ] += <val2>
<name4> から <val2> を引いた値を <name3> とする	<name3> = <name4> - <val2>	<name3> = <name4> - <val2>
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name2> の末尾に入力された文字列を <val5> で分割した字句列を追加するの列	[ <name2> . append ( input ( ) . split ( <val5> ) ) for <name4> in range ( <name3> ) ]	<name6> . append ( [ <name2> . append ( input ( ) . split ( <val5> ) ) for <name4> in range ( <name3> ) ] )
<name5> が ( <val3> 、 <name1> から <val4> を引いた値 ) からなる列に含まれまたは <name6> が ( <val3> 、 <name1> から <val4> を引いた値 ) からなる列に含まれるとき、	if <name5> in [ <val3> , <name1> - <val4> ] or <name6> in [ <val3> , <name1> - <val4> ] :	list in <name5> in [ <val3> , <name1> - <val4> ] or <name6> in [ <val3> , <name1> - <val4> ] :
<name4> の <name3> 番目から <name4> の長さに <val2> を加えた値までの部分列を <name4> とする	<name4> = <name4> [ <name3> : len ( <name4> ) + <val2> ]	<name4> = <name4> [ <name3> : len ( <name4> ) + <val2> ]
<name4> の <name5> から <val1> を引いた値番目を <val1> だけ増加させる	<name4> [ <name5> - <val1> ] += <val1>	<name1> [ <name5> - <val1> ] += <val1>
<val3> の <name1> 乗から <val2> を引いた値を <name4> とする	<name4> = <val3> ** <name1> - <val2>	<name4> = <val3> ** <name1> - <val2>
<name5> の <val3> 番目を <name6> の <val3> 番目にする	<name6> [ <val3> ] = <name5> [ <val3> ]	<name1> [ <val3> ] = <name5> [ <val3> ]
<name1> の <name2> 番目、 <name2> 、 <name4> から <name1> の <name2> 番目を引いた値を出力する	print ( <name1> [ <name2> ] , <name2> , <name4> - <name1> [ <name2> ] )	print ( <name1> [ <name2> ] , <name2> , <name4> - <name1> [ <name2> ] )
<name1> の <name2> 番目の長さが <val3> より大きいとき、	if len ( <name1> [ <name2> ] ) > <val3> :	> len ( <name1> [ <name2> ] ) > <val3> :
<name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = map ( int , <name5> . readline ( ) . split ( ) )	<name3> , <name1> , <name2> = map ( int , <name5> . readline ( ) . split ( ) )
( ( <val2> ) からなる列の <val2> から <name4> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 <name5> に <val6> を加えた値の列回分の列 ) からなる列を <name4> の <name1> にする	<name4> . <name1> = [ [ <val2> ] * [ ( <name5> + <val6> ) for <name3> in range ( <name4> + <val6> ) ] ]	<name6> . <name1> = [ [ <val2> ] * [ ( <name5> + <val6> ) for <name3> in range ( <name4> + <val6> ) ] ]
<name6> ( <name2> [ <name1> ] [ <val5> ] ) に <val5> を加えた値を <name3> とする	<name3> = <name6> ( <name2> [ <name1> ] [ <val5> ] ) + <val5>	<name3> = <name6> ( <name2> [ <name1> ] [ <val5> ] ) + <val5>
<name3> の <name1> 番目が -1 と等しくなくまたは <name5> を <val6> だけ右シフトした値が <name4> と等しいとき、	if <name3> [ <name1> ] != - <val6> or ( <name5> >> <val6> ) == <name4> :	or ( <name3> [ <name1> ] != - 1 ) or ( <name5> >> <val6> ) == <name4> :
<name1> の <name6> から <val4> を引いた値番目の整数値に <name1> の <name6> から <val5> を引いた値番目の整数値を加えた値を <name2> とする	<name2> = int ( <name1> [ <name6> - <val4> ] ) + int ( <name1> [ <name6> - <val5> ] )	<name2> = int ( <name1> [ <name6> - <val4> ] ) + int ( <name1> [ <name6> - <val5> ] )
<name4> の <name5> の <name4> の <name5> の <name2> 番目番目を <name4> の <name5> の <name2> 番目にする	<name4> . <name5> [ <name2> ] = <name4> . <name5> [ <name4> . <name5> [ <name2> ] ]	<name4> . <name5> [ <name2> ] = <name4> . <name5> [ <name4> . <name5> [ <name2> ] ]
<name1> . <name3> ( <name6> , <name5> + <name4> + <val2> , <val2> )	<name1> . <name3> ( <name6> , <name5> + <name4> + <val2> , <val2> )	<name2> . <name3> ( <name6> , <name5> + <name4> + <val2> , <val2> )
( -1 ) からなる列の <name3> の長さ回分の列を <name1> とする	<name1> = [ - 1 ] * len ( <name3> )	<name1> = [ - 1 ] * len ( <name3> )
<name1> の <name2> 乗を <name6> とする	<name6> = <name1> ** <name2>	<name2> = <name1> ** <name2>
<name1> が -1 と等しくないとき <name3> の <name1> 番目に ( <name5> ) からなる列を加えた値、そうでなければ ( <name5> ) からなる列を <name3> の <name6> 番目にする	<name3> [ <name6> ] = ( <name3> [ <name1> ] + [ <name5> ] ) if <name1> != - 1 else [ <name5> ]	<name3> [ <name6> ] = ( <name3> [ <name1> ] + [ <name5> ] ) if <name1> != - 1 else [ <name5> ]
<name4> を <name6> の <name5> の <name2> 番目にする	<name6> . <name5> [ <name2> ] = <name4>	<name6> . <name5> [ <name2> ] = <name4>
( ( -1 ) からなる列の 0 から <val1> 未満までの数列の各要素を <name6> とし、 <val1> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ - 1 ] * [ <val1> for <name6> in range ( <val1> ) ] ]	<name5> = [ [ - 1 ] * [ <val1> for <name6> in range ( <val1> ) ] ]
<name5> から <val6> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <val6> , - 1 ) :	( <name5> , range ( <val6> , - 1 ) :
<name5> の先頭に <name4> の <val1> 番目を掛けた値に <name5> の <val3> 番目に <name4> の <val3> 番目を掛けた値を加えた値を返す	return <name5> [ <val1> ] * <name4> [ <val1> ] + <name5> [ <val3> ] * <name4> [ <val3> ]	return <name5> [ 0 ] * <name4> [ <val1> ] + <name5> [ <val3> ] * <name4> [ <val3> ]
<name2> から <name6> を <name4> で割った値の切り上げ整数値、 <name1> を <name3> で割った値の切り上げ整数値の最大値を引いた値を出力する	print ( <name2> - max ( math . ceil ( <name6> / <name4> ) , math . ceil ( <name1> / <name3> ) ) )	<name2> print ( <name2> - max ( math . ceil ( <name6> / <name4> ) ) , max ( math . ceil ( <name1> / <name3> ) ) )
( <name5> 、 <name5> と <name1> のユークリッド距離 ) からなる列を返す	return [ <name5> , dist ( <name5> , <name1> ) ]	return [ <name5> , dist ( <name5> , <name1> ) ]
<name4> ( <name2> , <name5> ) を出力する	print ( <name4> ( <name2> , <name5> ) )	print ( <name4> ( <name2> , <name5> ) )
<name3> の <name1> の先頭番目の長さのとき、	if len ( <name3> [ <name1> [ 0 ] ] ) :	for <name3> in len ( <name3> [ <name1> [ 0 ] ] ) :
<name6> を <name3> で割った余りを出力する	print ( <name6> % <name3> )	print ( <name6> % <name3> )
0 から <name6> の <name4> から <val2> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name6> . <name4> - <val2> ) :	: for <name1> in range ( <name6> . <name4> - <val2> ) :
( <name6> に <val1> に <name3> を掛けた値を加えた値を <val2> で割った値、 <name4> に <val1> に <name5> を掛けた値を加えた値を <val2> で割った値 ) からなる列を返す	return [ ( <name6> + <val1> * <name3> ) / <val2> , ( <name4> + <val1> * <name5> ) / <val2> ]	return [ ( <name6> + <val1> * <name3> ) / <val2> , ( <name4> + <val1> * <name5> ) / <val2> ]
{}を出力する	print ( { a * b / 2 * math . sin ( math . radians ( C ) ) : . 6 f } )	print ( { ( x & 2 ) } )
<val6> を出力する	print ( <val6> )	dict . print ( <val6> )
<name4> の <val6> 番目かつ <name3> ( <name4> )	<name4> [ <val6> ] and <name3> ( <name4> )	<name2> [ <val6> ] and <name3> ( <name4> )
0 から <name6> に <val5> を掛けた値未満までの数列の各要素を <name3> とし、 <name1> の <name3> 番目のときの <name3> の列を <name2> とする	<name2> = [ <name3> for <name3> in range ( <name6> * <val5> ) if <name1> [ <name3> ] ]	<name6> = [ <name3> for <name3> in range ( <name6> * <val5> ) if <name1> [ <name3> ] ]
( <val6> に <val5> を掛けた値に <val1> を加えた値 ) からなる列の <name2> 回分の列を <name4> とする	<name4> = [ <val6> * <val5> + <val1> ] * <name2>	<name4> = [ <val6> * <val5> + <val1> ] * <name2>
( ( ( <val4> 、 <val4> 、 <val4> ) の組 , <val5> ) ) からなる辞書の辞書カウンタを <name6> とする	<name6> = Counter ( { ( <val4> , <val4> , <val4> ) : <val5> } )	<name6> = Counter ( { ( <val4> , <val4> , <val4> ) : <val5> } )
<name5> . <name2> ( <name6> ) のコピーされた列を順に <name3> として、繰り返す	for <name3> in <name5> . <name2> ( <name6> ) [ : ] :	. for <name3> in <name5> . <name2> ( <name6> ) [ : ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストに番号付した組の列を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in enumerate ( list ( map ( int , input ( ) . split ( ) ) ) ) :	( <name2> , <name5> in enumerate ( list ( map ( int , input ( ) . split ( ) ) ) ) :
( ( <val5> ) からなる列の <name1> に <val2> を加えた値回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val5> ] * ( <name1> + <val2> ) ]	<name4> = [ [ <val5> ] * ( <name1> + <val2> ) ]
<name6> から <val1> を引いた値が <val2> 以上のとき、	if <name6> - <val1> >= <val2> :	for <name6> - <val1> >= <val2> :
<name1> を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name1>	( <name5> [ <name6> ] = <name1> )
<name6> に <name1> の <name3> 番目を掛けた値に <name4> の <name5> 番目の <name3> 番目を掛けた値を <name2> で割った余りを <name2> とする	<name2> = <name6> * <name1> [ <name3> ] * <name4> [ <name5> ] [ <name3> ] % <name2>	( <name2> = <name6> * <name1> [ <name3> ] * <name4> [ <name5> ] [ <name3> ] ) % <name2>
<name3> の <name5> 番目に番号付した組の列を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in enumerate ( <name3> [ <name5> ] ) :	for <name1> , <name6> in enumerate ( <name3> [ <name5> ] ) :
<val2> を <name3> の <name6> 番目の <name5> 番目の <val2> 番目にする	<name3> [ <name6> ] [ <name5> ] [ <val2> ] = <val2>	<name4> [ <name6> ] [ <name5> ] [ <val2> ] = <val2>
<name2> ( <name1> ) を <name6> とする	<name6> = <name2> ( <name1> )	( <name6> = <name2> ( <name1> ) )
<name6> の各要素に <name2> を適用した列のリストを <name3> とする	<name3> = list ( map ( <name2> , <name6> ) )	<name3> = list ( map ( <name2> , <name6> ) )
<name2> に <name6> から <name2> を引いた値に <val1> を掛けた値を加えた値に <name3> を加えた値が <val5> 以下のとき、	if <name2> + ( <name6> - <name2> ) * <val1> + <name3> <= <val5> :	isinstance ( <name2> + ( <name6> - <name2> ) * <val1> + <name3> <= <val5> :
<name1> の <name4> 番目の先頭に <name1> の <name2> 番目の先頭を追加する	<name1> [ <name4> ] . appendleft ( <name1> [ <name2> ] [ 0 ] )	<name1> [ <name4> ] . appendleft ( <name1> [ <name2> ] [ 0 ] )
<name2> 、 <name6> 、 <val4> を <name1> で割った余りを出力する	print ( <name2> , <name6> , <val4> % <name1> )	<name2> . print ( <name6> , <val4> % <name1> )
<name6> が <name4> より小さいかどうかが <name5> より小さいとき、	if <name6> < <name4> < <name5> :	while <name6> < <name4> < <name5> :
<name2> から <name6> を引いた値の <val5> 乗に <name1> から <name4> を引いた値の <val5> 乗を加えた値を <name3> とする	<name3> = ( <name2> - <name6> ) ** <val5> + ( <name1> - <name4> ) ** <val5>	<name3> = ( <name2> - <name6> ) ** <val5> + ( <name1> - <name4> ) ** <val5>
<name3> の <name1> が、つまり未定値と等しくかつ <name3> の <name1> の <name4> が <name4> と等しくない間、次を繰り返す	while <name3> . <name1> is not None and <name3> . <name1> . <name4> != <name4> :	while <name3> . <name1> is not None and <name3> . <name1> . <name4> != <name4> :
<val2> に <name5> に <val6> を加えた値を掛けた値を出力する	print ( <val2> * ( <name5> + <val6> ) )	print ( <val2> * ( <name5> + <val6> ) )
<name5> を <val3> に <val4> を掛けた値に <name2> を掛けた値に <val3> に <name1> を掛けた値を加えた値だけ増加させる	<name5> += <val3> * <val4> * <name2> + <val3> * <name1>	<name2> += <val3> * <val4> * <name2> + <val3> * <name1>
<name3> . <name2> ( <val6> )	<name3> . <name2> ( <val6> )	( <name3> . <name2> ( <val6> ) )
<val6> から <name2> 未満までの <val3> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <name2> , <val3> ) :	continue for <name5> in range ( <val6> , <name2> , <val3> ) :
<name2> から読み込んだ一行を <name4> とする	<name4> = <name2> . <name4>	<name4> = <name2> . readline ( )
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	<name6> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
を間に入れて <name4> の各要素を <name1> とし、 <val5> を - <name1> で割った余りの列を連結した文字列を出力する	print ( '' . join ( [ <val5> % - <name1> for <name1> in <name4> ] ) )	print ( '' . join ( [ <val5> - <name1> for <name1> in <name4> ] ) )
<val5> を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <val5>	( <name6> [ <val5> ] = <val5> )
<name2> の <name6> から <val4> を引いた値番目の <name5> 番目でないとき、	if not <name2> [ <name6> - <val4> ] [ <name5> ] :	isinstance ( <name2> [ <name6> - <val4> ] [ <name5> ] ) :
os . <name2> の末尾に <name3> を追加する	<name2> . append ( <name3> )	<name2> . append ( <name3> )
<name5> の <name4> 番目が <name1> に含まれるとき <name2> ( ) 、そうでなければ <val6> を <name3> とする	<name3> = <name2> ( ) if <name5> [ <name4> ] in <name1> else <val6>	<name3> = <name2> ( ) if <name5> [ <name4> ] in <name1> else <val6>
<val5> から <name1> の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val5> , len ( <name1> ) ) :	) for <name4> in range ( <val5> , len ( <name1> ) ) :
<name2> の <val5> 番目を <name3> の y 座標にする	<name3> . y = <name2> [ <val5> ]	( <name3> . y = <name2> [ <val5> ] )
<name1> を展開し、それぞれ <name2> 、 <name6> 、 <name5> とする	<name2> , <name6> , <name5> = <name1>	( <name2> , <name6> , <name5> = <name1> )
E を出力する	print ( 'E' )	& print ( 'NONE' )
<name5> が <name2> と等しくないとき、	if <name5> is <name2> :	raise <name5> != <name2> :
[ MASK ] を追加して <name2> を拡張するを <name3> とする	<name3> = <name2> . extend	<name2> . extend ( )
<name1> の各要素を <name3> とし、 <name3> を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , <name3> . split ( ) ) ) for <name3> in <name1> ]	<name6> = [ list ( map ( int , <name3> . split ( ) ) ) for <name3> in <name1> ]
空列を <name6> とする空列を <name5> とする	<name6> = [ ] <name5> = [ ]	<name2> = [ ] <name5> = [ ]
\ <name6> の <name1> に <val2> を <name5> ( <name4> , <name3> ) で割った余りを書き込む\	\ <name6> . <name1> . write ( <val2> % <name5> ( <name4> , <name3> ) ) \	% <name6> . <name1> . write ( <val2> % <name5> ( <name4> , <name3> ) ) \
<name3> の <name4> 番目の <name6> 番目に <name3> の <name6> 番目の <name5> 番目を加えた値が <name3> の <name4> 番目の <name5> 番目より小さいとき、	if <name3> [ <name4> ] [ <name6> ] + <name3> [ <name6> ] [ <name5> ] < <name3> [ <name4> ] [ <name5> ] :	list ( <name3> [ <name4> ] [ <name6> ] + <name3> [ <name6> ] [ <name5> ] < <name3> [ <name4> ] [ <name5> ] :
<name2> に <name5> の <name4> を加えた値から <val3> を引いた値を <name6> とする	<name6> = <name2> + <name5> . <name4> - <val3>	<name6> = <name2> + <name5> . <name4> - <val3>
<name1> の <val2> 番目を <name1> の <val3> 番目にする	<name1> [ <val3> ] = <name1> [ <val2> ]	<name4> [ <val3> ] = <name1> [ <val2> ]
<name5> をパラメータとして <name5> の x 座標を返す関数をキーとして <name4> をソートした列を返す	return sorted ( <name4> , key = lambda <name5> : <name5> . x )	return sorted ( <name4> , key = lambda <name5> : <name5> . x )
<name4> に <name2> を掛けた値、 <val6> に <name4> に <name2> を加えた値を掛けた値を出力する	print ( <name4> * <name2> , <val6> * ( <name4> + <name2> ) )	print ( <name4> * <name2> , <val6> * ( <name4> + <name2> ) )
<name6> の先頭、 - <name5> の最大値を <name6> の <val1> 番目にする	<name6> [ <val1> ] = max ( <name6> [ <val1> ] , - <name5> )	else [ <val1> ] = max ( <name6> [ <val1> ] , - <name5> )
<name6> を <name4> の <name5> 番目で割った余りが <val2> と等しいとき、	if <name6> % <name4> [ <name5> ] == <val2> :	list ( <name6> % <name4> [ <name5> ] ) == <val2> :
<name4> . <name3> ( <name4> . <name1> ) を返す	return <name4> . <name3> ( <name4> . <name1> )	self return <name4> . <name3> ( <name4> . <name1> )
( <val3> ) からなる列の <name2> 回分の列を <name1> の <name5> にする	<name1> . <name5> = [ <val3> ] * <name2>	. <name1> . <name5> = [ <val3> ] * <name2>
<name5> . <name1> ( <name3> , <name4> , <name2> , <name6> )	<name5> . <name1> ( <name3> , <name4> , <name2> , <name6> )	<name2> . <name1> ( <name3> , <name4> , <name2> , <name6> )
<name2> ( <name6> , <name3> , <name5> ) を <name4> とする	<name4> = <name2> ( <name6> , <name3> , <name5> )	<name4> = <name2> ( <name6> , <name3> , <name5> )
<name6> の各要素を <name2> とし、 <name2> が、つまり未定値と等しいときの <name2> の整数値を出力するの列	[ print ( int ( <name2> ) ) for <name2> in <name6> if <name2> is not None ]	<name6> [ print ( int ( <name2> ) ) for <name2> in <name6> if <name2> is not None ]
<name3> の長さを <val6> で割った商を <name4> とする	<name4> = len ( <name3> ) // <val6>	<name4> = len ( <name3> ) // <val6>
( <val1> 、 <val5> 、 <val4> 、 <val2> 、 <val3> ) からなる列を <name6> とする	<name6> = [ <val1> , <val5> , <val4> , <val2> , <val3> ]	<name6> = [ <val1> , <val5> , <val4> , <val2> , <val3> ]
0 から <name1> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name2> の <name3> にする	<name2> . <name3> = [ [ ] for <name5> in range ( <name1> ) ]	<name6> . <name3> = [ [ ] for <name5> in range ( <name1> ) ]
<val4> を <name2> とする	<name2> = <val4>	<name1> <name2> = <val4>
- <name4> から <val6> を引いた値から <name4> に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( - <name4> - <val6> , <name4> + <val5> ) :	. for <name2> in range ( - <name4> - <val6> , <name4> + <val5> ) :
<name2> が <name4> から <val3> を引いた値以上のとき、	if <name2> >= <name4> - <val3> :	while <name2> >= <name4> - <val3> :
0 から <val4> から <name2> を引いた値に <val3> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val4> - <name2> + <val3> ) :	for <name1> in range ( <val4> - <name2> + <val3> ) :
<name3> の <name1> を <val5> で割った商番目を出力する	print ( <name3> [ <name1> // <val5> ] )	print ( <name3> [ <name1> // <val5> ] )
( ( <name6> , <name1> [ <name3> ] に番号付した組の列の各要素を <name2> 、 <name6> とし、 <name2> の列 ) ) からなる辞書の長さを <name5> とする	<name5> = len ( { <name6> : [ <name2> for <name2> , <name6> in enumerate ( <name1> [ <name3> ] ) ] } )	<name5> = { <name6> : [ <name2> for <name2> , <name6> in enumerate ( enumerate ( <name1> [ <name3> ] ) ) ] }
( <name2> に <name5> を掛けた値 ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ <name2> * <name5> ] * <name2>	<name1> = [ <name2> * <name5> ] * <name2>
<name6> を <name2> で割った余りを出力する	print ( <name6> % <name2> )	print ( <name6> % <name2> )
<name2> の末尾に <name4> ( <name1> , <name5> , <name3> ) を追加する	<name2> . append ( <name4> ( <name1> , <name5> , <name3> ) )	<name2> . append ( <name4> ( <name1> , <name5> , <name3> ) )
<name3> と <name2> 、 <name1> の和集合	<name3> . union ( <name2> , <name1> )	set ( <name3> . union ( <name2> , <name1> ) )
<name5> の <name6> の <name1> 番目が -1 と等しくない間、次を繰り返す	while <name5> . <name6> [ <name1> ] != - 1 :	del <name5> . <name6> [ <name1> ] != - 1 :
<name6> の <name5> から <name3> を引いた値番目に <name1> を加えた値、 <name6> の <name5> 番目の最大値を <name6> の <name5> 番目にする	<name6> [ <name5> ] = max ( <name6> [ <name5> - <name3> ] + <name1> , <name6> [ <name5> ] )	<name6> [ <name5> ] = max ( <name6> [ <name5> - <name3> ] + <name1> , <name6> [ <name5> ] )
<name6> の長さから <val3> を引いた値から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( len ( <name6> ) - <val3> , - <val3> , - <val3> ) :	. for <name2> in range ( len ( <name6> ) - <val3> , - <val3> , - <val3> ) :
<name3> . <name1> ( <name5> ) を <name4> とする	<name4> = <name3> . <name1> ( <name5> )	<name4> = <name3> . <name1> ( <name5> )
<name6> から <name2> を引いた値を <name5> の <name4> から <val3> を引いた値番目にする	<name5> [ <name4> - <val3> ] = <name6> - <name2>	( <name5> [ <name4> - <val3> ] = <name6> - <name2> )
<name4> の先頭が <val2> より大きい間、次を繰り返す <blk> <name5> を <val6> に <val3> を掛けた値に <val1> を加えた値だけ増加させる <sep> <name4> の先頭を <val3> だけ減少させる </blk>	while <name4> [ 0 ] > <val2> : <blk> <name5> += <val6> * <val3> + <val1> <sep> <name4> [ 0 ] -= <val3> </blk>	for <name5> in <name4> [ 0 ] > <val2> : <blk> <name5> += <val6> * <val3> + <val1> <sep> <name4> [ 0 ] -= <val3> </blk>
<name6> の <name5> に <name4> の <name3> を掛けた値から <name6> の <name3> に <name4> の <name5> を掛けた値を引いた値を返す	return <name6> . <name5> * <name4> . <name3> - <name6> . <name3> * <name4> . <name5>	x return <name6> . <name5> * <name4> . <name3> - <name6> . <name3> * <name4> . <name5>
を間に入れて <name4> を連結した文字列を <name1> とする	<name1> = '' . join ( <name4> )	<name1> = '' . join ( <name4> )
<name1> の末尾に ( <name3> に <name4> に <name5> + <name6> の余弦を掛けた値を加えた値、 <name2> に <name4> に <name5> + <name6> の正弦を掛けた値を加えた値 ) の組を追加する	<name1> . append ( ( <name3> + <name4> * cos ( <name5> + <name6> ) , <name2> + <name4> * sin ( <name5> + <name6> ) ) )	<name1> . append ( ( <name3> + <name4> * cos ( <name5> + <name6> ) , <name2> + <name4> * sin ( <name5> + <name6> ) ) )
( 、つまり偽 ) からなる列の <name6> の <name5> 回分の列を <name2> とする	<name2> = [ False ] * <name6> . <name5>	<name2> = [ False ] * <name6> . <name5>
<name1> を <name4> とする <val2> を <name5> とする	<name4> = <name1> <name5> = <val2>	<name4> = <name1> <name5> = <val2>
NA を <name1> とする	<name1> = 'NA'	( <name1> = 'NA' )
<name2> ( <name4> , <name6> , <name3> )	<name2> ( <name4> , <name6> , <name3> )	set ( <name2> ( <name4> , <name6> , <name3> ) )
0 から <name2> の長さ未満までの数列の各要素を <name6> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name6> in range ( len ( <name2> ) ) ]	<name6> = [ [ ] for <name6> in range ( len ( <name2> ) ) ]
<name4> に <name1> を加えた値を <val2> で割った商を <name6> とする	<name6> = ( <name4> + <name1> ) // <val2>	( <name6> = ( <name4> + <name1> ) // <val2> )
<val2> に <name5> を掛けた値を出力する	print ( <val2> * <name5> )	print ( <val2> * <name5> )
<name3> の <val1> 番目を <name2> とする	<name2> = <name3> [ <val1> ]	<name2> = <name3> [ <val1> ]
<name5> が、つまり未定値と等しくないとき、	if <name5> != None :	while <name5> != None :
<name3> から -1 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> , - 1 , - 1 ) :	for <name1> in range ( <name3> , - 1 , - 1 ) :
<name4> の末尾に <name3> から <name2> を引いた値を追加する	<name4> . append ( <name3> - <name2> )	<name2> . append ( <name3> - <name2> )
<name5> の先頭を <name6> の <name3> 番目にする	<name6> [ <name3> ] = <name5> [ 0 ]	( <name6> [ <name3> ] = <name5> [ 0 ] )
<val2> を <name5> の先頭にする	<name5> [ <val2> ] = <val2>	( <name5> [ 0 ] = <val2> )
<name4> の <name5> 番目の長さが <val3> と等しいとき、	if len ( <name4> [ <name5> ] ) == <val3> :	for <name4> in len ( <name4> [ <name5> ] ) == <val3> :
<name5> に <name5> を掛けた値が <name6> より大きいとき、	if <name5> * <name5> > <name6> :	continue <name5> * <name5> > <name6> :
<name6> を展開し、それぞれ <name1> 、 <name5> 、 <name2> とする	<name1> , <name5> , <name2> = <name6>	[ <name1> , <name5> , <name2> = <name6>
<name6> ( <val2> , -1 , <name4> )	<name6> ( <val2> , - 1 , <name4> )	set ( <name6> ( <val2> , - 1 , <name4> ) )
<name6> の <name2> の <name3> 番目番目の <name4> の <name1> 番目番目を <val5> だけ減少させる	<name6> [ <name2> [ <name3> ] ] [ <name4> [ <name1> ] ] -= <val5>	<name1> [ <name2> [ <name3> ] ] [ <name4> [ <name1> ] ] -= <val5>
<name3> の <name5> 番目の <name1> が -1 と等しくないとき、 <blk> <name4> ( <name3> [ <name5> ] . <name1> ) </blk>	if <name3> [ <name5> ] . <name1> != - 1 : <blk> <name4> ( <name3> [ <name5> ] . <name1> ) </blk>	if <name3> [ <name5> ] . <name1> != - 1 : <blk> <name4> ( <name3> [ <name5> ] . <name1> ) </blk>
<name4> を <name5> ( <val6> , <val3> ) で割った余りを <name4> とする	<name4> = <name4> % <name5> ( <val6> , <val3> )	<name4> = <name4> % <name5> ( <val6> , <val3> )
<name4> の x 座標から <name1> の x 座標を引いた値の <val3> 乗に <name4> の y 座標から <name1> の y 座標を引いた値の <val3> 乗を加えた値の平方根を返す	return math . sqrt ( ( <name4> . x - <name1> . x ) ** <val3> + ( <name4> . y - <name1> . y ) ** <val3> )	return sqrt ( ( <name4> . x - <name1> . x ) ** <val3> + ( <name4> . <name1> . x ) ** <val3> )
<name6> 、 <name4> の最小値を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = min ( <name6> , <name4> )	dict , <name3> = min ( <name6> , <name4> )
<name2> の <name6> の <name1> 番目の <name5> 番目に <val4> を加えた値を出力する	print ( <name2> . <name6> [ <name1> ] [ <name5> ] + <val4> )	print ( <name2> . <name6> [ <name1> ] [ <name5> ] + <val4> )
<name4> の <name2> が <name3> の <name2> より小さいかどうかが <name1> の <name2> より小さいとき、	if <name4> . <name2> < <name3> . <name2> < <name1> . <name2> :	print ( <name4> . <name2> < <name3> . <name2> < <name1> . <name2> :
( ( <val4> , <val3> ) 、 ( <val2> , <val5> ) 、 ( <val6> , <val1> ) 、 ( <val4> , <val3> ) 、 ( <val2> , <val5> ) ) からなる辞書を <name1> とする	<name1> = { <val4> : <val3> , <val2> : <val5> , <val6> : <val1> , <val4> : <val3> , <val2> : <val5> }	<name1> = { <val4> : <val3> , <val2> : <val5> , <val6> : <val1> , <val4> : <val3> , <val2> : <val5> }
<name2> が <name1> に含まれるとき、 <blk> <name3> を <name1> の <name2> 番目との論理和にする </blk>	if <name2> in <name1> : <blk> <name3> | = <name1> [ <name2> ] </blk>	: if <name2> in <name1> : <blk> <name3> | = <name1> [ <name2> ] </blk>
<val4> に <val5> * <name3> を加えた値の . <val6> 乗の整数値から <val4> を引いた値を <val2> で割った商を <name1> とする	<name1> = ( int ( ( <val4> + <val5> * <name3> ) ** . <val6> ) - <val4> ) // <val2>	<name1> = ( int ( ( <val4> + <val5> * <name3> ) ** . <val6> ) - <val4> ) // <val2>
<name6> の集合をソートした列を展開してを出力する	print ( * sorted ( set ( <name6> ) ) )	print ( * sorted ( set ( <name6> ) ) )
<name1> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name6> とする	<name2> , <name3> , <name6> = map ( int , <name1> . split ( ) )	<name3> , <name6> = map ( int , <name1> . split ( ) )
<name5> を展開し、それぞれ <name1> 、 <name2> とする <name6> を展開し、それぞれ <name4> 、 <name3> とする <name5> を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name5> <name4> , <name3> = <name6> <name1> , <name2> = <name5>	<name4> , <name2> = <name5> <name4> , <name3> = <name6> <name1> , <name2> = <name5>
<name3> の両端から空白改行を取り除いた文字列を順に <name4> として、繰り返す	for <name4> in <name3> . strip ( ) :	. for <name4> in <name3> . strip ( ) :
<name5> が <val3> より小さくなければならない	assert <name5> < <val3>	<val1> assert <name5> < <val3>
<name4> 内の <name1> と等しい要素を取り除く	<name4> . remove ( <name1> )	not <name4> . remove ( <name1> )
<name2> の <val4> 番目を <name5> の <name2> の <val6> 番目番目にする	<name5> [ <name2> [ <val6> ] ] = <name2> [ <val4> ]	<name1> [ <name2> [ <val6> ] ] = <name2> [ <val4> ]
<name3> -1 + <name5> -1 に <val1> を加えた値の整数値に <name4> を掛けた値に <val1> を加えた値を出力する	print ( int ( <name3> - <val1> + <name5> - <val1> + <val1> ) * <name4> + <val1> )	print ( int ( <name3> - <val1> + <name5> - <val1> + <val1> ) * <name4> + <val1> )
( <val1> 、 <val3> 、 <val2> 、 <val5> 、 <val4> 、 <val6> 、 <val1> 、 <val3> 、 <val2> 、 <val5> ) からなる列を <name6> とする	<name6> = [ <val1> , <val3> , <val2> , <val5> , <val4> , <val6> , <val1> , <val3> , <val2> , <val5> ]	<name6> = [ <val1> , <val3> , <val2> , <val5> , <val4> , <val6> , <val1> , <val3> , <val2> , <val5> ]
<name4> 、 <name5> の要素をそれぞれ組にした列を順に <name3> 、 <name2> として、繰り返す	for <name3> , <name2> in zip ( <name4> , <name5> ) :	( <name3> , <name2> in zip ( <name4> , <name5> ) :
<val5> から <name1> に <val5> を加えた値未満までの数列の各要素を <name6> とし、 <name6> の列を順に <name3> として、繰り返す	for <name3> in [ <name6> for <name6> in range ( <val5> , <name1> + <val5> ) ] :	( for <name3> in [ <name6> for <name6> in range ( <val5> , <name1> + <val5> ) ] :
<name1> の <name6> から <val5> を引いた値番目の、つまり先頭から <val3> 番目までの部分列の総和を <name4> で割った余りを <name1> の <name6> 番目の <val5> 番目にする	<name1> [ <name6> ] [ <val5> ] = sum ( <name1> [ <name6> - <val5> ] [ : <val3> ] ) % <name4>	<name1> [ <name6> ] [ <val5> ] = sum ( <name1> [ <name6> - <val5> ] [ : <val3> ] ) % <name4>
<name4> の末尾が <name6> と等しいとき、 <blk> <name1> を ( <name2> ) からなる列だけ増加させる <sep> <val5> を <name2> とする </blk>	if <name4> [ - <val5> ] == <name6> : <blk> <name1> += [ <name2> ] <sep> <name2> = <val5> </blk>	list ( <name4> [ - 1 ] == <name6> : <blk> <name1> += [ <name2> ] ) <sep> <name2> = <val5> </blk>
<val6> 、 <name5> から <val3> を引いた値を <name2> 、 <name1> とする	<name2> , <name1> = <val6> , <name5> - <val3>	<name2> , <name1> = <val6> , <name5> - <val3>
<name3> が <name5> より小さくかつ <name4> が <name6> より小さい間、次を繰り返す	while <name3> < <name5> and <name4> < <name6> :	del <name3> < <name5> and <name4> < <name6> :
<name5> 、 <name4> から <name5> に <name2> を掛けた値を引いた値を <name1> で割った商を出力する	print ( <name5> , ( <name4> - <name5> * <name2> ) // <name1> )	<name5> . print ( <name5> , ( <name4> - <name5> * <name2> ) ) // <name1> )
<name6> の ( <name3> -1 ) * <val2> に <name5> を加えた値から <val1> を引いた値番目、 <name6> の ( <name3> -1 ) に <val2> を掛けた値に <name5> を加えた値番目、 <name6> の <name3> * <val2> に <name5> を加えた値から <val1> を引いた値番目の最小値に <val1> を加えた値を <name6> の <name3> に <val2> を掛けた値に <name5> を加えた値番目にする	<name6> [ <name3> * <val2> + <name5> ] = min ( <name6> [ ( <name3> - <val1> ) * <val2> + <name5> - <val1> ] , <name6> [ ( <name3> - <val1> ) * <val2> + <name5> ] , <name6> [ <name3> * <val2> + <name5> - <val1> ] ) + <val1>	<name4> [ <name3> * <val2> + <name5> ] = min ( <name6> [ ( <name3> - <val1> ) * <val2> + <name5> - <val1> ] , <name6> [ ( <name3> - <val1> ) * <val2> + <name5> ] , <name6> [ <name3> * <val2> + <name5> - <val1> ] ) + <val1>
% d % d を ( <name2> 、 <name1> ) の組で割った余りを出力する	print ( '%d %d' % ( <name2> , <name1> ) )	print ( '%d %d %d %d %d' % ( <name2> , <name1> ) )
<name1> の <name4> から <val6> を引いた値番目が <name5> より小さいかどうかを返す	return <name1> [ <name4> - <val6> ] < <name5>	yield <name1> [ <name4> - <val6> ] < <name5>
<name6> の <name3> 番目に ( <val5> 、 <val5> ) の組を追加した集まり	<name6> [ <name3> ] . add ( ( <val5> , <val5> ) )	<name5> [ <name3> ] . add ( ( <val5> , <val5> ) )
<name4> を <val3> に <val1> の <name6> 乗を掛けた値だけ減少させる	<name4> -= <val3> * <val1> ** <name6>	( <name4> -= <val3> * <val1> ** <name6> )
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = map ( int , <name3> ( ) . split ( ) )	<name4> , <name1> = map ( int , <name3> ( ) . split ( ) )
( <name2> から <name3> を引いた値、 <name6> から <name4> を引いた値 ) の組を <name1> とする	<name1> = ( <name2> - <name3> , <name6> - <name4> )	<name1> = ( <name2> - <name3> , <name6> - <name4> )
<name5> の <name6> から読み込んだデータを空白で分割した字句列の各要素に整数を適用した列のリストを <name4> とする	<name4> = list ( map ( int , <name5> . <name6> . read ( ) . split ( ) ) )	<name4> = list ( map ( int , <name5> . <name6> . read ( ) . split ( ) ) )
<name4> の <name5> 番目を一旦、返す	yield <name4> [ <name5> ]	global <name4> [ <name5> ]
<name2> の末尾に <name5> の整数値を追加する	<name2> . append ( int ( <name5> ) )	<name2> . append ( int ( <name5> ) )
<name6> の先頭から <name1> を探して見つかった位置を <name4> とする	<name4> = <name6> . find ( <name1> )	<name4> = <name6> . find ( <name1> )
<val4> から <name5> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <val4> から <name2> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <val4> の列の列を <name3> とする	<name3> = [ [ <val4> for <name6> in range ( <name2> + <val1> ) ] for <name6> in range ( <name5> + <val1> ) ]	<name3> = [ [ <val4> for <name6> in range ( <name2> + <val1> ) ] for <name6> in range ( <name5> + <val1> ) ]
<val1> を書式として <name4> を <val2> だけ左シフトした値と <name3> の論理積で整形した文字列を出力する	print ( <val1> . format ( ( <name4> << <val2> ) & <name3> ) )	<val1> print ( <val1> . format ( ( <name4> << <val2> ) & <name3> ) )
0 から <val1> 未満までの数列を順に <name3> として、繰り返す <blk> 入力された文字列の整数値を <name6> の <name3> 番目にする </blk>	for <name3> in range ( <val1> ) : <blk> <name6> [ <name3> ] = int ( input ( ) ) </blk>	: for <name3> in range ( <val1> ) : <blk> <name6> [ <name3> ] = int ( input ( ) ) </blk>
<name3> の <name2> 番目を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in <name3> [ <name2> ] :	for <name6> , <name5> in <name3> [ <name2> ] :
<name1> の <val2> 番目を <name5> とする	<name5> = <name1> [ <val2> ]	else = <name1> [ <val2> ]
<name6> ( ) の両端から空白改行を取り除いた文字列を <name3> とする	<name3> = <name6> ( ) . strip ( )	<name3> = <name6> ( ) . strip ( )
<name1> . <name3> ( <name6> , <name4> ) を <name2> とする	<name2> = <name1> . <name3> ( <name6> , <name4> )	<name2> = <name1> . <name3> ( <name6> , <name4> )
<name5> から <name4> を引いた値に <name3> を掛けた値から <name6> から <name1> を引いた値に <name2> を掛けた値を引いた値を <name2> とする	<name2> = ( <name5> - <name4> ) * <name3> - ( <name6> - <name1> ) * <name2>	input = ( <name5> - <name4> ) * <name3> - ( <name6> - <name1> ) * <name2>
<name5> を <name3> で割った余りが <val6> と等しいとき、 <blk> 無限の整数列を <val4> だけ増加させる </blk>	if <name5> % <name3> == <val6> : <blk> count += <val4> </blk>	continue if <name5> % <name3> == <val6> : <blk> count += <val4> </blk>
<name6> の先頭が <val3> と等しいとき、	if <name6> [ <val3> ] == <val3> :	if <name6> [ 0 ] == <val3> :
<name1> の <name4> を <name1> の <name5> にする	<name1> . <name5> = <name1> . <name4>	not <name1> . <name5> = <name1> . <name4>
<name1> から <name1> を <val6> で割った余りを引いた値に <val6> を加えた値を <name1> とする	<name1> = <name1> - ( <name1> % <val6> ) + <val6>	<name1> = <name1> - ( <name1> % <val6> ) + <val6>
<name4> ( <name2> , <name1> , <name3> [ <name5> ] )	<name4> ( <name2> , <name1> , <name3> [ <name5> ] )	<name4> ( <name2> , <name1> , <name3> [ <name5> ] )
<name1> 、 <name2> 、 <name3> 、 <name4> 、 <name5> において正規表現 <name6> が最初にマッチする位置のとき、	if search ( <name6> , <name1> , <name2> , <name3> , <name4> , <name5> ) :	for <name6> in search ( <name6> , <name1> , <name2> , <name3> , <name4> , <name5> ) :
<name5> の先頭から <name1> を探して見つかった位置が <name5> の先頭から <name4> を探して見つかった位置と等しいかどうかを返す	return <name5> . find ( <name1> ) == <name5> . find ( <name4> )	x return <name5> . find ( <name1> ) == <name5> . find ( <name4> )
<name4> に <val6> を加えた値から <name1> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> + <val6> , <name1> ) :	range for <name2> in range ( <name4> + <val6> , <name1> ) :
<name1> を <name4> の <val2> 乗だけ増加させる	<name1> += <name4> ** <val2>	<name1> += <name4> ** <val2>
<name1> と <name2> の最大公約数を <name1> とする	<name1> = gcd ( <name1> , <name2> )	<name1> = gcd ( <name1> , <name2> )
<name5> の <name1> を <name4> の <name3> にする	<name4> . <name3> = <name5> . <name1>	( <name4> . <name3> = <name5> . <name1> )
<name3> の <name6> から <val1> を引いた値番目の総和から <name3> の <name6> から <val1> を引いた値番目の <val4> 番目を引いた値を <name5> で割った余りを <name3> の <name6> 番目の先頭にする	<name3> [ <name6> ] [ 0 ] = ( sum ( <name3> [ <name6> - <val1> ] ) - <name3> [ <name6> - <val1> ] [ <val4> ] ) % <name5>	<name2> [ <name6> ] [ 0 ] = ( sum ( <name3> [ <name6> - <val1> ] ) - <name3> [ <name6> - <val1> ] [ <val4> ] ) % <name5>
<name3> ( <name5> -1 - <name6> , <name2> )	<name3> ( <name5> - 1 - <name6> , <name2> )	<name5> ( <name5> - 1 - <name6> , <name2> )
<name2> を <name4> の <name5> 番目だけ増加させる	<name2> += <name4> [ <name5> ]	( <name2> += <name4> [ <name5> ] )
<name6> の <name2> 番目の末尾に <name3> を追加する	<name6> [ <name2> ] . append ( <name3> )	<name3> [ <name2> ] . append ( <name3> )
<name2> が <name6> 以下または <name1> が <name5> 以下のとき、	if <name2> <= <name6> or <name1> <= <name5> :	for <name2> <= <name6> or <name1> <= <name5> :
<val6> から <name2> の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val6> , len ( <name2> ) ) :	continue range ( <val6> , len ( <name2> ) ) :
( <val5> ) からなる列を <name3> とする	<name3> = [ <val5> ]	( <name3> = [ <val5> ] )
<name1> に <name2> ( <name6> -1 , <name1> ) を掛けた値に <name1> に <name2> ( <name6> -1 , <name1> -1 ) を掛けた値を加えた値を <name5> で割った余りを <name3> とする	<name3> = ( <name1> * <name2> ( <name6> - 1 , <name1> ) + <name1> * <name2> ( <name6> - 1 , <name1> - 1 ) ) % <name5>	<name3> = ( <name1> * <name2> ( <name6> - 1 , <name1> ) + <name1> * <name2> ( <name6> - 1 , <name1> - 1 ) ) % <name5>
<name3> の <name2> 番目から <name1> を引いた値を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <name3> [ <name2> ] - <name1>	( <name3> [ <name6> ] = <name3> [ <name2> ] - <name1> )
<name4> と <name5> の最大公約数、 <name4> に <name5> を掛けた値を <name4> と <name5> の最大公約数で割った商を出力する	print ( math . gcd ( <name4> , <name5> ) , <name4> * <name5> // math . gcd ( <name4> , <name5> ) )	print ( gcd ( <name4> , <name5> ) , <name4> * <name5> // gcd ( <name4> , <name5> ) )
<name3> が <name2> の長さと等しくまたは <name2> の <name3> 番目が <name1> と等しくないとき、	if <name3> == len ( <name2> ) or <name2> [ <name3> ] != <name1> :	!= <name3> == len ( <name2> ) or <name2> [ <name3> ] != <name1> :
<name2> が <name6> の、つまり現在の日時番目の <name5> 番目の <name1> 番目より大きいとき、	if <name2> > <name6> [ now ] [ <name5> ] [ <name1> ] :	> <name2> > <name6> [ now ] [ <name5> ] [ <name1> ] :
<name3> の <name5> 内の <name6> と等しい要素を取り除く	<name3> . <name5> . remove ( <name6> )	( <name3> . <name5> . remove ( <name6> ) )
<name3> ( <name1> , <name5> , <name4> -1 ) を <name1> とする	<name1> = <name3> ( <name1> , <name5> , <name4> - 1 )	<name1> = <name3> ( <name1> , <name5> , <name4> - 1 )
<val1> を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <val1>	( <name4> [ <name3> ] = <val1> )
( <name4> ) からなる列を <name5> の <name3> にする	<name5> . <name3> = [ <name4> ]	<name4> . <name3> = [ <name4> ]
os . <name3> の末尾を <name1> とする	<name1> = <name3> [ - 1 ]	( <name1> = <name3> [ - 1 ] )
<name3> が <name5> の <val4> 番目と等しいとき、	if <name3> == <name5> [ <val4> ] :	for <name3> in <name3> == <name5> [ <val4> ] :
改行せずに <val3> を出力する	print ( <val3> , end = '' )	print ( <val3> , end = '' )
<name6> の <name1> の <name5> 番目が <val3> より小さいとき、	if <name6> . <name1> [ <name5> ] < <val3> :	while <name6> . <name1> [ <name5> ] < <val3> :
<name6> の末尾に <val3> に入力された文字列を加えた値のリストを追加する	<name6> . append ( list ( <val3> + input ( ) ) )	<name3> . append ( list ( <val3> + input ( ) ) )
<name1> を <name4> の <name5> の <name4> の <name6> に <name2> を加えた値から <val3> を引いた値番目にする	<name4> . <name5> [ <name4> . <name6> + <name2> - <val3> ] = <name1>	<name4> . <name5> [ <name4> . <name6> + <name2> - <val3> ] = <name1>
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> , <name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name4> から <name6> を引いた値の絶対値を <name1> とする	<name1> = abs ( <name4> - <name6> )	else = abs ( <name4> - <name6> )
( <name3> 、 <name2> 、 <name6> ) からなる列を <name1> とする	<name1> = [ <name3> , <name2> , <name6> ]	<name4> = [ <name3> , <name2> , <name6> ]
( <name5> に <name1> に <name3> を掛けた値から <name6> に <name2> を掛けた値を引いた値を <name4> で割った値を加えた値、 <name5> に <name6> に <name3> を掛けた値に <name1> に <name2> を掛けた値を加えた値を <name4> で割った値を加えた値 ) の組を返す	return ( <name5> + ( <name1> * <name3> - <name6> * <name2> ) / <name4> , <name5> + ( <name6> * <name3> + <name1> * <name2> ) / <name4> )	return ( <name5> + ( <name1> * <name3> - <name6> * <name2> ) / <name4> , <name5> + ( <name6> * <name3> + <name1> * <name2> ) / <name4> )
<name6> を <name2> の <name3> 番目から <name1> の <name3> 番目を引いた値の <val5> 乗の絶対値だけ増加させる	<name6> += abs ( ( <name2> [ <name3> ] - <name1> [ <name3> ] ) ** <val5> )	<name6> += abs ( ( <name2> [ <name3> ] - <name1> [ <name3> ] ) ** <val5> )
-1000000001 を <name2> とする	<name2> = - 1000000001	<name2> = - 1000000000
<name1> 、 <name5> 、 <name2> の要素をそれぞれ組にした列を順に <name6> 、 <name4> 、 <name3> として、繰り返す	for <name6> , <name4> , <name3> in zip ( <name1> , <name5> , <name2> ) :	( <name6> , <name4> , <name3> in zip ( <name1> , <name5> , <name2> ) :
<name4> が <val6> と等しいとき、 <blk> <name1> に <name5> を加えた値を出力する </blk>	if <name4> == <val6> : <blk> print ( <name1> + <name5> ) </blk>	: if <name4> == <val6> : <blk> print ( <name1> + <name5> ) </blk>
<val2> 、真を <name4> 、 <name5> とする	<name4> , <name5> = <val2> , True	( <name4> , <name5> = <val2> , True )
<val4> から <name2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , <name2> ) :	) for <name5> in range ( <val4> , <name2> ) :
0 から <val6> 未満までの数列の逆順を順に <name2> として、繰り返す	for <name2> in range ( <val6> ) [ : : - 1 ] :	: <name2> in range ( <val6> ) [ : : - 1 ] :
<name1> ( <name4> ^ <name3> )	<name1> ( <name4> ^ <name3> )	<name3> <name1> ( <name4> ^ <name3> )
<name4> の - <name2> 番目から、つまり末尾までの部分列を <name6> とする	<name6> = <name4> [ - <name2> : ]	<name6> = <name4> [ - <name2> : ]
<name6> の、つまり先頭から、つまり末尾までの <val4> 間隔による部分列、 <name6> の <val2> 番目から、つまり末尾までの <val4> 間隔による部分列の要素をそれぞれ組にした列を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in zip ( <name6> [ : : <val4> ] , <name6> [ <val2> : : <val4> ] ) :	for <name3> , <name5> in zip ( <name6> [ 0 : : <val4> ] , <name6> [ <val2> : : <val4> ] ) :
( <name4> の先頭の絶対値 ) からなる列を <name1> とする	<name1> = [ abs ( <name4> [ 0 ] ) ]	<name1> = [ abs ( <name4> [ 0 ] ) ]
<name4> を <name2> の <name3> にする	<name2> . <name3> = <name4>	( <name2> . <name3> = <name4> )
( <val1> ) からなる列の <name4> 回分の列の各要素を <name3> とし、、つまり入力された文字列のリストの列を <name6> とする	<name6> = [ list ( input ( ) ) for <name3> in [ <val1> ] * <name4> ]	<name6> = [ list ( input ( ) ) for <name3> in [ <val1> ] * <name4> ]
<name6> の、つまり入力された文字列の整数値から <val4> を引いた値番目を <val4> だけ増加させる	<name6> [ int ( input ( ) ) - <val4> ] += <val4>	<name2> [ int ( input ( ) ) - <val4> ] += <val4>
<name1> を展開し、それぞれ <name3> 、 <name6> 、 <name2> 、 <name4> とする	<name3> , <name6> , <name2> , <name4> = <name1>	( <name3> , <name6> , <name2> , <name4> = <name1> )
( <val1> ) からなる列の <name5> 回分の列を <name4> の <name6> にする	<name4> . <name6> = [ <val1> ] * <name5>	<name2> . <name6> = [ <val1> ] * <name5>
<val4> を <name1> の <name6> の - <name5> に <name3> を加えた値番目番目にする	<name1> [ <name6> [ - <name5> + <name3> ] ] = <val4>	<name4> [ <name1> [ <name6> [ - <name5> + <name3> ] ] = <val4>
<name3> に <name2> を掛けた値が <val4> <name5> <val1> より小さくかつ <name6> に <name3> を掛けた値が <val4> <name5> <val1> より小さいかどうかを返す	return <name3> * <name2> < <val4> <name5> <val1> and <name6> * <name3> < <val4> <name5> <val1>	x return <name3> * <name2> < <val4> <name5> <val1> and <name6> * <name3> < <val4> <name5> <val1>
入力された文字列の逆順の各要素を <name4> とし、 <name4> の列を <name6> とする	<name6> = [ <name4> for <name4> in input ( ) [ : : - 1 ] ]	<name4> = [ <name4> for <name4> in input ( ) [ : : - 1 ] ]
<name6> の <name5> 番目が <name6> の <name5> から <val4> を引いた値番目より小さいとき、	if <name6> [ <name5> ] < <name6> [ <name5> - <val4> ] :	while <name6> [ <name5> ] < <name6> [ <name5> - <val4> ] :
<name2> ( <val3> , <val6> ) . <name1> ( <name5> [ : -1 ] )	<name2> ( <val3> , <val6> ) . <name1> ( <name5> [ : - <val3> ] )	<name2> ( <val3> , <val6> ) . <name1> ( <name5> [ : - <val6> ] )
<name4> に <val1> を加えた値を返す	return <name4> + <val1>	yield <name4> + <val1>
<name6> の <name5> と等しい要素の最初の位置を <name3> とする	<name3> = <name6> . index ( <name5> )	<name3> = <name6> . index ( <name5> )
<name6> ( <name3> , <name4> , <name1> , <name5> )	<name6> ( <name3> , <name4> , <name1> , <name5> )	set ( <name6> ( <name3> , <name4> , <name1> , <name5> ) )
<name4> を展開し、それぞれ <name1> 、 <name2> とする <name5> を展開し、それぞれ <name6> 、 <name3> とする <name4> を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name4> <name6> , <name3> = <name5> <name1> , <name2> = <name4>	<name6> , <name3> = <name4> <name6> , <name2> = <name5> <name1> , <name2> = <name4>
<name1> の <val2> 番目を <val3> だけ増加させる	<name1> [ <val2> ] += <val3>	now [ <val2> ] += <val3>
<name1> の <val5> 番目の整数値を <name6> の <name3> にする	<name6> . <name3> = int ( <name1> [ <val5> ] )	dict . <name3> = int ( <name1> [ <val5> ] )
\ <name5> ( <val6> % <name4> ) \	\ <name5> ( <val6> % <name4> ) \	) <name5> ( <val6> % <name4> ) \
<name6> が <name3> の <name1> 番目に含まれるとき、	if <name6> in <name3> [ <name1> ] :	or <name6> in <name3> [ <name1> ] :
<name6> の末尾に ( <val2> ) からなる列の <name1> に <val3> を加えた値回分の列を追加する	<name6> . append ( [ <val2> ] * ( <name1> + <val3> ) )	<name2> . append ( [ <val2> ] * ( <name1> + <val3> ) )
<name4> ( <name1> ) と <name6> の論理積を <name1> とする	<name1> = <name4> ( <name1> ) & <name6>	<name1> = <name4> ( <name1> ) & <name6>
<name1> の、つまり先頭から、つまり末尾までの部分列、 <name1> の <val3> 番目から、つまり末尾までの部分列に ( <name1> の先頭 ) からなる列を加えた値の要素をそれぞれ組にした列を順に <name4> 、 <name2> として、繰り返す	for <name4> , <name2> in zip ( <name1> [ 0 : ] , <name1> [ <val3> : ] + [ <name1> [ 0 ] ] ) :	, for <name4> , <name2> in zip ( <name1> [ 0 : ] , <name1> [ <val3> : ] + [ <name1> [ 0 ] ] ) :
<val6> を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <val6>	( <name1> [ <name4> ] = <val6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name6> = map ( int , input ( ) . split ( ) )
<name5> のコピーされた列を <name2> とする	<name2> = <name5> [ : ]	( <name2> = <name5> [ : ] )
<name5> に <name4> を加えた値、 <name3> に <name2> を加えた値を <name6> 、 <name1> とする	<name6> , <name1> = <name5> + <name4> , <name3> + <name2>	[ <name6> , <name1> = <name5> + <name4> , <name3> + <name2>
^を <name3> の <name2> 番目の <name6> 番目にする	<name3> [ <name2> ] [ <name6> ] = '^'	<name1> [ <name2> ] [ <name6> ] = ^ ' ' '
<name3> ( ) を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = <name3> ( )	dict , <name2> , <name6> = <name3> ( )
<name3> が <name1> を <val4> で割った商より大きいとき、	if <name3> > <name1> // <val4> :	continue <name3> > <name1> // <val4> :
<name1> 、 <name2> を出力する	print ( <name1> , <name2> )	print ( <name1> , <name2> )
<name5> の末尾に <name3> 内の <val6> を <val2> で置き換えた文字列を追加する	<name5> . append ( <name3> . replace ( <val6> , <val2> ) )	<name4> . append ( <name3> . replace ( <val6> , <val2> ) )
<name1> の <name3> から <name1> の <name6> を引いた値を <name2> とする	<name2> = <name1> . <name3> - <name1> . <name6>	<name2> = <name1> . <name3> - <name1> . <name6>
<val3> を <name4> の <name1> 番目とするを <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name4> [ <name1> ] = <val3>	else [ <name1> ] = <name4> [ <name1> ] = <val3>
<name5> . <name6> ( <name2> -1 , <name1> - <name3> )	<name5> . <name6> ( <name2> - 1 , <name1> - <name3> )	<name1> . <name6> ( <name2> - 1 , <name1> - <name3> )
<name6> の <name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , <name6> . <name3> . readline ( ) . split ( ) ) )	<name1> = list ( map ( int , <name6> . <name3> . readline ( ) . split ( ) ) )
<name6> の末尾に [ MASK ] を追加するを <name1> とする	<name1> = <name6> . append	<name1> = <name6> . append
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name6> 、 <name4> とする	<name5> , <name1> , <name6> , <name4> = map ( float , input ( ) . split ( ) )	<name5> , <name1> , <name6> , <name4> = map ( float , input ( ) . split ( ) )
\ <name2> が <val4> と等しいとき、\	\ if <name2> == <val4> : \	{ <name2> == <val4> : \
( <val3> ) からなる列の <name6> 回分の列を追加して <name2> を拡張する	<name2> . extend ( [ <val3> ] * <name6> )	<name2> . extend ( [ <val3> ] * <name6> )
<name5> から <name1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> , <name1> ) :	: for <name6> in range ( <name5> , <name1> ) :
<name2> が <name5> の長さから <val6> を引いた値より小さい間、次を繰り返す	while <name2> < len ( <name5> ) - <val6> :	yield ( <name2> < len ( <name5> ) - <val6> ) :
<name2> に <val3> を加えた値が <name4> より小さい間、次を繰り返す	while <name2> + <val3> < <name4> :	del ( <name2> + <val3> < <name4> ) :
<name1> をパラメータとして <name1> の <name2> を返す関数を <name6> として <name4> をソートする	<name4> . sort ( <name6> = lambda <name1> : <name1> . <name2> )	<name6> . sort ( <name6> = lambda <name1> : <name1> . <name2> )
<name6> が、つまり無限大と等しくないとき <name6> 、そうでなければ -1 を出力する	print ( <name6> if <name6> != inf else - 1 )	<name6> . print ( <name6> if <name6> != inf else - 1 )
<name6> 、 <name2> 、 <name5> はグローバル変数とする	global <name6> , <name2> , <name5>	>> = <name6> , <name2> , <name5>
<name3> を <name5> に <name6> を加えた値だけ増加させる	<name3> += <name5> + <name6>	( <name3> += <name5> + <name6> )
<name1> ( <name2> . <name3> ) 改行せずに <val4> 、 <name2> の <name5> を出力する <name1> ( <name2> . <name6> )	<name1> ( <name2> . <name3> ) print ( <val4> , <name2> . <name5> , end = <val4> ) <name1> ( <name2> . <name6> )	<name1> ( <name2> . <name3> ) print ( <val4> , <name2> [ <name5> ] , <name1> ( <name2> . <name6> ) , end = '' )
<name5> の <name1> の <name3> を <name5> の <name1> にする	<name5> . <name1> = <name5> . <name1> . <name3>	<name2> . <name1> = <name5> . <name1> . <name3>
真を <name3> の <name2> の <name4> 番目にする	<name3> . <name2> [ <name4> ] = True	( <name3> . <name2> [ <name4> ] = True )
<name4> . <name6> ( * <name5> ) を順に <name3> として、繰り返す	for <name3> in <name4> . <name6> ( * <name5> ) :	. for <name3> in <name4> . <name6> ( * <name5> ) :
<name1> の <name6> に <name2> に <name5> を掛けた値を加えた値を返す	return <name1> . <name6> + <name2> * <name5>	yield <name1> . <name6> + <name2> * <name5>
<name5> の長さが <val3> と等しいとき、	if len ( <name5> ) == <val3> :	while ( len ( <name5> ) == <val3> ) :
<name1> かつ <name2> の <name6> 番目が、つまり未定値と等しくないとき、	if <name1> and <name2> [ <name6> ] is None :	for <name1> in <name1> and <name2> [ <name6> ] is None :
<val4> を順に <name1> として、繰り返す	for <name1> in <val4> :	. for <name1> in <val4> :
( <val2> ) からなる列の <val4> を <name5> から <val4> を引いた値だけ左シフトした値回分の列を <name6> とする	<name6> = [ <val2> ] * ( <val4> << ( <name5> - <val4> ) )	count = [ <val2> ] * ( <val4> << ( <name5> - <val4> ) )
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を <name2> とする	<name2> = map ( int , <name3> ( ) . split ( ) )	input = map ( int , <name3> ( ) . split ( ) )
<name3> から <name4> を引いた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name3> - <name4>	<name1> [ <name1> ] = <name3> - <name4>
<name3> の <name5> を <name4> で割った余り番目のとき、	if <name3> [ <name5> % <name4> ] :	continue <name3> [ <name5> % <name4> ] :
<name2> の <name4> の <name3> から読み込んだ一行を入力された文字列とする	input = <name2> . <name4> . <name3> . readline	now = <name2> . <name4> . <name3> . readline ( )
<name3> 、 <name5> の要素をそれぞれ組にした列を順に <name4> 、 <name1> として、繰り返す	for <name4> , <name1> in zip ( <name3> , <name5> ) :	( <name4> , <name1> in zip ( <name3> , <name5> ) :
<name3> ( <name5> - <name2> , <name1> - <name6> , <name4> ) を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name3> ( <name5> - <name2> , <name1> - <name6> , <name4> )	<name6> , <name4> = <name3> ( <name5> - <name2> , <name1> - <name6> , <name4> )
<name3> の <name1> に <val2> を加えた値番目を出力する	print ( <name3> [ <name1> + <val2> ] )	print ( <name3> [ <name1> + <val2> ] )
<name1> の集合のリストを <name6> とする	<name6> = list ( set ( <name1> ) )	<name6> = list ( set ( <name1> ) )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = map ( int , <name1> ( ) . split ( ) )	<name3> , <name2> = map ( int , <name1> ( ) . split ( ) )
<name2> の <val3> 番目が <name2> の <val4> 番目と等しいかどうかが <name2> の <val5> 番目と等しいかどうかが <name2> の <val1> 番目と等しいとき、	if <name2> [ <val3> ] == <name2> [ <val4> ] == <name2> [ <val5> ] == <name2> [ <val1> ] :	for <name2> [ <val3> ] == <name2> [ <val4> ] == <name2> [ <val5> ] == <name2> [ <val1> ] :
<name2> の <name3> を <name2> の <name5> の <name4> 番目との論理和にする	<name2> . <name3> | = <name2> . <name5> [ <name4> ]	<name4> . <name3> | = <name2> . <name5> [ <name4> ]
<name5> の <name1> 番目が、つまり未定値と等しくまたは <name5> の <name1> 番目の <name5> が <name3> の <name5> より大きいとき、	if <name5> [ <name1> ] == None or <name5> [ <name1> ] . <name5> > <name3> . <name5> :	isinstance ( <name5> [ <name1> ] is not None or <name5> [ <name1> ] . <name5> > <name3> . <name5> ) :
<val3> を <name1> の <name6> に <val4> を加えた値に <name5> を掛けた値から <val4> を引いた値番目にする	<name1> [ ( <name6> + <val4> ) * <name5> - <val4> ] = <val3>	+ <name1> [ ( <name6> + <val4> ) * <name5> - <val4> ] = <val3>
( <val2> ) からなる列の <name3> に <val6> を加えた値回分の列を <name4> とする	<name4> = [ <val2> ] * ( <name3> + <val6> )	<name4> = [ <val2> ] * ( <name3> + <val6> )
<name1> を <name5> で割った余りが <val6> と等しくかつ <name3> を <name5> で割った余りが <val6> と等しいとき、	if <name1> % <name5> == <val6> and <name3> % <name5> == <val6> :	list ( <name1> % <name5> == <val6> and <name3> % <name5> == <val6> :
<name5> ( <name2> . <name6> [ <val3> : ] )	<name5> ( <name2> . <name6> [ <val3> : ] )	<name5> ( <name2> . <name6> [ <val3> : ] )
<name3> ( <name1> ) に <val2> を加えた値に <name5> の文字列を加えた値に <val2> を加えた値に <name4> の文字列を加えた値を出力する	print ( <name3> ( <name1> ) + <val2> + <name3> ( <name5> ) + <val2> + <name3> ( <name4> ) )	<name3> ( <name1> ) + <val2> + str ( <name5> ) + <val2> + str ( <name4> ) )
<name5> の先頭の文字列に <val6> を加えた値に <name5> の <val3> 番目の文字列を加えた値を出力する	print ( str ( <name5> [ 0 ] ) + <val6> + str ( <name5> [ <val3> ] ) )	( str ( <name5> [ 0 ] ) + <val6> + str ( <name5> [ <val3> ] ) )
( <val6> 、 <val2> ) からなる列を <name5> とする	<name5> = [ <val6> , <val2> ]	<name5> = [ <val6> , <val2> ]
<name6> の <name1> 番目の <name5> 番目を <val4> だけ増加させる	<name6> [ <name1> ] [ <name5> ] += <val4>	<name5> [ <name1> ] [ <name5> ] += <val4>
<name5> の <name6> 番目に <name4> の <name6> から <name3> を引いた値番目を掛けた値に <name4> の <name3> 番目を掛けた値を <name1> で割った余りを返す	return <name5> [ <name6> ] * <name4> [ <name6> - <name3> ] * <name4> [ <name3> ] % <name1>	x return <name5> [ <name6> ] * <name4> [ <name6> - <name3> ] * <name4> [ <name3> ] % <name1>
<name6> . <name1> ( ) でないとき、	if not <name6> . <name1> ( ) :	isinstance ( <name6> . <name1> ( ) ) :
<name1> ( <name6> , <name3> , <name4> ) を <name2> とする	<name2> = <name1> ( <name6> , <name3> , <name4> )	dict = <name1> ( <name6> , <name3> , <name4> )
<name2> の x 座標に <name5> の x 座標を掛けた値に <name2> の y 座標に <name5> の y 座標を掛けた値を加えた値を返す	return <name2> . x * <name5> . x + <name2> . y * <name5> . y	x return <name2> . x * <name5> . x + <name2> . <name5> . y
<name4> の、つまり先頭から <name5> 番目までの部分列に <name4> の <name2> 番目から <name3> 番目までの部分列を加えた値に <name4> の <name1> 番目から <name2> 番目までの部分列を加えた値に <name4> の <name5> 番目から <name1> 番目までの部分列を加えた値に <name4> の <name3> 番目から、つまり末尾までの部分列を加えた値を <name4> とする	<name4> = <name4> [ : <name5> ] + <name4> [ <name2> : <name3> ] + <name4> [ <name1> : <name2> ] + <name4> [ <name5> : <name1> ] + <name4> [ <name3> : ]	<name4> = <name4> [ : <name5> ] + <name4> [ <name2> : <name3> ] + <name4> [ <name1> : <name2> ] + <name4> [ <name5> : <name1> ] + <name4> [ <name3> : ]
改行せずに <name6> の <name4> 番目に <val5> を加えた値を出力する	print ( <name6> [ <name4> ] + <val5> , end = '' )	print ( <name6> [ <name4> ] + <val5> , end = '' )
<name6> に <val4> を掛けた値に <name2> を加えた値を <name3> とする	<name3> = <name6> * <val4> + <name2>	<name3> = <name6> * <val4> + <name2>
<name5> に <name2> を掛けた値に <name6> を加えた値に <val3> を掛けた値に <name4> を加えた値を <name1> とする	<name1> = ( <name5> * <name2> + <name6> ) * <val3> + <name4>	<name4> = ( <name5> * <name2> + <name6> ) * <val3> + <name4>
<name5> 、 <name2> から <name1> を引いた値に <name6> に <val3> を加えた値を掛けた値に <name4> から <name5> を引いた値を加えた値の絶対値の最小値を <name5> とする	<name5> = min ( <name5> , abs ( ( <name2> - <name1> ) * ( <name6> + <val3> ) + ( <name4> - <name5> ) ) )	else = min ( <name5> , abs ( ( <name2> - <name1> ) * ( <name6> + <val3> ) + ( <name4> - <name5> ) ) )
<name5> の長さが <val3> と等しいとき、 <blk> <val6> を出力する </blk>	if len ( <name5> ) == <val3> : <blk> print ( <val6> ) </blk>	\ print ( len ( <name5> ) == <val3> : <blk> print ( <val6> ) ) </blk>
<name4> の <name3> の先頭の <val2> 番目に <name4> の <name6> を加えた値を返す	return <name4> . <name3> [ <val2> ] [ <val2> ] + <name4> . <name6>	x return <name4> . <name3> [ <val2> ] [ <val2> ] + <name4> . <name6>
<name5> ( <name6> , <name2> ) を <name3> の <name1> にする	<name3> . <name1> = <name5> ( <name6> , <name2> )	<name3> . <name1> = <name5> ( <name6> , <name2> )
<name5> ( <name4> ( <name6> ) ) のとき <val3> 、そうでなければ <val2> を <name1> とする	<name1> = <val3> if <name5> ( <name4> ( <name6> ) ) else <val2>	<name1> = <val3> if <name5> ( <name4> ( <name6> ) ) else <val2>
<name2> の <name3> に [ MASK ] を書き込むを <name4> とする	<name4> = <name2> . <name3> . <name4>	<name2> . <name4> = <name2> . <name3> . <name4>
<name5> が <name4> の <name6> と等しくないとき、	if <name5> is <name4> . <name6> :	while <name5> != <name4> . <name6> :
<name1> から <val2> を引いた値を <name6> とする	<name6> = <name1> - <val2>	( <name6> = <name1> - <val2> )
<name1> の <name5> の <name2> 番目から <name1> の <name5> の <name6> 番目を引いた値を返す	return <name1> . <name5> [ <name2> ] - <name1> . <name5> [ <name6> ]	x return <name1> . <name5> [ <name2> ] - <name1> . <name5> [ <name6> ]
( <name4> の <name5> の <name2> ) からなる列の <name3> 回分の列を <name6> の <name1> にする	<name6> . <name1> = [ <name4> . <name5> . <name2> ] * <name3>	<name2> . <name1> = [ <name4> . <name5> . <name2> ] * <name3>
( 、つまり未定値 ) からなる列の <val6> に <name3> を掛けた値回分の列を <name2> とする	<name2> = [ None ] * <val6> * <name3>	<name2> = [ None ] * ( <val6> * <name3> )
<name3> ( <name4> , <name2> ) を <name6> とする	<name6> = <name3> ( <name4> , <name2> )	<name6> = <name3> ( <name4> , <name2> )
<name1> を空白で分割した字句列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name1> . split ( )	<name3> , <name2> = <name1> . split ( )
<name5> の末尾に <name6> から <name1> を引いた値から <val4> を引いた値を追加する	<name5> . append ( <name6> - <name1> - <val4> )	<name4> . append ( <name6> - <name1> - <val4> )
<name4> の <name3> 番目が、つまり未定値と等しいとき、	if <name4> [ <name3> ] == None :	list if <name4> [ <name3> ] is not None :
<name4> ( ) . <name1> ( <name5> , <name2> )	<name4> ( ) . <name1> ( <name5> , <name2> )	( <name4> ( ) . <name1> ( <name5> , <name2> ) )
<name4> が <name3> に対応する値、もし存在しなければ <name6> 、 <name2> より小さいとき、	if <name4> < <name3> . get ( <name6> , <name2> ) :	isinstance ( <name4> < <name3> . get ( <name6> , <name2> ) :
<name1> の長さが <val6> と等しくなくまたは <name5> が、つまり偽と等しいとき、	if len ( <name1> ) != <val6> or <name5> == False :	raise if len ( <name1> ) != <val6> or <name5> == False :
<name2> の <name3> 番目と <name2> の <name3> から <val6> を引いた値番目を入れ替える	<name2> [ <name3> ] , <name2> [ <name3> - <val6> ] = <name2> [ <name3> - <val6> ] , <name2> [ <name3> ]	<name4> [ <name3> ] , <name2> [ <name3> - <val6> ] = <name2> [ <name3> - <val6> ] , <name2> [ <name3> ]
<name5> ( <name6> , <name3> , <name2> ) が - <name4> より大きいとき <name2> 、そうでなければ <name3> を <name1> とする	<name1> = <name2> if <name5> ( <name6> , <name3> , <name2> ) > - <name4> else <name3>	<name1> = <name2> if <name5> ( <name6> , <name3> , <name2> ) > - <name4> else <name3>
<name4> ( <name5> . <name1> , <name6> ) を <name2> とする	<name2> = <name4> ( <name5> . <name1> , <name6> )	dict = <name4> ( <name5> . <name1> , <name6> )
<name5> を <name1> ( <name6> [ <name2> -1 ] + <name3> ) から <name1> ( <name6> [ <name2> -1 ] ) を引いた値だけ増加させる	<name5> += <name1> ( <name6> [ <name2> - 1 ] + <name3> ) - <name1> ( <name6> [ <name2> - 1 ] )	<name1> += <name1> ( <name6> [ <name2> - 1 ] + <name3> ) - <name1> ( <name6> [ <name2> - 1 ] )
<name4> ( <name1> = <val6> )	<name4> ( <name1> = <val6> )	str ( <name4> ( <name1> = <val6> ) )
<name6> を <name2> の <name5> 番目だけ増加させる	<name6> += <name2> [ <name5> ]	( <name6> += <name2> [ <name5> ] )
入力された文字列を <val6> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列の組を <name2> とする	<name2> = tuple ( [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ] )	input = tuple ( [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ] )
<name6> を <name2> とする <name5> を <name1> とする	<name2> = <name6> <name1> = <name5>	<name6> = <name6> <name1> = <name5>
<name4> の各要素を <name2> とし、 <name2> の、つまり先頭から、つまり末尾までの部分列の列を <name3> とする	<name3> = [ <name2> [ : ] for <name2> in <name4> ]	<name6> = [ <name2> [ : ] for <name2> in <name4> ]
<name2> の <val1> 番目から、つまり末尾までの部分列の整数値を <name3> とする	<name3> = int ( <name2> [ <val1> : ] )	<name3> = int ( <name2> [ <val1> : ] )
<name5> を <val1> で割った値を <name5> とする	<name5> = <name5> / <val1>	<name5> = <name5> / <val1>
<name5> の各要素を <name4> とし、 <name4> の英大小文字を交換した文字列の列を <name2> とする	<name2> = [ <name4> . swapcase ( ) for <name4> in <name5> ]	<name6> = [ <name4> . swapcase ( ) for <name4> in <name5> ]
<val2> の <name1> から <val6> を引いた値のビット長乗を <name4> とする	<name4> = <val2> ** ( <name1> - <val6> ) . bit_length ( )	<name4> = <val2> ** ( <name1> - <val6> ) . bit_length ( )
<name2> . <name4> ( <name3> . <name6> - <name3> . <name5> , <name1> - <name3> . <name5> ) が <val2> より小さいとき、	if <name2> . <name4> ( <name3> . <name6> - <name3> . <name5> , <name1> - <name3> . <name5> ) < <val2> :	isinstance ( <name2> . <name4> ( <name3> . <name6> - <name3> . <name5> , <name1> - <name3> . <name5> ) < <val2> :
<name1> の <name3> 番目を展開してを出力する	print ( * <name1> [ <name3> ] )	print ( * <name1> [ <name3> ] )
<name4> の <name3> 番目から <name4> の <name1> 番目を引いた値が <name2> より大きいとき、	if <name4> [ <name3> ] - <name4> [ <name1> ] > <name2> :	if <name4> [ <name3> ] - <name4> [ <name1> ] > <name2> :
<name1> ( <name5> ) が <name5> と等しいとき、	if <name1> ( <name5> ) == <name5> :	list ( <name1> ( <name5> ) == <name5> :
( <name3> の <name1> 番目、 os . <name5> の逆順 ) の組を返す	return ( <name3> [ <name1> ] , <name5> [ : : - 1 ] )	assert ( <name3> [ <name1> ] , <name5> [ : : - 1 ] )
<name5> ( )	<name5> ( )	( <name5> ( ) )
<name5> . <name4> ( <name5> ) を <name5> とする	<name5> = <name5> . <name4> ( <name5> )	<name5> = <name5> . <name4> ( <name5> )
<name2> を <val1> だけ右シフトする	<name2> >> = <val1>	pow ( <name2> >> = <val1> )
<name5> を <name4> の <name3> の <name1> 番目にする	<name4> . <name3> [ <name1> ] = <name5>	( <name4> . <name3> [ <name1> ] = <name5> )
<name2> のとき、 <blk> <name6> を ( <val4> 、 <name2> の文字列 ) からなる列の <name2> が <val5> と等しくないかどうか番目に <name3> を加えた値だけ増加させる </blk>	if <name2> : <blk> <name6> += [ <val4> , str ( <name2> ) ] [ <name2> != <val5> ] + <name3> </blk>	if <name2> : <blk> <name6> += [ <val4> , str ( <name2> ) ] [ <name2> != <val5> ] + <name3> </blk>
<name2> ( <name3> ) が <name3> と等しくないとき、	if <name2> ( <name3> ) != <name3> :	for <name3> in <name2> ( <name3> ) != <name3> :
<name3> に <name1> を加えた値が <name2> ( <name4> ^ <name5> , <val6> ) より小さいとき、 <blk> <name3> に <name1> を加えた値を <name3> の <name4> と <name5> の排他論理和番目にする <sep> <name1> の <name3> に <name1> を加えた値番目の末尾に <name4> と <name5> の排他論理和を追加する </blk>	if <name3> + <name1> < <name2> ( <name4> ^ <name5> , <val6> ) : <blk> <name3> [ <name4> ^ <name5> ] = <name3> + <name1> <sep> <name1> [ <name3> + <name1> ] . append ( <name4> ^ <name5> ) </blk>	\ <name3> + <name1> < <name2> ( <name4> ^ <name5> , <val6> ) : <blk> <name3> [ <name4> ^ <name5> ] = <name3> + <name1> <sep> <name1> [ <name3> + <name1> ] . append ( <name4> ^ <name5> ) </blk>
<name2> の最大値に <val5> を加えた値の整数値を返す	return int ( max ( <name2> ) + <val5> )	yield int ( max ( <name2> ) + <val5> )
<name4> を <name6> との論理和にする	<name4> | = <name6>	( <name4> | = <name6> )
<name4> の <name6> から <name2> を引いた値に <name1> の <name3> 番目を加えた値番目が -1 と等しいとき、	if <name4> [ <name6> - <name2> + <name1> [ <name3> ] ] == - 1 :	list ( <name4> [ <name6> - <name2> + <name1> [ <name3> ] ] == - 1 :
<val6> 年 <name1> 月 <name4> 日の日時を <name2> とする	<name2> = datetime . datetime ( <val6> , <name1> , <name4> )	<name2> = datetime . datetime ( <val6> , <name1> , <name4> )
<name2> ( <name3> , <name4> , <name1> ) を <name6> とする	<name6> = <name2> ( <name3> , <name4> , <name1> )	<name6> = <name2> ( <name3> , <name4> , <name1> )
<name3> の整数値を <name6> の <name1> 番目にする	<name6> [ <name1> ] = int ( <name3> )	<name1> [ <name1> ] = int ( <name3> )
<name2> に <name4> を加えた値を出力する	print ( <name2> + <name4> )	print ( <name2> + <name4> )
False を <name1> とする	<name1> = 'False'	<name1> = dict ( zip ' )
<name6> から <name4> を引いた値に <name2> から <name1> を引いた値を掛けた値を <name3> から <name1> を引いた値で割った値に <name4> を加えた値を <name5> とする	<name5> = ( <name6> - <name4> ) * ( <name2> - <name1> ) / ( <name3> - <name1> ) + <name4>	<name5> = ( <name6> - <name4> ) * ( <name2> - <name1> ) / ( <name3> - <name1> ) + <name4>
<name3> . <name5> ( <name4> . <name2> )	<name3> . <name5> ( <name4> . <name2> )	<name1> . <name5> ( <name4> . <name2> )
ソートされた順序を保ったまま <name3> を <name4> に挿入できる位置を <name6> とする	<name6> = bisect . bisect_left ( <name4> , <name3> )	<name6> = bisect . bisect_left ( <name4> , <name3> )
<name3> を <name3> と - <name3> の論理積だけ減少させる	<name3> -= <name3> & - <name3>	( <name3> -= <name3> & - <name3> )
<name1> の <name5> に ( <name4> 、 <name3> ) の組を挿入する	<name1> . insert ( <name5> , ( <name4> , <name3> ) )	<name1> . insert ( <name5> , ( <name4> , <name3> ) )
改行せずに <val3> に <name4> の文字列を加えた値を出力する	print ( <val3> + str ( <name4> ) , end = '' )	end = <val3> + str ( <name4> ) , end = '' )
<name2> の <name3> に [ MASK ] を書き込むを <name6> とする	<name6> = <name2> . <name3> . <name6>	<name6> = <name2> . <name3> . <name6>
<name3> を順に <name2> として、繰り返す <blk> <name2> の <name6> の整数値、 <name2> の <name5> の整数値を出力する </blk>	for <name2> in <name3> : <blk> print ( int ( <name2> . <name6> ) , int ( <name2> . <name5> ) ) </blk>	for <name2> in <name3> : <blk> print ( int ( <name2> . <name6> ) , int ( <name2> . <name5> ) ) </blk>
<name1> の <val2> 乗が <name3> の <val2> 乗に <name4> の <val2> 乗を加えた値と等しいとき、	if <name1> ** <val2> == <name3> ** <val2> + <name4> ** <val2> :	: if <name1> ** <val2> == <name3> ** <val2> + <name4> ** <val2> :
<name5> の <val3> 番目、 <name5> の <val6> 番目を出力する	print ( <name5> [ <val3> ] , <name5> [ <val6> ] )	print ( <name5> [ <val3> ] , <name5> [ <val6> ] )
<val4> から <name1> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す <blk> <val4> を <name2> の <val4> 番目の <name3> 番目の <name5> 番目の <name5> 番目とするを <name2> の <val4> 番目の <name3> 番目の <name5> 番目の <name6> 番目にする </blk>	for <name3> in range ( <val4> , <name1> + <val4> ) : <blk> <name2> [ <val4> ] [ <name3> ] [ <name5> ] [ <name6> ] = <name2> [ <val4> ] [ <name3> ] [ <name5> ] [ <name5> ] = <val4> </blk>	: for <name3> in range ( <val4> , <name1> + <val4> ) : <blk> <name2> [ <val4> ] [ <name3> ] [ <name5> ] [ <name6> + <val4> ] [ <name6> + <val4> ] = <val4> </blk>
<name5> から <val6> を引いた値、 <name4> . <name2> ( <name5> -1 ) に <name5> を加えた値を追加して <name4> を更新する	<name4> . update ( <name5> - <val6> , <name4> . <name2> ( <name5> - <val6> ) + <name5> )	<name4> . update ( <name5> - <val6> , <name4> . <name2> ( <name5> - <val6> ) + <name5> )
<val1> を <name5> の <name6> 番目の <name4> 番目にする	<name5> [ <name6> ] [ <name4> ] = <val1>	<name4> [ <name6> ] [ <name4> ] = <val1>
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> とする </blk>	try : <blk> <name3> , <name2> = map ( int , input ( ) . split ( ) ) </blk>	try : <blk> <name3> , <name2> = map ( str , input ( ) . split ( ) ) </blk>
<name1> . <name3> ( <name2> ) を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name1> . <name3> ( <name2> )	<name3> , <name5> = <name1> . <name3> ( <name2> )
<name5> の <name3> を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = <name5> . <name3>	<name2> , <name1> = <name5> . <name3>
<name3> に <name4> を加えた値を <val2> だけ右シフトした値を <name3> とする	<name3> = ( <name3> + <name4> ) >> <val2>	<name3> = ( <name3> + <name4> ) >> <val2>
<name5> をパラメータとして - <name5> の先頭を返す関数をキーとして <name2> をソートした列を <name2> とする	<name2> = sorted ( <name2> , key = lambda <name5> : - <name5> [ 0 ] )	<name2> = sorted ( <name2> , key = lambda <name5> : - <name5> [ 0 ] )
<name4> を <val1> 倍にする	<name4> *= <val1>	( <name4> *= <val1> )
<name1> に <name3> を掛けた値を <name1> と <name3> の最大公約数で割った商を返す	return ( <name1> * <name3> ) // gcd ( <name1> , <name3> )	return <name1> * <name3> // gcd ( <name1> , <name3> )
<name6> ( * [ <name2> ( <name3> ) foriininput ( ) . <name5> ( <val4> ) ] ) を <name1> とする	<name1> = <name6> ( * [ <name2> ( <name3> ) for <name3> in input ( ) . <name5> ( <val4> ) ] )	<name1> = <name6> ( * [ <name2> ( <name3> ) for <name3> in input ( ) . <name5> ( <val4> ) ] )
<name4> ( <val6> . <name3> ( <name1> ) )	<name4> ( <val6> . <name3> ( <name1> ) )	<name4> ( <val6> . <name3> ( <name1> ) )
<name3> の <name5> 番目を順に <name1> として、繰り返す	for <name1> in <name3> [ <name5> ] :	continue <name3> [ <name5> ] :
<name4> を <name2> で割った商を出力する	print ( <name4> // <name2> )	print ( <name4> // <name2> )
<name4> . <name3> ( <name5> ) が <name4> . <name3> ( <name1> ) と等しいかどうかを返す	return <name4> . <name3> ( <name5> ) == <name4> . <name3> ( <name1> )	x return <name4> . <name3> ( <name5> ) == <name4> . <name3> ( <name1> )
( 、つまり真 ) からなる列の <name4> に <val3> を加えた値回分の列を <name1> とする	<name1> = [ True ] * ( <name4> + <val3> )	<name1> = [ True ] * ( <name4> + <val3> )
<name4> ( <name3> , <name1> , <name2> ) を <name5> とする	<name5> = <name4> ( <name3> , <name1> , <name2> )	<name6> = <name4> ( <name3> , <name1> , <name2> )
( <name5> の <name2> 番目、 <name3> の <name1> 番目 ) の組を <name4> とする ( <name5> の <name4> 番目、 <name3> の <name5> 番目 ) の組を <name6> とする	<name4> = ( <name5> [ <name2> ] , <name3> [ <name1> ] ) <name6> = ( <name5> [ <name4> ] , <name3> [ <name5> ] )	<name6> = ( <name5> [ <name2> ] , <name3> [ <name1> ] ) <name6> = ( <name5> [ <name4> ] , <name3> [ <name5> ] )
( 、つまり偽 ) からなる列の <name3> に <name3> を掛けた値回分の列を <name4> とする	<name4> = [ False ] * ( <name3> * <name3> )	<name4> = [ False ] * ( <name3> * <name3> )
\ <name3> から <val5> を引いた値が <name1> と等しいとき <val2> 、そうでなければ <val6> を <name4> とする\	\ <name4> = <val2> if <name3> - <val5> == <name1> else <val6> \	if <name3> - <val5> == <name1> else <name4> = <val6> \
<name3> に <name1> を加えた値を <val6> で割った余りが <val2> と等しいとき、	if ( <name3> + <name1> ) % <val6> == <val2> :	for <name3> in ( <name3> + <name1> ) % <val6> == <val2> :
( <val5> に [ iforiinaifi > <val4> ] の長さを加えた値、 <val6> ) からなる列の <name3> の最大値が <val2> より小さいかどうか番目を出力する	print ( [ <val5> + len ( [ i for i in <name3> if i > <val4> ] ) , <val6> ] [ max ( <name3> ) < <val2> ] )	print ( [ <val5> + len ( <val4> ) , <val6> ] [ max ( <name3> ) < <val2> ] )
<name4> の <name2> 番目に <name6> を掛けた値を <name5> で割った余りを <name4> の <name2> に <val3> を加えた値番目にする	<name4> [ <name2> + <val3> ] = <name4> [ <name2> ] * <name6> % <name5>	( <name4> [ <name2> + <val3> ] = <name4> [ <name2> ] * <name6> ) % <name5>
<name6> の <name3> 番目を順に <name2> 、 <name5> 、 <name4> として、繰り返す	for <name2> , <name5> , <name4> in <name6> [ <name3> ] :	. for <name2> , <name5> , <name4> in <name6> [ <name3> ] :
<name5> ( <name1> ) のとき、	if <name5> ( <name1> ) :	continue <name5> ( <name1> ) :
<name1> の長さを <name4> の -4 番目にする	<name4> [ - 4 ] = len ( <name1> )	( len ( <name1> ) ) [ - 2 ] = len ( <name1> )
<name2> の、つまりソートされた順序を保ったまま <name6> を <name2> に挿入できる位置番目が <name6> と等しいとき、 <blk> <val1> を出力する </blk>	if <name2> [ bisect_left ( <name2> , <name6> ) ] == <name6> : <blk> print ( <val1> ) </blk>	for <name2> in <name2> [ bisect_left ( <name2> , <name6> ) ] == <name6> : <blk> print ( <val1> ) </blk>
( <name2> ) からなる列の <name6> 回分の列を <name3> とする	<name3> = [ <name2> ] * <name6>	<name3> = [ <name2> ] * <name6>
次は例外に関する条件がある <blk> 入力された文字列の両端から空白改行を取り除いた文字列のリストを <name4> とする </blk>	try : <blk> <name4> = list ( input ( ) . strip ( ) ) </blk>	for try : <blk> <name4> = list ( input ( ) . strip ( ) ) </blk>
<name2> . <name4> ( <name5> )	<name2> . <name4> ( <name5> )	set ( <name2> . <name4> ( <name5> ) )
<name6> の <name3> を <name5> の <name4> の <name2> にする	<name5> . <name4> . <name2> = <name6> . <name3>	<name2> . <name5> . <name4> . <name2> = <name6> . <name3>
<name6> に <val3> を掛けた値を <name1> とする	<name1> = <name6> * <val3>	( <name1> = <name6> * <val3> )
0 から <name5> 未満までの数列の各要素を <name3> とし、 <name4> ( ) の整数値の列を <name6> とする	<name6> = [ int ( <name4> ( ) ) for <name3> in range ( <name5> ) ]	<name4> = [ int ( <name4> ( ) ) for <name3> in range ( <name5> ) ]
( <val6> ) からなる列の <name1> 回分の列を <name2> とする	<name2> = [ <val6> ] * <name1>	<name2> = [ <val6> ] * <name1>
<name3> をソートした列を <name6> とする <val2> を <name4> とする	<name6> = sorted ( <name3> ) <name4> = <val2>	<name1> = sorted ( <name3> ) <name4> = <val2>
<name1> 、 <val5> 、 <name2> を出力する	print ( <name1> , <val5> , <name2> )	print ( <name1> , <val5> , <name2> )
<name5> ( ) の両端から空白改行を取り除いた文字列を空白で分割した字句列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name5> ( ) . strip ( ) . split ( )	<name6> , <name4> = <name5> ( ) . strip ( ) . split ( )
<name3> かつ <name3> の <val4> 番目が <name6> と等しくなくまたは <name3> の <val5> 番目が <name6> と等しくない間、次を繰り返す	while <name3> and ( <name3> [ <val4> ] is <name6> or <name3> [ <val5> ] is <name6> ) :	del ( <name3> and <name3> [ <val4> ] != <name6> or <name3> [ <val5> ] is <name6> ) :
改行せずに <name4> の <name5> 番目の <name3> から <val6> を引いた値番目を出力する	print ( <name4> [ <name5> ] [ <name3> - <val6> ] , end = '' )	print ( <name4> [ <name5> ] [ <name3> - <val6> ] , end = '' )
<name4> の <val3> に <name6> を掛けた値から <val5> を引いた値番目、 <name4> の <val3> に <name6> を掛けた値番目の最小値を <name4> の <name6> から <val5> を引いた値番目にする	<name4> [ <name6> - <val5> ] = min ( <name4> [ <val3> * <name6> - <val5> ] , <name4> [ <val3> * <name6> ] )	<name6> [ <val5> ] = min ( <name4> [ <val3> * <name6> - <val5> ] , <name4> [ <val3> * <name6> ] )
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name3> 、 <name5> 、 <name4> とする	<name3> , <name5> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name3> , <name5> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name4> の <name5> の <name1> の <name2> 番目と等しい要素の最初の位置番目を <name6> とする	<name6> = <name4> [ <name5> . index ( <name1> [ <name2> ] ) ]	<name4> = <name4> [ <name5> . index ( <name1> [ <name2> ] ) ]
<name6> の <name2> の <name5> 番目から <name6> の <name2> の <name4> 番目を引いた値を返す	return <name6> . <name2> [ <name5> ] - <name6> . <name2> [ <name4> ]	yield <name6> . <name2> [ <name5> ] - <name6> . <name2> [ <name4> ]
<name2> ( <name4> , <name3> ) を <name1> とする	<name1> = <name2> ( <name4> , <name3> )	<name1> = <name2> ( <name4> , <name3> )
<name4> に <name6> を掛けた値から <name1> に <name3> を掛けた値を引いた値を <name2> とする	<name2> = <name4> * <name6> - <name1> * <name3>	<name2> = <name4> * <name6> - <name1> * <name3>
<name5> の総和が <name2> と等しいとき、	if sum ( <name5> ) == <name2> :	for <name5> in sum ( <name5> ) == <name2> :
<name1> の <name4> に <name3> を加えた値番目を <name5> の <name4> に <name3> に <name2> から <name6> を引いた値を加えた値を <name2> から <name4> を引いた値で割った余りを加えた値番目にする	<name5> [ <name4> + ( ( <name3> + ( <name2> - <name6> ) ) % ( <name2> - <name4> ) ) ] = <name1> [ <name4> + <name3> ]	[ <name5> + ( <name4> + <name3> ) + ( <name3> + ( <name2> - <name6> ) ) % ( <name2> - <name4> ) ] = <name1> [ <name4> + <name3> ]
<name3> が <name6> に含まれかつ <name2> が <name6> に含まれるとき、	if <name3> in <name6> and <name2> in <name6> :	list in <name3> in <name6> and <name2> in <name6> :
<name2> の <val4> 、 <name3> から <name6> を引いた値の最大値番目を <val1> だけ増加させる	<name2> [ max ( <val4> , <name3> - <name6> ) ] += <val1>	<name2> [ max ( <val4> , <name3> - <name6> ) ] += <val1>
<name5> に <name5> を掛けた値から <name4> 未満までの <name5> 間隔の数列を順に <name2> として、繰り返す <blk> 偽を <name6> の <name2> 番目にする </blk>	for <name2> in range ( <name5> * <name5> , <name4> , <name5> ) : <blk> <name6> [ <name2> ] = False </blk>	for <name2> in range ( <name5> * <name5> , <name4> , <name5> ) : <blk> <name6> [ <name2> ] = False </blk>
<name1> の末尾に <name5> の <name4> 番目を追加する	<name1> . append ( <name5> [ <name4> ] )	<name1> . append ( <name5> [ <name4> ] )
<name1> の <name3> 番目でない間、次を繰り返す	while not <name1> [ <name3> ] :	del not <name1> [ <name3> ] :
<name3> の末尾に <name6> から <val2> を引いた値を追加する	<name3> . append ( <name6> - <val2> )	<name3> . append ( <name6> - <val2> )
<name2> の <name6> 番目の <name5> 番目が <name4> と等しいとき、	if <name2> [ <name6> ] [ <name5> ] == <name4> :	[ if <name2> [ <name6> ] [ <name5> ] == <name4> :
<name6> を <name4> ( [ <name1> , <name5> , <name2> -1 , <name3> , <name6> ] ) に <name4> の <val1> 番目を掛けた値だけ増加させる	<name6> += <name4> ( [ <name1> , <name5> , <name2> - 1 , <name3> , <name6> ] ) * <name4> [ <val1> ]	<name2> += <name4> ( [ <name1> , <name5> , <name2> - <val1> , <name3> , <name6> ] ) * <name4> [ <val1> ]
<name6> の長さに <name5> の長さを加えた値を <name2> とする	<name2> = len ( <name6> ) + len ( <name5> )	<name2> = len ( <name6> ) + len ( <name5> )
<name4> から <val3> を引いた値から <name6> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> - <val3> , <name6> , - <val3> ) :	in for <name4> - <val3> , <name6> , - <val3> in range ( - <val3> ) :
<name4> . <name3> ( <val6> , <name1> -1 ) を出力する	print ( <name4> . <name3> ( <val6> , <name1> - 1 ) )	print ( <name4> . <name3> ( <val6> , <name1> - 1 ) )
<name3> ( <name5> ) に <val1> を加えた値に <name6> の文字列を加えた値に <val4> を加えた値に <name5> に <name6> を掛けた値の文字列を加えた値を出力する	print ( <name3> ( <name5> ) + <val1> + <name3> ( <name6> ) + <val4> + <name3> ( <name5> * <name6> ) )	( <name3> ( <name5> ) + <val1> ) + str ( <name6> ) + <val4> + str ( <name5> * <name6> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの集合を <name4> とする	<name4> = set ( list ( map ( int , input ( ) . split ( ) ) ) )	<name4> = set ( list ( map ( int , input ( ) . split ( ) ) ) )
<name2> に <val4> を加えた値を <val6> で割った商を <name5> とする	<name5> = ( <name2> + <val4> ) // <val6>	<name5> = ( <name2> + <val4> ) // <val6>
<name2> を <val3> だけ増加させる <name4> ( <name6> , <name5> , <name1> )	<name2> += <val3> <name4> ( <name6> , <name5> , <name1> )	<name1> += <name2> += <val3> <name4> ( <name6> , <name5> , <name1> )
入力された文字列を空白で分割した字句列の各要素に <name4> をパラメータとして <name4> の整数値を返す関数を適用した列を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) )	<name3> , <name1> = map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) )
ソートされた順序を保ったまま <name6> の <val2> 番目の整数値を <name4> に挿入できる最後の位置を <name1> とする	<name1> = bisect . bisect_right ( <name4> , int ( <name6> [ <val2> ] ) )	<name1> = bisect_right ( <name4> , int ( <name6> [ <val2> ] ) , L )
<val1> に <name6> を掛けた値を四捨五入した整数値を出力する	print ( round ( <val1> * <name6> ) )	<val1> print ( int ( round ( <val1> * <name6> ) ) )
<name5> ( <name1> ( <name6> , <val4> ) ) を <name3> とする	<name3> = <name5> ( <name1> ( <name6> , <val4> ) )	else = <name5> ( <name1> ( <name6> , <val4> ) )
<name6> ( <name5> -1 ) が <name6> ( <name3> -1 ) と等しくないとき、	if <name6> ( <name5> - 1 ) != <name6> ( <name3> - 1 ) :	!= <name6> ( <name5> - 1 ) != <name6> ( <name3> - 1 ) :
<name3> の <name2> 番目の末尾に [ MASK ] を追加するを <name5> とする	<name5> = <name3> [ <name2> ] . append	( <name5> = <name3> [ <name2> ] . append )
<name6> ( <name3> . <name5> / <name1> , <name3> . <name2> / <name1> ) を返す	return <name6> ( <name3> . <name5> / <name1> , <name3> . <name2> / <name1> )	yield <name6> ( <name3> . <name5> / <name1> , <name3> . <name2> / <name1> )
<name4> の <name5> 番目が <name4> の <name5> に <val6> を加えた値番目と等しいとき、	if <name4> [ <name5> ] == <name4> [ <name5> + <val6> ] :	continue <name4> [ <name5> ] == <name4> [ <name5> + <val6> ] :
0 から <val4> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val4> ) :	) for <name1> in range ( <val4> ) :
<val5> を <name6> の <name1> 番目の <name3> 番目にする	<name6> [ <name1> ] [ <name3> ] = <val5>	<name4> [ <name1> ] [ <name3> ] = <val5>
<name6> {} : を出力する	print ( <name6> { i + 1 } : )	[ print ( <name6> ^ 0 ] )
( ( <val5> , -1 ) 、 ( <val4> , -1 ) 、 ( <val3> , -1 ) ) からなる辞書	{ <val5> : - 1 , <val4> : - 1 , <val3> : - 1 }	open ( <val5> : - 1 , <val4> : - 1 , <val3> : - 1 } )
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列の整数値の列を <name4> とする	<name4> = [ int ( input ( ) ) for <name2> in range ( <name5> ) ]	<name4> = [ int ( input ( ) ) for <name2> in range ( <name5> ) ]
<name2> かつ <name2> の末尾の <val1> 番目が <name3> と等しいとき、	if <name2> and <name2> [ - 1 ] [ <val1> ] == <name3> :	list ( <name2> and <name2> [ - 1 ] [ <val1> ] == <name3> ) :
<name1> の <name2> 番目に <name3> を加えた値が <name1> の <name4> 番目より小さいとき、	if <name1> [ <name2> ] + <name3> < <name1> [ <name4> ] :	for <name1> [ <name2> ] + <name3> < <name1> [ <name4> ] :
<name3> の先頭を取り出した値を <name1> とする	<name1> = <name3> . pop ( )	<name1> = <name3> . pop ( )
<name1> の <name2> に <name5> を加えた値から、つまり末尾までの部分列を <name4> とする	<name4> = <name1> [ <name2> + <name5> : ]	<name4> = <name1> [ <name2> + <name5> : ]
<name1> の末尾に ( - <name2> 、 <name5> ) の組を追加する	<name1> . append ( ( - <name2> , <name5> ) )	not <name1> . append ( ( - <name2> , <name5> ) )
<name6> が <val4> 以上かつ <name3> の <name6> 番目が <name5> より大きい間、次を繰り返す	while <name6> >= <val4> and <name3> [ <name6> ] > <name5> :	del <name6> >= <val4> and <name3> [ <name6> ] > <name5> :
<name5> の <name1> に <name4> を挿入する	<name5> . insert ( <name1> , <name4> )	<name1> . insert ( <name1> , <name4> )
<val2> から <name5> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 <name1> の末尾に <name3> を追加するの列	[ <name1> . append ( <name3> ) for <name3> in range ( <val2> , <name5> + <val6> ) ]	<name1> . append ( [ <name1> . append ( <name3> ) for <name3> in range ( <val2> , <name5> + <val6> ) ] )
<name1> の <name3> の <name5> 番目に <name6> を加えた値を <name1> の <name3> の <name2> 番目にする	<name1> . <name3> [ <name2> ] = <name1> . <name3> [ <name5> ] + <name6>	<name1> . <name3> [ <name2> ] = <name1> . <name3> [ <name5> ] + <name6>
<name1> ( <name5> + <name4> , <name3> + <name6> )	<name1> ( <name5> + <name4> , <name3> + <name6> )	<name2> ( <name5> + <name4> , <name3> + <name6> )
<val3> を <name2> の <val5> 番目にする	<name2> [ <val5> ] = <val3>	( <name2> [ <val5> ] = <val3> )
<name3> を <val5> で割った余りが <val2> と等しいとき、 <blk> <val1> を出力する </blk>	if <name3> % <val5> == <val2> : <blk> print ( <val1> ) </blk>	if <name3> % <val5> == <val2> : <blk> print ( <val1> ) </blk>
% s : % d を ( <name1> 、 <name5> ) の組で割った余りを出力する	print ( '%s : %d' % ( <name1> , <name5> ) )	print ( drawing % ( <name1> , <name5> ) )
<name3> の <name6> から <val1> を引いた値番目の <name5> に <val1> を加えた値番目を <val1> だけ増加させる	<name3> [ <name6> - <val1> ] [ <name5> + <val1> ] += <val1>	<name1> [ <name6> - <val1> ] [ <name5> + <val1> ] += <val1>
<name2> の <name3> の <name6> 番目の <name4> 番目の <val5> 番目を <name1> だけ増加させる	<name2> . <name3> [ <name6> ] [ <name4> ] [ <val5> ] += <name1>	( <name2> . <name3> [ <name6> ] [ <name4> ] [ <val5> ] ) += <name1>
<name3> に <name1> を加えた値、 <name6> に <name5> を加えた値を <name4> 、 <name2> とする	<name4> , <name2> = <name3> + <name1> , <name6> + <name5>	<name3> , <name2> = <name3> + <name1> , <name6> + <name5>
改行せずに <val3> を書式として <name1> 、 <name6> の <name1> 番目で整形した文字列を出力する	print ( <val3> . format ( <name1> , <name6> [ <name1> ] ) , end = '' )	<name5> . format ( <name1> , <name6> [ <name1> ] ) , end = '' )
<name1> の <name4> 番目を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <name1> [ <name4> ]	<name1> [ <name5> ] = <name1> [ <name4> ]
<name4> の末尾に <name1> の <name6> から <val5> を引いた値番目を追加する	<name4> . append ( <name1> [ <name6> - <val5> ] )	<name4> . append ( <name1> [ <name6> - <val5> ] )
\ <name4> ( <val5> % <name2> ) \	\ <name4> ( <val5> % <name2> ) \	) <name4> ( <val5> % <name2> ) \
<name1> と <name5> の最大公約数、 <name1> に <name5> を掛けた値を <name1> と <name5> の最大公約数で割った商を出力する	print ( math . gcd ( <name1> , <name5> ) , ( <name1> * <name5> ) // math . gcd ( <name1> , <name5> ) )	[ print ( gcd ( <name1> , <name5> ) , <name1> * <name5> // gcd ( <name1> , <name5> ) )
<name1> ( <name6> , <name2> , <name3> , <name4> , <name5> , <name1> , <name6> , <name2> ) を <name5> とする	<name5> = <name1> ( <name6> , <name2> , <name3> , <name4> , <name5> , <name1> , <name6> , <name2> )	else = <name1> ( <name6> , <name2> , <name3> , <name4> , <name5> , <name1> , <name6> , <name2> )
<name3> ( <val6> , <name1> -1 ) を出力する	print ( <name3> ( <val6> , <name1> - 1 ) )	print ( <name3> ( <val6> , <name1> - 1 ) )
<name5> . <name6> ( ) を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name5> . <name6> ( )	<name2> , <name3> = <name5> . <name6> ( )
<val4> から <name6> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> , <name6> ) :	continue in range ( <val4> , <name6> ) :
<val1> に <name4> の <name5> を加えた値に <name3> を加えた値を <name6> とする	<name6> = <val1> + <name4> . <name5> + <name3>	<name6> = <val1> + <name4> . <name5> + <name3>
\ <name3> ( <val4> % <name5> ( <val1> , <val1> ) ) \	\ <name3> ( <val4> % <name5> ( <val1> , <val1> ) ) \	for <name3> in <name3> ( <val4> % <name5> ( <val1> , <val1> ) ) \
( ( <val4> ) からなる列の <val4> から <val5> 未満までの数列の各要素を <name2> とし、 <val6> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val4> ] * [ <val6> for <name2> in range ( <val5> ) ] ]	<name3> = [ [ <val4> ] * [ <val6> for <name2> in range ( <val5> ) ] ]
<name1> 、 <name5> 、 <name2> 、 <name6> から <name2> を引いた値、 <name3> の最小値の最大値を <name1> とする	<name1> = max ( <name1> , min ( <name5> , <name2> , <name6> - <name2> , <name3> ) )	<name1> = max ( <name1> , min ( <name5> , <name2> , <name6> - <name2> , <name3> ) )
<name1> の <val2> 番目から <name1> の先頭を引いた値を <name6> とする	<name6> = <name1> [ <val2> ] - <name1> [ 0 ]	<name6> = <name1> [ <val2> ] - <name1> [ <val2> ]
( <val5> ) からなる列の <val1> を <name3> だけ左シフトした値回分の列を <name6> とする	<name6> = [ <val5> ] * ( <val1> << <name3> )	<name6> = [ <val5> ] * ( <val1> << <name3> )
<name1> ( <name3> , ( <name4> , <name2> ) )	<name1> ( <name3> , ( <name4> , <name2> ) )	<name1> ( <name3> , ( <name4> , <name2> ) )
<name3> の最小値が <val4> より大きいかどうかに [ MASK ] を加えた値を出力する	print ( + ( min ( <name3> ) > <val4> ) )	print ( + ( min ( <name3> ) > <val4> ) )
( ( <val5> ) からなる列の <val5> から <name3> に <val4> を加えた値未満までの数列の各要素を <name1> とし、 <name2> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val5> ] * [ <name2> for <name1> in range ( <name3> + <val4> ) ] ]	<name6> = [ [ <val5> ] * [ <name2> for <name1> in range ( <name3> + <val4> ) ] ]
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name2> 、 <name3> とする	<name4> , <name1> , <name2> , <name3> = map ( int , <name5> ( ) . split ( ) )	<name3> , <name1> , <name2> , <name3> = map ( int , <name5> ( ) . split ( ) )
<name1> の <name4> に番号付した組の列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in enumerate ( <name1> . <name4> ) :	for <name5> , <name3> in enumerate ( <name1> . <name4> ) :
<name5> の <name2> 番目が <name6> と等しいとき、	if <name5> [ <name2> ] == <name6> :	continue <name5> [ <name2> ] == <name6> :
<name4> を <name1> に <name2> を掛けた値だけ増加させる <name5> を <name6> に <name2> を掛けた値だけ増加させる	<name4> += <name1> * <name2> <name5> += <name6> * <name2>	<name5> += <name4> += <name1> * <name2> <name5> += <name6> * <name2>
<name4> モジュールを用いる	from <name4> import atan , atan2 , degrees , pi , cos , sin	return from <name4> import deque
<name4> <name6> <name5> <name1> <name3>	<name4> <name6> <name5> <name1> <name3>	( <name4> <name6> <name5> <name1> <name3> )
<name1> . <name6> ( <name2> ) を <name5> とする	<name5> = <name1> . <name6> ( <name2> )	else = <name1> . <name6> ( <name2> )
<name2> . <name5> ( <val1> )	<name2> . <name5> ( <val1> )	max ( <name2> . <name5> ( <val1> ) )
<name1> . <name3> ( ) を <name6> とする	<name6> = <name1> . <name3> ( )	<name6> = <name1> . <name3> ( )
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の列を <name2> とする	<name2> = [ input ( ) for <name6> in range ( <name3> ) ]	<name2> = [ input ( ) for <name6> in range ( <name3> ) ]
<name6> を ( <name4> の先頭に <name4> の <val5> 番目を加えた値に <name4> の <val3> 番目を加えた値 ) からなる列に ( <name4> の <val2> 番目に <name4> の <val5> 番目を加えた値に <name4> の <val1> 番目を加えた値 ) からなる列を加えた値だけ増加させる	<name6> += [ <name4> [ 0 ] + <name4> [ <val5> ] + <name4> [ <val3> ] ] + [ <name4> [ <val2> ] + <name4> [ <val5> ] + <name4> [ <val1> ] ]	<name1> += [ <name4> [ 0 ] + <name4> [ <val5> ] + <name4> [ <val3> ] ] + [ <name4> [ <val2> ] + <name4> [ <val5> ] + <name4> [ <val1> ] ]
<name4> が <val5> と等しくないとき、 <blk> <val3> を出力する </blk>	if <name4> != <val5> : <blk> print ( <val3> ) </blk>	if <name4> != <val5> : <blk> print ( <val3> ) </blk>
<name3> の <val1> に <name4> に <val6> を加えた値を掛けた値に <val6> を加えた値番目を <name5> の <name3> の先頭番目の <name3> の <val1> に <name4> に <val6> を加えた値を掛けた値番目番目にする	<name5> [ <name3> [ 0 ] ] [ <name3> [ <val1> * ( <name4> + <val6> ) ] ] = <name3> [ <val1> * ( <name4> + <val6> ) + <val6> ]	<name2> [ <name3> [ 0 ] ] [ <name3> [ <val1> * ( <name4> + <val6> ) ] = <name3> [ <val1> * ( <name4> + <val6> ) + <val6> ]
<name3> の <name5> から <val1> を引いた値番目の <name4> 番目が <name6> と等しくかつ <name2> の <name5> から <val1> を引いた値番目の <name4> 番目が、つまり偽と等しいとき、	if <name3> [ <name5> - <val1> ] [ <name4> ] == <name6> and <name2> [ <name5> - <val1> ] [ <name4> ] == False :	for <name3> in <name3> [ <name5> - <val1> ] [ <name4> ] == <name6> and <name2> [ <name5> - <val1> ] [ <name4> ] == False :
<name4> が <val3> と等しくかつ <name5> のとき、	if <name4> == <val3> and <name5> :	if <name4> == <val3> and <name5> :
<name5> を展開し、それぞれ <name4> 、 <name2> 、 <name3> 、 <name6> とする	<name4> , <name2> , <name3> , <name6> = <name5>	<name4> , <name2> , <name3> , <name6> = <name5>
<name1> ( <name5> [ <val2> : ] , <name6> , <name3> , <name4> , <name1> ) を <name4> とする	<name4> = <name1> ( <name5> [ <val2> : ] , <name6> , <name3> , <name4> , <name1> )	<name6> = <name1> ( <name5> [ <val2> : ] , <name6> , <name3> , <name4> , <name1> )
<name3> の <name4> を返す	return <name3> . <name4>	yield <name3> . <name4>
<name5> の末尾に ( <name2> 、 <name1> ) の組を追加する	<name5> . append ( ( <name2> , <name1> ) )	<name4> . append ( ( <name2> , <name1> ) )
<name1> ( <name2> ) ( * <name5> )	<name1> ( <name2> ) ( * <name5> )	<name1> ( <name2> ) ( * <name5> )
<name1> を <name5> の <name1> 座標にする	<name5> . <name1> = <name1>	( <name5> . <name1> = <name1> )
<name4> の <name2> 番目のとき、	if <name4> [ <name2> ] :	list if <name4> [ <name2> ] :
<name5> を <name3> の <name4> 番目の <name6> 番目が <val1> と等しいかどうかだけ増加させる	<name5> += ( <name3> [ <name4> ] [ <name6> ] == <val1> )	<name1> += ( <name3> [ <name4> ] [ <name6> ] == <val1> )
<name1> から <val3> を引いた値から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> - <val3> , - <val3> , - <val3> ) :	for <name4> in range ( <name1> - <val3> , - <val3> , - <val3> ) :
<name5> の先頭から <name3> を探して見つかった位置が <name5> の先頭から <name2> を探して見つかった位置と等しいかどうかを返す	return ( <name5> . find ( <name3> ) == <name5> . find ( <name2> ) )	x return <name5> . find ( <name3> ) == <name5> . find ( <name2> )
<name2> の末尾に ( <name5> 、 <name4> 、 <name6> 、 <name3> ) からなる列を追加する	<name2> . append ( [ <name5> , <name4> , <name6> , <name3> ] )	<name2> . append ( [ <name5> , <name4> , <name6> , <name3> ] )
次は例外に関する条件がある <blk> <name3> ( <name2> , <name6> ( ) . <name4> ( ) ) のリストの総和の文字列の長さを出力する </blk>	try : <blk> print ( len ( str ( sum ( list ( <name3> ( <name2> , <name6> ( ) . <name4> ( ) ) ) ) ) ) ) </blk>	try : <blk> print ( len ( str ( str ( sum ( <name3> ( <name2> , <name6> ( ) . <name4> ( ) ) ) ) ) ) </blk>
( ( <name4> 、 <name5> ) の組、 ( <name2> から <name4> を引いた値を <name6> で割った値、 <name3> から <name5> を引いた値を <name6> で割った値 ) の組、 ( <name1> から <name4> を引いた値を <name4> で割った値、 <name5> から <name5> を引いた値を <name4> で割った値 ) の組 ) の組を <name1> とする	<name1> = ( ( <name4> , <name5> ) , ( ( <name2> - <name4> ) / <name6> , ( <name3> - <name5> ) / <name6> ) , ( ( <name1> - <name4> ) / <name4> , ( <name5> - <name5> ) / <name4> ) )	<name6> = ( ( <name4> , <name5> ) , ( ( <name2> - <name4> ) / <name6> , ( <name3> - <name5> ) / <name6> ) , ( ( <name1> - <name4> ) / <name4> , ( <name5> - <name5> ) / <name4> )
<name4> ( <val2> + <val1> * <name5> , <name3> ) に <name4> ( <name6> + <val4> -2 * <name5> , <name3> ) を掛けた値を <name3> で割った余りを <name6> とする	<name6> = <name4> ( <val2> + <val1> * <name5> , <name3> ) * <name4> ( <name6> + <val4> - <val1> * <name5> , <name3> ) % <name3>	<name6> = <name4> ( <val2> + <val1> * <name5> , <name3> ) * <name4> ( <name6> + <val4> - 2 * <name5> , <name3> ) % <name3>
<name4> 、 <name5> の最大値を <name4> とする	<name4> = max ( <name4> , <name5> )	count = max ( <name4> , <name5> )
<name3> の <name6> の <name2> 番目の長さが <name4> に <name5> を加えた値より大きいとき、	if len ( <name3> . <name6> [ <name2> ] ) > <name4> + <name5> :	for <name3> in len ( <name3> . <name6> [ <name2> ] ) > <name4> + <name5> :
<name6> に <val4> を掛けた値を <name5> とする	<name5> = <name6> * <val4>	else = <name6> * <val4>
\ <name3> ( <val1> % <name4> ) \	\ <name3> ( <val1> % <name4> ) \	) <name3> ( <val1> % <name4> ) \
<name1> の <name5> 番目が <name2> と等しいとき、 <blk> ( <name1> 、空列 ) の組を返す </blk>	if <name1> [ <name5> ] == <name2> : <blk> return ( <name1> , [ ] ) </blk>	\ if <name1> [ <name5> ] == <name2> : <blk> return ( <name1> , [ ] ) </blk>
<name2> をパラメータとして <name2> の先頭を返す関数をキーとして <name5> のキーと値の集まりをソートした列を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in sorted ( <name5> . items ( ) , <name1> = lambda <name2> : <name2> [ 0 ] ) :	. for <name1> , <name6> in sorted ( <name5> . items ( ) , key = lambda <name2> : <name2> [ 0 ] ) :
<name2> の <val1> 番目の整数値を <name5> とする	<name5> = int ( <name2> [ <val1> ] )	else = int ( <name2> [ <val1> ] )
<name4> の <val5> 番目が <name1> に含まれるとき <name1> の <name4> の先頭番目、そうでなければ <val5> を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <name1> [ <name4> [ <val5> ] ] if <name4> [ <val5> ] in <name1> else <val5>	<name2> [ <name3> ] = <name1> [ <name4> [ <val5> ] ] if <name4> [ <val5> ] in <name1> else <val5>
<name1> をパラメータとして ( <name1> の <val3> 番目、 <name1> の <val4> 番目、 <name1> の <val6> 番目 ) の組を返す関数をキーとして <name2> をソートした列を <name5> とする	<name5> = sorted ( <name2> , key = lambda <name1> : ( <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ <val6> ] ) )	<name4> = sorted ( <name2> , key = lambda <name1> : ( <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ <val6> ] ) )
<name2> に <name3> を加えた値を返す	return <name2> + <name3>	yield <name2> + <name3>
<name3> を <name5> で割った値を <name2> とする	<name2> = <name3> / <name5>	( <name2> = <name3> / <name5> )
<val2> を書式として <name5> 、 <name6> で整形した文字列を <name4> とする	<name4> = <val2> . format ( <name5> , <name6> )	<name4> = <val2> . format ( <name5> , <name6> )
<name6> を空白で分割した字句列の各要素に整数を適用した列のリストを <name6> とする	<name6> = list ( map ( int , <name6> . split ( ) ) )	<name6> = list ( map ( int , <name6> . split ( ) ) )
<name5> ( <name6> ) を返す	return <name5> ( <name6> )	yield <name5> ( <name6> )
空列を <name2> とする <name3> に <name1> を加えた値を <name5> とする	<name2> = [ ] <name5> = <name3> + <name1>	<name2> = [ ] <name5> = <name3> + <name1>
<name3> の先頭を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name3> [ 0 ]	( <name1> , <name6> = <name3> [ 0 ] )
<name2> を <val5> を <name6> の <name1> 番目の <name4> 番目の順序数から <val3> の順序数を引いた値だけ左シフトした値との論理和にする	<name2> | = <val5> << ( ord ( <name6> [ <name1> ] [ <name4> ] ) - ord ( <val3> ) )	<name4> << = <val5> << ( ord ( <name6> [ <name1> ] [ <name4> ] ) - ord ( <val3> ) )
<name1> ( <name6> ( <name5> ( ) ) ) を出力する	print ( <name1> ( <name6> ( <name5> ( ) ) ) )	print ( <name1> ( <name6> ( <name5> ( ) ) ) )
<name3> の <name2> 番目を <name4> とする	<name4> = <name3> [ <name2> ]	str = <name3> [ <name2> ]
<name1> ( <val2> , <val2> , <name4> . <name3> // <val6> , <val2> ) を返す	return <name1> ( <val2> , <val2> , <name4> . <name3> // <val6> , <val2> )	yield <name1> ( <val2> , <val2> , <name4> . <name3> // <val6> , <val2> )
<name1> の <name3> から <val5> を引いた値番目から <name1> の <name3> 番目を引いた値を <name4> とする	<name4> = <name1> [ <name3> - <val5> ] - <name1> [ <name3> ]	<name4> = <name1> [ <name3> - <val5> ] - <name1> [ <name3> ]
( 、つまり未定値 ) からなる列の <name4> の <name3> 回分の列を <name2> とする	<name2> = [ None ] * <name4> . <name3>	<name2> = [ None ] * <name4> . <name3>
<val1> 、 <val2> 、 <val6> を <name3> 、 <name5> 、 <name4> とする	<name3> , <name5> , <name4> = <val1> , <val2> , <val6>	<name3> , <name5> , <name4> = <val1> , <val2> , <val6>
<name2> に <val1> 、 <name5> から <name3> を引いた値の最大値に <name6> を掛けた値を加えた値を <name4> とする	<name4> = <name2> + max ( <val1> , <name5> - <name3> ) * <name6>	<name4> = <name2> + max ( <val1> , <name5> - <name3> ) * <name6>
( <name5> 、 <name3> ) の組を <name2> の <name4> 番目にする	<name2> [ <name4> ] = ( <name5> , <name3> )	( <name5> , <name3> ) = ( <name5> , <name3> )
{ : . 10 f }を書式として <name5> ( <name4> ) で整形した文字列を出力する	print ( '{:.10f}' . format ( <name5> ( <name4> ) ) )	<name4> . print ( '{:.10f}' . format ( <name5> ( <name4> ) ) )
<name2> の集合と <name5> の集合の論理積のリストを <name6> とする	<name6> = list ( set ( <name2> ) & set ( <name5> ) )	<name6> = list ( set ( <name2> ) & set ( <name5> ) )
<name5> の末尾に <name3> ( ) を追加する	<name5> . append ( <name3> ( ) )	<name1> . append ( <name3> ( ) )
<name1> ( - <name6> , <val4> )	<name1> ( - <name6> , <val4> )	<name4> ( - <name6> , <val4> )
<name3> の <name5> から <name6> を引いた値から <val2> を引いた値番目が <val1> と等しくないとき、 <blk> <name4> を <val2> だけ増加させる </blk>	if <name3> [ <name5> - <name6> - <val2> ] != <val1> : <blk> <name4> += <val2> </blk>	<blk> if <name3> [ <name5> - <name6> - <val2> ] != <val1> : <blk> <name4> += <val2> </blk>
<name4> ( <name3> , <name6> ) を展開し、それぞれ <name2> 、 <name5> 、 <name1> とする	<name2> , <name5> , <name1> = <name4> ( <name3> , <name6> )	<name2> , <name5> , <name1> = <name4> ( <name3> , <name6> )
<val5> を <name3> の <name6> にする	<name3> . <name6> = <val5>	( <name3> . <name6> = <val5> )
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> 、 <name1> とする	<name6> , <name5> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )	<name5> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )
<val5> を辞書の <val1> 番目にする	dict [ <val1> ] = <val5>	count [ <val1> ] = <val5>
<name5> 、 <name4> の最大値の最大値を <name5> とする	<name5> = max ( <name5> , max ( <name4> ) )	<name5> = max ( <name5> , max ( <name4> ) )
<name5> の末尾に ( <name1> 、 <name6> の整数値 ) からなる列を追加する	<name5> . append ( [ <name1> , int ( <name6> ) ] )	<name5> . append ( [ <name1> , int ( <name6> ) ] )
<name1> の <val5> 番目から、つまり末尾までの部分列の整数値を <name3> とする	<name3> = int ( <name1> [ <val5> : ] )	<name3> = int ( <name1> [ <val5> : ] )
<name6> の <name3> 番目を <name2> だけ増加させる	<name6> [ <name3> ] += <name2>	( <name6> [ <name3> ] += <name2> )
<name2> を <name1> の <name3> 番目の <name4> 番目に <name5> の <name4> 番目の <name6> 番目を掛けた値だけ増加させる	<name2> += <name1> [ <name3> ] [ <name4> ] * <name5> [ <name4> ] [ <name6> ]	( <name2> += <name1> [ <name3> ] [ <name4> ] * <name5> [ <name4> ] [ <name6> ] )
<name3> が <val4> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name3> == <val4> : <blk> break </blk>	list ( <name3> == <val4> ) : <blk> break </blk>
<name1> を <name5> で割った余りが <val6> と等しいとき、	if <name1> % <name5> == <val6> :	continue <name1> % <name5> == <val6> :
<name3> の末尾の末尾を除いた部分列の総和を <name3> の末尾の -1 番目にする	<name3> [ - 1 ] [ - 1 ] = sum ( <name3> [ - 1 ] [ : - 1 ] )	<name3> [ - 1 ] [ - 1 ] = sum ( <name3> [ - 1 ] [ : - 1 ] )
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name5> の <name4> にする	<name5> . <name4> = [ [ ] for <name6> in range ( <name3> ) ]	<name1> . <name4> = [ [ ] for <name6> in range ( <name3> ) ]
<name3> ( <name2> , <name4> , <name5> , <name6> ) を <name1> とする	<name1> = <name3> ( <name2> , <name4> , <name5> , <name6> )	<name1> = <name3> ( <name2> , <name4> , <name5> , <name6> )
<name2> 、 <name3> 、 <val1> において正規表現 <name5> が最初にマッチする位置を <name4> とする	<name4> = search ( <name5> , <name2> , <name3> , <val1> )	<name4> = search ( <name5> , <name2> , <name3> , <val1> )
S {}を書式として <name5> から <val6> を引いた値で整形した文字列を出力する	print ( 'S{}' . format ( <name5> - <val6> ) )	print ( '?' . format ( <name5> - <val6> ) )
<name1> の <name4> の <name5> の先頭番目の末尾に <name5> の <val6> 番目を追加する	<name1> . <name4> [ <name5> [ 0 ] ] . append ( <name5> [ <val6> ] )	<name1> . <name4> [ <name5> [ 0 ] ] . append ( <name5> [ <val6> ] )
<name1> の <name2> が、つまり未定値と等しくないとき、	if <name1> . <name2> != None :	for <name1> . <name2> != None :
<name2> が <name6> より小さいとき、	if <name2> < <name6> :	list < <name2> < <name6> :
<name3> を <val4> で割った余りが <val5> と等しい間、次を繰り返す <blk> <name3> を <val4> 分の一にする </blk>	while <name3> % <val4> == <val5> : <blk> <name3> /= <val4> </blk>	\ <name3> % <val4> == <val5> : <blk> <name3> // = <val4> </blk>
<name1> を <name4> の <name3> の <name2> 番目にする	<name4> . <name3> [ <name2> ] = <name1>	( <name4> . <name3> [ <name2> ] = <name1> )
<name1> を順に <name6> として、繰り返す <blk> <name3> の <name6> を <val5> で割った余り番目を <val2> だけ増加させる </blk>	for <name6> in <name1> : <blk> <name3> [ <name6> % <val5> ] += <val2> </blk>	: for <name6> in <name1> : <blk> <name3> [ <name6> % <val5> ] += <val2> </blk>
<name2> ( <name3> ) を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name2> ( <name3> )	<name3> , <name1> = <name2> ( <name3> )
<name4> の -1 番目が <name2> より小さいとき、	if <name4> [ - 1 ] < <name2> :	while <name4> [ - 1 ] < <name2> :
<name4> の <name1> 番目の <name2> 番目が、つまり未定値と等しいとき、	if <name4> [ <name1> ] [ <name2> ] is not None :	list if <name4> [ <name1> ] [ <name2> ] is not None :
<name6> の先頭、 <name6> の <val4> 番目を <name2> 、 <name1> とする	<name2> , <name1> = <name6> [ 0 ] , <name6> [ <val4> ]	<name2> , <name1> = <name6> [ 0 ] , <name6> [ <val4> ]
<name3> を <val2> との排他的論理和にする	<name3> ^ = <val2>	not = <name3> ^ = <val2>
<name3> . <name2> ( <name5> ) が <name5> と等しいとき、 <blk> <name4> を <val1> だけ増加させる </blk>	if <name3> . <name2> ( <name5> ) == <name5> : <blk> <name4> += <val1> </blk>	\ <name3> . <name2> ( <name5> ) == <name5> : <blk> <name4> += <val1> </blk>
<name1> ( <name6> , <name2> , <name3> -3 ) を <name6> とする	<name6> = <name1> ( <name6> , <name2> , <name3> - 3 )	<name6> = <name1> ( <name6> , <name2> , <name3> - 3 )
<name6> の <name4> の <name2> から <val5> を引いた値番目に <name6> の <name3> の <name1> から <val5> を引いた値番目を掛けた値に <name6> の <name3> の <name2> から <name1> を引いた値番目を掛けた値を返す	return <name6> . <name4> [ <name2> - <val5> ] * <name6> . <name3> [ <name1> - <val5> ] * <name6> . <name3> [ <name2> - <name1> ]	x return <name6> . <name4> [ <name2> - <val5> ] * <name6> . <name3> [ <name1> - <val5> ] * <name6> . <name3> [ <name2> - <name1> ]
<name6> の <name4> 番目かつ <name6> の <name5> 番目のとき、 <blk> <name2> を <val1> だけ増加させる </blk>	if <name6> [ <name4> ] and <name6> [ <name5> ] : <blk> <name2> += <val1> </blk>	for <name6> in <name6> [ <name4> ] and <name6> [ <name5> ] : <blk> <name2> += <val1> </blk>
( <val4> ) からなる列の <name3> に <val2> を加えた値回分の列を <name1> とする	<name1> = [ <val4> ] * ( <name3> + <val2> )	<name1> = [ <val4> ] * ( <name3> + <val2> )
<name2> の先頭を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name2> [ 0 ]	( <name4> , <name1> = <name2> [ 0 ] )
<name5> の <val4> に <val4> を挿入する	<name5> . insert ( <val4> , <val4> )	<name1> . insert ( <val4> , <val4> )
入力された文字列を <val4> で分割した字句列を <name1> とする	<name1> = input ( ) . split ( <val4> )	<name1> = input ( ) . split ( <val4> )
<name2> をソートする	<name2> . sort ( )	<name2> . sort ( )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列に番号付した組の列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in enumerate ( map ( int , input ( ) . split ( ) ) ) :	. for <name1> , <name4> in enumerate ( map ( int , input ( ) . split ( ) ) ) :
<name4> . <name5> ( <name3> ) が <name4> . <name5> ( <name2> ) と等しいかどうかを返す	return <name4> . <name5> ( <name3> ) == <name4> . <name5> ( <name2> )	x return <name4> . <name5> ( <name3> ) == <name4> . <name5> ( <name2> )
<name2> ( <name6> , ( <name3> , <name4> ) )	<name2> ( <name6> , ( <name3> , <name4> ) )	set ( <name2> ( <name6> , ( <name3> , <name4> ) ) )
<name6> ( <name1> . <name5> ) を <name1> の <name5> にする	<name1> . <name5> = <name6> ( <name1> . <name5> )	dict . <name5> = <name6> ( <name1> . <name5> )
<name5> の <name4> 番目の <val1> 番目が <name5> の <name4> から <val1> を引いた値番目の <val1> 番目より小さいとき、	if <name5> [ <name4> ] [ <val1> ] < <name5> [ <name4> - <val1> ] [ <val1> ] :	while <name5> [ <name4> ] [ <val1> ] < <name5> [ <name4> - <val1> ] [ <val1> ] :
\ <name1> ( <val5> % <name6> ( <name3> ) ) \	\ <name1> ( <val5> % <name6> ( <name3> ) ) \	\ <name1> ( <val5> % <name6> ( <name3> ) ) \
<val1> を <name5> とする <val2> の <val4> 乗に <val4> を加えた値を <name6> とする	<name5> = <val1> <name6> = <val2> ** <val4> + <val4>	<name5> = <val1> <name6> = <val2> ** <val4> + <val4>
<name6> の <val1> 番目を <name5> の <name2> にする	<name5> . <name2> = <name6> [ <val1> ]	<name1> . <name2> = <name6> [ <val1> ]
( <val1> 、 <val2> ) の組	( <val1> , <val2> )	<val6> ( <val1> , <val2> )
<name1> ( <name2> , <name6> )	<name1> ( <name2> , <name6> )	<name4> ( <name2> , <name6> )
<name6> の <name2> が <name4> と等しくないとき、	if <name6> . <name2> is <name4> :	while <name6> . <name2> != <name4> :
<name4> から <val5> を引いた値の間、次を繰り返す	while <name4> - <val5> :	del <name4> - <val5> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name3> 、 <name2> 、 <name1> 、 <name4> 、 <name6> とする	<name5> , <name3> , <name2> , <name1> , <name4> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name3> , <name2> , <name1> , <name4> , <name6> = map ( int , input ( ) . split ( ) )
<name5> に <val4> を掛けた値を <name1> とする	<name1> = <name5> * <val4>	( <name1> = <name5> * <val4> )
<name3> の両端から空白改行を取り除いた文字列に番号付した組の列を順に <name6> 、 <name4> として、繰り返す	for <name6> , <name4> in enumerate ( <name3> . strip ( ) ) :	( <name6> , <name4> in enumerate ( <name3> . strip ( ) ) :
<name2> . <name1> ( <name6> , <name3> , <name4> )	<name2> . <name1> ( <name6> , <name3> , <name4> )	set ( <name2> . <name1> ( <name6> , <name3> , <name4> ) )
<name4> から <val1> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> , <val1> ) :	. for <name5> in range ( <name4> , <val1> ) :
<val3> を <name6> の <name2> の <name5> 番目の <name4> 番目にする	<name6> . <name2> [ <name5> ] [ <name4> ] = <val3>	( <name6> [ <name2> . <name5> ] [ <name4> ] = <val3> )
<name5> から <name4> を引いた値をそうでなければ、とする	else = <name5> - <name4>	if <name5> - <name4> else = <name5> - <name4>
入力された文字列の整数値を無限の整数列とする	count = int ( input ( ) )	count = int ( input ( ) )
<name3> の <name5> ( <name4> ) 番目を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name3> [ <name5> ( <name4> ) ]	<name3> [ <name2> ] = <name3> [ <name5> ( <name4> ) ]
<name4> ( <name5> , <name1> + ( <name2> - <name3> ) / <val6> ) を <name6> とする	<name6> = <name4> ( <name5> , <name1> + ( <name2> - <name3> ) / <val6> )	<name6> = <name4> ( <name5> , <name1> + ( <name2> - <name3> ) / <val6> )
<name3> の <name5> 番目が、つまり未定値と等しいとき、	if <name3> [ <name5> ] == None :	while <name3> [ <name5> ] is not None :
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name6> とする	<name3> , <name1> , <name6> = map ( int , input ( ) . split ( <val4> ) )	<name3> , <name1> , <name6> = map ( int , input ( ) . split ( <val4> ) )
<val3> 進表記、つまり入力された文字列の整数値を <name5> とする	<name5> = int ( input ( ) , <val3> )	else = int ( input ( ) , <val3> )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの先頭を除いた部分列の集合を <name4> とする	<name4> = set ( list ( map ( int , <name1> ( ) . split ( ) ) ) [ 1 : ] )	<name2> <name4> = set ( list ( map ( int , <name1> ( ) . split ( ) ) ) [ 1 : ] )
<val1> の <name2> から <val5> を引いた値乗に対する <name2> の剰余が <val5> と等しいかどうかを返す	return pow ( <val1> , <name2> - <val5> , <name2> ) == <val5>	x return pow ( <val1> , <name2> - <val5> , <name2> ) == <val5>
<name1> の先頭を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = map ( int , <name1> [ 0 ] . split ( ) )	<name4> , <name3> = map ( int , <name1> [ 0 ] . split ( ) )
<name5> の <val6> 番目を <name3> の y 座標にする	<name3> . y = <name5> [ <val6> ]	<name3> . y = <name5> [ <val6> ]
( <name2> の <val3> 番目から <name1> の先頭を引いた値、 <name2> の <val5> 番目から <name1> の <val5> 番目を引いた値 ) の組を <name6> とする	<name6> = ( <name2> [ <val3> ] - <name1> [ <val3> ] , <name2> [ <val5> ] - <name1> [ <val5> ] )	<name6> = ( <name2> [ <val3> ] - <name1> [ <val3> ] , <name2> [ <val5> ] - <name1> [ <val5> ] )
<name6> の <val5> 個までのコンビネーションを順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in combinations ( <name6> , <val5> ) :	( <name3> , <name1> in combinations ( <name6> , <val5> ) :
<val3> から <name5> の長さから <val6> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , len ( <name5> ) - <val6> ) :	. for <name4> in range ( <val3> , len ( <name5> ) - <val6> ) :
heisei 、 <name2> から <val6> を引いた値、 <name1> 、 <name5> を出力する	print ( 'heisei' , <name2> - <val6> , <name1> , <name5> )	print ( 'meiji' , <name2> - <val6> , <name1> , <name5> )
{ : . 3 f } { : . 3 f }を書式として <name5> 、 <name4> で整形した文字列を出力する	print ( '{:.3f} {:.3f}' . format ( <name5> , <name4> ) )	range ( {1:.5f}' . format ( <name5> , <name4> ) )
入力された文字列を空白で分割した字句列の各要素に <name3> を適用した列のリストを展開し、それぞれ <name3> 、 <name2> 、 <name5> 、 <name1> 、 <name6> 、 <name4> とする	<name3> , <name2> , <name5> , <name1> , <name6> , <name4> = list ( map ( <name3> , input ( ) . split ( ) ) )	<name3> , <name2> , <name5> , <name1> , <name6> , <name4> = list ( map ( <name3> , input ( ) . split ( ) ) )
( <val6> 、 <val4> 、 <val3> 、 <val1> 、 <val5> 、 <val2> 、 <val6> 、 <val4> ) からなる列を <name2> とする	<name2> = [ <val6> , <val4> , <val3> , <val1> , <val5> , <val2> , <val6> , <val4> ]	<name2> = [ <val6> , <val4> , <val3> , <val1> , <val5> , <val2> , <val6> , <val4> ]
<name6> を <name4> だけ減少させる	<name6> -= <name4>	not <name6> -= <name4>
<name6> に <name2> を加えた値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = <name6> + <name2>	( <name1> [ <name3> ] = <name6> + <name2> )
<name1> を <name5> の <val3> 番目にする	<name5> [ <val3> ] = <name1>	( <name5> [ <val3> ] = <name1> )
<val6> を <name4> を <name5> とするとするを <name1> とする	<name1> = <name5> = <name4> = <val6>	<name1> = <name5> = <name4> = <val6>
0 から <name3> 未満までの数列の各要素を <name6> とし、 <name2> ( ) の整数値の列を <name4> とする	<name4> = [ int ( <name2> ( ) ) for <name6> in range ( <name3> ) ]	<name4> = [ int ( <name2> ( ) ) for <name6> in range ( <name3> ) ]
<name2> を <name4> だけ減少させる <name5> を <name1> だけ減少させる	<name2> -= <name4> <name5> -= <name1>	<name1> -= <name4> <name5> -= <name1>
<name1> の <name2> 番目の末尾に ( <name3> 、 <name4> ) の組を追加する	<name1> [ <name2> ] . append ( ( <name3> , <name4> ) )	<name1> [ <name2> ] . append ( ( <name3> , <name4> ) )
<name6> の y 座標が <name2> の y 座標より大きいとき、	if <name6> . y > <name2> . y :	if <name6> . y > <name2> . y :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> 、 <name6> とする	<name4> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name5> , <name6> = map ( int , input ( ) . split ( ) )
<name6> が <name1> から <val3> を引いた値以上のとき、	if <name6> >= <name1> - <val3> :	if <name6> >= <name1> - <val3> :
<name6> ( <name1> ) を出力する	print ( <name6> ( <name1> ) )	print ( <name6> ( <name1> ) )
偽	False	input ( False )
<name6> に対応する値、もし存在しなければ <name2> 、 <val4> 、 <name3> に <val1> を加えた値の最大値を <name6> の <name2> 番目にする	<name6> [ <name2> ] = max ( <name6> . get ( <name2> , <val4> ) , <name3> + <val1> )	<name6> [ <name2> ] = max ( <name6> . get ( <name2> , <val4> ) , <name3> + <val1> )
0 から <name1> の長さから <val6> を引いた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name1> ) - <val6> ) :	) for <name5> in range ( len ( <name1> ) - <val6> ) :
( <val1> ) からなる列の <val2> を <name5> だけ左シフトした値回分の列を <name4> とする	<name4> = [ <val1> ] * ( <val2> << <name5> )	<name4> = [ <val1> ] * ( <val2> << <name5> )
<val3> が <name4> 以下かどうかが <val6> 以下のとき、	if <val3> <= <name4> <= <val6> :	list ( <val3> <= <name4> <= <val6> ) :
0 から <name1> に <val2> を加えた値未満までの数列の各要素を <name5> とし、、つまり未定値の列を <name6> とする	<name6> = [ None for <name5> in range ( <name1> + <val2> ) ]	<name6> = [ None for <name5> in range ( <name1> + <val2> ) ]
<name5> の <name1> 番目を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name5> [ <name1> ] :	for <name3> , <name6> in <name5> [ <name1> ] :
入力された文字列を <val3> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name2> とする	<name5> , <name1> , <name2> = map ( int , input ( ) . split ( <val3> ) )	<name3> , <name1> , <name2> = map ( int , input ( ) . split ( <val3> ) )
<name2> の <name5> から <val6> を引いた値番目を展開し、それぞれ <name3> 、 <name1> とする <name2> の <name5> 番目を展開し、それぞれ <name4> 、 <name3> とする	<name3> , <name1> = <name2> [ <name5> - <val6> ] <name4> , <name3> = <name2> [ <name5> ]	<name1> , <name3> = <name2> [ <name5> - <val6> ] <name4> , <name3> = <name2> [ <name5> ]
<name6> の順序数を <name3> とする	<name3> = ord ( <name6> )	<name3> = ord ( <name6> )
<name2> が <name1> より小さくまたは <name3> が <name4> より小さくかつ <name2> が <val5> に <name1> を掛けた値より小さくかつ <name3> が <val5> に <name4> を掛けた値より小さい間、次を繰り返す	while ( <name2> < <name1> or <name3> < <name4> ) and ( <name2> < <val5> * <name1> ) and ( <name3> < <val5> * <name4> ) :	insort ( <name2> < <name1> or <name3> < <name4> and <name2> < <val5> * <name1> and <name3> < <val5> * <name4> ) :
<name1> ( <name6> , <name2> , <name5> + <val4> )	<name1> ( <name6> , <name2> , <name5> + <val4> )	<name5> ( <name1> ( <name6> , <name2> , <name5> + <val4> ) )
<name5> ( <name6> [ <val2> ] ) が -1 と等しくないとき、	if <name5> ( <name6> [ <val2> ] ) != - <val2> :	for <name5> in <name5> ( <name6> [ <val2> ] ) != - <val2> :
空列を <name1> とする空列を <name4> とする	<name1> = [ ] <name4> = [ ]	<name2> = [ ] <name4> = [ ]
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を <name2> とする	<name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<val6> に <name2> から <name5> を引いた値を掛けた値を <name3> とする	<name3> = <val6> * ( <name2> - <name5> )	else = <val6> * ( <name2> - <name5> )
<name1> を <name3> から <val6> を引いた値だけ増加させる	<name1> += ( <name3> - <val6> )	<name1> += ( <name3> - <val6> )
<name4> の <name3> の <name1> の <name6> 番目の <name1> の <name5> 番目の <name2> を <name4> だけ増加させる	<name4> . <name3> [ <name1> . <name6> ] [ <name1> . <name5> ] . <name2> += <name4>	( <name4> . <name3> [ <name1> . <name6> ] [ <name1> . <name5> ] . <name2> += <name4> )
<name2> かつ <name6> のとき、	if <name2> and <name6> :	for <name2> and <name6> in <name2> and <name6> :
<name2> の <name1> に <val5> を加えた値番目の <name4> 番目のとき、	if <name2> [ <name1> + <val5> ] [ <name4> ] :	[ if <name2> [ <name1> + <val5> ] [ <name4> ] :
<name1> 、 <name5> の <val2> 番目から、つまり末尾までの <val4> 間隔による部分列の最大値の最大値を <name1> とする	<name1> = max ( <name1> , max ( <name5> [ <val2> : : <val4> ] ) )	<name1> = max ( <name1> , max ( <name5> [ <val2> : : <val4> ] ) )
<name5> の <val3> 乗に <name1> の <val3> 乗を加えた値が <name6> の <val3> 乗と等しいとき、	if <name5> ** <val3> + <name1> ** <val3> == <name6> ** <val3> :	list ( <name5> ** <val3> + <name1> ** <val3> == <name6> ** <val3> :
<name4> の <name1> 番目の <val3> 番目を <name2> とする	<name2> = <name4> [ <name1> ] [ <val3> ]	\ <name2> = <name4> [ <name1> ] [ <val3> ]
<name2> の <name3> 番目が <name5> より小さいとき、	if <name2> [ <name3> ] < <name5> :	while <name2> [ <name3> ] < <name5> :
( <val1> ) からなる列の <name2> の <name3> 回分の列を <name2> の <name6> にする	<name2> . <name6> = [ <val1> ] * <name2> . <name3>	<name2> . <name6> = [ <val1> ] * <name2> . <name3>
<val5> を <name2> の <name3> の先頭の <val6> 番目にする	<name2> . <name3> [ <val6> ] [ <val6> ] = <val5>	<name4> . <name2> [ <name3> [ <val6> ] [ <val6> ] = <val5>
<name3> に <val1> を加えた値が <name6> の <name2> の <name5> 番目から <val4> を引いた値番目と等しいとき、	if <name3> + <val1> == <name6> [ <name2> [ <name5> ] - <val4> ] :	> <name3> + <val1> == <name6> [ <name2> [ <name5> ] - <val4> ] :
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> 、 <name1> 、 <name3> 、 <name2> とする	<name6> , <name5> , <name1> , <name3> , <name2> = map ( int , <name4> ( ) . split ( ) )	<name5> , <name1> , <name3> , <name2> = map ( int , <name4> ( ) . split ( ) )
<name6> が <val1> と等しくなくかつ <name3> が <val1> と等しくないとき、	if <name6> != <val1> and <name3> != <val1> :	raise if <name6> != <val1> and <name3> != <val1> :
<val5> を書式として <name1> 、 <name4> 、 <name2> 、 <name3> 、 <name6> 、 <name5> 、 <name1> で整形した文字列を <name6> とする	<name6> = <val5> . format ( <name1> , <name4> , <name2> , <name3> , <name6> , <name5> , <name1> )	<name6> = <val5> . format ( <name1> , <name4> , <name2> , <name3> , <name6> , <name5> , <name1> )
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列のリストを展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = list ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )	<name3> , <name5> = list ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )
<name6> の末尾に <name3> の <name5> [ <name2> ] から <val4> を引いた値を <val1> で割った余りに <val6> を加えた値番目を追加する	<name6> . append ( <name3> [ ( <name5> [ <name2> ] - <val4> ) % <val1> + <val6> ] )	<name6> . append ( <name3> [ ( <name5> [ <name2> ] - <val4> ) % <val1> + <val6> ] )
<name6> の <name4> 番目の順序数から <val2> の順序数を引いた値を <name1> とする	<name1> = ord ( <name6> [ <name4> ] ) - ord ( <val2> )	<name1> = ord ( <name6> [ <name4> ] ) - ord ( <val2> )
<name1> が <name2> 以上のとき、 <blk> <name5> の <name2> 番目の <name1> 番目を <name5> の <name2> から <val4> を引いた値番目の <name1> から <name2> を引いた値番目に <name5> の <name2> 番目の <name1> から <name2> を引いた値番目を加えた値だけ増加させる </blk>	if <name1> >= <name2> : <blk> <name5> [ <name2> ] [ <name1> ] += <name5> [ <name2> - <val4> ] [ <name1> - <name2> ] + <name5> [ <name2> ] [ <name1> - <name2> ] </blk>	for if <name1> in <name2> : <blk> <name5> [ <name2> ] [ <name1> ] += <name5> [ <name2> - <val4> ] [ <name1> - <name2> ] + <name5> [ <name2> ] [ <name1> - <name2> ] </blk>
<name4> の <name6> 番目が <name4> の <name1> 番目より大きいとき、	if <name4> [ <name6> ] > <name4> [ <name1> ] :	raise <name4> [ <name6> ] > <name4> [ <name1> ] :
<name3> の <name1> 番目の <name2> 番目、 <name3> の <name1> に <val4> を加えた値番目の <name2> 番目の最大値を <name3> の <name1> に <val4> を加えた値番目の <name2> 番目にする	<name3> [ <name1> + <val4> ] [ <name2> ] = max ( <name3> [ <name1> ] [ <name2> ] , <name3> [ <name1> + <val4> ] [ <name2> ] )	<name4> [ <name1> + <val4> ] [ <name2> ] = max ( <name3> [ <name1> ] [ <name2> ] , <name3> [ <name1> + <val4> ] [ <name2> ] )
<name1> に <name4> を加えた値の整数値を <name5> とする	<name5> = int ( <name1> + <name4> )	else = int ( <name1> + <name4> )
<name4> と <val6> を割ったときの ( 商を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = divmod ( <name4> , <val6> )	<name3> , <name4> = divmod ( <name4> , <val6> )
% . 16 f を <name1> ( ) で割った余りを出力する	print ( '%.16f' % <name1> ( ) )	print ( %.16f' % <name1> ( ) )
<val6> から <name4> 未満までの数列の各要素を <name5> とし、 <val6> の列を <name3> とする	<name3> = [ <val6> for <name5> in range ( <name4> ) ]	<name4> = [ <val6> for <name5> in range ( <name4> ) ]
<name2> の末尾に ( <name5> 、 <val1> の浮動小数点数、 <name3> ) の組を追加する	<name2> . append ( ( <name5> , float ( <val1> ) , <name3> ) )	<name4> . append ( ( <name5> , float ( <val1> ) , <name3> ) )
<name6> が <name1> より大きいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> > <name1> : <blk> continue </blk>	if <name6> > <name1> : <blk> continue </blk>
<name3> の <name2> の <name6> 番目を <name1> だけ増加させる	<name3> . <name2> [ <name6> ] += <name1>	<name3> . <name2> [ <name6> ] += <name1>
( <val3> ) からなる列の <name4> の <name6> 回分の列を <name2> とする	<name2> = [ <val3> ] * <name4> . <name6>	<name2> = [ <val3> ] * <name4> . <name6>
<name2> ( ) . <name3> ( ) の各要素に <name6> を適用した列をソートした列の逆順を展開してを出力する	print ( * sorted ( map ( <name6> , <name2> ( ) . <name3> ( ) ) ) [ : : - 1 ] )	print ( * sorted ( map ( <name6> , <name2> ( ) . <name3> ( ) ) ) [ : : - 1 ] )
<name4> に <name4> に <name1> を掛けた値を <val6> で割った値を加えた値の整数値を <name2> とする	<name2> = int ( <name4> + <name4> * <name1> / <val6> )	<name2> = int ( <name4> + <name4> * <name1> / <val6> )
<name1> の <name3> に <val4> を掛けた値番目、 <name1> の <name3> に <val4> を掛けた値に <val6> を加えた値番目の最小値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = min ( <name1> [ <name3> * <val4> ] , <name1> [ <name3> * <val4> + <val6> ] )	<name6> [ <name3> ] = min ( <name1> [ <name3> * <val4> ] , <name1> [ <name3> * <val4> + <val6> ] )
<name4> を <name3> の <name5> 番目の <name6> 番目の <name1> 番目にする	<name3> [ <name5> ] [ <name6> ] [ <name1> ] = <name4>	<name1> [ <name5> ] [ <name6> ] [ <name1> ] = <name4>
<name2> の <name4> に <val3> を加えた値番目の <name1> に <name5> の <val3> 番目を加えた値番目、 <name2> の <name4> 番目の <name1> 番目に <name5> の先頭を加えた値の最大値を <name2> の <name4> に <val3> を加えた値番目の <name1> に <name5> の <val3> 番目を加えた値番目にする	<name2> [ <name4> + <val3> ] [ <name1> + <name5> [ <val3> ] ] = max ( <name2> [ <name4> + <val3> ] [ <name1> + <name5> [ <val3> ] ] , <name2> [ <name4> ] [ <name1> ] + <name5> [ 0 ] )	<name2> [ <name4> + <val3> ] [ <name1> + <name5> + <val3> ] = max ( <name2> [ <name4> + <val3> ] [ <name1> + <name5> [ <val3> ] ] , <name2> [ <name4> ] [ <name1> ] + <name5> [ 0 ] )
<name5> が <val2> と等しくなくかつ <name1> が <val2> と等しくないとき、	if <name5> != <val2> and <name1> != <val2> :	for <name5> != <val2> and <name1> != <val2> :
<name2> の <name4> 番目、 <name5> の <name4> 番目を <name5> の <name4> 番目、 <name2> の <name4> 番目とする	<name5> [ <name4> ] , <name2> [ <name4> ] = <name2> [ <name4> ] , <name5> [ <name4> ]	<name5> [ <name4> ] , <name2> [ <name4> ] = <name2> [ <name4> ] , <name5> [ <name4> ]
<name2> 、 <name1> を <name2> で割った余り、 <name4> に <val5> を加えた値を <name1> 、 <name2> 、 <name4> とする	<name1> , <name2> , <name4> = <name2> , <name1> % <name2> , <name4> + <val5>	<name1> , <name2> , <name4> = <name2> , <name1> % <name2> , <name4> + <val5>
<name5> を順に <name1> 、 <name4> 、 <name3> として、繰り返す	for <name1> , <name4> , <name3> in <name5> :	. for <name1> , <name4> , <name3> in <name5> :
<name3> を <name1> の <name5> から <val6> を引いた値だけ増加させる	<name3> += <name1> . <name5> - <val6>	( <name3> += <name1> . <name5> - <val6> )
<name1> 内の <name5> と等しい要素を取り除く	<name1> . remove ( <name5> )	not <name1> . remove ( <name5> )
<name3> の先頭から <name6> の <val1> 番目から、つまり末尾までの部分列を探して見つかった位置	<name3> . find ( <name6> [ <val1> : ] )	<name3> . find ( <name6> [ <val1> : ] )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )	<name3> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )
<name3> . <name2> ( <val1> ** <val4> )	<name3> . <name2> ( <val1> ** <val4> )	( <name3> . <name2> ( <val1> ** <val4> ) )
<val1> から <name2> を引いた値から <name6> を引いた値を <name3> とする	<name3> = <val1> - <name2> - <name6>	<name3> = <val1> - <name2> - <name6>
<name2> . <name6> ( <name4> . <name5> ) を <name3> とする	<name3> = <name2> . <name6> ( <name4> . <name5> )	<name3> = <name2> . <name6> ( <name4> . <name5> )
<name4> の <name5> に <name4> に <name3> を掛けた値を加えた値を返す	return <name4> . <name5> + <name4> * <name3>	yield <name4> . <name5> + <name4> * <name3>
<name6> を <val3> だけ増加させる <name4> を <name5> だけ増加させる	<name6> += <val3> <name4> += <name5>	<name2> += <val3> <name4> += <name5>
<name5> の <name3> 番目を <val4> だけ増加させる	<name5> [ <name3> ] += <val4>	<name4> [ <name3> ] += <val4>
偽を <name3> の <name1> 番目にする	<name3> [ <name1> ] = False	( <name3> [ <name1> ] = False )
<name3> 、 <name4> の最小値から <val5> を引いた値を返す	return min ( <name3> , <name4> ) - <val5>	x = min ( <name3> , <name4> ) - <val5>
<name2> の先頭を <name4> の <val3> 番目とするを <name5> とする	<name5> = <name4> [ <val3> ] = <name2> [ 0 ]	<name3> = <name4> [ <val3> ] = <name2> [ 0 ]
<val3> 、 <val3> を <name6> 、 <name2> とする	<name6> , <name2> = <val3> , <val3>	<name1> , <name2> = <val3> , <val3>
<name1> . <name3> ( <name5> )	<name1> . <name3> ( <name5> )	not <name1> . <name3> ( <name5> )
<name5> に <val1> を掛けた値を <name3> で割った値を <name6> とする	<name6> = <name5> * <val1> / <name3>	<name6> = <name5> * <val1> / <name3>
<name1> の、つまり先頭から <val4> に <name6> を加えた値までの部分列を削除する	del <name1> [ : <val4> + <name6> ]	| = <name1> [ : <val4> + <name6> ]
<name5> ( <name4> [ <name6> ] , <name4> [ <name6> - <name1> ] + <name3> ) ( <name1> <= <name6> <= <name2> ) を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name5> ( <name4> [ <name6> ] , <name4> [ <name6> - <name1> ] + <name3> ) ( <name1> <= <name6> <= <name2> )	<name5> [ <name4> . <name6> ] = <name5> ( <name4> [ <name6> ] , <name4> [ <name6> - <name1> ] + <name3> ) ( <name1> <= <name6> <= <name2> )
( <name2> ) からなる列の <name3> 回分の列を <name5> とする	<name5> = [ <name2> ] * <name3>	else = [ <name2> ] * <name3>
<name4> と <name5> の共通部分をソートした列を順に <name1> として、繰り返す	for <name1> in sorted ( <name4> . intersection ( <name5> ) ) :	: for <name1> in sorted ( <name4> . intersection ( <name5> ) ) :
<name2> が <name3> の <name1> 番目の <name6> 番目に含まれないとき、	if <name2> not in <name3> [ <name1> ] [ <name6> ] :	list not in <name2> not in <name3> [ <name1> ] [ <name6> ] :
<name6> を <name5> の <name4> の <val2> 番目にする	<name5> . <name4> [ <val2> ] = <name6>	<name2> . <name4> [ <val2> ] = <name6>
<name6> の <name5> に <val3> を加えた値番目を <name4> とする	<name4> = <name6> [ <name5> + <val3> ]	<name4> = <name6> [ <name5> + <val3> ]
<name5> の <name1> 番目の <val4> 番目を返す	return <name5> [ <name1> ] [ <val4> ]	yield <name5> [ <name1> ] [ <val4> ]
<val4> を <name2> の <name1> の <name5> 番目にする	<name2> . <name1> [ <name5> ] = <val4>	<name4> . <name2> [ <name1> . <name5> ] = <val4>
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )	<name2> , <name1> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )
<name3> の <name5> の <val4> 番目番目の末尾に <name5> の <val6> 番目を追加する	<name3> [ <name5> [ <val4> ] ] . append ( <name5> [ <val6> ] )	<name3> [ <name5> [ <val4> ] ] . append ( <name5> [ <val6> ] )
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = map ( int , input ( ) . split ( <val1> ) )	<name5> , <name2> = map ( int , input ( ) . split ( <val1> ) )
<name6> の長さが <val5> より大きいとき、	if len ( <name6> ) > <val5> :	continue len ( <name6> ) > <val5> :
<name1> の <name4> に [ MASK ] を書き込むを <name2> とする	<name2> = <name1> . <name4> . <name2>	<name1> . <name2> = <name1> . <name4> . <name2>
<name5> の <val2> 番目を <name1> の <name5> の <val4> 番目番目にする	<name1> [ <name5> [ <val4> ] ] = <name5> [ <val2> ]	<name1> [ <name5> [ <val4> ] ] = <name5> [ <val2> ]
<val1> を <name5> の <name2> に <val3> を加えた値番目にする	<name5> [ <name2> + <val3> ] = <val1>	<name4> [ <name2> + <val3> ] = <val1>
<name1> に <name1> から <val2> を引いた値を掛けた値を <val4> で割った値の整数値を <name5> とする	<name5> = int ( <name1> * ( <name1> - <val2> ) / <val4> )	<name5> = int ( <name1> * ( <name1> - <val2> ) / <val4> )
<name4> の <name6> 番目が <val1> と等しいとき、 <blk> <name3> の末尾に <name6> を追加する </blk>	if <name4> [ <name6> ] == <val1> : <blk> <name3> . append ( <name6> ) </blk>	for if <name4> [ <name6> ] == <val1> : <blk> <name3> . append ( <name6> ) </blk>
<name1> の <name5> の <name1> の先頭から <name2> を探して見つかった位置番目を返す	return <name1> . <name5> [ <name1> . find ( <name2> ) ]	yield <name1> . <name5> [ <name1> . find ( <name2> ) ]
<val6> を <name5> の <name3> にする	<name5> . <name3> = <val6>	<name4> . <name3> = <val6>
<name1> を <name6> 内の <val5> の出現回数だけ増加させる	<name1> += <name6> . count ( <val5> )	<name1> += <name6> . count ( <val5> )
<name5> を <name6> で割った商を <name5> とする	<name5> = <name5> // <name6>	( <name5> = <name5> // <name6> )
<name6> から <name2> を引いた値から <val5> を引いた値に <name3> に <val5> を加えた値の <val4> 乗を加えた値から <name1> を引いた値を <name1> とする	<name1> = <name6> - <name2> - <val5> + ( <name3> + <val5> ) ** <val4> - <name1>	<name1> = <name6> - <name2> - <val5> + ( <name3> + <val5> ) ** <val4> - <name1>
<name5> の <val2> 番目から -2 番目までの部分列の整数値を <name6> とする	<name6> = int ( <name5> [ <val2> : - <val2> ] )	<name6> = int ( <name5> [ <val2> : - <val2> ] )
<name4> に <val1> を加えた値から <name3> に <val1> を加えた値、 <name6> の長さから <name2> を引いた値に <val1> を加えた値の最小値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val1> , min ( <name3> + <val1> , len ( <name6> ) - <name2> + <val1> ) ) :	. for <name5> in range ( <name4> + <val1> , min ( <name3> + <val1> , len ( <name6> ) - <name2> + <val1> ) ) :
( <name4> ) からなる列に [ MASK ] を加えた値に <name5> ( <name4> , <name2> , <name1> -1 ) を加えた値	+ [ <name4> ] + <name5> ( <name4> , <name2> , <name1> - 1 )	now + <name5> ( <name4> , <name2> , <name1> - 1 )
入力された文字列を <val3> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val3> ) ]	<name2> , <name5> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val3> ) ]
<name3> の <name2> 番目が <name5> の <name2> 番目と等しいとき、	if <name3> [ <name2> ] == <name5> [ <name2> ] :	continue if <name3> [ <name2> ] == <name5> [ <name2> ] :
( <val1> ) からなる列の <name5> に <val1> を加えた値回分の列を <name4> とする	<name4> = [ <val1> ] * ( <name5> + <val1> )	<name4> = [ <val1> ] * ( <name5> + <val1> )
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name6> in range ( <name1> ) ]	<name3> = [ [ ] for <name6> in range ( <name1> ) ]
<name6> の <name4> の <name2> 番目番目を <val5> だけ増加させる	<name6> [ <name4> [ <name2> ] ] += <val5>	<name1> [ <name4> [ <name2> ] ] += <val5>
<val6> を <name1> とする	<name1> = <val6>	( <name1> = <val6> )
<name2> を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in <name2> :	. for <name5> , <name6> in <name2> :
<name3> の <name4> から <name2> を引いた値から <val6> を引いた値番目の <name2> 番目を <name3> の <name4> から <name2> を引いた値から <val5> を引いた値番目の <name2> 番目、 <name3> の <name4> から <name2> を引いた値から <val6> を引いた値番目の <name2> から <val6> を引いた値番目の最大値だけ増加させる	<name3> [ <name4> - <name2> - <val6> ] [ <name2> ] += max ( <name3> [ <name4> - <name2> - <val5> ] [ <name2> ] , <name3> [ <name4> - <name2> - <val6> ] [ <name2> - <val6> ] )	<name4> [ <name2> - <val6> ] [ <name2> ] += max ( <name3> [ <name4> - <name2> - <val5> ] [ <name2> ] , <name3> [ <name4> - <name2> - <val6> ] [ <name2> - <val6> ] [ <name2> - <val6> ] )
<name6> の <name3> 番目が <val5> 以上かつ <name6> の <name4> から <name3> を引いた値番目が <val5> 以上のとき、	if <name6> [ <name3> ] >= <val5> and <name6> [ <name4> - <name3> ] >= <val5> :	list ( <name6> [ <name3> ] >= <val5> and <name6> [ <name4> - <name3> ] >= <val5> ) :
<name3> を <val2> で割った余りが <val1> と等しいとき <val6> 、そうでなければ <val2> を <name5> とする	<name5> = <val6> if <name3> % <val2> == <val1> else <val2>	<name5> = <val6> if <name3> % <val2> == <val1> else <val2>
<name2> の総和を <name2> の長さで割った値を <name1> とする	<name1> = sum ( <name2> ) / len ( <name2> )	<name1> = sum ( <name2> ) / len ( <name2> )
0 から <name4> に <val2> を加えた値未満までの数列の各要素を <name3> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name3> in range ( <name4> + <val2> ) ]	<name4> = [ [ ] for <name3> in range ( <name4> + <val2> ) ]
<name1> をパラメータとして <name1> の <val6> 番目を返す関数を <name4> として <name3> をソートする	<name3> . sort ( <name4> = lambda <name1> : <name1> [ <val6> ] )	<name3> . sort ( <name4> = lambda <name1> : <name1> [ <val6> ] )
<name4> の間、次を繰り返す <blk> <name4> の先頭を <name6> とする <sep> <name3> ( <name6> ) <sep> <name4> の先頭を削除する </blk>	while <name4> : <blk> <name6> = <name4> [ 0 ] <sep> <name3> ( <name6> ) <sep> del <name4> [ 0 ] </blk>	for <name6> in <name4> : <blk> <name6> = <name4> [ 0 ] <sep> del <name3> ( <name6> ) <sep> del <name4> [ 0 ] </blk>
<name3> が <val1> と等しくまたは <name5> が <val1> と等しいとき、 <blk> <name4> の末尾に <val6> を追加する </blk>	if <name3> == <val1> or <name5> == <val1> : <blk> <name4> . append ( <val6> ) </blk>	while <name3> == <val1> or <name5> == <val1> : <blk> <name4> . append ( <val6> ) </blk>
( <val6> ) からなる列の <val4> 回分の列を <name2> とする	<name2> = [ <val6> ] * <val4>	<name2> = [ <val6> ] * <val4>
<name2> の長さが <val3> と等しくないとき、	if len ( <name2> ) != <val3> :	raise len ( <name2> ) != <val3> :
<name3> の <name5> 番目が <val6> と等しいとき、	if <name3> [ <name5> ] == <val6> :	if <name3> [ <name5> ] == <val6> :
<name2> に <name5> を加えた値の絶対値に <name3> から <name1> を引いた値の絶対値を加えた値が <name6> の絶対値に <name4> の絶対値を加えた値より小さいとき、	if abs ( <name2> + <name5> ) + abs ( <name3> - <name1> ) < ( abs ( <name6> ) + abs ( <name4> ) ) :	isinstance ( abs ( <name2> + <name5> ) + abs ( <name3> - <name1> ) < abs ( <name6> ) + abs ( <name4> ) ) :
<name4> の末尾に <name5> の各要素を <name3> とし、 <name3> の列を追加する	<name4> . append ( [ <name3> for <name3> in <name5> ] )	<name4> . append ( [ <name3> for <name3> in <name5> ] )
<name5> から <name6> を引いた値の絶対値を <name1> とする	<name1> = abs ( <name5> - <name6> )	<name1> = abs ( <name5> - <name6> )
<name5> の <name2> 番目が <name4> の <name3> 番目より小さいとき、	if <name5> [ <name2> ] < <name4> [ <name3> ] :	if <name5> [ <name2> ] < <name4> [ <name3> ] :
<name3> の各要素を <name1> とし、 <name2> が <name1> 以下のときの <name3> の列の各要素を <name2> とし、 <name2> に <name1> を加えた値の列を <name4> とする	<name4> = [ <name2> + <name1> for <name2> in [ <name3> for <name1> in <name3> if <name2> <= <name1> ] ]	<name4> = [ <name2> + <name1> for <name2> in [ <name3> for <name1> in <name3> if <name2> <= <name1> ] ]
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name5> 、 <name4> とする	<name1> , <name6> , <name5> , <name4> = map ( int , <name2> . split ( ) )	<name6> , <name5> , <name4> = map ( int , <name2> . split ( ) )
<name2> 、 <name4> の要素をそれぞれ組にした列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in zip ( <name2> , <name4> ) :	. for <name5> , <name3> in zip ( <name2> , <name4> ) :
( <val4> ) からなる列の <name1> 回分の列を <name2> とする	<name2> = [ <val4> ] * <name1>	<name2> = [ <val4> ] * <name1>
\ <name1> ( <val2> % ( <val5> - ( <val5> -1 / <name4> ) ** ( <name3> * <name6> ) ) ) \	\ <name1> ( <val2> % ( <val5> - ( <val5> - <val5> / <name4> ) ** ( <name3> * <name6> ) ) ) \	for <name1> in <val2> % ( <val5> - ( <val5> - <name4> ) ** ( <name3> * <name6> ) ) \
<name3> を <name1> に <name3> を <name3> の絶対値で割った値の整数値を掛けた値だけ減少させる	<name3> -= <name1> * int ( <name3> / abs ( <name3> ) )	<name1> -= <name1> * int ( <name3> / abs ( <name3> ) )
未定値を <name3> の <name5> の <name2> にする	<name3> . <name5> . <name2> = None	( <name3> . <name5> . <name2> = None )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name6> 、 <name3> 、 <name2> 、 <name4> とする	<name5> , <name1> , <name6> , <name3> , <name2> , <name4> = map ( float , input ( ) . split ( ) )	<name4> , <name1> , <name6> , <name3> , <name2> , <name4> = map ( float , input ( ) . split ( ) )
<name6> に <name3> を加えた値に <name5> を加えた値を <val2> で割った値を <name4> とする	<name4> = ( <name6> + <name3> + <name5> ) / <val2>	<name4> = ( <name6> + <name3> + <name5> ) / <val2>
<name3> の <name6> の <name4> から読み込んだ一行を入力された文字列とする	input = <name3> . <name6> . <name4> . readline	else = <name3> . <name6> . <name4> . readline ( )
<name1> の <name6> 番目を <val3> で割った余りに <val5> を加えた値を <name1> の <name6> 番目にする	<name1> [ <name6> ] = ( <name1> [ <name6> ] ) % <val3> + <val5>	dict [ <name1> ] = ( <name1> [ <name6> ] ) % <val3> + <val5>
{}を出力する	print ( { h : . 8 f } )	print ( { ( x & 2 ) } )
<name4> の末尾に入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を追加する	<name4> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )	<name4> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )
<name5> の末尾を除いた部分列、 <name5> の先頭を除いた部分列の要素をそれぞれ組にした列の各要素を <name6> 、 <name3> とし、 <name6> の整数値に <name3> の整数値を加えた値を <val4> で割った余りの列を <name5> とする	<name5> = [ ( int ( <name6> ) + int ( <name3> ) ) % <val4> for <name6> , <name3> in zip ( <name5> [ : - 1 ] , <name5> [ 1 : ] ) ]	<name5> = [ ( int ( <name6> ) + int ( <name3> ) ) % <val4> for <name6> , <name3> in zip ( <name5> [ : - 1 ] , <name5> [ 1 : ] ) ]
<name4> の <name5> に <name2> を加えた値番目を <val1> だけ増加させる	<name4> [ <name5> + <name2> ] += <val1>	<name2> [ <name5> + <name2> ] += <val1>
<name6> の <val5> 番目の <name4> から <name6> の先頭の <name4> を引いた値に [ MASK ] を加えた値に <name6> の先頭の <name3> から <name1> の <name3> を引いた値を掛けた値	+ ( <name6> [ <val5> ] . <name4> - <name6> [ 0 ] . <name4> ) * ( <name6> [ 0 ] . <name3> - <name1> . <name3> )	+ ( <name6> [ <val5> ] . <name4> - <name6> [ 0 ] . <name4> ) * ( <name6> [ 0 ] . <name3> - <name1> . <name3> )
<val1> を <name3> の <name2> 番目から、つまり末尾までの部分列にする	<name3> [ <name2> : ] = <val1>	( <name3> [ <name2> : ] = <val1> )
<name1> の <name4> の末尾に <name1> の <name3> を追加する	<name1> . <name4> . append ( <name1> . <name3> )	. <name1> . <name4> . append ( <name1> . <name3> )
<name3> の末尾に ( -1 ) からなる列の <name5> に <val1> を加えた値回分の列を追加する	<name3> . append ( [ - 1 ] * ( <name5> + <val1> ) )	<name3> . append ( [ - 1 ] * ( <name5> + <val1> ) )
<name6> の <name4> 番目の末尾に ( <name5> の <val2> に <name3> を掛けた値に <val1> を加えた値番目、 <name5> の <val2> に <name3> を掛けた値番目 ) の組を追加する	<name6> [ <name4> ] . append ( ( <name5> [ <val2> * <name3> + <val1> ] , <name5> [ <val2> * <name3> ] ) )	<name4> [ <name4> ] . append ( ( <name5> [ <val2> * <name3> + <val1> ] , <name5> [ <val2> * <name3> ] ) )
<name6> を <name5> の <name1> 番目の <name4> 番目にする	<name5> [ <name1> ] [ <name4> ] = <name6>	( <name5> [ <name1> ] [ <name4> ] = <name6> )
<name4> ( <name1> , <name2> , <name1> [ <val6> ] )	<name4> ( <name1> , <name2> , <name1> [ <val6> ] )	<name4> ( <name1> , <name2> , <name1> [ <val6> ] )
<name5> の <val1> 乗に <name3> の <val1> 乗を加えた値が <name6> の <val1> 乗と等しいとき、	if <name5> ** <val1> + <name3> ** <val1> == <name6> ** <val1> :	list ( <name5> ** <val1> + <name3> ** <val1> == <name6> ** <val1> :
Q を <name3> の <name4> 番目にする	<name3> [ <name4> ] = 'Q'	( <name3> [ <name4> ] ) = 'Q'
<val3> から <name2> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , <name2> + <val5> ) :	. for <name4> in range ( <val3> , <name2> + <val5> ) :
<name3> の <name4> 番目が <name2> と等しくないとき、 <blk> <name4> を <val6> だけ減少させる </blk>	if <name3> [ <name4> ] != <name2> : <blk> <name4> -= <val6> </blk>	<blk> if <name3> [ <name4> ] != <name2> : <blk> <name4> -= <val6> </blk>
<name2> を <val1> で割った余りを <val3> で割った値の切り捨て整数値を <name4> とする	<name4> = math . floor ( ( <name2> % <val1> ) / <val3> )	<name4> = math . floor ( ( <name2> % <val1> ) / <val3> )
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name2> 、 <name6> 、 <name5> 、 <name1> とする	<name2> , <name6> , <name5> , <name1> = list ( map ( int , input ( ) . split ( <val4> ) ) )	<name3> , <name6> , <name5> , <name1> = list ( map ( int , input ( ) . split ( <val4> ) ) )
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name6> in range ( <name3> ) ]	<name6> = [ int ( input ( ) ) for <name6> in range ( <name3> ) ]
<name4> ( * <name6> ( <name3> , <name5> ) )	<name4> ( * <name6> ( <name3> , <name5> ) )	<name5> <name4> ( * <name6> ( <name3> , <name5> ) )
<name1> の各要素を <name4> 、 <name2> 、 <name6> とし、 ( <name5> から <name4> を引いた値、 <val3> の最大値、 <name2> 、 <name6> ) の組の列を <name1> とする	<name1> = [ ( max ( <name5> - <name4> , <val3> ) , <name2> , <name6> ) for <name4> , <name2> , <name6> in <name1> ]	<name1> = [ ( <name5> - <name4> , <val3> ) , <name2> , <name6> ) for <name4> , <name2> , <name6> in <name1> ]
<name1> の <name6> に対応する値、もし存在しなければ <val4> を <name5> とする	<name5> = <name1> . <name6> . get ( <val4> )	else = <name1> . <name6> . get ( <val4> )
<val5> が <name3> ( <name2> , <name6> ) 以下かどうかが <name4> ( <name2> ) 以下のとき、	if <val5> <= <name3> ( <name2> , <name6> ) <= <name4> ( <name2> ) :	list ( <val5> <= <name3> ( <name2> , <name6> ) <= <name4> ( <name2> ) ) :
<name2> の <name4> の <val6> 番目番目を削除する	del ( <name2> [ <name4> [ <val6> ] ] )	-= <name2> [ <name4> [ <val6> ] ]
<name4> を <name4> の <name2> 番目の <val6> に <name3> を掛けた値から <val1> を引いた値から <name5> を引いた値から <name2> を引いた値番目にする	<name4> [ <name2> ] [ <val6> * <name3> - <val1> - <name5> - <name2> ] = <name4>	<name4> [ <name2> ] [ <val6> * <name3> - <val1> - <name5> - <name2> ] = <name4>
<name5> に <val1> を加えた値が <name4> に含まれかつ <name5> に <val3> を加えた値が <name4> に含まれかつ <name5> に <val6> を加えた値が <name4> に含まれるとき、	if <name5> + <val1> in <name4> and <name5> + <val3> in <name4> and <name5> + <val6> in <name4> :	isinstance ( <name5> + <val1> in <name4> and <name5> + <val3> in <name4> and <name5> + <val6> in <name4> :
<name5> の <name3> に <name6> の余弦を掛けた値に <name5> . <name1> の <val4> 乗から ( <name5> . <name3> * <name2> . <name5> ( <name6> ) ) の <val4> 乗を引いた値の <val3> を <val4> で割った値乗を加えた値が <name2> より大きいとき、	if <name5> . <name3> * <name2> . cos ( <name6> ) + ( <name5> . <name1> ** <val4> - ( <name5> . <name3> * <name2> . <name5> ( <name6> ) ) ** <val4> ) ** ( <val3> / <val4> ) > <name2> :	isinstance ( <name5> [ <name3> * cos ( <name6> ) + ( <name5> . <name1> ** <val4> - ( <name5> . <name3> * <name2> . <name5> ( <name6> ) ) ** <val4> ) ** . <val3> / <val4> ) > <name2> :
<name6> の先頭に <name4> の <val5> 番目を追加する	<name6> . appendleft ( <name4> [ <val5> ] )	<name3> . appendleft ( <name4> [ <val5> ] )
<name2> が <val4> と等しくかつ <name3> が <val4> と等しくないとき、	if <name2> == <val4> and <name3> != <val4> :	if <name2> == <val4> and <name3> != <val4> :
<name4> の先頭が <val1> と等しいとき、	if <name4> [ <val1> ] == <val1> :	if <name4> [ <val1> ] == <val1> :
<name4> の集合の長さが <val1> と等しいとき <val5> 、そうでなければ <name6> ( <name4> ) を出力する	print ( <val5> if len ( set ( <name4> ) ) == <val1> else <name6> ( <name4> ) )	print ( <val5> if len ( set ( <name4> ) ) == <val1> else <name6> ( <name4> ) )
<name3> の <name1> 番目の <val5> 番目から <name4> を引いた値の <val6> 乗が <name2> 以上のとき、	if ( <name3> [ <name1> ] [ <val5> ] - <name4> ) ** <val6> >= <name2> :	while ( <name3> [ <name1> ] [ <val5> ] - <name4> ) ** <val6> >= <name2> :
<name5> の <name4> の <name1> 番目の先頭番目を <name6> とする	<name6> = <name5> [ <name4> [ <name1> ] [ 0 ] ]	<name2> = <name5> [ <name4> [ <name1> ] [ 0 ] ]
<name1> の長さが <name6> の長さ以下のとき、	if len ( <name1> ) <= len ( <name6> ) :	list ( len ( <name1> ) <= len ( <name6> ) ) :
{}を出力する	print ( { lcs } )	print ( { ( x & 2 ) } )
0 から <name3> の <name6> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> . <name6> ) :	. for <name4> in range ( <name3> . <name6> ) :
( <val1> 、 <val6> 、 <val2> 、 <val4> 、 <val5> 、 <val3> 、 <val1> ) からなる列を <name3> とする	<name3> = [ <val1> , <val6> , <val2> , <val4> , <val5> , <val3> , <val1> ]	<name3> = [ <val1> , <val6> , <val2> , <val4> , <val5> , <val3> , <val1> ]
<name2> ( <name6> ) が <name2> ( <name3> ) と等しいとき、	if <name2> ( <name6> ) == <name2> ( <name3> ) :	for <name2> ( <name6> ) == <name2> ( <name3> ) :
<name4> ( [ <name1> , <name3> ] + <name6> + [ <name5> ] ) を返す	return <name4> ( [ <name1> , <name3> ] + <name6> + [ <name5> ] )	yield <name4> ( [ <name1> , <name3> ] + <name6> + [ <name5> ] )
<name2> を <name2> の絶対値で割った値を返す	return <name2> / abs ( <name2> )	self return <name2> / abs ( <name2> )
<name4> ( <name6> . <name1> [ <val2> : ] )	<name4> ( <name6> . <name1> [ <val2> : ] )	<name4> ( <name6> . <name1> [ <val2> : ] )
入力された文字列を <val3> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( float , input ( ) . split ( <val3> ) )	<name5> , <name1> = map ( float , input ( ) . split ( <val3> ) )
<name4> の <name3> 番目、 <name1> の最大値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = max ( <name4> [ <name3> ] , <name1> )	<name6> [ <name3> ] = max ( <name4> [ <name3> ] , <name1> )
<name5> の <val6> 番目の末尾に ( <val6> ) からなる列を追加する	<name5> [ <val6> ] . append ( [ <val6> ] )	<name5> [ <val6> ] . append ( [ <val6> ] )
0 から <name2> の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name2> ) ) :	) for <name5> in range ( len ( <name2> ) ) :
<name4> 、 <name6> を <name3> 、 <name2> とする	<name3> , <name2> = <name4> , <name6>	<name1> , <name2> = <name4> , <name6>
( 、つまり未定値、未定値、 <name6> 、 <name3> ) からなる列を <name1> とする	<name1> = [ None , None , <name6> , <name3> ]	<name4> = [ None , None , <name6> , <name3> ]
<name2> の <val4> 番目が <name6> に含まれるとき、	if <name2> [ <val4> ] in <name6> :	or <name2> [ <val4> ] in <name6> :
<name4> の <name3> 番目を <val2> だけ増加させる <name4> の <name3> に <val2> を加えた値番目を <val2> だけ増加させる <name4> の <name3> に <val1> を加えた値番目を <val2> だけ増加させる	<name4> [ <name3> ] += <val2> <name4> [ <name3> + <val2> ] += <val2> <name4> [ <name3> + <val1> ] += <val2>	<name2> [ <name3> ] += <val2> <name4> [ <name3> + <val2> ] += <val2> <name4> [ <name3> + <val1> ] += <val2>
<name3> を <name2> を英大文字に変換した文字列だけ増加させる	<name3> += <name2> . upper ( )	<name3> += <name2> . upper ( )
<name4> ( <name1> [ <name3> ] , <name5> + <val6> )	<name4> ( <name1> [ <name3> ] , <name5> + <val6> )	<name5> <name4> ( <name1> [ <name3> ] , <name5> + <val6> )
<name4> 、 <name1> を <val2> で割った値を出力する	print ( <name4> , <name1> / <val2> )	( print ( <name4> , <name1> / <val2> ) )
<name3> の <val6> 番目を <name2> の <val6> 番目にする	<name2> [ <val6> ] = <name3> [ <val6> ]	<name2> [ <val6> ] = <name3> [ <val6> ]
<val4> を <name3> とする <val1> を <name2> とする	<name3> = <val4> <name2> = <val1>	<name3> = <val4> <name2> = <val1>
<val4> の <name2> 乗を <name1> とする	<name1> = <val4> ** <name2>	<name1> = <val4> ** <name2>
<name1> ( <name5> , <name3> ) のとき、	if <name1> ( <name5> , <name3> ) :	list ( <name1> ( <name5> , <name3> ) ) :
無限の整数列の <name2> の <name3> 番目番目を <val6> だけ増加させる	count [ <name2> [ <name3> ] ] += <val6>	<name3> [ count [ <name2> [ <name3> ] ] += <val6>
<name1> の <name2> を <val3> で割った商に <name5> を加えた値を <name6> とする	<name6> = <name1> . <name2> // <val3> + <name5>	<name6> = <name1> . <name2> // <val3> + <name5>
<name3> が <name6> より小さいとき、 <blk> <name3> と <name6> を入れ替える </blk>	if <name3> < <name6> : <blk> <name3> , <name6> = <name6> , <name3> </blk>	\ if <name3> < <name6> : <blk> <name3> , <name6> = <name6> , <name3> </blk>
<val2> に <name5> を掛けた値から <name3> を引いた値の絶対値が <val6> 以下かどうかを返す	return abs ( <val2> * <name5> - <name3> ) <= <val6>	x return abs ( <val2> * <name5> - <name3> ) <= <val6>
<name2> を <name4> で割った値を <name5> とする	<name5> = <name2> / <name4>	<name4> = <name2> / <name4>
<name5> が <name3> より小さいとき、	if <name5> < <name3> :	isclose if <name5> < <name3> :
<val3> を <name4> の <name5> にする	<name4> . <name5> = <val3>	<name4> . <name5> = <val3>
<name5> の <name3> 番目の <name2> 番目を <name1> とする	<name1> = <name5> [ <name3> ] [ <name2> ]	<name1> = <name5> [ <name3> ] [ <name2> ]
<val5> に <name6> から <val2> を引いた値に <val4> を掛けた値を加えた値を <name3> とする	<name3> = <val5> + ( <name6> - <val2> ) * <val4>	<name3> = <val5> + ( <name6> - <val2> ) * <val4>
<name4> が <val5> 以上かつ <name2> が <name3> の長さから <val6> を引いた値と等しくなければならない	assert <name4> >= <val5> and <name2> == len ( <name3> ) - <val6>	sep = <name4> >= <val5> and <name2> == len ( <name3> ) - <val6>
<name4> の末尾に <name5> ( <name3> , <name2> ) を追加する	<name4> . append ( <name5> ( <name3> , <name2> ) )	<name4> . append ( <name5> ( <name3> , <name2> ) )
<name4> の <name6> 番目が <name4> の先頭と等しくないとき、	if <name4> [ <name6> ] != <name4> [ 0 ] :	if <name4> [ <name6> ] != <name4> [ 0 ] :
( <name5> を <val1> で割った余りを <val4> で割った商、 <name5> を <val2> で割った余りを <val1> で割った商、 <name5> を <val3> で割った余りを <val2> で割った商、 <name5> を <val3> で割った商 ) からなる列を <name6> とする	<name6> = [ ( <name5> % <val1> ) // <val4> , ( <name5> % <val2> ) // <val1> , ( <name5> % <val3> ) // <val2> , <name5> // <val3> ]	<name6> = [ ( <name5> % <val1> ) // <val4> , ( <name5> % <val2> ) // <val1> , ( <name5> % <val3> ) // <val2> , ( <name5> // <val3> ) // <val3> ]
( ( <val5> ) からなる列の <val5> から <name2> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 <name4> に <val6> を加えた値の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val5> ] * [ ( <name4> + <val6> ) for <name1> in range ( <name2> + <val6> ) ] ]	<name3> = [ [ <val5> ] * [ ( <name4> + <val6> ) for <name1> in range ( <name2> + <val6> ) ] ]
<name1> が <val5> と等しいとき、 <blk> <name6> ( <name4> , <name3> ) </blk>	if <name1> == <val5> : <blk> <name6> ( <name4> , <name3> ) </blk>	: if <name1> == <val5> : <blk> <name6> ( <name4> , <name3> ) </blk>
<name3> の <name4> 番目の各要素を <name2> 、 <name6> とし、 <name5> の <name2> 番目が <val1> と等しくないときの ( <name2> 、 <name6> ) の組の列を <name1> とする	<name1> = [ ( <name2> , <name6> ) for <name2> , <name6> in <name3> [ <name4> ] if <name5> [ <name2> ] != <val1> ]	<name6> = [ ( <name2> , <name6> ) for <name2> , <name6> in <name3> [ <name4> ] if <name5> [ <name2> ] != <val1> ]
<name5> ( <name1> . <name6> )	<name5> ( <name1> . <name6> )	<name4> ( <name1> . <name6> )
真を <name2> の <name1> 番目の <name4> 番目にする	<name2> [ <name1> ] [ <name4> ] = True	( <name2> [ <name1> ] [ <name4> ] = True )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name5> とする <name6> を <val1> だけ減少させる <name3> を <val1> だけ減少させる	<name6> , <name3> , <name5> = map ( int , <name4> ( ) . split ( ) ) <name6> -= <val1> <name3> -= <val1>	<name1> , <name3> , <name5> = map ( int , <name4> ( ) . split ( ) ) <name6> -= <val1> <name3> -= <val1>
<name1> が <name4> 以下または <name3> が <name2> 以下のとき、	if <name1> <= <name4> or <name3> <= <name2> :	list if <name1> <= <name4> or <name3> <= <name2> :
<name6> が <name2> と等しいとき、 <blk> <val1> を出力する </blk>	if <name6> == <name2> : <blk> print ( <val1> ) </blk>	\ print ( <name6> == <name2> : <blk> print ( <val1> ) </blk>
<val6> から <name5> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name5> + <val6> ) :	range for <name1> in range ( <val6> , <name5> + <val6> ) :
\ <val1> を書式として <name2> の先頭、 <name2> の <val4> 番目、 <name2> の <val3> 番目で整形した文字列を出力する\	\ print ( <val1> . format ( <name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val3> ] ) ) \	<val1> \ print ( <val1> . format ( <name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val3> ] ) ) \
<val1> から <name2> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , <name2> + <val1> ) :	for <name5> in range ( <val1> , <name2> + <val1> ) :
<name2> の <name5> から <val1> を引いた値番目、 <name2> の <name5> 番目、 <name3> の <name5> から <val1> を引いた値番目の最小値に <val1> を加えた値を <name3> の <name5> 番目にする	<name3> [ <name5> ] = min ( <name2> [ <name5> - <val1> ] , <name2> [ <name5> ] , <name3> [ <name5> - <val1> ] ) + <val1>	<name3> [ <name5> ] = min ( <name2> [ <name5> - <val1> ] , <name2> [ <name5> ] , <name3> [ <name5> - <val1> ] ) + <val1>
0 から <name5> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name5> + <val4> ) :	in range ( <name5> + <val4> ) :
<val5> を <name4> の <name1> 番目の <val3> 番目にする	<name4> [ <name1> ] [ <val3> ] = <val5>	( <name4> [ <name1> ] [ <val3> ] = <val5> )
<name5> の <val1> 番目、 <name3> の最小値を <name2> とする	<name2> = min ( <name5> [ <val1> ] , <name3> )	<name2> = min ( <name5> [ <val1> ] , <name3> )
<name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] ) を <name5> の <name4> にする	<name5> . <name4> = <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] )	) . <name4> = <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] )
<name2> の <name1> 番目の末尾に ( <name5> 、 <name4> ) の組を追加する	<name2> [ <name1> ] . append ( ( <name5> , <name4> ) )	<name4> [ <name1> ] . append ( ( <name5> , <name4> ) )
<name4> ( ) の両端から空白改行を取り除いた文字列を <name6> とする	<name6> = <name4> ( ) . strip ( )	<name6> = <name4> ( ) . strip ( )
<name5> が <name1> と等しくまたは <name5> が <name4> と等しくかつ <name2> が <name1> と等しいとき、	if <name5> == <name1> or ( <name5> == <name4> and <name2> == <name1> ) :	or ( <name5> == <name1> or <name5> == <name4> and <name2> == <name1> ) :
<name2> を <name3> から <name6> を引いた値に <name4> から <name5> を引いた値を掛けた値に <name1> から <name2> を引いた値を掛けた値だけ増加させる	<name2> += ( <name3> - <name6> ) * ( <name4> - <name5> ) * ( <name1> - <name2> )	<name1> += ( <name3> - <name6> ) * ( <name4> - <name5> ) * ( <name1> - <name2> )
<name4> に <name2> を掛けた値に <name5> を掛けた値を <val1> で割った値を <name6> とする	<name6> = ( <name4> * <name2> * <name5> ) / <val1>	<name6> = <name4> * <name2> * <name5> / <val1>
<val5> を間に入れて <name3> の各要素を <name1> とし、 <name1> の文字列の列を連結した文字列を出力する	print ( <val5> . join ( [ str ( <name1> ) for <name1> in <name3> ] ) )	print ( <val5> . join ( [ str ( <name1> ) for <name1> in <name3> ] ) )
0 から <name2> の整数値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( int ( <name2> ) ) :	) : for <name5> in range ( int ( <name2> ) ) :
0 から <name2> 未満までの数列の各要素を <name5> とし、 <name3> の <name5> 番目の整数値の列を <name1> とする	<name1> = [ int ( <name3> [ <name5> ] ) for <name5> in range ( <name2> ) ]	<name1> = [ int ( <name3> [ <name5> ] ) for <name5> in range ( <name2> ) ]
<name4> の <name1> から <name3> を引いた値番目の <name3> 番目に <name4> の <name1> から <val6> を引いた値番目の <name3> から <val6> を引いた値番目を加えた値を <name5> で割った余りを <name4> の <name1> 番目の <name3> 番目にする	<name4> [ <name1> ] [ <name3> ] = ( <name4> [ <name1> - <name3> ] [ <name3> ] + <name4> [ <name1> - <val6> ] [ <name3> - <val6> ] ) % <name5>	<name4> [ <name1> ] [ <name3> ] = ( <name4> [ <name1> - <name3> ] [ <name3> ] + <name4> [ <name1> - <val6> ] [ <name3> - <val6> ] ) % <name5>
<name5> の <name6> 番目を <val2> で割った余りのとき、	if <name5> [ <name6> ] % <val2> :	: if <name5> [ <name6> ] % <val2> :
<name1> の先頭の <val2> 番目が <name3> から <name4> を引いた値に <val5> を加えた値以下のとき、	if <name1> [ <val2> ] [ <val2> ] <= <name3> - <name4> + <val5> :	if <name1> [ 0 ] [ <val2> ] <= <name3> - <name4> + <val5> :
<name6> 、 <name3> から <name4> に <name6> を掛けた値を引いた値を <name3> 、 <name6> とする	<name3> , <name6> = <name6> , ( <name3> - <name4> * <name6> )	( <name3> , <name6> = <name6> , <name3> - <name4> * <name6> )
<name5> 内の [ MASK ] の出現回数が <name5> の <name3> 以上のとき、	if <name5> . count >= <name5> . <name3> :	if <name5> . count >= <name5> . <name3> :
<val3> を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <val3>	( <name4> [ <name2> ] = <val3> )
<name3> の末尾に ( <name2> の先頭、 <name2> の <val5> 番目の整数値 ) の組を追加する	<name3> . append ( ( <name2> [ 0 ] , int ( <name2> [ <val5> ] ) ) )	<name4> . append ( ( <name2> [ 0 ] , int ( <name2> [ <val5> ] ) ) )
<name3> の長さから <val4> を引いた値を出力する	print ( len ( <name3> ) - <val4> )	print ( len ( <name3> ) - <val4> )
<name5> の <name3> の末尾に空列を追加する	<name5> . <name3> . append ( [ ] )	<name3> . append ( [ ] )
<name3> の <val6> 番目が <name5> と等しくないとき、	if <name3> [ <val6> ] != <name5> :	!= <name3> [ <val6> ] != <name5> :
入力された文字列を <val3> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = map ( int , input ( ) . split ( <val3> ) )	<name1> , <name5> = map ( int , input ( ) . split ( <val3> ) )
<name2> が、つまり真と等しいとき、	if <name2> == True :	for <name2> == True :
<name2> を <name1> を <name3> で割った値に <name4> を掛けた値だけ増加させる	<name2> += <name1> / <name3> * <name4>	<name2> += <name1> / <name3> * <name4>
<name2> の順列を順に <name3> として、繰り返す	for <name3> in itertools . permutations ( <name2> ) :	. for <name3> in permutations ( <name2> ) :
0 から <name5> 未満までの数列の各要素を <name4> とし、 <name1> ( ) の両端から空白改行を取り除いた文字列の列を <name2> とする	<name2> = [ <name1> ( ) . strip ( ) for <name4> in range ( <name5> ) ]	<name6> = [ <name1> ( ) . strip ( ) for <name4> in range ( <name5> ) ]
<name3> . <name4> ( <val6> ** <val2> )	<name3> . <name4> ( <val6> ** <val2> )	<name4> . <name4> ( <val6> ** <val2> )
<name1> モジュールを用いる	from <name1> import reduce	return from <name1> import combinations
{ 0 } { 1 }を書式として <name3> 、 <name6> で整形した文字列を出力する	print ( '{0} {1}' . format ( <name3> , <name6> ) )	input ( '{0} . format ( <name3> , <name6> ) )
<name2> ( <name1> - <name3> ) を <name5> とする	<name5> = <name2> ( <name1> - <name3> )	<name3> = <name2> ( <name1> - <name3> )
<name6> の先頭に <name5> の <val1> 番目を掛けた値に <name6> の <val3> 番目に <name5> の <val3> 番目を掛けた値を加えた値を返す	return <name6> [ <val1> ] * <name5> [ <val1> ] + <name6> [ <val3> ] * <name5> [ <val3> ]	def <name6> [ 0 ] * <name5> [ <val1> ] + <name6> [ <val3> ] * <name5> [ <val3> ]
\ <name4> の <name2> に <val1> を書き込む\	\ <name4> . <name2> . write ( <val1> ) \	while <name4> . <name2> . write ( <val1> ) \
<name3> を <name5> の <name3> にする	<name5> . <name3> = <name3>	<name4> . <name5> . <name3> = <name3>
<name1> を <name6> の先頭にする	<name6> [ 0 ] = <name1>	( <name6> [ 0 ] = <name1> )
<name3> の末尾に ( <name2> 、 <name4> 、 <name5> の <name6> 番目の <name1> 番目 ) の組を追加する	<name3> . append ( ( <name2> , <name4> , <name5> [ <name6> ] [ <name1> ] ) )	<name3> . append ( ( <name2> , <name4> , <name5> [ <name6> ] [ <name1> ] ) )
<name4> の <name6> の <name5> 番目番目を <val2> だけ減少させる	<name4> [ <name6> [ <name5> ] ] -= <val2>	<name2> [ <name6> [ <name5> ] ] -= <val2>
<name4> の <name6> が、つまり未定値と等しいかどうかを返す	return <name4> . <name6> is not None	x return <name4> . <name6> is not None
<name5> ( <name3> , <name1> , <name6> + <val2> ) を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name5> ( <name3> , <name1> , <name6> + <val2> )	<name2> , <name4> = <name5> ( <name3> , <name1> , <name6> + <val2> )
<name6> の <name3> 番目が <val4> と等しくなくかつ <name6> の <name3> 番目が <name6> の <name3> に <val5> を加えた値番目と等しくかつ <name6> の <name3> に <val5> を加えた値番目が <name6> の <name3> に <val2> を加えた値番目と等しいとき、	if <name6> [ <name3> ] != <val4> and <name6> [ <name3> ] == <name6> [ <name3> + <val5> ] and <name6> [ <name3> + <val5> ] == <name6> [ <name3> + <val2> ] :	> if <name6> [ <name3> ] != <val4> and <name6> [ <name3> ] == <name6> [ <name3> + <val5> ] and <name6> [ <name3> + <val5> ] == <name6> [ <name3> + <val2> ] :
<name3> を反転した列を順に <name2> として、繰り返す	for <name2> in reversed ( <name3> ) :	for <name2> in reversed ( <name3> ) :
<name1> の <name4> の <val3> 番目が <name5> と等しくかつ <name1> の <name4> の <val2> 番目が <name6> と等しいとき、	if <name1> . <name4> [ <val3> ] == <name5> and <name1> . <name4> [ <val2> ] == <name6> :	if <name1> . <name4> [ <val3> ] == <name5> and <name1> . <name4> [ <val2> ] == <name6> :
<name6> の <val3> 番目、 <name6> の <val4> 番目、 <name6> の <val5> 番目、 <name6> の先頭、 <name6> の <val1> 番目、 <name6> の <val2> 番目を <name6> の先頭、 <name6> の <val4> 番目、 <name6> の <val3> 番目、 <name6> の <val2> 番目、 <name6> の <val1> 番目、 <name6> の <val5> 番目とする	<name6> [ 0 ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val2> ] , <name6> [ <val1> ] , <name6> [ <val5> ] = <name6> [ <val3> ] , <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ 0 ] , <name6> [ <val1> ] , <name6> [ <val2> ]	<name6> [ 0 ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val2> ] , <name6> [ <val5> ] , <name6> [ <val1> ] = <name6> [ <val3> ] , <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ 0 ] , <name6> [ <val1> ] , <name6> [ <val2> ]
<val5> から <name6> 未満までの数列を順に <name1> として、繰り返す <blk> ( <name2> の <name1> 番目から <name2> の <name1> から <val5> を引いた値番目を引いた値、 <name3> の先頭の最大値、 <name2> の <name1> から <val5> を引いた値番目から <name2> の <name1> 番目を引いた値、 <name3> の <val5> 番目の最大値 ) からなる列を <name3> とする </blk>	for <name1> in range ( <val5> , <name6> ) : <blk> <name3> = [ max ( <name2> [ <name1> ] - <name2> [ <name1> - <val5> ] , <name3> [ 0 ] ) , max ( <name2> [ <name1> - <val5> ] - <name2> [ <name1> ] , <name3> [ <val5> ] ) ] </blk>	try : for <name1> in range ( <val5> , <name6> ) : <blk> <name3> , <name3> = [ max ( <name2> [ <name1> ] [ <name1> ] - <name2> [ <name1> - <val5> ] ) , max ( <name3> [ <name1> - <val5> ] - <name2> [ <name1> ] [ <name1> ] , <name3> [ <val5> ] ) ] </blk>
<name2> に <name1> を掛けた値を <name6> で割った余りを <name2> とするを <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name2> = <name2> * <name1> % <name6>	<name4> [ <name1> ] = <name2> = <name2> * <name1> % <name6>
<name3> を <name5> で割った余りが <val6> と等しいとき、	if <name3> % <name5> == <val6> :	for <name3> in <name3> % <name5> == <val6> :
<name6> が <val1> と等しくないとき、 <blk> <name5> の末尾に <name6> を追加する </blk>	if <name6> != <val1> : <blk> <name5> . append ( <name6> ) </blk>	if <name6> != <val1> : <blk> <name5> . append ( <name6> ) </blk>
<name1> に <name4> を加えた値を <val2> で割った余りが <val6> と等しいとき、	if ( <name1> + <name4> ) % <val2> == <val6> :	for <name1> in ( <name1> + <name4> ) % <val2> == <val6> :
( <val5> ) からなる列の <name4> に <val3> を加えた値回分の列を <name1> とする	<name1> = [ <val5> ] * ( <name4> + <val3> )	<name1> = [ <val5> ] * ( <name4> + <val3> )
<name2> の <name1> 番目を <name6> だけ増加させる	<name2> [ <name1> ] += <name6>	( <name2> [ <name1> ] += <name6> )
( <name1> 、 ( <name3> 、 <name4> ) の組、 <val6> ) の組を <name5> の <name2> 番目にする	<name5> [ <name2> ] = ( <name1> , ( <name3> , <name4> ) , <val6> )	<name2> [ <name2> ] = ( <name1> , ( <name3> , <name4> ) , <val6> )
<name4> の <name3> に <val1> を加えた値番目の <name6> に <val1> を加えた値番目を <val1> だけ増加させる	<name4> [ <name3> + <val1> ] [ <name6> + <val1> ] += <val1>	<name2> [ <name4> [ <name3> + <val1> ] [ <name6> + <val1> ] += <val1>
( <name5> に <name3> の余弦を掛けた値、 <name5> に <name3> の正弦を掛けた値 ) の組を返す	return ( <name5> * math . cos ( <name3> ) , <name5> * math . sin ( <name3> ) )	insort ( <name5> * math . cos ( <name3> ) , <name5> * sin ( <name3> ) )
( <name4> ) からなる列の <name6> 回分の列を <name1> とする	<name1> = [ <name4> ] * <name6>	<name1> = [ <name4> ] * <name6>
( <name4> 、 <name1> から <val3> を引いた値 ) の組を返す	return ( <name4> , <name1> - <val3> )	insort ( <name4> , <name1> - <val3> )
<name5> ( <name2> , <val6> ) を出力する	print ( <name5> ( <name2> , <val6> ) )	print ( <name5> ( <name2> , <val6> ) )
改行せずに <name3> を出力する	print ( <name3> , end = '' )	print ( <name3> , end = '' )
<name3> ( <name1> , <name4> , <name5> + <val2> , <val6> , <name3> [ <name1> ] [ <val2> ] )	<name3> ( <name1> , <name4> , <name5> + <val2> , <val6> , <name3> [ <name1> ] [ <val2> ] )	<name4> ( <name1> , <name4> , <name5> + <val2> , <val6> , <name3> [ <name1> ] [ <val2> ] )
<name6> を <name3> の <val5> 番目にする	<name3> [ <val5> ] = <name6>	( <name3> [ <val5> ] = <name6> )
<name4> に <name5> を掛けた値、 <name4> に <name5> を加えた値に <val6> を掛けた値を出力する	print ( <name4> * <name5> , ( <name4> + <name5> ) * <val6> )	print ( <name4> * <name5> , ( <name4> + <name5> ) * <val6> )
<name3> の各要素を <name2> とし、 <name2> の先頭、 <name2> の <val4> 番目を出力するの列	[ print ( <name2> [ 0 ] , <name2> [ <val4> ] ) for <name2> in <name3> ]	+ [ print ( <name2> [ 0 ] , <name2> [ <val4> ] ) for <name2> in <name3> ]
<name1> の <name2> から <name5> を引いた値から <name3> の <name6> 番目を引いた値番目を <val4> だけ増加させる	<name1> [ ( <name2> - <name5> ) - <name3> [ <name6> ] ] += <val4>	<name2> [ ( <name2> - <name5> ) - <name3> [ <name6> ] ] += <val4>
<name4> のキーと値の集まりの各要素を <name2> 、 <name6> とし、 ( <name6> 、 <name2> ) の組の列の最小値を展開してを出力する	print ( * min ( [ ( <name6> , <name2> ) for <name2> , <name6> in <name4> . items ( ) ] ) )	) print ( * min ( [ ( <name6> , <name2> ) for <name2> , <name6> in <name4> . items ( ) ] ) )
<name5> の <name3> ( <name6> , <name2> , <name1> ) 番目を <val4> だけ増加させる	<name5> [ <name3> ( <name6> , <name2> , <name1> ) ] += <val4>	<name5> [ <name3> ( <name6> , <name2> , <name1> ) ] += <val4>
<name4> 、 0 から <name6> 未満までの数列の要素をそれぞれ組にした列のリストを <name3> とする	<name3> = list ( zip ( <name4> , range ( <name6> ) ) )	\ <name3> = list ( zip ( <name4> , range ( <name6> ) ) )
<name1> に <val3> を加えた値から <name2> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> + <val3> , <name2> ) :	. for <name4> in range ( <name1> + <val3> , <name2> ) :
ソートされた順序を保ったまま <name5> を <name3> に挿入できる位置、ソートされた順序を保ったまま <name5> を <name3> に挿入できる最後の位置を出力する	print ( bisect . bisect_left ( <name3> , <name5> ) , bisect . bisect_right ( <name3> , <name5> ) )	range ( bisect . bisect_right ( <name3> , <name5> ) , bisect_right ( <name3> , <name5> ) )
( ( <name2> 、 <name4> 、 <val5> ) の組 ) からなる列の両端キューを <name3> とする	<name3> = deque ( [ ( <name2> , <name4> , <val5> ) ] )	<name3> = deque ( [ ( <name2> , <name4> , <val5> ) ] )
( ( <val6> 、 <val6> ) の組、 ( <val2> 、 <val3> ) の組、 ( <val5> 、 <val1> ) の組、 ( <val4> 、 <val6> ) の組、 ( <val2> 、 <val3> ) の組、 ( <val5> 、 <val1> ) の組、 ( <val4> 、 <val6> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val6> , <val6> ) , ( <val2> , <val3> ) , ( <val5> , <val1> ) , ( <val4> , <val6> ) , ( <val2> , <val3> ) , ( <val5> , <val1> ) , ( <val4> , <val6> ) ]	<name6> = [ ( <val6> , <val6> ) , ( <val2> , <val3> ) , ( <val5> , <val1> ) , ( <val4> , <val6> ) , ( <val2> , <val3> ) , ( <val5> , <val1> ) , ( <val4> , <val6> ) ]
<name4> の x 座標が <name2> の x 座標と等しいとき、	if <name4> . x == <name2> . x :	[ if <name4> . x == <name2> . x :
<name5> ( ( <name6> ( <name4> , <name1> ) , <name2> ) , ( <name3> ( <name5> , <name6> ) , <name4> ) ) を一旦、返す	yield <name5> ( ( <name6> ( <name4> , <name1> ) , <name2> ) , ( <name3> ( <name5> , <name6> ) , <name4> ) )	while <name5> ( [ <name6> ( <name4> , <name1> ) , <name2> ) , ( <name3> ( <name5> , <name6> ) , <name4> ) :
<name5> ( <name4> [ <name6> ] , <name1> , <name2> ) を返す	return <name5> ( <name4> [ <name6> ] , <name1> , <name2> )	yield <name5> ( <name4> [ <name6> ] , <name1> , <name2> )
<name4> の長さが <name1> と等しいとき、	if len ( <name4> ) == <name1> :	continue len ( <name4> ) == <name1> :
<name4> の位置 <val6> 、 <name4> の <name3> 、 <name2> の先頭から <val6> を探して見つかった位置を出力する	print ( <name4> . find ( <val6> , <val6> , <name4> . <name3> , <name2> [ 0 ] ) )	print ( <name4> . find ( <val6> , <val6> , <name4> . <name3> , <name2> [ 0 ] ) )
<name2> が <name1> の <name4> の <name6> 番目と等しくなくかつ <name2> が <name1> の <name5> の <name6> 番目と等しくないとき、	if <name2> != <name1> . <name4> [ <name6> ] and <name2> != <name1> . <name5> [ <name6> ] :	for <name2> != <name1> . <name4> [ <name6> ] and <name2> != <name1> . <name5> [ <name6> ] :
0 から <name1> に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> + <val2> ) :	in range ( <name1> + <val2> ) :
<name4> を展開し、それぞれ <name3> 、 <name2> 、 <name6> とする	<name3> , <name2> , <name6> = <name4>	<name3> , <name2> , <name6> = <name4>
<name6> . <name5> ( <name1> ) を展開し、それぞれ <name4> 、 <name4> 、 <name4> 、 <name2> とする	<name4> , <name4> , <name4> , <name2> = <name6> . <name5> ( <name1> )	<name4> , <name4> , <name4> , <name2> = <name6> . <name5> ( <name1> )
0 に <val3> を掛けた値の各要素を <name1> とし、、つまり入力された文字列の整数値の列の総和を出力する	print ( sum ( [ int ( input ( ) ) for <name1> in '0' * <val3> ] ) )	) print ( sum ( [ int ( input ( ) ) for <name1> in '0' * <val3> ] ) )
<name2> を <name5> で割った余りが <val4> と等しいとき、	if <name2> % <name5> == <val4> :	if ( <name2> % <name5> ) == <val4> :
<name4> 、 <name3> を出力する	print ( <name4> , <name3> )	print ( <name4> . <name3> )
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列のリストを <name3> とする	<name3> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )	<name6> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )
0 から <name3> から <val4> を引いた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> - <val4> ) :	) for <name5> in range ( <name3> - <val4> ) :
-1 を <name5> を <name1> とするとするを <name6> とする	<name6> = <name1> = <name5> = - 1	<name6> = <name1> = <name5> = - 1
<val4> から <val5> 未満までの数列の各要素を <name1> とし、 <val4> から <val5> 未満までの数列の各要素を <name3> とし、 <val4> の列の列を <name6> とする	<name6> = [ [ <val4> for <name3> in range ( <val5> ) ] for <name1> in range ( <val5> ) ]	<name6> = [ [ <val4> for <name3> in range ( <val5> ) ] for <name1> in range ( <val5> ) ]
<name2> ( <name5> , <name1> , <val4> ) のとき <val6> 、そうでなければ <val3> を出力する	print ( <val6> if <name2> ( <name5> , <name1> , <val4> ) else <val3> )	print ( <val6> if <name2> ( <name5> , <name1> , <val4> ) else <val3> )
入力された文字列を <val4> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val4> ) ]	<name6> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val4> ) ]
<val3> から <val1> 未満までの数列を順に現在の日時として、繰り返す	for now in range ( <val3> , <val1> ) :	for now in range ( <val3> , <val1> ) :
<name6> が <val1> と等しいとき、	if ( <name6> == <val1> ) :	list ( <name6> == <val1> ) :
<name6> を <name2> で割った余りを <name3> とする	<name3> = <name6> % <name2>	<name3> = <name6> % <name2>
<name2> の <name3> 番目の <name6> から <name3> を引いた値番目を <name1> で割った余りを <name5> とする	<name5> = <name2> [ <name3> ] [ <name6> - <name3> ] % <name1>	<name5> = <name2> [ <name3> ] [ <name6> - <name3> ] % <name1>
<name1> の末尾に <name5> . <name2> ( <name4> , <name6> ) のとき <name5> . <name3> ( <name4> , <name6> ) 、そうでなければ <val1> を追加する	<name1> . append ( <name5> . <name3> ( <name4> , <name6> ) if <name5> . <name2> ( <name4> , <name6> ) else <val1> )	<name1> . append ( <name5> . <name3> ( <name4> , <name6> ) if <name5> . <name2> ( <name4> , <name6> ) else <val1> )
<name3> の先頭が <val4> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name3> [ <val4> ] == <val4> : <blk> break </blk>	: if <name3> [ 0 ] == <val4> : <blk> break </blk>
<name6> の先頭の <val5> 番目に <name6> の <val1> 番目の <val5> 番目を加えた値を <val1> で割った値を <name2> とする	<name2> = ( <name6> [ 0 ] [ <val5> ] + <name6> [ <val1> ] [ <val5> ] ) / <val1>	<name2> = ( <name6> [ <val1> ] [ <val5> ] + <name6> [ <val1> ] [ <val5> ] ) / <val1>
<name5> から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , - 1 , - 1 ) :	for <name2> in range ( <name5> , - 1 , - 1 ) :
<name4> ( <name5> , <name3> , <name6> , <name2> , <name1> ) を出力する	print ( <name4> ( <name5> , <name3> , <name6> , <name2> , <name1> ) )	print ( <name4> ( <name5> , <name3> , <name6> , <name2> , <name1> ) )
<name2> の <name5> が <name3> の <name5> より小さいとき、	if <name2> . <name5> < <name3> . <name5> :	isinstance ( <name2> . <name5> < <name3> . <name5> ) :
<name1> の <name2> 番目が <name4> の <name5> 番目と等しいとき、	if <name1> [ <name2> ] == <name4> [ <name5> ] :	if <name1> [ <name2> ] == <name4> [ <name5> ] :
( <val6> ) からなる列の <name3> 回分の列を <name5> とする	<name5> = [ <val6> ] * <name3>	else = [ <val6> ] * <name3>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name5> 、 <name4> とする	<name3> , <name2> , <name5> , <name4> = map ( int , input ( ) . split ( ) )	<name2> , <name5> , <name4> = map ( int , input ( ) . split ( ) )
<val1> に <name2> を掛けた値を <name4> で割った値を <name6> とする	<name6> = <val1> * <name2> / <name4>	<name4> = <val1> * <name2> / <name4>
<name3> の <name4> 番目の <name5> 番目が <val2> と等しいとき、	if <name3> [ <name4> ] [ <name5> ] == <val2> :	[ if <name3> [ <name4> ] [ <name5> ] == <val2> :
<name3> の、つまり先頭から <name4> から <val5> を引いた値までの部分列を返す	return <name3> [ 0 : <name4> - <val5> ]	yield <name3> [ : <name4> - <val5> ]
<name5> に <val2> を加えた値が <name3> より小さいとき、 <blk> <name6> の末尾に ( <name4> 、 <name5> に <val2> を加えた値 ) の組を追加する </blk>	if <name5> + <val2> < <name3> : <blk> <name6> . append ( ( <name4> , <name5> + <val2> ) ) </blk>	while <name5> + <val2> < <name3> : <blk> <name6> . append ( ( <name4> , <name5> + <val2> ) ) </blk>
( <val1> 、 <val5> 、 <val4> 、 <val6> 、 <val2> ) からなる列を <name3> とする	<name3> = [ <val1> , <val5> , <val4> , <val6> , <val2> ]	<name3> = [ <val1> , <val5> , <val4> , <val6> , <val2> ]
( <val1> ) からなる列の <val2> 回分の列を <name5> とする	<name5> = [ <val1> ] * <val2>	<name5> = [ <val1> ] * <val2>
( <val3> 、 -1 ) の組を順に <name1> として、繰り返す	for <name1> in ( <val3> , - <val3> ) :	. for <name1> in ( <val3> , - 1 ) :
<name4> . <name6> ( <name5> ) でないとき、	if not <name4> . <name6> ( <name5> ) :	isinstance ( <name4> . <name6> ( <name5> ) ) :
<val5> を <name4> の <val1> 番目にする	<name4> [ <val1> ] = <val5>	( <name4> [ <val1> ] = <val5> )
<name6> の <name3> 番目が <name2> 以下または <name5> の <val4> 番目が <val1> と等しいとき、	if <name6> [ <name3> ] <= <name2> or <name5> [ <val4> ] == <val1> :	if <name6> [ <name3> ] <= <name2> or <name5> [ <val4> ] == <val1> :
( <name1> の整数値 ) からなる列をそうでなければ、とする	else = [ int ( <name1> ) ]	now = [ int ( <name1> ) ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの先頭を除いた部分列を <name2> とする	<name2> = list ( map ( int , input ( ) . split ( ) ) ) [ 1 : ]	<name2> = list ( map ( int , input ( ) . split ( ) ) ) [ 1 : ]
<name5> を <name5> の <val4> 乗に <name1> の <val4> 乗を加えた値の平方根で割った値を <name3> とする	<name3> = <name5> / ( math . sqrt ( <name5> ** <val4> + <name1> ** <val4> ) )	( <name5> / <name3> = <name5> / math . sqrt ( <name5> ** <val4> + <name1> ** <val4> ) )
<name4> の <name2> 、 <name5> に <name3> を加えた値の最小値番目を <val6> だけ減少させる	<name4> [ min ( <name2> , <name5> + <name3> ) ] -= <val6>	<name2> [ min ( <name5> + <name3> ) ] -= <val6>
<name3> の <name2> でないとき、	if not <name3> . <name2> :	isinstance ( <name3> . <name2> ) :
<name6> の <name5> 番目の絶対値に <name3> の <name5> 番目の絶対値を加えた値を <name1> の <name5> 番目にする	<name1> [ <name5> ] = abs ( <name6> [ <name5> ] ) + abs ( <name3> [ <name5> ] )	else [ <name5> ] = abs ( <name6> [ <name5> ] ) + abs ( <name3> [ <name5> ] )
<name1> の <val3> に <val4> に <name6> に <val5> を加えた値を掛けた値を挿入する	<name1> . insert ( <val3> , <val4> * ( <name6> + <val5> ) )	<name1> . insert ( <val3> , <val4> * ( <name6> + <val5> ) )
<name6> に <name3> を加えた値、 <name1> に <name4> を加えた値を <name2> 、 <name5> とする	<name2> , <name5> = <name6> + <name3> , <name1> + <name4>	input , <name5> = <name6> + <name3> , <name1> + <name4>
<name2> の <name3> を <name1> だけ減少させる	<name2> . <name3> -= <name1>	pow ( <name2> . <name3> -= <name1> )
( <val3> 、 <val2> 、 <val1> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val3> , <val2> , <val1> , <val6> ]	<name4> = [ <val3> , <val2> , <val1> , <val6> ]
<name1> の <name3> 番目を <val5> で割った余りが <val6> と等しいとき、	if <name1> [ <name3> ] % <val5> == <val6> :	raise <name1> [ <name3> ] % <val5> == <val6> :
真を <name5> の <name4> から <val1> を引いた値番目の <name6> 番目にする	<name5> [ <name4> - <val1> ] [ <name6> ] = True	else [ <name4> - <val1> ] [ <name6> ] = True
<name6> の <name4> から読み込んだ一行を <name5> とする	<name5> = <name6> . <name4> . readline ( )	<name4> . <name5> = <name6> . <name4> . <name5>
<name5> の <name4> の <name5> の <name6> の <name3> 番目を削除する	del <name5> . <name4> [ <name5> . <name6> . <name3> ]	count = <name5> . <name4> [ <name5> . <name6> [ <name3> ]
<name5> を <name1> の <name3> 番目から <name1> の <name4> 番目を引いた値だけ増加させる	<name5> += <name1> [ <name3> ] - <name1> [ <name4> ]	( <name5> += <name1> [ <name3> ] - <name1> [ <name4> ] )
<val1> を <name4> の <val1> 番目の <name3> 番目にする	<name4> [ <val1> ] [ <name3> ] = <val1>	( <name4> [ <val1> ] [ <name3> ] = <val1> )
<name5> の <name4> に <val1> を掛けた値番目、 <name5> の <name4> に <val1> を掛けた値に <val2> を加えた値番目の最小値に <name3> の <name4> 番目を加えた値を <name5> の <name4> 番目にする	<name5> [ <name4> ] = min ( <name5> [ <name4> * <val1> ] , <name5> [ <name4> * <val1> + <val2> ] ) + <name3> [ <name4> ]	<name5> [ <name4> ] = min ( <name5> [ <name4> * <val1> ] , <name5> [ <name4> * <val1> + <val2> ] ) + <name3> [ <name4> ]
<name5> の <name1> 番目の <val3> 番目が <name5> の <name1> から <val3> を引いた値番目の <val3> 番目より小さいとき、 <blk> <name6> を <val3> だけ増加させる </blk>	if <name5> [ <name1> ] [ <val3> ] < <name5> [ <name1> - <val3> ] [ <val3> ] : <blk> <name6> += <val3> </blk>	\ <name5> [ <name1> ] [ <val3> ] < <name5> [ <name1> - <val3> ] [ <val3> ] : <blk> <name6> += <val3> </blk>
<name2> が <name3> と等しいとき、 <blk> -1 を出力する </blk>	if <name2> == <name3> : <blk> print ( - 1 ) </blk>	if <name2> == <name3> : <blk> print ( - 1 ) </blk>
( ( ( <name4> 、 <name6> 、 <name5> ) の組 , <val1> ) ) からなる辞書を <name2> とする	<name2> = { ( <name4> , <name6> , <name5> ) : <val1> }	<name2> = { ( <name4> , <name6> , <name5> ) : <val1> }
<name3> を <val2> を <name5> だけ左シフトした値だけ増加させる	<name3> += <val2> << <name5>	( <name3> += <val2> << <name5> )
<name2> が <name6> より小さいとき <name5> 、そうでなければ <name3> を <name4> とする	<name4> = <name5> if <name2> < <name6> else <name3>	<name4> = <name5> if <name2> < <name6> else <name3>
<name3> 、 <name5> の <name1> 番目に <name4> から <val6> を引いた値から <name2> を引いた値を加えた値の最小値を <name3> とする	<name3> = min ( <name3> , <name5> [ <name1> ] + ( <name4> - <val6> - <name2> ) )	else = min ( <name3> , <name5> [ <name1> ] + ( <name4> - <val6> - <name2> ) )
<val6> の <val1> 乗に <val4> を加えた値を <name2> とする	<name2> = <val6> ** <val1> + <val4>	<name2> = <val6> ** <val1> + <val4>
( ( <val5> ) からなる列の <val5> から <name2> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <name3> に <val1> を加えた値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val5> ] * [ ( <name3> + <val1> ) for <name3> in range ( <name2> + <val1> ) ] ]	<name6> = [ [ <val5> ] * [ ( <name3> + <val1> ) for <name3> in range ( <name2> + <val1> ) ] ]
<val4> から <name1> の <name3> 未満までの数列の各要素を <name2> とし、 <val4> の列を <name5> とする	<name5> = [ <val4> for <name2> in range ( <name1> . <name3> ) ]	<name4> = [ <val4> for <name2> in range ( <name1> . <name3> ) ]
<name3> の <name1> 番目を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name3> [ <name1> ]	<name1> [ <name6> ] = <name3> [ <name1> ]
<name1> ( <name2> , ( <name4> , <name6> ) )	<name1> ( <name2> , ( <name4> , <name6> ) )	<name1> ( <name2> , ( <name4> , <name6> ) )
<name5> の <name6> 番目の先頭を <name3> とする	<name3> = <name5> [ <name6> ] [ 0 ]	( <name3> = <name5> [ <name6> ] [ 0 ] )
<name6> の、つまり先頭から <name4> を <val2> で割った商までの部分列を <name5> とする	<name5> = <name6> [ : <name4> // <val2> ]	<name5> = <name6> [ : <name4> // <val2> ]
<name5> の <name6> に <val3> を掛けた値から <name6> に <val3> を掛けた値に <val3> を加えた値までの部分列を <name2> とする	<name2> = <name5> [ <name6> * <val3> : <name6> * <val3> + <val3> ]	<name2> = <name5> [ <name6> * <val3> : <name6> * <val3> + <val3> ]
入力された文字列を <val3> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列の組を <name1> とする	<name1> = tuple ( [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ] )	<name1> = tuple ( [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ] )
<name4> ( <name5> ) を展開し、それぞれ <name2> 、 <name3> 、 <name6> とする	<name2> , <name3> , <name6> = <name4> ( <name5> )	<name6> , <name2> , <name3> , <name6> = <name4> ( <name5> )
<val6> の <name5> から <val3> を引いた値のビット長乗を <name2> の <name1> にする	<name2> . <name1> = <val6> ** ( ( <name5> - <val3> ) . bit_length ( ) )	<name2> . <name1> = <val6> ** ( ( <name5> - <val3> ) . bit_length ( ) )
<name6> に <val3> を掛けた値を出力する	print ( <name6> * <val3> )	print ( <name6> * <val3> )
<name1> の <name4> の <name2> 番目に <name1> の位置 <name3> に <val6> を加えた値、 <name1> 、 <name4> から <name2> に <val5> を掛けた値に <val6> を加えた値を探して見つかった位置を加えた値を返す	return <name1> . <name4> [ <name2> ] + <name1> . find ( <name2> * <val5> + <val6> , <name3> + <val6> , <name1> , <name4> )	def <name1> . <name4> [ <name2> ] + <name1> . find ( ( <name1> . find ( <val6> , <name3> + <val6> ) , <name1> , <name4> , <name4> , <name2> * <val5> + <val6> )
<name6> に <val2> に <name1> を加えた値を掛けた値を <val2> で割った値の整数値が <name3> と等しいとき、	if int ( <name6> * ( <val2> + <name1> ) / <val2> ) == <name3> :	for <name6> in int ( <name6> * ( <val2> + <name1> ) / <val2> ) == <name3> :
<name4> から <name1> を引いた値の <val6> 乗に <name2> から <name3> を引いた値の <val6> 乗を加えた値の平方根を <name5> とする	<name5> = sqrt ( ( <name4> - <name1> ) ** <val6> + ( <name2> - <name3> ) ** <val6> )	<name5> = math . sqrt ( ( <name4> - <name1> ) ** <val6> + ( <name2> - <name3> ) ** <val6> )
<name2> を <val5> だけ減少させる <val6> を <name3> とする	<name2> -= <val5> <name3> = <val6>	<name2> -= <val5> <name3> = <val6>
<name4> ( <name6> , <name2> + <val5> , <val5> )	<name4> ( <name6> , <name2> + <val5> , <val5> )	len <name4> ( <name6> , <name2> + <val5> , <val5> )
<name6> が <name1> から <val4> を引いた値と等しくかつ <name2> が <name5> から <val4> を引いた値と等しいとき、	if <name6> == <name1> - <val4> and <name2> == <name5> - <val4> :	: if <name6> == <name1> - <val4> and <name2> == <name5> - <val4> :
<val4> を <name1> の <name1> の末尾番目の <name2> にする	<name1> [ <name1> [ - 1 ] ] . <name2> = <val4>	<name1> [ <name1> [ - <val4> ] ] . <name2> = <val4>
( 、つまり未定値 ) からなる列の <name4> 回分の列を <name3> とする	<name3> = [ None ] * <name4>	( <name3> = [ None ] * <name4> )
<name6> ( <name4> ) を <name1> とする	<name1> = <name6> ( <name4> )	<name1> = <name6> ( <name4> )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = input ( ) . split ( )	<name3> , <name5> = input ( ) . split ( )
<name6> の組を返す	return tuple ( <name6> )	self = tuple ( <name6> )
<name2> を <name5> ( <name6> , <name3> ) または <name5> ( <name6> , <name1> ) との論理和にする	<name2> | = <name5> ( <name6> , <name3> ) or <name5> ( <name6> , <name1> )	( <name2> | = ( <name5> ( <name6> , <name3> ) ) or <name5> ( <name6> , <name1> )
<name6> の絶対値が <val1> <name4> <val5> より小さいとき <val2> 、そうでなければ <val3> を出力する	print ( <val2> if abs ( <name6> ) < <val1> <name4> <val5> else <val3> )	print ( <val2> if abs ( <name6> ) < <val1> <name4> <val5> else <val3> )
<name2> の <name4> の <name3> を <name6> の <name5> の <name1> 番目にする	<name6> . <name5> [ <name1> ] = <name2> . <name4> . <name3>	<name2> . <name5> [ <name1> ] = <name2> . <name4> . <name3>
<name1> . <name3> ( <name1> . <name6> [ <val4> * <name5> + <val2> ] , <name1> . <name6> [ <val4> * <name5> + <val4> ] ) を <name1> の <name6> の <name5> 番目にする	<name1> . <name6> [ <name5> ] = <name1> . <name3> ( <name1> . <name6> [ <val4> * <name5> + <val2> ] , <name1> . <name6> [ <val4> * <name5> + <val4> ] )	<name1> . <name6> [ <name5> ] = <name1> . <name3> ( <name1> . <name6> [ <val4> * <name5> + <val2> ] , <name1> . <name6> [ <val4> * <name5> + <val4> ] )
<name6> の <name1> 番目から、つまり末尾までの部分列を <val4> だけ増加させる	<name6> [ <name1> : ] += <val4>	<name1> [ <name1> : ] += <val4>
. を返す	return '.'	yield '.'
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> 、 <name1> とする	<name4> , <name3> , <name1> = map ( int , input ( ) . split ( ) )	<name4> , <name3> , <name1> = map ( int , input ( ) . split ( ) )
<name6> の、つまり先頭から <name1> 番目までの部分列に <name6> の <name2> から ( <name2> - <name3> ) % ( <name2> - <name1> ) を引いた値から <name2> 番目までの部分列を加えた値に <name6> の <name1> 番目から <name2> から ( <name2> - <name3> ) を ( <name2> - <name1> ) で割った余りを引いた値までの部分列を加えた値に <name6> の <name2> 番目から、つまり末尾までの部分列を加えた値を <name6> とする	<name6> = <name6> [ : <name1> ] + <name6> [ <name2> - ( <name2> - <name3> ) % ( <name2> - <name1> ) : <name2> ] + <name6> [ <name1> : <name2> - ( <name2> - <name3> ) % ( <name2> - <name1> ) ] + <name6> [ <name2> : ]	<name2> = <name6> [ : <name1> ] + <name6> [ <name2> - <name3> ( <name2> - <name1> ) : <name2> ] + <name6> [ <name1> : <name2> ] % ( <name2> - <name3> ) % ( <name2> - <name1> ) + <name6> [ <name2> : ( <name2> - <name1> ) % ( <name3> ) + ( <name2> - <name1> ) ]
<name6> 、 <name1> において正規表現 <name5> が最初にマッチする位置を出力する	print ( search ( <name5> , <name6> , <name1> ) )	print ( search ( <name5> , <name6> , <name1> ) )
<name6> 、 <name4> の最大値を <name4> とする	<name4> = max ( <name6> , <name4> )	<name4> = max ( <name6> , <name4> )
<name6> の <name5> を <name3> の <name2> の <name1> 番目の <name1> 番目にする	<name3> . <name2> [ <name1> ] [ <name1> ] = <name6> . <name5>	<name3> . <name2> [ <name1> ] [ <name1> ] = <name6> . <name5>
<name2> に <name3> を加えた値が <name1> より小さいとき、 <blk> 繰り返しを中断する </blk>	if <name2> + <name3> < <name1> : <blk> break </blk>	list ( <name2> + <name3> < <name1> ) : <blk> break </blk>
0 から <name6> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name1> とする	<name1> = [ ( list ( map ( int , input ( ) . split ( ) ) ) ) for <name4> in range ( <name6> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name6> ) ]
( <val4> ) からなる列の <name6> 回分の列を <name2> の <name5> にする	<name2> . <name5> = [ <val4> ] * <name6>	<name2> . <name5> = [ <val4> ] * <name6>
<name1> の <val6> 乗に <name5> の <val6> 乗を加えた値に <name4> の <val6> 乗に <name3> の <val6> 乗を加えた値を掛けた値を <name2> とする	<name2> = ( <name1> ** <val6> + <name5> ** <val6> ) * ( <name4> ** <val6> + <name3> ** <val6> )	<name3> = ( <name1> ** <val6> + <name5> ** <val6> ) * ( <name4> ** <val6> + <name3> ** <val6> )
<name6> が <name2> と等しいとき、	if <name6> == <name2> :	: if <name6> == <name2> :
<name3> を <name4> だけ減少させる	<name3> -= <name4>	not <name3> -= <name4>
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = map ( int , <name2> ( ) . split ( ) )	<name4> = map ( int , <name2> ( ) . split ( ) )
0 から <name4> から <val1> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> - <val1> ) :	for <name3> in range ( <name4> - <val1> ) :
<name1> ( <name6> , <name3> , <name5> ) を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name1> ( <name6> , <name3> , <name5> )	<name1> , <name3> , <name5> = <name1> ( <name6> , <name3> , <name5> )
<name3> に <val1> を加えた値を出力する	print ( <name3> + <val1> )	print ( <name3> + <val1> )
<name2> ( <name1> ) を返す	return <name2> ( <name1> )	yield <name2> ( <name1> )
<name5> が <name4> より小さいとき、	if <name5> < <name4> :	isclose if <name5> < <name4> :
<name4> の末尾に <name6> の <name1> 番目の <name2> を追加する	<name4> . append ( <name6> [ <name1> ] . <name2> )	<name4> . append ( <name6> [ <name1> ] . <name2> )
( <name2> 、 <name1> 、 <name4> ) の組を返す	return ( <name2> , <name1> , <name4> )	yield ( <name2> , <name1> , <name4> )
<name6> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = map ( int , <name6> . split ( ) )	<name4> , <name5> = map ( int , <name6> . split ( ) )
0 から、つまり無限の整数列未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( count ) :	) for <name5> in range ( count ) :
<name1> の各要素を <name6> 、 <name3> とし、 <name6> の列の総和を <name5> で割った値を <name2> とする	<name2> = sum ( [ <name6> for <name6> , <name3> in <name1> ] ) / <name5>	<name2> = sum ( [ <name6> for <name6> , <name3> in <name1> ] ) / <name5>
0 から <name2> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name6> の <name4> にする	<name6> . <name4> = [ [ ] for <name5> in range ( <name2> ) ]	<val6> . <name4> = [ [ ] for <name5> in range ( <name2> ) ]
<name6> を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in <name6> :	. for <name5> , <name4> in <name6> :
<val6> から <name2> を引いた値を <name3> とする	<name3> = <val6> - <name2>	<name3> = <val6> - <name2>
<name4> . <name2> ( ) を現在の日時とする	now = <name4> . <name2> ( )	now = <name4> . <name2> ( )
<name2> から <name4> を引いた値に <name5> を掛けた値が <name3> から <name1> を引いた値に <name6> を掛けた値と等しくないとき、	if ( <name2> - <name4> ) * <name5> != ( <name3> - <name1> ) * <name6> :	while ( <name2> - <name4> ) * <name5> != ( <name3> - <name1> ) * <name6> :
<name3> をソートした列の <val1> 番目を出力する	print ( sorted ( <name3> ) [ <val1> ] )	print ( sorted ( <name3> ) [ <val1> ] )
<val2> から <name6> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , <name6> ) :	) : for <name5> in range ( <val2> , <name6> ) :
<name5> の <name2> を取り出した値を <name1> とする	<name1> = <name5> . pop ( <name2> )	<name1> = <name5> . pop ( <name2> )
<name4> から <name6> の <name1> を引いた値の絶対値を返す	return abs ( <name4> - <name6> . <name1> )	self return abs ( <name4> - <name6> . <name1> )
0 から <name5> に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> + <val4> ) :	in range ( <name5> + <val4> ) :
<name4> の <name6> 番目が <name3> に含まれる間、次を繰り返す	while <name4> [ <name6> ] in <name3> :	assert <name4> [ <name6> ] in <name3> :
<name2> から <name4> を引いた値の絶対値と <name1> の最大公約数を <name6> とする	<name6> = gcd ( abs ( <name2> - <name4> ) , <name1> )	<name6> = gcd ( abs ( <name2> - <name4> ) , <name1> )
<name2> の <name6> の <name4> 番目を <name2> の <name6> の <name3> 番目だけ増加させる	<name2> . <name6> [ <name4> ] += <name2> . <name6> [ <name3> ]	<name1> . <name6> [ <name4> ] += <name2> . <name6> [ <name3> ]
<name2> を <val3> で割った余りのとき <name6> 、そうでなければ <name1> を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in ( <name6> if <name2> % <val3> else <name1> ) :	. for <name4> , <name5> in <name6> if <name2> % <val3> else <name1> :
<name4> を <name1> の <name6> 番目の <name3> 番目だけ増加させる	<name4> += <name1> [ <name6> ] [ <name3> ]	<name4> += <name1> [ <name6> ] [ <name3> ]
<name1> の <name3> 番目の <name4> 番目、 <name1> の <name6> 番目の <name5> 番目に <name2> を加えた値の最小値を <name1> の <name3> 番目の <name4> 番目にする	<name1> [ <name3> ] [ <name4> ] = min ( <name1> [ <name3> ] [ <name4> ] , <name1> [ <name6> ] [ <name5> ] + <name2> )	dict [ <name3> ] [ <name4> ] = min ( <name1> [ <name3> ] [ <name4> ] , <name1> [ <name6> ] [ <name5> ] + <name2> )
<name2> ( <name4> . <name3> [ <val6> : ] )	<name2> ( <name4> . <name3> [ <val6> : ] )	<name2> ( <name4> . <name3> [ <val6> : ] )
<name1> の <name3> から <val6> を引いた値番目を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name1> [ <name3> - <val6> ]	<name1> , <name2> , <name4> = <name1> [ <name3> - <val6> ]
<name6> の先頭の <val4> 番目の浮動小数点数を <name3> で割った値が <val5> より大きいとき、	if float ( <name6> [ 0 ] [ <val4> ] ) / <name3> > <val5> :	while float ( <name6> [ <val4> ] [ <val4> ] ) / <name3> > <val5> :
<name4> の <name2> が、つまり未定値と等しくなくかつ <name4> の <name1> が、つまり未定値と等しくないかどうかを返す	return <name4> . <name2> is None and <name4> . <name1> is None	assert <name4> . <name2> != None and <name4> . <name1> != None
<name2> が <val3> より小さい間、次を繰り返す	while <name2> < <val3> :	del <name2> < <val3> :
<name4> の先頭、 <name4> の <val5> 番目、 <name4> の <val2> 番目、 <name4> の <val3> 番目、 <name4> の <val6> 番目、 <name4> の <val1> 番目を <name4> の先頭、 <name4> の <val5> 番目、 <name4> の <val2> 番目、 <name4> の <val3> 番目、 <name4> の <val6> 番目、 <name4> の <val1> 番目とする	<name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] = <name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ]	<name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] = <name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ]
<name1> が <val4> と等しくないとき、 <blk> 改行せずに <val3> を書式として <name1> で整形した文字列を出力する </blk>	if <name1> != <val4> : <blk> print ( <val3> . format ( <name1> ) , end = '' ) </blk>	try <name1> != <val4> : <blk> print ( <val3> . format ( <name1> ) , end = '' ) </blk>
<val3> を <name4> とする <name2> を <name6> とする	<name4> = <val3> <name6> = <name2>	<name5> = <name4> = <val3> <name6> = <name2>
<name5> ( <name4> , <name4> [ <val6> ] , <name1> )	<name5> ( <name4> , <name4> [ <val6> ] , <name1> )	<name5> ( <name4> , <name4> [ <val6> ] , <name1> )
<name3> が <name6> と等しくまたは <name1> ( <name4> , <name3> , <name2> [ <name5> ] ) のとき、	if <name3> == <name6> or <name1> ( <name4> , <name3> , <name2> [ <name5> ] ) :	list <name3> == <name6> or <name1> ( <name4> , <name3> , <name2> [ <name5> ] ) :
<name4> を <name3> ( <name6> . <name1> , <name5> + <val2> ) だけ増加させる	<name4> += <name3> ( <name6> . <name1> , <name5> + <val2> )	<name3> += <name3> ( <name6> . <name1> , <name5> + <val2> )
<name1> の <name4> 番目を <name3> だけ減少させる	<name1> [ <name4> ] -= <name3>	<name1> [ <name4> ] -= <name3>
入力された文字列を <name6> とする	<name6> = input ( )	<name6> = input ( )
0 から <val1> 未満までの数列の各要素を <name4> とし、 0 から <val3> 未満までの数列の各要素を <name2> とし、 -1 の列の列を <name5> とする	<name5> = [ [ - 1 for <name2> in range ( <val3> ) ] for <name4> in range ( <val1> ) ]	<name6> = [ [ - 1 for <name2> in range ( <val3> ) ] for <name4> in range ( <val1> ) ]
<val4> 、 <val5> を <name1> 、現在の日時とする	<name1> , now = <val4> , <val5>	not <name1> , now = <val4> , <val5>
( ( <val5> ) からなる列の <val5> から <name1> 未満までの数列の各要素を <name4> とし、 <name3> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val5> ] * [ <name3> for <name4> in range ( <name1> ) ] ]	<name2> = [ [ <val5> ] * [ <name3> for <name4> in range ( <name1> ) ] ]
<name6> ( <name2> . <name5> [ <val4> : ] )	<name6> ( <name2> . <name5> [ <val4> : ] )	<name5> ( <name2> . <name5> [ <val4> : ] )
<name4> の <name1> から <val3> を引いた値から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> . <name1> - <val3> , - <val3> , - <val3> ) :	. for <name2> in range ( <name4> . <name1> - <val3> , - <val3> , - <val3> ) :
<name5> の <name4> の <name2> と等しい要素の最初の位置を <name1> とする	<name1> = <name5> . <name4> . index ( <name2> )	<name1> = <name5> . <name4> . index ( <name2> )
{ 0 } { 1 } { 2 }を書式として <name1> 、 <name5> 、 <name6> で整形した文字列を出力する	print ( '{0} {1} {2}' . format ( <name1> , <name5> , <name6> ) )	else . '{0} ( '{0} . format ( <name1> , <name5> , <name6> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name4> 、 <name1> 、 <name6> 、 <name5> 、 <name3> 、 <name2> とする	<name3> , <name2> , <name4> , <name1> , <name6> , <name5> , <name3> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name2> , <name4> , <name1> , <name6> , <name5> , <name3> , <name2> = map ( int , input ( ) . split ( ) )
<name6> に <val3> を掛けた値を <name4> で割った商を <name5> とする	<name5> = <name6> * <val3> // <name4>	<name5> = <name6> * <val3> // <name4>
入力された文字列を <val4> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name1> 、 <name3> 、 <name4> 、 <name5> 、 <name2> 、 <name6> 、 <name1> 、 <name3> とする	<name1> , <name3> , <name4> , <name5> , <name2> , <name6> , <name1> , <name3> = map ( float , input ( ) . split ( <val4> ) )	<name4> , <name5> , <name2> , <name6> , <name1> , <name3> = map ( float , input ( ) . split ( <val4> ) )
<name3> を <name5> に <name6> から <name2> を引いた値を掛けた値だけ左シフトする	<name3> << = ( <name5> * ( <name6> - <name2> ) )	<name3> << = <name5> * ( <name6> - <name2> )
<val1> を書式として <val2> を間に入れて <name6> の各要素に整数を適用した列を連結した文字列で整形した文字列を出力する	print ( <val1> . format ( <val2> . join ( map ( str , <name6> ) ) ) )	<val3> print ( <val1> . format ( <val2> . join ( map ( str , <name6> ) ) ) )
<name6> ( <name2> , <name4> ) を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name6> ( <name2> , <name4> )	<name3> , <name5> = <name6> ( <name2> , <name4> )
<name2> を <name3> の長さで割った値の平方根を <name2> とする	<name2> = math . sqrt ( <name2> / len ( <name3> ) )	<name2> = math . sqrt ( <name2> / len ( <name3> ) )
<name3> の <name1> から <val6> を引いた値番目に <name4> を加えた値を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name3> [ <name1> - <val6> ] + <name4>	<name1> [ <name1> ] = <name3> [ <name1> - <val6> ] + <name4>
<name1> 、 <name5> 、 <name4> 、 <name2> の日付を <name3> とする	<name3> = <name1> . date ( <name5> , <name4> , <name2> )	<name3> = <name1> . date ( <name5> , <name4> , <name2> )
<val3> に <val3> を間に入れて <name6> [ <name4> ] の <name5> 番目の各要素に整数を適用した列を連結した文字列を加えた値を出力する	print ( <val3> + <val3> . join ( map ( str , <name6> [ <name4> ] [ <name5> ] ) ) )	print ( <val3> + <val3> . join ( map ( str , <name6> [ <name4> ] [ <name5> ] ) ) )
<name2> ( <name5> ) を <name4> とする	<name4> = <name2> ( <name5> )	<name4> = <name2> ( <name5> )
<name6> . <name3> ( ) を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = <name6> . <name3> ( )	<name2> , <name5> = <name6> . <name3> ( )
<name5> から <name5> の整数値を引いた値を <name1> とする	<name1> = <name5> - int ( <name5> )	<name4> = <name5> - int ( <name5> )
<val2> から <name6> から <val4> を引いた値未満までの -1 間隔の数列の各要素を <name5> とし、 <name3> の末尾に <name5> を追加するの列	[ <name3> . append ( <name5> ) for <name5> in range ( <val2> , <name6> - <val4> , - <val4> ) ]	<name3> . append ( [ <name3> . append ( <name5> ) for <name5> in range ( <val2> , <name6> - <val4> , - <val4> ) ] )
<name5> を <name4> の <name1> にする	<name4> . <name1> = <name5>	( <name4> . <name1> = <name5> )
<name3> の <name2> 番目の <name5> 番目、 <name6> に <name1> を加えた値の最小値を <name3> の <name2> 番目の <name5> 番目にする	<name3> [ <name2> ] [ <name5> ] = min ( <name3> [ <name2> ] [ <name5> ] , <name6> + <name1> )	<name3> [ <name2> ] [ <name5> ] = min ( <name3> [ <name2> ] [ <name5> ] , <name6> + <name1> )
<name1> ( <name4> , <name3> , <name5> )	<name1> ( <name4> , <name3> , <name5> )	<name4> ( <name4> , <name3> , <name5> )
<name2> が <name5> と等しくなくまたは <name1> が <name5> と等しくないとき、	if <name2> != <name5> or <name1> != <name5> :	raise <name2> != <name5> or <name1> != <name5> :
<name2> を <name5> に <name3> から <name4> を引いた値を掛けた値だけ減少させる	<name2> -= ( <name5> * ( <name3> - <name4> ) )	<name2> -= <name5> * ( <name3> - <name4> )
<name4> のとき <name2> ( <name4> . <name3> ) に ' {}' を加えた値に <name2> ( <name4> . <name6> ) を加えた値、そうでなければ <val5> を返す	return <name2> ( <name4> . <name3> ) + { <name4> . key } + <name2> ( <name4> . <name6> ) if <name4> else <val5>	return <name2> ( <name4> . <name3> ) + { <name4> . key } + <name2> ( <name4> . <name6> ) if <name4> else <val5>
( <val3> ) からなる列の <val6> 回分の列、 ( <val3> ) からなる列の <val6> 回分の列を <name1> 、 <name5> とする	<name1> , <name5> = [ <val3> ] * <val6> , [ <val3> ] * <val6>	<name3> , <name1> , <name5> = [ <val3> ] * <val6> , [ <val3> ] * <val6>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組を現在の日時とする	now = tuple ( map ( int , input ( ) . split ( ) ) )	inf = tuple ( map ( int , input ( ) . split ( ) ) )
<name2> を <name1> の <name6> の <name5> 番目にする	<name1> . <name6> [ <name5> ] = <name2>	( <name1> [ <name6> . <name5> ] = <name2> )
<name3> から <name3> の <val2> 乗から <name5> を引いた値を <val2> に <name3> の <val1> 乗を掛けた値で割った値を引いた値を <name3> とする	<name3> = <name3> - ( <name3> ** <val2> - <name5> ) / ( <val2> * <name3> ** <val1> )	<name1> = <name3> - ( <name3> ** <val2> - <name5> ) / ( <val2> * ( <name3> ** <val1> ) )
<name6> の <name5> 番目の <name1> 番目、 <name6> の <name5> 番目の <name2> 番目に <name3> [ <name5> ] [ <val4> ] * <name3> [ <name2> ] [ <val6> ] に <name3> [ <name2> + <val6> ] [ <val4> ] を掛けた値に <name3> [ <name1> ] の <val6> 番目を掛けた値を加えた値に <name6> の <name2> に <val6> を加えた値番目の <name1> 番目を加えた値の最小値を <name6> の <name5> 番目の <name1> 番目にする	<name6> [ <name5> ] [ <name1> ] = min ( <name6> [ <name5> ] [ <name1> ] , <name6> [ <name5> ] [ <name2> ] + <name3> [ <name5> ] [ <val4> ] * <name3> [ <name2> ] [ <val6> ] * <name3> [ <name2> + <val6> ] [ <val4> ] * <name3> [ <name1> ] [ <val6> ] + <name6> [ <name2> + <val6> ] [ <name1> ] )	<name1> [ <name6> ] [ <name5> ] = min ( <name6> [ <name5> ] [ <name1> ] , <name6> [ <name5> ] [ <name2> ] * <name3> [ <name5> ] [ <val4> ] * <name3> [ <name2> ] [ <val6> ] * <name3> [ <name2> + <val6> ] [ <val4> ] * <name3> [ <name1> ] [ <val6> ] + <name5> [ <val6> ] * <name1> [ <val6> ] + <name5> [ <val6> ]
<name6> が <name3> の <name5> と等しいとき、	if <name6> == <name3> . <name5> :	list ( <name6> == <name3> . <name5> ) :
<name6> の <name5> 番目から <name5> に <val4> を加えた値までの部分列が <val2> と等しいとき、	if <name6> [ <name5> : <name5> + <val4> ] == <val2> :	list ( <name6> [ <name5> : <name5> + <val4> ] == <val2> :
<val1> から <name5> を引いた値を <name5> とする	<name5> = <val1> - <name5>	<name2> <name5> = <val1> - <name5>
<name1> を順に <name2> として、繰り返す <blk> <name2> を展開してを出力する </blk>	for <name2> in <name1> : <blk> print ( * <name2> ) </blk>	for <name2> in <name1> : <blk> print ( * <name2> ) </blk>
<name1> に <val3> を加えた値を <name5> の <name1> 番目の <val2> 番目にする	<name5> [ <name1> ] [ <val2> ] = <name1> + <val3>	<name4> [ <name1> ] [ <val2> ] = <name1> + <val3>
<name5> ( <name3> , <name6> , <name4> ) の先頭を <name1> とする	<name1> = <name5> ( <name3> , <name6> , <name4> ) [ 0 ]	<name1> = <name5> ( <name3> , <name6> , <name4> ) [ 0 ]
<name3> に <name1> を加えた値から <name6> を引いた値を <name4> とする	<name4> = <name3> + <name1> - <name6>	<name4> = <name3> + <name1> - <name6>
<val5> を <name3> を <name4> とするとするを <name1> とする	<name1> = <name4> = <name3> = <val5>	\ <name1> = <name4> = <name3> = <val5>
<name6> を ( <name1> 、 <name5> ) からなる列の集合だけ減少させる	<name6> -= set ( [ <name1> , <name5> ] )	set <name6> -= set ( [ <name1> , <name5> ] )
<name5> の、つまり先頭から、つまり末尾までの <val3> 間隔による部分列内の <name2> の出現回数が <val4> と等しくまたは <name5> の <val1> 番目から <val6> 番目までの <val1> 間隔による部分列内の <name2> の出現回数が <val4> と等しいとき、 <blk> <name2> を返す </blk>	if <name5> [ 0 : : <val3> ] . count ( <name2> ) == <val4> or <name5> [ <val1> : <val6> : <val1> ] . count ( <name2> ) == <val4> : <blk> return <name2> </blk>	\ if <name5> [ 0 : : <val3> ] . count ( <name2> ) == <val4> or <name5> [ <val1> : <val6> : <val1> ] . count ( <name2> ) == <val4> : <blk> return <name2> </blk>
<name1> ( <name6> . <name5> / <name3> , <name6> . <name2> / <name3> ) を返す	return <name1> ( <name6> . <name5> / <name3> , <name6> . <name2> / <name3> )	return <name1> ( <name6> . <name5> / <name3> , <name6> . <name2> / <name3> )
<name3> ( <name5> -1 , <name2> , <val4> , <val4> , <name1> ) を出力する	print ( <name3> ( <name5> - 1 , <name2> , <val4> , <val4> , <name1> ) )	print ( <name3> ( <name5> - 1 , <name2> , <val4> , <val4> , <name1> ) )
<name5> . <name4> ( <name2> , <name1> + <name3> , <val6> , <name5> )	<name5> . <name4> ( <name2> , <name1> + <name3> , <val6> , <name5> )	<name1> . <name4> ( <name2> , <name1> + <name3> , <val6> , <name5> )
<name1> を <val2> で割った余りが <val6> と等しいとき、	if ( <name1> % <val2> == <val6> ) :	continue <name1> % <val2> == <val6> :
<name4> に <name5> を掛けた値を出力する	print ( <name4> * <name5> )	print ( <name4> * <name5> )
<name4> ( <name2> . <name3> [ <val1> : ] )	<name4> ( <name2> . <name3> [ <val1> : ] )	<name4> ( <name2> . <name3> [ <val1> : ] )
<name1> に対応する値、もし存在しなければ ( <name5> に <val3> を加えた値、 <name2> ) の組、 <val6> 、 <name4> の最大値を <name1> の <name5> に <val3> を加えた値から、つまり末尾までの部分列にする	<name1> [ <name5> + <val3> : ] = max ( <name1> . get ( ( <name5> + <val3> , <name2> ) , <val6> ) , <name4> )	<name1> [ <name5> + <val3> : ] = <name1> . get ( ( <name5> + <val3> , <name2> ) , <val6> , <name4> )
<name1> の <name5> に <name4> を加えた値番目の <name6> に <name3> を加えた値番目の <name2> 番目の <name1> から <val5> を引いた値番目を順に <name6> 、 <name3> 、 <name2> として、繰り返す	for <name6> , <name3> , <name2> in <name1> [ <name5> + <name4> ] [ <name6> + <name3> ] [ <name2> ] [ <name1> - <val5> ] :	. for <name6> , <name3> , <name2> in <name1> [ <name5> + <name4> ] [ <name6> + <name3> ] [ <name2> ] [ <name1> - <val5> ] :
<name5> の <val2> 番目を <name4> だけ増加させる	<name5> [ <val2> ] += <name4>	( <name5> [ <val2> ] += <name4> )
<name3> の <name5> 番目を展開し、それぞれ <name2> 、 <name1> とする <name3> の <name5> に <val2> を加えた値番目を展開し、それぞれ <name4> 、 <name6> とする	<name2> , <name1> = <name3> [ <name5> ] <name4> , <name6> = <name3> [ <name5> + <val2> ]	( <name2> , <name1> = <name3> [ <name5> ] ) <name4> , <name6> = <name3> [ <name5> + <val2> ]
\\\ n を代わりの行末として <val3> を出力する\	\ print ( <val3> , end = '\\n ' ) \	from print ( <val3> , end = '\\n' ) \
<name5> 、 <name2> を出力する	print ( <name5> , <name2> )	print ( <name5> , <name2> )
<name4> の末尾に ( <name2> 、 <name3> 、 <name1> ) の組を追加する	<name4> . append ( ( <name2> , <name3> , <name1> ) )	<name4> . append ( ( <name2> , <name3> , <name1> ) )
<name5> の <name1> の末尾に ( <name4> 、 <name4> ) の組を追加する	<name5> . <name1> . append ( ( <name4> , <name4> ) )	<name1> . append ( ( <name4> , <name4> ) )
<val4> から <val1> 未満までの数列の各要素を <name6> とし、 <name6> の文字列の列を <name2> とする	<name2> = [ str ( <name6> ) for <name6> in range ( <val4> , <val1> ) ]	<name6> = [ str ( <name6> ) for <name6> in range ( <val4> , <val1> ) ]
<val2> を <name1> とする <name6> 、 <name3> の最小値を <name5> とする	<name1> = <val2> <name5> = min ( <name6> , <name3> )	<name4> = <name1> = <val2> <name5> = min ( <name6> , <name3> )
<name3> の <val2> 番目の先頭を <name1> とする	<name1> = <name3> [ <val2> ] [ 0 ]	<name1> = <name3> [ <val2> ] [ 0 ]
<name3> ( <name1> , <name4> ) を <val2> に <name5> を掛けた値で割った余りを <name6> で割った値を <name6> とする	<name6> = ( <name3> ( <name1> , <name4> ) % ( <val2> * <name5> ) ) / <name6>	<name6> = ( <name3> ( <name1> , <name4> ) % ( <val2> * <name5> ) ) / <name6>
<val3> から <name1> に <val3> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , <name1> + <val3> ) :	continue for <name6> in range ( <val3> , <name1> + <val3> ) :
<name6> 、 <name3> 、 <name2> の最小値を <name4> とする	<name4> = min ( <name6> , <name3> , <name2> )	<name4> = min ( <name6> , <name3> , <name2> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name1> の <name2> に <name5> を加えた値番目から <name1> の <name2> 番目に <name4> の <name5> 番目を掛けた値を引いた値を <name3> で割った余りを <name6> とする	<name6> = ( <name1> [ <name2> + <name5> ] - <name1> [ <name2> ] * <name4> [ <name5> ] ) % <name3>	<name6> = ( <name1> [ <name2> + <name5> ] - <name1> [ <name2> ] * <name4> [ <name5> ] ) % <name3>
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name1> 、 <name5> とする	<name3> , <name6> , <name1> , <name5> = map ( int , <name2> . split ( ) )	<name3> , <name6> , <name1> , <name5> = map ( int , <name2> . split ( ) )
<name2> の <name3> 、 <name4> の総和に <name4> を掛けた値に <name2> の <name6> 、 <name4> の総和を加えた値を <name5> とする	<name5> = <name2> . <name3> . sum ( <name4> ) * <name4> + <name2> . <name6> . sum ( <name4> )	<name5> = <name2> . <name3> . sum ( <name4> ) * <name4> + <name2> . <name6> . sum ( <name4> )
<name4> に番号付した組の列の各要素を <name5> 、 <name1> とし、 <name1> のときの <name5> の列を <name3> とする	<name3> = [ <name5> for <name5> , <name1> in enumerate ( <name4> ) if <name1> ]	<name4> = [ <name5> for <name5> , <name1> in enumerate ( <name4> ) if <name1> ]
<name1> に <name1> から <name5> を引いた値を掛けた値に <name1> から <name6> を引いた値を掛けた値に <name1> から <name2> を引いた値を掛けた値の <val4> 乗を <name3> とする	<name3> = ( <name1> * ( <name1> - <name5> ) * ( <name1> - <name6> ) * ( <name1> - <name2> ) ) ** <val4>	else <name3> = ( <name1> * ( <name1> - <name5> ) * ( <name1> - <name6> ) * ( <name1> - <name2> ) ) ** <val4>
<val5> に <val6> に <name4> を <val5> で割った値を加えた値の <name2> 乗を掛けた値を返す	return <val5> * ( <val6> + <name4> / <val5> ) ** <name2>	assert <val5> + <val6> * ( <name4> / <val5> ) ** <name2>
<val6> を間に入れて <name5> を連結した文字列を出力する	print ( <val6> . join ( <name5> ) )	print ( <val6> . join ( <name5> ) )
<name4> の <name1> 番目の <name6> 番目を <name3> とする	<name3> = <name4> [ <name1> ] [ <name6> ]	<name3> = <name4> [ <name1> ] [ <name6> ]
<name2> . <name6> ( <name3> , <name5> , <name1> )	<name2> . <name6> ( <name3> , <name5> , <name1> )	set ( <name2> . <name6> ( <name3> , <name5> , <name1> ) )
<val1> から <name6> 未満までの数列の各要素を <name5> とし、 <val1> の列を <name2> とする	<name2> = [ <val1> for <name5> in range ( <name6> ) ]	<name2> = [ <val1> for <name5> in range ( <name6> ) ]
<name6> の先頭を取り出した値を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name6> . pop ( )	<name2> , <name5> , <name1> = <name6> . pop ( )
( <val5> ) からなる列の <val2> 回分の列を <name4> とする	<name4> = [ <val5> ] * <val2>	<name4> = [ <val5> ] * <val2>
0 から <name5> 未満までの数列の各要素を <name2> とし、 <name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開しての複素数の列を <name3> とする	<name3> = [ complex ( * map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name5> ) ]	<name6> = [ complex ( * map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name5> ) ]
<name2> に <name4> を加えた値から <name3> を引いた値に <val1> を加えた値を出力する	print ( <name2> + <name4> - <name3> + <val1> )	print ( <name2> + <name4> - <name3> + <val1> )
( <name3> [ <val4> ] の文字列に <name3> [ <val6> ] の文字列を加えた値の整数値、 <name3> [ <val6> ] の文字列に <name3> [ <val4> ] の文字列を加えた値の整数値、 <name3> [ <val4> ] の文字列に <name3> [ <val1> ] の文字列を加えた値の整数値、 <name3> [ <val1> ] の文字列に <name3> [ <val4> ] の文字列を加えた値の整数値、 <name3> [ <val2> ] の文字列に <name3> [ <val4> ] の文字列を加えた値の整数値、 <name3> [ <val4> ] の文字列に <name3> [ <val2> ] の文字列を加えた値の整数値 ) からなる列をソートした列を <name5> とする	<name5> = sorted ( [ int ( str ( <name3> [ <val4> ] ) + str ( <name3> [ <val6> ] ) ) , int ( str ( <name3> [ <val6> ] ) + str ( <name3> [ <val4> ] ) ) , int ( str ( <name3> [ <val4> ] ) + str ( <name3> [ <val1> ] ) ) , int ( str ( <name3> [ <val1> ] ) + str ( <name3> [ <val4> ] ) ) , int ( str ( <name3> [ <val2> ] ) + str ( <name3> [ <val4> ] ) ) , int ( str ( <name3> [ <val4> ] ) + str ( <name3> [ <val2> ] ) ) ] )	<name3> = [ str ( <name3> [ <val4> ] ) + str ( int ( <name3> [ <val6> ] ) , str ( <name3> [ <val6> ] ) + str ( <name3> [ <val4> ] ) , str ( <name3> [ <val4> ] ) + str ( <name3> [ <val1> ] ) , str ( <name3> [ <val1> ] ) + str ( <name3> [ <val4> ] [ <val1> ] ) ) , [ <val2> ] ) + str ( <name3> [ <val4> ] )
<name2> . <name1> ( <name4> . <name5> ) を返す	return <name2> . <name1> ( <name4> . <name5> )	self return <name2> . <name1> ( <name4> . <name5> )
<name3> の <name1> から <val4> を引いた値番目の <name2> 番目を <val6> だけ増加させる	<name3> [ <name1> - <val4> ] [ <name2> ] += <val6>	[ <name3> [ <name1> - <val4> ] [ <name2> ] += <val6>
<name1> の、つまり先頭から <val2> 番目までの部分列を順に <name3> として、繰り返す	for <name3> in <name1> [ : <val2> ] :	while <name1> [ 0 : <val2> ] :
<name1> を <val3> だけ減少させる <name2> を <val3> だけ減少させる	<name1> -= <val3> <name2> -= <val3>	<name1> -= <val3> <name2> -= <val3>
<name6> に <name5> を加えた値を <name1> とする <name3> に <name2> を加えた値を <name4> とする	<name1> = <name6> + <name5> <name4> = <name3> + <name2>	<name2> = <name6> + <name5> <name4> = <name3> + <name2>
<name5> の <name1> 番目を <name1> とする <name3> の <name4> 番目を <name4> とする	<name1> = <name5> [ <name1> ] <name4> = <name3> [ <name4> ]	<name1> = <name5> [ <name1> ] <name4> = <name3> [ <name4> ]
<name1> を <name5> の <val6> 番目から <name4> を引いた値、 <val6> の最大値だけ増加させる	<name1> += max ( <name5> [ <val6> ] - <name4> , <val6> )	<name1> += max ( <name5> [ <val6> ] - <name4> , <val6> )
<name2> の <name6> 番目の <name5> 番目を <name4> とする	<name4> = <name2> [ <name6> ] [ <name5> ]	<name4> = <name2> [ <name6> ] [ <name5> ]
( <name4> から <val3> を引いた値、 <name1> から <val3> を引いた値、 <name6> から <val3> を引いた値、 <name2> から <val3> を引いた値 ) の組を <name5> とする	<name5> = ( <name4> - <val3> , <name1> - <val3> , <name6> - <val3> , <name2> - <val3> )	<name5> = ( <name4> - <val3> , <name1> - <val3> , <name6> - <val3> , <name2> - <val3> )
<name4> の総和を <name6> で割った値を <name2> とする	<name2> = sum ( <name4> ) / <name6>	<name2> = sum ( <name4> ) / <name6>
<name5> の <name3> 番目の <name6> 番目の末尾に <name4> を追加する	<name5> [ <name3> ] [ <name6> ] . append ( <name4> )	<name4> [ <name3> ] [ <name6> ] . append ( <name4> )
<name2> の <name4> の先頭を取り出した値を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name2> . <name4> . pop ( )	<name2> , <name5> , <name6> = <name2> . <name4> . pop ( )
<name1> ( <val5> , <val3> ) の間、次を繰り返す	while <name1> ( <val5> , <val3> ) :	map ( <name1> ( <val5> , <val3> ) :
<name4> の末尾に <name3> の <name6> 番目を追加する	<name4> . append ( <name3> [ <name6> ] )	<name3> . append ( <name3> [ <name6> ] )
\ <name5> ( <val6> % <name1> [ <val3> ] ) \	\ <name5> ( <val6> % <name1> [ <val3> ] ) \	for <name5> in <name5> ( <val6> % <name1> [ <val3> ] ) \
<name4> の <name3> から <val5> を引いた値番目、 <name4> の <name3> から <val2> を引いた値番目を <name6> 、 <name1> とする	<name6> , <name1> = <name4> [ <name3> - <val5> ] , <name4> [ <name3> - <val2> ]	<name6> , <name1> = <name4> [ <name3> - <val5> ] , <name4> [ <name3> - <val2> ]
<name1> を <name3> ( <name4> [ <val6> ] , <name4> [ <val5> ] , <name2> [ <name1> -1 ] , <name2> [ <name1> ] ) でないとの論理積にする	<name1> & = not <name3> ( <name4> [ <val6> ] , <name4> [ <val5> ] , <name2> [ <name1> - <val5> ] , <name2> [ <name1> ] )	<name2> & = <name3> ( <name4> [ <val6> ] , <name4> [ <val5> ] , <name2> [ <name1> - <val6> ] , <name2> [ <name1> ] ) & = <name1> :
<name4> の <name6> に <val2> を加えた値番目を <name5> とする	<name5> = <name4> [ <name6> + <val2> ]	<name5> = <name4> [ <name6> + <val2> ]
<name2> ( <name1> , <name6> , <name3> , <name4> + <val5> ) を <name5> とする	<name5> = <name2> ( <name1> , <name6> , <name3> , <name4> + <val5> )	<name5> = <name2> ( <name1> , <name6> , <name3> , <name4> + <val5> )
<name3> の <name2> 番目を <name4> とする <name6> の <name2> 番目を <name5> とする	<name4> = <name3> [ <name2> ] <name5> = <name6> [ <name2> ]	<name2> = <name3> [ <name2> ] <name5> = <name6> [ <name2> ]
<name3> ( <name5> , <name2> , <name1> , <name6> , <name4> ) を <name4> とする	<name4> = <name3> ( <name5> , <name2> , <name1> , <name6> , <name4> )	<name6> = <name3> ( <name5> , <name2> , <name1> , <name6> , <name4> )
<name3> の <name4> の <name2> に <val5> を加えた値番目の <name1> に <val5> を加えた値番目を <name3> の <name6> で割った余りにする	<name3> . <name4> [ <name2> + <val5> ] [ <name1> + <val5> ] % = <name3> . <name6>	( <name3> [ <name4> [ <name2> + <val5> ] ] [ <name1> + <val5> ] % = <name3> . <name6> )
<name6> の末尾に ( <name4> 、 <name1> ) からなる列を追加する	<name6> . append ( [ <name4> , <name1> ] )	<name5> . append ( [ <name4> , <name1> ] )
<name5> の <val4> 番目のリストを <name1> とする	<name1> = list ( <name5> [ <val4> ] )	<name1> = list ( <name5> [ <val4> ] )
<name3> の <val5> を取り出した値を <name2> とする	<name2> = <name3> . pop ( <val5> )	<name2> = <name3> . pop ( <val5> )
<name4> ( <name6> * <name3> . <name2> , <name6> * <name3> . <name1> ) を返す	return <name4> ( <name6> * <name3> . <name2> , <name6> * <name3> . <name1> )	yield <name4> ( <name6> * <name3> . <name2> , <name6> * <name3> . <name1> )
<name3> の <name6> に <val4> を加えた値番目の <name5> に <name2> の <val4> 番目を加えた値番目、 <name3> の <name6> 番目の <name5> 番目に <name2> の先頭を加えた値の最大値を <name3> の <name6> に <val4> を加えた値番目の <name5> に <name2> の <val4> 番目を加えた値番目にする	<name3> [ <name6> + <val4> ] [ <name5> + <name2> [ <val4> ] ] = max ( <name3> [ <name6> + <val4> ] [ <name5> + <name2> [ <val4> ] ] , <name3> [ <name6> ] [ <name5> ] + <name2> [ 0 ] )	<name5> [ <name3> [ <name6> + <val4> ] [ <name5> + <val4> ] = max ( <name3> [ <name6> + <val4> ] [ <name5> + <name2> [ <val4> ] ] , <name3> [ <name6> ] [ <name5> ] + <name2> [ 0 ] )
( ( <val5> 、 <name1> から <val3> を引いた値 ) の組 ) からなる列を <name2> とする	<name2> = [ ( <val5> , <name1> - <val3> ) ]	<name6> = [ ( <val5> , <name1> - <val3> ) ]
0 から <name1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name3> in range ( <name1> ) ]	<name6> = [ int ( input ( ) ) for <name3> in range ( <name1> ) ]
<name2> ( <name5> , <name3> ) から <val4> を引いた値を <name6> とする	<name6> = <name2> ( <name5> , <name3> ) - <val4>	( <name6> = <name2> ( <name5> , <name3> ) - <val4> )
<name6> が <val1> より大きいとき <name6> 、そうでなければ <val5> を出力する	print ( <name6> if <name6> > <val1> else <val5> )	print ( <name6> if <name6> > <val1> else <val5> )
<name1> の <name3> 番目に <val4> を掛けた値から <val2> を引いた値に <name6> を加えた値を <name5> とする	<name5> = <name1> [ <name3> ] * <val4> - <val2> + <name6>	<name5> = <name1> [ <name3> ] * <val4> - <val2> + <name6>
<name3> の <name2> に <val1> を加えた値番目を <name3> の <name2> 番目に <name5> の <name2> に <val1> を加えた値番目を加えた値だけ増加させる	<name3> [ <name2> + <val1> ] += <name3> [ <name2> ] + <name5> [ <name2> + <val1> ]	<name2> [ <name2> + <val1> ] += <name3> [ <name2> ] + <name5> [ <name2> + <val1> ]
<name6> のとき、 <blk> 偽を <name6> とする </blk>	if <name6> : <blk> <name6> = False </blk>	try : <blk> <name6> = False <sep> = False </blk>
<name5> . <name4> ( <name3> , [ <name2> , <name6> ] )	<name5> . <name4> ( <name3> , [ <name2> , <name6> ] )	<name2> . <name5> . <name4> ( <name3> , [ <name2> , <name6> ] )
( <name3> ) からなる列の <name6> の <name5> 回分の列を <name1> とする	<name1> = [ <name3> ] * <name6> . <name5>	<name1> = [ <name3> ] * <name6> . <name5>
<name2> . <name1> ( <name3> , <name5> . <name4> - <name6> . <name2> ) の絶対値を <name6> とする	<name6> = abs ( <name2> . <name1> ( <name3> , <name5> . <name4> - <name6> . <name2> ) )	else = abs ( <name2> . <name1> ( <name3> , <name5> . <name4> - <name6> . <name2> ) )
<name3> ( <name2> [ <name4> ] )	<name3> ( <name2> [ <name4> ] )	<name4> ( <name2> [ <name4> ] )
<name4> 、 <name6> 、 <name3> の要素をそれぞれ組にした列の各要素に <name5> を適用した列の最小値を出力する	print ( min ( map ( <name5> , zip ( <name4> , <name6> , <name3> ) ) ) )	<name4> . min ( map ( <name5> , zip ( <name4> , <name6> , <name3> ) ) )
<name6> を反転した列を順に <name5> として、繰り返す	for <name5> in reversed ( <name6> ) :	. for <name5> in reversed ( <name6> ) :
<name2> の <name3> を取り出した値	<name2> . pop ( <name3> )	max ( <name2> . pop ( <name3> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name3> とする	<name1> , <name2> , <name3> = map ( int , input ( ) . split ( ) )	<name1> , <name2> , <name3> = map ( int , input ( ) . split ( ) )
<name1> を <name2> の先頭の <val4> 番目にする	<name2> [ <val4> ] [ <val4> ] = <name1>	( <name2> [ <val4> ] [ <val4> ] = <name1> )
<name5> に対応する値、もし存在しなければ <name4> 、 <name1> 、 <val2> に <name6> を掛けた値に <val2> を加えた値、 <name3> に <name5> を加えた値を <val2> で割った商、 <name5> を <name3> とする	<name3> = <name5> . get ( <name4> , <name1> , <val2> * <name6> + <val2> , ( <name3> + <name5> ) // <val2> , <name5> )	<name2> , <name3> = <name5> . get ( <name4> , <name1> , <val2> * <name6> + <val2> , ( <name3> + <name5> ) // <val2> , <name5> )
<name3> の <name2> 番目を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name3> [ <name2> ]	not <name1> , <name6> = <name3> [ <name2> ]
\ <name3> ( <val1> % <name6> [ <name2> ] ) \	\ <name3> ( <val1> % <name6> [ <name2> ] ) \	for <name3> in <name3> ( <val1> % <name6> [ <name2> ] ) \
<name1> の <name5> 番目に <name6> を追加した集まり	<name1> [ <name5> ] . add ( <name6> )	not <name1> [ <name5> ] . add ( <name6> )
0 から <name3> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> + <val1> ) :	) for <name5> in range ( <name3> + <val1> ) :
改行せずに <name5> を英大文字に変換した文字列を出力する	print ( <name5> . upper ( ) , end = '' )	print ( <name5> . upper ( ) , end = '' )
<val4> から <name6> に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> , <name6> + <val4> ) :	for <name2> in range ( <val4> , <name6> + <val4> ) :
<name6> ( <val3> ) を <name5> とする	<name5> = <name6> ( <val3> )	else = <name6> ( <val3> )
( ( <val2> 、 <val3> ) の組、 ( <val2> 、 -1 ) の組、 ( <val3> 、 <val2> ) の組、 ( -1 、 <val2> ) の組 ) の組を <name5> とする	<name5> = ( ( <val2> , <val3> ) , ( <val2> , - <val3> ) , ( <val3> , <val2> ) , ( - <val3> , <val2> ) )	<name5> = ( ( <val2> , <val3> ) , ( <val2> , - <val2> ) , ( <val3> , <val2> ) , ( - <val2> , <val2> ) )
<name4> . <name5> ( <name1> , <name6> , <name3> * <val2> + <val4> , <name5> , ( <name5> + <name1> ) // <val2> ) を <name2> とする	<name2> = <name4> . <name5> ( <name1> , <name6> , <name3> * <val2> + <val4> , <name5> , ( <name5> + <name1> ) // <val2> )	input = <name4> . <name5> ( <name1> , <name6> , <name3> * <val2> + <val4> , <name5> , ( <name5> + <name1> ) // <val2> )
<name6> . <name4> ( <name2> , <name3> , <name5> ) を <name1> とする	<name1> = <name6> . <name4> ( <name2> , <name3> , <name5> )	<name1> = <name6> . <name4> ( <name2> , <name3> , <name5> )
<name2> に <name4> を加えた値に <name2> に <name6> を掛けた値を <val5> で割った商を加えた値に <name4> に <name6> を掛けた値を <val5> で割った商を加えた値を <name1> とする	<name1> = <name2> + <name4> + ( <name2> * <name6> ) // <val5> + ( <name4> * <name6> ) // <val5>	<name1> = <name2> + <name4> + ( <name2> * <name6> ) // <val5> + ( <name4> * <name6> ) // <val5>
<name5> の <name1> に <name4> を加えた値、 <name2> の最小値番目を <val6> だけ減少させる	<name5> [ min ( <name1> + <name4> , <name2> ) ] -= <val6>	<name3> [ min ( <name1> + <name4> , <name2> ) ] -= <val6>
<name1> を <val2> に <name6> を掛けた値だけ減少させる	<name1> -= <val2> * <name6>	not <name1> -= ( <val2> * <name6> )
<name5> ( <name1> , <name2> , <name6> )	<name5> ( <name1> , <name2> , <name6> )	( <name5> ( <name1> , <name2> , <name6> ) )
<name3> の <val4> 番目を <name1> の <val4> 番目にする	<name1> [ <val4> ] = <name3> [ <val4> ]	<name1> [ <val4> ] = <name3> [ <val4> ]
<name6> に <name2> を加えた値を <name4> の <name1> の <name3> 番目にする	<name4> . <name1> [ <name3> ] = <name6> + <name2>	( <name4> . <name1> [ <name3> ] = <name6> + <name2> )
<val3> から <val4> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , <val4> ) :	continue for <name6> in range ( <val3> , <val4> ) :
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = map ( int , input ( ) . split ( <val1> ) )	<name3> , <name6> = map ( int , input ( ) . split ( <val1> ) )
<name5> の <val6> 、 <name2> から <name4> を引いた値の最大値番目を <val1> だけ増加させる	<name5> [ max ( <val6> , <name2> - <name4> ) ] += <val1>	<name1> [ max ( <val6> , <name2> - <name4> ) ] += <val1>
<name6> の <name4> を <name6> の <name5> にする	<name6> . <name5> = <name6> . <name4>	<name1> . <name5> = <name6> . <name4>
<name1> の各要素を <name4> 、 <name3> 、 <name5> とし、 ( <name4> 、 <name2> [ <name5> ] ( <name3> , <name6> ) ) の組の列を <name1> とする	<name1> = [ ( <name4> , <name2> [ <name5> ] ( <name3> , <name6> ) ) for <name4> , <name3> , <name5> in <name1> ]	<name1> = [ ( <name4> , <name2> [ <name5> ] ( <name3> , <name6> ) ) for <name4> , <name3> , <name5> in <name1> ]
<name6> の末尾に [ MASK ] を追加するを <name4> とする	<name4> = <name6> . append	( <name4> = <name6> . append )
<name4> ( <name1> , <name1> [ <name5> ] . <name6> , <name3> )	<name4> ( <name1> , <name1> [ <name5> ] . <name6> , <name3> )	<name4> ( <name1> , <name1> [ <name5> ] . <name6> , <name3> )
( ( <val3> , <val1> ) ) からなる辞書を <name5> とする	<name5> = { <val3> : <val1> }	<name5> = { <val3> : <val1> }
<name1> の末尾に ( <name5> 、 <name4> 、 <name2> 、 <name6> に <val3> を加えた値、 <name1> ) の組を追加する	<name1> . append ( ( <name5> , <name4> , <name2> , <name6> + <val3> , <name1> ) )	<name1> . append ( ( <name5> , <name4> , <name2> , <name6> + <val3> , <name1> ) )
<name1> をパラメータとして ( <name1> の <val5> 番目、 <name1> の先頭 ) の組を返す関数をキーとして逆順に <name2> のキーと値の集まりをソートした列を <name3> とする	<name3> = sorted ( <name2> . items ( ) , key = lambda <name1> : ( <name1> [ <val5> ] , <name1> [ 0 ] ) , reverse = True )	else = sorted ( <name2> . items ( ) , key = lambda <name1> : ( <name1> [ <val5> ] , <name1> [ 0 ] ) , reverse = True )
\ <name1> ( <val3> % <name5> ( <name6> ) ) \	\ <name1> ( <val3> % <name5> ( <name6> ) ) \	\ <name1> ( <val3> % <name5> ( <name6> ) ) \
<name4> の末尾に ( -2 、 -1 ) の組を追加する	<name4> . append ( ( - 2 , - 1 ) )	<name4> . append ( ( - 2 , - 1 ) )
を間に入れて、つまり逆順に <name5> のリストをソートした列を連結した文字列を <name6> とする	<name6> = '' . join ( sorted ( list ( <name5> ) , reverse = True ) )	<name6> = '' . join ( sorted ( list ( <name5> ) , reverse = True ) )
( <val1> 、 <val4> 、 <val6> 、 <val3> ) からなる列を <name5> とする	<name5> = [ <val1> , <val4> , <val6> , <val3> ]	<name5> = [ <val1> , <val4> , <val6> , <val3> ]
<name4> <name3> <name2> <name1> <name5>	<name4> <name3> <name2> <name1> <name5>	( <name4> <name3> <name2> <name1> <name5> )
<name1> から <val5> 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> , <val5> , - 1 ) :	. for <name6> in range ( <name1> , <val5> , - 1 ) :
<name4> の各要素を <name5> 、 <name6> 、 <name2> 、 <name1> とし、 <name5> が <name3> 以下かどうかが <name2> 以下かどうかの列が少なくともひとつは真のとき、	if any ( [ <name5> <= <name3> <= <name2> for <name5> , <name6> , <name2> , <name1> in <name4> ] ) :	> if any ( [ <name5> <= <name3> <= <name2> for <name5> , <name6> , <name2> , <name1> in <name4> ] ) :
<name3> の <name2> の <name5> 番目の末尾に <name1> を追加する	<name3> . <name2> [ <name5> ] . append ( <name1> )	<name2> . <name2> [ <name5> ] . append ( <name1> )
<name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val6> ] , <name4> [ <val4> ] , <name4> [ <val2> ] , <name1> [ <name3> ] ) を <name4> とする	<name4> = <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val6> ] , <name4> [ <val4> ] , <name4> [ <val2> ] , <name1> [ <name3> ] )	<name4> = <name2> ( <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val6> ] , <name4> [ <val4> ] , <name4> [ <val2> ] , <name1> [ <name3> ] )
<name1> から <name6> 、 <name3> 、 <name5> 、 <name2> の最小値を引いた値が <val4> より大きいとき、	if <name1> - min ( <name6> , <name3> , <name5> , <name2> ) > <val4> :	isinstance ( <name1> - min ( <name6> , <name3> , <name5> , <name2> ) > <val4> :
<name4> の <name1> から読み込んだ一行を <name6> とする	<name6> = <name4> . <name1> . <name6>	<name6> = <name4> . <name1> . <name6>
<name4> が <name5> の <name1> 番目より小さいとき、	if <name4> < <name5> [ <name1> ] :	while <name4> < <name5> [ <name1> ] :
<name5> の <name1> 番目に <name5> の <name1> に <val4> を加えた値番目を加えた値に <name5> の <name1> に <val6> を加えた値番目を加えた値を <name2> とする	<name2> = <name5> [ <name1> ] + <name5> [ <name1> + <val4> ] + <name5> [ <name1> + <val6> ]	<name5> = <name5> [ <name1> ] + <name5> [ <name1> + <val4> ] + <name5> [ <name1> + <val6> ]
<name4> の <val1> 番目が <name2> と等しくないとき、	if <name4> [ <val1> ] is <name2> :	[ if <name4> [ <val1> ] is <name2> :
<val4> を <name2> として 0 から <name6> に <val1> を加えた値未満までの数列と [ MASK ] の直積を順に <name5> として、繰り返す	for <name5> in product ( range ( <name6> + <val1> ) , <name2> = <val4> ) :	for <name5> in itertools . product ( range ( <name6> + <val1> ) , <name2> = <val4> ) :
<name1> が <val3> より大きくかつ <name4> の <name1> から <val5> を引いた値番目の <name6> 番目が <name2> と等しいとき、	if <name1> > <val3> and <name4> [ <name1> - <val5> ] [ <name6> ] == <name2> :	> if <name1> > <val3> and <name4> [ <name1> - <val5> ] [ <name6> ] == <name2> :
( ( <val5> ) からなる列の <val5> から <name4> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 <name3> に <val6> を加えた値の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val5> ] * [ ( <name3> + <val6> ) for <name1> in range ( <name4> + <val6> ) ] ]	<name2> = [ [ <val5> ] * [ ( <name3> + <val6> ) for <name1> in range ( <name4> + <val6> ) ] ]
<name3> ( <name2> , ( <val1> , <val1> ) )	<name3> ( <name2> , ( <val1> , <val1> ) )	<name3> ( <name2> , ( <val1> , <val1> ) )
<name1> ( <name6> , <name5> , <name4> , <name3> , <name2> ) を <name2> とする	<name2> = <name1> ( <name6> , <name5> , <name4> , <name3> , <name2> )	<name2> = <name1> ( <name6> , <name5> , <name4> , <name3> , <name2> )
<name6> が <name1> 以上かつ <name4> が <name3> 以下または <name6> が <name1> 以下かつ <name4> が <name3> 以上のとき、	if ( <name6> >= <name1> and <name4> <= <name3> ) or ( <name6> <= <name1> and <name4> >= <name3> ) :	and <name6> <= <name1> and <name4> <= <name3> or <name6> <= <name1> and <name4> >= <name3> :
<name3> の <name1> から <name6> を引いた値から <val5> を引いた値番目が <val4> と等しくないとき、 <blk> <name2> を <val5> だけ増加させる </blk>	if <name3> [ <name1> - <name6> - <val5> ] != <val4> : <blk> <name2> += <val5> </blk>	if <name3> [ <name1> - <name6> - <val5> ] != <val4> : <blk> <name2> += <val5> </blk>
<name3> を展開し、それぞれ <name4> 、 <name5> とする <name2> を展開し、それぞれ <name1> 、 <name6> とする <name3> を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name3> <name1> , <name6> = <name2> <name4> , <name5> = <name3>	<name6> , <name5> = <name3> <name1> , <name6> = <name2> <name4> , <name5> = <name3>
<name6> の総和を <name5> とする	<name5> = sum ( <name6> )	<name4> = sum ( <name6> )
<name6> の <name1> ( <name4> ) 番目を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name6> [ <name1> ( <name4> ) ]	<name2> [ <name4> ] = <name6> [ <name1> ( <name4> ) ]
<name5> の <name3> が、つまり未定値と等しいとき、	if ( <name5> . <name3> is not None ) :	while <name5> . <name3> is not None :
( <val4> ) からなる列の <val2> に ( <val6> ) からなる列の <name5> から <val2> を引いた値回分の列を加えた値回分の列を <name1> とする	<name1> = [ <val4> ] * <val2> + [ <val6> ] * ( <name5> - <val2> )	<name1> = [ <val4> ] * ( <val2> + [ <val6> ] * ( <name5> - <val2> ) )
<name5> の <name6> 番目の各要素を <name2> 、 <name1> とし、 <name3> の <name2> 番目が <val4> と等しくないときの ( <name2> 、 <name1> ) の組の列を <name4> とする	<name4> = [ ( <name2> , <name1> ) for <name2> , <name1> in <name5> [ <name6> ] if <name3> [ <name2> ] != <val4> ]	<name4> = [ ( <name2> , <name1> ) for <name2> , <name1> in <name5> [ <name6> ] if <name3> [ <name2> ] != <val4> ]
<name2> が <val1> と等しいとき、 <blk> <name3> エラーとなる </blk>	if <name2> == <val1> : <blk> raise <name3> </blk>	list ( <name2> == <val1> : if <name2> == <name3> </blk>
<val5> が <name1> の <val2> 番目以下かどうかが <val4> 以下のとき、	if <val5> <= <name1> [ <val2> ] <= <val4> :	. if <val5> <= <name1> [ <val2> ] <= <val4> :
<name5> から <val1> を引いた値を <name2> とする	<name2> = <name5> - <val1>	( <name2> = <name5> - <val1> )
<name5> の <name3> 番目の各要素を <name4> とし、 <name6> の <name4> 番目の列を返す	return [ <name6> [ <name4> ] for <name4> in <name5> [ <name3> ] ]	assert [ <name6> [ <name4> ] for <name4> in <name5> [ <name3> ] ]
<name5> の長さが <val6> より大きい間、次を繰り返す	while ( len ( <name5> ) > <val6> ) :	map ( len ( <name5> ) > <val6> ) :
<name4> ( <val6> , <val6> )	<name4> ( <val6> , <val6> )	<name5> <name4> ( <val6> , <val6> )
0 から <name6> 未満までの数列の各要素を <name2> とし、 ( -1 、 -1 ) からなる列の列を <name1> とする	<name1> = [ [ - 1 , - 1 ] for <name2> in range ( <name6> ) ]	<name1> = [ [ - 1 , - 1 ] for <name2> in range ( <name6> ) ]
0 から <name2> 未満までの数列の各要素を <name1> とし、 <name3> の <name1> 番目のときの <name1> の列を <name4> とする	<name4> = [ <name1> for <name1> in range ( <name2> ) if <name3> [ <name1> ] ]	<name4> = [ <name1> for <name1> in range ( <name2> ) if <name3> [ <name1> ] ]
書式 <name6> を <val3> でフォーマットした文字列を長さ <name2> になるように '0' 左詰めした文字列を <name5> とする	<name5> = format ( <name6> , <val3> ) . zfill ( <name2> )	<name5> = format ( <name6> , <val3> ) . zfill ( <name2> )
<name4> に ( <name3> - <name5> ) を掛けた値に <name1> に <name2> を掛けた値を加えた値に <name1> を加えた値から <val6> を引いた値を <name1> で割った商を <name6> とする	<name6> = ( <name4> * ( <name3> - <name5> ) + <name1> * <name2> + <name1> - <val6> ) // <name1>	<name6> = ( <name4> * ( <name3> - <name5> ) + <name1> * <name2> + <name1> - <val6> ) // <name1>
( ( <val6> ) からなる列の 0 から <val2> 未満までの数列の各要素を <name3> とし、 <val2> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val6> ] * [ <val2> for <name3> in range ( <val2> ) ] ]	<name1> = [ [ <val6> ] * [ <val2> for <name3> in range ( <val2> ) ] ]
<name5> ( <name4> -1 , <name1> , <name6> )	<name5> ( <name4> - 1 , <name1> , <name6> )	<name4> ( <name4> - 1 , <name1> , <name6> )
<name1> の末尾に ( <val6> 、 <name3> から <val2> を引いた値、 <name4> 、 <val2> ) の組を追加する	<name1> . append ( ( <val6> , <name3> - <val2> , <name4> , <val2> ) )	<name4> . append ( ( <val6> , <name3> - <val2> , <name4> , <val2> ) )
<name1> ( <name4> , <name3> ) を <name5> ( <name4> ) の <val6> 乗で割った値を <name2> とする	<name2> = <name1> ( <name4> , <name3> ) / <name5> ( <name4> ) ** <val6>	<name2> = <name1> ( <name4> , <name3> ) / <name5> ( <name4> ) ** <val6>
<name4> モジュールを用いる	from <name4> import namedtuple	return from <name4> import deque
<val1> から <name6> 未満までの数列の各要素を <name3> とし、 <val1> の列を <name2> とする	<name2> = [ <val1> for <name3> in range ( <name6> ) ]	<name2> = [ <val1> for <name3> in range ( <name6> ) ]
<name4> が <name2> から <val6> を引いた値と等しくかつ <name5> が <name3> から <val6> を引いた値と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name4> == <name2> - <val6> and <name5> == <name3> - <val6> : <blk> break </blk>	if ( <name4> == <name2> - <val6> ) and <name5> == <name3> - <val6> : <blk> break </blk>
<name2> の先頭から <name1> を探して見つかった位置が <name2> の先頭から <name6> を探して見つかった位置と等しくないかどうかを返す	return <name2> . find ( <name1> ) != <name2> . find ( <name6> )	x return <name2> . find ( <name1> ) != <name2> . find ( <name6> )
 を代わりの行末として <name1> を出力する	print ( <name1> , end = ' ' )	print ( <name1> , end = ' ' ' )
<val4> から <name1> に <val4> を加えた値未満までの数列の各要素を <name3> とし、 ( <val2> 、 <name3> ) の組の列を <name6> とする	<name6> = [ ( <val2> , <name3> ) for <name3> in range ( <val4> , <name1> + <val4> ) ]	<name4> = [ ( <val2> , <name3> ) for <name3> in range ( <name1> + <val4> ) ]
<name1> の <name3> から <val2> を引いた値番目が <name6> と等しいとき、	if <name1> [ <name3> - <val2> ] == <name6> :	for <name1> [ <name3> - <val2> ] == <name6> :
<name2> の <name4> 番目の <name6> 番目を <name5> の <name4> に <name1> を掛けた値に <name6> を加えた値番目にする	<name5> [ <name4> * <name1> + <name6> ] = <name2> [ <name4> ] [ <name6> ]	<name1> [ <name4> * <name1> + <name6> ] = <name2> [ <name4> ] [ <name6> ]
<name4> の <name1> 番目から、つまり末尾までの部分列に <name4> の、つまり先頭から <name1> 番目までの部分列を加えた値のコピーを <name4> とする	<name4> = ( <name4> [ <name1> : ] + <name4> [ : <name1> ] ) . copy ( )	<name5> = ( <name4> [ <name1> : ] + <name4> [ : <name1> ] ) . copy ( )
\ <val4> を書式として <val2> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列、無限の整数列で整形した文字列を出力する\	\ print ( <val4> . format ( <val2> . join ( map ( str , <name5> ) ) , count ) ) \	for print ( <val4> . format ( <val2> . join ( map ( str , <name5> ) ) , count ) ) \
<val4> を間に入れて <name1> の各要素を <name5> とし、 <name5> の文字列の列を連結した文字列を <name3> とする	<name3> = <val4> . join ( [ str ( <name5> ) for <name5> in <name1> ] )	<name4> = <val4> . join ( [ str ( <name5> ) for <name5> in <name1> ] )
<name5> ( <name1> , <name4> , <name2> , <name6> ) でないとき、	if not <name5> ( <name1> , <name4> , <name2> , <name6> ) :	isinstance ( <name5> ( <name1> , <name4> , <name2> , <name6> ) ) :
<name3> の <name1> から <val6> を引いた値番目、 <name3> の <name1> 番目に <val6> を加えた値の最小値を <name3> の <name1> から <val6> を引いた値番目にする	<name3> [ <name1> - <val6> ] = min ( <name3> [ <name1> - <val6> ] , <name3> [ <name1> ] + <val6> )	<name3> [ <name1> - <val6> ] = min ( <name3> [ <name1> - <val6> ] , <name3> [ <name1> ] + <val6> )
<val2> から <name1> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <val2> の列を <name3> とする	<name3> = [ <val2> for <name5> in range ( <name1> + <val6> ) ]	<name4> = [ <val2> for <name5> in range ( <name1> + <val6> ) ]
<name1> ( <name5> , <name2> ) の平方根を一旦、返す	yield sqrt ( <name1> ( <name5> , <name2> ) )	2 yield math . sqrt ( <name1> ( <name5> , <name2> ) )
<name4> の <name2> の <name1> 番目が <val5> 以上の間、次を繰り返す	while <name4> . <name2> [ <name1> ] >= <val5> :	: while <name4> . <name2> [ <name1> ] >= <val5> :
<name1> に <name1> に <val6> を加えた値を掛けた値に <name1> に <val5> を加えた値を掛けた値を <val3> で割った商を <name2> とする	<name2> = <name1> * ( <name1> + <val6> ) * ( <name1> + <val5> ) // <val3>	<name2> = <name1> * ( <name1> + <val6> ) * ( <name1> + <val5> ) // <val3>
<val6> から <name3> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す <blk> <name2> の <name1> から <val6> を引いた値番目に <name4> の <name1> から <val6> を引いた値番目を加えた値を <name2> の <name1> 番目にする </blk>	for <name1> in range ( <val6> , <name3> + <val6> ) : <blk> <name2> [ <name1> ] = <name2> [ <name1> - <val6> ] + <name4> [ <name1> - <val6> ] </blk>	: <blk> <name2> [ <name1> ] = range ( <val6> , <name3> + <val6> ) : <blk> <name2> [ <name1> ] = <name2> [ <name1> - <val6> ] + <name4> [ <name1> - <val6> ] </blk>
<name5> の長さを <val1> で割った商を <name6> とする	<name6> = len ( <name5> ) // <val1>	<name6> = len ( <name5> ) // <val1>
<name5> . <name3> ( <name6> , <name4> ) を <name1> とする	<name1> = <name5> . <name3> ( <name6> , <name4> )	<name1> = <name5> . <name3> ( <name6> , <name4> )
<name2> の、つまり入力された文字列の整数値番目を <name3> とする	<name3> = <name2> [ int ( input ( ) ) ]	<name3> = <name2> [ int ( input ( ) ) ]
<name4> の <name5> の先頭から <name3> を探して見つかった位置を <name6> とする	<name6> = <name4> . <name5> . find ( <name3> )	<name6> = <name4> . <name5> . find ( <name3> )
<name3> の先頭の <val2> 番目が <name3> [ <val2> ] の <val2> 番目に <name5> を加えた値から <name4> を引いた値から <val2> を引いた値より大きいとき、	if <name3> [ 0 ] [ <val2> ] > <name3> [ <val2> ] [ <val2> ] + <name5> - <name4> - <val2> :	if <name3> [ <val2> ] [ <val2> ] > <name3> [ <val2> ] [ <val2> ] + <name5> - <name4> - <val2> :
<name1> 、 <name6> 、 <name2> はグローバル変数とする	global <name1> , <name6> , <name2>	>> = <name1> , <name6> , <name2>
<name3> の x 座標から <name5> の x 座標を引いた値の絶対値が <name2> の <name1> より小さくかつ <name3> の y 座標から <name5> の y 座標を引いた値の絶対値が <name2> の <name1> より小さいとき、	if fabs ( <name3> . x - <name5> . x ) < <name2> . <name1> and fabs ( <name3> . y - <name5> . y ) < <name2> . <name1> :	if fabs ( <name3> . x - <name5> . x ) < <name2> . <name1> and fabs ( <name3> . <name5> [ y ] ) < <name2> . <name1> :
<name4> . <name5> ( ) を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name4> . <name5> ( )	<name2> , <name1> = <name4> . <name5> ( )
<val1> から <val6> 未満までの数列の各要素を <name3> とし、 <val1> から <val6> 未満までの数列の各要素を <name5> とし、 <val1> の列の列を <name4> とする	<name4> = [ [ <val1> for <name5> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]	<name4> = [ [ <val1> for <name5> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]
<name2> の x 座標が <name1> の x 座標より小さいかどうかを返す	return <name2> . x < <name1> . x	x return <name2> . x < <name1> . x
<name2> の <name3> 番目を <name6> とする <name6> の長さを <name4> とする	<name6> = <name2> [ <name3> ] <name4> = len ( <name6> )	<name6> = <name2> [ <name3> ] <name4> = len ( <name6> )
<name1> ( <name4> ) を展開し、それぞれ <name5> 、 <name2> 、 <name3> とする	<name5> , <name2> , <name3> = <name1> ( <name4> )	<name1> , <name2> , <name3> = <name1> ( <name4> )
<name2> の -1 を取り出した値を <name4> とする	<name4> = <name2> . pop ( - 1 )	<name4> = <name2> . pop ( - 1 )
<name4> に <name5> を加えた値に <name1> を加えた値が <name2> と等しいとき、	if <name4> + <name5> + <name1> == <name2> :	for <name2> in <name4> + <name5> + <name1> == <name2> :
<name3> 、 <name5> ( <name6> , <name4> , <name1> ) の最小値を <name3> とする	<name3> = min ( <name3> , <name5> ( <name6> , <name4> , <name1> ) )	<name3> = min ( <name3> , <name5> ( <name6> , <name4> , <name1> ) )
<name4> から <name3> を引いた値を <name5> とする	<name5> = <name4> - <name3>	<name2> <name5> = <name4> - <name3>
<name1> の <name4> の <name6> 番目を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name1> . <name4> [ <name6> ]	<name6> , <name2> , <name3> = <name1> . <name4> [ <name6> ]
<name5> の末尾に ( <name1> に <name6> に <name3> の余弦を掛けた値を加えた値、 <name4> に <name6> に <name3> の正弦を掛けた値を加えた値 ) の組を追加する	<name5> . append ( ( <name1> + <name6> * cos ( <name3> ) , <name4> + <name6> * sin ( <name3> ) ) )	( <name5> . append ( ( <name1> + <name6> * cos ( <name3> ) , <name4> + <name6> * sin ( <name3> ) ) ) )
<name1> を <name5> の <name3> 番目の <name2> にする	<name5> [ <name3> ] . <name2> = <name1>	( <name5> [ <name3> ] . <name2> = <name1> )
<name2> の <name5> が <name2> の <name1> の <name5> より小さいとき、	if <name2> . <name5> < <name2> . <name1> . <name5> :	isinstance ( <name2> . <name5> < <name2> . <name1> . <name5> ) :
<name4> が <val5> と等しくないとき、	if <name4> is <val5> :	raise <name4> != <val5> :
<val2> を <val5> だけ左シフトした値から <val2> を引いた値を <name1> とする	<name1> = ( <val2> << <val5> ) - <val2>	<name1> = ( <val2> << <val5> ) - <val2>
<name2> を <name5> の <name2> 座標にする	<name5> . <name2> = <name2>	( <name5> . <name2> = <name2> )
<name3> の <name5> が <name2> の <name5> より小さいかどうかを返す	return <name3> . <name5> < <name2> . <name5>	x return <name3> . <name5> < <name2> . <name5>
( <name3> ) からなる列の <name5> 回分の列を <name2> とする	<name2> = [ <name3> ] * <name5>	<name2> = [ <name3> ] * <name5>
- を <name4> とする	<name4> = '-'	<name4> = - ' '
RDLU を <name4> とする	<name4> = 'RDLU'	<name2> <name4> . = dict ( )
<name2> . <name1> ( <name4> , <name3> )	<name2> . <name1> ( <name4> , <name3> )	set ( <name2> . <name1> ( <name4> , <name3> ) )
<name2> の <name6> 番目の <name5> 番目のとき、	if <name2> [ <name6> ] [ <name5> ] :	[ if <name2> [ <name6> ] [ <name5> ] :
( ( <val2> 、 <val5> ) の組、 ( <val5> 、 <val2> ) の組、 ( -1 、 <val5> ) の組、 ( <val5> 、 -1 ) の組 ) の組を <name4> とする	<name4> = ( ( <val2> , <val5> ) , ( <val5> , <val2> ) , ( - <val2> , <val5> ) , ( <val5> , - <val2> ) )	<name4> = ( ( <val2> , <val5> ) , ( <val5> , <val2> ) , ( - <val2> , <val5> ) , ( <val5> , - <val2> ) )
<val5> が <name2> の <val3> 番目以下かどうかが <val6> 以下のとき、	if <val5> <= <name2> [ <val3> ] <= <val6> :	list if <val5> <= <name2> [ <val3> ] <= <val6> :
( <val4> ) からなる列の <name5> に <val4> を加えた値回分の列を <name6> とする	<name6> = [ <val4> ] * ( <name5> + <val4> )	<name6> = [ <val4> ] * ( <name5> + <val4> )
<name3> が <val5> と等しくまたは <name4> が <name6> と等しいとき、	if <name3> == <val5> or <name4> == <name6> :	or <name3> == <val5> or <name4> == <name6> :
( <val3> ) からなる列の <name4> に <val2> を加えた値回分の列を <name6> とする	<name6> = [ <val3> ] * ( <name4> + <val2> )	<name6> = [ <val3> ] * ( <name4> + <val2> )
<name4> を <val3> で割った余りのとき、	if <name4> % <val3> :	isinstance ( <name4> % <val3> ) :
<name5> が <name6> に含まれるとき、	if <name5> in <name6> :	list ( <name5> in <name6> ) :
<name3> に <name1> の正弦を掛けた値を <name5> とする	<name5> = <name3> * math . sin ( <name1> )	else = <name3> * math . sin ( <name1> )
( <name3> ) からなる列の <name3> 回分の列を <name6> とする	<name6> = [ <name3> ] * <name3>	<name6> = [ <name3> ] * <name3>
<name4> が <name2> ( <name1> ) に含まれるかどうか	<name4> in <name2> ( <name1> )	( <name4> in <name2> ( <name1> ) )
<name5> が <val1> と等しいとき、 <blk> <val2> を <name6> の <name3> の先頭番目にする </blk>	if <name5> == <val1> : <blk> <name6> [ <name3> [ <val2> ] ] = <val2> </blk>	for <name6> [ <name3> [ 0 ] ] = <val2> : <blk> <name6> [ <name3> [ 0 ] ] = <val2> </blk>
<name5> の <val3> 番目の <val4> 番目が <name5> の <val2> 番目の <val2> 番目と等しくかつ <name5> の <val2> 番目の <val2> 番目が <name5> の先頭の <val3> 番目と等しくかつ <name5> の <val3> 番目の <val4> 番目が <val1> と等しくないとき、	if <name5> [ <val3> ] [ <val4> ] == <name5> [ <val2> ] [ <val2> ] and <name5> [ <val2> ] [ <val2> ] == <name5> [ <val4> ] [ <val3> ] and <name5> [ <val3> ] [ <val4> ] != <val1> :	!= <name5> [ <val3> ] [ <val4> ] == <name5> [ <val2> ] [ <val2> ] and <name5> [ <val2> ] [ <val2> ] == <name5> [ <val2> ] [ <val3> ] and <name5> [ <val4> ] != <val1> :
0 から <name6> 未満までの数列の各要素を <name2> とし、 0 から <name6> 未満までの数列の各要素を <name2> とし、 -1 の列の列を <name5> とする	<name5> = [ [ - 1 for <name2> in range ( <name6> ) ] for <name2> in range ( <name6> ) ]	<name5> = [ [ - 1 for <name2> in range ( <name6> ) ] for <name2> in range ( <name6> ) ]
<name3> の <name5> 番目が <name4> の <name2> 番目以下のとき、	if <name3> [ <name5> ] <= <name4> [ <name2> ] :	if <name3> [ <name5> ] <= <name4> [ <name2> ] :
<name5> が <name6> の <name3> に含まれないとき、	if <name5> not in <name6> . <name3> :	while <name5> not in <name6> . <name3> :
<name3> の末尾に <name6> に <name4> を加えた値を追加する	<name3> . append ( <name6> + <name4> )	<name3> . append ( <name6> + <name4> )
書式 <name5> を <val4> でフォーマットした文字列を出力する	print ( format ( <name5> , <val4> ) )	print ( format ( <name5> , <val4> ) )
<name6> が <name3> 以下の間、次を繰り返す	while <name6> <= <name3> :	del <name6> <= <name3> :
無限の整数列の <name2> に <val3> を加えた値番目に無限の整数列の <name6> から <name2> を引いた値から <val3> を引いた値番目を加えた値を出力する	print ( count [ <name2> + <val3> ] + count [ <name6> - <name2> - <val3> ] )	end = count [ <name2> + <val3> ] + count [ <name6> - <name2> - <val3> ] )
<name3> かつ <name2> が <name3> の <name1> と等しくない間、次を繰り返す	while <name3> and <name2> != <name3> . <name1> :	: while <name3> and <name2> != <name3> . <name1> :
<val1> を <name5> とするを <name6> とする	<name6> = <name5> = <val1>	<name2> <name6> = <name5> = <val1>
( ( <val4> ) からなる列の <val4> から <name6> 未満までの数列の各要素を <name1> とし、 <name5> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val4> ] * [ <name5> for <name1> in range ( <name6> ) ] ]	<name2> = [ [ <val4> ] * [ <name5> for <name1> in range ( <name6> ) ] ]
<name4> の集合の長さが <name5> の集合の長さより大きいとき、	if len ( set ( <name4> ) ) > len ( set ( <name5> ) ) :	list ( set ( set ( <name4> ) ) > len ( set ( <name5> ) ) :
<name4> の <val5> 番目を <name3> だけ減少させる	<name4> [ <val5> ] -= <name3>	not <name4> [ <val5> ] -= <name3>
空列を <name5> の <name1> の <name3> 番目にする	<name5> . <name1> [ <name3> ] = [ ]	<name2> . <name5> [ <name1> . <name3> ] = [ ]
<name1> から <val5> を引いた値から <val6> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> - <val5> , <val6> , - <val5> ) :	for <name2> in range ( <name1> - <val5> , <val6> , - <val5> ) :
<name5> を <name3> で割った余りを <name5> とするを <name3> の <name4> 番目の <name1> 番目の <name6> 番目の <name2> 番目にする	<name3> [ <name4> ] [ <name1> ] [ <name6> ] [ <name2> ] = <name5> = <name5> % <name3>	<name4> [ <name4> ] [ <name1> ] [ <name6> ] [ <name2> ] = <name5> = <name5> % <name3>
<name6> に <val2> を加えた値に <name3> を加えた値を出力する	print ( <name6> + <val2> + <name3> )	print ( <name6> + <val2> + <name3> )
<name1> をパラメータとして <name4> の <name1> 番目を返す関数を <name3> として 0 から <name2> 未満までの数列の最小値を <name6> とする	<name6> = min ( range ( <name2> ) , <name3> = lambda <name1> : <name4> [ <name1> ] )	<name6> = min ( range ( <name2> ) , <name3> = lambda <name1> : <name4> [ <name1> ] )
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = map ( int , input ( ) . strip ( ) . split ( ) )	<name3> = map ( int , input ( ) . strip ( ) . split ( ) )
( 、つまり偽 ) からなる列の <name4> に <name4> を掛けた値回分の列を <name2> とする	<name2> = [ False ] * ( <name4> * <name4> )	<name2> = [ False ] * ( <name4> * <name4> )
<name1> の <name3> 番目を一旦、返す	yield <name1> [ <name3> ]	global <name1> [ <name3> ]
<name5> を <name1> の <name6> 番目だけ増加させる	<name5> += <name1> [ <name6> ]	( <name5> += <name1> [ <name6> ] )
<name4> の <name2> 番目が <name4> の <name2> から <name6> を引いた値番目に <name1> を加えた値より小さいとき、 <blk> <name4> の <name2> から <name6> を引いた値番目に <name1> を加えた値を <name4> の <name2> 番目にする </blk>	if <name4> [ <name2> ] < <name4> [ <name2> - <name6> ] + <name1> : <blk> <name4> [ <name2> ] = <name4> [ <name2> - <name6> ] + <name1> </blk>	try if <name4> [ <name2> ] < <name4> [ <name2> - <name6> ] + <name1> : <blk> <name4> [ <name2> ] = <name4> [ <name2> - <name6> ] + <name1> </blk>
<name1> の <name5> の <name3> 番目と等しい要素の最初の位置を <name6> とする	<name6> = <name1> . index ( <name5> [ <name3> ] )	else = <name1> . index ( <name5> [ <name3> ] )
<name6> . <name3> ( <name1> ) から <name6> . <name3> ( <name2> -1 ) を引いた値を返す	return <name6> . <name3> ( <name1> ) - <name6> . <name3> ( <name2> - 1 )	yield <name6> . <name3> ( <name1> ) - <name6> . <name3> ( <name2> - 1 )
<name5> の末尾に ( <name6> 、 <name1> 、 <name2> 、 <name4> 、 <name3> ) の組を追加する	<name5> . append ( ( <name6> , <name1> , <name2> , <name4> , <name3> ) )	<name4> . append ( ( <name6> , <name1> , <name2> , <name4> , <name3> ) )
<name1> に文字コード <name3> の順序数から <val2> を引いた値の文字を加えた値を <name1> とする	<name1> = <name1> + chr ( ord ( <name3> ) - <val2> )	<name1> = <name1> + chr ( ord ( <name3> ) - <val2> )
<name5> と <name4> を入れ替える	<name5> , <name4> = <name4> , <name5>	<name5> , <name4> = <name4> , <name5>
0 から <name5> 未満までの数列の各要素を <name6> とし、、つまり無限大の列を <name3> とする	<name3> = [ inf for <name6> in range ( <name5> ) ]	<name3> = [ inf for <name6> in range ( <name5> ) ]
<name3> 、 <name4> を出力する	print ( <name3> , <name4> )	print ( <name3> , <name4> )
( <name6> 、 <name2> ) からなる列が <name3> に含まれないとき、	if not [ <name6> , <name2> ] in <name3> :	list not in [ <name6> , <name2> ] not in <name3> :
<name1> を <name6> で割った余りが <val3> と等しい間、次を繰り返す	while <name1> % <name6> == <val3> :	del <name1> % <name6> == <val3> :
<val2> を <name6> として <name5> をソートする	<name5> . sort ( <name6> = <val2> )	else . sort ( <name6> = <val2> )
<name1> の <name3> 番目、 <name1> の <name3> から <val4> を引いた値番目に <name5> の <name3> から <val4> を引いた値番目に <name6> の <name2> 番目を掛けた値を加えた値の最小値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = min ( <name1> [ <name3> ] , <name1> [ <name3> - <val4> ] + <name5> [ <name3> - <val4> ] * <name6> [ <name2> ] )	<name2> [ <name1> ] [ <name3> ] = min ( <name1> [ <name3> ] , <name1> [ <name3> - <val4> ] + <name5> [ <name3> - <val4> ] * <name6> [ <name2> ] )
<val6> を間に入れて <name2> の各要素を <name3> とし、 <name3> の文字列の列を連結した文字列を出力する	print ( <val6> . join ( [ str ( <name3> ) for <name3> in <name2> ] ) )	print ( <val6> . join ( [ str ( <name3> ) for <name3> in <name2> ] ) )
<name6> の <name5> に <val3> を加えた値番目の <name4> 番目でないとき、	if not <name6> [ <name5> + <val3> ] [ <name4> ] :	raise <name6> [ <name5> + <val3> ] [ <name4> ] :
<name3> 内の <val2> を <val1> で置き換えた文字列を <name3> とする	<name3> = <name3> . replace ( <val2> , <val1> )	<name3> = <name3> . replace ( <val2> , <val1> )
0 から <name3> から <name1> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> - <name1> ) :	for <name2> in range ( <name3> - <name1> ) :
<name6> かつ <name4> のとき、	if <name6> and <name4> :	for <name6> and <name4> in <name6> and <name4> :
<name3> が <val1> と等しいとき、 <blk> <name5> に <name2> を掛けた値を <name6> で割った余りを <name5> とする </blk>	if <name3> == <val1> : <blk> <name5> = ( <name5> * <name2> ) % <name6> </blk>	\ <name5> = <name3> == <val1> : <blk> <name5> = ( <name5> * <name2> ) % <name6> </blk>
<name5> の各要素を <name4> とし、 <val2> に <name6> ( <name4> ) の組を加えた値の列を <name3> とする	<name3> = ( [ ( <val2> ) + tuple ( <name6> ( <name4> ) ) for <name4> in <name5> ] )	<name6> = [ ( <val2> ) + tuple ( <name6> ( <name4> ) ) for <name4> in <name5> ]
<name4> の <name5> 番目が <name1> より大きいとき、	if <name4> [ <name5> ] > <name1> :	list if <name4> [ <name5> ] > <name1> :
<name2> に <val4> を加えた値の階乗に <val1> を加えた値を出力する	print ( math . factorial ( <name2> + <val4> ) + <val1> )	print ( math . factorial ( <name2> + <val4> ) + <val1> )
<name1> が <name6> と等しいかどうかが <val3> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <name6> == <val3> : <blk> break </blk>	enumerate if <name1> == <name6> == <val3> : <blk> break </blk>
<name2> の先頭を <name3> の <name5> にする	<name3> . <name5> = <name2> [ 0 ]	( <name3> . <name5> = <name2> [ 0 ] )
( ( - <name1> ) からなる列の 0 から <name6> 未満までの数列の各要素を <name3> とし、 <name6> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ - <name1> ] * [ <name6> for <name3> in range ( <name6> ) ] ]	<name5> = [ [ - <name1> ] * [ <name6> for <name3> in range ( <name6> ) ] ]
<name2> の <name4> から読み込んだデータを空白で分割した字句列を <name3> とする	<name3> = <name2> . <name4> . read ( ) . split ( )	( <name3> = <name2> . <name4> . read ( ) . split ( ) )
\ <name4> ( <val1> % ( <name2> , <val6> . <name5> ( [ <name3> ( <name4> ) forjinrange ( <name1> ) ifi & ( <val2> << <name4> ) ] ) ) ) \	\ <name4> ( <val1> % ( <name2> , <val6> . <name5> ( [ <name3> ( <name4> ) for <name4> in range ( <name1> ) if <name2> & ( <val2> << <name4> ) ] ) ) ) \	from <name4> in <val1> % ( <name2> , <val6> . <name5> ( [ <name3> ( <name4> ) for <name4> in range ( <name1> ) if <name1> & ( <val2> << <name4> ) ] ) ) \
<name2> ( <name4> - <name6> , <name5> - <name6> ) を <name1> とする	<name1> = <name2> ( <name4> - <name6> , <name5> - <name6> )	<name1> = <name2> ( <name4> - <name6> , <name5> - <name6> )
0 から <name6> から <name5> を引いた値に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> - <name5> + <val4> ) :	for <name2> in range ( <name6> - <name5> + <val4> ) :
<name6> . <name3> ( <name4> / <name6> . <name5> ) を <name1> とする	<name1> = <name6> . <name3> ( <name4> / <name6> . <name5> )	<name1> = <name6> . <name3> ( <name4> / <name6> . <name5> )
<name1> と <name6> を <name1> で割った余りの最大公約数	gcd ( <name1> , <name6> % <name1> )	gcd ( <name1> , <name6> % <name1> )
<name3> の -2 を取り出した値の浮動小数点数に <name3> の -1 を取り出した値の浮動小数点数を加えた値を <name1> とする	<name1> = float ( <name3> . pop ( - 2 ) ) + float ( <name3> . pop ( - 1 ) )	<name1> = float ( <name3> . pop ( - 2 ) ) + float ( <name3> . pop ( - 1 ) )
<name4> の <name3> 番目のキーと値の集まりを順に <name5> 、 <name1> として、繰り返す	for <name5> , <name1> in <name4> [ <name3> ] . items ( ) :	for <name5> , <name1> in <name4> [ <name3> ] . items ( ) :
0 から <name1> に <val3> を加えた値未満までの数列の各要素を <name6> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name6> in range ( <name1> + <val3> ) ]	<name4> = [ [ ] for <name6> in range ( <name1> + <val3> ) ]
<name2> の <name3> の末尾に <name2> の <name4> を追加する	<name2> . <name3> . append ( <name2> . <name4> )	<name2> . <name3> . append ( <name2> . <name4> )
<name3> が <name4> 以下または <name6> が <name2> 以下のとき、	if ( <name3> <= <name4> or <name6> <= <name2> ) :	for <name3> <= <name4> or <name6> <= <name2> :
<name4> の <name5> 番目に <name3> の <name5> 番目を加えた値に <name5> に <val2> を掛けた値を加えた値を <name4> の <name5> に <val1> を加えた値番目にする	<name4> [ <name5> + <val1> ] = <name4> [ <name5> ] + <name3> [ <name5> ] + <name5> * <val2>	<name5> [ <name5> + <val1> ] = <name4> [ <name5> ] + <name3> [ <name5> ] + <name5> * <val2>
( ( <name1> 、 <val2> ) の組、 ( <name3> 、 <val6> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <name1> , <val2> ) , ( <name3> , <val6> ) ]	<name5> = [ ( <name1> , <val2> ) , ( <name3> , <val6> ) ]
<name4> に <name2> を加えた値を <name6> の <name5> 番目にする	<name6> [ <name5> ] = <name4> + <name2>	( <name6> [ <name5> ] = <name4> + <name2> )
0 から <val3> 未満までの数列を順に <name4> として、繰り返す <blk> <name2> の <name4> に <val6> を加えた値番目に <name1> の <name4> 番目を加えた値を <name2> の <name4> に <val5> を加えた値番目にする </blk>	for <name4> in range ( <val3> ) : <blk> <name2> [ <name4> + <val5> ] = <name2> [ <name4> + <val6> ] + <name1> [ <name4> ] </blk>	in range ( <val3> ) : <blk> <name2> [ <name4> + <val5> ] = <name2> [ <name4> + <val6> ] + <name1> [ <name4> ] </blk>
( <name2> の <name6> ) からなる列の両端キューを <name4> とする	<name4> = deque ( [ <name2> . <name6> ] )	<name4> = deque ( [ <name2> . <name6> ] )
<name6> の、つまり先頭から <name2> 番目までの部分列に <name5> の <val1> 番目を加えた値に <name6> の <name4> に <val3> を加えた値から、つまり末尾までの部分列を加えた値を <name6> とする	<name6> = <name6> [ : <name2> ] + <name5> [ <val1> ] + <name6> [ <name4> + <val3> : ]	<name4> = <name6> [ : <name2> ] + <name5> [ <val1> ] + <name6> [ <name4> + <val3> : ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = list ( map ( int , input ( ) . split ( ) ) )	<name1> , <name3> = list ( map ( int , input ( ) . split ( ) ) )
無限の整数列を <name1> の <name5> 番目にする	<name1> [ <name5> ] = count	( <name1> [ <name5> ] = count )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = map ( int , input ( ) . split ( <val2> ) )	<name5> , <name4> = map ( int , input ( ) . split ( <val2> ) )
( <val5> 、 <val1> ) からなる列を <name3> とする	<name3> = [ <val5> , <val1> ]	<name4> = [ <val5> , <val1> ]
<name1> を <val4> で割った余りを <name2> とする	<name2> = <name1> % <val4>	( <name2> = <name1> % <val4> )
<name1> の、つまり現在の日時番目の <val2> 番目から、つまり末尾までの部分列を順に <name6> として、繰り返す	for <name6> in <name1> [ now ] [ <val2> : ] :	for <name6> in <name1> [ now ] [ <val2> : ] :
<name6> ( <name5> , <name1> , <name1> ) を <name5> の <name2> とするを <name4> とする	<name4> = <name5> . <name2> = <name6> ( <name5> , <name1> , <name1> )	<name4> = <name5> . <name2> = <name6> ( <name5> , <name1> , <name1> )
<name2> と <name6> の <name3> 番目の論理積が <name6> の <name3> 番目と等しいとき、	if <name2> & <name6> [ <name3> ] == <name6> [ <name3> ] :	list if <name2> & <name6> [ <name3> ] == <name6> [ <name3> ] :
<name2> に <name1> を掛けた値を <name6> で割った余りを <name2> とするを <name4> の <name1> から <val3> を引いた値番目にする	<name4> [ <name1> - <val3> ] = <name2> = <name2> * <name1> % <name6>	<name4> [ <name1> - <val3> ] = <name2> = <name2> * <name1> % <name6>
0 から <name2> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name2> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name2> ) ]
- <name3> を出力する	print ( - <name3> )	- <name3> ) print ( - <name3> )
( <name3> 、 <name6> に <val5> を加えた値 ) からなる列を返す	return [ <name3> , <name6> + <val5> ]	return [ <name3> , <name6> + <val5> ]
<name3> の -1 番目が <name4> と等しいとき、	if <name3> [ - 1 ] == <name4> :	continue if <name3> [ - 1 ] == <name4> :
<name3> <name1> <name2>	<name3> <name1> <name2>	( <name3> <name1> <name2> )
<val2> を <name3> の <name6> の先頭の <val1> 番目にする	<name3> . <name6> [ <val1> ] [ <val1> ] = <val2>	<name4> . <name6> [ <val1> ] [ <val1> ] = <val2>
<name5> に <val6> を加えた値を <name2> で割った余りを <name5> とする	<name5> = ( <name5> + <val6> ) % <name2>	<name5> = ( <name5> + <val6> ) % <name2>
<val6> <name3> <val1> を <name2> とする	<name2> = <val6> <name3> <val1>	<name3> <name2> = <val6> <name3> <val1>
<name3> に <val4> を掛けた値を <name2> とする	<name2> = <name3> * <val4>	( <name2> = <name3> * <val4> )
<name1> かつ <name6> が <name1> の末尾の <val3> 番目以下の間、次を繰り返す	while <name1> and <name6> <= <name1> [ - <val3> ] [ <val3> ] :	- while <name1> and <name6> <= <name1> [ - <val3> ] [ <val3> ] :
<name4> の末尾に <val6> から <name2> を引いた値を追加する	<name4> . append ( <val6> - <name2> )	<name4> . append ( <val6> - <name2> )
<name3> を <val6> に - <name3> の長さを <val2> で割った余りを掛けた値だけ増加させる	<name3> += <val6> * ( - len ( <name3> ) % <val2> )	<name1> += <val6> * ( - len ( <name3> ) % <val2> )
<name5> の <name1> 番目から <name3> に <val4> を加えた値までの部分列を <name2> とする	<name2> = <name5> [ <name1> : <name3> + <val4> ]	<name2> = <name5> [ <name1> : <name3> + <val4> ]
<name1> . <name6> ( <name4> , <name2> ) を <name3> とする	<name3> = <name1> . <name6> ( <name4> , <name2> )	else = <name1> . <name6> ( <name4> , <name2> )
<name1> の、つまり先頭から <name5> 番目までの部分列に <name1> の <name5> 番目から <name4> 番目までの部分列の、つまり先頭から、つまり末尾までの -1 間隔による部分列を加えた値に <name1> の <name4> 番目から、つまり末尾までの部分列を加えた値を <name1> とする	<name1> = <name1> [ : <name5> ] + <name1> [ <name5> : <name4> ] [ : : - 1 ] + <name1> [ <name4> : ]	<name3> = <name1> [ : <name5> ] + <name1> [ <name5> : <name4> ] [ : : - 1 ] + <name1> [ <name4> : ]
<name2> ( <name3> ) を返す	return <name2> ( <name3> )	self return <name2> ( <name3> )
<name1> の <name2> 番目の <val5> 番目のとき、	if <name1> [ <name2> ] [ <val5> ] :	[ if <name1> [ <name2> ] [ <val5> ] :
<name4> の <val1> 番目の整数値を <name6> とする	<name6> = int ( <name4> [ <val1> ] )	<name6> = int ( <name4> [ <val1> ] )
<name5> が <name6> に含まれないとき、	if not <name5> in <name6> :	re if <name5> not in <name6> :
<name3> . <name1> ( ) を <name6> とする	<name6> = <name3> . <name1> ( )	+ <name6> = <name3> . <name1> ( )
, を間に入れて <name2> の <name4> 番目の各要素に整数を適用した列を連結した文字列を <name5> とする	<name5> = ', ' . join ( ( map ( str , <name2> [ <name4> ] ) ) )	<name5> = '' . join ( map ( str , <name2> [ <name4> ] ) )
<name1> を <name5> の、つまり現在の日時番目の <name4> 番目の <name3> 番目にする	<name5> [ now ] [ <name4> ] [ <name3> ] = <name1>	<name1> [ now ] [ <name4> ] [ <name3> ] = <name1>
( <val3> ) からなる列の <name2> 回分の列を <name4> とする ( <val3> ) からなる列の <name2> 回分の列を <name1> とする	<name4> = [ <val3> ] * <name2> <name1> = [ <val3> ] * <name2>	<name2> = [ <val3> ] * <name2> <name1> = [ <val3> ] * <name2>
<name1> ( <name6> , <name3> , <name5> )	<name1> ( <name6> , <name3> , <name5> )	<name4> ( <name6> , <name3> , <name5> )
<name6> ( <name3> , <name4> ) が <val1> と等しいかどうかを返す	return <name6> ( <name3> , <name4> ) == <val1>	x return <name6> ( <name3> , <name4> ) == <val1>
<name1> の長さが <name6> と等しくかつ <name1> が <name2> に含まれないとき、	if len ( <name1> ) == <name6> and <name1> not in <name2> :	list ( <name1> ) == <name6> and <name1> not in <name2> :
<name1> の <name3> の <name4> 番目の <name6> の末尾に <name2> を追加する	<name1> . <name3> [ <name4> ] . <name6> . append ( <name2> )	. <name1> [ <name3> . <name4> ] . <name6> . append ( <name2> )
<val3> に <name4> を掛けた値に <val1> を加えた値を <name6> とする	<name6> = <val3> * <name4> + <val1>	<name6> = <val3> * <name4> + <val1>
<name5> ( ) を追加して <name1> を拡張する	<name1> . extend ( <name5> ( ) )	<name1> . extend ( <name5> ( ) )
<name1> の <name2> 番目を <val3> だけ増加させる	<name1> [ <name2> ] += <val3>	<name2> [ <name2> ] += <val3>
( <val2> ) からなる列に <name3> ( <name4> ) のリストを加えた値を <name1> とする	<name1> = [ <val2> ] + list ( <name3> ( <name4> ) )	<name1> = [ <val2> ] + list ( <name3> ( <name4> ) )
<name2> が <name3> と等しくかつ <name4> が <name6> と等しくまたは <name2> が <name4> と等しくかつ <name3> が <name6> と等しくまたは <name2> が <name6> と等しくかつ <name3> が <name4> と等しいとき、	if <name2> == <name3> and <name4> == <name6> or <name2> == <name4> and <name3> == <name6> or <name2> == <name6> and <name3> == <name4> :	or ( <name2> == <name3> and <name4> == <name6> or <name2> == <name4> and <name3> == <name6> or <name2> == <name6> and <name3> == <name4> ) :
<name5> を <name4> の <name2> 番目の <name1> 番目にする	<name4> [ <name2> ] [ <name1> ] = <name5>	( <name4> [ <name2> ] [ <name1> ] = <name5> )
{}を返す	return { 1867 + Y }	self return { self % }
空列、空列、空辞書を <name4> 、 <name2> 、 <name1> とする	<name4> , <name2> , <name1> = [ ] , [ ] , { }	<name3> , <name2> , <name1> = [ ] , [ ] , { } , { }
<name6> 、 <val4> を <name1> 、 <name6> とする	<name1> , <name6> = <name6> , <val4>	<name2> , <name1> , <name6> = <name6> , <val4>
円周率を <name1> とする	<name1> = math . pi	( <name1> = math . pi )
0 から <name4> に <val6> を加えた値、 <name1> の長さの最小値未満までの数列の各要素を <name3> とし、 <name5> の <name4> から <name3> を引いた値番目に <name1> の <name3> 番目を加えた値の列の最大値を <name6> の <name2> 番目の <name4> 番目にする	<name6> [ <name2> ] [ <name4> ] = max ( [ <name5> [ <name4> - <name3> ] + <name1> [ <name3> ] for <name3> in range ( min ( <name4> + <val6> , len ( <name1> ) ) ) ] )	<name6> [ <name2> ] [ <name4> ] = max ( [ <name5> [ <name4> - <name3> ] + <name1> [ <name3> ] for <name3> in range ( min ( <name4> + <val6> , len ( <name1> ) ) ) ] )
<val2> を <name4> とするを <name6> とする	<name6> = <name4> = <val2>	<name4> <name6> = <name4> = <val2>
<name3> の <val2> 乗を <name1> とする	<name1> = <name3> ** <val2>	<name1> = <name3> ** <val2>
<val6> から <name1> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , len ( <name1> ) ) :	. for <name3> in range ( <val6> , len ( <name1> ) ) :
<name4> に <val2> を加えた値から <name6> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val2> , <name6> ) :	) : for <name5> in range ( <name4> + <val2> , <name6> ) :
0 から <name3> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name1> の <name5> にする	<name1> . <name5> = [ [ ] for <name2> in range ( <name3> ) ]	<name6> . <name5> = [ [ ] for <name2> in range ( <name3> ) ]
<name3> のラジアンを <name2> とする	<name2> = math . radians ( <name3> )	( <name2> = math . radians ( <name3> ) )
<name2> の <name3> から <val1> を引いた値番目の <name6> 番目が <name4> と等しくないとき、	if <name2> [ <name3> - <val1> ] [ <name6> ] != <name4> :	!= <name2> [ <name3> - <val1> ] [ <name6> ] != <name4> :
<name1> の - <name4> 番目を <name2> とする	<name2> = <name1> [ - <name4> ]	dict = <name1> [ - <name4> ]
<name4> の <name5> 番目が <name6> 以下のとき、	if <name4> [ <name5> ] <= <name6> :	list if <name4> [ <name5> ] <= <name6> :
<name1> が <name6> より小さいとき、 <blk> <val3> を出力する </blk>	if <name1> < <name6> : <blk> print ( <val3> ) </blk>	if <name1> < <name6> : <blk> print ( <val3> ) </blk>
( {} , {} ) を書式として <name2> の x 座標、 <name2> の y 座標で整形した文字列を返す	return '({}, {})' . format ( <name2> . x , <name2> . y )	yield {})' . format ( <name2> . x , <name2> . y )
<val4> を <name6> の <name2> の <name1> 番目にする	<name6> . <name2> [ <name1> ] = <val4>	( <name6> . <name2> [ <name1> ] = <val4> )
<name4> を <name2> の <name5> 番目に <name2> の <name1> から <name5> を引いた値番目を掛けた値だけ増加させる	<name4> += <name2> [ <name5> ] * <name2> [ <name1> - <name5> ]	( <name4> += <name2> [ <name5> ] * <name2> [ <name1> - <name5> ] )
$を返す	return '$'	yield dict
<name5> の <val1> 番目が <name3> の <val1> 番目と等しくかつ <name5> の <val4> 番目が <name3> の先頭と等しいとき、	if <name5> [ <val1> ] == <name3> [ <val1> ] and <name5> [ <val4> ] == <name3> [ <val4> ] :	if <name5> [ <val1> ] == <name3> [ <val1> ] and <name5> [ <val4> ] == <name3> [ <val1> ] :
<name1> の <name4> 番目が <val2> と等しくないとき、 <blk> 繰り返しを中断する </blk>	if <name1> [ <name4> ] != <val2> : <blk> break </blk>	\ if <name1> [ <name4> ] != <val2> : <blk> break </blk>
<name3> 、 <name1> の要素をそれぞれ組にした列を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in zip ( <name3> , <name1> ) :	( <name5> , <name4> in zip ( <name3> , <name1> ) :
<name4> の <name6> 番目を <name6> とする	<name6> = <name4> [ <name6> ]	<name6> = <name4> [ <name6> ]
<name6> を <name5> から <name2> を引いた値だけ増加させる	<name6> += ( <name5> - <name2> )	<name6> += ( <name5> - <name2> )
入力された文字列を <val5> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val5> ) ]	<name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val5> ) ]
<name1> に <name2> を追加した集まり	<name1> . add ( <name2> )	<name1> . add ( <name2> )
<name1> の <name4> 番目を展開してを出力する	print ( * <name1> [ <name4> ] )	print ( * <name1> [ <name4> ] )
<name6> から読み込んだデータを空白で分割した字句列の各要素に整数を適用した列を順に <name2> として、繰り返す	for <name2> in map ( int , <name6> . read ( ) . split ( ) ) :	. for <name2> in map ( int , <name6> . read ( ) . split ( ) ) :
sample - input . txt 、 <val5> を開いたファイルストリームを <name1> の <name4> にする	<name1> . <name4> = open ( 'sample-input.txt' , <val5> )	<name1> . <name4> = open ( 'sample-input.txt' , <val5> )
<name2> モジュールを用いる	from <name2> import cos , radians , sin	from <name2> , deque
<name3> を <name4> の <name5> の <name6> 番目にする	<name4> . <name5> [ <name6> ] = <name3>	( <name4> . <name5> [ <name6> ] = <name3> )
<name3> . <name5> . <name6> ( <name1> . <name5> , <name1> . <name2> ) に <name3> . <name2> . <name6> ( <name1> . <name5> , <name1> . <name2> ) を掛けた値を <name4> とする	<name4> = <name3> . <name5> . <name6> ( <name1> . <name5> , <name1> . <name2> ) * <name3> . <name2> . <name6> ( <name1> . <name5> , <name1> . <name2> )	<name4> = <name3> . <name5> . <name6> ( <name1> . <name5> , <name1> . <name2> ) * <name3> . <name2> . <name6> ( <name1> . <name5> , <name1> . <name2> )
<name1> . <name5> ( <name6> ) を <name2> とする	<name2> = <name1> . <name5> ( <name6> )	<name2> = <name1> . <name5> ( <name6> )
未定値を <name3> の <name1> の <name4> 番目の <name5> にする	<name3> . <name1> [ <name4> ] . <name5> = None	<name4> . <name1> [ <name4> ] . <name5> = None
( 、つまり偽 ) からなる列の <name5> の <name4> 回分の列を <name2> とする	<name2> = [ False ] * <name5> . <name4>	<name2> = [ False ] * <name5> . <name4>
( <name4> ) からなる列の <name3> から <val2> を引いた値回分の列を <name5> とする ( <name4> ) からなる列の <name3> から <val2> を引いた値回分の列を <name1> とする	<name5> = [ <name4> ] * ( <name3> - <val2> ) <name1> = [ <name4> ] * ( <name3> - <val2> )	<name2> = [ <name4> ] * ( <name3> - <val2> ) <name1> = [ <name4> ] * ( <name3> - <val2> )
<name3> の <name2> から読み込んだ一行に番号付した組の列を順に <name5> 、 <name1> として、繰り返す	for <name5> , <name1> in enumerate ( <name3> . <name2> . readline ( ) ) :	. for <name5> , <name1> in enumerate ( <name3> . <name2> . readline ( ) ) :
<val3> の <val2> 乗に <val1> を加えた値を <name4> とする	<name4> = <val3> ** <val2> + <val1>	<name4> = <val3> ** <val2> + <val1>
<name3> の <name2> を <name2> とする	<name2> = <name3> . <name2>	input = <name3> . <name2>
<name2> が <name3> と等しいかどうかが <name5> と等しいかどうかが <val6> と等しいとき、	if <name2> == <name3> == <name5> == <val6> :	> if <name2> == <name3> == <name5> == <val6> :
入力された文字列を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]	<name3> , <name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]
<name3> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> 、 <name6> 、 <name5> 、 <name1> とする	<name2> , <name4> , <name6> , <name5> , <name1> = map ( int , <name3> . split ( ) )	<name2> , <name4> , <name6> , <name5> , <name1> = map ( int , <name3> . split ( ) )
<name4> の先頭を <name6> とする <name4> の <val3> 番目を <name2> とする	<name6> = <name4> [ 0 ] <name2> = <name4> [ <val3> ]	else = <name4> [ 0 ] <name2> = <name4> [ <val3> ]
<val4> を <name2> の <name6> 番目の <name1> 番目にする	<name2> [ <name6> ] [ <name1> ] = <val4>	<name1> [ <name6> ] [ <name1> ] = <val4>
<name1> の <name2> 番目の末尾を削除する	del <name1> [ <name2> ] [ - 1 ]	3 = <name1> [ <name2> ] [ - 1 ]
<name4> が <val2> より小さいとき、 <blk> - <name4> を <name4> とする </blk>	if <name4> < <val2> : <blk> <name4> = - <name4> </blk>	if <name4> < <val2> : <blk> <name4> = - <name4> </blk>
0 から <val4> を <name5> だけ左シフトした値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> << <name5> ) :	) in range ( <val4> << <name5> ) :
( -1 ) からなる列の <name3> 回分の列を <name4> の <name2> にする	<name4> . <name2> = [ - 1 ] * <name3>	<name4> . <name2> = [ - 1 ] * <name3>
<name6> の <name1> 番目を <name4> の <name2> 番目の <name1> 番目にする	<name4> [ <name2> ] [ <name1> ] = <name6> [ <name1> ]	<name1> [ <name2> ] [ <name1> ] = <name6> [ <name1> ]
<name5> の <name1> 番目を <name2> とする	<name2> = <name5> [ <name1> ]	dict = <name5> [ <name1> ]
<name6> の <name4> 番目と <name6> の <name5> 番目を入れ替える	<name6> [ <name4> ] , <name6> [ <name5> ] = <name6> [ <name5> ] , <name6> [ <name4> ]	( <name6> [ <name4> ] , <name6> [ <name5> ] = <name6> [ <name5> ] , <name6> [ <name4> ] )
<name4> の . <val2> 乗の整数値に <val6> を加えた値を <name3> とする	<name3> = int ( <name4> ** . <val2> ) + <val6>	<name3> = int ( <name4> ** . <val2> ) + <val6>
<name6> に <name3> を加えた値を <name2> の <name4> 番目にする	<name2> [ <name4> ] = <name6> + <name3>	( <name2> [ <name4> ] = <name6> + <name3> )
空辞書を <name2> の <name6> にする	<name2> . <name6> = { }	( <name2> . <name6> = { } )
sample - input2 . txt 、 <val6> を開いたファイルストリームを <name5> の <name3> にする	<name5> . <name3> = open ( 'sample-input2.txt' , <val6> )	) . <name3> = open ( 'sample-input2.txt' , <val6> )
<name3> ( <name5> ) を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name3> ( <name5> )	<name3> , <name2> = <name3> ( <name5> )
<name4> に <name2> を掛けた値に <name1> に <name5> を掛けた値を加えた値を <name6> とする <name6> に <name2> を掛けた値に <name4> に <name5> を掛けた値を加えた値を <name3> とする	<name6> = ( <name4> * <name2> + <name1> * <name5> ) <name3> = ( <name6> * <name2> + <name4> * <name5> )	<name6> = ( <name4> * <name2> + <name1> * <name5> ) <name3> = ( <name6> * <name2> + <name4> * <name5> )
<name6> の長さが <val3> 以下のとき、	if len ( <name6> ) <= <val3> :	[ len ( <name6> ) <= <val3> :
<name3> ( <name4> + <val6> , <name5> , <name1> )	<name3> ( <name4> + <val6> , <name5> , <name1> )	<name5> ( <name3> ( <name4> + <val6> , <name5> , <name1> ) )
<name2> の末尾に <name5> に <name4> を加えた値に <name6> を掛けた値を追加する	<name2> . append ( ( <name5> + <name4> ) * <name6> )	<name2> . append ( ( <name5> + <name4> ) * <name6> )
<name2> 、 <name6> 、 <name5> において正規表現 <name3> に <val4> を加えた値が最初にマッチする位置を <name1> とする	<name1> = search ( <name3> + <val4> , <name2> , <name6> , <name5> )	<name1> = search ( <name3> + <val4> , <name2> , <name6> , <name5> )
<name3> に <name3> を掛けた値に <name2> に <name2> を掛けた値を加えた値が <name5> 以下の間、次を繰り返す	while <name3> * <name3> + <name2> * <name2> <= <name5> :	del ( <name3> * <name3> + <name2> * <name2> <= <name5> ) :
<val6> 、 <name4> を <name1> 、 <name5> とする	<name1> , <name5> = <val6> , <name4>	not <name1> , <name5> = <val6> , <name4>
<val4> から <val2> 未満までの数列の逆順を順に <name5> として、繰り返す	for <name5> in range ( <val4> , <val2> ) [ : : - <val4> ] :	: for <name5> in range ( <val4> , <val2> ) [ : : - 1 ] :
<val3> が <name6> より小さいかどうかが <name1> より小さくかつ <val3> が <name4> 以下かどうかが <name5> より小さくかつ <val3> が <name2> 以下かどうかが <name3> より小さいとき、	if <val3> < <name6> < <name1> and <val3> <= <name4> < <name5> and <val3> <= <name2> < <name3> :	if <val3> < <name6> < <name1> and <val3> <= <name4> < <name5> and <val3> <= <name2> < <name3> :
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name1> ( ) を空白で分割した字句列の各要素に浮動小数点数を適用した列の列を <name2> とする	<name2> = [ map ( float , <name1> ( ) . split ( ) ) for <name4> in range ( <name3> ) ]	<name2> = [ map ( float , <name1> ( ) . split ( ) ) for <name4> in range ( <name3> ) ]
% d : % d : % d を ( <name6> 、 <name2> 、 <name5> ) の組で割った余りを出力する	print ( '%d:%d:%d' % ( <name6> , <name2> , <name5> ) )	assert '' . format ( ( <name6> , <name2> , <name5> ) )
( <name2> から <name3> を引いた値、 <name1> から <name6> を引いた値 ) の組を <name4> とする	<name4> = ( <name2> - <name3> , <name1> - <name6> )	<name4> = ( <name2> - <name3> , <name1> - <name6> )
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列のリストを <name6> とする	<name6> = list ( map ( int , input ( ) . split ( <val1> ) ) )	<name6> = list ( map ( int , input ( ) . split ( <val1> ) ) )
<name3> の y 座標を <name1> の y 座標にする	<name1> . y = <name3> . y	<name4> . <name1> . y = <name3> . y
<name3> 、 <name6> 、 <name5> 、 <name1> から <name5> を引いた値、 <name4> の最小値の最大値を <name3> とする	<name3> = max ( <name3> , min ( <name6> , <name5> , <name1> - <name5> , <name4> ) )	<name3> = max ( <name3> , min ( <name6> , <name5> , <name1> - <name5> , <name4> ) )
<name2> の <name3> 番目のリストを <name5> とする	<name5> = list ( <name2> [ <name3> ] )	else = list ( <name2> [ <name3> ] )
<name6> から <val4> を引いた値を <name3> とする	<name3> = <name6> - <val4>	<name6> <name3> = <name6> - <val4>
<name1> の <name6> 番目が <name3> の <name6> 番目より大きいとき、	if <name1> [ <name6> ] > <name3> [ <name6> ] :	for <name1> [ <name6> ] > <name3> [ <name6> ] :
<name6> . <name4> ( <name3> ) を <name4> とする	<name4> = <name6> . <name4> ( <name3> )	<name4> = <name6> . <name4> ( <name3> )
<name4> の末尾に <name1> を <name3> で割った値を追加する	<name4> . append ( <name1> / <name3> )	<name1> . append ( <name1> / <name3> )
<name5> の <name3> を <name5> の <name2> の <name1> 番目にする	<name5> . <name2> [ <name1> ] = <name5> . <name3>	<name1> . <name2> [ <name1> ] = <name5> . <name3>
<name5> から <val3> 未満までの数列の各要素を <name1> とし、 <name4> の末尾に <name1> を追加するの列	[ <name4> . append ( <name1> ) for <name1> in range ( <name5> , <val3> ) ]	<name4> . append ( [ <name4> . append ( <name1> ) for <name1> in range ( <name5> , <val3> ) ] )
<name1> でないとき、 <blk> <val4> を出力する </blk>	if not <name1> : <blk> print ( <val4> ) </blk>	if not <name1> : <blk> print ( <val4> ) </blk>
<name5> の各要素を <name2> とし、 <name2> が <val1> と等しくないときの <name2> の列を <name4> とする	<name4> = [ <name2> for <name2> in <name5> if <name2> != <val1> ]	<name2> = [ <name2> for <name2> in <name5> if <name2> != <val1> ]
0 から <name2> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列の列を <name1> とする	<name1> = [ [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] for <name3> in range ( <name2> ) ]	<name6> = [ [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] for <name3> in range ( <name2> ) ]
<name6> の <name4> を取り出した値を <name5> とする	<name5> = <name6> . pop ( <name4> )	<name5> = <name6> . pop ( <name4> )
<val3> が <name4> 以下かどうかが <name6> より小さくかつ <val3> が <name1> 以下かどうかが <name5> より小さくかつ <name2> の <name1> 番目の <name4> 番目が <val3> と等しいとき、	if <val3> <= <name4> < <name6> and <val3> <= <name1> < <name5> and <name2> [ <name1> ] [ <name4> ] == <val3> :	list ( <val3> <= <name4> < <name6> and <val3> <= <name1> < <name5> and <name2> [ <name1> ] [ <name4> ] == <val3> :
<name6> . <name2> ( ) を順に <name1> として、繰り返す	for <name1> in <name6> . <name2> ( ) :	. for <name1> in <name6> . <name2> ( ) :
<name4> を <name1> ( <name6> , <name5> ) だけ増加させる	<name4> += <name1> ( <name6> , <name5> )	<name2> += <name1> ( <name6> , <name5> )
( <val3> 、 <val6> ) からなる列の <name2> が <val1> と等しいかどうか番目を出力する	print ( [ <val3> , <val6> ] [ <name2> == <val1> ] )	print ( [ <val3> , <val6> ] [ <name2> == <val1> ] )
<name4> の <val1> 番目から <val1> に <name3> を加えた値までの部分列の各要素に <name6> を適用した列に番号付した組の列を <name5> とする	<name5> = enumerate ( map ( <name6> , <name4> [ <val1> : <val1> + <name3> ] ) )	<name5> = enumerate ( map ( <name6> , <name4> [ <val1> : <val1> + <name3> ] ) )
<name3> の <name4> の <name1> の <name5> の <name6> 番目を順に <name2> として、繰り返す	for <name2> in <name3> . <name4> . <name1> [ <name5> . <name6> ] :	. for <name2> in <name3> . <name4> . <name1> [ <name5> . <name6> ] :
<name6> の <name4> の先頭番目を <name1> とする	<name1> = <name6> [ <name4> [ 0 ] ]	<name1> = <name6> [ <name4> [ 0 ] ]
- <name3> から <name3> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( - <name3> , <name3> ) :	. for <name6> in range ( - <name3> , <name3> ) :
<name2> の末尾に ( <name4> から <name3> を引いた値、 <name1> ) の組を追加する	<name2> . append ( ( <name4> - <name3> , <name1> ) )	not <name2> . append ( ( <name4> - <name3> , <name1> ) )
<name1> ( <name6> . <name4> , <name3> , <name2> ) を <name6> の <name4> にする	<name6> . <name4> = <name1> ( <name6> . <name4> , <name3> , <name2> )	dict . <name4> = <name1> ( <name6> . <name4> , <name3> , <name2> )
( <val2> 、 <val2> 、 <val2> 、 <val4> 、 <val4> 、 <val1> 、 <val1> 、 <val6> ) の組に <val6> を掛けた値を <name5> とする	<name5> = ( <val2> , <val2> , <val2> , <val4> , <val4> , <val1> , <val1> , <val6> ) * <val6>	<name5> = ( <val2> , <val2> , <val4> , <val4> , <val4> , <val1> , <val6> ) * <val6>
0 から <val3> 未満までの数列の各要素を <name1> とし、 <name6> [ <name1> ] ( <name2> [ <name1> ] , <name5> ) の列を <name2> とする	<name2> = [ <name6> [ <name1> ] ( <name2> [ <name1> ] , <name5> ) for <name1> in range ( <val3> ) ]	<name6> = [ <name6> [ <name1> ] ( <name2> [ <name1> ] , <name5> ) for <name1> in range ( <val3> ) ]
<name2> に <name2> を掛けた値に <name5> に <name5> を掛けた値を加えた値から <val4> に <name2> を掛けた値に <name5> を掛けた値に <name3> の余弦を掛けた値を引いた値の <val6> 乗を <name1> とする	<name1> = ( <name2> * <name2> + <name5> * <name5> - <val4> * <name2> * <name5> * math . cos ( <name3> ) ) ** ( <val6> )	<name1> = ( <name2> * <name2> + <name5> * <name5> - <val4> * <name2> * <name5> * math . cos ( <name3> ) ) ** <val6>
<name6> の <val2> 番目を <name4> の先頭にする	<name4> [ 0 ] = <name6> [ <val2> ]	<name4> [ 0 ] = <name6> [ <val2> ]
<name1> の <name5> に <name6> を加えた値番目を <name4> とする	<name4> = <name1> [ <name5> + <name6> ]	<name4> = <name1> [ <name5> + <name6> ]
{ : 64 b }を書式として <name5> で整形した文字列内の <val2> の出現回数を出力する	print ( '{:64b}' . format ( <name5> ) . count ( <val2> ) )	print ( '{:032b}' . format ' . format ( <name5> ) . count ( <val2> ) )
root を <name2> の <name5> にする	<name2> . <name5> = 'root'	( <name2> . <name5> ) = 'root'
<name6> を <name4> の長さだけ増加させる	<name6> += len ( <name4> )	<name2> += len ( <name4> )
入力された文字列を <val1> で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = [ int ( <name2> ) for <name2> in input ( ) . split ( <val1> ) ]	<name4> = [ int ( <name2> ) for <name2> in input ( ) . split ( <val1> ) ]
<name6> ( <name4> . <name2> + <name1> . <name2> , <name4> . <name3> + <name1> . <name3> ) を返す	return <name6> ( <name4> . <name2> + <name1> . <name2> , <name4> . <name3> + <name1> . <name3> )	x return <name6> ( <name4> . <name2> + <name1> . <name2> , <name4> . <name3> + <name1> . <name3> )
<name1> の 2 進数文字列を <name5> とする	<name5> = bin ( <name1> )	<name5> = bin ( <name1> )
改行せずに <val6> を書式として <name3> 、 <name4> の <name1> 番目で整形した文字列を出力する	print ( <val6> . format ( <name3> , <name4> [ <name1> ] ) , end = '' )	<val6> . format ( <name3> , <name4> [ <name1> ] ) , end = '' )
<name2> の <val6> 乗を出力する	print ( <name2> ** <val6> )	print ( <name2> ** <val6> )
<name4> の <name6> 番目の <val5> 番目が <name1> に含まれるとき、 <blk> <name3> に <name4> の <name6> 番目の <val2> 番目を追加した集まり </blk>	if <name4> [ <name6> ] [ <val5> ] in <name1> : <blk> <name3> . add ( <name4> [ <name6> ] [ <val2> ] ) </blk>	list if <name4> [ <name6> ] [ <val5> ] in <name1> : <blk> <name3> . add ( <name4> [ <name6> ] [ <val2> ] ) </blk>
0 から <name2> から <val5> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> - <val5> ) :	for <name4> in range ( <name2> - <val5> ) :
<name5> から <name1> [ : <name6> ] の総和に <val4> を掛けた値を引いた値から <name3> に <name2> から <name6> に <val4> を掛けた値を引いた値を掛けた値を引いた値に <val4> を掛けた値を <name2> とする	<name2> = ( <name5> - sum ( <name1> [ : <name6> ] ) * <val4> - <name3> * ( <name2> - <name6> * <val4> ) ) * <val4>	<name2> = ( <name5> - sum ( <name1> [ : <name6> ] ) * <val4> - <name3> * ( <name2> - <name6> * <val4> ) ) * <val4>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name1> 、 <name6> 、 <name2> 、 <name3> 、 <name5> 、 <name4> とする	<name5> , <name4> , <name1> , <name6> , <name2> , <name3> , <name5> , <name4> = map ( int , input ( ) . split ( ) )	<name4> , <name1> , <name6> , <name2> , <name3> , <name5> , <name4> = map ( int , input ( ) . split ( ) )
<name3> と <name1> を入れ替える	<name3> , <name1> = <name1> , <name3>	( <name3> , <name1> = <name1> , <name3> )
<name1> の長さが <val2> より大きくかつ ( <name1> [ -1 ] - <name1> [ -2 ] ) . <name3> ( <name4> - <name1> [ -1 ] ) が <val6> 以下の間、次を繰り返す	while len ( <name1> ) > <val2> and ( <name1> [ - <val2> ] - <name1> [ - 2 ] ) . <name3> ( <name4> - <name1> [ - <val2> ] ) <= <val6> :	yield len ( <name1> ) > <val2> and ( <name1> [ - <val2> ] - <name1> [ - 2 ] ) . <name3> ( <name4> - <name1> [ - <val2> ] ) <= <val6> :
<name2> の末尾に ( <name6> 、 <name5> 、 <name4> の <name1> 番目、 <name4> の <name3> 番目 ) の組を追加する	<name2> . append ( ( <name6> , <name5> , <name4> [ <name1> ] , <name4> [ <name3> ] ) )	input . append ( ( <name6> , <name5> , <name4> [ <name1> ] , <name4> [ <name3> ] ) )
<name3> . <name4> ( <name6> ) のとき、	if <name3> . <name4> ( <name6> ) :	continue <name3> . <name4> ( <name6> ) :
<name4> ( <name2> )	<name4> ( <name2> )	str ( <name4> ( <name2> ) )
<name6> の末尾に ( <name5> に <name3> を加えた値、 <val2> ) の組を追加する	<name6> . append ( ( <name5> + <name3> , <val2> ) )	<name4> . append ( ( <name5> + <name3> , <val2> ) )
( <name5> の <name3> 番目、 os . <name6> の逆順 ) の組を返す	return ( <name5> [ <name3> ] , <name6> [ : : - 1 ] )	assert ( <name5> [ <name3> ] , <name6> [ : : - 1 ] )
<name6> の末尾に <name1> に <name4> を掛けた値を追加する	<name6> . append ( <name1> * <name4> )	<name4> . append ( <name1> * <name4> )
<name5> を <name6> にソート順で挿入する	insort_left ( <name6> , <name5> )	insort_left ( <name6> , <name5> )
<name1> . <name4> ( <name5> ) でないとき、	if ( not <name1> . <name4> ( <name5> ) ) :	isinstance ( <name1> . <name4> ( <name5> ) ) :
<name1> ( <name5> ) を <name3> とする	<name3> = <name1> ( <name5> )	<name3> = <name1> ( <name5> )
<name1> を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name1>	( <name4> , <name5> = <name1> )
<name3> が <name5> と等しいかどうかが <val2> と等しいかどうかを返す	return ( <name3> == <name5> == <val2> )	x return <name3> == <name5> == <val2>
<name1> が <name3> の長さと等しくなくかつ <name3> の <name1> 番目が <name5> と等しいとき、	if <name1> != len ( <name3> ) and <name3> [ <name1> ] == <name5> :	raise <name1> != len ( <name3> ) and <name3> [ <name1> ] == <name5> :
<name4> の逆順、 <name2> を反転した列の要素をそれぞれ組にした列を順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in zip ( <name4> [ : : - 1 ] , reversed ( <name2> ) ) :	for <name6> , <name1> in zip ( <name4> [ : : - 1 ] , reversed ( <name2> ) ) :
<name6> の <val5> 番目を <name3> の y 座標にする	<name3> . y = <name6> [ <val5> ]	( <name3> . y = <name6> [ <val5> ] )
<name4> の <name3> 番目が <val6> と等しくない間、次を繰り返す	while <name4> [ <name3> ] != <val6> :	try != <name4> [ <name3> ] != <val6> :
<name3> ( <name4> . <name2> [ <val1> : ] )	<name3> ( <name4> . <name2> [ <val1> : ] )	<name3> ( <name4> . <name2> [ <val1> : ] )
<name4> の <name5> 番目に <name1> を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name4> [ <name5> ] + <name1>	<name2> [ <name3> ] = <name4> [ <name5> ] + <name1>
<name4> を <name6> を <val1> で割った商だけ増加させる	<name4> += <name6> // <val1>	<name2> += <name4> // <name6> // <val1>
<name6> に <name5> を加えた値を <val1> で割った余りを <name4> とする	<name4> = ( <name6> + <name5> ) % <val1>	<name4> = ( <name6> + <name5> ) % <val1>
<name2> が <name3> から <val4> を引いた値より小さくかつ <name1> の <name5> から <val4> を引いた値番目の <name2> に <val4> を加えた値番目が <name6> と等しくないとき、	if <name2> < <name3> - <val4> and <name1> [ <name5> - <val4> ] [ <name2> + <val4> ] != <name6> :	list ( <name2> < <name3> - <val4> and <name1> [ <name5> - <val4> ] [ <name2> + <val4> ] != <name6> :
<name1> が <val5> より大きくかつ <name4> の <name2> から <name6> を引いた値番目が <val3> と等しくないとき、	if <name1> > <val5> and <name4> [ <name2> - <name6> ] != <val3> :	\ if <name1> > <val5> and <name4> [ <name2> - <name6> ] != <val3> :
<name5> の <name6> 番目内の <name4> と等しい要素を取り除く	<name5> [ <name6> ] . remove ( <name4> )	<name4> [ <name6> ] . remove ( <name4> )
<name1> を <val3> だけ増加させる <name6> を <val3> だけ増加させる	<name1> += <val3> <name6> += <val3>	<name2> += <name1> += <val3> <name6> += <val3>
<name5> と <name4> を <name5> で割った余りの最大公約数を返す	return gcd ( <name5> , <name4> % <name5> )	yield gcd ( <name5> , <name4> % <name5> )
0 から <name2> 未満までの数列の各要素を <name5> とし、 <name1> の列を <name6> とする	<name6> = [ <name1> for <name5> in range ( <name2> ) ]	<name4> = [ <name1> for <name5> in range ( <name2> ) ]
internal node を <name5> の <name2> 番目にする	<name5> [ <name2> ] = 'internal node'	( <name5> [ <name2> ] = 'internal node' )
<name1> 、 <name3> の最大値に <val2> を加えた値を <name6> とする <name6> から <name1> を引いた値を <name4> とする <name6> から <name3> を引いた値を <name5> とする	<name6> = max ( <name1> , <name3> ) + <val2> <name4> = <name6> - <name1> <name5> = <name6> - <name3>	<name6> = max ( <name1> , <name3> ) + <val2> <name4> = <name6> - <name1> <name5> = <name6> - <name3>
<name6> を <name3> の <name4> の <name5> 番目にする	<name3> . <name4> [ <name5> ] = <name6>	<name3> . <name4> [ <name5> ] = <name6>
<name3> が <name6> と等しいかどうかが <name1> と等しいかどうかが <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name3> == <name6> == <name1> == <val2> : <blk> break </blk>	\ if <name3> == <name6> == <name1> == <val2> : <blk> break </blk>
<name1> が <name2> から <val3> を引いた値と等しいとき、	if <name1> == <name2> - <val3> :	while <name1> == <name2> - <val3> :
<name4> の <name5> 番目から <name5> に <name2> を加えた値までの部分列に <name4> の、つまり先頭から <name5> 番目までの部分列を加えた値に <name4> の <name5> に <name2> を加えた値から、つまり末尾までの部分列を加えた値を <name4> とする	<name4> = <name4> [ <name5> : <name5> + <name2> ] + <name4> [ : <name5> ] + <name4> [ <name5> + <name2> : ]	<name4> = <name4> [ <name5> : <name5> + <name2> ] + <name4> [ : <name5> ] + <name4> [ <name5> + <name2> : ]
<name5> と <val6> の論理積のとき、	if <name5> & <val6> :	: if <name5> & <val6> :
<name3> の <name6> 番目の <name2> 番目を <name3> の <name6> から <val5> を引いた値番目の <name2> 番目にする	<name3> [ <name6> - <val5> ] [ <name2> ] = <name3> [ <name6> ] [ <name2> ]	<name1> [ <name6> - <val5> ] [ <name2> ] = <name3> [ <name6> ] [ <name2> ]
<name1> の <name6> に <name3> 、 <name2> を追加した集まり	<name1> . <name6> . add ( <name3> , <name2> )	<name2> . <name6> . add ( <name3> , <name2> )
( ( <val4> 、 <val6> ) からなる列、 ( <val4> 、 <val4> ) からなる列 ) からなる列を <name2> とする	<name2> = [ [ <val4> , <val6> ] , [ <val4> , <val4> ] ]	<name2> = [ [ <val4> , <val6> ] , [ <val4> , <val4> ] ]
<name2> の末尾に <name3> ( <name1> , <name6> ) を追加する	<name2> . append ( <name3> ( <name1> , <name6> ) )	<name2> . append ( <name3> ( <name1> , <name6> ) )
<val1> から <name6> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> , <name6> ) :	. for <name4> in range ( <val1> , <name6> ) :
( <name3> が <val5> より大きいとき ( <name3> から <val4> を引いた値 ) からなる列、そうでなければ <val5> から <name2> 未満までの数列の各要素を <name3> とし、、つまり空列の列 ) からなる列を <name1> とする	<name1> = [ [ <name3> - <val4> ] if <name3> > <val5> else [ [ ] for <name3> in range ( <name2> ) ] ]	<name1> = [ [ <name3> - <val4> ] if <name3> > <val5> else [ [ [ ] for <name3> in range ( <name2> ) ] ]
<name4> 、 <name3> の <name4> 番目を出力する	print ( <name4> , <name3> [ <name4> ] )	<name4> . print ( <name4> , <name3> [ <name4> ] )
未定値を返す	return None	yield None
<name1> の末尾に <val4> を ( <name3> 、 <name6> ) の組で割った余りを追加する	<name1> . append ( <val4> % ( <name3> , <name6> ) )	<name1> . append ( <val4> % ( <name3> , <name6> ) )
<name4> の先頭の最大値を出力する	print ( max ( <name4> [ 0 ] ) )	print ( max ( <name4> [ 0 ] ) )
( <val2> ) からなる列の <name1> に <val3> を加えた値回分の列を <name4> とする	<name4> = [ <val2> ] * ( <name1> + <val3> )	<name4> = [ <val2> ] * ( <name1> + <val3> )
<name6> の <val3> 番目が <name4> と等しいとき、	if <name6> [ <val3> ] == <name4> :	> <name6> [ <val3> ] == <name4> :
( <name1> 、 <val3> ) からなる列を <name5> とする	<name5> = [ <name1> , <val3> ]	else = [ <name1> , <val3> ]
<name5> の <name6> 番目を <name3> とする <name1> の <name6> 番目を <name4> とする <name3> の <name6> 番目を <name2> とする	<name3> = <name5> [ <name6> ] <name4> = <name1> [ <name6> ] <name2> = <name3> [ <name6> ]	<name1> = <name5> [ <name6> ] <name4> = <name1> [ <name6> ] <name2> = <name3> [ <name6> ]
Unknown 、 <name6> を出力する	print ( 'Unknown' , <name6> )	print ( 'Unknown' , <name6> )
<name3> ( <name5> . <name1> [ <val6> : ] )	<name3> ( <name5> . <name1> [ <val6> : ] )	<name3> ( <name5> . <name1> [ <val6> : ] )
入力された文字列を <val4> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name2> とする	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val4> ) ]	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val4> ) ]
<name4> に <name4> を掛けた値から <val6> 未満までの <name4> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> * <name4> , <val6> , <name4> ) :	. for <name1> in range ( <name4> * <name4> , <val6> , <name4> ) :
<name5> の <name4> の <name6> 番目が <name3> の <name4> の <name6> 番目と等しくないとき、	if <name5> . <name4> [ <name6> ] != <name3> . <name4> [ <name6> ] :	raise <name5> . <name4> [ <name6> ] != <name3> . <name4> [ <name6> ] :
<name1> ( ) の両端から空白改行を取り除いた文字列を <name3> とする	<name3> = <name1> ( ) . strip ( )	<name3> = <name1> ( ) . strip ( )
<name5> が、つまり無限大と等しくないとき <name5> 、そうでなければ <val6> を出力する	print ( <name5> if <name5> != inf else <val6> )	<name2> . print ( <name5> if <name5> != inf else <val6> )
<name1> 、 <name3> から <name4> に <name1> を掛けた値を引いた値を <name3> 、 <name1> とする	<name3> , <name1> = <name1> , <name3> - <name4> * <name1>	<name3> , <name1> = <name1> , <name3> - <name4> * <name1>
<name1> と <name3> の直積のリストを返す	return list ( itertools . product ( <name1> , <name3> ) )	x return list ( itertools . product ( <name1> , <name3> ) )
<name5> の末尾に ( <val6> ) からなる列に <name4> ( <name3> ( ) ) の各要素に <name2> を適用した列のリストを加えた値に ( <val6> ) からなる列を加えた値を追加する	<name5> . append ( [ <val6> ] + <name4> ( map ( <name2> , <name4> ( <name3> ( ) ) ) ) + [ <val6> ] )	<name3> . append ( [ <val6> ] + list ( map ( <name2> , <name4> ( <name3> ( ) ) ) ) + [ <val6> ] )
<name6> の長さが <val2> より大きいとき、	if len ( <name6> ) > <val2> :	> len ( <name6> ) > <val2> :
<name2> ( ) . <name3> ( ) の各要素に <name6> を適用した列のリストをソートした列を展開してを出力する	print ( * sorted ( list ( map ( <name6> , <name2> ( ) . <name3> ( ) ) ) ) )	<val3> print ( * sorted ( list ( map ( <name6> , <name2> ( ) . <name3> ( ) ) ) ) )
{ : . 6 f }を書式として <name6> で整形した文字列を出力する	print ( '{:.6f}' . format ( <name6> ) )	print ( '{:.6f}' . format ( <name6> ) )
<name1> に <name2> を掛けた値の文字列を <name3> とする	<name3> = str ( <name1> * <name2> )	<name3> = str ( <name1> * <name2> )
<name6> に <name4> を加えた値を <name3> とする <name1> から <name5> を引いた値に <name4> を加えた値を <name2> とする	<name3> = <name6> + <name4> <name2> = <name1> - <name5> + <name4>	else = <name6> + <name4> <name2> = <name1> - <name5> + <name4>
<name2> が <name6> に含まれるとき、 <blk> <name6> の <name2> 番目を <val5> だけ増加させる </blk>	if <name2> in <name6> : <blk> <name6> [ <name2> ] += <val5> </blk>	if <name2> in <name6> : <blk> <name6> [ <name2> ] += <val5> </blk>
( <name3> 、 <name6> ) の組を <name2> の <name6> 番目にする	<name2> [ <name6> ] = ( <name3> , <name6> )	dict [ <name2> . <name6> ] = ( <name3> , <name6> )
<name6> に <name1> の余弦を掛けた値に <name5> に <name1> の正弦を掛けた値を加えた値、 <name5> に <name1> の余弦を掛けた値から <name6> に <name1> の正弦を掛けた値を引いた値の絶対値を <name6> 、 <name5> とする	<name6> , <name5> = <name6> * cos ( <name1> ) + <name5> * sin ( <name1> ) , abs ( <name5> * cos ( <name1> ) - <name6> * sin ( <name1> ) )	<name6> , <name5> = <name6> * cos ( cos ( <name1> ) + <name5> + <name1> * sin ( <name1> ) - <name6> * sin ( <name1> ) ) )
入力された文字列を <val3> で分割した字句列を <name5> とする	<name5> = input ( ) . split ( <val3> )	<val1> <name5> = input ( ) . split ( <val3> )
<name5> から <name1> に <val3> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <name1> + <val3> ) :	( for <name2> in range ( <name5> , <name1> + <val3> ) :
<name2> から <name5> を引いた値を出力する	print ( <name2> - <name5> )	print ( <name2> - <name5> )
<name1> の <val2> 番目、 <name1> の <val6> 番目を <name1> の <val6> 番目、 <name1> の <val2> 番目とする	<name1> [ <val6> ] , <name1> [ <val2> ] = <name1> [ <val2> ] , <name1> [ <val6> ]	<name1> [ <val6> ] , <name1> [ <val2> ] = <name1> [ <val2> ] , <name1> [ <val6> ]
<name1> . <name6> ( ) を <name2> とする	<name2> = <name1> . <name6> ( )	<name2> = <name1> . <name6> ( )
( <val5> 、 <val1> 、 <val6> 、 <val3> 、 <val2> 、 <val4> 、 <val5> ) からなる列を <name4> とする	<name4> = [ <val5> , <val1> , <val6> , <val3> , <val2> , <val4> , <val5> ]	<name4> = [ <val5> , <val1> , <val6> , <val3> , <val2> , <val4> , <val5> ]
<name2> の <name6> を順に <name5> として、繰り返す	for <name5> in <name2> . <name6> :	. for <name5> in <name2> . <name6> :
<name4> に <val6> を加えた値に <name3> に <val1> を加えた値の文字列を加えた値を <name4> とする	<name4> = <name4> + <val6> + str ( <name3> + <val1> )	<name4> = <name4> + <val6> + str ( <name3> + <val1> )
( <val5> ) からなる列の <name2> の <name1> 回分の列を <name2> の <name3> にする	<name2> . <name3> = [ <val5> ] * <name2> . <name1>	<name2> . <name3> = [ <val5> ] * <name2> . <name1>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name1> 、 <name4> とする	<name2> , <name3> , <name1> , <name4> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name4> = map ( int , input ( ) . split ( ) )
<name5> の <name3> の <name6> 番目の <name4> 番目の <val1> 番目を <name2> だけ増加させる	<name5> . <name3> [ <name6> ] [ <name4> ] [ <val1> ] += <name2>	( <name5> . <name3> [ <name6> ] [ <name4> ] [ <val1> ] += <name2> )
<val6> を <name3> の <name1> 番目の <val6> 番目にする	<name3> [ <name1> ] [ <val6> ] = <val6>	<name1> [ <val6> ] [ <val6> ] = <val6>
<name6> の <name5> 番目の <name4> 番目を <name2> とする	<name2> = <name6> [ <name5> ] [ <name4> ]	<name2> = <name6> [ <name5> ] [ <name4> ]
<name2> . <name1> ( <name3> , <name6> . <name5> - <name4> . <name5> ) の絶対値を <name4> とする	<name4> = abs ( <name2> . <name1> ( <name3> , <name6> . <name5> - <name4> . <name5> ) )	<name4> = abs ( <name2> . <name1> ( <name3> , <name6> . <name5> - <name4> . <name5> ) )
<name4> の文字列が <name4> の文字列の逆順と等しいとき、 <blk> <name5> の末尾に <name4> を追加する </blk>	if str ( <name4> ) == str ( <name4> ) [ : : - 1 ] : <blk> <name5> . append ( <name4> ) </blk>	for <name4> in str ( <name4> ) == str ( <name4> ) [ : : - 1 ] : <blk> <name5> . append ( <name4> ) </blk>
<name4> モジュールを用いる	from <name4> import permutations , product	return from <name4> import deque
<name1> を <name3> から <name2> を引いた値から <name4> の <name5> から <val6> を引いた値番目を引いた値だけ増加させる	<name1> += ( <name3> - <name2> ) - <name4> [ <name5> - <val6> ]	( <name1> += ( <name3> - <name2> ) - <name4> [ <name5> - <val6> ] )
( ( -10 の <val2> 乗 ) からなる列の 0 から <name1> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <name3> に <val6> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ - 10 ** <val2> ] * [ ( <name3> + <val6> ) for <name5> in range ( <name1> + <val6> ) ] ]	<name4> = [ [ - <val2> ** <val2> ] * [ ( <name3> + <val6> ) for <name5> in range ( <name1> + <val6> ) ] ]
<name1> が <name2> に含まれるとき、 <blk> <name3> を <val6> だけ増加させる </blk>	if <name1> in <name2> : <blk> <name3> += <val6> </blk>	list ( <name1> in <name2> ) : <blk> <name3> += <val6> </blk>
<name1> の <name3> の <name6> を <name5> とする	<name5> = <name1> . <name3> . <name6>	<name5> = <name1> . <name3> . <name6>
<name6> の末尾に ( <name3> に <val4> を加えた値、集合 ) の組を追加する	<name6> . append ( ( <name3> + <val4> , set ( ) ) )	<name4> . append ( ( <name3> + <val4> , set ( ) ) )
<name4> を <name5> で割った商を <name6> とする	<name6> = <name4> // <name5>	( <name6> = <name4> // <name5> )
<name2> . <name4> ( ) の <val6> を <val5> で割った値乗を返す	return <name2> . <name4> ( ) ** ( <val6> / <val5> )	yield <name2> ** . <name4> ( ) ** ( <val6> / <val5> )
<name3> と <name4> の最大公約数を <name2> とする	<name2> = gcd ( <name3> , <name4> )	<name2> = gcd ( <name3> , <name4> )
<name4> に <name4> に <val6> を加えた値を掛けた値に <name4> に <val2> を加えた値を掛けた値を <val3> で割った商を <name1> とする	<name1> = <name4> * ( <name4> + <val6> ) * ( <name4> + <val2> ) // <val3>	<name1> = <name4> * ( <name4> + <val6> ) * ( <name4> + <val2> ) // <val3>
<name3> に番号付した組の列の各要素を <name2> 、 <name1> とし、 <name5> の <name1> 番目の <name2> 番目の列の総和を返す	return sum ( [ <name5> [ <name1> ] [ <name2> ] for <name2> , <name1> in enumerate ( <name3> ) ] )	yield sum ( [ <name5> [ <name1> ] [ <name2> ] for <name2> , <name1> in enumerate ( <name3> ) ] )
<name3> の末尾に ( <val6> 、 <name4> ) の組を追加する	<name3> . append ( ( <val6> , <name4> ) )	<name4> . append ( ( <val6> , <name4> ) )
<name3> の <name6> の <name4> 番目を <name3> の <name6> の <name3> の <name1> の <name4> 番目番目にする	<name3> . <name6> [ <name3> . <name1> [ <name4> ] ] = <name3> . <name6> [ <name4> ]	<name3> . <name6> [ <name3> . <name1> [ <name4> ] ] = <name3> . <name6> [ <name4> ]
<name4> ( <name1> , <name5> ) のとき、	if <name4> ( <name1> , <name5> ) :	for <name4> in <name4> ( <name1> , <name5> ) :
<val6> から -1 未満までの -1 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , - 1 , - 1 ) :	) for <name5> in range ( <val6> , - 1 , - 1 ) :
0 から <name5> から <val4> を引いた値未満までの数列の各要素を <name6> とし、 <name3> の <name6> 番目が <name3> の <name6> に <val4> を加えた値番目と等しいかどうかの列が少なくともひとつは真のとき、	if any ( [ <name3> [ <name6> ] == <name3> [ <name6> + <val4> ] for <name6> in range ( <name5> - <val4> ) ] ) :	continue any ( [ <name3> [ <name6> ] == <name3> [ <name6> + <val4> ] for <name6> in range ( <name5> - <val4> ) ] ) :
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name3> の <name4> にする	<name3> . <name4> = [ [ ] for <name6> in range ( <name1> ) ]	<name3> . <name4> = [ [ ] for <name6> in range ( <name1> ) ]
<name1> の <name6> の <name3> 番目の <name4> 番目に <name4> に <val5> を加えた値に <name1> の <name6> の <name3> 番目の <name4> に <val5> を加えた値番目を掛けた値を加えた値を <name1> の <name6> の <name3> に <val5> を加えた値番目の <name4> に <val5> を加えた値番目にする	<name1> . <name6> [ <name3> + <val5> ] [ <name4> + <val5> ] = <name1> . <name6> [ <name3> ] [ <name4> ] + ( <name4> + <val5> ) * <name1> . <name6> [ <name3> ] [ <name4> + <val5> ]	<name2> . <name1> [ <name6> . <name3> + <val5> ] [ <name4> + <val5> ] = <name1> . <name6> [ <name3> ] [ <name4> ] + ( ( <name4> + <val5> ) * <name1> . <name6> [ <name3> ] [ <name4> + <val5> ] )
<name5> ( <name1> ) が <name1> と等しいとき、	if <name5> ( <name1> ) == <name1> :	: if <name5> ( <name1> ) == <name1> :
\ <name3> ( <val2> ) \	\ <name3> ( <val2> ) \	<val1> <name3> ( <val2> ) \
<name3> の <name4> 番目が <val1> と等しくないとき、	if <name3> [ <name4> ] != <val1> :	raise <name3> [ <name4> ] != <val1> :
<name4> の各要素を <name5> とし、 <name5> が、つまり空列と等しくないときの <name5> の列を <name4> とする	<name4> = [ <name5> for <name5> in <name4> if <name5> != [ ] ]	<name2> = [ <name5> for <name5> in <name4> if <name5> != [ ] ]
<name6> の <name2> 番目を順に <name1> 、 <name3> として、繰り返す	for <name1> , <name3> in <name6> [ <name2> ] :	. for <name1> , <name3> in <name6> [ <name2> ] :
<name5> の長さが <name2> より小さい間、次を繰り返す	while len ( <name5> ) < <name2> :	yield ( len ( <name5> ) < <name2> ) :
{} : {} : {}を出力する	print ( { n // 3600 } : { ( n % 3600 ) // 60 } : { n % 60 } )	<name4> = dict . key key = dict ' dict ' )
<name6> ( <name1> ) を <name3> とする	<name3> = <name6> ( <name1> )	<name3> = <name6> ( <name1> )
( <val4> ) からなる列の <name2> の長さ回分の列を <name5> とする	<name5> = [ <val4> ] * len ( <name2> )	<name5> = [ <val4> ] * len ( <name2> )
<name3> と <val2> を <name1> だけ左シフトした値の論理積のとき、	if <name3> & ( <val2> << <name1> ) :	. if <name3> & ( <val2> << <name1> ) :
<name3> に番号付した組の列を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in enumerate ( <name3> ) :	for <name5> , <name6> in enumerate ( <name3> ) :
<val4> に <name1> を掛けた値を <name2> で割った商を <name6> とする	<name6> = <val4> * <name1> // <name2>	<name6> = <val4> * <name1> // <name2>
0 から <name3> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name1> in range ( <name3> ) ]	<name6> = [ [ ] for <name1> in range ( <name3> ) ]
<name3> の <name2> 番目を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name3> [ <name2> ]	<name4> [ <name1> . <name6> ] = <name3> [ <name2> ]
<name2> . <name1> ( ) を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name2> . <name1> ( )	<name2> , <name4> = <name2> . <name1> ( )
<val6> に <val5> を掛けた値を出力する	print ( <val6> * <val5> )	print ( <val6> * <val5> )
<name6> に <name5> を加えた値を <val3> で割った商を <name4> とする	<name4> = ( <name6> + <name5> ) // <val3>	<name4> = ( <name6> + <name5> ) // <val3>
<name4> の絶対値を <name4> とする <name1> の絶対値を <name1> とする	<name4> = abs ( <name4> ) <name1> = abs ( <name1> )	<name6> = abs ( <name4> ) <name1> = abs ( <name1> )
<name5> ( <name3> ) を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name5> ( <name3> )	<name3> , <name2> = <name5> ( <name3> )
<name5> を <name3> の <name1> にする	<name3> . <name1> = <name5>	( <name3> . <name1> = <name5> )
<name5> の <name6> の各要素を <name4> 、 <name2> 、 <name4> とし、 <name2> の列を返す	return [ <name2> for <name4> , <name2> , <name4> in <name5> . <name6> ]	self return [ <name2> for <name4> , <name2> , <name4> in <name5> . <name6> ]
<name4> の <name1> の先頭番目を順に <name3> として、繰り返す	for <name3> in <name4> [ <name1> [ 0 ] ] :	. for <name3> in <name4> [ <name1> [ 0 ] ] :
セパレータの <val5> 番目の整数値を <name3> とする	<name3> = int ( sep [ <val5> ] )	<name3> = int ( sep [ <val5> ] )
<name2> . <name3> ( <name4> , <name6> , <name5> ) を <name1> とする	<name1> = <name2> . <name3> ( <name4> , <name6> , <name5> )	<name1> = <name2> . <name3> ( <name4> , <name6> , <name5> )
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列の列を <name5> とする	<name5> = [ [ int ( <name4> ) for <name4> in input ( ) . split ( ) ] for <name6> in range ( <name1> ) ]	<name5> = [ [ int ( <name4> ) for <name4> in input ( ) . split ( ) ] for <name6> in range ( <name1> ) ]
<name3> . <name6> ( <name2> . <name5> )	<name3> . <name6> ( <name2> . <name5> )	<name3> . <name6> ( <name2> . <name5> )
( - <name2> ) からなる列の <name1> に <val5> に <name6> を掛けた値を加えた値回分の列を <name3> とする	<name3> = [ - <name2> ] * ( <name1> + <val5> * <name6> )	<name3> = [ - <name2> ] * ( <name1> + <val5> * <name6> )
<name5> ( <name3> ( <name1> ( ) ) ) を出力する	print ( <name5> ( <name3> ( <name1> ( ) ) ) )	print ( <name5> ( <name3> ( <name1> ( ) ) ) )
<name6> の、つまり先頭から <name5> 番目までの部分列に <name4> を加えた値に <name6> の <name1> に <val2> を加えた値から、つまり末尾までの部分列を加えた値を <name6> とする	<name6> = <name6> [ : <name5> ] + <name4> + <name6> [ <name1> + <val2> : ]	<name6> = <name6> [ : <name5> ] + <name4> + <name6> [ <name1> + <val2> : ]
<name3> の <name1> 番目を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name3> [ <name1> ]	<name1> [ <name5> ] = <name3> [ <name1> ]
<name6> の <name3> 番目に <name1> を加えた値を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name6> [ <name3> ] + <name1>	( <name6> [ <name2> ] = <name6> [ <name3> ] + <name1> )
<name2> の浮動小数点数を <name2> とする	<name2> = float ( <name2> )	<name2> = float ( <name2> )
<name5> の文字列が <val4> と等しいとき、	if str ( <name5> ) == <val4> :	for <name5> in str ( <name5> ) == <val4> :
<name1> . <name3> ( <name2> [ <val4> : ] ) のとき、	if <name1> . <name3> ( <name2> [ <val4> : ] ) :	if <name1> . <name3> ( <name2> [ <val4> : ] ) :
<name3> ( <name1> , <name5> ) の . <val2> 乗を <name6> とする	<name6> = <name3> ( <name1> , <name5> ) ** . <val2>	<name6> = <name3> ( <name1> , <name5> ) ** . <val2>
<val3> から -1 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , - 1 , - 1 ) :	for <name6> in range ( <val3> , - 1 , - 1 ) :
<name2> の <name1> から <name3> を引いた値番目に <name5> を加えた値、 <name2> の <name1> 番目の最大値を <name2> の <name1> 番目にする	<name2> [ <name1> ] = max ( <name2> [ <name1> - <name3> ] + <name5> , <name2> [ <name1> ] )	dict [ <name1> ] = max ( <name2> [ <name1> - <name3> ] + <name5> , <name2> [ <name1> ] )
<val1> を <name2> の <name3> の先頭の <val6> 番目にする	<name2> . <name3> [ <val6> ] [ <val6> ] = <val1>	<name4> . <name2> [ <name3> [ <val6> ] [ <val6> ] = <val1>
<name4> の <name3> に <name1> を加えた値番目が <name4> の <name3> 番目に <name6> を加えた値より小さいとき、	if <name4> [ <name3> + <name1> ] < <name4> [ <name3> ] + <name6> :	isinstance ( <name4> [ <name3> + <name1> ] < <name4> [ <name3> ] + <name6> ) :
0 から <val4> を <name5> だけ左シフトした値から <val4> を引いた値未満までの数列を反転した列を順に <name6> として、繰り返す	for <name6> in reversed ( range ( ( <val4> << <name5> ) - <val4> ) ) :	. for <name6> in reversed ( range ( ( <val4> << <name5> ) - <val4> ) :
<name2> の末尾に <name1> の <name6> [ <val3> * <name5> ] の整数値から <val4> を引いた値番目の <name6> の <val3> * <name5> + <val4> 番目の整数値から <val4> を引いた値番目を追加する	<name2> . append ( <name1> [ int ( <name6> [ <val3> * <name5> ] ) - <val4> ] [ int ( <name6> [ <val3> * <name5> + <val4> ] ) - <val4> ] )	<name2> . append ( <name1> [ int ( <name6> [ <val3> * <name5> ] ) - <val4> ] [ int ( <name6> [ <val3> * <name5> + <val4> ] ) - <val4> ] )
<name6> ( <name4> , <name5> , <name3> )	<name6> ( <name4> , <name5> , <name3> )	( <name6> ( <name4> , <name5> , <name3> ) )
<name3> から <name5> を引いた値を <name6> から <name2> を引いた値で割った値を <name4> とする	<name4> = ( <name3> - <name5> ) / ( <name6> - <name2> )	<name4> = ( <name3> - <name5> ) / ( <name6> - <name2> )
<name6> の <name3> 番目内の <name2> と等しい要素を取り除く	<name6> [ <name3> ] . remove ( <name2> )	<name1> [ <name3> ] . remove ( <name2> )
<name1> 、 <name3> の要素をそれぞれ組にした列を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in zip ( <name1> , <name3> ) :	. for <name5> , <name4> in zip ( <name1> , <name3> ) :
0 から <name4> 未満までの数列を順に <name6> として、繰り返す <blk> 入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列のリストを <name1> の <name6> 番目にする </blk>	for <name6> in range ( <name4> ) : <blk> <name1> [ <name6> ] = list ( map ( float , input ( ) . split ( ) ) ) </blk>	for <name6> in range ( <name4> ) : <blk> <name1> [ <name6> ] = list ( map ( float , input ( ) . split ( ) ) ) </blk>
<name5> が <name2> より大きいとき、 <blk> 繰り返しを中断する </blk>	if <name5> > <name2> : <blk> break </blk>	list ( <name5> > <name2> ) : <blk> break </blk>
( <name3> に <name2> に <name4> を掛けた値から <name6> に <name1> を掛けた値を引いた値を <name5> で割った値を加えた値、 <name3> に <name6> に <name4> を掛けた値に <name2> に <name1> を掛けた値を加えた値を <name5> で割った値を加えた値 ) の組を返す	return ( <name3> + ( <name2> * <name4> - <name6> * <name1> ) / <name5> , <name3> + ( <name6> * <name4> + <name2> * <name1> ) / <name5> )	return ( <name3> + ( <name2> * <name4> - <name6> * <name1> ) / <name5> , ( <name3> + <name6> * <name4> + <name2> * <name1> ) / <name5> )
<name2> ( <name6> / <val3> , <name6> ) を <name4> とする	<name4> = <name2> ( <name6> / <val3> , <name6> )	<name4> = <name2> ( <name6> / <val3> , <name6> )
<name6> ( <name3> [ : <name1> ] , <name1> ) 、 <name6> ( <name3> [ <name1> : ] , <name2> - <name1> ) の最小値を <name5> とする	<name5> = min ( <name6> ( <name3> [ : <name1> ] , <name1> ) , <name6> ( <name3> [ <name1> : ] , <name2> - <name1> ) )	<name6> = min ( <name6> ( <name3> [ : <name1> ] , <name1> ) , <name6> ( <name3> [ <name1> : ] , <name2> - <name1> ) )
<name2> の末尾に ( ( <name3> の <name1> 、 <name3> の <name5> ) からなる列、 <name3> の <name4> ) からなる列を追加する	<name2> . append ( [ [ <name3> . <name1> , <name3> . <name5> ] , <name3> . <name4> ] )	<name1> . append ( [ [ <name3> . <name1> , <name3> . <name5> ] , <name3> . <name4> ] )
0 から <val2> 未満までの数列の各要素を <name1> とし、 0 から <val6> 未満までの数列の各要素を <name5> とし、 <val4> の列の列を <name3> とする	<name3> = [ [ <val4> for <name5> in range ( <val6> ) ] for <name1> in range ( <val2> ) ]	<name3> = [ [ <val4> for <name5> in range ( <val6> ) ] for <name1> in range ( <val2> ) ]
<name1> の <name2> 番目の <name3> 番目でないとき、	if not <name1> [ <name2> ] [ <name3> ] :	while not <name1> [ <name2> ] [ <name3> ] :
<name1> を <name4> の <name5> の <name3> 番目にする	<name4> . <name5> [ <name3> ] = <name1>	( <name4> [ <name5> . <name3> ] = <name1> )
<name6> モジュールを用いる	from <name6> import Decimal , ROUND_HALF_UP	sqrt ( <name6> ) import sqrt
<name5> ( <name4> , <name3> ) を出力する	print ( <name5> ( <name4> , <name3> ) )	print ( <name5> ( <name4> , <name3> ) )
<name4> ( <name1> . <name5> ) を <name2> とする	<name2> = <name4> ( <name1> . <name5> )	<name2> = <name4> ( <name1> . <name5> )
<name1> を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in <name1> :	: for <name5> , <name4> in <name1> :
<name6> の絶対値が <val5> <name4> <val3> より大きいとき、	if abs ( <name6> ) > <val5> <name4> <val3> :	continue abs ( <name6> ) > <val5> <name4> <val3> :
改行せずに <val2> を間に入れて <name3> を連結した文字列を出力する	print ( <val2> . join ( <name3> ) , end = <val2> )	print ( <val2> . join ( <name3> ) , end = <val2> )
<name6> が <name5> に <name3> を掛けた値より大きいとき、	if <name6> > <name5> * <name3> :	> <name6> > <name5> * <name3> :
\ <name4> ( <val5> . <name1> ( <name3> ) ) \	\ <name4> ( <val5> . <name1> ( <name3> ) ) \	for <name4> ( <val5> . <name1> ( <name3> ) ) \
<name2> に <val1> を加えた値を <name2> とする	<name2> = <name2> + <val1>	<name2> = <name2> + <val1>
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name3> とする	<name1> , <name5> , <name3> = map ( int , <name6> ( ) . split ( ) )	<name1> , <name5> , <name3> = map ( int , <name6> ( ) . split ( ) )
<name1> を <name6> ( <val5> , <val3> ) で割った商を <name2> とする	<name2> = <name1> // <name6> ( <val5> , <val3> )	<name2> = <name1> // <name6> ( <val5> , <val3> )
( <val4> 、 <val2> 、 <val6> 、 <val5> ) からなる列を <name3> とする	<name3> = [ <val4> , <val2> , <val6> , <val5> ]	else = [ <val4> , <val2> , <val6> , <val5> ]
( 、つまり未定値 ) からなる列の <name5> の <name6> 回分の列を <name5> の <name1> にする	<name5> . <name1> = [ None ] * <name5> . <name6>	<name2> . <name5> . <name1> = [ None ] * <name5> . <name6>
<name2> に <name3> が <name4> より小さいとき ( <name3> 、 <name4> ) の組、そうでなければ ( <name4> 、 <name3> ) の組を追加した集まり	<name2> . add ( ( <name3> , <name4> ) if <name3> < <name4> else ( <name4> , <name3> ) )	<name4> . add ( ( <name3> , <name4> ) if <name3> < <name4> else ( <name4> , <name3> ) )
<val6> の <val3> 乗を <name2> とする	<name2> = <val6> ** <val3>	( <name2> = <val6> ** <val3> )
<name2> に <name6> を加えた値が <name1> ( <name5> & <name3> , <val4> ) より小さいとき、 <blk> <name2> に <name6> を加えた値を <name2> の <name5> と <name3> の論理積番目にする <sep> <name6> の <name2> に <name6> を加えた値番目の末尾に <name5> と <name3> の論理積を追加する </blk>	if <name2> + <name6> < <name1> ( <name5> & <name3> , <val4> ) : <blk> <name2> [ <name5> & <name3> ] = <name2> + <name6> <sep> <name6> [ <name2> + <name6> ] . append ( <name5> & <name3> ) </blk>	try + <name6> < <name1> ( <name5> & <name3> , <val4> ) : <blk> <name2> [ <name5> & <name3> ] = <name2> + <name6> <sep> <name6> [ <name2> + <name6> ] . append ( <name5> & <name3> ) </blk>
<name2> から <name6> の逆順の <name6> の最大値と等しい要素の最初の位置を引いた値を出力する	print ( <name2> - <name6> [ : : - 1 ] . index ( max ( <name6> ) ) )	range ( <name2> - <name6> [ : - 1 ] . index ( max ( <name6> ) ) )
<name5> から <name6> を引いた値から <name4> を引いた値を <name3> とする	<name3> = <name5> - <name6> - <name4>	( <name3> = <name5> - <name6> - <name4> )
<name6> を <name3> に <name5> を掛けた値の整数値だけ増加させる	<name6> += int ( <name3> * <name5> )	<name6> += int ( <name3> * <name5> )
<val6> を <name3> の <name1> にする	<name3> . <name1> = <val6>	( <name3> . <name1> = <val6> )
<name2> 内の <val5> を <val6> で置き換えた文字列を出力する	print ( <name2> . replace ( <val5> , <val6> ) )	print ( <name2> . replace ( <val5> , <val6> ) )
<name5> の先頭を除いた部分列を <name1> の <name5> の先頭番目にする	<name1> [ <name5> [ 0 ] ] = <name5> [ 1 : ]	<name1> [ <name5> [ 0 ] ] = <name5> [ 1 : ]
<name4> を <name5> との論理和にする	<name4> | = <name5>	( <name4> | = <name5> )
<name3> ( <name1> , <name5> )	<name3> ( <name1> , <name5> )	( <name3> ( <name1> , <name5> ) )
<name4> に <val5> を加えた値を <name6> とする	<name6> = <name4> + <val5>	( <name6> = <name4> + <val5> )
<name5> が、つまり未定値と等しくなくまたは <name5> の長さが <val3> と等しくないとき、	if <name5> is None or len ( <name5> ) != <val3> :	for <name5> in <name5> is None or len ( <name5> ) != <val3> :
<name3> の <val4> 乗に <name5> の <val4> 乗を加えた値の <val2> を <val4> で割った値乗を返す	return ( <name3> ** <val4> + <name5> ** <val4> ) ** ( <val2> / <val4> )	yield ( <name3> ** <val4> + <name5> ** <val4> ) ** ( <val2> / <val4> )
<name6> . <name4> ( <name3> , <name2> , <name5> ) を <name5> の <name1> の <name3> 番目にする	<name5> . <name1> [ <name3> ] = <name6> . <name4> ( <name3> , <name2> , <name5> )	<name2> . <name1> [ <name3> ] = <name6> . <name4> ( <name3> , <name2> , <name5> )
<name1> の <name2> 番目の <val4> 番目が <name1> の <name2> から <val4> を引いた値番目の <val4> 番目より小さいとき、	if <name1> [ <name2> ] [ <val4> ] < <name1> [ <name2> - <val4> ] [ <val4> ] :	list ( <name1> [ <name2> ] [ <val4> ] < <name1> [ <name2> - <val4> ] [ <val4> ] ) :
<name1> の <name2> 番目を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name1> [ <name2> ]	<name2> , <name4> , <name3> = <name1> [ <name2> ]
<name3> を展開し、それぞれ <name6> 、 <name4> とする <name5> を展開し、それぞれ <name2> 、 <name1> とする	<name6> , <name4> = <name3> <name2> , <name1> = <name5>	<name6> , <name4> = <name3> <name2> , <name1> = <name5>
<name1> の集合のリストを <name5> とする	<name5> = list ( set ( <name1> ) )	) <name5> = list ( set ( <name1> ) )
<name5> ( <name2> [ <val1> ] ) を出力する	print ( <name5> ( <name2> [ <val1> ] ) )	<name2> ( <val1> ] ) print ( <name5> ( <name2> [ <val1> ] ) )
<name4> の <name1> が <name6> の <name1> より小さいかどうかが <name2> の <name1> より小さいとき、	if <name4> . <name1> < <name6> . <name1> < <name2> . <name1> :	. if <name4> . <name1> < <name6> . <name1> < <name2> . <name1> :
<name2> ( <val4> , <val6> ) を <name3> として <name5> をソートする	<name5> . sort ( <name3> = <name2> ( <val4> , <val6> ) )	<name5> . sort ( <name3> = <name2> ( <val4> , <val6> ) )
<name3> の長さが <name2> より大きいとき、	if len ( <name3> ) > <name2> :	for <name3> in len ( <name3> ) > <name2> :
<val6> を書式として <name2> の <name4> で整形した文字列を <name4> とする	<name4> = <val6> . format ( <name2> . <name4> )	<name4> = <val6> . format ( <name2> . <name4> )
<name6> の <val2> 乗から <name3> を引いた値の絶対値が <val1> に <name3> を掛けた値以上の間、次を繰り返す	while abs ( <name6> ** <val2> - <name3> ) >= <val1> * <name3> :	try ** ( abs ( <name6> ** <val2> - <name3> ) >= <val1> * <name3> ) :
<name2> を <val5> だけ減少させる	<name2> -= <val5>	not <name2> -= <val5>
<name6> の <name4> 番目を展開し、それぞれ <name2> 、 <name1> 、 <name5> とする	<name2> , <name1> , <name5> = <name6> [ <name4> ]	<name6> , <name2> , <name1> , <name5> = <name6> [ <name4> ]
<name6> の <name1> + <name5> - <name2> - <name4> -1 番目から <name6> の <name1> + <name5> - <name4> -1 番目を引いた値から <name6> [ <name1> + <name6> + <val3> ] から <name6> [ <name1> + <name2> + <name6> + <val3> ] を引いた値に <name1> の <name5> - <name2> - <name4> - <name6> -2 番目を掛けた値を引いた値を <name5> で割った余りが <val2> と等しくないとき、	if ( ( <name6> [ <name1> + <name5> - <name2> - <name4> - <val3> ] - <name6> [ <name1> + <name5> - <name4> - <val3> ] ) - ( <name6> [ <name1> + <name6> + <val3> ] - <name6> [ <name1> + <name2> + <name6> + <val3> ] ) * <name1> [ <name5> - <name2> - <name4> - <name6> - 2 ] ) % <name5> != <val2> :	if ( <name6> . <name1> + <name5> - <name2> [ <name4> - <val3> ] - <name6> [ <name1> + <name5> - <name4> - <val2> ] ) - ( <name6> [ <name1> + <name6> + <val3> ] - <name6> [ <name1> + <name2> + <name6> + <val3> ] ) * ( <name1> + <name5> - <name2> [ <name6> + <val3> ] ) % <val2> != <val2> :
<name3> が <name4> より大きいとき、 <blk> <name4> を <name3> とする </blk>	if <name3> > <name4> : <blk> <name3> = <name4> </blk>	\ <name3> = <name3> > <name4> : <blk> <name3> = <name4> </blk>
<name3> の <name5> の両端キューを <name1> とする	<name1> = deque ( <name3> . <name5> )	<name1> = deque ( <name3> . <name5> )
<name5> の整数値に <name2> の整数値を加えた値を出力する	print ( int ( <name5> ) + int ( <name2> ) )	print ( int ( <name5> ) + int ( <name2> ) )
( 、つまり真 ) からなる列の <name1> 回分の列を <name4> とする	<name4> = [ True ] * <name1>	<name4> = [ True ] * <name1>
<name1> 、 <name5> ( <name3> | <name2> , <name6> ) 、 <name5> ( <name3> | <name2> , <name6> | <name2> ) の最大値に <val4> を加えた値の最小値を <name1> とする	<name1> = min ( <name1> , max ( <name5> ( <name3> | <name2> , <name6> ) , <name5> ( <name3> | <name2> , <name6> | <name2> ) ) + <val4> )	<name4> = min ( <name1> , max ( <name5> ( <name3> | <name2> , <name6> ) , <name5> ( <name3> | <name2> , <name6> | <name2> ) + <val4> )
<name6> ( <name3> , <name5> , <name1> )	<name6> ( <name3> , <name5> , <name1> )	set ( <name6> ( <name3> , <name5> , <name1> ) )
<val6> 、 <val6> を <name4> 、 <name2> とする	<name4> , <name2> = <val6> , <val6>	<name6> , <name2> = <val6> , <val6>
入力された文字列を空白で分割した字句列を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = input ( ) . split ( )	<name2> , <name3> = input ( ) . split ( )
<name4> を <name3> の <name1> 番目の <name6> 番目にする	<name3> [ <name1> ] [ <name6> ] = <name4>	( <name3> [ <name1> ] [ <name6> ] = <name4> )
<name6> の末尾に ( <name4> 、 <name2> に <val5> を加えた値 ) の組を追加する	<name6> . append ( ( <name4> , <name2> + <val5> ) )	<name4> . append ( ( <name4> , <name2> + <val5> ) )
<name5> を <val2> で割った商が <name3> に <val4> を加えた値より小さいとき、	if <name5> // <val2> < <name3> + <val4> :	raise ( <name5> // <val2> ) < <name3> + <val4> :
<name1> . <name6> ( <name4> ) のとき、	if <name1> . <name6> ( <name4> ) :	for <name1> . <name6> ( <name4> ) :
<name1> を <name5> に <name3> を掛けた値だけ増加させる	<name1> += <name5> * <name3>	( <name1> += ( <name5> * <name3> ) )
<name4> に <val1> を加えた値、 <name6> の <name3> 、 <name6> の <name5> を出力する	print ( <name4> + <val1> , <name6> . <name3> , <name6> . <name5> )	print ( <name4> + <val1> , <name6> . <name3> , <name6> . <name5> )
<val1> 、 <name3> から <val6> を引いた値を <name5> 、 <name2> とする	<name5> , <name2> = <val1> , <name3> - <val6>	<name2> , <name2> = <val1> , <name3> - <val6>
<name1> に <name4> を <val6> で割った商を加えた値を <name5> の -1 から <name1> に <val6> を掛けた値を引いた値に <val2> を加えた値番目とするを <name3> の -1 から <name1> に <val6> を掛けた値を引いた値番目にする	<name3> [ - <val2> - <name1> * <val6> ] = <name5> [ - <val2> - <name1> * <val6> + <val2> ] = <name1> + <name4> // <val6>	<name4> [ <name3> - <val6> * <name1> - <val6> ] = <name5> [ - <val6> * <name1> + <val6> ] = <name1> + <name4> // <val6>
<name1> ( <name5> , <name3> , <name2> ) を <name6> とする	<name6> = <name1> ( <name5> , <name3> , <name2> )	<name6> = <name1> ( <name5> , <name3> , <name2> )
<name4> に <name4> を加えた値を <name2> とする	<name2> = <name4> + <name4>	<name2> = <name4> + <name4>
<name1> の末尾に ( <name5> の <val3> に <name4> を掛けた値に <val6> を加えた値番目、 <name5> の <val3> に <name4> を掛けた値に <val3> を加えた値番目 ) からなる列を追加する	<name1> . append ( [ <name5> [ <val3> * <name4> + <val6> ] , <name5> [ <val3> * <name4> + <val3> ] ] )	<name1> . append ( [ <name5> [ <val3> * <name4> + <val6> ] , <name5> [ <val3> * <name4> + <val3> ] ] )
<name6> と <val3> を <name4> だけ左シフトした値の論理積でないとき、	if not ( <name6> & ( <val3> << <name4> ) ) :	for <name6> & ( ( <val3> << <name4> ) ) :
<name4> の <name1> の <name3> 番目を <name4> の <name6> の <name3> 番目にする	<name4> . <name6> [ <name3> ] = <name4> . <name1> [ <name3> ]	<name2> . <name6> [ <name3> ] = <name4> . <name1> [ <name3> ]
<name1> の <name5> の先頭、 <name1> の <name5> の <val4> 番目、 <name1> の <name5> の <val6> 番目、 <name1> の <name5> の <val2> 番目を <name1> の <name5> の <val2> 番目、 <name1> の <name5> の先頭、 <name1> の <name5> の <val4> 番目、 <name1> の <name5> の <val6> 番目とする	<name1> . <name5> [ <val2> ] , <name1> . <name5> [ 0 ] , <name1> . <name5> [ <val4> ] , <name1> . <name5> [ <val6> ] = <name1> . <name5> [ 0 ] , <name1> . <name5> [ <val4> ] , <name1> . <name5> [ <val6> ] , <name1> . <name5> [ <val2> ]	. <name1> [ <name5> . <val2> ] , <name1> . <name5> [ 0 ] , <name1> . <name5> [ <val4> ] , <name1> . <name5> [ <val6> ] = <name1> . <name5> [ 0 ] , <name1> . <name5> [ <val4> ] , <name1> . <name5> [ <val6> ] , <name1> . <name5> [ <val2> ]
<name6> 、 <name5> から <name2> を引いた値の最大値を <name6> とする	<name6> = max ( <name6> , <name5> - <name2> )	<name6> = max ( <name6> , <name5> - <name2> )
( 、つまり未定値 ) からなる列の <val5> の <name3> 乗回分の列を <name1> とする	<name1> = [ None ] * ( <val5> ** <name3> )	<name1> = [ None ] * ( <val5> ** <name3> )
<name2> ( <name4> , <name3> , <name1> )	<name2> ( <name4> , <name3> , <name1> )	set ( <name2> ( <name4> , <name3> , <name1> ) )
<name3> の <name4> に <name1> を加えた値番目の <name2> に <name5> を加えた値番目が ( -1 、 -2 ) の組に含まれるとき、	if <name3> [ <name4> + <name1> ] [ <name2> + <name5> ] in ( - 1 , - 2 ) :	isinstance ( <name3> [ <name4> + <name1> ] [ <name2> + <name5> ] in ( - 1 , - 2 ) :
<name4> の <name5> 番目を <val1> との排他的論理和にする	<name4> [ <name5> ] ^ = <val1>	( <name4> [ <name5> ] ^ = <val1> )
<name2> に <val5> を掛けた値を <name4> とする	<name4> = <name2> * <val5>	( <name4> = <name2> * <val5> )
入力された文字列を <val2> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = map ( float , input ( ) . split ( <val2> ) )	<name4> , <name5> = map ( float , input ( ) . split ( <val2> ) )
<name4> の <val3> 番目が <name5> に含まれるとき、	if <name4> [ <val3> ] in <name5> :	for <name4> in <name4> [ <val3> ] in <name5> :
<name4> の <name6> を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name4> . <name6>	<name4> [ <name2> . <name1> ] = <name4> . <name6>
<name2> モジュールを用いる	from <name2> import digits , ascii_uppercase	from <name2> , deque
<name4> に <val5> を加えた値が <name1> から <val2> を引いた値より大きいとき、	if <name4> + <val5> > <name1> - <val2> :	isinstance ( <name4> + <val5> > <name1> - <val2> ) :
<name4> 、 <name6> 、 <name1> 、 <name5> を <name6> の <val1> 番目、 <name6> の <val5> 番目、 <name6> の <val3> 番目、 <name6> の <val2> 番目とする	<name6> [ <val1> ] , <name6> [ <val5> ] , <name6> [ <val3> ] , <name6> [ <val2> ] = <name4> , <name6> , <name1> , <name5>	<name1> [ <val1> ] , <name6> [ <val5> ] , <name6> [ <val3> ] , <name6> [ <val2> ] = <name4> , <name6> , <name1> , <name5>
<name2> を <name3> の <name1> 番目の <name6> に <val5> を加えた値番目にする	<name3> [ <name1> ] [ <name6> + <val5> ] = <name2>	<name2> [ <name1> ] [ <name6> + <val5> ] = <name2>
<name4> 、 <name2> の要素をそれぞれ組にした列の各要素を <name3> 、 <name6> とし、 <name3> のときの <name6> の列を <name5> とする	<name5> = [ <name6> for <name3> , <name6> in zip ( <name4> , <name2> ) if <name3> ]	<name4> = [ <name6> for <name3> , <name6> in zip ( <name4> , <name2> ) if <name3> ]
0 から <val2> 未満までの数列の各要素を <name6> とし、 0 から <val4> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の列の列を <name5> とする	<name5> = [ [ input ( ) . split ( ) for <name6> in range ( <val4> ) ] for <name6> in range ( <val2> ) ]	<name5> = [ [ input ( ) . split ( ) for <name6> in range ( <val4> ) ] for <name6> in range ( <val2> ) ]
<name4> ( ( <name6> ( <name2> , <name3> ) , <name5> ) , ( <name1> ( <name4> , <name6> ) , <name2> ) ) を一旦、返す	yield <name4> ( ( <name6> ( <name2> , <name3> ) , <name5> ) , ( <name1> ( <name4> , <name6> ) , <name2> ) )	global <name4> ( ( <name6> ( <name2> , <name3> ) , <name5> ) , ( <name1> ( <name4> , <name6> ) , <name2> ) )
<name4> ( <name5> . <name1> )	<name4> ( <name5> . <name1> )	<name4> ( <name5> . <name1> )
<name4> を <val5> に <name2> を掛けた値だけ減少させる	<name4> -= <val5> * <name2>	( <name4> -= <val5> * <name2> )
0 から <name6> 未満までの数列の各要素を <name4> とし、 ( <name1> [ <name4> ] - <name3> ) の <val5> 乗の列の総和を <name6> で割った値の <val2> 乗を <name2> とする	<name2> = ( sum ( [ ( <name1> [ <name4> ] - <name3> ) ** <val5> for <name4> in range ( <name6> ) ] ) / <name6> ) ** <val2>	<name5> = ( sum ( [ ( <name1> [ <name4> ] - <name3> ) ** <val5> for <name4> in range ( <name6> ) ] ) / <name6> ) ** <val2>
<val4> を <name6> とする <name2> を <name3> とする	<name6> = <val4> <name3> = <name2>	<name3> = <name6> = <val4> <name3> = <name2>
<name5> を <name3> から <name6> を引いた値の <name1> 乗に <name2> ( <name3> , <name6> ) を掛けた値だけ減少させる	<name5> -= ( <name3> - <name6> ) ** <name1> * <name2> ( <name3> , <name6> )	<name1> -= ( <name3> - <name6> ) ** <name1> * <name2> ( <name3> , <name6> )
<name2> を <name4> で割った値の平方根を出力する	print ( math . sqrt ( <name2> / <name4> ) )	sqrt ( math . sqrt ( <name2> / <name4> ) )
<name1> の <name6> 乗に対する <name4> の剰余を <name5> とする	<name5> = pow ( <name1> , <name6> , <name4> )	<name5> = pow ( <name1> , <name6> , <name4> )
( <val3> 、 <val6> 、 <val1> 、 <val2> ) からなる列を順に <name5> として、繰り返す	for <name5> in [ <val3> , <val6> , <val1> , <val2> ] :	in [ <val3> , <val6> , <val1> , <val2> ] :
<name1> に <name6> を掛けた値に <name2> に <name4> を掛けた値を加えた値に <name5> に <name3> を掛けた値を加えた値を <name1> で割った値を <name3> とする	<name3> = ( <name1> * <name6> + <name2> * <name4> + <name5> * <name3> ) / <name1>	<name3> = ( <name1> * <name6> + <name2> * <name4> + <name5> * <name3> ) / <name1>
<name1> から <name3> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> , <name3> ) :	continue for <name2> in range ( <name1> , <name3> ) :
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name2> , <name3> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name5> を <name6> で割った商、 <name2> から <val3> を引いた値の最小値を返す	return min ( <name5> // <name6> , <name2> - <val3> )	yield min ( <name5> // <name6> , <name2> - <val3> )
<name5> が <name3> の <name6> 番目より小さいとき、	if <name5> < <name3> [ <name6> ] :	or <name5> < <name3> [ <name6> ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組を <name2> とする	<name2> = tuple ( map ( int , input ( ) . split ( ) ) )	<name2> = tuple ( map ( int , input ( ) . split ( ) ) )
<name1> の先頭、 <name1> の <val2> 番目、 <name1> の <val5> 番目を出力する	print ( <name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ] )	print ( <name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ] )
<name5> ( <name2> . <name4> - <name2> . <name6> ) を <name1> とする	<name1> = <name5> ( <name2> . <name4> - <name2> . <name6> )	<name1> = <name5> ( <name2> . <name4> - <name2> . <name6> )
<name4> の先頭を除いた部分列を展開し、それぞれ <name6> 、 <name1> 、 <name3> とする	<name6> , <name1> , <name3> = <name4> [ 1 : ]	<name2> , <name6> , <name1> , <name3> = <name4> [ 1 : ]
<name1> に <val2> を加えた値が <name6> より小さくかつ <name3> の <name1> に <val2> を加えた値番目が <name4> に含まれるとき、	if <name1> + <val2> < <name6> and <name3> [ <name1> + <val2> ] in <name4> :	list ( <name1> + <val2> < <name6> and <name3> [ <name1> + <val2> ] in <name4> ) :
<name5> ( <name4> [ <val3> ] , <name4> [ <val1> ] ) を <name6> の <name4> にする	<name6> . <name4> = <name5> ( <name4> [ <val3> ] , <name4> [ <val1> ] )	<name6> . <name4> = <name5> ( <name4> [ <val3> ] , <name4> [ <val1> ] )
<name5> に <name3> を掛けた値から <name6> に <name1> を掛けた値を引いた値を <name2> に <name6> を掛けた値から <name4> に <name5> を掛けた値を引いた値で割った値を <name4> とする	<name4> = ( <name5> * <name3> - <name6> * <name1> ) / ( <name2> * <name6> - <name4> * <name5> )	<name4> = ( <name5> * <name3> - <name6> * <name1> ) / ( <name2> * <name6> - <name4> * <name5> )
<name6> の要素を右に <name3> の <val1> 番目の整数値個、回転する	<name6> . rotate ( int ( <name3> [ <val1> ] ) )	not <name6> . rotate ( int ( <name3> [ <val1> ] ) )
<name5> の <val4> 番目から <name2> の先頭を引いた値の <val6> 乗に <name5> の <val1> 番目から <name2> の <val1> 番目を引いた値の <val6> 乗を加えた値の平方根を返す	return math . sqrt ( ( <name5> [ <val4> ] - <name2> [ <val4> ] ) ** <val6> + ( <name5> [ <val1> ] - <name2> [ <val1> ] ) ** <val6> )	assert sqrt ( ( <name5> [ <val4> ] - <name2> [ <val4> ] ) ** <val6> + ( <name5> [ <val1> ] - <name2> [ <val1> ] ) ** <val6> )
<val4> が <name1> に <name6> を加えた値以下かどうかが <val5> より小さいとき、	if <val4> <= <name1> + <name6> < <val5> :	list ( <val4> <= <name1> + <name6> ) < <val5> :
( <name1> 、 <name5> ) の組を <name3> の <name4> 番目にする	<name3> [ <name4> ] = ( <name1> , <name5> )	<name3> [ <name4> ] = ( <name1> , <name5> )
<name2> 、 <name4> の最小値を <name5> とする	<name5> = min ( <name2> , <name4> )	<name2> . <name5> = min ( <name2> , <name4> )
<name3> ( <val6> , <val6> , <name2> , <name5> ) のとき、	if <name3> ( <val6> , <val6> , <name2> , <name5> ) :	continue <name3> ( <val6> , <val6> , <name2> , <name5> ) :
- <name3> を <name5> とする	<name5> = - <name3>	<name2> <name5> = - <name3>
<name2> の <name6> の <name1> 番目に <name2> の <name4> の <name1> から <name3> を引いた値番目を掛けた値を <name2> の <name5> で割った余りを返す	return <name2> . <name6> [ <name1> ] * <name2> . <name4> [ <name1> - <name3> ] % <name2> . <name5>	return <name2> . <name6> [ <name1> ] * <name2> . <name4> [ <name1> - <name3> ] % <name2> . <name5>
<name6> . <name5> ( <val2> )	<name6> . <name5> ( <val2> )	<name3> . <name5> ( <val2> )
入力された文字列を <name2> とする <name2> ( ) に <val1> を掛けた値を <name3> とする ( <val5> 、 <val6> ) からなる列の <name2> ( ) が <name3> に含まれるかどうか番目を出力する	<name2> = input <name3> = <name2> ( ) * <val1> print ( [ <val5> , <val6> ] [ <name2> ( ) in <name3> ] )	<name1> = input ( ) <name3> = <name2> ( ) * <val1> print ( [ <val5> , <val6> ] [ <name2> ( ) in <name3> ] )
( 、つまり真 ) からなる列の <name3> 回分の列を <name2> とする	<name2> = [ True ] * <name3>	<name2> = [ True ] * <name3>
<name2> ( <name6> , <name3> , <name1> ) を <name6> とする	<name6> = <name2> ( <name6> , <name3> , <name1> )	<name6> = <name2> ( <name6> , <name3> , <name1> )
<name6> . <name1> ( <name3> , <name5> , <name2> ( <name4> , <name6> ) ) を <name4> とする	<name4> = <name6> . <name1> ( <name3> , <name5> , <name2> ( <name4> , <name6> ) )	<name4> = <name6> . <name1> ( <name3> , <name5> , <name2> ( <name4> , <name6> ) )
( <val4> ) からなる列の <val5> に <name3> を掛けた値回分の列を <name6> とする	<name6> = [ <val4> ] * ( <val5> * <name3> )	<name6> = [ <val4> ] * ( <val5> * <name3> )
<name3> に <name1> の <name4> 番目を加えた値を <name5> とする	<name5> = <name3> + <name1> [ <name4> ]	else = <name3> + <name1> [ <name4> ]
<name3> から <name5> を引いた値を <name6> から <name2> を引いた値で割った商を <name1> とする	<name1> = ( <name3> - <name5> ) // ( <name6> - <name2> )	<name1> = ( <name3> - <name5> ) // ( <name6> - <name2> )
<name2> . <name5> ( ) を <name6> とする	<name6> = <name2> . <name5> ( )	<name4> = <name2> . <name5> ( )
<name2> ( <name4> . <name1> - <name4> . <name5> ) を <name3> とする	<name3> = <name2> ( <name4> . <name1> - <name4> . <name5> )	else = <name2> ( <name4> . <name1> - <name4> . <name5> )
<name4> が <name3> の長さより小さい間、次を繰り返す	while <name4> < len ( <name3> ) :	try while <name4> < len ( <name3> ) :
<name3> が <name4> に含まれないとき、	if <name3> not in <name4> :	'taisho' in <name3> not in <name4> :
<name5> . <name3> ( ) の長さを返す	return len ( <name5> . <name3> ( ) )	assert len ( <name5> . <name3> ( ) )
<name5> の <name4> に <name6> を加えた値番目の末尾に ( <name2> に <name6> を加えた値、 <name1> ) の組を追加する	<name5> [ <name4> + <name6> ] . append ( ( <name2> + <name6> , <name1> ) )	<name1> [ <name4> + <name6> ] . append ( ( <name2> + <name6> , <name1> ) )
<name5> の <name3> の <name6> 番目が <name6> と等しいとき、	if <name5> . <name3> [ <name6> ] == <name6> :	or <name5> . <name3> [ <name6> ] == <name6> :
<name2> の <val4> 番目から <val4> に <name3> を加えた値までの部分列の各要素に <name5> を適用した列に番号付した組の列を <name6> とする	<name6> = enumerate ( map ( <name5> , <name2> [ <val4> : <val4> + <name3> ] ) )	<name6> = enumerate ( map ( <name5> , <name2> [ <val4> : <val4> + <name3> ] ) )
( ( <val4> , <val6> ) 、 ( <val1> , <val3> ) 、 ( <val2> , <val5> ) 、 ( <val4> , <val6> ) 、 ( <val1> , <val3> ) ) からなる辞書を <name5> とする	<name5> = { <val4> : <val6> , <val1> : <val3> , <val2> : <val5> , <val4> : <val6> , <val1> : <val3> }	<name5> = { <val4> : <val6> , <val1> : <val3> , <val2> : <val5> , <val4> : <val6> , <val1> : <val3> }
<name1> を <val2> に <name6> を掛けた値だけ増加させる	<name1> += <val2> * <name6>	( <name1> += <val2> * <name6> )
<name5> の <name3> に <val4> を加えた値番目から <name5> の <name3> 番目を引いた値を <name2> とする	<name2> = <name5> [ <name3> + <val4> ] - <name5> [ <name3> ]	<name2> = <name5> [ <name3> + <val4> ] - <name5> [ <name3> ]
<val2> を <name3> の <name1> の <name6> 番目にする	<name3> . <name1> [ <name6> ] = <val2>	( <name3> . <name1> [ <name6> ] = <val2> )
<name5> の末尾に <name2> に <val1> を加えた値を追加する	<name5> . append ( <name2> + <val1> )	<name3> . append ( <name2> + <val1> )
- <name3> を <name5> で割った値に <name4> から <name6> を <val1> で割った値を引いた値を掛けた値に <name2> に <name3> を加えた値を <val1> で割った値を加えた値を <name2> とする	<name2> = - ( <name3> / <name5> ) * ( <name4> - <name6> / <val1> ) + ( <name2> + <name3> ) / <val1>	( <name2> = - ( <name3> / <name5> ) * ( <name4> - <name6> / <val1> ) + ( <name2> + <name3> ) / <val1> )
( ( <val6> ) からなる列の <val6> から <val1> 未満までの数列の各要素を <name2> とし、 <val1> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val6> ] * [ <val1> for <name2> in range ( <val1> ) ] ]	<name3> = [ [ <val6> ] * [ <val1> for <name2> in range ( <val1> ) ] ]
<name2> に <val3> を加えた値から <name5> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> + <val3> , <name5> ) :	for <name6> in range ( <name2> + <val3> , <name5> ) :
無限の整数列を <name5> ( <name1> , <name2> , <name3> ) だけ増加させる	count += <name5> ( <name1> , <name2> , <name3> )	count += <name5> ( <name1> , <name2> , <name3> )
<name2> の <name5> の <name1> 番目の末尾に <name4> を追加する	<name2> . <name5> [ <name1> ] . append ( <name4> )	<name1> . <name5> [ <name1> ] . append ( <name4> )
<name2> の <name5> から <val3> を引いた値番目の総和から <name2> の <name5> から <val3> を引いた値番目の <val6> 番目を引いた値を <name1> で割った余りを <name2> の <name5> 番目の先頭にする	<name2> [ <name5> ] [ 0 ] = ( sum ( <name2> [ <name5> - <val3> ] ) - <name2> [ <name5> - <val3> ] [ <val6> ] ) % <name1>	<name2> [ <name5> ] [ 0 ] = ( sum ( <name2> [ <name5> - <val3> ] ) - <name2> [ <name5> - <val3> ] [ <val6> ] ) % <name1>
<name3> ( <name1> -1 , <name5> , <name4> )	<name3> ( <name1> - 1 , <name5> , <name4> )	min ( <name3> ( <name1> - 1 , <name5> , <name4> ) )
入力された文字列を <val6> で分割した字句列を <name1> とする	<name1> = input ( ) . split ( <val6> )	<name1> = input ( ) . split ( <val6> )
<name4> が <name3> を <name4> で割った値以下の間、次を繰り返す	while <name4> <= <name3> / <name4> :	del <name4> <= <name3> / <name4> :
<name4> の <val6> 番目が <val1> と等しいとき、	if <name4> [ <val6> ] == <val1> :	if <name4> [ <val6> ] == <val1> :
<val2> 、 <name4> から <val6> を引いた値を <name5> 、 <name3> とする	<name5> , <name3> = <val2> , <name4> - <val6>	<name2> , <name3> = <val2> , <name4> - <val6>
<name2> が <name6> の <name2> より小さいとき、 <blk> <name6> の <name5> を <name6> とする </blk>	if <name2> < <name6> . <name2> : <blk> <name6> = <name6> . <name5> </blk>	\ <name6> = <name2> < <name6> . <name2> : <blk> <name6> = <name6> . <name5> </blk>
<name2> の <name3> 番目に <val6> を加えた値を <name4> とする	<name4> = <name2> [ <name3> ] + <val6>	<name4> = <name2> [ <name3> ] + <val6>
<name3> の <val5> 番目、 <name3> の先頭、 <name3> の <val2> 番目、 <name3> の <val6> 番目、 <name3> の <val4> 番目、 <name3> の <val1> 番目を <name3> の先頭、 <name3> の <val1> 番目、 <name3> の <val2> 番目、 <name3> の <val6> 番目、 <name3> の <val5> 番目、 <name3> の <val4> 番目とする	<name3> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val5> ] , <name3> [ <val4> ] = <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val4> ] , <name3> [ <val1> ]	<name4> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val5> ] , <name3> [ <val4> ] = <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val4> ] , <name3> [ <val1> ]
<val6> を <name2> の <name3> 番目にする	<name2> [ <name3> ] = <val6>	( <name2> [ <name3> ] = <val6> )
<name6> ( <name2> . <name5> ( ) ) を <name1> とする	<name1> = <name6> ( <name2> . <name5> ( ) )	<name1> = <name6> ( <name2> . <name5> ( ) )
<name2> から <val1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> , <val1> ) :	continue for <name6> in range ( <name2> , <val1> ) :
<name1> から <name2> を引いた値から <name1> に <name2> を加えた値に <val5> を加えた値未満までの数列の各要素を <name6> とし、 <name6> の列を <name3> とする	<name3> = [ <name6> for <name6> in range ( <name1> - <name2> , <name1> + <name2> + <val5> ) ]	<name1> = [ <name6> for <name6> in range ( <name1> - <name2> , <name1> + <name2> + <val5> ) ]
<name2> 、 <name3> の <name6> と等しい要素の最初の位置の最小値を <name2> とする	<name2> = min ( <name2> , <name3> . index ( <name6> ) )	<name2> = min ( <name2> , <name3> . index ( <name6> ) )
<name2> の各要素を <name3> とし、 <name3> の文字列の列を <name5> とする	<name5> = [ str ( <name3> ) for <name3> in <name2> ]	<name6> = [ str ( <name3> ) for <name3> in <name2> ]
<val2> から <name5> の <val1> 乗の整数値に <val3> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , int ( <name5> ** <val1> ) + <val3> ) :	. for <name6> in range ( <val2> , int ( <name5> ** <val1> ) + <val3> ) :
<name1> の <name4> の <name2> 番目を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in <name1> . <name4> [ <name2> ] :	for <name5> , <name6> in <name1> . <name4> [ <name2> ] :
<name3> が <val2> と等しくかつ <name5> が <val2> と等しいとき、	if <name3> == <val2> and <name5> == <val2> :	if <name3> == <val2> and <name5> == <val2> :
<val6> を間に入れて <name3> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val6> . join ( map ( str , <name3> ) ) )	<val1> print ( <val6> . join ( map ( str , <name3> ) ) )
( <val5> ) からなる列の <name6> 回分の列を <name2> とする <name6> を <name1> とする	<name2> = [ <val5> ] * <name6> <name1> = <name6>	<name2> = [ <val5> ] * <name6> <name1> = <name6>
<name2> の各要素を <name6> とし、 <name6> の列を <name3> とする	<name3> = [ <name6> for <name6> in <name2> ]	<name6> = [ <name6> for <name6> in <name2> ]
<name5> の <name3> 番目、 <name5> の <name4> 番目に <name2> を加えた値の最小値を <name5> の <name3> 番目にする	<name5> [ <name3> ] = min ( <name5> [ <name3> ] , <name5> [ <name4> ] + <name2> )	) <name5> [ <name3> ] = min ( <name5> [ <name3> ] , <name5> [ <name4> ] + <name2> )
<name1> の、つまり先頭から <name3> 番目までの部分列に <name6> に <val2> を掛けた値を加えた値に <name1> の <name3> に <val2> を加えた値から、つまり末尾までの部分列を加えた値を返す	return <name1> [ : <name3> ] + <name6> * <val2> + <name1> [ <name3> + <val2> : ]	return <name1> [ : <name3> ] + <name6> * <val2> + <name1> [ <name3> + <val2> : ]
<val1> を <name3> の <name4> の先頭番目の <name4> の <val1> 番目番目にする	<name3> [ <name4> [ 0 ] ] [ <name4> [ <val1> ] ] = <val1>	<name4> [ <name4> [ 0 ] ] [ <name4> [ <val1> ] ] = <val1>
<name4> の x 座標から <name5> の x 座標を引いた値の絶対値が <name3> の <name2> より小さくかつ <name4> の y 座標から <name5> の y 座標を引いた値の絶対値が <name3> の <name2> より小さいとき、	if fabs ( <name4> . x - <name5> . x ) < <name3> . <name2> and fabs ( <name4> . y - <name5> . y ) < <name3> . <name2> :	for <name3> in fabs ( <name4> . x - <name5> . x ) < <name3> . <name2> and fabs ( <name4> . y - <name5> . <name2> ) < <name3> . <name2> :
<name6> の <name5> の <name2> 番目の末尾に <name3> を追加する	<name6> . <name5> [ <name2> ] . append ( <name3> )	<name1> . <name5> [ <name2> ] . append ( <name3> )
<name6> を <name3> の <name1> の <name5> 番目にする	<name3> . <name1> [ <name5> ] = <name6>	<name3> . <name1> [ <name5> ] = <name6>
( <val4> ) からなる列の <name2> 回分の列を <name6> の <name3> にする	<name6> . <name3> = [ <val4> ] * <name2>	<name6> . <name3> = [ <val4> ] * <name2>
<val5> を <name4> の <name6> にする	<name4> . <name6> = <val5>	( <name4> . <name6> = <val5> )
0 から <name6> 未満までの数列の各要素を <name4> とし、 <name4> の列を <name1> とする	<name1> = [ <name4> for <name4> in range ( <name6> ) ]	<name4> = [ <name4> for <name4> in range ( <name6> ) ]
<name6> を <name3> の <name4> 番目の <name2> 番目に <name1> を掛けた値だけ増加させる	<name6> += <name3> [ <name4> ] [ <name2> ] * <name1>	<name6> += <name3> [ <name4> ] [ <name2> ] * <name1>
( <val2> ) からなる列の <name4> に <val2> を加えた値回分の列を <name1> とする	<name1> = [ <val2> ] * ( <name4> + <val2> )	<name1> = [ <val2> ] * ( <name4> + <val2> )
<name3> を <val5> で割った商を <name1> とする	<name1> = <name3> // <val5>	<name1> = <name3> // <val5>
<name4> から <name1> を引いた値から <val5> を引いた値に <name6> の <name3> 番目を掛けた値を <name2> とする	<name2> = ( <name4> - <name1> - <val5> ) * <name6> [ <name3> ]	<name3> = ( <name4> - <name1> - <val5> ) * <name6> [ <name3> ]
\ <name5> が <val6> と等しいとき、\	\ if <name5> == <val6> : \	if <name5> == <val6> : \
( <name5> 、 <name4> ) からなる列を <name1> とする	<name1> = [ <name5> , <name4> ]	<name1> = [ <name5> , <name4> ]
<name4> の <name2> 番目が <name4> の <name6> 番目より小さいとき、	if <name4> [ <name2> ] < <name4> [ <name6> ] :	raise <name4> [ <name2> ] < <name4> [ <name6> ] :
<name1> ( <name5> [ <name4> ] , <name3> [ <name6> ] ) を <name2> とする	<name2> = <name1> ( <name5> [ <name4> ] , <name3> [ <name6> ] )	<name2> = <name1> ( <name5> [ <name4> ] , <name3> [ <name6> ] )
<name1> の <name6> 番目かつ <name3> の <name6> 番目でないとき、	if <name1> [ <name6> ] and not <name3> [ <name6> ] :	raise <name1> [ <name6> ] and not <name3> [ <name6> ] :
( <name6> の <name1> 番目、 os . <name3> の逆順 ) の組を返す	return ( <name6> [ <name1> ] , <name3> [ : : - 1 ] )	yield ( <name6> [ <name1> ] , <name3> [ : : - 1 ] )
<val1> の <val5> 乗から <val2> を引いた値から <name3> を引いた値を <name6> とする	<name6> = <val1> ** <val5> - <val2> - <name3>	<name6> = <val1> ** <val5> - <val2> - <name3>
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name6> in range ( <name1> ) ]	<name4> = [ [ ] for <name6> in range ( <name1> ) ]
<name1> の <name4> 番目が -1 と等しくないとき <name1> の <name1> の <name4> 番目番目、そうでなければ -1 を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name1> [ <name1> [ <name4> ] ] if <name1> [ <name4> ] != - 1 else - 1	<name4> [ <name4> ] = <name1> [ <name4> ] ] if <name1> [ <name4> ] != - 1 else - 1
. が <name2> に含まれないとき、	if '.' not in <name2> :	. if not in <name2> :
0 から <name6> を <val4> で割った商未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> // <val4> ) :	) for <name3> in range ( <name6> // <val4> ) :
<name2> 内の <val4> を <name5> の文字列で置き換えた文字列を <name3> とする	<name3> = <name2> . replace ( <val4> , str ( <name5> ) )	<name3> = <name2> . replace ( <val4> , str ( <name5> ) )
 を間に入れて <name4> の各要素を <name3> とし、 <name3> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name3> ) for <name3> in <name4> ] ) )	print ( ' ' . join ( [ str ( <name3> ) for <name3> in <name4> ] ) )
<name4> の <name2> 番目かつ <name3> の <name2> 番目でないとき、	if <name4> [ <name2> ] and not <name3> [ <name2> ] :	or <name4> [ <name2> ] and not <name3> [ <name2> ] :
<name2> と <name6> の最大公約数を返す	return gcd ( <name2> , <name6> )	yield gcd ( <name2> , <name6> )
<name6> ( <name1> , <name4> ) を <name3> とする	<name3> = <name6> ( <name1> , <name4> )	<name3> = <name6> ( <name1> , <name4> )
<val5> に <name1> の <name1> の最大値と等しい要素の最初の位置を加えた値を出力する	print ( <val5> + <name1> . index ( max ( <name1> ) ) )	print ( <val5> + <name1> . index ( max ( <name1> ) ) )
<name4> の末尾に空列を追加する	<name4> . append ( [ ] )	<name3> . append ( [ ] )
<name2> の <name6> 番目の各要素を <name5> とし、 <name4> の <name5> 番目の列を <name4> の、つまり先頭から、つまり末尾までの部分列にする	<name4> [ : ] = ( [ <name4> [ <name5> ] for <name5> in <name2> [ <name6> ] ] )	<name4> [ : ] = [ <name4> [ <name5> ] for <name5> in <name2> [ <name6> ] ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name4> 、 <name5> 、 <name6> とする	<name4> , <name5> , <name6> = list ( map ( int , input ( ) . split ( ) ) )	<name5> , <name6> = list ( map ( int , input ( ) . split ( ) ) )
<val6> の <val6> 乗を <name5> とする	<name5> = <val6> ** <val6>	<name5> = <val6> ** <val6>
<name1> . <name5> ( <name2> ) を返す	return <name1> . <name5> ( <name2> )	yield <name1> . <name5> ( <name2> )
<name4> に <val2> を加えた値が <name3> より小さいとき、	if <name4> + <val2> < <name3> :	continue <name4> + <val2> < <name3> :
<name1> <name3> - <name4>	<name1> <name3> - <name4>	( <name1> <name3> - <name4> )
<name3> . <name4> ( <val5> )	<name3> . <name4> ( <val5> )	( <name3> . <name4> ( <val5> ) )
<name3> が <name5> から <val4> を引いた値と等しいとき、	if <name3> == <name5> - <val4> :	if <name3> == <name5> - <val4> :
<name2> の <name5> 番目を <name4> で割った余りが <name2> の <name5> に <val3> を加えた値番目を <name4> で割った余りより大きいとき、	if <name2> [ <name5> ] % <name4> > <name2> [ <name5> + <val3> ] % <name4> :	if <name2> [ <name5> ] % <name4> > <name2> [ <name5> + <val3> ] % <name4> :
( <val1> 、 <val4> ) の組を <name6> とする	<name6> = ( <val1> , <val4> )	( <val1> , <val4> ) = ( <val1> , <val4> )
<name5> の <name6> の <name3> 番目の末尾に <name4> を追加する	<name5> . <name6> [ <name3> ] . append ( <name4> )	<name4> . <name6> [ <name3> ] . append ( <name4> )
<val5> に <name1> を掛けた値に <name6> を <val5> で割った余りを加えた値を <name1> とする	<name1> = <val5> * <name1> + ( <name6> % <val5> )	( <name1> = <val5> * <name1> ) + ( <name6> % <val5> )
<name4> の <val5> 番目を <val5> だけ減少させる	<name4> [ <val5> ] -= <val5>	<name1> [ <val5> ] -= <val5>
<name4> の <name6> 番目を <name5> の <name6> 番目の <name3> 番目に <name2> の <name3> 番目を掛けた値だけ増加させる	<name4> [ <name6> ] += <name5> [ <name6> ] [ <name3> ] * <name2> [ <name3> ]	<name2> [ <name6> ] += <name5> [ <name6> ] [ <name3> ] * <name2> [ <name3> ]
0 から <val3> から <name6> を引いた値に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> - <name6> + <val5> ) :	in range ( <val3> - <name6> + <val5> ) :
( <val1> ) からなる列の <val6> 回分の列、 ( <val1> ) からなる列の <val6> 回分の列を <name2> 、 <name3> とする	<name2> , <name3> = [ <val1> ] * <val6> , [ <val1> ] * <val6>	<name2> , <name3> = [ <val1> ] * <val6> , [ <val1> ] * <val6>
<name6> ( <name5> , <name3> , <name2> , <name4> ) を <name1> とする	<name1> = <name6> ( <name5> , <name3> , <name2> , <name4> )	<name1> = <name6> ( <name5> , <name3> , <name2> , <name4> )
<val2> を <name5> の <name1> の先頭の <val6> 番目にする	<name5> . <name1> [ <val6> ] [ <val6> ] = <val2>	( <name5> . <name1> [ <val6> ] [ <val6> ] ) = <val2>
<name1> を <name6> の <name2> 番目の <name5> 番目にする	<name6> [ <name2> ] [ <name5> ] = <name1>	( <name6> [ <name2> ] [ <name5> ] = <name1> )
<val2> から <name5> の <val6> を <val3> で割った値乗の整数値に <val6> を加えた値未満までの <val3> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , int ( <name5> ** ( <val6> / <val3> ) ) + <val6> , <val3> ) :	. for <name4> in range ( <val2> , int ( <name5> ** ( <val6> / <val3> ) ) + <val6> , <val3> ) :
<name6> に <name3> を掛けた値から <name6> に <name3> を掛けた値に <name3> を加えた値、 <name1> の最小値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> * <name3> , min ( <name6> * <name3> + <name3> , <name1> ) ) :	for <name2> in range ( <name6> * <name3> , min ( <name6> * <name3> + <name3> , <name1> ) ) :
<name6> のキーの集まりのリストの先頭を <name4> とする	<name4> = list ( <name6> . keys ( ) ) [ 0 ]	<name4> = list ( <name6> . keys ( ) ) [ 0 ]
<name5> の <name3> 番目が -1 と等しくないとき <name5> の <name5> の <name3> 番目番目、そうでなければ -1 を <name1> の <name3> 番目にする	<name1> [ <name3> ] = <name5> [ <name5> [ <name3> ] ] if <name5> [ <name3> ] != - 1 else - 1	<name2> [ <name1> [ <name3> ] = <name5> [ <name5> [ <name3> ] ] if <name5> [ <name3> ] != - 1 else - 1
<name4> の <name5> に <name3> を加えた値番目の <name1> に <name2> を加えた値番目が <val6> と等しいとき、	if <name4> [ <name5> + <name3> ] [ <name1> + <name2> ] == <val6> :	for <name4> [ <name5> + <name3> ] [ <name1> + <name2> ] == <val6> :
<name2> を <val5> で割った余りが <val3> と等しいとき、	if <name2> % <val5> == <val3> :	while <name2> % <val5> == <val3> :
<name5> から <name2> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <name4> ( <name3> ) のときの <name3> の列を <name6> とする	<name6> = [ <name3> for <name3> in range ( <name5> , <name2> + <val1> ) if <name4> ( <name3> ) ]	<name2> = [ <name3> for <name3> in range ( <name5> , <name2> + <val1> ) if <name4> ( <name3> ) ]
<name5> の <name3> 番目を <val4> だけ減少させる	<name5> [ <name3> ] -= <val4>	<name4> [ <name3> ] -= <val4>
<name2> の <name3> 番目の <name1> 番目を <name2> の <name3> 番目の <name6> 番目だけ増加させる	<name2> [ <name3> ] [ <name1> ] += <name2> [ <name3> ] [ <name6> ]	<name6> [ <name3> ] [ <name1> ] += <name2> [ <name3> ] [ <name6> ]
<name2> の先頭を取り出した値を <name5> とする	<name5> = <name2> . pop ( )	<name3> = <name2> . pop ( )
<name6> を <name5> の <name2> だけ増加させる	<name6> += <name5> . <name2>	<name5> . <name2> += <name5> . <name2>
<name4> が <name3> の <name2> の <name5> 番目より大きくかつ <name3> . <name6> の <name5> 番目の <name1> 番目の <val4> 番目が <name3> 以上のとき、	if <name4> > <name3> . <name2> [ <name5> ] and <name3> . <name6> [ <name5> ] [ <name1> ] [ <val4> ] >= <name3> :	isinstance ( <name4> > <name3> . <name2> [ <name5> ] and <name3> . <name6> [ <name5> ] [ <name1> ] [ <val4> ] >= <name3> :
<name3> を <val2> だけ右シフトした値を <name1> の <val4> に <name5> を掛けた値番目を <name1> の <val4> * <name5> から <val2> を引いた値番目を <name6> の <val4> に <name5> を掛けた値番目とするとするとするを <name6> の <val4> に <name5> を掛けた値から <val2> を引いた値番目にする	<name6> [ <val4> * <name5> - <val2> ] = <name6> [ <val4> * <name5> ] = <name1> [ <val4> * <name5> - <val2> ] = <name1> [ <val4> * <name5> ] = <name3> >> <val2>	else = <name6> [ <val4> * <name5> - <val2> ] = <name1> [ <val4> * <name5> - <val2> ] = <name1> [ <val4> * <name5> - <val2> ] = <name3> >> <val2>
<name3> の <name6> を <name3> の <name1> の <name5> 番目にする	<name3> . <name1> [ <name5> ] = <name3> . <name6>	<name2> . <name1> [ <name5> ] = <name3> . <name6>
<val2> を <name4> の先頭の <name6> 番目にする	<name4> [ <val2> ] [ <name6> ] = <val2>	<name6> [ <name4> [ 0 ] [ <name6> ] = <val2>
<name4> を <val2> で割った余りが <val1> と等しいとき、	if <name4> % <val2> == <val1> :	list ( <name4> % <val2> == <val1> :
( <name4> から <val2> を引いた値、 <name4> 、 <name4> に <val2> を加えた値 ) の組を順に <name6> として、繰り返す	for <name6> in ( <name4> - <val2> , <name4> , <name4> + <val2> ) :	. for <name6> in ( <name4> - <val2> , <name4> , <name4> + <val2> ) :
<name1> の <name6> 番目を <name4> の <name6> 番目の <val2> 番目にする	<name4> [ <name6> ] [ <val2> ] = <name1> [ <name6> ]	<name4> [ <name6> ] [ <val2> ] = <name1> [ <name6> ]
<name2> の各要素を <name6> とし、 <name6> と <name6> と <name3> の論理積の排他論理和の列の集合のリストを <name2> とする	<name2> = list ( set ( [ <name6> ^ ( <name6> & <name3> ) for <name6> in <name2> ] ) )	<name2> = list ( set ( [ <name6> ^ ( <name3> ) for <name6> in <name2> ] ) )
<val4> に <name3> を加えた値に <name1> を加えた値を <name2> とするを <name6> の <name2> にする	<name6> . <name2> = <name2> = <val4> + <name3> + <name1>	<name2> . = <name2> = <val4> + <name3> + <name1>
( ( <name6> 、 <name2> 、 <name4> 、 <name1> 、 <val5> ) の組 ) からなる列の両端キューを <name3> とする	<name3> = deque ( [ ( <name6> , <name2> , <name4> , <name1> , <val5> ) ] )	<name3> = deque ( [ ( <name6> , <name2> , <name4> , <name1> , <val5> ) ] )
0 から <val2> に <val3> に <name5> を掛けた値を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> + <val3> * <name5> ) :	) for <name6> in range ( <val2> + <val3> * <name5> ) :
<name3> を <val6> で割った余りが <val4> と等しいとき、	if <name3> % <val6> == <val4> :	for <name3> in <name3> % <val6> == <val4> :
<name5> ( <name2> [ <name6> ] [ <val1> ] )	<name5> ( <name2> [ <name6> ] [ <val1> ] )	map <name5> ( <name2> [ <name6> ] [ <val1> ] )
<name4> の絶対値が <name1> より小さいとき、	if fabs ( <name4> ) < <name1> :	if fabs ( <name4> ) < <name1> :
<name1> の <name5> 番目に <name3> を加えた値を <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name1> [ <name5> ] + <name3>	<name1> [ <name2> ] = <name1> [ <name5> ] + <name3>
<name2> を <name5> の <val4> 番目倍にする	<name2> *= <name5> [ <val4> ]	( <name2> *= <name5> [ <val4> ] )
<name5> の <name6> 番目を <val2> との排他的論理和にする	<name5> [ <name6> ] ^ = <val2>	not = <name5> [ <name6> ] ^ = <val2>
<name4> と <name2> の排他論理和が <name1> に含まれないとき、 <blk> <val5> を <name1> の <name4> と <name2> の排他論理和番目にする </blk>	if <name4> ^ <name2> not in <name1> : <blk> <name1> [ <name4> ^ <name2> ] = <val5> </blk>	\ <name4> ^ = <name2> not in <name1> : <blk> <name1> [ <name4> ^ <name2> ] = <val5> </blk>
<name6> の <name3> に <name1> を挿入する	<name6> . insert ( <name3> , <name1> )	<name1> . insert ( <name3> , <name1> )
<name5> を <name6> の <name1> 、 <name3> の総和に <name3> に <name6> の <name4> 、 <name3> の総和を掛けた値を加えた値だけ減少させる	<name5> -= <name6> . <name1> . sum ( <name3> ) + <name3> * <name6> . <name4> . sum ( <name3> )	<name1> -= <name6> . <name1> . sum ( <name3> ) + <name3> * <name6> . <name4> . sum ( <name3> )
<name2> の <name3> 番目でない間、次を繰り返す	while not <name2> [ <name3> ] :	while not <name2> [ <name3> ] :
<name6> の <name5> を <name6> の <name1> の <name2> 番目だけ減少させる	<name6> . <name5> -= <name6> . <name1> [ <name2> ]	<name1> . <name5> -= <name6> . <name1> [ <name2> ]
0 から、つまり無限の整数列未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( count ) :	: for <name1> in range ( count ) :
<name3> の <name6> を取り出した値	<name3> . pop ( <name6> )	<name3> . pop ( <name6> )
- <name2> の末尾を出力する	print ( - ( <name2> [ - 1 ] ) )	<name2> . append ( - <name2> [ - 1 ] )
<name1> の末尾に ( <name4> 、 <name5> 、 <name2> ) の組を追加する	<name1> . append ( ( <name4> , <name5> , <name2> ) )	<name1> . append ( ( <name4> , <name5> , <name2> ) )
<name5> の <name3> 番目の <name1> 番目の整数値が <name2> に含まれないとき、 <blk> 空列を <name2> の <name5> の <name3> 番目の <name1> 番目の整数値番目にする </blk>	if int ( <name5> [ <name3> ] [ <name1> ] ) not in <name2> : <blk> <name2> [ int ( <name5> [ <name3> ] [ <name1> ] ) ] = [ ] </blk>	[ int ( <name2> [ <name5> [ <name3> ] [ <name1> ] ) ] = [ ] for <name2> in int ( <name5> [ <name3> ] [ <name1> ] ) not in <name2> : <blk> <name2> </blk>
<name6> ( <name3> , <name2> , ( <name4> , <name5> , <name1> ) ) を <name1> とする	<name1> = <name6> ( <name3> , <name2> , ( <name4> , <name5> , <name1> ) )	<name1> = <name6> ( <name3> , <name2> , ( <name4> , <name5> , <name1> ) )
0 から <name3> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列のリストを <name1> とする	<name1> = list ( [ int ( input ( ) ) for <name5> in range ( <name3> ) ] )	<name1> = list ( [ int ( input ( ) ) for <name5> in range ( <name3> ) ] )
<val2> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val2> . join ( map ( str , <name5> ) ) )	print ( <val2> . join ( map ( str , <name5> ) ) )
<name3> から <name4> を引いた値を <name5> とする	<name5> = <name3> - <name4>	<name2> <name5> = <name3> - <name4>
<name5> ( <val6> , <name4> -1 , <name1> ) を出力する	print ( <name5> ( <val6> , <name4> - 1 , <name1> ) )	print ( <name5> ( <val6> , <name4> - 1 , <name1> ) )
<name6> の <val3> に <name2> を掛けた値に <val1> を加えた値番目を <name4> だけ増加させる <name6> の <val3> に <name2> を掛けた値に <val3> を加えた値番目を <name4> だけ増加させる	<name6> [ <val3> * <name2> + <val1> ] += <name4> <name6> [ <val3> * <name2> + <val3> ] += <name4>	<name4> += <name6> [ <val3> * <name2> + <val1> ] += <name4> <name6> [ <val3> * <name2> + <val3> ] += <name4>
<name1> . <name2> ( <name4> . <name5> )	<name1> . <name2> ( <name4> . <name5> )	<name1> . <name2> ( <name4> . <name5> )
( <name2> から <name1> を引いた値、 <name6> から <name5> を引いた値 ) の組を <name3> とする	<name3> = ( <name2> - <name1> , <name6> - <name5> )	<name3> = ( <name2> - <name1> , <name6> - <name5> )
( <val2> ) からなる列の <name5> に <val6> を加えた値回分の列を <name1> とする	<name1> = [ <val2> ] * ( <name5> + <val6> )	<name1> = [ <val2> ] * ( <name5> + <val6> )
<name1> の <name3> から <name6> の <name2> 番目を引いた値番目を <val5> だけ減少させる	<name1> [ <name3> - <name6> [ <name2> ] ] -= <val5>	<name2> [ <name1> [ <name3> - <name6> [ <name2> ] ] -= <val5>
<name1> の各要素に <name5> を適用した列のリストを <name1> とする	<name1> = list ( map ( <name5> , <name1> ) )	<name1> = list ( map ( <name5> , <name1> ) )
( <name6> ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ <name6> ] * <name2>	<name1> = [ <name6> ] * <name2>
<name3> のキーと値の集まりの各要素を <name5> 、 <name6> とし、 <name6> の <val1> 番目に <name6> の <val4> 番目を掛けた値の列の総和を出力する	print ( sum ( [ <name6> [ <val1> ] * <name6> [ <val4> ] for <name5> , <name6> in <name3> . items ( ) ] ) )	[ print ( sum ( [ <name6> [ <val1> ] * <name6> [ <val4> ] for <name5> , <name6> in <name3> . items ( ) ] ) )
<val2> を <name1> を <name3> とするとするを <name6> とする	<name6> = <name3> = <name1> = <val2>	else = <name3> = <name1> = <val2>
<name2> ( <name6> ) を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name2> ( <name6> )	<name2> , <name3> = <name2> ( <name6> )
<name5> の <name4> 、 <name5> の <name3> 、 <name5> の <name6> 、 <name5> の <name1> を <name5> の <name6> 、 <name5> の <name1> 、 <name5> の <name3> 、 <name5> の <name4> とする	<name5> . <name6> , <name5> . <name1> , <name5> . <name3> , <name5> . <name4> = <name5> . <name4> , <name5> . <name3> , <name5> . <name6> , <name5> . <name1>	<name2> . <name5> , <name1> . <name5> , <name3> , <name5> . <name4> = <name5> . <name4> , <name5> . <name3> , <name5> . <name6> , <name5> . <name1>
<name6> の <name4> の <name3> 番目番目が <val1> より大きいとき、	if <name6> [ <name4> [ <name3> ] ] > <val1> :	for <name6> [ <name4> [ <name3> ] ] > <val1> :
<name2> ( <name3> ( <name5> [ <val6> : ] ) ) のとき、	if <name2> ( <name3> ( <name5> [ <val6> : ] ) ) :	list ( <name2> ( <name3> ( <name5> [ <val6> : ] ) ) :
0 から <name1> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name1> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name1> ) ]
<name4> の <name1> 番目の <name6> 番目が <val2> と等しいとき、	if <name4> [ <name1> ] [ <name6> ] == <val2> :	continue if <name4> [ <name1> ] [ <name6> ] == <val2> :
<name5> の、つまり先頭から <name6> 番目までの部分列の総和を出力する	print ( sum ( <name5> [ : <name6> ] ) )	( sum ( <name5> [ : <name6> ] ) )
0 から <name3> 未満までの数列の各要素を <name6> とし、 <name4> ( ) の列を <name2> とする	<name2> = [ <name4> ( ) for <name6> in range ( <name3> ) ]	<name2> = [ <name4> ( ) for <name6> in range ( <name3> ) ]
<name2> の長さが <name6> 以下のとき、	if len ( <name2> ) <= <name6> :	for <name2> in len ( <name2> ) <= <name6> :
<val2> を <name4> の <name1> にする	<name4> . <name1> = <val2>	( <name4> . <name1> = <val2> )
<name6> が <name4> と等しくまたは <name4> が <val3> と等しいとき、	if <name6> == <name4> or <name4> == <val3> :	or <name6> == <name4> or <name4> == <val3> :
<name3> ( <name4> , <name6> ) を <name2> の <name5> にする	<name2> . <name5> = <name3> ( <name4> , <name6> )	<name1> . <name2> . <name5> = <name3> ( <name4> , <name6> )
<name3> ( <name1> ) のとき、	if <name3> ( <name1> ) :	list <name3> ( <name1> ) :
<name4> ( <name5> ) を <name3> とする	<name3> = <name4> ( <name5> )	<name3> = <name4> ( <name5> )
<name5> を <name4> 倍にする	<name5> *= <name4>	not <name5> *= <name4>
0 から <name5> から <val4> を引いた値未満までの数列を順に無限の整数列として、繰り返す	for count in range ( <name5> - <val4> ) :	) for count in range ( <name5> - <val4> ) :
<name5> の <name1> 番目の <name3> 番目を出力する	print ( <name5> [ <name1> ] [ <name3> ] )	print ( <name5> [ <name1> ] [ <name3> ] )
( -1 ) からなる列の <name1> の <name5> 回分の列を <name3> とする	<name3> = [ - 1 ] * <name1> . <name5>	<name3> = [ - 1 ] * <name1> . <name5>
<name4> を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name4>	( <name6> [ <name4> ] = <name4> )
<name1> の <name3> 番目を ( <name4> ) の集合との論理和にする	<name1> [ <name3> ] | = { <name4> }	( <name1> [ <name3> ] | = { <name4> } )
<name1> の先頭から <name6> を探して見つかった位置を <name4> とする	<name4> = <name1> . find ( <name6> )	<name4> = <name1> . find ( <name6> )
<name1> の <name5> 番目を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name1> [ <name5> ]	<name2> , <name6> , <name3> = <name1> [ <name5> ]
入力された文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name4> 、 <name3> とする	<name5> , <name4> , <name3> = input ( ) . split ( )	<name4> , <name3> = input ( ) . split ( )
<name5> を <name4> とする <name2> を <name1> とする	<name4> = <name5> <name1> = <name2>	<name4> = <name5> <name1> = <name2>
<name6> ( <name1> - <name4> , <name5> - <name3> , <name2> ) を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name6> ( <name1> - <name4> , <name5> - <name3> , <name2> )	<name6> , <name3> , <name2> = <name6> ( <name1> - <name4> , <name5> - <name3> , <name2> )
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を <name5> とする	<name5> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	<name5> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
G を <name1> とする	<name1> = 'G'	<name1> = %.16f' ' '
<name5> の <name1> 番目を <name5> の <name1> に <name6> を加えた値番目にする	<name5> [ <name1> + <name6> ] = <name5> [ <name1> ]	else [ <name1> + <name6> ] = <name5> [ <name1> ]
<name5> を <val6> 分の一にする	<name5> // = <val6>	( <name5> // = <val6> )
<name1> を <name5> の <name6> 番目の <name2> 番目にする	<name5> [ <name6> ] [ <name2> ] = <name1>	( <name5> [ <name6> ] [ <name2> ] = <name1> )
<name5> を <name1> の末尾の <name4> だけ増加させる	<name5> += <name1> [ - 1 ] . <name4>	<name2> += <name1> [ - 1 ] . <name4>
<name2> を <name6> から <name2> を引いた値を <name4> で割った商に <name4> を掛けた値だけ増加させる	<name2> += ( <name6> - <name2> ) // <name4> * <name4>	<name2> += ( <name6> - <name2> ) // <name4> * <name4>
<val2> から <val1> 未満までの数列の各要素を <name3> とし、 <val2> の列を <name6> とする	<name6> = [ <val2> for <name3> in range ( <val1> ) ]	<name2> = [ <val2> for <name3> in range ( <val1> ) ]
<name3> が <val4> と等しいとき、 <blk> <name5> を <val6> だけ増加させる </blk>	if <name3> == <val4> : <blk> <name5> += <val6> </blk>	: if <name3> == <val4> : <blk> <name5> += <val6> </blk>
<name2> ( <name1> , <name3> ( <name4> [ <val6> ] ) ) が、つまり未定値と等しいとき、 <blk> <val5> を出力する </blk>	if <name2> ( <name1> , <name3> ( <name4> [ <val6> ] ) ) is not None : <blk> print ( <val5> ) </blk>	<blk> if <name2> ( <name1> , <name3> ( <name4> [ <val6> ] ) ) == None : <blk> print ( <val5> ) </blk>
<name6> 、 <name4> の <name3> 番目の要素をそれぞれ組にした列を順に <name3> 、 <name5> 、 <name1> 、 <name2> として、繰り返す	for <name3> , <name5> , <name1> , <name2> in zip ( <name6> , <name4> [ <name3> ] ) :	. for <name3> , <name5> , <name1> , <name2> in zip ( <name6> , <name4> [ <name3> ] ) :
<name2> が ( <val6> 、 <val4> 、 <val3> 、 <val1> ) からなる列と等しくない間、次を繰り返す	while <name2> != [ <val6> , <val4> , <val3> , <val1> ] :	while ( <name2> != [ <val6> , <val4> , <val3> , <val1> ] ) :
<name2> のキーと値の集まりを順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in <name2> . items ( ) :	( <name6> , <name1> in <name2> . items ( ) :
<val2> 進表記 <name3> の <val4> 番目に <name3> の <val6> 番目を加えた値の整数値を <name5> とする	<name5> = int ( <name3> [ <val4> ] + <name3> [ <val6> ] , <val2> )	else = int ( <name3> [ <val4> ] + <name3> [ <val6> ] , <val2> )
辞書に対応する値、もし存在しなければ <name1> の先頭、 <val2> を出力する	print ( dict . get ( <name1> [ <val2> ] , <val2> ) )	& print ( dict . get ( <name1> [ 0 ] , <val2> ) )
<name3> が <name1> より小さくかつ <name5> が <val4> より大きい間、次を繰り返す	while <name3> < <name1> and <name5> > <val4> :	del <name3> < <name1> and <name5> > <val4> :
<name4> ( <name5> . <name1> [ <val3> : ] )	<name4> ( <name5> . <name1> [ <val3> : ] )	<name4> ( <name5> . <name1> [ <val3> : ] )
<name5> の <name4> 番目の <name2> が -1 と等しくない間、次を繰り返す	while <name5> [ <name4> ] . <name2> != - 1 :	del <name5> [ <name4> ] . <name2> != - 1 :
<name1> を <val2> で割った余りの文字列を返す	return str ( <name1> % <val2> )	return str ( <name1> % <val2> )
<name1> の末尾に <name2> から <name6> を引いた値を追加する	<name1> . append ( <name2> - <name6> )	<name1> . append ( <name2> - <name6> )
<val6> から <val1> に <name4> を掛けた値未満までの <val1> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <val1> * <name4> , <val1> ) :	for <name5> in range ( <val6> , <val1> * <name4> , <val1> ) :
<name4> から <name5> を引いた値に <name6> を加えた値を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name4> - <name5> + <name6>	<name2> [ <name1> ] = <name4> - <name5> + <name6>
<name5> 、 <name1> の <name2> 番目の <name4> 番目の最大値を <name5> とする	<name5> = max ( <name5> , <name1> [ <name2> ] [ <name4> ] )	else = max ( <name5> , <name1> [ <name2> ] [ <name4> ] )
<name5> を <name2> で割った値の切り上げ整数値に <name3> を掛けた値、 <name5> を <name1> で割った値の切り上げ整数値に <name6> を掛けた値の最小値を出力する	print ( min ( math . ceil ( <name5> / <name2> ) * <name3> , math . ceil ( <name5> / <name1> ) * <name6> ) )	range ( min ( math . ceil ( <name5> / <name2> ) * <name3> , math . ceil ( <name5> / <name1> ) * <name6> ) )
<name4> を <name2> で割った値を <name4> とする	<name4> = <name4> / <name2>	( <name4> = <name4> / <name2> )
<name1> ( <name2> , <name4> ) を <name2> とする	<name2> = <name1> ( <name2> , <name4> )	dict = <name1> ( <name2> , <name4> )
( <val2> 、 <name6> の逆順 ) からなる列を返す	return [ <val2> , <name6> [ : : - 1 ] ]	return [ <val2> , <name6> [ : : - 1 ] ]
<name4> の <name3> の x 座標から <name4> の <name1> の x 座標を引いた値と <name4> の <name3> の y 座標から <name4> の <name1> の y 座標を引いた値のノルムを <name5> とする	<name5> = hypot ( <name4> . <name3> . x - <name4> . <name1> . x , <name4> . <name3> . y - <name4> . <name1> . y )	else . <name5> = hypot ( <name4> . <name3> . x - <name4> . <name1> . x , <name4> . <name3> - <name4> . <name1> . y )
<name4> の長さが <val1> より小さい間、次を繰り返す	while len ( <name4> ) < <val1> :	yield ( len ( <name4> ) < <val1> ) :
<name3> の <name1> の先頭番目を <name1> の <val6> 番目に <name1> の <val5> 番目を掛けた値だけ増加させる	<name3> [ <name1> [ 0 ] ] += <name1> [ <val6> ] * <name1> [ <val5> ]	<name5> [ <name3> [ <name1> [ 0 ] ] += <name1> [ <val6> ] * <name1> [ <val5> ]
<name3> . <name4> ( <name3> . <name6> )	<name3> . <name4> ( <name3> . <name6> )	<name2> . <name4> ( <name3> . <name6> )
<name6> の、つまり先頭から <val4> 番目までの部分列を <name3> とする <name6> の <val4> 番目から、つまり末尾までの部分列を <name2> とする	<name3> = <name6> [ : <val4> ] <name2> = <name6> [ <val4> : ]	<name6> = <name6> [ : <val4> ] <name2> = <name6> [ <val4> : ]
<name2> の <val4> 番目を <name3> だけ減少させる	<name2> [ <val4> ] -= <name3>	<name1> [ <val4> ] -= <name3>
<name4> が <val5> と等しくまたは <name4> が <name3> から <val2> を引いた値と等しいとき、	if <name4> == <val5> or <name4> == <name3> - <val2> :	list if <name4> == <val5> or <name4> == <name3> - <val2> :
( <name1> 、 <name5> 、 <name6> ) の組を返す	return ( <name1> , <name5> , <name6> )	yield ( <name1> , <name5> , <name6> )
<name5> ( <name4> . <name2> ( ) ) を <name6> とする	<name6> = <name5> ( <name4> . <name2> ( ) )	<name6> = <name5> ( <name4> . <name2> ( ) )
<name4> ( <name1> + <val6> , <name5> ) を返す	return <name4> ( <name1> + <val6> , <name5> )	yield <name4> ( <name1> + <val6> , <name5> )
<name4> の <name2> 番目が <name5> 以下のとき、	if <name4> [ <name2> ] <= <name5> :	if <name4> [ <name2> ] <= <name5> :
<name6> から <name4> に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> , <name4> + <val2> ) :	continue for <name5> in range ( <name6> , <name4> + <val2> ) :
<name3> の <name6> に <val4> を加えた値番目が <name3> の <name6> 番目に <val4> を加えた値と等しくないとき、	if <name3> [ <name6> + <val4> ] != <name3> [ <name6> ] + <val4> :	if <name3> [ <name6> + <val4> ] != <name3> [ <name6> ] + <val4> :
<name4> ( <name2> , <name1> )	<name4> ( <name2> , <name1> )	<name4> ( <name2> , <name1> )
<name6> の <name2> 番目の <name5> から <val3> を引いた値番目のとき、	if <name6> [ <name2> ] [ <name5> - <val3> ] :	> <name6> [ <name2> ] [ <name5> - <val3> ] :
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> 、 <name3> 、 <name4> とする	<name5> , <name2> , <name3> , <name4> = map ( int , <name6> ( ) . split ( ) )	<name2> , <name3> , <name4> = map ( int , <name6> ( ) . split ( ) )
<name6> から <val1> 未満までの -2 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> , <val1> , - 2 ) :	for <name5> in range ( <name6> , <val1> , - <val1> ) :
<name3> の <name6> 番目の <name4> が、つまり未定値と等しいとき、	if <name3> [ <name6> ] . <name4> == None :	list if <name3> [ <name6> ] . <name4> is not None :
<name4> . <name2> ( ) が <name1> . <name2> ( ) より小さいとき、	if <name4> . <name2> ( ) < <name1> . <name2> ( ) :	for <name4> . <name2> ( ) < <name1> . <name2> ( ) :
<name6> のキーの集まりの各要素を <name1> とし、 <name1> の先頭が <name2> で始まるかどうかの列が少なくともひとつは真かどうかを返す	return any ( [ <name1> . startswith ( <name2> ) for <name1> in <name6> . keys ] )	yield Counter ( [ <name1> . most_common ( <name2> ) for <name1> in <name6> . keys ( ) ] )
真を <name3> の <name5> 番目にする	<name3> [ <name5> ] = True	( <name3> [ <name5> ] = True )
<name6> に <name5> から <name6> を引いた値に <name2> を掛けた値を <name2> に <name1> を加えた値で割った値を加えた値を <name3> とする	<name3> = <name6> + ( <name5> - <name6> ) * <name2> / ( <name2> + <name1> )	else = <name6> + ( <name5> - <name6> ) * <name2> / ( <name2> + <name1> )
<name3> 、 <name5> の <name3> 番目に <name1> の <name3> 番目を加えた値を出力する	print ( <name3> , <name5> [ <name3> ] + <name1> [ <name3> ] )	print ( <name3> , <name5> [ <name3> ] + <name1> [ <name3> ] )
<name3> ( <name4> , <name6> ) を <name3> とする	<name3> = <name3> ( <name4> , <name6> )	<name3> = <name3> ( <name4> , <name6> )
0 から <val4> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> ) :	for <name2> in range ( <val4> ) :
ソートされた順序を保ったまま <name5> を <name4> に挿入できる位置を <name2> とする	<name2> = bisect_left ( <name4> , <name5> )	<name6> = bisect . bisect_left ( <name4> , <name5> )
<name6> の <name5> 番目を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = <name6> [ <name5> ]	( <name1> , <name4> = <name6> [ <name5> ] )
<name2> ( <name1> , <name6> -1 - <name4> )	<name2> ( <name1> , <name6> - 1 - <name4> )	<name2> ( <name1> , <name6> - 1 - <name4> )
<name5> をパラメータとして - <name5> の <val1> 番目の先頭を返す関数をキーとして <name6> のキーと値の集まりをソートした列を <name6> とする	<name6> = sorted ( <name6> . items ( ) , key = lambda <name5> : - <name5> [ <val1> ] [ 0 ] )	<name6> = sorted ( <name6> . items ( ) , key = lambda <name5> : - <name5> [ <val1> ] [ 0 ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> 、 <name6> 、 <name5> とする	<name4> , <name2> , <name6> , <name5> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name5> = map ( int , input ( ) . split ( ) )
<name1> を <name5> の長さに <name2> の長さを加えた値だけ増加させる	<name1> += len ( <name5> ) + len ( <name2> )	( <name1> += len ( <name5> ) + len ( <name2> ) )
<name4> の <val3> 乗に <name5> ( ( <val6> * <name1> * <name4> ** <val3> - <name2> ** <val3> ) ** . <val4> , <name2> ) を掛けた値を <name2> とする	<name2> = <name4> ** <val3> * <name5> ( ( <val6> * <name1> * <name4> ** <val3> - <name2> ** <val3> ) ** . <val4> , <name2> )	( <name2> = <name4> ** <val3> * <name5> ( <val6> * <name1> * <name4> ** <val3> - <name2> ** <val3> ) ** . <val4> , <name2> )
<name4> の <name2> 番目の <name5> に <name3> を加えた値番目が <val6> と等しいとき、	if <name4> [ <name2> ] [ <name5> + <name3> ] == <val6> :	list ( <name4> [ <name2> ] [ <name5> + <name3> ] == <val6> :
<name1> の <name5> の <name2> 番目が <name1> の <name5> の <name6> 番目と等しいかどうかの整数値を出力する	print ( int ( <name1> . <name5> [ <name2> ] == <name1> . <name5> [ <name6> ] ) )	print ( int ( <name1> . <name5> [ <name2> ] == <name1> . <name5> [ <name6> ] ) )
0 から <name3> 未満までの数列の各要素を <name5> とし、 <name2> から読み込んだ一行の両端から空白改行を取り除いた文字列の列を <name4> とする	<name4> = [ <name2> . readline ( ) . strip ( ) for <name5> in range ( <name3> ) ]	<name4> = [ <name2> . readline ( ) . strip ( ) for <name5> in range ( <name3> ) ]
<name1> の <name5> 番目の末尾に <name6> を追加する	<name1> [ <name5> ] . append ( <name6> )	<name1> [ <name5> ] . append ( <name6> )
<name4> に <name2> を加えた値、 <name1> に <name6> を加えた値を <name5> 、 <name3> とする	<name5> , <name3> = <name4> + <name2> , <name1> + <name6>	<name5> , <name3> = <name4> + <name2> , <name1> + <name6>
<name1> の <val3> 番目が <name4> 以下の間、次を繰り返す	while <name1> [ <val3> ] <= <name4> :	del <name1> [ <val3> ] <= <name4> :
<name5> の <name1> に <val6> を加えた値番目の <name4> 番目を <val6> だけ増加させる	<name5> [ <name1> + <val6> ] [ <name4> ] += <val6>	<name3> [ <name1> + <val6> ] [ <name4> ] += <val6>
<val3> を <name1> の <name4> の <name5> 番目の <name2> 番目にする	<name1> . <name4> [ <name5> ] [ <name2> ] = <val3>	not <name1> [ <name4> . <name5> ] [ <name2> ] = <val3>
<name4> から <name1> を引いた値、 <name6> から <name5> を引いた値を <name3> 、 <name2> とする	<name3> , <name2> = <name4> - <name1> , <name6> - <name5>	<name3> , <name2> = <name4> - <name1> , <name6> - <name5>
<name2> の <name3> の x 座標から <name2> の <name1> の x 座標を引いた値と <name2> の <name3> の y 座標から <name2> の <name1> の y 座標を引いた値のノルムを <name4> とする	<name4> = hypot ( <name2> . <name3> . x - <name2> . <name1> . x , <name2> . <name3> . y - <name2> . <name1> . y )	<name2> . <name4> = hypot ( <name2> . <name3> . x - <name2> . <name1> . x , <name2> . <name3> . <name2> . <name1> . y )
<name3> から <name1> を引いた値に <name5> から <name6> を引いた値を掛けた値から <name2> から <name4> を引いた値に <name3> から <name1> を引いた値を掛けた値を引いた値を <name4> とする	<name4> = ( <name3> - <name1> ) * ( <name5> - <name6> ) - ( <name2> - <name4> ) * ( <name3> - <name1> )	<name4> = ( <name3> - <name1> ) * ( <name5> - <name6> ) - ( <name2> - <name4> ) * ( <name3> - <name1> )
<name5> を <name6> だけ増加させる <name6> を <val4> だけ増加させる	<name5> += <name6> <name6> += <val4>	<name2> += <name5> <name6> += <val4>
<name4> の最小値、 <name4> の最大値、 <name4> の総和を出力する	print ( min ( <name4> ) , max ( <name4> ) , sum ( <name4> ) )	[ min ( <name4> ) , max ( <name4> ) , sum ( <name4> ) )
<name5> . <name6> ( <name3> . <name2> ) のとき、	if <name5> . <name6> ( <name3> . <name2> ) :	. if <name5> . <name6> ( <name3> . <name2> ) :
<name6> の末尾に ( <name1> 、 <name3> の <name1> 番目に <name2> の <name1> 番目を加えた値 ) からなる列を追加する	<name6> . append ( [ <name1> , <name3> [ <name1> ] + <name2> [ <name1> ] ] )	<name4> . append ( [ <name1> , <name3> [ <name1> ] + <name2> [ <name1> ] ] )
<name6> に <name5> を加えた値を <val1> で割った値の整数値を <name3> とする	<name3> = int ( ( <name6> + <name5> ) / <val1> )	<name3> = int ( ( <name6> + <name5> ) / <val1> )
<name3> の <name5> の <name2> の <name4> 番目を順に <name1> として、繰り返す	for <name1> in <name3> . <name5> . <name2> [ <name4> ] :	. for <name1> in <name3> . <name5> [ <name2> . <name4> ] :
( ( <val2> ) からなる列の <val2> から <val5> 未満までの数列の各要素を <name4> とし、 <val5> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val2> ] * [ <val5> for <name4> in range ( <val5> ) ] ]	<name6> = [ [ <val2> ] * [ <val5> for <name4> in range ( <val5> ) ] ]
<name1> ( ) を順に <name2> として、繰り返す	for <name2> in <name1> ( ) :	. for <name2> in <name1> ( ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name6> 、 <name5> 、 <name3> とする	<name4> , <name6> , <name5> , <name3> = map ( int , input ( ) . split ( ) )	<name5> , <name3> = map ( int , input ( ) . split ( ) )
<name3> に <name2> を加えた値が <name5> より小さいとき、	if <name3> + <name2> < <name5> :	continue <name3> + <name2> < <name5> :
0 から <name1> 未満までの数列の各要素を <name4> とし、、つまり空列の列を <name5> とする	<name5> = [ [ ] for <name4> in range ( <name1> ) ]	<name5> = [ [ ] for <name4> in range ( <name1> ) ]
<name1> が <val2> と等しいとき、 <blk> <name5> を <val4> だけ増加させる </blk>	if <name1> == <val2> : <blk> <name5> += <val4> </blk>	: if <name1> == <val2> : <blk> <name5> += <val4> </blk>
<name4> を <name2> とする <val3> を <name1> とする	<name2> = <name4> <name1> = <val3>	<name2> = <name4> <name1> = <val3>
<name4> の末尾の先頭、 <name4> の末尾の <val3> 番目を <name5> 、 <name1> とする	<name5> , <name1> = <name4> [ - <val3> ] [ 0 ] , <name4> [ - <val3> ] [ <val3> ]	<name4> , <name5> , <name1> = <name4> [ - <val3> ] [ 0 ] , <name4> [ - <val3> ] [ <val3> ]
<name4> の <name3> 番目から、つまり末尾までの部分列の <name4> の <name3> 番目から、つまり末尾までの部分列の最小値と等しい要素の最初の位置に <name3> を加えた値を <name1> とする	<name1> = <name4> [ <name3> : ] . index ( min ( <name4> [ <name3> : ] ) ) + <name3>	<name1> = <name4> [ <name3> : ] . index ( min ( <name4> [ <name3> : ] ) ) + <name3>
0 から <name3> から <name5> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> - <name5> ) :	for <name6> in range ( <name3> - <name5> ) :
<name3> が <name4> の <name6> 番目の長さと等しいとき、 <blk> 繰り返しを中断する </blk>	if <name3> == len ( <name4> [ <name6> ] ) : <blk> break </blk>	while <name3> == len ( <name4> [ <name6> ] ) : <blk> break </blk>
<val3> から <name5> の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , len ( <name5> ) ) :	. for <name4> in range ( <val3> , len ( <name5> ) ) :
0 から <name5> 未満までの数列の各要素を <name6> とし、 <name1> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , <name1> ( ) . split ( ) ) ) for <name6> in range ( <name5> ) ]	<name2> = [ list ( map ( int , <name1> ( ) . split ( ) ) ) for <name6> in range ( <name5> ) ]
<name1> から <name6> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> , <name6> ) :	. for <name4> in range ( <name1> , <name6> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name6> 、 <name3> とする	<name1> , <name2> , <name6> , <name3> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name3> = map ( int , input ( ) . split ( ) )
入力された文字列に <val2> を加えた値を空白で分割した字句列の、つまり先頭から <val3> 番目までの部分列を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = ( input ( ) + <val2> ) . split ( ) [ : <val3> ]	<name2> , <name1> , <name6> = ( input ( ) + <val2> ) . split ( ) [ : <val3> ]
<name2> の <name5> から <val1> を引いた値番目を <name3> とする	<name3> = <name2> [ <name5> - <val1> ]	<name3> = <name2> [ <name5> - <val1> ]
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name2> とする	<name3> , <name5> , <name2> = map ( int , input ( ) . split ( <val1> ) )	<name5> , <name2> = map ( int , input ( ) . split ( <val1> ) )
<name1> の長さが <val3> より大きいとき、	if len ( <name1> ) > <val3> :	for <name1> in len ( <name1> ) > <val3> :
<name2> 、 <name5> から <name6> を引いた値に <name4> を掛けた値の最大値を <name2> とする	<name2> = max ( <name2> , ( <name5> - <name6> ) * <name4> )	<name2> = max ( <name2> , ( <name5> - <name6> ) * <name4> )
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name5> 、 <name4> 、 <name6> 、 <name3> とする	<name5> , <name4> , <name6> , <name3> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	<name5> , <name4> , <name6> , <name3> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
<name6> の末尾に ( <name3> に <val2> を加えた値、 <name1> 、 <name5> ) の組を追加する	<name6> . append ( ( <name3> + <val2> , <name1> , <name5> ) )	<name4> . append ( ( <name3> + <val2> , <name1> , <name5> ) )
<val3> 、 <val6> を開いたファイルストリームの <name5> を <name5> とする	<name5> = open ( <val3> , <val6> ) . <name5>	<name6> . <name5> = open ( <val3> , <val6> ) . <name5>
真を <name2> の <val6> 番目の <name1> の整数値から <val6> を引いた値番目にする	<name2> [ <val6> ] [ int ( <name1> ) - <val6> ] = True	<name4> [ <val6> ] [ int ( <name1> ) - <val6> ] = True
-1 を <name2> で割った値を <name3> とする	<name3> = - 1 / <name2>	<name3> = - 1 / <name2>
<name1> を <name1> と - <name1> の論理積だけ増加させる	<name1> += <name1> & - <name1>	( <name1> += <name1> & - <name1> )
<name5> に <name5> を掛けた値から <val2> 未満までの <name5> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> * <name5> , <val2> , <name5> ) :	continue for <name4> in range ( <name5> * <name5> , <val2> , <name5> ) :
<name4> ( ) を出力する	print ( <name4> ( ) )	print ( <name4> ( ) )
<name3> の <name1> が、つまり未定値と等しくないとき、	if <name3> . <name1> != None :	for <name3> . <name1> != None :
<name1> の <val2> 乗に <name4> の <val2> 乗を加えた値が <name5> の <val2> 乗と等しいとき <val6> 、そうでなければ <val3> を出力する	print ( <val6> if <name1> ** <val2> + <name4> ** <val2> == <name5> ** <val2> else <val3> )	print ( <val6> if <name1> ** <val2> + <name4> ** <val2> == <name5> ** <val2> else <val3> )
<name6> の集合と <name5> の集合の論理和をソートした列を順に <name2> として、繰り返す	for <name2> in sorted ( set ( <name6> ) | set ( <name5> ) ) :	. for <name2> in sorted ( set ( <name6> ) | set ( <name5> ) ) :
<name6> と <name2> の論理積を <name4> とする	<name4> = <name6> & <name2>	( <name4> = <name6> & <name2> )
<name4> の <name5> 番目を <name5> とする	<name5> = <name4> [ <name5> ]	<name2> <name5> = <name4> [ <name5> ]
<name5> の <name2> 番目が <name4> より小さいとき、	if <name5> [ <name2> ] < <name4> :	: if <name5> [ <name2> ] < <name4> :
<name4> . <name3> ( <name6> , <name1> )	<name4> . <name3> ( <name6> , <name1> )	<name3> . <name3> ( <name6> , <name1> )
<name6> に <name4> を掛けた値を <name2> で割った余りを <name6> とする	<name6> = <name6> * <name4> % <name2>	<name2> = <name6> * <name4> % <name2>
\ 0 から <name4> 未満までの数列の各要素を <name6> とし、 <name1> ( ) の両端から <val5> を取り除いた文字列のリストの各要素に整数を適用した列のリストの列を <name2> とする\	\ <name2> = [ list ( map ( int , list ( <name1> ( ) . strip ( <val5> ) ) ) ) for <name6> in range ( <name4> ) ] \	\ <name2> = [ list ( map ( int , list ( <name1> ( ) . strip ( <val5> ) ) ) ) for <name6> in range ( <name4> ) ] \
<name5> の整数値が <name1> の整数値より大きいとき、	if int ( <name5> ) > int ( <name1> ) :	continue int ( <name5> ) > int ( <name1> ) :
\ <name1> ( <val3> ) \	\ <name1> ( <val3> ) \	if <name1> ( <val3> ) \
<name6> の <name5> が -1 と等しいとき、	if <name6> . <name5> == - 1 :	for <name6> . <name5> == - 1 :
<name6> の <name2> 番目を <name5> の <name3> 番目にする	<name5> [ <name3> ] = <name6> [ <name2> ]	<name4> [ <name3> ] = <name6> [ <name2> ]
<name4> ( <name1> , <name3> , <name2> )	<name4> ( <name1> , <name3> , <name2> )	<name4> ( <name1> , <name3> , <name2> )
<name4> の長さ、 <name3> の長さを <name2> 、 <name5> とする	<name2> , <name5> = len ( <name4> ) , len ( <name3> )	input , <name5> = len ( <name4> ) , len ( <name3> )
<name1> ( <name3> ) を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name1> ( <name3> )	<name2> , <name5> , <name4> = <name1> ( <name3> )
<name4> を <val5> だけ右シフトする	<name4> >> = <val5>	( <name4> >> = <val5> )
<name6> . <name4> ( ) を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name6> . <name4> ( )	<name2> , <name3> , <name1> = <name6> . <name4> ( )
<name4> ( <name2> - <name5> , <name3> - <name6> , <name1> - <name5> , <name4> - <name6> , <name2> , <name5> ) を <name1> とする	<name1> = <name4> ( <name2> - <name5> , <name3> - <name6> , <name1> - <name5> , <name4> - <name6> , <name2> , <name5> )	<name6> = <name4> ( <name2> - <name5> , <name3> - <name6> , <name1> - <name5> , <name4> - <name6> , <name2> , <name5> )
<name2> の <name3> 番目の <name5> 番目が <val1> より大きいとき、	if <name2> [ <name3> ] [ <name5> ] > <val1> :	continue <name2> [ <name3> ] [ <name5> ] > <val1> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name3> 、 <name4> 、 <name6> とする	<name3> , <name4> , <name6> = list ( map ( int , input ( ) . split ( ) ) )	<name4> , <name6> = list ( map ( int , input ( ) . split ( ) ) )
<name2> の末尾に <name6> の文字列を追加する	<name2> . append ( str ( <name6> ) )	<name1> . append ( str ( <name6> ) )
<name4> を無限の整数列だけ増加させる	<name4> += count	( <name4> += count )
<name2> の末尾に <val3> を書式として <name4> で整形した文字列を追加する	<name2> . append ( <val3> . format ( <name4> ) )	<name2> . append ( <val3> . format ( <name4> ) )
( <val4> ) からなる列の <name3> の <name2> に <val5> を掛けた値回分の列を <name3> の <name6> にする	<name3> . <name6> = [ <val4> ] * ( <name3> . <name2> * <val5> )	<name3> . <name6> = [ <val4> ] * ( <name3> . <name2> * <val5> )
<name1> の <name6> 番目の <name4> に <val3> を加えた値番目の <name2> に <val3> を加えた値番目を <val3> だけ減少させる	<name1> [ <name6> ] [ <name4> + <val3> ] [ <name2> + <val3> ] -= <val3>	<name1> [ <name6> ] [ <name4> + <val3> ] [ <name2> + <val3> ] -= <val3>
<val5> から <name1> の長さを <val3> で割った商に <val5> を加えた値未満までの数列を反転した列を順に <name4> として、繰り返す	for <name4> in reversed ( range ( <val5> , len ( <name1> ) // <val3> + <val5> ) ) :	for <name4> in reversed ( range ( <val5> , len ( <name1> ) // <val3> + <val5> ) ) :
<name1> . <name2> ( <name5> . <name4> )	<name1> . <name2> ( <name5> . <name4> )	<name4> . <name2> ( <name5> . <name4> )
偽、偽、偽を <name4> 、 <name3> 、 <name1> とする	<name4> , <name3> , <name1> = False , False , False	<name4> , <name3> , <name1> = False , False , False
<name3> の <name1> に <name4> 、 <name2> に <name4> から <val6> を引いた値を掛けた値を追加した集まり	<name3> . <name1> . add ( <name4> , <name2> * ( <name4> - <val6> ) )	<name1> . <name1> . add ( <name4> , <name2> * ( <name4> - <val6> ) )
0 から <name2> の <name3> 未満までの数列の各要素を <name5> とし、、つまり未定値の列を <name2> の <name6> にする	<name2> . <name6> = [ None for <name5> in range ( <name2> . <name3> ) ]	<name6> . <name6> = [ None for <name5> in range ( <name2> . <name3> ) ]
<name3> の <name1> の <name2> を <name4> だけ右シフトした値番目のとき、	if <name3> . <name1> [ <name2> >> <name4> ] :	while <name3> [ <name1> [ <name2> >> <name4> ] ] :
<name6> が <name5> の <name1> 番目に含まれるとき、	if <name6> in <name5> [ <name1> ] :	or <name6> in <name5> [ <name1> ] :
<name2> の値の集まりの総和を <val1> で割った余りを返す	return sum ( <name2> . values ( ) ) % <val1>	x return sum ( <name2> . values ) % <val1>
<name6> が <name1> の <name2> 番目の <name4> 番目の <name5> 番目より小さいとき、	if <name6> < <name1> [ <name2> ] [ <name4> ] [ <name5> ] :	> <name6> < <name1> [ <name2> ] [ <name4> ] [ <name5> ] :
<name1> ( <name5> , <name2> ) を <name3> とする	<name3> = <name1> ( <name5> , <name2> )	<name3> = <name1> ( <name5> , <name2> )
<name6> // <val5> + <name6> % <val5> // <val1> に <name6> % <val1> // <val3> を加えた値に <name6> % <val3> を <val4> で割った商を加えた値に <name6> を <val4> で割った余りを <val2> で割った商を加えた値に <name6> を <val2> で割った余りを加えた値を出力する	print ( <name6> // <val5> + <name6> % <val5> // <val1> + <name6> % <val1> // <val3> + <name6> % <val3> // <val4> + <name6> % <val4> // <val2> + <name6> % <val2> )	else = <name6> // <val5> + <name6> // <val5> + <val1> + ( <name6> // <val1> // <val3> ) // <val4> + ( <name6> % <val4> ) // <val2> + <name6> % <val2> + <name6> % <val2> )
<name6> ( [ <name1> - bfora , binzip ( <name3> , <name4> ) ] ) を返す	return <name6> ( [ <name1> - b for <name1> , b in zip ( <name3> , <name4> ) ] )	yield <name6> ( [ <name1> - b for <name1> , b in zip ( <name3> , <name4> ) ] )
<name6> ( <name2> , ( <name3> , <name1> ) , ( <name5> , <name4> ) ) を <name4> とする	<name4> = <name6> ( <name2> , ( <name3> , <name1> ) , ( <name5> , <name4> ) )	<name4> = <name6> ( <name2> , ( <name3> , <name1> ) , ( <name5> , <name4> ) )
<name1> の先頭から <name4> を探して見つかった位置のとき、	if <name1> . find ( <name4> ) :	for <name1> . find ( <name4> ) :
<name4> ( <name5> , <name2> = <name6> , <name3> = <name6> )	<name4> ( <name5> , <name2> = <name6> , <name3> = <name6> )	<name5> ( <name5> , <name2> = <name6> , <name3> = <name6> )
<name2> が <name4> の <name3> 番目から <name3> に <name5> を加えた値までの部分列と等しくないとき、	if <name2> != <name4> [ <name3> : <name3> + <name5> ] :	for if <name2> != <name4> [ <name3> : <name3> + <name5> ] :
<name1> をソートした列の先頭を除いた部分列を順に <name2> として、繰り返す	for <name2> in sorted ( <name1> ) [ 1 : ] :	. for <name2> in sorted ( <name1> ) [ 1 : ] :
<name4> の <name6> 番目が <name4> の <name1> 番目以下のとき、	if <name4> [ <name6> ] <= <name4> [ <name1> ] :	raise <name4> [ <name6> ] <= <name4> [ <name1> ] :
入力された文字列を <val6> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name2> 、 <name5> 、 <name3> とする	<name2> , <name5> , <name3> = list ( map ( int , input ( ) . split ( <val6> ) ) )	<name2> , <name5> , <name3> = list ( map ( int , input ( ) . split ( <val6> ) ) )
<name3> の正弦を <name6> とする	<name6> = math . sin ( <name3> )	<name6> = math . sin ( <name3> )
<name5> ( <name6> ( <name2> ( ) ) ) に番号付した組の列を順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in enumerate ( <name5> ( <name6> ( <name2> ( ) ) ) ) :	. for <name3> , <name1> in enumerate ( <name5> ( <name6> ( <name2> ( ) ) ) ) :
<val5> 、 <name4> から <val6> を引いた値を <name3> 、 <name2> とする	<name3> , <name2> = <val5> , <name4> - <val6>	<name3> , <name2> = <val5> , <name4> - <val6>
<name1> の <name3> の <name2> の <val6> 番目から <val6> を引いた値番目の末尾に <name2> の先頭から <val6> を引いた値を追加する	<name1> . <name3> [ <name2> [ <val6> ] - <val6> ] . append ( <name2> [ 0 ] - <val6> )	<name3> . <name2> [ <val6> ] - <val6> ] . append ( <name2> [ 0 ] - <val6> )
<name3> ( [ <val1> ] * <name4> ) を <name2> とする	<name2> = <name3> ( [ <val1> ] * <name4> )	<name2> = <name3> ( [ <val1> ] * <name4> )
<name4> に番号付した組の列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in enumerate ( <name4> ) :	for <name5> , <name2> in enumerate ( <name4> ) :
改行せずに <val5> 、 <name4> の <name1> を出力する	print ( <val5> , <name4> . <name1> , end = <val5> )	, print ( <val5> , <name4> . <name1> , end = <val5> )
<name4> と <val5> の論理積が <val3> と等しいとき、	if <name4> & <val5> == <val3> :	if ( <name4> & <val5> ) == <val3> :
<name2> の <name4> 番目が <name5> と等しくないとき、	if <name2> [ <name4> ] != <name5> :	raise <name2> [ <name4> ] != <name5> :
0 から <name4> 未満までの数列を順に <name5> として、繰り返す <blk> <name3> を <name3> に <name2> を掛けた値の整数値から <name1> を引いた値だけ増加させる </blk>	for <name5> in range ( <name4> ) : <blk> <name3> += int ( <name3> * <name2> ) - <name1> </blk>	: for <name5> in range ( <name4> ) : <blk> <name3> += int ( <name3> * <name2> ) - <name1> </blk>
<name6> の先頭が <val1> と等しいとき <val3> 、そうでなければ <val1> を <name2> とする	<name2> = <val3> if <name6> [ <val3> ] == <val1> else <val1>	<name6> = <val3> if <name6> [ <val1> ] == <val1> else <val1>
<name2> をソートした列を順に <name6> として、繰り返す	for <name6> in sorted ( <name2> ) :	( <name6> in sorted ( <name2> ) :
<name6> 内の <name4> の出現回数を <name3> とする	<name3> = <name6> . count ( <name4> )	<name3> = <name6> . count ( <name4> )
<name5> ( <val2> , <val2> , <name6> , <name4> , <name3> ) を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name5> ( <val2> , <val2> , <name6> , <name4> , <name3> )	<name2> , <name3> , <name1> = <name5> ( <val2> , <val2> , <name6> , <name4> , <name3> )
<name1> の <name6> の <name5> 番目が <val4> より小さいとき、	if <name1> . <name6> [ <name5> ] < <val4> :	: if <name1> . <name6> [ <name5> ] < <val4> :
<name6> ( <name3> . <name1> [ <val2> : ] )	<name6> ( <name3> . <name1> [ <val2> : ] )	set ( <name6> ( <name3> . <name1> [ <val2> : ] ) )
<name3> ( <name6> -1 , <name4> ) を <name2> とする	<name2> = <name3> ( <name6> - 1 , <name4> )	<name2> = <name3> ( <name6> - 1 , <name4> )
<name3> を <name4> の <name2> の <name1> にする	<name4> . <name2> . <name1> = <name3>	( <name4> . <name2> . <name1> = <name3> )
<name2> の <name5> に <name3> の <name6> に <val4> を加えた値番目を挿入する	<name2> . insert ( <name5> , <name3> [ <name6> + <val4> ] )	<name1> . insert ( <name5> , <name3> [ <name6> + <val4> ] )
<name5> の <name3> 番目、 <val1> を <name2> 、 <name6> とする	<name2> , <name6> = <name5> [ <name3> ] , <val1>	<name2> , <name6> = <name5> [ <name3> ] , <val1>
<val3> を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <val3>	( <name1> [ <name5> ] = <val3> )
<name5> の ( <name1> 、現在の日時 ) の組番目を返す	return <name5> [ ( <name1> , now ) ]	yield <name5> [ ( <name1> , now ) ]
<name2> ( <name1> , <name5> , <name6> ) を <name3> とする	<name3> = <name2> ( <name1> , <name5> , <name6> )	<name3> = <name2> ( <name1> , <name5> , <name6> )
<name3> . <name2> ( <name6> . <name1> )	<name3> . <name2> ( <name6> . <name1> )	<name1> . <name2> ( <name6> . <name1> )
<name6> が <name5> に含まれるとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> in <name5> : <blk> continue </blk>	list if <name6> in <name5> : <blk> continue </blk>
<name6> を <name2> の <name6> にする	<name2> . <name6> = <name6>	<name2> . <name6> = <name6>
0 から <name4> の <val1> 番目未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> [ <val1> ] ) :	) for <name5> in range ( <name4> [ <val1> ] ) :
<name1> の末尾に ( <name6> 、 <name3> ) からなる列を追加する	<name1> . append ( [ <name6> , <name3> ] )	<name1> . append ( [ <name6> , <name3> ] )
<name5> の <name1> の <val2> 番目が <name5> の <val2> 番目以上かどうか番目を <name5> とする	<name5> = <name5> [ <name1> [ <val2> ] >= <name5> [ <val2> ] ]	<name5> = <name5> [ <name1> [ <val2> ] >= <name5> [ <val2> ] ]
<name2> の <name5> 、 <name1> の要素をそれぞれ組にした列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in zip ( <name2> . <name5> , <name1> ) :	. for <name6> , <name3> in zip ( <name2> . <name5> , <name1> ) :
<name3> から <name2> を引いた値の絶対値が <val5> 以下のとき、	if abs ( <name3> - <name2> ) <= <val5> :	: if abs ( <name3> - <name2> ) <= <val5> :
<name4> ( ) または <name1> を <name1> とする	<name1> = <name4> ( ) or <name1>	<name1> = <name4> ( ) or <name1>
( ( <val1> 、 <val4> ) の組、 ( -1 、 <val3> ) の組、 ( <val1> 、 -3 ) の組、 ( <val5> 、 <val2> ) の組、 ( <val2> 、 <val4> ) の組、 ( <val4> 、 <val1> ) の組 ) の組を <name6> とする	<name6> = ( ( <val1> , <val4> ) , ( - <val1> , <val3> ) , ( <val1> , - <val3> ) , ( <val5> , <val2> ) , ( <val2> , <val4> ) , ( <val4> , <val1> ) )	<name6> = ( ( <val1> , <val4> ) , ( - <val4> , <val3> ) , ( <val1> , - <val1> ) , ( <val5> , <val2> ) , ( <val2> , <val4> ) , ( <val4> , <val1> ) )
<name3> に <name2> の <name5> 番目の <name1> 番目に <name6> の <name1> 番目を掛けた値を加えた値を <name3> とする	<name3> = <name3> + ( <name2> [ <name5> ] [ <name1> ] * <name6> [ <name1> ] )	else = <name3> + <name2> [ <name5> ] [ <name1> ] * <name6> [ <name1> ]
<name1> の <val3> 乗に <name5> の <val3> 乗を加えた値を <name4> とする	<name4> = <name1> ** <val3> + <name5> ** <val3>	<name4> = <name1> ** <val3> + <name5> ** <val3>
<name6> の末尾に <name1> ( <name3> ( ) . <name5> ( ) ) を追加する	<name6> . append ( <name1> ( <name3> ( ) . <name5> ( ) ) )	<name2> . append ( <name1> ( <name3> ( ) . <name5> ( ) ) )
<name1> に <name4> を加えた値を <name6> とする	<name6> = <name1> + <name4>	<name6> = <name1> + <name4>
<name2> 内の <name6> の <val5> 番目と等しい要素を取り除く	<name2> . remove ( <name6> [ <val5> ] )	not <name2> . remove ( <name6> [ <val5> ] )
<val1> から <name6> 未満までの数列の各要素を <name2> とし、 <name5> の <name2> 番目から <name5> の <name2> から <val1> を引いた値番目を引いた値の列を <name3> とする	<name3> = [ <name5> [ <name2> ] - <name5> [ <name2> - <val1> ] for <name2> in range ( <val1> , <name6> ) ]	<name3> = [ <name5> [ <name2> ] - <name5> [ <name2> - <val1> ] for <name2> in range ( <name6> ) ]
<name2> に <name3> を加えた値を <val4> で割った商を <name1> とする	<name1> = ( <name2> + <name3> ) // <val4>	<name1> = ( <name2> + <name3> ) // <val4>
<name4> の <val1> と等しい要素の最初の位置を <name5> とする	<name5> = <name4> . index ( <val1> )	else = <name4> . index ( <val1> )
<name5> から <name3> を <name1> で割った余りのとき <name3> // <name1> に <val2> を加えた値、そうでなければ <name3> を <name1> で割った商、 <name6> を <name4> で割った余りのとき <name6> // <name4> に <val2> を加えた値、そうでなければ <name6> を <name4> で割った商の最大値を引いた値を出力する	print ( <name5> - max ( <name3> // <name1> + <val2> if <name3> % <name1> else <name3> // <name1> , <name6> // <name4> + <val2> if <name6> % <name4> else <name6> // <name4> ) )	[ print ( <name6> // <name4> + <val2> if <name5> - <name3> % <name1> else ( <name3> // <val2> ) , max ( <name6> // <name4> ) + <val2> ) if <name3> / <name1> else <name6> // <name4> )
0 から <name4> の長さ未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name4> ) ) :	for <name6> in range ( len ( <name4> ) ) :
<name1> の各要素を <name4> とし、 <name4> 内の <val6> の出現回数の列の総和を出力する	print ( sum ( [ <name4> . count ( <val6> ) for <name4> in <name1> ] ) )	print ( sum ( [ <name4> . count ( <val6> ) for <name4> in <name1> ] ) )
<name5> の <val2> 乗を <name3> とする	<name3> = <name5> ** <val2>	<name3> = <name5> ** <val2>
<name1> をパラメータとして <name1> を <name3> で集約した列を返す関数を <name4> とする	<name4> = lambda <name1> : reduce ( <name3> , <name1> )	<name4> = lambda <name1> : reduce ( lambda <name3> , <name1> : <name3> , <name1> )
<name4> を <name1> の <name3> の <name2> 番目だけ増加させる	<name4> += <name1> . <name3> [ <name2> ]	( <name4> += <name1> . <name3> [ <name2> ] )
<name5> を順に <name1> 、 <name2> 、 <name6> として、繰り返す	for <name1> , <name2> , <name6> in <name5> :	. for <name1> , <name2> , <name6> in <name5> :
<name2> が <val1> と等しいとき、 <blk> <name3> を <val4> だけ増加させる </blk>	if <name2> == <val1> : <blk> <name3> += <val4> </blk>	: if <name2> == <val1> : <blk> <name3> += <val4> </blk>
<val6> から <name2> に <val1> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , <name2> + <val1> ) :	for <name3> in range ( <val6> , <name2> + <val1> ) :
<name4> の <name6> 番目に <name1> を加えた値を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name4> [ <name6> ] + <name1>	<name2> [ <name2> ] = <name4> [ <name6> ] + <name1>
<name5> の <name4> 番目の <val6> 番目が <name3> 以下のとき、	if <name5> [ <name4> ] [ <val6> ] <= <name3> :	if <name5> [ <name4> ] [ <val6> ] <= <name3> :
( ( <val1> ) からなる列の <val1> から <name3> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <name3> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val1> ] * [ <name3> for <name4> in range ( <name3> + <val2> ) ] ]	<name5> = [ [ <val1> ] * [ <name3> for <name4> in range ( <name3> + <val2> ) ] ]
<name4> の <val3> 番目を <name1> の <val2> 番目にする	<name1> [ <val2> ] = <name4> [ <val3> ]	<name1> [ <val2> ] = <name4> [ <val3> ]
<name5> の <name3> の整数値番目のとき、	if <name5> [ int ( <name3> ) ] :	list if <name5> [ int ( <name3> ) ] :
Q を <name2> の <name5> 番目の <name1> 番目にする	<name2> [ <name5> ] [ <name1> ] = 'Q'	( <name2> [ <name5> ] [ <name1> ] ) = 'Q'
( ( <val1> 、 <val4> ) の組、 ( <val1> 、 -1 ) の組、 ( <val4> 、 <val1> ) の組、 ( -1 、 <val1> ) の組 ) の組を <name6> とする	<name6> = ( ( <val1> , <val4> ) , ( <val1> , - <val4> ) , ( <val4> , <val1> ) , ( - <val4> , <val1> ) )	<name6> = ( ( <val1> , <val4> ) , ( <val1> , - <val4> ) , ( <val4> , <val1> ) , ( - <val1> , <val1> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name2> = map ( int , input ( ) . split ( ) )
0 から <name6> から <val4> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> - <val4> ) :	for <name2> in range ( <name6> - <val4> ) :
<name1> の末尾に ( <name4> 、 <name6> ) からなる列を追加する	<name1> . append ( [ <name4> , <name6> ] )	<name1> . append ( [ <name4> , <name6> ] )
<name1> . <name3> ( <name1> . <name6> [ <val4> ] , <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val5> ] , <name1> . <name6> [ <val1> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val6> ] )	<name1> . <name3> ( <name1> . <name6> [ <val4> ] , <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val5> ] , <name1> . <name6> [ <val1> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val6> ] )	<name5> . <name3> ( <name1> . <name6> [ <val4> ] , <name1> . <name6> [ <val2> ] , <name1> . <name6> [ <val5> ] , <name1> . <name6> [ <val1> ] , <name1> . <name6> [ <val3> ] , <name1> . <name6> [ <val6> ] )
<name5> ( <name3> ( <name1> , <name6> ) ) に <val4> を加えた値を <name2> で割った余りを返す	return ( <name5> ( <name3> ( <name1> , <name6> ) ) + <val4> ) % <name2>	yield ( <name5> ( <name3> ( <name1> , <name6> ) + <val4> ) % <name2>
<name1> の長さが <val6> より大きいとき、	if len ( <name1> ) > <val6> :	continue len ( <name1> ) > <val6> :
<name4> . <name6> ( ) を出力する	print ( <name4> . <name6> ( ) )	print ( <name4> . <name6> ( ) )
<name2> の <val4> 番目が <name6> の <val4> 番目と等しいとき、	if <name2> [ <val4> ] == <name6> [ <val4> ] :	if <name2> [ <val4> ] == <name6> [ <val4> ] :
<name4> の <name6> が <name5> と等しくまたは <name4> の <name2> が <name5> と等しいとき、	if <name4> . <name6> == <name5> or <name4> . <name2> == <name5> :	list ( <name4> . <name6> == <name5> or <name4> . <name2> == <name5> ) :
<val1> の <val3> 乗を無限大とする	inf = <val1> ** <val3>	inf = <val1> ** <val3>
<name2> が <name6> と等しいとき、	if ( <name2> == <name6> ) :	: if <name2> == <name6> :
<name6> の <name4> 番目の <name4> 番目が <val2> より小さいとき、	if <name6> [ <name4> ] [ <name4> ] < <val2> :	while <name6> [ <name4> ] [ <name4> ] < <val2> :
0 を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = '0'	( <name3> [ <name4> ] [ <name6> ] = '0' )
<name3> を <name4> の <name1> に <name6> を加えた値番目にする	<name4> [ <name1> + <name6> ] = <name3>	<name4> [ <name1> + <name6> ] = <name3>
<name6> を <val2> だけ右シフトする <name1> を <val2> だけ右シフトする	<name6> >> = <val2> <name1> >> = <val2>	<name2> >> = <name6> >> = <val2> <name1> >> = <val2>
<name4> の <name2> 番目を削除する	del <name4> [ <name2> ]	count = <name4> [ <name2> ]
<name6> に番号付した組の列の各要素を <name5> 、 <name2> とし、 <name5> から <name2> を引いた値の列の集合の長さが <val4> と等しくないとき、 <blk> 最初からもう一度、繰り返す </blk>	if len ( set ( [ <name5> - <name2> for <name5> , <name2> in enumerate ( <name6> ) ] ) ) != <val4> : <blk> continue </blk>	for <name5> , <name2> in enumerate ( set ( [ <name5> - <name2> for <name5> in enumerate ( <name6> ) ] ) ) != <val4> : <blk> continue </blk>
<name6> の <name2> 番目が <name1> に含まれる間、次を繰り返す	while <name6> [ <name2> ] in <name1> :	del <name6> [ <name2> ] in <name1> :
( <name1> 、 <val4> 、未定値 ) からなる列を <name5> とする	<name5> = [ <name1> , <val4> , None ]	<name5> = [ <name1> , <val4> , None ]
<name1> に <name3> の <name6> 番目を加えた値が <name3> の <name4> 番目より小さいとき、	if <name1> + <name3> [ <name6> ] < <name3> [ <name4> ] :	for <name1> + <name3> [ <name6> ] < <name3> [ <name4> ] :
<name3> ( <name5> , <name4> , <name6> , <name1> ) のとき、	if <name3> ( <name5> , <name4> , <name6> , <name1> ) :	for <name3> in <name3> ( <name5> , <name4> , <name6> , <name1> ) :
<name2> を <name6> に <name4> の <name6> から <val1> を引いた値番目を掛けた値だけ増加させる	<name2> += ( <name6> * <name4> [ <name6> - <val1> ] )	<name2> += <name6> * <name4> [ <name6> - <val1> ]
<name3> ( ) . <name5> ( <name4> . <name1> - <name6> . <name1> , <name4> . <name2> - <name6> . <name2> )	<name3> ( ) . <name5> ( <name4> . <name1> - <name6> . <name1> , <name4> . <name2> - <name6> . <name2> )	<name2> ( ) . <name5> ( <name4> . <name1> - <name6> . <name1> , <name4> . <name2> - <name6> . <name2> )
<name3> から <val2> を引いた値、 <name3> を出力する	print ( <name3> - <val2> , <name3> )	print ( <name3> - <val2> , <name3> )
<val3> を <name5> とするを <name2> とする	<name2> = <name5> = <val3>	input = <name5> = <val3>
<name3> が <name1> と等しいとき、	if <name3> == <name1> :	if <name3> == <name1> :
<val1> に <name2> を掛けた値に <val3> に <name5> を掛けた値を加えた値に <name4> を加えた値を <name6> とする	<name6> = <val1> * <name2> + <val3> * <name5> + <name4>	else = <val1> * <name2> + <val3> * <name5> + <name4>
<name4> の先頭を除いた部分列を順に <name2> として、繰り返す	for <name2> in <name4> [ 1 : ] :	. for <name2> in <name4> [ 1 : ] :
<name2> をパラメータとして ( <name2> の <val4> 番目、 <name2> の先頭 ) の組を返す関数をキーとして <name6> のキーと値の集まりをソートした列の先頭を <name1> とする	<name1> = sorted ( <name6> . items ( ) , key = lambda <name2> : ( <name2> [ <val4> ] , <name2> [ 0 ] ) ) [ 0 ]	<name1> = sorted ( <name6> . items ( ) , key = lambda <name2> : ( <name2> [ <val4> ] , <name2> [ 0 ] ) ) [ 0 ]
<name1> の <name5> の <name3> を返す	return <name1> . <name5> . <name3>	yield <name1> . <name5> . <name3>
<val6> に <name2> を加えた値を <val6> で割った値を <name3> とする	<name3> = ( <val6> + <name2> ) / <val6>	<name3> = ( <val6> + <name2> ) / <val6>
<name4> の <name2> 番目の <name2> 番目が <val1> より小さいとき、	if <name4> [ <name2> ] [ <name2> ] < <val1> :	if <name4> [ <name2> ] [ <name2> ] < <val1> :
( <name4> の <val2> 番目に <name6> を加えた値、 <name4> の <val3> 番目 ) からなる列を <name5> とする	<name5> = [ <name4> [ <val2> ] + <name6> , <name4> [ <val3> ] ]	<name4> = [ <name4> [ <val2> ] + <name6> , <name4> [ <val3> ] ]
<name1> ( <name5> , <val4> , <name2> )	<name1> ( <name5> , <val4> , <name2> )	<name4> ( <name5> , <val4> , <name2> )
<name1> を返す	return ( <name1> )	return <name1> ( Y , z )
<name2> . <name4> ( <name5> . <name6> ) を返す	return <name2> . <name4> ( <name5> . <name6> )	self return <name2> . <name4> ( <name5> . <name6> )
<val1> を間に入れて <name4> 、 0 から <val3> 未満までの数列を反転した列の要素をそれぞれ組にした列の各要素を <name2> 、 <name5> とし、 <name2> のときの <name6> ( <name2> , <name5> ) の列を連結した文字列を <name3> とする	<name3> = <val1> . join ( [ <name6> ( <name2> , <name5> ) for <name2> , <name5> in zip ( <name4> , reversed ( range ( <val3> ) ) ) if <name2> ] )	<name3> = <val1> . join ( [ <name6> ( <name2> , <name5> ) for <name2> , <name5> in zip ( <name4> , reversed ( <val3> ) ) if <name2> ) ] )
<name5> を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name5>	<name3> , <name1> = <name5>
<name4> に <val2> を加えた値から <name6> に <val2> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> + <val2> , <name6> + <val2> ) :	. for <name1> in range ( <name4> + <val2> , <name6> + <val2> ) :
<name6> の <name4> 番目が <val2> より大きいとき、 <blk> 偽を返す </blk>	if ( <name6> [ <name4> ] > <val2> ) : <blk> return False </blk>	while <name6> [ <name4> ] > <val2> : <blk> return False </blk>
<name4> を展開し、それぞれ <name2> 、 <name6> とする <name5> を展開し、それぞれ <name1> 、 <name3> とする	<name2> , <name6> = <name4> <name1> , <name3> = <name5>	<name2> , <name6> = <name4> <name1> , <name3> = <name5>
<name1> を <name5> の -2 番目の <name2> 番目だけ増加させる	<name1> += <name5> [ - 2 ] [ <name2> ]	<name1> += <name5> [ - 2 ] [ <name2> ]
<name2> ( <name1> , <name6> , <name5> ) を <name3> とする	<name3> = <name2> ( <name1> , <name6> , <name5> )	else = <name2> ( <name1> , <name6> , <name5> )
<val4> の <name2> 乗が <name6> より小さい間、次を繰り返す	while <val4> ** <name2> < <name6> :	del <val4> ** <name2> < <name6> :
<name1> の <val4> に <name2> を掛けた値から <val5> を引いた値番目、 <name1> の <val4> に <name2> を掛けた値番目の最小値に <name6> の <name2> から <val5> を引いた値番目を加えた値を <name1> の <name2> から <val5> を引いた値番目にする	<name1> [ <name2> - <val5> ] = min ( <name1> [ <val4> * <name2> - <val5> ] , <name1> [ <val4> * <name2> ] ) + <name6> [ <name2> - <val5> ]	<name3> [ <name1> [ <name2> - <val5> ] = min ( <name1> [ <val4> * <name2> - <val5> ] , <name1> [ <val4> * <name2> ] ) + <name6> [ <name2> - <val5> ]
<name2> ( <name5> * <name3> . <name1> , <name5> * <name3> . <name4> ) を返す	return <name2> ( <name5> * <name3> . <name1> , <name5> * <name3> . <name4> )	return <name2> ( <name5> * <name3> . <name1> , <name5> * <name3> . <name4> )
<name5> ( <name2> , <name1> , <name4> ) を <name3> とする	<name3> = <name5> ( <name2> , <name1> , <name4> )	else = <name5> ( <name2> , <name1> , <name4> )
<name2> を <name5> で割った余りが <val3> と等しいとき、	if <name2> % <name5> == <val3> :	while ( <name2> % <name5> ) == <val3> :
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name2> とする	<name3> , <name5> , <name2> = map ( int , <name1> . readline ( ) . split ( ) )	<name3> , <name5> , <name2> = map ( int , <name1> . readline ( ) . split ( ) )
関数 <name3> を <name5> をパラメータとして定義する <name5> を <val2> で割った商に <val4> を掛けた値に <name5> を <val2> で割った余りを加えた値を返す	def <name3> ( <name5> ) : return ( <name5> // <val2> ) * <val4> + ( <name5> % <val2> )	<name3> ( <name5> ) key = <name3> ( <name5> // <val2> ) * <val4> + ( <name5> % <val2> )
<name5> から <name6> 未満までの <val1> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <name6> , <val1> ) :	for <name2> in range ( <name5> , <name6> , <val1> ) :
<name1> ( <val6> , <name3> -1 ) を出力する	print ( <name1> ( <val6> , <name3> - 1 ) )	print ( <name1> ( <val6> , <name3> - 1 ) )
<name2> の <val5> 番目かつ <name2> と <name1> の <name4> 番目のユークリッド距離が <val3> に <name6> を加えた値以下のとき、	if <name2> [ <val5> ] and dist ( <name2> , <name1> [ <name4> ] ) <= <val3> + <name6> :	list ( <name2> [ <val5> ] and <name2> <= <name1> [ <name4> ] ) <= <val3> + <name6> :
<name1> が <val6> と等しくかつ <name3> が <val6> と等しいとき、	if <name1> == <val6> and <name3> == <val6> :	continue == <val6> and <name3> == <val6> :
<name1> の <val3> 番目を <val4> だけ減少させる	<name1> [ <val3> ] -= <val4>	not <name1> [ <val3> ] -= <val4>
<name1> の <name4> の <name3> 番目を <val6> だけ増加させる	<name1> . <name4> [ <name3> ] += <val6>	<name2> . <name4> [ <name3> ] += <val6>
<name1> . <name5> ( <name2> , <name4> , <val6> )	<name1> . <name5> ( <name2> , <name4> , <val6> )	<name2> . <name5> ( <name2> , <name4> , <val6> )
( ( <val5> ) からなる列の <val5> から <val1> 未満までの数列の各要素を <name3> とし、 <val1> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val5> ] * [ <val1> for <name3> in range ( <val1> ) ] ]	<name6> = [ [ <val5> ] * [ <val1> for <name3> in range ( <val1> ) ] ]
<name2> ( <name5> , <name6> ) を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name2> ( <name5> , <name6> )	<name3> , <name1> = <name2> ( <name5> , <name6> )
( <name6> の <name3> の <name2> ) からなる列の <name1> の <name5> 回分の列を <name1> の <name4> にする	<name1> . <name4> = [ <name6> . <name3> . <name2> ] * <name1> . <name5>	<name3> . <name1> . <name4> = [ <name6> . <name3> . <name2> ] * <name1> . <name5>
<val2> に <name4> の文字列を加えた値を出力する	print ( <val2> + str ( <name4> ) )	print ( <val2> + str ( <name4> ) )
<name4> の <name1> 番目の末尾に ( <name6> 、 <name2> 、 <name3> ) の組を追加する	<name4> [ <name1> ] . append ( ( <name6> , <name2> , <name3> ) )	<name4> [ <name1> ] . append ( ( <name6> , <name2> , <name3> ) )
<name6> の先頭を <name3> にソート順で挿入する	insort_left ( <name3> , <name6> [ 0 ] )	bisect . insort_left ( <name3> , <name6> [ 0 ] )
<name1> . <name3> ( <name2> , <name4> , <name5> , <name6> , <name1> , <name3> ) を返す	return <name1> . <name3> ( <name2> , <name4> , <name5> , <name6> , <name1> , <name3> )	return <name1> . <name3> ( <name2> , <name4> , <name5> , <name6> , <name1> , <name3> )
<name2> の <name3> に <val5> を加えた値番目、 <name2> の <name3> 番目を <name2> の <name3> 番目、 <name2> の <name3> に <val5> を加えた値番目とする	<name2> [ <name3> ] , <name2> [ <name3> + <val5> ] = <name2> [ <name3> + <val5> ] , <name2> [ <name3> ]	<name2> [ <name3> ] , <name2> [ <name3> + <val5> ] = <name2> [ <name3> + <val5> ] , <name2> [ <name3> ]
0 に <val4> を掛けた値の各要素を <name2> とし、、つまり入力された文字列の整数値の列の総和を出力する	print ( sum ( [ int ( input ( ) ) for <name2> in '0' * <val4> ] ) )	print ( sum ( [ int ( input ( ) ) for <name2> in '0' * <val4> ] ) )
<name5> が <name2> と等しいとき、	if <name5> == <name2> :	: if <name5> == <name2> :
( <val3> ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ <val3> ] * <name2>	<name1> = [ <val3> ] * <name2>
<name1> から <name2> を引いた値に <name3> を掛けた値から <name5> から <name6> を引いた値に <name4> を掛けた値を引いた値を <name4> とする	<name4> = ( <name1> - <name2> ) * <name3> - ( <name5> - <name6> ) * <name4>	<name4> = ( <name1> - <name2> ) * <name3> - ( <name5> - <name6> ) * <name4>
<name2> の <name1> 番目と <val3> の論理積のとき、	if <name2> [ <name1> ] & <val3> :	if <name2> [ <name1> ] & <val3> :
<name5> の <name2> から <name4> を引いた値番目を <name6> とする	<name6> = <name5> [ <name2> - <name4> ]	else = <name5> [ <name2> - <name4> ]
<name5> を <val6> で分割した字句列を <name5> とする	<name5> = <name5> . split ( <val6> )	else = <name5> . split ( <val6> )
<name2> の <name4> 番目が <name1> と等しいとき、	if <name2> [ <name4> ] == <name1> :	continue if <name2> [ <name4> ] == <name1> :
<name5> の <val1> 番目を <val6> だけ増加させる	<name5> [ <val1> ] += <val6>	( <name5> [ <val1> ] += <val6> )
<name4> の <name5> の <name6> に <val1> を加えた値番目の <name2> 番目に <name4> の <name3> の <name6> に <val1> を加えた値番目の <name2> に <val1> を加えた値番目を <name4> で割った余りを加えた値を <name4> の <name5> の <name6> に <val1> を加えた値番目の <name2> に <val1> を加えた値番目にする	<name4> . <name5> [ <name6> + <val1> ] [ <name2> + <val1> ] = <name4> . <name5> [ <name6> + <val1> ] [ <name2> ] + <name4> . <name3> [ <name6> + <val1> ] [ <name2> + <val1> ] % <name4>	<name2> . <name5> [ <name6> + <val1> ] [ <name2> + <val1> ] = <name4> . <name5> [ <name6> + <val1> ] [ <name2> ] + <name4> . <name3> [ <name6> + <val1> ] [ <name2> + <val1> ] % <name4> . <name4>
<name1> の <val6> 番目、 <name5> の最小値を <name4> とする	<name4> = min ( <name1> [ <val6> ] , <name5> )	<name4> = min ( <name1> [ <val6> ] , <name5> )
<val3> を <name2> として <name6> の整数値に <val3> を <name2> として <name1> の整数値を加えた値が <val3> を <name2> として <name5> の整数値と等しいとき、	if int ( <name6> , <name2> = <val3> ) + int ( <name1> , <name2> = <val3> ) == int ( <name5> , <name2> = <val3> ) :	print ( int ( <name6> ) , <name2> = <val3> , <name2> = <val3> ) + <val3> : int ( <name5> , <name2> ) :
<name5> モジュールを用いる	from <name5> import Decimal	from <name5> , Counter
逆順に <name6> をソートした列を <name4> とする	<name4> = sorted ( <name6> , reverse = True )	<name4> = sorted ( <name6> , reverse = True )
<name5> から <name4> を引いた値の <val3> 乗に <name1> から <name6> を引いた値の <val3> 乗を加えた値の <val2> 乗を <name2> とする	<name2> = pow ( ( <name5> - <name4> ) ** <val3> + ( <name1> - <name6> ) ** <val3> , <val2> )	<name2> = ( ( <name5> - <name4> ) ** <val3> + ( <name1> - <name6> ) ** <val3> ) ** <val2>
<name4> の <name3> が <val2> より大きくかつ <name6> の <name4> の <name1> 番目が <val2> より小さいとき、	if <name4> . <name3> > <val2> and <name6> [ <name4> . <name1> ] < <val2> :	for <name4> . <name3> > <val2> and <name6> . <name4> [ <name1> ] < <val2> :
<name3> の <name4> 番目を <val2> だけ増加させる	<name3> [ <name4> ] += <val2>	( <name3> [ <name4> ] += <val2> )
0 から <name2> に <val3> を加えた値、 <name1> の長さの最小値未満までの数列の各要素を <name5> とし、 <name6> の <name2> から <name5> を引いた値番目に <name1> の <name5> 番目を加えた値の列の最大値を <name3> の <name4> 番目の <name2> 番目にする	<name3> [ <name4> ] [ <name2> ] = max ( [ <name6> [ <name2> - <name5> ] + <name1> [ <name5> ] for <name5> in range ( min ( <name2> + <val3> , len ( <name1> ) ) ) ] )	else [ <name3> ] [ <name2> ] = max ( [ <name6> [ <name2> - <name5> ] + <name1> [ <name5> ] for <name5> in range ( min ( <name2> + <val3> , len ( <name1> ) ) ) ] )
<name5> の <val6> 番目が <name5> の <val2> 番目より大きくかつ <name5> の <val2> 番目が <name5> の先頭より大きいとき、	if <name5> [ <val6> ] > <name5> [ <val2> ] and <name5> [ <val2> ] > <name5> [ 0 ] :	list ( <name5> [ <val6> ] > <name5> [ <val2> ] and <name5> [ <val2> ] > <name5> [ <val6> ] ) :
<val3> から <name4> 未満までの数列の各要素を <name6> とし、 <val3> から <val5> 未満までの数列の各要素を <name2> とし、 <val3> の列の列を <name1> とする	<name1> = [ [ <val3> for <name2> in range ( <val5> ) ] for <name6> in range ( <name4> ) ]	<name1> = [ [ <val3> for <name2> in range ( <val5> ) ] for <name6> in range ( <name4> ) ]
<name6> の <name5> 番目の <name3> 番目、 <name6> の <name5> 番目の <name1> 番目に <name6> の <name1> + <val4> 番目の <name3> 番目を加えた値に <name2> の <name5> -1 番目に <name2> の <name1> 番目を掛けた値に <name2> の <name3> 番目を掛けた値を加えた値の最小値を <name6> の <name5> 番目の <name3> 番目にする	<name6> [ <name5> ] [ <name3> ] = min ( <name6> [ <name5> ] [ <name3> ] , <name6> [ <name5> ] [ <name1> ] + <name6> [ <name1> + <val4> ] [ <name3> ] + <name2> [ <name5> - <val4> ] * <name2> [ <name1> ] * <name2> [ <name3> ] )	<name2> [ <name5> ] [ <name3> ] = min ( <name6> [ <name5> ] [ <name3> ] , <name6> [ <name5> ] [ <name1> ] + <name6> [ <name1> + <val4> ] [ <name3> ] + <name2> [ <name5> - <val4> ] * <name2> [ <name1> ] * <name2> [ <name3> ] )
<name3> の <name1> 番目が <name3> の <name1> に <val5> を加えた値番目と等しくないとき、	if <name3> [ <name1> ] != <name3> [ <name1> + <val5> ] :	[ if <name3> [ <name1> ] != <name3> [ <name1> + <val5> ] :
区切りなしで改行せずに <val4> を出力する	print ( <val4> , sep = '' , end = '' )	print ( <val4> , sep = '' , end = '' )
\ <name6> ( <val5> % <name4> ) \	\ <name6> ( <val5> % <name4> ) \	*= <name6> ( <val5> % <name4> ) \
<name6> の <name2> 番目、 <name6> の <name3> 番目を <name6> の <name3> 番目、 <name6> の <name2> 番目とする	<name6> [ <name3> ] , <name6> [ <name2> ] = <name6> [ <name2> ] , <name6> [ <name3> ]	<name6> [ <name3> ] , <name6> [ <name2> ] = <name6> [ <name2> ] , <name6> [ <name3> ]
<name2> が <name6> に含まれないとき、	if <name2> not in <name6> :	while <name2> not in <name6> :
<name6> の <name4> の <name1> の <name2> 番目に <name5> の <name3> を加えた値が <name6> の <name4> の <name5> の <name6> 番目より小さいとき、	if <name6> . <name4> [ <name1> . <name2> ] + <name5> . <name3> < <name6> . <name4> [ <name5> . <name6> ] :	isinstance ( <name6> . <name4> [ <name1> . <name2> ] + <name5> . <name3> < <name6> . <name4> [ <name5> . <name6> ] ) :
<name3> の、つまり先頭から <name1> 番目までの部分列を <name5> とする	<name5> = <name3> [ 0 : <name1> ]	else = <name3> [ : <name1> ]
<name3> を <name6> に <name1> を加えた値だけ増加させる	<name3> += ( <name6> + <name1> )	<name1> += <name3> ( <name6> + <name1> )
<name4> ( <val1> ) をキーとして <name3> をソートした列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in sorted ( <name3> , key = <name4> ( <val1> ) ) :	. for <name5> , <name2> in sorted ( <name3> , key = <name4> ( <val1> ) ) :
<name3> ( <name2> / <name4> ) を <name1> とする	<name1> = <name3> ( <name2> / <name4> )	<name1> = <name3> ( <name2> / <name4> )
<name1> の <name6> を <name4> の <name2> にする	<name4> . <name2> = <name1> . <name6>	<name1> . <name2> = <name1> . <name6>
<name3> を <name6> を <val2> で割った商だけ増加させる	<name3> += <name6> // <val2>	( <name3> += <name6> // <val2> )
<name5> の <val3> 乗が <name4> と等しくないとき、	if <name5> ** <val3> != <name4> :	: if <name5> ** <val3> != <name4> :
<name4> でなくまたは <name5> でなくなければならない	assert not <name4> or not <name5>	print ( not <name4> or not <name5> )
os . <name6> の <name1> 番目を <name2> だけ増加させる	<name6> [ <name1> ] += <name2>	( <name6> [ <name1> ] += <name2> )
<name3> ( <name5> , <name6> + <val4> )	<name3> ( <name5> , <name6> + <val4> )	<name4> ( <name5> , <name6> + <val4> )
<name6> の <name4> 番目が -1 と等しくなくかつ <name5> ( <name6> [ <name4> ] )	<name6> [ <name4> ] != - 1 and <name5> ( <name6> [ <name4> ] )	<name2> [ <name4> ] != - 1 and <name5> ( <name6> [ <name4> ] )
<name5> に番号付した組の列を順に <name2> 、 <name1> 、 <name3> として、繰り返す	for <name2> , <name1> , <name3> in enumerate ( <name5> ) :	for <name2> , <name1> , <name3> in enumerate ( <name5> ) :
<name3> <name1> .	<name3> <name1> .	<name4> <name3> <name1> .
<name3> の <name6> 番目の総和を <name5> で割った余りを出力する	print ( sum ( <name3> [ <name6> ] ) % <name5> )	end = sum ( <name3> [ <name6> ] ) % <name5> )
<name2> の先頭を現在の日時とする	now = <name2> [ 0 ]	now = <name2> [ 0 ]
( ( <val1> の浮動小数点数 ) からなる列の 0 から <name3> の長さ未満までの数列の各要素を <name4> とし、 <name6> の長さの列回分の列 ) からなる列を <name2> とする	<name2> = [ [ float ( <val1> ) ] * [ ( len ( <name6> ) ) for <name4> in range ( len ( <name3> ) ) ] ]	<name2> = [ [ float ( <val1> ) ] * [ len ( <name6> ) for <name4> in range ( len ( <name3> ) ) ] ]
<name3> の先頭、 <name3> の <val1> 番目、 <name3> の <val4> 番目、 <name3> の <val5> 番目、 <name3> の <val2> 番目、 <name3> の <val6> 番目を <name3> の先頭、 <name3> の <val1> 番目、 <name3> の <val4> 番目、 <name3> の <val5> 番目、 <name3> の <val2> 番目、 <name3> の <val6> 番目とする	<name3> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ <val2> ] , <name3> [ <val6> ] = <name3> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ <val2> ] , <name3> [ <val6> ]	<name1> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ <val2> ] , <name3> [ <val6> ] = <name3> [ 0 ] , <name3> [ <val1> ] , <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ <val2> ] , <name3> [ <val6> ]
<val1> を <name6> の <val2> 番目にする	<name6> [ <val2> ] = <val1>	( <name6> [ <val2> ] = <val1> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name6> 、 <name3> 、 <name1> とする	<name4> , <name6> , <name3> , <name1> = map ( int , input ( ) . split ( ) )	<name6> , <name3> , <name1> = map ( int , input ( ) . split ( ) )
<name3> の末尾のコピーされた列を <name1> とする	<name1> = <name3> [ - 1 ] [ : ]	<name1> = <name3> [ - 1 ] [ : ]
( <name1> の <name5> の <name2> 番目、 <name1> の <name5> の <name2> 番目に <name1> の <name3> の <name2> 番目を加えた値 ) の組を返す	return ( <name1> . <name5> [ <name2> ] , <name1> . <name5> [ <name2> ] + <name1> . <name3> [ <name2> ] )	yield ( <name1> . <name5> [ <name2> ] , <name1> . <name5> [ <name2> ] + <name1> . <name3> [ <name2> ] )
<name1> の <name2> から <val4> を引いた値番目の <name6> 番目が <val5> と等しいとき、	if <name1> [ <name2> - <val4> ] [ <name6> ] == <val5> :	for <name1> [ <name2> - <val4> ] [ <name6> ] == <val5> :
<name3> の <val4> 番目のとき ( <name1> 、 <name3> ) の組、そうでなければ ( <name3> 、 <name1> ) の組を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = ( <name1> , <name3> ) if <name3> [ <val4> ] else ( <name3> , <name1> )	<name2> , <name5> = ( <name1> , <name3> ) if <name3> [ <val4> ] else ( <name3> , <name1> )
( ( 、つまり偽 ) からなる列の <val5> から <name2> の長さ未満までの数列の各要素を <name6> とし、 <name2> の先頭の長さの列回分の列 ) からなる列を <name3> とする	<name3> = [ [ False ] * [ len ( <name2> [ <val5> ] ) for <name6> in range ( len ( <name2> ) ) ] ]	else = [ [ False ] * [ len ( <name2> [ <val6> ] ) for <name6> in range ( len ( <name2> ) ) ] ]
<name1> の <name5> から <val4> を引いた値番目を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <name1> [ <name5> - <val4> ]	( <name1> [ <name5> ] = <name1> [ <name5> - <val4> ] )
<val2> を書式として <val6> を間に入れて <name1> の各要素に整数を適用した列を連結した文字列で整形した文字列を出力する	print ( <val2> . format ( <val6> . join ( map ( str , <name1> ) ) ) )	<val3> print ( <val2> . format ( <val6> . join ( map ( str , <name1> ) ) ) )
<name2> と <name6> の論理積の <val1> 進数文字列の <val1> 番目から、つまり末尾までの部分列を長さ <val3> になるように '0' 左詰めした文字列を出力する	print ( bin ( <name2> & <name6> ) [ <val1> : ] . zfill ( <val3> ) )	print ( bin ( <name2> & <name6> ) [ <val1> : ] . zfill ( <val3> ) )
<name6> が <name4> の <val3> 番目と等しいとき、	if <name6> == <name4> [ <val3> ] :	> <name6> == <name4> [ <val3> ] :
( <val5> ) からなる列を <name3> の <val2> 番目にする	<name3> [ <val2> ] = [ <val5> ]	<name3> [ <val2> ] = [ <val5> ]
<name3> ( <name4> . <name6> ) を <name1> とする	<name1> = <name3> ( <name4> . <name6> )	<name1> = <name3> ( <name4> . <name6> )
<name1> 、 <name5> の要素をそれぞれ組にした列を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in zip ( <name1> , <name5> ) :	. for <name3> , <name6> in zip ( <name1> , <name5> ) :
<name5> が <val3> と等しくないとき、	if <name5> != <val3> :	for if <name5> != <val3> :
Case {} : を書式として <name3> で整形した文字列を出力する	print ( 'Case {}:' . format ( <name3> ) )	print ( 'Case {}:' . format ( <name3> ) )
<name1> の先頭を取り出した値を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name1> . pop ( )	<name2> , <name4> , <name5> = <name1> . pop ( )
. を <name2> の <name4> 番目の <name1> 番目にする	<name2> [ <name4> ] [ <name1> ] = '.'	( <name2> [ <name4> ] [ <name1> ] = '.' )
<name3> の <val2> 番目を <val6> だけ増加させる	<name3> [ <val2> ] += <val6>	<val2> <name3> [ <val2> ] += <val6>
<name2> ( <name3> , <name5> , <name6> ) が <name1> と等しくない間、次を繰り返す	while <name2> ( <name3> , <name5> , <name6> ) != <name1> :	for <name2> in <name2> ( <name3> , <name5> , <name6> ) != <name1> :
<name5> の末尾に <name2> の <name4> から <val3> を引いた値に <name6> に <val3> を加えた値を掛けた値番目を追加する	<name5> . append ( <name2> [ ( <name4> - <val3> ) * ( <name6> + <val3> ) ] )	<name2> . append ( <name2> [ ( <name4> - <val3> ) * ( <name6> + <val3> ) ] )
<name1> ( <name5> ) を展開し、それぞれ <name2> 、 <name3> 、 <name4> とする	<name2> , <name3> , <name4> = <name1> ( <name5> )	<name2> , <name3> , <name4> = <name1> ( <name5> )
<name5> と <name2> の共通部分の長さを出力する	print ( len ( <name5> . intersection ( <name2> ) ) )	print ( len ( <name5> . intersection ( <name2> ) ) )
( <name3> 、 <name1> 、 <name2> 、 <name6> ) の組を <name5> とする	<name5> = ( <name3> , <name1> , <name2> , <name6> )	) <name5> = ( <name3> , <name1> , <name2> , <name6> )
( <val5> 、 <val4> 、 <val1> 、 <val3> 、 <val2> 、 <val6> ) からなる列を <name6> とする	<name6> = [ <val5> , <val4> , <val1> , <val3> , <val2> , <val6> ]	<name6> = [ <val5> , <val4> , <val1> , <val3> , <val2> , <val6> ]
<name5> の平方根を <name4> とする	<name4> = math . sqrt ( <name5> )	<name2> <name4> = math . sqrt ( <name5> )
<name4> の <name5> が <name2> より大きいとき、	if <name4> . <name5> > <name2> :	list if <name4> . <name5> > <name2> :
<name2> の <name4> 番目が <val5> と等しいとき、	if <name2> [ <name4> ] == <val5> :	continue if <name2> [ <name4> ] == <val5> :
( <val6> 、 <val5> 、 <val2> 、 <val3> 、 <val1> 、 <val4> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val6> , <val5> , <val2> , <val3> , <val1> , <val4> , <val6> ]	<name4> = [ <val6> , <val5> , <val2> , <val3> , <val1> , <val4> , <val6> ]
<val5> から <name6> に <val5> を加えた値未満までの数列を <name4> とする	<name4> = range ( <val5> , <name6> + <val5> )	<name4> = range ( <val5> , <name6> + <val5> )
<name5> の <name2> 番目を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name5> [ <name2> ]	<name2> , <name1> = <name5> [ <name2> ]
<name6> と - <name6> の論理積を <name2> とする	<name2> = <name6> & - <name6>	( <name2> = <name6> & - <name6> )
{ : . 6 f }を書式として <name3> で整形した文字列を出力する	print ( '{:.6f}' . format ( <name3> ) )	print ( '{:.6f}' . format ( <name3> ) )
<name2> の各要素を <name5> とし、 <name5> の文字列の列を <name1> とする	<name1> = [ str ( <name5> ) for <name5> in <name2> ]	<name1> = [ str ( <name5> ) for <name5> in <name2> ]
<name5> の <name2> の <name4> 番目が <name5> の <name2> の <name3> 番目より大きいとき、	if <name5> . <name2> [ <name4> ] > <name5> . <name2> [ <name3> ] :	if <name5> . <name2> [ <name4> ] > <name5> . <name2> [ <name3> ] :
<name2> の <val5> に <name4> を掛けた値から <val5> に <name4> を掛けた値に <val5> を加えた値までの部分列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name2> [ <val5> * <name4> : <val5> * <name4> + <val5> ]	<name6> = <name2> [ <val5> * <name4> : <val5> * <name4> + <val5> ]
<name4> が <val5> 以下のとき、 <blk> 何も返さない </blk>	if <name4> <= <val5> : <blk> return </blk>	\ if <name4> <= <val5> : <blk> return </blk>
<name1> ( <name5> , ( <name2> , <name3> , <name4> , <name6> , <name1> + <val5> ) )	<name1> ( <name5> , ( <name2> , <name3> , <name4> , <name6> , <name1> + <val5> ) )	<name1> ( <name5> , ( <name2> , <name3> , <name4> , <name6> , <name1> + <val5> ) )
<name5> に <name5> を掛けた値から <name3> 未満までの <name5> に <name5> を掛けた値間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> * <name5> , <name3> , <name5> * <name5> ) :	) for <name1> in range ( <name5> * <name5> , <name3> , <name5> * <name5> ) :
<name4> の <name1> 番目の <name2> 番目に <name4> の <name2> 番目の <name6> 番目を加えた値を <name4> の <name1> 番目の <name6> 番目にする	<name4> [ <name1> ] [ <name6> ] = <name4> [ <name1> ] [ <name2> ] + <name4> [ <name2> ] [ <name6> ]	( <name4> [ <name1> ] [ <name6> ] = <name4> [ <name1> ] [ <name2> ] + <name4> [ <name2> ] [ <name6> ] )
[ MASK ] において正規表現 <name1> が最初にマッチする位置を出力する	print ( search ( <name1> ) )	print ( search ( <name1> ) )
<name1> のとき、 <blk> <name5> を <val4> だけ減少させる </blk>	if <name1> : <blk> <name5> -= <val4> </blk>	<blk> if <name1> : <blk> <name5> -= <val4> </blk>
<name4> に <name5> を掛けた値、 <name3> に <name5> を掛けた値に <val6> を掛けた値の最小値に <name2> / <val1> の切り上げ整数値に <name4> を掛けた値、 <name2> / <val4> の切り上げ整数値に <name3> を掛けた値の最小値を加えた値を出力する	print ( min ( <name4> * <name5> , <name3> * <name5> * <val6> ) + min ( math . ceil ( <name2> / <val1> ) * <name4> , math . ceil ( <name2> / <val4> ) * <name3> ) )	[ print ( min ( <name4> * <name5> ) , min ( <name3> * <name5> * <val6> + min ( <name2> / <val1> ) + <name4> * math . ceil ( <name2> / <val4> ) * <name3> ) )
<name3> を <val2> だけ増加させる <name5> を <val2> だけ増加させる	<name3> += <val2> <name5> += <val2>	<name3> += <val2> <name5> += <val2>
( <name3> 、 <name4> 、 <name1> ) の組が <name6> に含まれなくまたは <name6> の ( <name3> 、 <name4> 、 <name1> ) の組番目が <name2> より大きいとき、	if ( <name3> , <name4> , <name1> ) not in <name6> or <name6> [ ( <name3> , <name4> , <name1> ) ] > <name2> :	for <name6> in ( <name3> , <name4> , <name1> ) not in <name6> or <name6> [ ( <name3> , <name4> , <name1> ) ] > <name2> :
<name5> に <name6> を加えた値から <name4> の <name2> 番目を引いた値を <name3> とするを <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name3> = <name5> + <name6> - <name4> [ <name2> ]	<name1> [ <name2> ] = <name3> = <name5> + <name6> - <name4> [ <name2> ]
( 、つまり偽 ) からなる列の <name1> の <name4> 回分の列を <name5> とする	<name5> = [ False ] * <name1> . <name4>	<name5> = [ False ] * <name1> . <name4>
( <name4> 、 <name4> 、 <name3> 、 <name3> ) の組を <name5> の <name2> 番目にする	<name5> [ <name2> ] = ( <name4> , <name4> , <name3> , <name3> )	<name2> [ <name2> ] = ( <name4> , <name4> , <name3> , <name3> )
<name4> と <name5> の和集合を <name2> とする	<name2> = <name4> . union ( <name5> )	set = <name4> . union ( <name5> )
<val6> を間に入れて <name4> を連結した文字列を <name4> とする	<name4> = <val6> . join ( <name4> )	<name4> = <val6> . join ( <name4> )
<name3> の長さが <val2> と等しくかつ <name6> が <val2> と等しいとき、	if len ( <name3> ) == <val2> and <name6> == <val2> :	continue len ( <name3> ) == <val2> and <name6> == <val2> :
<name5> の末尾に <name1> 、 <name3> から <val2> を引いた値、 <name4> の総和を追加する	<name5> . append ( <name1> . sum ( <name3> - <val2> , <name4> ) )	<name5> . append ( <name1> . sum ( <name3> - <val2> , <name4> ) )
<name4> を展開し、それぞれ <name5> 、 <name1> 、 <name6> とする	<name5> , <name1> , <name6> = <name4>	<name6> , <name1> , <name6> = <name4>
<name1> ( <name3> ) のとき、 <blk> <name3> を出力する <sep> 繰り返しを中断する </blk>	if <name1> ( <name3> ) : <blk> print ( <name3> ) <sep> break </blk>	<blk> if <name1> ( <name3> ) : <blk> print ( <name3> ) <sep> break </blk>
<name2> の <name1> 番目の <name5> 番目を順に <name5> 、 <name6> 、 <name4> 、 <name3> として、繰り返す	for <name5> , <name6> , <name4> , <name3> in <name2> [ <name1> ] [ <name5> ] :	for <name5> , <name6> , <name4> , <name3> in <name2> [ <name1> ] [ <name5> ] :
<name2> の <name3> 番目に <name6> を加えた値が <name2> の <name5> 番目より小さいとき、	if <name2> [ <name3> ] + <name6> < <name2> [ <name5> ] :	for <name2> [ <name3> ] + <name6> < <name2> [ <name5> ] :
<val5> から <name1> 未満までの数列の各要素を <name6> とし、 <val5> から <name1> 未満までの数列の各要素を <name3> とし、 <val5> の列の列を <name2> とする	<name2> = [ [ <val5> for <name3> in range ( <name1> ) ] for <name6> in range ( <name1> ) ]	<name6> = [ [ <val5> for <name3> in range ( <name1> ) ] for <name6> in range ( <name1> ) ]
<name6> ( <name3> , <name4> , <name2> ) を <name1> とする	<name1> = <name6> ( <name3> , <name4> , <name2> )	<name1> = <name6> ( <name3> , <name4> , <name2> )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name4> 、 <name2> とする	<name5> , <name4> , <name2> = input ( ) . split ( )	<name4> , <name2> = input ( ) . split ( )
<name6> の <name4> から <val1> を引いた値番目の末尾に <name2> から <val1> を引いた値を追加する	<name6> [ <name4> - <val1> ] . append ( <name2> - <val1> )	<name1> [ <name4> - <val1> ] . append ( <name2> - <val1> )
\ <name6> ( <val4> % ( <name1> + <name5> + ( <name3> - <name2> ) ) ) \	\ <name6> ( <val4> % ( <name1> + <name5> + ( <name3> - <name2> ) ) ) \	for <name6> ( <val4> % ( <name1> + <name5> + ( <name3> - <name2> ) ) ) \
<name4> の末尾に <name2> ( <name5> , <name1> , <name3> ) を追加する	<name4> . append ( <name2> ( <name5> , <name1> , <name3> ) )	<name4> . append ( <name2> ( <name5> , <name1> , <name3> ) )
<name6> の <name5> の <name1> に <val3> を加えた値番目の <name4> に <val3> を加えた値番目を <name6> の <name2> で割った余りにする	<name6> . <name5> [ <name1> + <val3> ] [ <name4> + <val3> ] % = <name6> . <name2>	<name6> . <name5> [ <name1> + <val3> ] [ <name4> + <val3> ] % = <name6> . <name2>
<name6> を <name1> の <name4> 番目の <name3> 番目にする	<name1> [ <name4> ] [ <name3> ] = <name6>	( <name1> [ <name4> ] [ <name3> ] = <name6> )
<name4> が <name5> の長さより大きいとき、	if <name4> > len ( <name5> ) :	> <name4> > len ( <name5> ) :
集合を <name1> の <name6> 番目にする	<name1> [ <name6> ] = set ( )	not <name1> [ <name6> ] = set ( )
<name2> の <name6> を <val1> を <name5> の整数値だけ左シフトした値との論理和にする	<name2> . <name6> | = <val1> << int ( <name5> )	pow ( <name2> . <name6> << = <val1> << int ( <name5> ) )
<name6> . <name4> ( <name2> , <name5> ) の絶対値が <name6> の <name1> より小さいかどうかを返す	return abs ( <name6> . <name4> ( <name2> , <name5> ) ) < <name6> . <name1>	x return abs ( <name6> . <name4> ( <name2> , <name5> ) ) < <name6> . <name1>
<name6> を <val1> で分割した字句列を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = <name6> . split ( <val1> )	<name2> , <name3> , <name6> = <name6> . split ( <val1> )
0 から <name6> に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> + <val4> ) :	for <name2> in range ( <name6> + <val4> ) :
<name5> ( <name1> ) に <val4> を加えた値に <name2> の文字列を加えた値に <val3> を加えた値に <name6> の文字列を加えた値を出力する	print ( <name5> ( <name1> ) + <val4> + <name5> ( <name2> ) + <val3> + <name5> ( <name6> ) )	[ print ( <name5> ( <name1> ) + <val4> + <name5> ( <name2> ) ) + <val3> + <name5> ( <name6> ) )
<name5> の -3 番目を出力する	print ( <name5> [ - 3 ] )	print ( <name5> [ - 3 ] )
( <val4> ) からなる列の <val5> 回分の列を <name6> とする	<name6> = [ <val4> ] * <val5>	<name6> = [ <val4> ] * <val5>
<val2> を <name6> の <name5> 番目だけ左シフトした値を <name1> とする	<name1> = ( <val2> << <name6> [ <name5> ] )	<name1> = <val2> << <name6> [ <name5> ]
<name1> ( <name4> , <name2> ) を <name5> の <name3> にする	<name5> . <name3> = <name1> ( <name4> , <name2> )	<name1> . <name3> = <name1> ( <name4> , <name2> )
<name1> の末尾に <name6> に <name4> に <name5> を掛けた値を加えた値を追加する	<name1> . append ( <name6> + <name4> * <name5> )	<name1> . append ( <name6> + <name4> * <name5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> 、 <name2> 、 <name1> 、 <name3> とする	<name6> , <name5> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )	<name5> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )
<name6> が <val4> と等しいとき、 <blk> <name3> の先頭を返す </blk>	if <name6> == <val4> : <blk> return <name3> [ 0 ] </blk>	if <name6> == <val4> : <blk> return <name3> [ 0 ] </blk>
<name5> の <name6> の <name2> 番目を <name4> とする	<name4> = <name5> . <name6> [ <name2> ]	readlines <name4> = <name5> . <name6> [ <name2> ]
<name6> 内の <val1> の出現回数が <name6> 内の <val4> の出現回数と等しくなくまたは <name6> 内の <val5> の出現回数が <name6> 内の <val2> の出現回数と等しくないとき、	if <name6> . count ( <val1> ) != <name6> . count ( <val4> ) or <name6> . count ( <val5> ) != <name6> . count ( <val2> ) :	for <name6> in <name6> . count ( <val1> ) != <name6> . count ( <val4> ) or <name6> . count ( <val5> ) != <name6> . count ( <val2> ) :
<val5> に <name6> を掛けた値に <val4> を加えた値が <name3> に <val5> を掛けた値より小さいとき、	if <val5> * <name6> + <val4> < <name3> * <val5> :	for <name3> in <val5> * <name6> + <val4> < <name3> * <val5> :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name2> 、 <name1> 、 <name6> とする	<name2> , <name1> , <name6> = input ( ) . split ( )	<name2> , <name1> , <name6> = input ( ) . split ( )
<name3> の <name1> -1 番目の <name4> から <val6> を引いた値番目が -1 と等しくないとき <name3> の <name1> から <val6> を引いた値番目の <name4> から <val6> を引いた値番目、そうでなければ <val5> を出力する	print ( <name3> [ <name1> - <val6> ] [ <name4> - <val6> ] if <name3> [ <name1> - <val6> ] [ <name4> - <val6> ] != - <val6> else <val5> )	end = <name3> [ <name1> - <val6> ] [ <name4> - <val6> ] if <name3> [ <name1> - <val6> ] [ <name4> - <val6> ] != - <val6> else <val5> )
<val6> 、 <val3> 、 <val4> を <name2> 、 <name1> 、 <name5> とする	<name2> , <name1> , <name5> = <val6> , <val3> , <val4>	[ <name2> , <name1> , <name5> = <val6> , <val3> , <val4>
<name4> が <val1> <name2> <val3> より小さいとき、	if <name4> < <val1> <name2> <val3> :	while <name4> < <val1> <name2> <val3> :
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name2> の <name3> から <val6> を引いた値番目の <name1> 番目を <val6> だけ増加させる	<name2> [ <name3> - <val6> ] [ <name1> ] += <val6>	[ <name2> [ <name3> - <val6> ] [ <name1> ] += <val6>
<name6> . <name3> ( <name1> ) を <name5> とする	<name5> = <name6> . <name3> ( <name1> )	else = <name6> . <name3> ( <name1> )
<name5> が <val4> 以上のとき、 <blk> <name6> の <val3> 番目を <val2> だけ増加させる </blk>	if <name5> >= <val4> : <blk> <name6> [ <val3> ] += <val2> </blk>	: if <name5> >= <val4> : <blk> <name6> [ <val3> ] += <val2> </blk>
<name1> を <name2> の <name6> 番目の <val4> 番目にする	<name2> [ <name6> ] [ <val4> ] = <name1>	( <name2> [ <name6> ] [ <val4> ] = <name1> )
<val2> を <name4> の <name6> に <name3> を掛けた値番目にする	<name4> [ <name6> * <name3> ] = <val2>	<name4> [ <name6> * <name3> ] = <val2>
<name4> ( <name5> . <name2> , <val3> ) を <name1> とする	<name1> = <name4> ( <name5> . <name2> , <val3> )	<name1> = <name4> ( <name5> . <name2> , <val3> )
<name6> または <name5> ( <name1> ) を <name6> とする	<name6> = <name6> or <name5> ( <name1> )	( <name6> = <name6> or <name5> ( <name1> ) )
<name5> ( <name4> . <name3> [ <val6> : ] )	<name5> ( <name4> . <name3> [ <val6> : ] )	<name5> ( <name4> . <name3> [ <val6> : ] )
<name1> の間、次を繰り返す <blk> <name1> 、 <name6> を <name1> で割った余りを <name6> 、 <name1> とする </blk>	while <name1> : <blk> <name6> , <name1> = <name1> , <name6> % <name1> </blk>	: while <name1> : <blk> <name6> , <name1> = <name1> , <name6> % <name1> </blk>
<name6> が <name5> と等しくまたは <name6> が <val1> と等しくかつ <name2> の <val1> 番目が <name4> より大きいとき、	if ( <name6> == <name5> ) or ( <name6> == <val1> and <name2> [ <val1> ] > <name4> ) :	list ( <name6> == <name5> or <name6> == <val1> and <name2> [ <val1> ] > <name4> ) :
<name4> を <name6> を <val2> で割った商だけ増加させる	<name4> += <name6> // <val2>	<name1> += <name4> // <name6> // <val2>
-10 の <val6> 乗を <name5> とする	<name5> = - 10 ** <val6>	<name5> = - 10 ** <val6>
<name5> に <name5> を掛けた値が <name3> より大きいとき、	if <name5> * <name5> > <name3> :	if <name5> * <name5> > <name3> :
<name3> の <val1> 番目から、つまり末尾までの部分列を順に <name4> として、繰り返す <blk> <name5> の末尾に <name4> を追加する </blk>	for <name4> in <name3> [ <val1> : ] : <blk> <name5> . append ( <name4> ) </blk>	for <name4> in <name3> [ <val1> : ] : <blk> <name5> . append ( <name4> ) </blk>
<name5> を <name3> の <name1> 番目に <name2> の <name4> 番目に <name6> を掛けた値に <name5> の <name4> 番目を加えた値を掛けた値だけ減少させる	<name5> -= <name3> [ <name1> ] * ( <name2> [ <name4> ] * <name6> + <name5> [ <name4> ] )	<name1> -= <name3> [ <name1> ] * ( <name2> [ <name4> ] * <name6> + <name5> [ <name4> ] )
<name3> の <name5> を返す	return <name3> . <name5>	yield <name3> . <name5>
<name4> から <name5> を引いた値の絶対値を <name1> とする	<name1> = abs ( <name4> - <name5> )	<name1> = abs ( <name4> - <name5> )
<name4> モジュールを用いる	from <name4> import lru_cache	return from <name4> import deque
<name1> の <name5> の <name6> から <name4> を引いた値番目の <name4> 番目を返す	return <name1> . <name5> [ <name6> - <name4> ] [ <name4> ]	yield <name1> . <name5> [ <name6> - <name4> ] [ <name4> ]
<name2> を <name1> の <name6> の <name3> 番目にする	<name1> . <name6> [ <name3> ] = <name2>	( <name1> [ <name6> . <name3> ] = <name2> )
<name3> の <name1> 番目を <name6> に <val5> から <name4> を引いた値を掛けた値に <name2> に <name3> の <name1> から <name2> を引いた値から <val5> を引いた値番目を加えた値を掛けた値だけ増加させる	<name3> [ <name1> ] += <name6> * ( <val5> - <name4> ) * ( <name2> + <name3> [ <name1> - <name2> - <val5> ] )	<name6> [ <name1> ] += <name6> * ( <val5> - <name4> ) + ( <name2> + <name3> [ <name1> - <name2> - <val5> ] )
<name3> . <name5> ( <name4> , <name6> , <name1> , <val2> )	<name3> . <name5> ( <name4> , <name6> , <name1> , <val2> )	<name5> . <name5> ( <name4> , <name6> , <name1> , <val2> )
<name2> . <name6> ( <name5> ) を <name1> とする	<name1> = <name2> . <name6> ( <name5> )	<name1> = <name2> . <name6> ( <name5> )
<name2> を <name3> の <name1> に <name5> を加えた値番目にする	<name3> [ <name1> + <name5> ] = <name2>	( <name3> [ <name1> + <name5> ] = <name2> )
<name6> の末尾に ( <name3> 、 <name5> 、 <name4> に <val1> を加えた値 ) の組を追加する	<name6> . append ( ( <name3> , <name5> , <name4> + <val1> ) )	<name4> . append ( ( <name3> , <name5> , <name4> + <val1> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを追加して <name2> を拡張する	<name2> . extend ( list ( map ( int , input ( ) . split ( ) ) ) )	<name4> . extend ( list ( map ( int , input ( ) . split ( ) ) ) )
<val5> を <name3> とする <name6> 、 <name2> の最小値に <val1> を加えた値を <name4> とする	<name3> = <val5> <name4> = min ( <name6> , <name2> ) + <val1>	else = <val5> <name4> = min ( <name6> , <name2> ) + <val1>
( <name6> 、 <name4> 、未定値 ) からなる列を <name2> とする	<name2> = [ <name6> , <name4> , None ]	<name6> = [ <name6> , <name4> , None ]
( ( <val5> の浮動小数点数 ) からなる列の 0 から <name3> の <name6> 未満までの数列の各要素を <name1> とし、 <name3> の <name6> の列回分の列 ) からなる列を <name3> の <name4> にする	<name3> . <name4> = [ [ float ( <val5> ) ] * [ <name3> . <name6> for <name1> in range ( <name3> . <name6> ) ] ]	<name4> = [ [ float ( <val5> ) ] * [ <name3> . <name6> for <name1> in range ( <name3> . <name6> ) ] ]
<val6> が <name2> から <name5> を引いた値以下のとき、	if <val6> <= <name2> - <name5> :	if <val6> <= <name2> - <name5> :
<name1> 、 <name4> の <name3> 番目から <name6> を引いた値の最大値を <name1> とする	<name1> = max ( <name1> , <name4> [ <name3> ] - <name6> )	<name1> = max ( <name1> , <name4> [ <name3> ] - <name6> )
<name4> の <name1> 番目を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = <name4> [ <name1> ]	<name2> , <name3> = <name4> [ <name1> ]
<name1> の先頭を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name1> [ 0 ]	( <name4> , <name3> = <name1> [ 0 ] )
<name6> の先頭の先頭を <name3> とする	<name3> = <name6> [ 0 ] [ 0 ]	( <name3> = <name6> [ 0 ] [ 0 ] )
<name1> ( <name4> ) を <name2> とする	<name2> = <name1> ( <name4> )	<name2> = <name1> ( <name4> )
<name4> が <val5> に <val3> に <name2> の末尾を掛けた値を加えた値より小さいとき、	if <name4> < <val5> + <val3> * <name2> [ - <val5> ] :	isinstance ( <name4> < <val5> + <val3> * <name2> [ - <val5> ] ) :
<name2> の先頭の先頭、 <name2> の先頭の <val5> 番目を出力する	print ( <name2> [ 0 ] [ 0 ] , <name2> [ 0 ] [ <val5> ] )	print ( <name2> [ 0 ] [ 0 ] , <name2> [ 0 ] [ <val5> ] )
<name5> の <name2> 番目を <name3> とする	<name3> = <name5> [ <name2> ]	else = <name5> [ <name2> ]
<name6> の <name2> から <name4> を引いた値番目に <name3> を加えた値を <name1> とする	<name1> = <name6> [ <name2> - <name4> ] + <name3>	<name1> = <name6> [ <name2> - <name4> ] + <name3>
<val3> の <name1> から <val2> を引いた値のビット長乗を <name6> の <name4> にする	<name6> . <name4> = <val3> ** ( ( <name1> - <val2> ) . bit_length ( ) )	<name4> = <val3> ** ( ( <name1> - <val2> ) . bit_length ( ) )
( <val5> ) からなる列の <name4> に <val5> を加えた値回分の列を <name6> とする ( <val5> ) からなる列の <name4> に <val5> を加えた値回分の列を <name3> とする	<name6> = [ <val5> ] * ( <name4> + <val5> ) <name3> = [ <val5> ] * ( <name4> + <val5> )	<name6> = [ <val5> ] * ( <name4> + <val5> ) <name3> = [ <val5> ] * ( <name4> + <val5> )
<name3> の <name2> 番目を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <name3> [ <name2> ]	<name1> [ <name5> ] = <name3> [ <name2> ]
<name1> ( <name4> . <name2> - <name4> . <name5> ) を <name3> とする	<name3> = <name1> ( <name4> . <name2> - <name4> . <name5> )	else = <name1> ( <name4> . <name2> - <name4> . <name5> )
( <val6> ) からなる列を返す	return [ <val6> ]	yield [ <val6> ]
<name5> 、 <name4> の <name2> 番目から <name6> を引いた値の最大値を <name5> とする	<name5> = max ( <name5> , <name4> [ <name2> ] - <name6> )	<name5> = max ( <name5> , <name4> [ <name2> ] - <name6> )
<name5> の <name6> から <val3> を引いた値番目を <name1> とする <name5> の <name6> から <val4> を引いた値番目を <name2> とする <name5> の <name6> 番目を <name1> とする	<name1> = <name5> [ <name6> - <val3> ] <name2> = <name5> [ <name6> - <val4> ] <name1> = <name5> [ <name6> ]	<name2> = <name1> [ <name6> - <val3> ] <name2> = <name5> [ <name6> - <val4> ] <name1> = <name5> [ <name6> ]
<name2> 内の <val1> の出現回数が <val3> と等しいとき、	if <name2> . count ( <val1> ) == <val3> :	> <name2> . count ( <val1> ) == <val3> :
<name6> の整数値を <name1> とする	<name1> = int ( <name6> )	<name1> = int ( <name6> )
<name5> モジュールを用いる	import <name5>	from <name5> , Counter
<val6> を <name3> の <val5> 番目の <name1> 番目にする	<name3> [ <val5> ] [ <name1> ] = <val6>	<name1> [ <val5> ] [ <name1> ] = <val6>
<name2> を <name3> の <name1> 番目の <name4> 番目の <name6> 番目にする	<name3> [ <name1> ] [ <name4> ] [ <name6> ] = <name2>	<name2> [ <name3> [ <name1> ] [ <name4> ] [ <name6> ] = <name2>
<name4> モジュールを用いる	from <name4> import acos	return from <name4> import deque
<name2> を <name3> で割った余りが <val1> と等しいとき、	if <name2> % <name3> == <val1> :	list ( <name2> % <name3> == <val1> ) :
<name6> ( <name2> . <name5> - <name3> . <name5> , <name2> . <name1> - <name3> . <name1> ) を返す	return <name6> ( <name2> . <name5> - <name3> . <name5> , <name2> . <name1> - <name3> . <name1> )	yield <name6> ( <name2> . <name5> - <name3> . <name5> , <name2> . <name1> - <name3> . <name1> )
<name5> の <val3> 番目を <name1> とする	<name1> = <name5> [ <val3> ]	\ <name1> = <name5> [ <val3> ]
<name2> が <val1> より小さくまたは <name4> が <name2> と等しいとき、 <blk> <name3> の <name4> 番目を <name6> とする <sep> <name4> を <name2> とする </blk>	if <name2> < <val1> or <name4> == <name2> : <blk> <name6> = <name3> [ <name4> ] <sep> <name2> = <name4> </blk>	from <name6> in <name2> < <val1> or <name4> == <name2> : <blk> <name2> = <name3> [ <name4> ] <sep> <name2> = <name4> </blk>
<name3> ( <name1> , <name6> , <name2> , <val5> ) のとき、	if <name3> ( <name1> , <name6> , <name2> , <val5> ) :	for <name3> in <name3> ( <name1> , <name6> , <name2> , <val5> ) :
( ( <val5> , <val3> ) 、 ( <val2> , <val4> ) 、 ( <val6> , <val4> ) ) からなる辞書を <name1> とする	<name1> = { <val5> : <val3> , <val2> : <val4> , <val6> : <val4> }	<name1> = { <val5> : <val3> , <val2> : <val4> , <val6> : <val4> }
<name5> ( <name1> ) . <name6> ( <val2> ) に <val3> を加えた値に <name5> ( <name4> ) を長さ <val2> になるように '0' 左詰めした文字列を加えた値に <val3> を加えた値に <name5> の文字列を長さ <val2> になるように '0' 左詰めした文字列を加えた値を出力する	print ( <name5> ( <name1> ) . <name6> ( <val2> ) + <val3> + <name5> ( <name4> ) . <name6> ( <val2> ) + <val3> + <name5> ( <name5> ) . <name6> ( <val2> ) )	<name4> = <name5> ( <name1> ) . <name6> ( <val2> ) + <val3> + <name5> ( <name4> ) . zfill ( <val2> ) + <val3> + <name5> ( len ( <val2> ) )
<name4> の <name1> の末尾に ( <name6> 、 <name6> ) の組を追加する	<name4> . <name1> . append ( ( <name6> , <name6> ) )	<name4> . <name1> . append ( ( <name6> , <name6> ) )
<name3> . <name4> ( <name1> ) を展開し、それぞれ <name6> 、 <name2> 、 <name5> とする	<name6> , <name2> , <name5> = <name3> . <name4> ( <name1> )	<name3> , <name2> , <name5> = <name3> . <name4> ( <name1> )
<name1> ( <name4> , <name3> , <val6> ) を <name5> とする	<name5> = <name1> ( <name4> , <name3> , <val6> )	else = <name1> ( <name4> , <name3> , <val6> )
<name5> の <name3> と等しい要素の最初の位置を <name2> とする	<name2> = <name5> . index ( <name3> )	<name6> = <name5> . index ( <name3> )
<name5> が <name6> より小さいとき <name1> の <name5> 番目、そうでなければ <val3> を <name5> とする	<name5> = <name1> [ <name5> ] if <name5> < <name6> else <val3>	<name5> = <name1> [ <name5> ] if <name5> < <name6> else <val3>
<name5> の末尾に ( <name4> 、 <name6> の整数値 ) の組を追加する	<name5> . append ( ( <name4> , int ( <name6> ) ) )	<name5> . append ( ( <name4> , int ( <name6> ) ) )
<name5> の長さが <name6> の <name1> より小さい間、次を繰り返す	while len ( <name5> ) < <name6> . <name1> :	del ( len ( <name5> ) < <name6> . <name1> ) :
<name6> の <name3> の各要素を <name5> とし、 <name5> . <name2> ( ) の列の総和を返す	return sum ( [ <name5> . <name2> ( ) for <name5> in <name6> . <name3> ] )	yield sum ( [ <name5> . <name2> ( ) for <name5> in <name6> . <name3> ] )
<val5> を <name4> の先頭の <val1> 番目にする	<name4> [ 0 ] [ <val1> ] = <val5>	( <name4> [ <val1> ] [ <val1> ] = <val5> )
<name2> ( <name1> , <name5> , <val4> ) を <name3> とする	<name3> = <name2> ( <name1> , <name5> , <val4> )	else = <name2> ( <name1> , <name5> , <val4> )
<val5> を間に入れて <name6> を連結した文字列を出力する	print ( <val5> . join ( <name6> ) )	print ( <val5> . join ( <name6> ) )
<name4> ( <name6> . <name3> )	<name4> ( <name6> . <name3> )	<name4> ( <name6> . <name3> )
<name6> の <val2> 番目が <name3> と等しいとき、	if <name6> [ <val2> ] == <name3> :	[ if <name6> [ <val2> ] == <name3> :
<name3> かつ <name1> のとき、	if <name3> and <name1> :	for <name3> , <name1> in <name3> and <name1> :
<name3> の <name4> の <name1> 番目の <val5> 番目番目の <val6> 番目を <val5> だけ増加させる	<name3> [ <name4> [ <name1> ] [ <val5> ] ] [ <val6> ] += <val5>	<name1> [ <name3> [ <name4> [ <name1> ] [ <val5> ] ] [ <val6> ] += <val5>
<name4> を展開しての要素をそれぞれ組にした列の各要素を <name1> とし、 <name1> のリストの列を <name5> とする	<name5> = [ list ( <name1> ) for <name1> in zip ( * <name4> ) ]	<name4> = [ list ( <name1> ) for <name1> in zip ( * <name4> ) ]
 を間に入れて <name6> ( <name3> , <name2> ) を連結した文字列を出力する	print ( ' ' . join ( <name6> ( <name3> , <name2> ) ) )	print ( ' ' . join ( <name6> ( <name3> , <name2> ) ) )
<val6> から <name2> に <val6> を加えた値未満までの数列の組を <name4> とする	<name4> = tuple ( range ( <val6> , <name2> + <val6> ) )	<name4> = tuple ( range ( <val6> , <name2> + <val6> ) )
<name3> の <name3> の <name6> 番目、 <name3> の <name3> の <name2> 番目を <name3> の <name3> の <name2> 番目、 <name3> の <name3> の <name6> 番目とする	<name3> . <name3> [ <name2> ] , <name3> . <name3> [ <name6> ] = <name3> . <name3> [ <name6> ] , <name3> . <name3> [ <name2> ]	<name2> . <name3> [ <name2> ] , <name3> . <name3> [ <name6> ] = <name3> . <name3> [ <name6> ] , <name3> [ <name2> ]
<name2> の <name4> の <name5> の <name1> 番目の末尾に <name5> を追加する	<name2> . <name4> [ <name5> . <name1> ] . append ( <name5> )	<name1> . <name4> [ <name5> . <name1> ] . append ( <name5> )
black を <name2> の <name1> 番目にする	<name2> [ <name1> ] = 'black'	( <name2> [ <name1> ] = 'black' )
<name4> [ <name5> ] . <name1> ( )	<name4> [ <name5> ] . <name1> ( )	( <name4> [ <name5> ] . <name1> ( ) )
( 、つまり未定値 ) からなる列の <name1> の <name5> 回分の列を <name1> の <name4> にする	<name1> . <name4> = [ None ] * <name1> . <name5>	<name2> . <name1> . <name4> = [ None ] * <name1> . <name5>
<name1> ( <name4> , <name5> , <name2> ) を <name6> とする	<name6> = <name1> ( <name4> , <name5> , <name2> )	<name6> = <name1> ( <name4> , <name5> , <name2> )
<name1> を <name3> 分の一にする <name4> を <name3> 分の一にする	<name1> // = <name3> <name4> // = <name3>	<name1> // = <name3> <name4> // = <name3>
<name2> の総和を <name5> とする	<name5> = sum ( <name2> )	<name6> = sum ( <name2> )
<name3> から <name2> を引いた値を <name5> とする	<name5> = <name3> - <name2>	<name2> <name5> = <name3> - <name2>
<name3> ( <name4> , <name2> , <name1> ) を <name5> とする	<name5> = <name3> ( <name4> , <name2> , <name1> )	else = <name3> ( <name4> , <name2> , <name1> )
<name6> から <val1> を引いた値を <val5> で割った商を <name6> とする	<name6> = ( <name6> - <val1> ) // <val5>	<name6> = ( <name6> - <val1> ) // <val5>
<name5> から <val3> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <val3> , - <val3> ) :	for <name2> in range ( <name5> , <val3> , - 1 ) :
<val2> を <name3> とする <val6> を <name4> とする	<name3> = <val2> <name4> = <val6>	<name3> = <val2> <name4> = <val6>
<name1> の <name4> 番目の <name5> から <val3> を引いた値番目の <val3> 番目に <val3> を加えた値を <name1> の <name4> 番目の <name5> 番目の <val3> 番目にする	<name1> [ <name4> ] [ <name5> ] [ <val3> ] = <name1> [ <name4> ] [ <name5> - <val3> ] [ <val3> ] + <val3>	[ <name1> [ <name4> ] [ <name5> ] [ <val3> ] = <name1> [ <name4> ] [ <name5> - <val3> ] [ <val3> ] + <val3>
<name1> . <name4> . <name6> ( <name5> ) を <name2> とする	<name2> = <name1> . <name4> . <name6> ( <name5> )	<name2> = <name1> . <name4> . <name6> ( <name5> )
<name1> に <name5> の <name3> 番目の整数値を加えた値を <name1> とする	<name1> = <name1> + int ( <name5> [ <name3> ] )	<name1> = <name1> + int ( <name5> [ <name3> ] )
<name3> に <name1> を加えた値を <val4> で割った商を <name6> とする	<name6> = ( <name3> + <name1> ) // <val4>	<name6> = ( <name3> + <name1> ) // <val4>
( 、つまり偽 ) からなる列の <name2> 回分の列を <name6> とする	<name6> = [ False ] * <name2>	<name6> = [ False ] * <name2>
<name4> . <name3> ( <name5> , <name1> , <name2> ) を <name6> とする	<name6> = <name4> . <name3> ( <name5> , <name1> , <name2> )	<name6> = <name4> . <name3> ( <name5> , <name1> , <name2> )
<val6> を <name1> の <name5> の <name2> 番目にする	<name1> [ <name5> . <name2> ] = <val6>	not <name1> . <name5> [ <name2> ] = <val6>
\ <name3> ( <val6> . <name2> ( <name4> ) ) \	\ <name3> ( <val6> . <name2> ( <name4> ) ) \	for <name3> in <name3> ( <val6> . <name2> ( <name4> ) ) \
<name6> を順に <name4> 、 <name1> 、 <name2> として、繰り返す	for <name4> , <name1> , <name2> in <name6> :	. for <name4> , <name1> , <name2> in <name6> :
0 から <name5> に <name5> を掛けた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> * <name5> ) :	for <name2> in range ( <name5> * <name5> ) :
<name4> の <name2> 番目を一旦、返す	yield <name4> [ <name2> ]	global <name4> [ <name2> ]
<name2> が <name5> の長さより小さくかつ <name5> の <name2> 番目が <name5> の <name3> 番目より大きいとき、 <blk> <name2> を <name3> とする </blk>	if <name2> < len ( <name5> ) and <name5> [ <name2> ] > <name5> [ <name3> ] : <blk> <name3> = <name2> </blk>	for <name3> in <name2> < len ( <name5> ) and <name5> [ <name2> ] > <name5> [ <name3> ] : <blk> <name3> = <name2> </blk>
<name1> 、 <name6> の最小値が <val3> と等しいとき、	if min ( <name1> , <name6> ) == <val3> :	for <name1> in min ( <name1> , <name6> ) == <val3> :
<name6> が <name2> 以上かどうかを返す	return <name6> >= <name2>	yield <name6> >= <name2>
<name1> 、 <name2> に <name4> の <val3> 乗を加えた値の最大値を <name1> とする	<name1> = max ( <name1> , <name2> + <name4> ** <val3> )	<name1> = max ( <name1> , <name2> + <name4> ** <val3> )
<name1> 、 <name3> 、 <name4> の最小値の最小値を <name1> とする	<name1> = min ( <name1> , min ( <name3> , <name4> ) )	<name1> = min ( <name1> , min ( <name3> , <name4> ) )
<name4> のコピーされた列を <name3> とする	<name3> = <name4> [ : ]	( <name3> = <name4> [ : ] )
( <name5> の長さが <val4> 以下のとき <name5> を出力する、そうでなければ <name5> ( <name3> ( <name6> ( ) ) ) の各要素を <name5> とし、 <name2> ( [ <name3> ( <name6> ( ) ) forjinrange ( <val4> ) ] ) の列の各要素に整数を適用した列の各要素を <name5> とし、 <val1> を出力するの列 ) からなる列	[ print ( <name5> ) if len ( <name5> ) <= <val4> else [ print ( <val1> ) for <name5> in map ( str , [ <name2> ( [ <name3> ( <name6> ( ) ) for j in <name5> ( <val4> ) ] ) for <name5> in <name5> ( <name3> ( <name6> ( ) ) ) ] ) ] ]	[ print ( <name5> ) if len ( <name5> ) <= <val4> else [ print ( <name5> ) for <name5> in [ <name2> ( <name3> ( <name6> ( ) ) ) for <name5> in <name5> ] ) for <name5> in <name5> in <name5> ( <name3> ( <name6> ( <val4> ) ) ) ] ] ]
<name3> を <name5> で割った余りが <val2> と等しくないとき、	if <name3> % <name5> != <val2> :	raise ( <name3> % <name5> ) != <val2> :
<name1> ( <name5> , <name2> [ <val3> ] ) または <name1> ( <name2> , <name5> [ <val3> ] ) のとき、	if <name1> ( <name5> , <name2> [ <val3> ] ) or <name1> ( <name2> , <name5> [ <val3> ] ) :	for <name1> in <name1> ( <name5> , <name2> [ <val3> ] ) or <name1> ( <name2> , <name5> [ <val3> ] ) :
<name5> を <name2> だけ右シフトした値と <val6> の論理積かつ <name1> の <name5> 番目の <name4> 番目が <name1> の <name5> &~ ( <val6> << <name2> ) 番目の <name3> 番目に <name5> を <name2> の <name2> 番目で割った値を加えた値より大きいとき、	if <name5> >> <name2> & <val6> and <name1> [ <name5> ] [ <name4> ] > <name1> [ <name5> & ~ ( <val6> << <name2> ) ] [ <name3> ] + <name5> / <name2> [ <name2> ] :	for <name5> >> <name2> & <val6> and <name1> [ <name5> ] [ <name4> ] > <name1> [ <name5> << <val6> << <name2> ] [ <name3> ] + <name5> / <name2> [ <name2> ] :
<name1> の <name6> に <name3> の <name5> を掛けた値から <name1> の <name5> に <name3> の <name6> を掛けた値を引いた値を返す	return <name1> . <name6> * <name3> . <name5> - <name1> . <name5> * <name3> . <name6>	x return <name1> . <name6> * <name3> . <name5> - <name1> . <name5> * <name3> . <name6>
<name4> と <name1> の対称差のリストをソートした列を <name3> とする	<name3> = sorted ( list ( <name4> . symmetric_difference ( <name1> ) ) )	<name3> = sorted ( list ( <name4> . intersection ( <name1> ) ) )
<name3> の <name1> に [ MASK ] を挿入する	<name3> . insert ( <name1> )	<name4> . insert ( <name1> )
( ( <val2> 、 <name3> 、 <name4> 、 <val2> ) の組 ) からなる列の両端キューを <name5> とする	<name5> = deque ( [ ( <val2> , <name3> , <name4> , <val2> ) ] )	<name5> = deque ( [ ( <val2> , <name3> , <name4> , <val2> ) ] )
<val3> から <val3> に <val6> を加えた値未満までの数列の各要素を <name2> とし、、つまり文字コード <name2> の文字の列を <name5> とする	<name5> = [ chr ( <name2> ) for <name2> in range ( <val3> , <val3> + <val6> ) ]	<name1> = [ chr ( <name2> ) for <name2> in range ( <val3> , <val3> + <val6> ) ]
<name3> に <name3> を掛けた値に <name4> に <name4> を掛けた値を加えた値が <name2> に <name2> を掛けた値と等しいとき、	if <name3> * <name3> + <name4> * <name4> == <name2> * <name2> :	for <name3> in <name3> * <name3> + <name4> * <name4> == <name2> * <name2> :
( ( <val2> ) からなる列の <name3> に <val1> を加えた値から <name5> を引いた値回分の列 ) からなる列の <name5> に <val1> を加えた値回分の列を <name4> とする	<name4> = [ [ <val2> ] * ( <name3> + <val1> - <name5> ) ] * ( <name5> + <val1> )	<name4> = [ [ <val2> ] * ( <name3> + <val1> - <name5> ) ] * ( <name5> + <val1> )
. を <name6> の <name5> 番目の <name3> 番目にする	<name6> [ <name5> ] [ <name3> ] = '.'	( <name6> [ <name5> ] [ <name3> ] = '.' )
<name1> の <name4> を <name1> の長さで割った余り番目を <name2> とする	<name2> = <name1> [ <name4> % len ( <name1> ) ]	dict = <name1> [ <name4> % len ( <name1> ) ]
<name1> の末尾に <name4> の <val5> に <name3> を掛けた値に <val5> を加えた値から <val5> に <name3> を掛けた値に <val6> を加えた値までの部分列を追加する	<name1> . append ( <name4> [ <val5> * <name3> + <val5> : <val5> * <name3> + <val6> ] )	<name1> . append ( <name4> [ <val5> * <name3> + <val5> : <val5> * <name3> + <val6> ] )
<name6> の <val5> 番目が -1 と等しくないとき、	if <name6> [ <val5> ] != - <val5> :	while <name6> [ <val5> ] != - 1 :
<name2> をパラメータとして <name6> に <name2> ** <val1> を掛けた値に <name3> に <name2> ** <val4> を掛けた値を加えた値に <name5> に <name2> を掛けた値を加えた値に <name2> を加えた値を返す関数を返す	return lambda <name2> : <name6> * <name2> ** <val1> + <name3> * <name2> ** <val4> + <name5> * <name2> + <name2>	key = lambda <name2> : <name6> * <name2> ** <val1> + <name3> * <name2> ** <val4> + <name5> * <name2> + <name2>
<name5> の <name2> 番目を <name6> の <name3> 番目にする	<name6> [ <name3> ] = <name5> [ <name2> ]	<name2> [ <name3> ] = <name5> [ <name2> ]
<val3> を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <val3>	( <name6> [ <name2> ] = <val3> )
<name5> に <val2> を加えた値を <val3> で割った余りを <name5> とする	<name5> = ( <name5> + <val2> ) % <val3>	<name5> = ( <name5> + <val2> ) % <val3>
<name1> を <val3> を <name6> に <name4> を掛けた値に <name2> を加えた値だけ左シフトした値との論理和にする	<name1> | = <val3> << ( <name6> * <name4> + <name2> )	<name2> | = <val3> << ( <name6> * <name4> + <name2> )
<name2> が <val6> と等しいとき、	if <name2> == <val6> :	continue == <val6> :
<name5> の <name2> から読み込んだ一行の末尾を除いた部分列を <name6> とする	<name6> = <name5> . <name2> . readline ( ) [ : - 1 ]	<name2> = <name5> . <name2> . readline ( ) [ : - 1 ]
<name2> の <val5> 番目が <val4> と等しいとき、	if <name2> [ <val5> ] == <val4> :	if <name2> [ <val5> ] == <val4> :
0 から <name2> 未満までの数列の各要素を <name3> とし、 <name4> ( <name1> . <name6> ( ) ) の列を <name5> とする	<name5> = [ <name4> ( <name1> . <name6> ( ) ) for <name3> in range ( <name2> ) ]	<name6> = [ <name4> ( <name1> . <name6> ( ) ) for <name3> in range ( <name2> ) ]
-0.00000001 が <name5> より小さいかどうかが <val4> より小さいとき、	if - <val4> < <name5> < <val4> :	if - . & ( <name5> < <val4> ) :
<name5> に <name3> を加えた値を <val2> で割った余りを <name6> とする	<name6> = ( <name5> + <name3> ) % <val2>	<name6> = ( <name5> + <name3> ) % <val2>
<name6> の <name4> 番目の総和を出力する	print ( sum ( <name6> [ <name4> ] ) )	print ( sum ( <name6> [ <name4> ] ) )
<name3> の末尾に <name5> の <name6> から <val2> を引いた値番目を追加する	<name3> . append ( <name5> [ <name6> - <val2> ] )	<name3> . append ( <name5> [ <name6> - <val2> ] )
<name3> の <val5> 番目を <name1> の <val2> 番目にする	<name1> [ <val2> ] = <name3> [ <val5> ]	<name1> [ <val2> ] = <name3> [ <val5> ]
<name2> の <name4> の <name1> 番目の <val3> 番目から <val6> を引いた値番目、 <name2> の <name4> の <name1> 番目の <val6> 番目から <val6> を引いた値番目を <name2> の <name4> の <name1> 番目の <val6> 番目から <val6> を引いた値番目、 <name2> の <name4> の <name1> 番目の <val3> 番目から <val6> を引いた値番目とする	<name2> [ <name4> [ <name1> ] [ <val6> ] - <val6> ] , <name2> [ <name4> [ <name1> ] [ <val3> ] - <val6> ] = <name2> [ <name4> [ <name1> ] [ <val3> ] - <val6> ] , <name2> [ <name4> [ <name1> ] [ <val6> ] - <val6> ]	<name2> [ <name4> [ <name1> ] [ <val6> ] - <val6> ] , <name2> [ <name4> [ <name1> ] [ <val3> ] - <val6> ] = <name2> [ <name4> [ <name1> ] [ <val3> ] - <val6> ] , <name2> [ <name4> [ <name1> ] [ <val6> ] - <val6> ]
# . に <val3> を掛けた値を <name4> とする	<name4> = '#.' * <val3>	input = '#' * <val3>
文字列 <name4> 内の <val3> を <name6> で置き換えた文字列を評価した値のとき、 <blk> <name6> を出力する <sep> 繰り返しを中断する </blk>	if eval ( <name4> . replace ( <val3> , <name6> ) ) : <blk> print ( <name6> ) <sep> break </blk>	if eval ( <name4> . replace ( <val3> , <name6> ) ) : <blk> print ( <name6> ) <sep> break </blk>
error を出力する	print ( 'error' )	dict print ( 'Data ' )
<name6> の <val4> 番目が <name6> の <val2> 番目と等しいかどうかが <val4> と等しいとき、	if <name6> [ <val4> ] == <name6> [ <val2> ] == <val4> :	list ( <name6> [ <val4> ] == <name6> [ <val2> ] == <val4> :
<name4> の先頭を実部、 <name4> の <val1> 番目を虚部とした複素数を <name6> とする	<name6> = complex ( <name4> [ 0 ] , <name4> [ <val1> ] )	<name6> = complex ( <name4> [ 0 ] , <name4> [ <val1> ] )
<name3> を <name6> とする	<name6> = <name3>	else = <name3>
<name1> の先頭に <name6> を追加する	<name1> . appendleft ( <name6> )	<name3> . appendleft ( <name6> )
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name4> 、 <name6> とする	<name1> , <name5> , <name4> , <name6> = map ( int , <name2> ( ) . split ( ) )	<name3> , <name5> , <name4> , <name6> = map ( int , <name2> ( ) . split ( ) )
<name6> の <name5> 番目が <name6> の <name3> 番目と等しいとき、	if <name6> [ <name5> ] == <name6> [ <name3> ] :	for <name6> [ <name5> ] == <name6> [ <name3> ] :
<name5> の <name1> の x 座標から <name5> の <name2> の x 座標を引いた値に <name4> の <name1> の y 座標から <name5> の <name1> の y 座標を引いた値を掛けた値に <name5> の <name1> の y 座標から <name5> の <name2> の y 座標を引いた値に <name5> の <name1> の x 座標から <name4> の <name1> の x 座標を引いた値を掛けた値を加えた値を <name6> とする	<name6> = ( <name5> . <name1> . x - <name5> . <name2> . x ) * ( <name4> . <name1> . y - <name5> . <name1> . y ) + ( <name5> . <name1> . y - <name5> . <name2> . y ) * ( <name5> . <name1> . x - <name4> . <name1> . x )	<name2> = ( <name5> . <name1> . x - <name5> . <name2> . x ) * ( <name4> . <name1> . <name5> . <name1> . <name2> . x ) + ( <name5> . <name1> . x - <name4> . <name1> . x )
<name3> モジュールを用いる	from <name3> import heapreplace , heappush	from <name3> import combinations
<name4> を <val5> で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name3> 、 <name1> 、 <name6> とする	<name3> , <name1> , <name6> = [ int ( <name2> ) for <name2> in <name4> . split ( <val5> ) ]	<name3> , <name1> , <name6> = [ int ( <name2> ) for <name2> in <name4> . split ( <val5> ) ]
<name6> を <name1> の <name3> の <name2> 番目にする	<name1> . <name3> [ <name2> ] = <name6>	( <name1> [ <name3> . <name2> ] = <name6> )
<val5> を書式として <val6> で整形した文字列を出力する	print ( <val5> . format ( <val6> ) )	<val5> print ( <val5> . format ( <val6> ) )
<name2> の、つまり末尾から、つまり末尾までの部分列を削除する	del ( <name2> [ - 1 : ] )	<name2> [ : ] = <name2> [ : ]
<name3> の集合のリストを <name2> とする	<name2> = list ( set ( <name3> ) )	<name2> = list ( set ( <name3> ) )
<val6> の浮動小数点数を <name4> とするを <name5> とする	<name5> = <name4> = float ( <val6> )	<name2> = <name4> = float ( <val6> )
0 から <name3> 未満までの数列の各要素を <name6> とし、 <val1> 進表記 <name2> から読み込んだ一行内の <val5> を <val4> で置き換えた文字列の整数値の列を <name3> とする	<name3> = [ int ( <name2> . readline ( ) . replace ( <val5> , <val4> ) , <val1> ) for <name6> in range ( <name3> ) ]	<name3> = [ int ( <name2> . readline ( ) . replace ( <val5> , <val4> ) , <val1> ) for <name6> in range ( <name3> ) ]
<name5> [ <name3> ] ( <name1> ( <name4> ) , <name1> ( <name6> ) ) の整数値を出力する	print ( <name1> ( <name5> [ <name3> ] ( <name1> ( <name4> ) , <name1> ( <name6> ) ) ) )	print ( int ( <name5> [ <name3> ] ( <name1> ( <name4> ) , <name1> ( <name6> ) ) ) )
<name5> のコピーされた列を <name1> とする	<name1> = <name5> [ : ]	( <name1> = <name5> [ : ] )
0 から <name2> 未満までの数列を順に <name5> として、繰り返す <blk> <name6> に <val4> を掛けた値の切り上げ整数値を <name6> とする </blk>	for <name5> in range ( <name2> ) : <blk> <name6> = ceil ( <name6> * <val4> ) </blk>	for <name5> in range ( <name2> ) : <blk> <name6> = math . ceil ( <name6> * <val4> ) </blk>
<name6> を <name1> の <name3> 番目の <name4> 番目に <name5> の <name4> 番目を掛けた値だけ増加させる	<name6> += <name1> [ <name3> ] [ <name4> ] * <name5> [ <name4> ]	<name2> += <name1> [ <name3> ] [ <name4> ] * <name5> [ <name4> ]
<name1> ( ) を <name6> とする <name1> ( ) を <name2> とする	<name6> = <name1> ( ) <name2> = <name1> ( )	<name6> = <name1> ( ) <name2> = <name1> ( )
<name5> の <name1> 番目の末尾に ( <name6> 、 <name4> ) の組を追加する	<name5> [ <name1> ] . append ( ( <name6> , <name4> ) )	<name4> [ <name1> ] . append ( ( <name6> , <name4> ) )
<name5> の <name4> 番目を <name1> とする	<name1> = <name5> [ <name4> ]	<name4> = <name5> [ <name4> ]
<val6> から <val1> 未満までの <val5> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , <val1> , <val5> ) :	continue for <name3> in range ( <val6> , <val1> , <val5> ) :
( 、つまり真 ) からなる列の <name6> 回分の列を <name3> とする	<name3> = [ True ] * <name6>	<name3> = [ True ] * <name6>
<name2> を <name2> に <val4> を加えた値との論理和にする	<name2> | = <name2> + <val4>	( <name2> << = ( <name2> + <val4> ) )
<val6> を <name5> の <name1> の <val6> 番目番目にする	<name5> [ <name1> [ <val6> ] ] = <val6>	<name2> [ <name1> [ <val6> ] ] = <val6>
<name2> の <name1> から <val4> を引いた値番目を出力する	print ( <name2> [ <name1> - <val4> ] )	<name2> [ <name1> - <val4> ] = <name2> [ <name1> - <val4> ] )
<name6> 内の <name3> の <val4> 番目と等しい要素を取り除く	<name6> . remove ( <name3> [ <val4> ] )	not <name6> . remove ( <name3> [ <val4> ] )
<name6> が <name4> の <name5> 番目に含まれかつ <name1> が <name4> の <name5> 番目に含まれるとき、	if <name6> in <name4> [ <name5> ] and <name1> in <name4> [ <name5> ] :	list in <name6> in <name4> [ <name5> ] and <name1> in <name4> [ <name5> ] :
( <val1> ) からなる列の <name4> に <val3> を加えた値回分の列を <name6> とする	<name6> = [ <val1> ] * ( <name4> + <val3> )	<name6> = [ <val1> ] * ( <name4> + <val3> )
<name6> ( <name4> , <name3> , <name1> , <name5> ) のとき、	if <name6> ( <name4> , <name3> , <name1> , <name5> ) :	list ( <name6> ( <name4> , <name3> , <name1> , <name5> ) ) :
( <val6> ) からなる列の <name4> 回分の列を無限の整数列とする	count = [ <val6> ] * <name4>	count = [ <val6> ] * <name4>
<name1> ( <name5> . <name3> + <name6> . <name3> , <name5> . <name2> + <name6> . <name2> ) を返す	return <name1> ( <name5> . <name3> + <name6> . <name3> , <name5> . <name2> + <name6> . <name2> )	x return <name1> ( <name5> . <name3> + <name6> . <name3> , <name5> . <name2> + <name6> . <name2> )
<name5> を <name1> の <name2> の <name4> 番目にする	<name1> . <name2> [ <name4> ] = <name5>	( <name1> [ <name2> . <name4> ] = <name5> )
<name4> から読み込んだ一行を空白で分割した字句列を展開し、それぞれ <name6> 、 <name5> 、 <name3> とする	<name6> , <name5> , <name3> = <name4> . readline ( ) . split ( )	<name6> , <name5> , <name3> = <name4> . readline ( ) . split ( )
<name4> の末尾に <name2> の先頭を追加する	<name4> . append ( <name2> [ 0 ] )	<name3> . append ( <name2> [ 0 ] )
( ( <name6> 、未定値、 <val2> の浮動小数点数 ) の組 ) からなる列を <name3> とする	<name3> = [ ( <name6> , None , float ( <val2> ) ) ]	else = [ ( <name6> , None , float ( <val2> ) ) ]
<name3> の末尾に <name6> の <val5> 番目を追加する	<name3> . append ( <name6> [ <val5> ] )	<name3> . append ( <name6> [ <val5> ] )
<name1> に <name6> を加えた値を <val4> だけ右シフトした値を <name3> とする <name5> に <name6> を加えた値を <val4> だけ右シフトした値を <name2> とする	<name3> = ( <name1> + <name6> ) >> <val4> <name2> = ( <name5> + <name6> ) >> <val4>	<name3> = ( <name1> + <name6> ) >> <val4> <name2> = ( <name5> + <name6> ) >> <val4>
<name6> の <name2> の <name5> から <name4> を引いた値番目の <name4> 番目を返す	return <name6> . <name2> [ <name5> - <name4> ] [ <name4> ]	yield <name6> . <name2> [ <name5> - <name4> ] [ <name4> ]
<name6> の先頭を取り出した値を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <name6> . pop ( )	<name1> [ <name5> ] = <name6> . pop ( )
<name4> の <name2> 番目の <val3> 番目が <name4> の <name2> から <val3> を引いた値番目の <val3> 番目より小さいとき、	if <name4> [ <name2> ] [ <val3> ] < <name4> [ <name2> - <val3> ] [ <val3> ] :	if <name4> [ <name2> ] [ <val3> ] < <name4> [ <name2> - <val3> ] [ <val3> ] :
<name1> に <name2> の <name5> に <val3> を掛けた値に <val4> を加えた値から <name5> に <val3> を掛けた値に <val6> を加えた値までの部分列の組を追加した集まり	<name1> . add ( tuple ( <name2> [ <name5> * <val3> + <val4> : <name5> * <val3> + <val6> ] ) )	<name1> . add ( tuple ( <name2> [ <name5> * <val3> + <val4> : <name5> * <val3> + <val6> ] ) )
<name1> ( <name3> , <name5> ) を <name6> とする	<name6> = <name1> ( <name3> , <name5> )	<name6> = <name1> ( <name3> , <name5> )
<name3> の <name1> から <val2> を引いた値番目の <name6> 番目を <name3> の <name1> 番目の <name6> 番目にする	<name3> [ <name1> ] [ <name6> ] = <name3> [ <name1> - <val2> ] [ <name6> ]	<name4> [ <name1> ] [ <name6> ] = <name3> [ <name1> - <val2> ] [ <name6> ]
円周率を <name6> とする	<name6> = math . <name6>	<name6> = math . pi
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name1> , <name6> = map ( int , input ( ) . split ( ) )
<name4> ( <name5> , <name1> ) を <name6> とする	<name6> = <name4> ( <name5> , <name1> )	<name6> = <name4> ( <name5> , <name1> )
<val1> の順序数を <name2> とする	<name2> = ord ( <val1> )	<name1> = ord ( <val1> )
<name2> の <name3> に対応する値、もし存在しなければ <val4> を <name6> とする	<name6> = <name2> . <name3> . get ( <val4> )	<name6> = <name2> . <name3> . get ( <val4> )
<name2> ( <name1> , <name5> ) を <name4> とする	<name4> = <name2> ( <name1> , <name5> )	<name4> = <name2> ( <name1> , <name5> )
( 、つまり未定値 ) からなる列の <name3> の <name4> 回分の列を <name2> とする	<name2> = [ None ] * <name3> . <name4>	<name2> = [ None ] * <name3> . <name4>
<name4> が <name2> の <name5> の <name2> の <name1> 番目と等しくないとき、	if <name4> != <name2> . <name5> [ <name2> . <name1> ] :	if <name4> != <name2> . <name5> [ <name2> . <name1> ] :
<name5> が <name6> 以下でないとき、	if not <name5> <= <name6> :	isinstance ( <name5> <= <name6> ) :
<name4> の <name1> が <name2> . <name6> ( ) より大きくかつ <name2> の <name5> の <name3> 番目が <name2> の <name5> の <name4> の <name4> 番目より小さいとき、	if <name4> . <name1> > <name2> . <name6> ( ) and <name2> . <name5> [ <name3> ] < <name2> . <name5> [ <name4> . <name4> ] :	[ if <name4> . <name1> > <name2> . <name6> ( ) and <name2> . <name5> [ <name3> ] < <name2> . <name5> [ <name4> . <name4> ] :
<name1> から <name3> に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> , <name3> + <val2> ) :	continue for <name4> in range ( <name1> , <name3> + <val2> ) :
<name6> の末尾を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name6> [ - 1 ]	( <name4> [ <name5> ] = <name6> [ - 1 ] )
<name1> に <name4> の <name6> 番目を加えた値を <name1> とする	<name1> = <name1> + <name4> [ <name6> ]	<name1> = <name1> + <name4> [ <name6> ]
( <val4> ) からなる列の <name1> に <val6> を加えた値回分の列を <name3> とする	<name3> = [ <val4> ] * ( <name1> + <val6> )	else = [ <val4> ] * ( <name1> + <val6> )
( ( <val3> 、 <name1> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val3> , <name1> ) ]	<name4> = [ ( <val3> , <name1> ) ]
<val2> を間に入れて <name4> の <name5> 番目から <name5> に <name3> を加えた値までの部分列の各要素に整数を適用した列を連結した文字列を <name6> とする	<name6> = <val2> . join ( map ( str , <name4> [ <name5> : <name5> + <name3> ] ) )	<name6> = <val2> . join ( map ( str , <name4> [ <name5> : <name5> + <name3> ] ) )
<name6> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = map ( int , <name6> . split ( ) )	<name2> , <name1> = map ( int , <name6> . split ( ) )
0 から <name4> 未満までの数列の各要素を <name6> とし、 <name1> の <name6> 番目のときの <name6> の列を <name3> とする	<name3> = [ <name6> for <name6> in range ( <name4> ) if <name1> [ <name6> ] ]	<name4> = [ <name6> for <name6> in range ( <name4> ) if <name1> [ <name6> ] ]
<name3> が <name6> の <val1> 番目以上のとき、	if <name3> >= <name6> [ <val1> ] :	for <name3> in <name3> >= <name6> [ <val1> ] :
<name6> の <name1> 番目を <val2> に <name4> を掛けた値だけ増加させる	<name6> [ <name1> ] += <val2> * <name4>	( <name6> [ <name1> ] += <val2> * <name4> )
0 から <name6> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name3> の <name4> にする	<name3> . <name4> = [ [ ] for <name2> in range ( <name6> ) ]	<name1> . <name4> = [ [ ] for <name2> in range ( <name6> ) ]
<name1> モジュールを用いる	from <name1> import sqrt , fabs	return from <name1> import combinations
<name2> が <val5> より小さくまたは <name2> と <val6> の論理積が <val3> と等しいとき、 <blk> 偽を返す </blk>	if <name2> < <val5> or <name2> & <val6> == <val3> : <blk> return False </blk>	\ if <name2> < <val5> or <name2> & <val6> == <val3> : <blk> return False </blk>
<name4> が <name2> の <name3> 番目より大きいとき、	if <name4> > <name2> [ <name3> ] :	list if <name4> > <name2> [ <name3> ] :
<name1> を <name3> の <name5> 番目の <name4> にする	<name3> [ <name5> ] . <name4> = <name1>	( <name3> [ <name5> ] . <name4> = <name1> )
( <val4> ) からなる列の <val1> 回分の列を <name6> とする	<name6> = [ <val4> ] * <val1>	<name6> = [ <val4> ] * <val1>
<val5> を <name2> の <name1> 番目の <name3> にする	<name2> [ <name1> ] . <name3> = <val5>	( <name2> [ <name1> ] . <name3> = <val5> )
<name1> が <name2> より小さいとき、 <blk> <name1> と <name2> を入れ替える </blk>	if <name1> < <name2> : <blk> <name1> , <name2> = <name2> , <name1> </blk>	for <name1> , <name2> in <name1> if <name2> : <blk> <name1> , <name2> = <name2> , <name1> </blk>
<name4> を文字コード <name6> から <val1> を引いた値に <val5> の順序数を加えた値の文字だけ増加させる	<name4> += chr ( <name6> - <val1> + ord ( <val5> ) )	<name4> += chr ( <name6> - <val1> + ord ( <val5> ) )
<name2> ( [ <name3> ( <name6> ( ) ) for_inrange ( <val5> ) ] )	<name2> ( [ <name3> ( <name6> ( ) ) for _ in range ( <val5> ) ] )	set ( <name2> ( [ <name3> ( <name6> ( ) ) in range ( <val5> ) ] ) )
<name5> はグローバル変数とする	global <name5>	global <name5>
<val1> から <name4> の <val2> 乗の整数値に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , int ( <name4> ** <val2> ) + <val5> ) :	range for <name3> in range ( <val1> , int ( <name4> ** <val2> ) + <val5> ) :
<name1> ( ) のとき <val3> 、そうでなければ <val5> を出力する	print ( <val3> if <name1> ( ) else <val5> )	print ( <val3> if <name1> ( ) else <val5> )
<name5> . <name4> ( <name1> ) を順に <name3> として、繰り返す	for <name3> in <name5> . <name4> ( <name1> ) :	for <name3> in <name5> . <name4> ( <name1> ) :
- <name4> に <name3> の . <val1> 乗を加えた値を <name2> で割った値を <name5> とする	<name5> = ( - <name4> + <name3> ** . <val1> ) / <name2>	<name5> = ( - <name4> + <name3> ** . <val1> ) / <name2>
<name2> の <name5> が <name4> より大きいとき、	if <name2> . <name5> > <name4> :	if <name2> . <name5> > <name4> :
<name4> ( <name1> , <name2> , <name3> ) を <name5> とする	<name5> = <name4> ( <name1> , <name2> , <name3> )	else = <name4> ( <name1> , <name2> , <name3> )
<name1> の ( <name6> -1 ) * <val3> に <name2> を加えた値から <val5> を引いた値番目、 <name1> の ( <name6> -1 ) に <val3> を掛けた値に <name2> を加えた値番目、 <name1> の <name6> * <val3> に <name2> を加えた値から <val5> を引いた値番目の最小値に <val5> を加えた値を <name1> の <name6> に <val3> を掛けた値に <name2> を加えた値番目にする	<name1> [ <name6> * <val3> + <name2> ] = min ( <name1> [ ( <name6> - <val5> ) * <val3> + <name2> - <val5> ] , <name1> [ ( <name6> - <val5> ) * <val3> + <name2> ] , <name1> [ <name6> * <val3> + <name2> - <val5> ] ) + <val5>	<name6> [ <name2> * <val3> + <name2> ] = min ( <name1> [ ( <name6> - <val5> ) * <val3> + <name2> - <name2> - <val5> ] , <name1> [ ( <name6> - <val5> ) * <val3> + <name2> ] , <name1> [ <name6> * <val3> + <name2> - <val5> ] ) + <val5>
<name6> 、 <name5> の要素をそれぞれ組にした列の各要素を <name1> 、 <name3> とし、 <name3> の <name1> 番目の列の最大値を <name2> とする	<name2> = max ( [ <name3> [ <name1> ] for <name1> , <name3> in zip ( <name6> , <name5> ) ] )	<name2> = max ( [ <name3> [ <name1> ] for <name1> , <name3> in zip ( <name6> , <name5> ) ] )
( <name2> 、 <name1> 、 <name3> ) からなる列を <name6> とする	<name6> = [ <name2> , <name1> , <name3> ]	<name4> = [ <name2> , <name1> , <name3> ]
( <val2> ) からなる列の <name1> の長さ回分の列を <name6> とする <val2> を <name4> とする	<name6> = [ <val2> ] * len ( <name1> ) <name4> = <val2>	<name2> = [ <val2> ] * len ( <name1> ) <name4> = <val2>
<name3> 内の <val4> を <val6> で置き換えた文字列を <name3> とする	<name3> = <name3> . replace ( <val4> , <val6> )	<name3> = <name3> . replace ( <val4> , <val6> )
M {}を書式として <name4> から <val2> を引いた値で整形した文字列を出力する	print ( 'M{}' . format ( <name4> - <val2> ) )	print ( '421653' {}' . format ( <name4> - <val2> ) )
<val1> から <name4> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , <name4> + <val1> ) :	for <name5> in range ( <val1> , <name4> + <val1> ) :
<name4> の <name6> 番目を空白で分割した字句列を展開し、それぞれ <name2> 、 <name5> 、 <name1> とする	<name2> , <name5> , <name1> = <name4> [ <name6> ] . split ( )	<name2> , <name5> , <name1> = <name4> [ <name6> ] . split ( )
<name1> の先頭、 <name1> の <val3> 番目、 <name1> の <val6> 番目、 <name1> の <val4> 番目、 <name1> の <val2> 番目、 <name1> の <val5> 番目を <name1> 、 <name3> 、 <name6> 、 <name4> 、 <name2> 、 <name5> とする	<name1> , <name3> , <name6> , <name4> , <name2> , <name5> = <name1> [ 0 ] , <name1> [ <val3> ] , <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val2> ] , <name1> [ <val5> ]	<name3> , <name6> , <name4> , <name2> , <name5> = <name1> [ 0 ] , <name1> [ <val3> ] , <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val2> ] , <name1> [ <val5> ]
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name1> 、 <name6> とする	<name2> , <name1> , <name6> = map ( int , <name4> ( ) . split ( ) )	input , <name1> , <name6> = map ( int , <name4> ( ) . split ( ) )
<val6> から <name3> の <val4> 乗の整数値を <val2> で割った商に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , int ( <name3> ** <val4> ) // <val2> + <val6> ) :	. for <name1> in range ( <val6> , int ( <name3> ** <val4> ) // <val2> + <val6> ) :
<val6> を一旦、返す	yield <val6>	\ yield ( <val6> )
<name2> + <name2> // <val5> から <name2> // <val1> を引いた値に <name2> を <val6> で割った商を加えた値に <val4> * <name3> に <val2> を加えた値を <val5> で割った商を加えた値に <name1> を加えた値を <val6> で割った余りを返す	return ( <name2> + <name2> // <val5> - <name2> // <val1> + <name2> // <val6> + ( <val4> * <name3> + <val2> ) // <val5> + <name1> ) % <val6>	assert ( <name2> + <val5> - <name2> // <val1> ) + ( <name2> // <val6> ) + ( <val4> * <name3> + <val2> ) // <val5> + <name1> ) % <val6>
os . <name2> の末尾に ( ( <val5> 、 <val3> 、 <val1> 、 <val4> 、 <val6> 、 <val2> 、 <val5> 、 <val3> 、 <val1> 、 <val4> 、 <val1> 、 <val3> 、 <val5> 、 <val2> 、 <val6> ) からなる列、空列 ) からなる列を追加する	<name2> . append ( [ [ <val5> , <val3> , <val1> , <val4> , <val6> , <val2> , <val5> , <val3> , <val1> , <val4> , <val1> , <val3> , <val5> , <val2> , <val6> ] , [ ] ] )	<name1> . append ( [ [ <val5> , <val3> , <val1> , <val4> , <val6> , <val2> , <val5> , <val3> , <val1> , <val4> , <val3> , <val5> , <val2> , <val6> ] , [ ] , [ ] ] ] )
<name6> の <name2> 番目が <name5> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> [ <name2> ] < <name5> : <blk> continue </blk>	\ if <name6> [ <name2> ] < <name5> : <blk> continue </blk>
<name5> に <name2> に <val1> を掛けた値に <val6> を加えた値、 <name4> に <val6> を加えた値、 <name3> 、 <name5> 、 <name2> 、 <name1> を追加した集まり	<name5> . add ( <name2> * <val1> + <val6> , <name4> + <val6> , <name3> , <name5> , <name2> , <name1> )	<name4> . add ( <name2> * <val1> + <val6> , <name4> + <val6> , <name3> , <name5> , <name2> , <name1> )
<name2> の <name1> を <name6> とする <name2> の先頭を取り出した値を <name4> とする	<name6> = <name2> . <name1> <name4> = <name2> . pop	<name2> = <name2> . <name1> <name4> = <name2> . pop ( )
<name2> の <name6> 番目に <val1> を加えた値を <name3> とする	<name3> = <name2> [ <name6> ] + <val1>	<name3> = <name2> [ <name6> ] + <val1>
<name1> の末尾に ( <name5> 、 <name3> 、 <name6> ) の組を追加する	<name1> . append ( ( <name5> , <name3> , <name6> ) )	<name1> . append ( ( <name5> , <name3> , <name6> ) )
( <val3> 、 -1 、 <val6> ) からなる列を <name1> とする	<name1> = [ <val3> , - <val6> , <val6> ]	<name3> = [ <val3> , - <val6> , <val6> ]
<name5> を <name1> に <name3> を加えた値で割った余りが <name1> 以下のとき、	if <name5> % ( <name1> + <name3> ) <= <name1> :	list ( <name5> % ( <name1> + <name3> ) ) <= <name1> :
<val6> から <val3> に <name2> を掛けた値に <val6> を加えた値未満までの数列の各要素を <name4> とし、 <name4> の列を <name1> とする	<name1> = [ <name4> for <name4> in range ( <val6> , ( <val3> * <name2> ) + <val6> ) ]	<name6> = [ <name4> for <name4> in range ( <val6> , <val3> * <name2> + <val6> ) ]
<name4> が <name1> 以上かつ <name3> ( <name4> ) のとき、	if <name4> >= <name1> and <name3> ( <name4> ) :	for <name4> >= <name1> and <name3> ( <name4> ) :
<name4> の文字列が <val5> と等しいとき、	if str ( <name4> ) == <val5> :	if str ( <name4> ) == <val5> :
{} {} {} {}を出力する	print ( { D_1 } { D_2 } { D_3 } { max } )	<name2> . print ( set ( ) , . y f
( <val6> ) からなる列の <name4> の <name5> 回分の列を <name3> とする	<name3> = [ <val6> ] * <name4> . <name5>	<name3> = [ <val6> ] * <name4> . <name5>
<name2> と <name4> 、 <name3> の和集合	<name2> . union ( <name4> , <name3> )	set ( <name2> . union ( <name4> , <name3> ) )
<name2> . <name1> ( <name6> ) を返す	return <name2> . <name1> ( <name6> )	self return <name2> . <name1> ( <name6> )
<name6> が、つまり現在の日時と等しいとき、	if <name6> == now :	list ( <name6> == now ) :
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> を <val4> で分割した字句列の各要素に整数を適用した列のリストを返す関数を適用した列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = map ( lambda <name1> : list ( map ( int , <name1> . split ( <val4> ) ) ) , input ( ) . split ( ) )	<name4> , <name2> = map ( lambda <name1> : list ( map ( int , <name1> . split ( <val4> ) ) ) , input ( ) . split ( ) )
<name6> に <name4> を加えた値に <name5> を加えた値を <name2> とする	<name2> = <name6> + <name4> + <name5>	<name2> = <name6> + <name4> + <name5>
- <name3> から <name4> の . <val1> 乗を引いた値を <val6> に <name2> を掛けた値で割った値を <name5> とする	<name5> = ( - <name3> - <name4> ** . <val1> ) / ( <val6> * <name2> )	<name5> = ( - <name3> - <name4> ** . <val1> ) / ( <val6> * <name2> )
<name5> の <name3> 番目が <name5> の <name2> 番目に <name1> を加えた値より大きいとき、	if <name5> [ <name3> ] > <name5> [ <name2> ] + <name1> :	continue <name5> [ <name3> ] > <name5> [ <name2> ] + <name1> :
<name2> から <name4> を引いた値が <val3> より小さくまたは <name1> から <name4> を引いた値が <val3> より小さくまたは <name2> に <name4> を加えた値が <name5> より大きくまたは <name1> に <name4> を加えた値が <name6> より大きいとき、 <blk> <val2> を出力する </blk>	if ( <name2> - <name4> < <val3> or <name1> - <name4> < <val3> or <name2> + <name4> > <name5> or <name1> + <name4> > <name6> ) : <blk> print ( <val2> ) </blk>	<blk> if <name2> - <name4> < <val3> or <name1> - <name4> < <val3> or <name2> + <name4> > <name5> or <name1> + <name4> > <name6> : <blk> print ( <val2> ) </blk>
<name3> の集合を順に <name1> として、繰り返す	for <name1> in set ( <name3> ) :	: for <name1> in set ( <name3> ) :
<name2> ( <name4> / <name3> ( <name5> ) ) を出力する	print ( <name2> ( <name4> / <name3> ( <name5> ) ) )	<val3> print ( <name2> ( <name4> / <name3> ( <name5> ) ) )
0 から <name2> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の列を <name1> とする	<name1> = [ input ( ) for <name6> in range ( <name2> ) ]	<name6> = [ input ( ) for <name6> in range ( <name2> ) ]
<name3> かつ <name3> の末尾の <val5> 番目が <name2> より大きい間、次を繰り返す	while <name3> and ( <name3> [ - 1 ] [ <val5> ] > <name2> ) :	while <name3> and ( <name3> [ - 1 ] [ <val5> ] > <name2> ) :
<name6> をパラメータとして <name6> の <name3> を返す関数を <name5> として <name4> の最小値を <name2> とする	<name2> = min ( <name4> , <name5> = lambda <name6> : <name6> . <name3> )	<name6> = min ( <name4> , <name5> = lambda <name6> : <name6> . <name3> )
<name4> が <name2> の <name6> 番目に含まれるとき、	if <name4> in <name2> [ <name6> ] :	list in <name4> in <name2> [ <name6> ] :
<name4> を展開し、それぞれ <name2> 、 <name3> 、 <name6> とする	<name2> , <name3> , <name6> = <name4>	( <name2> , <name3> , <name6> = <name4> )
<name2> の <name3> に <val4> を加えた値番目の <name1> に <val4> を加えた値番目を <val4> だけ増加させる	<name2> [ <name3> + <val4> ] [ <name1> + <val4> ] += <val4>	[ <name2> [ <name3> + <val4> ] [ <name1> + <val4> ] += <val4>
<val5> を <name3> の <name6> の <name1> 番目にする	<name3> . <name6> [ <name1> ] = <val5>	( <name3> . <name6> [ <name1> ] = <val5> )
<name1> を <val3> だけ増加させる <name4> を <name2> とする	<name1> += <val3> <name2> = <name4>	<name5> += <name1> <name4> <name2> = <val3>
<name5> ( <name2> , <name6> , <name3> ) を <name1> とする	<name1> = <name5> ( <name2> , <name6> , <name3> )	<name1> = <name5> ( <name2> , <name6> , <name3> )
<name3> . <name6> ( <name1> ( <name2> ) , <name5> , <val4> )	<name3> . <name6> ( <name1> ( <name2> ) , <name5> , <val4> )	<name5> . <name6> ( <name1> ( <name2> ) , <name5> , <val4> )
<name6> 内の <val2> を <val1> で置き換えた文字列を出力する	print ( <name6> . replace ( <val2> , <val1> ) )	print ( <name6> . replace ( <val2> , <val1> ) )
<name6> が -1 と等しくかつ <name2> が -1 と等しくかつ <name4> が -1 と等しいとき、	if <name6> == - 1 and <name2> == - 1 and <name4> == - 1 :	if <name6> == - 1 and <name2> == - 1 and <name4> == - 1 :
<name6> ( <name3> ( <name4> , <name5> ) , <name2> ) を <name1> とする	<name1> = <name6> ( <name3> ( <name4> , <name5> ) , <name2> )	<name1> = <name6> ( <name3> ( <name4> , <name5> ) , <name2> )
<name4> . <name1> ( <val6> ) を返す	return <name4> . <name1> ( <val6> )	yield <name4> . <name1> ( <val6> )
<name6> の <name2> 番目の <val3> 番目が <name1> 以下のとき、	if <name6> [ <name2> ] [ <val3> ] <= <name1> :	if <name6> [ <name2> ] [ <val3> ] <= <name1> :
<val5> を <name3> の <name6> の <name1> 番目の <name4> 番目にする	<name3> . <name6> [ <name1> ] [ <name4> ] = <val5>	<name4> . <name6> [ <name1> ] [ <name4> ] = <val5>
<name4> に <name2> ( <name3> , <name1> , <name5> , <name6> ) を追加した集まり	<name4> . add ( <name2> ( <name3> , <name1> , <name5> , <name6> ) )	print ( <name4> . add ( <name2> ( <name3> , <name1> , <name5> , <name6> ) ) )
<name4> を <name2> とするを <name1> とする	<name1> = <name2> = <name4>	<name1> = <name2> = <name4>
<val2> を <name6> の <val5> 番目とするを <name6> の <val2> 番目にする	<name6> [ <val2> ] = <name6> [ <val5> ] = <val2>	<name2> [ <val2> ] = <name6> [ <val5> ] = <val2>
0 から <name3> に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> + <val5> ) :	for <name2> in range ( <name3> + <val5> ) :
<name1> ( <name4> , <name5> )	<name1> ( <name4> , <name5> )	not <name1> ( <name4> , <name5> )
<name1> ( <name2> , <name3> , <name6> ) を <name5> とする	<name5> = <name1> ( <name2> , <name3> , <name6> )	<name5> = <name1> ( <name2> , <name3> , <name6> )
<val2> を <name3> の <name4> にする	<name3> . <name4> = <val2>	<name2> . <name3> . <name4> = <val2>
<name4> ( <name6> . <name2> [ <val5> : ] )	<name4> ( <name6> . <name2> [ <val5> : ] )	<name4> ( <name6> . <name2> [ <val5> : ] )
( 、つまり偽 ) からなる列の <val2> 回分の列を <name5> の <name6> にする	<name5> . <name6> = [ False ] * <val2>	) <name5> . <name6> = [ False ] * <val2>
<name6> に <val1> を加えた値から <name5> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> + <val1> , <name5> ) :	range for <name3> in range ( <name6> + <val1> , <name5> ) :
<name3> が <name1> の先頭と等しいとき、	if <name3> == <name1> [ 0 ] :	for <name3> in <name1> [ 0 ] :
<val3> の浮動小数点数を <name1> とする	<name1> = float ( <val3> )	<name1> = float ( <val3> )
<name1> が <name3> と等しいとき、 <blk> <name5> を <val2> だけ増加させる </blk>	if <name1> == <name3> : <blk> <name5> += <val2> </blk>	: if <name1> == <name3> : <blk> <name5> += <val2> </blk>
<name4> 、 <name3> ( <name1> , <name2> , <name6> , <name5> -1 ) の最大値を <name4> とする	<name4> = max ( <name4> , <name3> ( <name1> , <name2> , <name6> , <name5> - 1 ) )	<name4> = max ( <name4> , <name3> ( <name1> , <name2> , <name6> , <name5> - 1 ) )
0 から <name6> 未満までの数列の各要素を <name2> とし、 <name3> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name5> とする	<name5> = [ tuple ( map ( int , <name3> ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]	<name5> = [ tuple ( map ( int , <name3> ( ) . split ( ) ) ) for <name2> in range ( <name6> ) ]
<name6> の <name3> 番目、 <name6> の <name4> に <val2> を加えた値番目を <name6> の <name4> に <val2> を加えた値番目、 <name6> の <name3> 番目とする	<name6> [ <name4> + <val2> ] , <name6> [ <name3> ] = <name6> [ <name3> ] , <name6> [ <name4> + <val2> ]	<name6> [ <name4> + <val2> ] , <name6> [ <name3> ] = <name6> [ <name3> ] , <name6> [ <name4> + <val2> ]
{}を出力する	print ( { sum ( d ) } )	print ( { ( x & 2 ) } )
<name2> の <name5> 番目を順に <name3> 、 <name4> として、繰り返す	for <name3> , <name4> in <name2> [ <name5> ] :	for <name3> , <name4> in <name2> [ <name5> ] :
<name3> が、つまり未定値と等しい間、次を繰り返す	while <name3> is not None :	: while <name3> == None :
<name4> . <name5> ( <name1> )	<name4> . <name5> ( <name1> )	not <name4> . <name5> ( <name1> )
<val3> を <name4> から <val3> を引いた値だけ左シフトした値を <name6> とする	<name6> = ( <val3> << ( <name4> - <val3> ) )	count = <val3> << ( <name4> - <val3> )
<name2> に <name3> を掛けた値を <val5> . で割った値を <name3> とする	<name3> = <name2> * <name3> / <val5> .	( <name3> = <name2> * <name3> / <val5> )
<name2> を展開し、それぞれ <name4> 、 <name1> とする <name6> を展開し、それぞれ <name3> 、 <name5> とする <name2> を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name2> <name3> , <name5> = <name6> <name4> , <name1> = <name2>	<name1> , <name3> , <name5> = <name2> <name3> , <name1> = <name6> <name4> , <name1> = <name2>
<name6> ( <val1> , - <name3> / <name5> ) を <name4> の <name2> にする	<name4> . <name2> = <name6> ( <val1> , - <name3> / <name5> )	<name3> . <name2> = <name6> ( <val1> , - <name3> / <name5> )
<name2> の <name5> 番目を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name2> [ <name5> ]	( <name4> , <name1> = <name2> [ <name5> ] )
<name6> を <val5> で割った余りが <val4> と等しいとき、	if <name6> % <val5> == <val4> :	: if <name6> % <val5> == <val4> :
<name6> の <name4> を <name6> とする	<name6> = <name6> . <name4>	( <name6> = <name6> . <name4> )
<val2> に <name5> を掛けた値に <name1> の <name6> 番目の整数値を加えた値を <name4> で割った余りを <name5> とする	<name5> = ( <val2> * <name5> + int ( <name1> [ <name6> ] ) ) % <name4>	<name5> = ( <val2> * <name5> + int ( <name1> [ <name6> ] ) ) % <name4>
<name3> の <name1> に <name6> を加えた値番目の <name2> に <name4> を加えた値番目の <name5> 番目の <name3> から <val1> を引いた値番目を順に <name2> 、 <name4> 、 <name5> として、繰り返す	for <name2> , <name4> , <name5> in <name3> [ <name1> + <name6> ] [ <name2> + <name4> ] [ <name5> ] [ <name3> - <val1> ] :	. for <name2> , <name4> , <name5> in <name3> [ <name1> + <name6> ] [ <name2> + <name4> ] [ <name5> ] [ <name3> - <val1> ] :
<name6> の <name4> 番目を <name3> とする <name2> の <name4> 番目を <name5> とする <name3> の <name4> 番目を <name1> とする	<name3> = <name6> [ <name4> ] <name5> = <name2> [ <name4> ] <name1> = <name3> [ <name4> ]	<name1> = <name6> [ <name4> ] <name5> = <name2> [ <name4> ] <name1> = <name3> [ <name4> ]
<name1> の <name6> 番目、 <name1> の <name2> 番目を <name1> の <name2> 番目、 <name1> の <name6> 番目とする	<name1> [ <name2> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name2> ]	[ <name1> [ <name2> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name2> ]
<name5>	<name5>	( <name5> )
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = map ( int , <name3> . readline ( ) . split ( ) )	<name1> , <name6> = map ( int , <name3> . readline ( ) . split ( ) )
<name3> の長さのとき、	if len ( <name3> ) :	if ( len ( <name3> ) ) :
<val6> から <name5> に <val6> を加えた値未満までの <val6> に <name5> と <val6> の論理積を加えた値間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name5> + <val6> , <val6> + ( <name5> & <val6> ) ) :	. for <name1> in range ( <val6> , <name5> + <val6> , <val6> + ( <name5> & <val6> ) ) :
<name3> ( <name6> ** <val2> ) を <name1> とする	<name1> = <name3> ( <name6> ** <val2> )	<name1> = <name3> ( <name6> ** <val2> )
入力された文字列を <val2> で分割した字句列を <name4> とする	<name4> = input ( ) . split ( <val2> )	<name4> = input ( ) . split ( <val2> )
<name4> の <name2> の各要素に整数を適用した列を順に <name1> として、繰り返す	for <name1> in map ( int , <name4> . <name2> ) :	( for <name1> in map ( int , <name4> . <name2> ) :
<name4> の末尾に ( <name3> 、 <name2> の整数値 ) の組を追加する	<name4> . append ( ( <name3> , int ( <name2> ) ) )	<name4> . append ( ( <name3> , int ( <name2> ) ) )
<name5> 、 <name4> から <name1> を引いた値の最小値を <name5> とする	<name5> = min ( <name5> , <name4> - <name1> )	else = min ( <name5> , <name4> - <name1> )
<name4> を <name1> の余弦だけ増加させる	<name4> += cos ( <name1> )	<name5> += <name4> . cos ( <name1> )
<name5> ( <name2> , ( <name4> + <val3> , <val6> , ( <name1> , <name5> ) ) )	<name5> ( <name2> , ( <name4> + <val3> , <val6> , ( <name1> , <name5> ) ) )	<name5> ( <name2> , ( <name4> + <val3> , <val6> , ( <name1> , <name5> ) ) )
<name2> の上位 <val3> 個の出現頻度順の列の先頭の先頭、 <name4> を出力する	print ( <name2> . most_common ( <val3> ) [ 0 ] [ 0 ] , <name4> )	print ( <name2> . most_common ( <val3> ) [ 0 ] [ 0 ] , <name4> )
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列の集合のリストをソートした列を <name2> とする	<name2> = sorted ( list ( set ( map ( int , <name6> ( ) . split ( ) ) ) ) )	<name4> = sorted ( list ( map ( int , <name6> ( ) . split ( ) ) ) )
<name4> の各要素を <name5> とし、 <name5> が <name3> の部分集合のときの <name5> の列の集合を <name2> とする	<name2> = set ( [ <name5> for <name5> in <name4> if <name5> . issubset ( <name3> ) ] )	set = set ( [ <name5> for <name5> in <name4> if <name5> . issubset ( <name3> ) ] )
<name4> に <name6> を掛けた値、 <name5> の最大値をそうでなければ、とする	else = max ( <name4> * <name6> , <name5> )	now = max ( <name4> * <name6> , <name5> )
<name5> を <name3> の <name1> 番目だけ増加させる	<name5> += <name3> [ <name1> ]	( <name5> += <name3> [ <name1> ] )
<name2> の <name5> に <val3> を加えた値番目が <name2> の <name5> 番目と等しくないとき、	if <name2> [ <name5> + <val3> ] != <name2> [ <name5> ] :	raise <name2> [ <name5> + <val3> ] != <name2> [ <name5> ] :
<name1> の <name2> 番目を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name1> [ <name2> ]	<name2> , <name6> = <name1> [ <name2> ]
( 、つまり空列 ) からなる列の <name1> 回分の列を <name4> とする	<name4> = [ [ ] ] * <name1>	<name4> = [ [ ] ] * <name1>
<name1> をパラメータとして ( <name1> の <name5> 、 <name1> の <name2> ) の組を返す関数をキーとして <name3> をソートした列を <name6> とする	<name6> = sorted ( <name3> , key = lambda <name1> : ( <name1> . <name5> , <name1> . <name2> ) )	<name2> = sorted ( <name3> , key = lambda <name1> : ( <name1> . <name5> , <name1> . <name2> ) )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name1> 、 <name2> とする	<name5> , <name1> , <name2> = input ( ) . split ( )	+ <name5> , <name1> , <name2> = input ( ) . split ( )
<name5> に <val2> の <name4> 乗を掛けた値に <name6> を加えた値を返す	return <name5> * <val2> ** <name4> + <name6>	x = <name5> * <val2> ** <name4> + <name6>
<val1> から <name6> 未満までの <name4> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <name6> , <name4> ) :	. for <name2> in range ( <val1> , <name6> , <name4> ) :
<name4> ( <name3> . <name1> ) を <name3> の <name1> にする	<name3> . <name1> = <name4> ( <name3> . <name1> )	<name3> . <name1> = <name4> ( <name3> . <name1> )
<name4> ( <val5> . <name6> ( <name1> ( <name3> , <name2> ) ) )	<name4> ( <val5> . <name6> ( <name1> ( <name3> , <name2> ) ) )	<name4> ( <val5> . <name6> ( <name1> ( <name3> , <name2> ) ) )
<name5> の <name4> 番目を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name5> [ <name4> ]	not <name1> [ <name6> ] = <name5> [ <name4> ]
<name4> に <name5> から <name4> を引いた値を <val2> で割った商を加えた値を <name6> とする	<name6> = <name4> + ( <name5> - <name4> ) // <val2>	<name6> = <name4> + ( <name5> - <name4> ) // <val2>
<name5> の <name3> 番目に <val2> を加えた値を <name1> とする	<name1> = <name5> [ <name3> ] + <val2>	<name1> = <name5> [ <name3> ] + <val2>
<name3> の <name4> から <val1> を引いた値番目の <name6> に <val1> を加えた値番目を <val1> だけ増加させる	<name3> [ <name4> - <val1> ] [ <name6> + <val1> ] += <val1>	[ <name3> [ <name4> - <val1> ] [ <name6> + <val1> ] += <val1>
<val5> から <name2> 未満までの数列の各要素を <name4> とし、 <name6> と <val1> を <name4> だけ左シフトした値の論理積が <val5> と等しいときの <name4> の列を <name3> の <name2> 番目の <name6> 番目にする	<name3> [ <name2> ] [ <name6> ] = [ <name4> for <name4> in range ( <name2> ) if ( <name6> & ( <val1> << <name4> ) ) == <val5> ]	else [ <name3> ] [ <name6> ] = [ <name4> for <name4> in range ( <name2> ) if <name6> & ( <val1> << <name4> ) == <val5> ]
#に <name6> を掛けた値を出力する	print ( '#' * <name6> )	print ( '#' * <name6> )
<name5> が <val2> と等しくかつ <name3> ( <name1> , <name4> , <name6> ) のとき、	if <name5> == <val2> and <name3> ( <name1> , <name4> , <name6> ) :	list ( <name5> == <val2> and <name3> ( <name1> , <name4> , <name6> ) ) :
<name6> の <name2> の <val4> 番目、 <name6> の <name2> の先頭、 <name6> の <name2> の <val3> 番目、 <name6> の <name2> の <val1> 番目を <name6> の <name2> の先頭、 <name6> の <name2> の <val1> 番目、 <name6> の <name2> の <val4> 番目、 <name6> の <name2> の <val3> 番目とする	<name6> . <name2> [ 0 ] , <name6> . <name2> [ <val1> ] , <name6> . <name2> [ <val4> ] , <name6> . <name2> [ <val3> ] = <name6> . <name2> [ <val4> ] , <name6> . <name2> [ 0 ] , <name6> . <name2> [ <val3> ] , <name6> . <name2> [ <val1> ]	<name4> . <name2> [ 0 ] , <name6> . <name2> [ <val1> ] , <name6> . <name2> [ <val4> ] , <name6> . <name2> [ <val3> ] = <name6> . <name2> [ <val4> ] , <name6> . <name2> [ 0 ] , <name6> . <name2> [ <val3> ] , <name6> . <name2> [ <val1> ]
<name1> のキーの集まりを追加して <name3> を更新する	<name3> . update ( <name1> . keys ( ) )	<name3> . update ( <name1> . keys ( ) )
真を <name3> の <name2> 番目にする	<name3> [ <name2> ] = True	( <name3> [ <name2> ] = True )
<name6> の <name3> の <name1> 番目を返す	return <name6> . <name3> [ <name1> ]	yield <name6> . <name3> [ <name1> ]
<name6> から <name1> を引いた値の <val2> 乗に <name3> から <name5> を引いた値の <val2> 乗を加えた値の平方根を <name4> とする	<name4> = math . sqrt ( ( <name6> - <name1> ) ** <val2> + ( <name3> - <name5> ) ** <val2> )	<name4> = math . sqrt ( ( <name6> - <name1> ) ** <val2> + ( <name3> - <name5> ) ** <val2> )
<name2> の <name6> から <val1> を引いた値番目が <val4> と等しいとき、	if <name2> [ <name6> - <val1> ] == <val4> :	continue if <name2> [ <name6> - <val1> ] == <val4> :
<name1> の末尾に <name6> の <name2> を追加する	<name1> . append ( <name6> . <name2> )	<name1> . append ( <name6> . <name2> )
<name5> の末尾に <name3> の先頭の <name6> 番目を追加する	<name5> . append ( <name3> [ 0 ] [ <name6> ] )	<name5> . append ( <name3> [ 0 ] [ <name6> ] )
<name5> が <name2> の <name5> の長さ番目に含まれないとき、	if <name5> not in <name2> [ len ( <name5> ) ] :	sum ( <name5> ) if <name5> not in <name2> [ len ( <name5> ) ] :
<name5> のとき、 <blk> <name6> の <name3> を <name1> の <name4> にする </blk>	if <name5> : <blk> <name1> . <name4> = <name6> . <name3> </blk>	for <name5> in <name5> : <blk> <name1> . <name4> = <name6> . <name3> </blk>
<val5> を <name2> だけ左シフトした値を <name6> とする	<name6> = ( <val5> << <name2> )	( <name6> = <val5> << <name2> )
<name2> を <name4> の <name3> 番目で割った余りが <val1> と等しいとき、 <blk> <name5> ( <name2> // <name4> [ <name3> ] , <name3> ) に <val2> を加えた値を <name6> とする </blk>	if <name2> % <name4> [ <name3> ] == <val1> : <blk> <name6> = <name5> ( <name2> // <name4> [ <name3> ] , <name3> ) + <val2> </blk>	while <name2> % <name4> [ <name3> ] == <val1> : <blk> <name6> = <name5> ( <name2> // <name4> [ <name3> ] , <name3> ) + <val2> </blk>
<name5> の <name2> 番目の <name4> 番目に <val1> を加えた値を <name5> の <name6> 番目の <name4> 番目にする	<name5> [ <name6> ] [ <name4> ] = <name5> [ <name2> ] [ <name4> ] + <val1>	) [ <name6> ] [ <name4> ] = <name5> [ <name2> ] [ <name4> ] + <val1>
<name4> の <name2> の <name3> 番目を <name4> の <name2> の <name5> 番目だけ増加させる	<name4> . <name2> [ <name3> ] += <name4> . <name2> [ <name5> ]	<name2> . <name2> [ <name3> ] += <name4> . <name2> [ <name5> ]
<name5> の <name1> の先頭番目の先頭を出力する	print ( <name5> [ <name1> [ 0 ] ] [ 0 ] )	print ( <name5> [ <name1> [ 0 ] ] [ 0 ] )
 を間に入れて <name5> の各要素を <name2> とし、 <name2> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name2> ) for <name2> in <name5> ] ) )	print ( ' ' . join ( [ str ( <name2> ) for <name2> in <name5> ] ) )
<val5> から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <val5> , - 1 , - 1 ) :	in range ( <val5> , - 1 , - 1 ) :
0 から <name1> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 <val2> の列を <name5> とする	<name5> = [ <val2> for <name3> in range ( <name1> + <val6> ) ]	<name4> = [ <val2> for <name3> in range ( <name1> + <val6> ) ]
\ <name4> を <val1> だけ増加させる\	\ <name4> += <val1> \	\ <name4> += <val1> \
<name6> の <name4> に <name1> を加えた値番目の <name2> 番目が <val5> と等しいとき、	if <name6> [ <name4> + <name1> ] [ <name2> ] == <val5> :	list if <name6> [ <name4> + <name1> ] [ <name2> ] == <val5> :
<name3> が <val2> と等しくない間、次を繰り返す	while <name3> != <val2> :	del <name3> != <val2> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = map ( int , input ( ) . split ( ) )	<name4> , <name3> = map ( int , input ( ) . split ( ) )
<name3> の先頭の <val2> 番目が <name3> の <val6> 番目の <val6> 番目と等しいかどうかが <name3> の <val5> 番目の <val5> 番目と等しくかつ <name3> の先頭の <val2> 番目が <val4> と等しくないとき、	if <name3> [ <val2> ] [ <val2> ] == <name3> [ <val6> ] [ <val6> ] == <name3> [ <val5> ] [ <val5> ] and <name3> [ <val2> ] [ <val2> ] != <val4> :	for <name3> in <name3> [ <val2> ] [ <val2> ] == <name3> [ <val6> ] [ <val6> ] == <name3> [ <val5> ] [ <val5> ] and <name3> [ <val2> ] [ <val2> ] != <val4> :
<val4> を <name6> とする <val2> を <name3> とする	<name6> = <val4> <name3> = <val2>	else = <val4> <name3> = <val2>
<name2> ( <name3> , <name6> , <name5> , <name4> )	<name2> ( <name3> , <name6> , <name5> , <name4> )	set ( <name2> ( <name3> , <name6> , <name5> , <name4> ) )
ソートされた順序を保ったまま <name3> の <name5> 番目を <name6> から <name2> までの範囲で <name1> に挿入できる位置を <name4> とする	<name4> = bisect . bisect_left ( <name1> , <name3> [ <name5> ] , <name6> , <name2> )	<name4> = bisect . bisect_left ( <name1> , <name6> , <name2> )
( <name3> 、 <name4> 、 <name5> ) の組を返す	return ( <name3> , <name4> , <name5> )	yield ( <name3> , <name4> , <name5> )
<name4> に <name5> から <name4> を引いた値に <name1> ( <name5> - <name4> , <name6> - <name4> ) を掛けた値を加えた値を <name2> とする	<name2> = <name4> + ( <name5> - <name4> ) * <name1> ( <name5> - <name4> , <name6> - <name4> )	<name4> = <name4> + ( <name5> - <name4> ) + <name1> ( <name5> - <name4> , <name6> - <name4> )
<name5> ( <name3> . <name6> [ <val4> : ] )	<name5> ( <name3> . <name6> [ <val4> : ] )	<name5> ( <name3> . <name6> [ <val4> : ] )
<name2> の <name4> から <val5> を引いた値番目から <name2> の <name4> 番目を引いた値を <name6> とする	<name6> = <name2> [ <name4> - <val5> ] - <name2> [ <name4> ]	else = <name2> [ <name4> - <val5> ] - <name2> [ <name4> ]
<name6> に <name3> の <name2> 番目の <name1> 番目を加えた値を <name4> とする	<name4> = <name6> + <name3> [ <name2> ] [ <name1> ]	<name4> = <name6> + <name3> [ <name2> ] [ <name1> ]
<name5> モジュールを用いる	from <name5> import bisect_left , bisect_right , insort_left	from <name5> , Counter
<name6> の末尾に ( <val2> 、 ( <val2> 、 <val4> 、 <val5> 、 <val1> 、 <val3> 、 <val6> 、 <val2> 、 <val4> ) の組 ) の組を追加する	<name6> . append ( ( <val2> , ( <val2> , <val4> , <val5> , <val1> , <val3> , <val6> , <val2> , <val4> ) ) )	<name2> . append ( ( <val2> , ( <val2> , <val4> , <val5> , <val1> , <val3> , <val6> , <val2> , <val4> ) ) )
<name6> から <name2> を引いた値に <name4> を掛けた値を出力する	print ( ( <name6> - <name2> ) * <name4> )	print ( ( <name6> - <name2> ) * <name4> )
<name5> の <val6> に -1 を挿入する	<name5> . insert ( <val6> , - 1 )	<name1> . insert ( <val6> , - 1 )
<name3> の末尾に ( <name5> 、 <name2> 、 <name6> ) の組を追加する	<name3> . append ( ( <name5> , <name2> , <name6> ) )	<name3> . append ( ( <name5> , <name2> , <name6> ) )
<name1> の <name3> の <name2> 番目に <name1> の <name5> の <name2> 番目の <name6> 番目を加えた値が <name1> の <name3> の <name6> 番目より小さいとき、	if <name1> . <name3> [ <name2> ] + <name1> . <name5> [ <name2> ] [ <name6> ] < <name1> . <name3> [ <name6> ] :	for <name1> . <name3> [ <name2> ] + <name1> . <name5> [ <name2> ] [ <name6> ] < <name1> . <name3> [ <name6> ] :
<name3> モジュールを用いる	from <name3> import defaultdict	from <name3> import combinations
( <val4> ) からなる列の <name5> に <val2> を加えた値回分の列を <name3> とする	<name3> = [ <val4> ] * ( <name5> + <val2> )	else = [ <val4> ] * ( <name5> + <val2> )
<name6> が <name2> の、つまりソートされた順序を保ったまま <name6> を <name2> に挿入できる位置番目と等しいとき、	if <name6> == <name2> [ bisect_left ( <name2> , <name6> ) ] :	list <name6> == <name2> [ bisect_left ( <name2> , <name6> ) ] :
<name4> の総和を <name2> とする	<name2> = sum ( <name4> )	<name2> = sum ( <name4> )
改行せずに <name4> ( <name3> [ <name6> ] [ <name2> ] ) . <name5> ( <val1> ) を出力する	print ( <name4> ( <name3> [ <name6> ] [ <name2> ] ) . <name5> ( <val1> ) , end = '' )	[ <name4> ( <name3> [ <name6> ] [ <name2> ] ) . <name5> ( <val1> ) , end = '' )
<name6> の <name5> 番目を <name3> の <name2> に <name5> に <name4> を加えた値から <name1> を引いた値を <name4> から <name2> を引いた値で割った余りを加えた値番目にする	<name3> [ <name2> + ( ( <name5> + <name4> - <name1> ) % ( <name4> - <name2> ) ) ] = <name6> [ <name5> ]	<name1> [ <name3> + ( <name2> + ( <name5> + <name4> ) - <name1> ) % ( <name4> - <name2> ) ] = <name6> [ <name5> ]
<name5> 、 <name4> ( <name3> , <name2> + <val6> ) の最大値を返す	return max ( <name5> , <name4> ( <name3> , <name2> + <val6> ) )	yield max ( <name5> , <name4> ( <name3> , <name2> + <val6> ) )
<val5> から <name3> の整数値に <val4> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , int ( <name3> ) + <val4> ) :	. for <name1> in range ( <val5> , int ( <name3> ) + <val4> ) :
<val3> が <name4> の <name2> 番目と等しいとき、	if <val3> == <name4> [ <name2> ] :	continue if <val3> == <name4> [ <name2> ] :
<name4> の末尾に ( <name2> から <val5> を引いた値、 <name1> ) の組を追加する	<name4> . append ( ( <name2> - <val5> , <name1> ) )	<name4> . append ( ( <name2> - <val5> , <name1> ) )
<name5> の <name6> に <name1> を加えた値番目を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name5> [ <name6> + <name1> ]	<name4> [ <name3> ] = <name5> [ <name6> + <name1> ]
-1 、 -1 を <name1> 、 <name5> とする	<name1> , <name5> = - 1 , - 1	( <name1> , <name5> = - 1 , - 1 )
<name6> . <name3> ( <name5> , <name4> ( <name2> . <name1> , <name6> . <name3> [ <name2> . <name1> ] ) )	<name6> . <name3> ( <name5> , <name4> ( <name2> . <name1> , <name6> . <name3> [ <name2> . <name1> ] ) )	<name5> . <name3> ( <name5> , <name4> ( <name2> . <name1> , <name6> . <name3> [ <name2> . <name1> ] ) )
<name4> の <name1> 番目の <name3> 番目を <val2> だけ減少させる	<name4> [ <name1> ] [ <name3> ] -= <val2>	<name2> [ <name1> ] [ <name3> ] -= <val2>
<name6> をパラメータとして <name6> の <val3> 番目を返す関数をキーとして 0 から <val1> 未満までの数列の各要素を <name4> とし、 <name5> ( ) を空白で分割した字句列の各要素に浮動小数点数を適用した列のリストの列をソートした列を返す	return sorted ( [ list ( map ( float , <name5> ( ) . split ( ) ) ) for <name4> in range ( <val1> ) ] , key = lambda <name6> : <name6> [ <val3> ] )	return sorted ( list ( map ( float , <name5> ( ) . split ( ) ) ) for <name4> in range ( <val1> ) ] , key = lambda <name6> : <name6> [ <val3> ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの <val1> 番目から、つまり末尾までの部分列を順に <name4> として、繰り返す	for <name4> in list ( map ( int , input ( ) . split ( ) ) ) [ <val1> : ] :	for <name4> in list ( map ( int , input ( ) . split ( ) ) ) [ <val1> : ] :
0 から <name1> の長さから <val5> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name1> ) - <val5> ) :	for <name6> in range ( len ( <name1> ) - <val5> ) :
0 から <name6> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <name3> の列を <name2> の <name5> にする	<name2> . <name5> = [ <name3> for <name3> in range ( <name6> + <val1> ) ]	<name6> . <name5> = [ <name3> for <name3> in range ( <name6> + <val1> ) ]
<name5> を <val2> の <name1> 乗だけ増加させる	<name5> += <val2> ** <name1>	<name2> += <val2> ** <name1>
<name2> 、 <name3> ( <name6> ( <name5> ) , <name1> , <name4> ) に <name1> を加えた値の最小値を <name2> とする	<name2> = min ( <name2> , <name3> ( <name6> ( <name5> ) , <name1> , <name4> ) + <name1> )	<name2> = min ( <name2> , <name3> ( <name6> ( <name5> ) , <name1> , <name4> ) + <name1> )
<name4> ( <name3> [ <name6> ] ) のリストを <name3> の <name6> 番目にする	<name3> [ <name6> ] = list ( <name4> ( <name3> [ <name6> ] ) )	<name3> [ <name6> ] = list ( <name4> ( <name3> [ <name6> ] ) )
<name1> の末尾に ( <name6> に <val4> を加えた値、 <name6> に <val5> を加えた値、 <name6> に <val2> を加えた値 ) からなる列を追加する	<name1> . append ( [ <name6> + <val4> , <name6> + <val5> , <name6> + <val2> ] )	<name4> . append ( [ <name6> + <val4> , <name6> + <val5> , <name6> + <val2> ] )
<name4> . <name6> ( <name5> [ <name2> ] , - <name3> )	<name4> . <name6> ( <name5> [ <name2> ] , - <name3> )	<name5> . <name6> ( <name5> [ <name2> ] , - <name3> )
<name2> の末尾に <name6> から <val3> を引いた値に <name5> を掛けた値に <name1> に <val3> を加えた値を加えた値を追加する	<name2> . append ( ( <name6> - <val3> ) * <name5> + ( <name1> + <val3> ) )	<name2> . append ( ( <name6> - <val3> ) * <name5> + ( <name1> + <val3> ) )
<name1> を ( <name4> 、 <name6> ) からなる列だけ増加させる	<name1> += [ <name4> , <name6> ]	<name2> += [ <name4> , <name6> ]
<name5> を <name4> ( <name2> , <name3> , <name1> + <val6> , <val5> ) に <name4> ( <name3> , <name4> , <name1> , <name2> + <val6> ) を掛けた値を <name3> で割った余りだけ増加させる	<name5> += <name4> ( <name2> , <name3> , <name1> + <val6> , <val5> ) * <name4> ( <name3> , <name4> , <name1> , <name2> + <val6> ) % <name3>	<name2> += <name4> ( <name2> , <name3> , <name1> + <val6> , <val5> ) * <name4> ( <name3> , <name4> , <name1> , <name2> + <val6> ) % <name3>
<name5> を <val2> で分割した字句列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name5> . split ( <val2> )	<name2> , <name3> = <name5> . split ( <val2> )
<name2> から <name1> の <name4> 番目の <name5> 番目を引いた値から <name1> の <name6> 番目の <name3> 番目を引いた値に <name1> の <name6> 番目の <name5> 番目を加えた値を <name3> とする	<name3> = <name2> - <name1> [ <name4> ] [ <name5> ] - <name1> [ <name6> ] [ <name3> ] + <name1> [ <name6> ] [ <name5> ]	<name3> = <name2> - <name1> [ <name4> ] [ <name5> ] - <name1> [ <name6> ] [ <name3> ] + <name1> [ <name6> ] [ <name5> ]
<name1> から <name3> に <val4> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> , <name3> + <val4> ) :	continue for <name6> in range ( <name1> , <name3> + <val4> ) :
<name6> の先頭と <name6> の <val2> 番目の最大公約数を <name3> とする	<name3> = gcd ( <name6> [ 0 ] , <name6> [ <val2> ] )	<name3> = gcd ( <name6> [ 0 ] , <name6> [ <val2> ] )
<name3> ( <name1> , <val2> , <name5> -1 ) を <name6> とする	<name6> = <name3> ( <name1> , <val2> , <name5> - 1 )	<name6> = <name3> ( <name1> , <val2> , <name5> - 1 )
<name3> ( <name5> , <name1> , <name6> ) を出力する	print ( <name3> ( <name5> , <name1> , <name6> ) )	print ( <name3> ( <name5> , <name1> , <name6> ) )
<name4> から <name3> を引いた値の <val2> 乗に <name5> から <name1> を引いた値の <val2> 乗を加えた値に <name6> から <name4> を引いた値の <val2> 乗を加えた値の平方根を <name6> とする	<name6> = math . sqrt ( ( <name4> - <name3> ) ** <val2> + ( <name5> - <name1> ) ** <val2> + ( <name6> - <name4> ) ** <val2> )	<name6> = math . sqrt ( ( <name4> - <name3> ) ** <val2> + ( <name5> - <name1> ) ** <val2> + ( <name6> - <name4> ) ** <val2> )
<name1> ( <name2> , <val4> ** <val3> + <val5> ) を <name6> とする	<name6> = <name1> ( <name2> , <val4> ** <val3> + <val5> )	<name6> = <name1> ( <name2> , <val4> ** <val3> + <val5> )
<name6> の <name3> 番目の <name4> が -1 と等しいとき、	if <name6> [ <name3> ] . <name4> == - 1 :	if <name6> [ <name3> ] . <name4> == - 1 :
<name5> . <name4> ( <name6> , <name3> )	<name5> . <name4> ( <name6> , <name3> )	( <name5> . <name4> ( <name6> , <name3> ) )
<name6> の各要素を <name5> とし、 <val6> を間に入れて <name5> に番号付した組の列の各要素を <name3> 、 <name4> とし、 <name3> が <val2> と等しくまたは <name5> [ <name3> -1 ] が <val1> に含まれるときの <name4> の列を連結した文字列の列を <name1> とする	<name1> = [ <val6> . join ( [ <name4> for <name3> , <name4> in enumerate ( <name5> ) if <name3> == <val2> or <name5> [ <name3> - <val6> ] in <val1> ] ) for <name5> in <name6> ]	<name1> = [ <val6> . join ( [ str ( <name4> ) for <name3> , <name4> in enumerate ( <name5> ) if <name3> == <val2> or <name5> [ <name3> - <val6> ] in <val1> ] ) for <name5> in <name6> ]
<name2> を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name2>	( <name4> , <name3> = <name2> )
<name1> のうち <val4> 個までの順列を順に <name6> 、 <name2> として、繰り返す	for <name6> , <name2> in itertools . permutations ( <name1> , <val4> ) :	( <name6> , <name2> in permutations ( <name1> , <val4> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name1> 、 <name4> とする	<name2> , <name5> , <name1> , <name4> = map ( int , input ( ) . split ( ) )	<name5> , <name1> , <name4> = map ( int , input ( ) . split ( ) )
<name1> を <name5> とする <name3> を <name6> とする	<name5> = <name1> <name6> = <name3>	else = <name1> <name6> = <name3>
<name5> の集合	set ( <name5> )	<name5> . set ( <name5> )
<name3> ( <name4> ) のとき、 <blk> 無限の整数列を <val1> だけ増加させる </blk>	if <name3> ( <name4> ) : <blk> count += <val1> </blk>	for if <name3> ( <name4> ) : <blk> count += <val1> </blk>
<name6> を <name1> の <name3> にする	<name1> . <name3> = <name6>	( <name1> . <name3> = <name6> )
<name4> の <name6> の <val5> 番目、 <name4> の <name6> の <val2> 番目、 <name4> の <name6> の <val3> 番目、 <name4> の <name6> の <val1> 番目を <name4> の <name6> の <val2> 番目、 <name4> の <name6> の <val3> 番目、 <name4> の <name6> の <val1> 番目、 <name4> の <name6> の <val5> 番目とする	<name4> . <name6> [ <val2> ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val2> ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ]	<name2> . <name4> [ <name6> . <val2> ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val2> ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ]
<name2> の各要素に整数を適用した列のリストを <name2> とする	<name2> = list ( map ( int , <name2> ) )	<name2> = list ( map ( int , <name2> ) )
<name2> の <val6> 番目から <val1> を引いた値を <name2> の <val6> 番目にする	<name2> [ <val6> ] = <name2> [ <val6> ] - <val1>	( <name2> [ <val6> ] = <name2> [ <val6> ] - <val1> )
0 から <val5> 未満までの数列の各要素を <name4> とし、 <name4> の文字列の列を <name1> とする	<name1> = [ str ( <name4> ) for <name4> in range ( <val5> ) ]	<name4> = [ str ( <name4> ) for <name4> in range ( <val5> ) ]
<name4> の文字列を <name6> とする	<name6> = str ( <name4> )	<name5> = str ( <name4> )
<name6> ( <name4> , ( <name2> . <name3> [ <name5> ] , <name5> ) )	<name6> ( <name4> , ( <name2> . <name3> [ <name5> ] , <name5> ) )	<name5> ( <name4> , ( <name2> . <name3> [ <name5> ] , <name5> ) )
<name4> の末尾に ( <name1> 、 <name5> 、 <name2> 、 <name6> ) の組を追加する	<name4> . append ( ( <name1> , <name5> , <name2> , <name6> ) )	<name4> . append ( ( <name1> , <name5> , <name2> , <name6> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name3> 、 <name5> 、 <name1> とする	<name3> , <name5> , <name1> = sorted ( map ( int , input ( ) . split ( ) ) )	<name3> , <name5> , <name1> = sorted ( map ( int , input ( ) . split ( ) ) )
<name4> の <name1> 番目に <name5> を加えた値を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name4> [ <name1> ] + <name5>	( <name4> [ <name6> ] = <name4> [ <name1> ] + <name5> )
<name5> の末尾に <name1> に <name4> を掛けた値を追加する	<name5> . append ( <name1> * <name4> )	<name5> . append ( <name1> * <name4> )
<name4> に対応する値、もし存在しなければ <name6> 、未定値は、つまり辞書型でないとき、	if not isinstance ( <name4> . get ( <name6> , None ) , dict ) :	isinstance ( <name4> . get ( <name6> , None , None ) , dict ) :
<name1> の <name5> 番目を順に <name2> 、 <name3> として、繰り返す	for <name2> , <name3> in <name1> [ <name5> ] :	. for <name2> , <name3> in <name1> [ <name5> ] :
0 から <name1> に <name1> から <val5> を引いた値を掛けた値を <val4> で割った商未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> * ( <name1> - <val5> ) // <val4> ) :	) for <name3> in range ( <name1> * ( <name1> - <val5> ) // <val4> ) :
<name6> に <name3> を加えた値を <val5> で割った余りを <name1> とする	<name1> = ( <name6> + <name3> ) % <val5>	<name1> = ( <name6> + <name3> ) % <val5>
<name4> ( <name3> ( <name2> ) ) を出力する	print ( <name4> ( <name3> ( <name2> ) ) )	print ( <name4> ( <name3> ( <name2> ) ) )
<name2> の <name4> 番目に <name3> の <name4> 番目を加えた値を <name1> とする	<name1> = <name2> [ <name4> ] + <name3> [ <name4> ]	<name1> = <name2> [ <name4> ] + <name3> [ <name4> ]
<name1> の <name3> 番目が <val6> 以上のとき、	if ( <name1> [ <name3> ] >= <val6> ) :	for <name1> [ <name3> ] >= <val6> :
<name1> をパラメータとして ( <name1> の <name3> 、 <name1> の <name4> ) の組を返す関数をキーとして <name5> をソートした列を <name6> とする	<name6> = sorted ( <name5> , key = lambda <name1> : ( <name1> . <name3> , <name1> . <name4> ) )	( <name6> = sorted ( <name5> , key = lambda <name1> : ( <name1> . <name3> , <name1> . <name4> ) ) )
<name4> を <val2> だけ右シフトする <name1> を <val2> だけ右シフトする	<name4> >> = <val2> <name1> >> = <val2>	>> = <name4> >> = <val2> <name1> >> = <val2>
<name2> . <name3> ( <name1> . <name4> , <name6> , <name5> ) を <name1> の <name4> にする	<name1> . <name4> = <name2> . <name3> ( <name1> . <name4> , <name6> , <name5> )	<name1> . <name4> = <name2> . <name3> ( <name1> . <name4> , <name6> , <name5> )
0123456789 のリストを <name4> とする	<name4> = list ( '0123456789' )	<name2> <name4> = list ( 'ON' )
<name6> の -1 番目が <val4> と等しいとき、	if <name6> [ - 1 ] == <val4> :	> <name6> [ - 1 ] == <val4> :
<name4> の長さが <val3> より大きいとき、 <blk> <name4> の先頭を <name1> とする <sep> <name4> の <val3> 番目を <name2> とする </blk>	if len ( <name4> ) > <val3> : <blk> <name1> = <name4> [ 0 ] <sep> <name2> = <name4> [ <val3> ] </blk>	\ <name1> = len ( <name4> ) > <val3> : <blk> <name1> = <name4> [ 0 ] <sep> <name2> = <name4> [ <val3> ] </blk>
<val4> が <name3> 以下かどうかが <name1> より小さくかつ <val4> が <name2> 以下かどうかが <name1> より小さいとき、	if <val4> <= <name3> < <name1> and <val4> <= <name2> < <name1> :	list < <val4> <= <name3> < <name1> and <val4> <= <name2> < <name1> :
入力された文字列を空白で分割した字句列の組を <name6> とする	<name6> = tuple ( input ( ) . split ( ) )	<name6> = tuple ( input ( ) . split ( ) )
<name1> の文字列の長さを <name6> とする	<name6> = len ( str ( <name1> ) )	<name6> = len ( str ( <name1> ) )
<name4> の . <val6> 乗の整数値を <name2> とする	<name2> = int ( <name4> ** . <val6> )	<name2> = int ( <name4> ** . <val6> )
<name2> の <name5> の <name4> 番目の <name6> 番目を返す	return <name2> . <name5> [ <name4> ] [ <name6> ]	return <name2> . <name5> [ <name4> ] [ <name6> ]
<name4> ( <val2> , ( <val1> , <val5> ) ) を <name6> とする	<name6> = <name4> ( <val2> , ( <val1> , <val5> ) )	<name6> = <name4> ( <val2> , ( <val1> , <val5> ) )
<name4> を <name6> の <name2> 番目の <name1> 番目にする	<name6> [ <name2> ] [ <name1> ] = <name4>	( <name6> [ <name2> ] [ <name1> ] = <name4> )
<name4> をパラメータとして <name4> の先頭を返す関数をキーとして <name5> のキーと値の集まりをソートした列を順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in sorted ( <name5> . items ( ) , key = lambda <name4> : <name4> [ 0 ] ) :	. for <name6> , <name1> in sorted ( <name5> . items ( ) , key = lambda <name4> : <name4> [ 0 ] ) :
<name3> の <name5> から読み込んだ一行を <name2> とする	<name2> = <name3> . <name5> . readline ( )	<name6> . <name2> = <name3> . <name5> . <name2>
0 から <val2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> ) :	) for <name5> in range ( <val2> ) :
<name3> の整数値に <val4> を掛けた値に <name1> の整数値を加えた値を <name5> とする	<name5> = int ( <name3> ) * <val4> + int ( <name1> )	<name4> = int ( <name3> ) * <val4> + int ( <name1> )
<name2> の <name5> 番目が <name4> 以上かつ <name1> が <val3> より大きいとき、	if ( <name2> [ <name5> ] >= <name4> ) and ( <name1> > <val3> ) :	for <name2> [ <name5> ] >= <name4> and <name1> > <val3> :
<name4> のキーの集まりのリストを反転した列を <name2> とする	<name2> = reversed ( list ( <name4> . keys ( ) ) )	<name2> = reversed ( list ( <name4> . keys ( ) ) )
<name4> の <val5> 番目の整数値を <name3> とする	<name3> = int ( <name4> [ <val5> ] )	<name3> = int ( <name4> [ <val5> ] )
<name3> の <val4> 番目に <name2> を掛けた値を <name2> に <name5> を加えた値で割った値を <name6> とする	<name6> = <name3> [ <val4> ] * <name2> / ( <name2> + <name5> )	<name6> = <name3> [ <val4> ] * <name2> / ( <name2> + <name5> )
( <val2> ) からなる列に <name4> を加えた値を <name4> とする	<name4> = [ <val2> ] + <name4>	<name4> = [ <val2> ] + <name4>
<name3> に <name1> に <name2> から <name6> を引いた値を掛けた値を加えた値を <name5> とする	<name5> = <name3> + <name1> * ( <name2> - <name6> )	<name5> = <name3> + <name1> * ( <name2> - <name6> )
<name2> の末尾に ( <name6> 、 <name4> ) からなる列を追加する	<name2> . append ( [ <name6> , <name4> ] )	<name4> . append ( [ <name6> , <name4> ] )
<name3> の末尾に <name1> の日付を追加する	<name3> . append ( <name1> . date )	<name6> . append ( <name3> . append ( <name1> ) )
<name6> の先頭から <name1> を探して見つかった位置は、つまり整数型のとき、	if isinstance ( <name6> . find ( <name1> ) , int ) :	for <name6> in isinstance ( <name6> . find ( <name1> ) , int ) :
<name1> から <val3> を引いた値を <name5> とする	<name5> = <name1> - <val3>	<name5> = <name1> - <val3>
<name6> に <val5> に <name4> に <name1> を加えた値を掛けた値を加えた値に <name3> を加えた値を <name2> とする	<name2> = <name6> + <val5> * ( <name4> + <name1> ) + <name3>	<name2> = <name6> + <val5> * ( <name4> + <name1> ) + <name3>
<name1> の末尾に <name4> の長さを追加する	<name1> . append ( len ( <name4> ) )	<name1> . append ( len ( <name4> ) )
( 、つまり未定値 ) からなる列の <val3> 回分の列を <name2> とする	<name2> = [ None ] * <val3>	<name2> = [ None ] * <val3>
<name2> に番号付した組の列の各要素を <name6> 、 <name3> とし、 <name3> が <name5> の先頭と等しいときの <name6> の列を順に <name4> として、繰り返す	for <name4> in [ <name6> for <name6> , <name3> in enumerate ( <name2> ) if <name3> == <name5> [ 0 ] ] :	. for <name4> in [ <name6> for <name6> , <name3> in enumerate ( <name2> ) if <name3> == <name5> [ 0 ] ] :
<name3> ( <name4> , <name5> ) を <name2> とする	<name2> = <name3> ( <name4> , <name5> )	dict = <name3> ( <name4> , <name5> )
<name4> に番号付した組の列を順に <name5> 、 <name1> として、繰り返す	for <name5> , <name1> in enumerate ( <name4> ) :	for <name5> , <name1> in enumerate ( <name4> ) :
this を <name3> とする	<name3> = 'this'	else = 'meiji'
0 から <name2> の長さから <val3> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name2> ) - <val3> ) :	for <name6> ) in range ( len ( <name2> ) - <val3> ) :
<name3> . <name1> ( <name2> ) を追加して <name6> を拡張する	<name6> . extend ( <name3> . <name1> ( <name2> ) )	<name6> . extend ( <name3> . <name1> ( <name2> ) )
ソートされた順序を保ったまま <name1> を <name2> の <name4> に挿入できる最後の位置を <name5> とする	<name5> = bisect_right ( <name2> . <name4> , <name1> )	<name5> = bisect_right ( <name2> . <name4> , <name1> )
<name1> ( <name3> , <name4> , <name5> -1 )	<name1> ( <name3> , <name4> , <name5> - 1 )	<name1> ( <name3> , <name4> , <name5> - 1 )
% . 2 f を <name6> の <name5> から <val4> を引いた値番目の先頭で割った余りを出力する	print ( '%.2f' % <name6> [ <name5> - <val4> ] [ 0 ] )	assert 2 % <name6> [ <name5> - <val4> ] [ 0 ] )
<name6> ( <val5> , <name3> ( <name1> ) ) を出力する	print ( <name6> ( <val5> , <name3> ( <name1> ) ) )	print ( <name6> ( <val5> , <name3> ( <name1> ) ) )
( <val5> 、 <val4> 、 <val3> 、 <val2> 、 <val1> 、 <val6> 、 <val5> 、 <val4> 、 <val3> 、 <val2> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val5> , <val4> , <val3> , <val2> , <val1> , <val6> , <val5> , <val4> , <val3> , <val2> , <val1> ]	<name6> = [ <val5> , <val4> , <val3> , <val2> , <val1> , <val6> , <val5> , <val4> , <val3> , <val2> , <val1> ]
( ( <name2> , <name6> ) ) からなる辞書を <name1> の <name5> 番目にする	<name1> [ <name5> ] = { <name2> : <name6> }	( <name1> [ <name5> ] = { <name2> : <name6> } )
( <name4> ) からなる列の <name1> の <name5> 回分の列を <name3> とする	<name3> = [ <name4> ] * <name1> . <name5>	<name3> = [ <name4> ] * <name1> . <name5>
<name6> に <name4> を加えた値、 <name1> に <name3> を加えた値を <name5> 、 <name2> とする	<name5> , <name2> = <name6> + <name4> , <name1> + <name3>	[ <name5> , <name2> = <name6> + <name4> , <name1> + <name3>
<name4> をパラメータとして <name4> の <val6> 番目を返す関数をキーとして <name4> のキーと値の集まりをソートした列を <name4> とする	<name4> = sorted ( <name4> . items ( ) , key = lambda <name4> : <name4> [ <val6> ] )	<name2> = sorted ( <name4> . items ( ) , key = lambda <name4> : <name4> [ <val6> ] )
<name4> 、 <name1> 、 <name2> を <name5> の <name4> 、 <name5> の <name1> 、 <name5> の <name2> とする	<name5> . <name4> , <name5> . <name1> , <name5> . <name2> = <name4> , <name1> , <name2>	<name1> . <name4> , <name5> . <name1> , <name5> . <name2> = <name4> , <name1> , <name2>
<name4> の <name1> 番目の <name6> 番目を <name2> とする	<name2> = <name4> [ <name1> ] [ <name6> ]	<name2> = <name4> [ <name1> ] [ <name6> ]
<name6> を <name3> で割った余りでないとき、	if not <name6> % <name3> :	if not <name6> % <name3> :
<name2> ( <name3> . <name6> , <name5> ) を <name1> とする	<name1> = <name2> ( <name3> . <name6> , <name5> )	<name1> = <name2> ( <name3> . <name6> , <name5> )
<name2> に ( <name4> 、 <name5> 、 <name3> 、 <name1> ) の組を追加した集まり	<name2> . add ( ( <name4> , <name5> , <name3> , <name1> ) )	<name2> . add ( ( <name4> , <name5> , <name3> , <name1> ) )
<name5> に <val2> を加えた値を <name6> とする	<name6> = <name5> + <val2>	( <name6> = <name5> + <val2> )
<name5> ( <name2> . <name4> [ <val6> : ] )	<name5> ( <name2> . <name4> [ <val6> : ] )	<name5> ( <name2> . <name4> [ <val6> : ] )
入力された文字列を <val1> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name3> 、 <name5> 、 <name2> 、 <name4> とする	<name3> , <name5> , <name2> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val1> ) ]	<name3> , <name5> , <name2> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val1> ) ]
0 から <name4> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val6> ) :	) for <name5> in range ( <name4> + <val6> ) :
<name5> を <name3> の <name4> 番目にする <name5> を <val6> だけ増加させる	<name3> [ <name4> ] = <name5> <name5> += <val6>	<name3> [ <name4> ] = <name5> <name5> += <val6>
<name2> ( <val5> , <val1> ) を <name4> として <name3> をソートする	<name3> . sort ( <name4> = <name2> ( <val5> , <val1> ) )	<name3> . sort ( <name4> = <name2> ( <val5> , <val1> ) )
<name4> . <name5> ( <name3> , <name2> , <name6> )	<name4> . <name5> ( <name3> , <name2> , <name6> )	( <name4> . <name5> ( <name3> , <name2> , <name6> ) )
<name3> の <name2> の <name4> の <name6> 番目の末尾に <name4> を追加する	<name3> . <name2> [ <name4> . <name6> ] . append ( <name4> )	<name3> . <name2> [ <name4> . <name6> ] . append ( <name4> )
<name4> を <val1> で割った余りが <val2> と等しいかどうかを返す	return <name4> % <val1> == <val2>	x return <name4> % <val1> == <val2>
<name2> の先頭の <val5> 番目が <name2> の <val3> 番目の先頭と等しいとき、	if <name2> [ <val5> ] [ <val5> ] == <name2> [ <val3> ] [ <val5> ] :	if <name2> [ 0 ] [ <val5> ] == <name2> [ <val3> ] [ <val5> ] :
<name4> の先頭の <val2> 番目が <name6> と等しくないとき <name4> の先頭の <val2> 番目、そうでなければ -1 を出力する	print ( <name4> [ <val2> ] [ <val2> ] if <name4> [ <val2> ] [ <val2> ] != <name6> else - 1 )	print ( <name4> [ <val2> ] [ <val2> ] if <name4> [ <val2> ] [ <val2> ] != <name6> else - 1 )
<val4> を <name1> の <name5> 番目の <name2> 番目の <val6> 番目にする	<name1> [ <name5> ] [ <name2> ] [ <val6> ] = <val4>	( <name1> [ <name5> ] [ <name2> ] [ <val6> ] = <val4> )
<name2> の長さが <name3> の長さより小さいとき、	if len ( <name2> ) < len ( <name3> ) :	list ( len ( <name2> ) < len ( <name3> ) ) :
<val5> 、 <val5> 、 <val5> を <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = <val5> , <val5> , <val5>	( <name6> , <name1> , <name2> = <val5> , <val5> , <val5> )
<name5> の <name1> を <name3> だけ増加させる	<name5> . <name1> += <name3>	( <name5> . <name1> += <name3> )
<name3> と <name1> を <name3> で割った余りの最大公約数を返す	return gcd ( <name3> , <name1> % <name3> )	yield gcd ( <name3> , <name1> % <name3> )
<name5> ( <name1> ) を <name6> とする <name5> ( <name2> ) を <name3> とする	<name6> = <name5> ( <name1> ) <name3> = <name5> ( <name2> )	<name2> = <name5> ( <name1> ) <name3> = <name5> ( <name2> )
<name1> に <val2> を掛けた値に <val6> を加えた値を <name1> とする	<name1> = <name1> * <val2> + <val6>	<name1> = <name1> * <val2> + <val6>
<name1> を <name5> の <name6> 番目の <name4> 番目だけ増加させる	<name1> += <name5> [ <name6> ] [ <name4> ]	( <name1> += <name5> [ <name6> ] [ <name4> ] )
無限の整数列を <name5> の <name4> に <val2> を加えた値番目が <val3> より大きいとき <name5> の <name4> に <val2> を加えた値番目に <name6> を掛けた値、そうでなければ <name5> の <name4> に <val2> を加えた値番目に <name1> を掛けた値だけ減少させる	count -= <name5> [ <name4> + <val2> ] * <name6> if <name5> [ <name4> + <val2> ] > <val3> else <name5> [ <name4> + <val2> ] * <name1>	<name6> -= <name5> [ <name4> + <val2> ] * <name6> if <name5> [ <name4> + <val2> ] > <val3> else <name5> [ <name4> + <val2> ] * <name1>
( <name2> ) からなる列の <val1> を <name3> だけ左シフトした値回分の列を <name4> とする	<name4> = [ <name2> ] * ( <val1> << <name3> )	<name4> = [ <name2> ] * ( <val1> << <name3> )
<name1> をパラメータとして <name5> ( <name1> [ <val3> ] [ <val2> ] , <name1> [ <val3> ] [ <val3> ] ) を返す関数を <name6> として <val2> を <name4> として <name4> をソートする	<name4> . sort ( <name6> = lambda <name1> : <name5> ( <name1> [ <val3> ] [ <val2> ] , <name1> [ <val3> ] [ <val3> ] ) , <name4> = <val2> )	<name6> . sort ( <name4> = lambda <name1> : <name5> ( <name1> [ <val3> ] [ <val2> ] , <name1> [ <val3> ] [ <val3> ] ) , <name6> = <val2> )
( <val3> ) からなる列の <name5> 回分の列を <name6> の <name2> にする	<name6> . <name2> = [ <val3> ] * <name5>	<name3> . <name2> = [ <val3> ] * <name5>
<name4> に対応する値、もし存在しなければ <name3> 、 <val6> に <name2> に <name5> を掛けた値を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name4> . get ( <name3> , <val6> ) + <name2> * <name5>	<name2> [ <name3> ] = <name4> . get ( <name3> , <val6> ) + <name2> * <name5>
<val2> から <name3> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , <name3> ) :	continue for <name6> in range ( <val2> , <name3> ) :
<val5> を <name3> とする <val1> を <name2> とする	<name3> = <val5> <name2> = <val1>	<name3> = <val5> <name2> = <val1>
\ <name3> ( <val1> % <name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) ) \	\ <name3> ( <val1> % <name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) ) \	for <name3> in <name3> ( <val1> % <name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) ) \
( <val5> ) からなる列の <name1> 回分の列を <name2> とする ( <val5> ) からなる列の <name1> 回分の列を <name4> とする ( <val5> ) からなる列の <name1> 回分の列を <name3> とする	<name2> = [ <val5> ] * <name1> <name4> = [ <val5> ] * <name1> <name3> = [ <val5> ] * <name1>	<name2> = [ <val5> ] * <name1> <name4> = [ <val5> ] * <name1> <name3> = [ <val5> ] * <name1>
<name6> ( <name2> * <val1> + <val1> , <name5> + <val3> , <name4> )	<name6> ( <name2> * <val1> + <val1> , <name5> + <val3> , <name4> )	<name6> ( <name2> * <val1> + <val1> , <name5> + <val3> , <name4> )
<name4> から <val3> を引いた値と <name6> の論理積を <name4> とする	<name4> = ( <name4> - <val3> ) & <name6>	<name4> = ( <name4> - <val3> ) & <name6>
<name4> の <val1> 番目が <name2> の <val1> 番目と等しくかつ <name4> の <val5> 番目が <name2> の <val5> 番目と等しくかつ <name4> の <val6> 番目が <name2> の <val6> 番目と等しくかつ <name4> の <val3> 番目が <name2> の <val3> 番目と等しいとき、	if <name4> [ <val1> ] == <name2> [ <val1> ] and <name4> [ <val5> ] == <name2> [ <val5> ] and <name4> [ <val6> ] == <name2> [ <val6> ] and <name4> [ <val3> ] == <name2> [ <val3> ] :	if <name4> [ <val1> ] == <name2> [ <val1> ] and <name4> [ <val5> ] == <name2> [ <val5> ] and <name4> [ <val6> ] == <name2> [ <val6> ] and <name4> [ <val3> ] == <name2> [ <val3> ] :
<name2> の <name5> 番目の <name3> 番目を <name4> とする	<name4> = <name2> [ <name5> ] [ <name3> ]	<name4> = <name2> [ <name5> ] [ <name3> ]
<val3> を <name1> の <name6> の先頭の <val2> 番目にする	<name1> . <name6> [ <val2> ] [ <val2> ] = <val3>	( <name1> . <name6> [ <val2> ] [ <val2> ] = <val3> )
<name5> に <name5> を掛けた値から <name4> 未満までの <name5> に <name5> を掛けた値間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name5> * <name5> , <name4> , <name5> * <name5> ) :	. for <name3> in range ( <name5> * <name5> , <name4> , <name5> * <name5> ) :
<name4> の末尾の <name6> 番目を <name1> とする	<name1> = <name4> [ - 1 ] [ <name6> ]	<name1> = <name4> [ - 1 ] [ <name6> ]
<name1> が <val6> より小さくまたは <name1> を <val6> で割った余りが <val3> と等しいとき、	if <name1> < <val6> or <name1> % <val6> == <val3> :	list ( <name1> < <val6> or <name1> % <val6> == <val3> ) :
<name1> ( <name3> * <name4> ) を <name3> とする	<name3> = <name1> ( <name3> * <name4> )	<name3> = <name1> ( <name3> * <name4> )
<name1> の長さ、 <name6> の長さを <name2> 、 <name4> とする	<name2> , <name4> = len ( <name1> ) , len ( <name6> )	dict , <name4> = len ( <name1> ) , len ( <name6> )
( ( <val4> 、 <val4> ) の組 ) の集合を <name3> の <name2> 番目にする	<name3> [ ( <name2> ) ] = { ( <val4> , <val4> ) }	<name3> [ <name2> ] = { ( <val4> , <val4> ) }
<val2> の -10 乗を <name3> とする	<name3> = <val2> ** - <val2>	<name3> = <val2> ** - 10
<name4> かつ <name4> . <name5> ( <val6> ) が <name4> . <name5> ( <val3> ) と等しいとき、 <blk> <val2> を出力する </blk>	if <name4> and <name4> . <name5> ( <val6> ) == <name4> . <name5> ( <val3> ) : <blk> print ( <val2> ) </blk>	<blk> if <name4> and <name4> . <name5> ( <val6> ) == <name4> . <name5> ( <val3> ) : <blk> print ( <val2> ) </blk>
<name5> から <name2> の末尾を引いた値の絶対値を <name6> とする	<name6> = abs ( <name5> - <name2> [ - 1 ] )	else = abs ( <name5> - <name2> [ - 1 ] )
<name6> の先頭を <name5> の <name1> にする	<name5> . <name1> = <name6> [ 0 ]	( <name5> . <name1> = <name6> [ 0 ] )
<name6> の <val2> 番目を <name1> に <name5> の <val2> 番目を掛けた値だけ減少させる	<name6> [ <val2> ] -= ( <name1> * <name5> [ <val2> ] )	<name6> [ <val2> ] -= <name1> * <name5> [ <val2> ]
<name4> の <name5> が <name3> の <name5> より小さいとき、	if <name4> . <name5> < <name3> . <name5> :	isinstance ( <name4> . <name5> < <name3> . <name5> ) :
<name4> の末尾に ( <name1> 、 <name5> ) からなる列を追加する	<name4> . append ( [ <name1> , <name5> ] )	<name4> . append ( [ <name1> , <name5> ] )
<name3> を <val4> で割った余りを <name6> とする	<name6> = <name3> % <val4>	( <name6> = <name3> % <val4> )
<name6> の <name4> に <name5> に <name3> を掛けた値を加えた値を返す	return <name6> . <name4> + <name5> * <name3>	yield <name6> . <name4> + <name5> * <name3>
<name3>	<name3>	print ( <name3> )
<name6> の <name1> の各要素に整数を適用した列のリストを <name5> とする	<name5> = list ( map ( int , <name6> . <name1> ) )	<name5> = list ( map ( int , <name6> . <name1> ) )
<name3> または <name5> ( <name6> , <name2> , <name4> ) を <name3> とする	<name3> = <name3> or <name5> ( <name6> , <name2> , <name4> )	else = <name3> or <name5> ( <name6> , <name2> , <name4> )
<name2> の各要素を <name3> とし、 <name3> の最大値の列の最大値を出力する	print ( max ( [ max ( <name3> ) for <name3> in <name2> ] ) )	print ( max ( [ max ( <name3> ) for <name3> in <name2> ] ) )
<name4> の <name6> 番目が -1 と等しいとき <val3> 、そうでなければ <name2> の <name6> 番目の長さが <val5> と等しいとき <val1> 、そうでなければ <val3> を <name5> とする	<name5> = <val3> if <name4> [ <name6> ] == - 1 else <val1> if len ( <name2> [ <name6> ] ) == <val5> else <val3>	else = <val3> if <name4> [ <name6> ] == - 1 else <val1> if len ( <name2> [ <name6> ] ) == <val5> else <val3>
\ <name1> ( <val3> % ( <name4> + <val6> ) ) \	\ <name1> ( <val3> % ( <name4> + <val6> ) ) \	for <name1> ( <val3> % ( <name4> + <val6> ) ) \
<name6> 内の <name6> の先頭と等しい要素を取り除く	<name6> . remove ( <name6> [ 0 ] )	not <name6> . remove ( <name6> [ 0 ] )
<name5> の、つまり先頭から <val1> 番目までの部分列を <name5> とする	<name5> = <name5> [ : <val1> ]	else = <name5> [ : <val1> ]
<name5> の <name4> の <name6> 番目と等しい要素の最初の位置を <name1> とする	<name1> = <name5> . index ( <name4> [ <name6> ] )	<name4> = <name5> . index ( <name4> [ <name6> ] )
<name3> が <val4> 以上のとき <val2> 、そうでなければ <val5> を出力する	print ( <val2> if <name3> >= <val4> else <val5> )	print ( <val2> if <name3> >= <val4> else <val5> )
<name2> ( <name1> . <name6> , <name3> ) を <name4> とする	<name4> = <name2> ( <name1> . <name6> , <name3> )	<name4> = <name2> ( <name1> . <name6> , <name3> )
- <name5> を <name5> とする - <name4> を <name4> とする	<name5> = - <name5> <name4> = - <name4>	<name1> = - <name5> <name4> = - <name4>
<name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name3> とする	<name2> , <name5> , <name3> = map ( int , <name4> . readline ( ) . split ( ) )	<name2> , <name5> , <name3> = map ( int , <name4> . readline ( ) . split ( ) )
0 から <name4> に <val3> を加えた値未満までの数列の各要素を <name2> とし、 <val5> の浮動小数点数の列を <name1> とする	<name1> = [ float ( <val5> ) for <name2> in range ( <name4> + <val3> ) ]	<name1> = [ float ( <val5> ) for <name2> in range ( <name4> + <val3> ) ]
<name4> を <name6> と <name4> の最大公約数分の一にする	<name4> // = gcd ( <name6> , <name4> )	not <name4> // = gcd ( <name6> , <name4> )
<name2> が <name3> の <name5> 番目と等しいとき、 <blk> <name4> の <name5> 番目に <val6> を加えた値を <name1> の <name5> に <val6> を加えた値番目にする </blk>	if <name2> == <name3> [ <name5> ] : <blk> <name1> [ <name5> + <val6> ] = <name4> [ <name5> ] + <val6> </blk>	\ <name1> [ <name5> + <val6> ] = <name2> == <name3> [ <name5> ] : <blk> <name1> [ <name5> + <val6> ] = <name4> [ <name5> ] + <val6> </blk>
<name5> ( <name4> . <name1> [ <val6> : ] )	<name5> ( <name4> . <name1> [ <val6> : ] )	<name5> ( <name4> . <name1> [ <val6> : ] )
<name5> が <val2> と等しくない間、次を繰り返す	while <name5> != <val2> :	del ( <name5> != <val2> ) :
<name6> の <name4> 番目から <name1> 番目までの部分列に <name6> の <name5> 番目から <name4> 番目までの部分列を加えた値を <name6> の <name5> 番目から <name1> 番目までの部分列にする	<name6> [ <name5> : <name1> ] = <name6> [ <name4> : <name1> ] + <name6> [ <name5> : <name4> ]	<name4> [ <name5> : <name1> ] = <name6> [ <name4> : <name1> ] + <name6> [ <name5> : <name4> ]
0 から <name4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の浮動小数点数の列を <name2> とする	<name2> = [ float ( input ( ) ) for <name3> in range ( <name4> ) ]	<name2> = [ float ( input ( ) ) for <name3> in range ( <name4> ) ]
<val5> に <name3> を加えた値を出力する	print ( <val5> + <name3> )	print ( <val5> + <name3> )
<name2> ( <name4> ) に <val6> を加えた値に <name3> の文字列を加えた値に <val6> を加えた値に <name1> の文字列を加えた値を出力する	print ( <name2> ( <name4> ) + <val6> + <name2> ( <name3> ) + <val6> + <name2> ( <name1> ) )	[ print ( <name2> ( <name4> ) + <val6> + <name2> ( <name3> ) ) + <val6> + <name2> ( <name1> ) )
<name6> を <name3> で割った値を <name5> とする	<name5> = <name6> / <name3>	<name2> <name5> = <name6> / <name3>
<name6> が <name5> と等しいかどうかが <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <name5> == <val2> : <blk> break </blk>	\ if <name6> == <name5> == <val2> : <blk> break </blk>
( <val4> ) からなる列の <val2> に <name6> を掛けた値回分の列を <name3> とする	<name3> = [ <val4> ] * ( <val2> * <name6> )	<name3> = [ <val4> ] * ( <val2> * <name6> )
コマンド <name4> を実行する	call ( <name4> )	'ON' . call ( <name4> )
<name2> に <val4> を掛けた値に <name1> を掛けた値を <name3> とする	<name3> = <name2> * <val4> * <name1>	<name3> = <name2> * <val4> * <name1>
<val6> を間に入れて <name2> ( * <name5> ) の各要素に整数を適用した列を連結した文字列を出力する	print ( <val6> . join ( map ( str , <name2> ( * <name5> ) ) ) )	<val1> print ( <val6> . join ( map ( str , <name2> ( * <name5> ) ) ) )
( <name3> 、 <name2> の <val4> 番目に <val4> を加えた値 ) からなる列を <name1> とする	<name1> = [ <name3> , <name2> [ <val4> ] + <val4> ]	<name1> = [ <name3> , <name2> [ <val4> ] + <val4> ]
<name2> ( <name6> , <name5> , <name3> , <name4> , <name1> ) のとき、	if <name2> ( <name6> , <name5> , <name3> , <name4> , <name1> ) :	isinstance ( <name2> ( <name6> , <name5> , <name3> , <name4> , <name1> ) ) :
<val2> の順序数を <name1> とする	<name1> = ord ( <val2> )	<name1> = ord ( <val2> )
<name2> が <val5> と等しくかつ <name6> が <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <val5> and <name6> == <val5> : <blk> break </blk>	enumerate ( <name2> == <val5> and <name6> == <val5> ) : <blk> break </blk>
<val6> に <name1> . <name5> ( <name2> ) を掛けた値に <val4> を加えた値の整数値を出力する	print ( int ( <val6> * <name1> . <name5> ( <name2> ) + <val4> ) )	<val6> print ( int ( <name1> * <name1> . <name5> ( <name2> ) + <val4> ) )
<name6> の <name3> に <val1> を掛けた値に <name4> を加えた値番目が <name5> より大きいとき、	if <name6> [ <name3> * <val1> + <name4> ] > <name5> :	list ( <name6> [ <name3> * <val1> + <name4> ] > <name5> ) :
( <name2> の <name4> の長さ、 <name2> の <name4> の先頭の長さ ) の組を返す	return ( len ( <name2> . <name4> ) , len ( <name2> . <name4> [ 0 ] ) )	x return ( len ( <name2> . <name4> ) , len ( <name2> . <name4> [ 0 ] ) )
<name4> を <name2> の、つまり先頭から、つまり末尾までの部分列にする	<name2> [ : ] = <name4>	( <name2> [ : ] = <name4> )
<name2> の <name3> に <val4> を加えた値番目の <name6> 番目を <name2> の <name3> 番目の <name6> 番目にする	<name2> [ <name3> ] [ <name6> ] = <name2> [ <name3> + <val4> ] [ <name6> ]	<name6> [ <name3> ] [ <name6> ] = <name2> [ <name3> + <val4> ] [ <name6> ]
<name3> を <val2> で割った余りを出力する	print ( <name3> % <val2> )	print ( <name3> % <val2> )
<name5> ( <name2> [ <val1> ] , <name2> [ <val3> ] )	<name5> ( <name2> [ <val1> ] , <name2> [ <val3> ] )	<name4> ( <name2> [ <val1> ] , <name2> [ <val3> ] )
<name5> の <name4> 番目の <name3> 番目に <name5> の <name3> 番目の <name2> 番目を加えた値が <name5> の <name4> 番目の <name2> 番目より大きいとき、	if <name5> [ <name4> ] [ <name3> ] + <name5> [ <name3> ] [ <name2> ] > <name5> [ <name4> ] [ <name2> ] :	> <name5> [ <name4> ] [ <name3> ] + <name5> [ <name3> ] [ <name2> ] > <name5> [ <name4> ] [ <name2> ] :
<name2> が <val6> と等しい間、次を繰り返す	while <name2> == <val6> :	for <name2> in <name2> == <val6> :
<val2> が <name5> に含まれるとき、 <blk> 繰り返しを中断する </blk>	if <val2> in <name5> : <blk> break </blk>	list ( <val2> in <name5> ) : <blk> break </blk>
<name6> の各要素を <name5> とし、 <name5> のリストの列を <name4> とする	<name4> = [ list ( <name5> ) for <name5> in <name6> ]	<name4> = [ list ( <name5> ) for <name5> in <name6> ]
<name2> の <name4> 番目に <name1> の <name6> 番目から <name1> の <name3> 番目を引いた値を掛けた値に <name5> の <name6> 番目を加えた値を <name5> とする	<name5> = <name2> [ <name4> ] * ( <name1> [ <name6> ] - <name1> [ <name3> ] ) + <name5> [ <name6> ]	<name5> = <name2> [ <name4> ] * ( <name1> [ <name6> ] - <name1> [ <name3> ] ) + <name5> [ <name6> ]
<name5> ( <name6> ) に <val4> を加えた値に <name1> の文字列を加えた値に <val2> を加えた値に <name6> に <name1> を掛けた値の文字列を加えた値を出力する	print ( <name5> ( <name6> ) + <val4> + <name5> ( <name1> ) + <val2> + <name5> ( <name6> * <name1> ) )	<name5> ( <name6> ) + <val4> + <name5> ( <name1> ) + <val2> + <name5> ( <name6> * <name1> ) )
<name3> の <name1> を順に <name6> として、繰り返す	for <name6> in <name3> . <name1> :	. for <name6> in <name3> . <name1> :
0 から <val5> に <name3> を掛けた値に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val5> * <name3> + <val4> ) :	for <name2> in range ( <val5> * <name3> + <val4> ) :
<name4> から <name5> に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> , <name5> + <val2> ) :	. for <name3> in range ( <name4> , <name5> + <val2> ) :
<name4> から <name3> を引いた値から <val1> を引いた値を <name6> で割った商を <name2> とする	<name2> = ( <name4> - <name3> - <val1> ) // <name6>	<name2> = ( <name4> - <name3> - <val1> ) // <name6>
<name5> の <val1> 番目が <name4> と等しくないとき、	if <name5> [ <val1> ] is <name4> :	raise <name5> [ <val1> ] is <name4> :
<name6> の、つまり先頭から <val1> 番目までの部分列を順に <name2> として、繰り返す	for <name2> in <name6> [ : <val1> ] :	in <name6> [ : <val1> ] :
<name2> の末尾に <name4> に <name1> を掛けた値を追加する	<name2> . append ( <name4> * <name1> )	<name2> . append ( <name4> * <name1> )
<name3> において正規表現 <name6> が最初にマッチする位置を返す	return search ( <name6> , <name3> )	return search ( <name6> , <name3> )
<val4> から <name1> 未満までの数列を順に <name4> として、繰り返す <blk> <val4> を <name5> の <name6> 番目の <name3> から <name4> を引いた値から <val2> を引いた値番目にする </blk>	for <name4> in range ( <name1> ) : <blk> <name5> [ <name6> ] [ <name3> - <name4> - <val2> ] = <val4> </blk>	try : for <name4> in range ( <name1> ) : <blk> <name5> [ <name6> ] [ <name3> - <name4> - <val2> ] = <val4> </blk>
<name1> ( <name3> + <val5> ) を <name6> とする	<name6> = <name1> ( <name3> + <val5> )	<name6> = <name1> ( <name3> + <val5> )
<name4> が <name3> の長さから <val5> を引いた値と等しくないとき、	if <name4> != len ( <name3> ) - <val5> :	raise <name4> != len ( <name3> ) - <val5> :
<name5> の順序数から <val3> を引いた値を <name6> とする	<name6> = ord ( <name5> ) - <val3>	<name6> = ord ( <name5> ) - <val3>
<name5> の <name6> 番目が <name2> と等しいとき、 <blk> <name6> に <val1> を加えた値を出力する </blk>	if <name5> [ <name6> ] == <name2> : <blk> print ( <name6> + <val1> ) </blk>	continue if <name5> [ <name6> ] == <name2> : <blk> print ( <name6> + <val1> ) </blk>
\ <name5> ( <val6> . <name4> ( [ <val3> % ( <name2> , <name1> ) fori , dinenumerate ( <name5> ) ] ) ) \	\ <name5> ( <val6> . <name4> ( [ <val3> % ( <name2> , <name1> ) for <name2> , <name1> in enumerate ( <name5> ) ] ) ) \	from <name5> ( <val6> . <name4> ( [ <val3> % ( <name2> , <name1> ) for <name2> , <name1> in enumerate ( <name5> ) ] ) ) \
<name3> の先頭を取り出した値を展開し、それぞれ <name5> 、 <name6> 、 <name2> とする	<name5> , <name6> , <name2> = <name3> . pop ( )	<name2> , <name5> , <name6> , <name2> = <name3> . pop ( )
<name3> から <val1> を引いた値を <val5> で割った商に <name4> を加えた値を <name6> とする	<name6> = ( <name3> - <val1> ) // <val5> + <name4>	<name2> = ( <name3> - <val1> ) // <val5> + <name4>
<val4> から <name2> に <name3> を加えた値、 <name3> の最小値に <val4> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , min ( <name2> + <name3> , <name3> ) + <val4> ) :	. for <name5> in range ( <val4> , min ( <name2> + <name3> , <name3> ) + <val4> ) :
<name1> が <name6> と等しくない間、次を繰り返す	while <name1> != <name6> :	del <name1> != <name6> :
<name5> を展開し、それぞれ <name1> 、 <name4> 、 <name6> 、 <name3> とする	<name1> , <name4> , <name6> , <name3> = <name5>	<name2> , <name1> , <name4> , <name6> , <name3> = <name5>
0 から <name4> 未満までの数列の各要素を <name6> とし、 <name3> [ <name2> ] [ <name6> ] に <name3> [ <name6> ] [ <name5> ] を加えた値に <name3> [ <name6> ] の <name1> 番目を加えた値の列の最小値を出力する	print ( min ( [ <name3> [ <name2> ] [ <name6> ] + <name3> [ <name6> ] [ <name5> ] + <name3> [ <name6> ] [ <name1> ] for <name6> in range ( <name4> ) ] ) )	print ( min ( [ <name3> [ <name2> ] [ <name6> ] + <name3> [ <name6> ] [ <name5> ] + <name3> [ <name6> ] [ <name1> ] for <name6> in range ( <name4> ) ] ) )
<name6> が <name4> と等しくないとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> != <name4> : <blk> continue </blk>	\ if <name6> != <name4> : <blk> continue </blk>
<name2> の先頭の <val4> 番目が <name3> から <val1> を引いた値より小さいとき、 <blk> <name5> の -1 番目に <name5> の -2 番目を加えた値を <name2> の先頭の先頭で割った値を出力する </blk>	if <name2> [ 0 ] [ <val4> ] < <name3> - <val1> : <blk> print ( ( <name5> [ - <val4> ] + <name5> [ - <val1> ] ) / <name2> [ 0 ] [ 0 ] ) </blk>	<blk> if <name2> [ <val4> ] [ <val4> ] < <name3> - <val1> : <blk> print ( ( <name5> [ - <val1> ] + <name5> [ - <val1> ] ) / <name2> [ <val4> ] [ <val1> ] ) </blk>
( ( <name5> から <val6> を引いた値 ) からなる列の 0 から <name4> 未満までの数列の各要素を <name1> とし、 <name2> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <name5> - <val6> ] * [ <name2> for <name1> in range ( <name4> ) ] ]	else = [ [ <name5> - <val6> ] * [ <name2> for <name1> in range ( <name4> ) ] ]
<name5> ( <name3> , ( - ( <name1> + <name4> ) , <name2> , <name6> + <val5> ) )	<name5> ( <name3> , ( - ( <name1> + <name4> ) , <name2> , <name6> + <val5> ) )	<name2> ( <name3> , ( - ( <name1> + <name4> ) , <name2> , <name6> + <val5> ) )
( <name6> から <name1> を引いた値、 <name5> から <name2> を引いた値 ) からなる列を <name4> とする	<name4> = [ <name6> - <name1> , <name5> - <name2> ]	<name4> = [ <name6> - <name1> , <name5> - <name2> ]
( ( -1 ) からなる列の <val1> に <name4> ( ) を空白で分割した字句列を加えた値に ( -1 ) からなる列の <name2> ( <name5> ) の各要素を <name6> とし、 <val1> の列回分の列を加えた値回分の列 ) からなる列を <name3> とする	<name3> = [ [ - 1 ] * <val1> + <name4> ( ) . split ( ) + [ - 1 ] * [ <val1> for <name6> in <name2> ( <name5> ) ] ]	<name3> = [ [ - 1 ] * <val1> + <name4> ( ) . split ( ) + [ - 1 ] * [ <val1> for <name6> in <name2> ( <name5> ) ] ]
<name5> から <name3> を引いた値を返す	return <name5> - <name3>	yield <name5> - <name3>
<name4> を順に <name2> 、 <name1> として、繰り返す	for <name2> , <name1> in <name4> :	: for <name2> , <name1> in <name4> :
<name5> に <name6> から <name5> を引いた値を <val3> で割った商を加えた値を <name4> とする	<name4> = <name5> + ( <name6> - <name5> ) // <val3>	<name4> = <name5> + ( <name6> - <name5> ) // <val3>
<name1> のコピーされた列を <name4> とする	<name4> = <name1> [ : ]	<name4> = <name1> [ : ]
<name6> の末尾に ( <name5> に <val2> を掛けた値の整数値、 <name3> に <val2> を掛けた値の整数値 ) の組を追加する	<name6> . append ( ( int ( <name5> * <val2> ) , int ( <name3> * <val2> ) ) )	<name2> . append ( ( int ( <name5> * <val2> ) , int ( <name3> * <val2> ) ) )
<name4> を <name5> の <name3> と <name6> の排他論理和番目にする	<name5> [ <name3> ^ <name6> ] = <name4>	( <name5> [ <name3> ^ <name6> ] = <name4> )
<name6> の <name3> 番目の <name1> 番目から <name6> の <name2> -1 番目の <name1> 番目を引いた値から <name6> の <name3> 番目の <name5> から <val4> を引いた値番目を引いた値に <name6> の <name2> から <val4> を引いた値番目の <name5> から <val4> を引いた値番目を加えた値を <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name6> [ <name3> ] [ <name1> ] - <name6> [ <name2> - <val4> ] [ <name1> ] - <name6> [ <name3> ] [ <name5> - <val4> ] + <name6> [ <name2> - <val4> ] [ <name5> - <val4> ]	<name6> [ <val5> ] = <name6> [ <name3> ] [ <name1> ] - <name6> [ <name2> - <val4> ] [ <name1> ] - <name6> [ <name3> ] [ <name5> - <val4> ] + <name6> [ <name2> - <val4> ] [ <name5> - <val4> ]
<name1> と <name5> の <name4> 番目を割ったときの ( 商を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = divmod ( <name1> , <name5> [ <name4> ] )	<name6> , <name1> = divmod ( <name1> , <name5> [ <name4> ] )
0 から <name1> 未満までの数列の各要素を <name2> とし、 <val3> を間に入れて <name4> の <name2> 番目を連結した文字列を出力するの列	[ print ( <val3> . join ( <name4> [ <name2> ] ) ) for <name2> in range ( <name1> ) ]	. [ print ( <val3> . join ( <name4> [ <name2> ] ) ) for <name2> in range ( <name1> ) ]
<name3> を <name2> だけ減少させる <name1> を <name6> だけ減少させる	<name3> -= <name2> <name1> -= <name6>	<name3> -= <name2> <name1> -= <name6>
<name2> の <val1> 番目、 <name5> を出力する	print ( <name2> [ <val1> ] , <name5> )	print ( <name2> [ <val1> ] , <name5> )
<name2> ( <name4> , <name1> * <val3> + <val5> , <name6> )	<name2> ( <name4> , <name1> * <val3> + <val5> , <name6> )	<name6> ( <name2> ( <name4> , <name1> * <val3> + <val5> , <name6> ) )
<name3> 内の <val2> を <name5> の文字列で置き換えた文字列を <name6> とする	<name6> = <name3> . replace ( <val2> , str ( <name5> ) )	<name6> = <name3> . replace ( <val2> , str ( <name5> ) )
<name1> モジュールを用いる	from <name1> import	return from <name1> import combinations
0 から <name5> 未満までの数列の各要素を <name1> とし、 <val3> の列を <name2> とする	<name2> = [ <val3> for <name1> in range ( <name5> ) ]	<name6> = [ <val3> for <name1> in range ( <name5> ) ]
<name5> ( <name3> , <name1> , <name4> ) を <name6> とする	<name6> = <name5> ( <name3> , <name1> , <name4> )	<name6> = <name5> ( <name3> , <name1> , <name4> )
<name2> の <name4> の <name3> 番目が、つまり未定値と等しいとき、	if <name2> . <name4> [ <name3> ] is not None :	for <name2> . <name4> [ <name3> ] is not None :
<name6> の <val1> 番目を <name5> だけ増加させる	<name6> [ <val1> ] += <name5>	( <name6> [ <val1> ] += <name5> )
<name2> の <name3> 番目の <name6> 番目から <name1> を引いた値から <name2> の <name4> 番目の <name6> 番目を引いた値に <name2> の <name4> 番目の <name5> 番目を加えた値を <name5> とする	<name5> = <name2> [ <name3> ] [ <name6> ] - <name1> - <name2> [ <name4> ] [ <name6> ] + <name2> [ <name4> ] [ <name5> ]	<name5> = <name2> [ <name3> ] [ <name6> ] - <name1> - <name2> [ <name4> ] [ <name6> ] + <name2> [ <name4> ] [ <name5> ]
( <val5> 、 <val1> 、 <val4> ) の組を順に <name2> として、繰り返す	for <name2> in ( <val5> , <val1> , <val4> ) :	in ( <val5> , <val1> , <val4> ) :
<name1> から <val5> を引いた値から <val3> 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> - <val5> , <val3> , - <val5> ) :	range for <name6> in range ( <name1> - <val5> , <val3> , - <val5> ) :
( <name2> 、 <val6> を四捨五入した整数値、 <name5> 、 <val6> を四捨五入した整数値 ) の組を返す	return ( round ( <name2> , <val6> ) , round ( <name5> , <val6> ) )	return ( round . round ( <name2> , <val6> ) , round ( <name5> , <val6> ) )
( <val2> 、 <val3> 、 <val1> 、 <val5> ) からなる列を <name6> とする	<name6> = [ <val2> , <val3> , <val1> , <val5> ]	<name6> = [ <val2> , <val3> , <val1> , <val5> ]
<name3> の -2 番目に <name3> の末尾を加えた値を <name3> の -2 番目にする	<name3> [ - 2 ] = <name3> [ - 2 ] + <name3> [ - 1 ]	( <name3> [ - 2 ] = <name3> [ - 2 ] + <name3> [ - 1 ] )
<name1> の <name2> の <name4> 番目の <name5> 番目を返す	return <name1> . <name2> [ <name4> ] [ <name5> ]	yield <name1> . <name2> [ <name4> ] [ <name5> ]
<name3> を展開し、それぞれ <name4> 、 <name5> 、 <name2> とする	<name4> , <name5> , <name2> = <name3>	<name1> , <name5> , <name2> = <name3>
<name6> の <name5> から読み込んだ一行の整数値から <val4> を引いた値を <name3> とする	<name3> = int ( <name6> . <name5> . readline ( ) ) - <val4>	<name3> = int ( <name6> . <name5> . readline ( ) ) - <val4>
<name6> ( <name1> . <name2> [ <val3> : ] )	<name6> ( <name1> . <name2> [ <val3> : ] )	<name5> ( <name1> . <name2> [ <val3> : ] )
<name4> の先頭から <val5> を探して見つかった位置を <name6> とする	<name6> = <name4> . find ( <val5> )	<name6> = <name4> . find ( <val5> )
<name5> が <name3> 以下かつ <name3> が <name1> 以下かつ <name4> が <name6> 以下かつ <name6> が <name2> 以下のとき、	if <name5> <= <name3> and <name3> <= <name1> and <name4> <= <name6> and <name6> <= <name2> :	<= if <name5> <= <name3> and <name3> <= <name1> and <name4> <= <name6> and <name6> <= <name2> :
<name6> の辞書カウンタを <name1> とする	<name1> = collections . Counter ( <name6> )	<name1> = Counter ( <name6> )
<name3> に <name5> の <val4> 番目の整数値に <name1> の <name6> 番目の <val4> 番目を掛けた値を加えた値を <name2> とする	<name2> = <name3> + int ( <name5> [ <val4> ] ) * <name1> [ <name6> ] [ <val4> ]	input = <name3> + int ( <name5> [ <val4> ] ) * <name1> [ <name6> ] [ <val4> ]
ソートされた順序を保ったまま <name5> を <name4> に挿入できる最後の位置を出力する	print ( bisect . bisect ( <name4> , <name5> ) )	print ( bisect . bisect_right ( <name4> , <name5> ) )
<name3> でないを <name3> とする	<name3> = not <name3>	<name3> = not <name3>
0 から <val1> に <name4> を掛けた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> * <name4> ) :	for <name2> in range ( <val1> * <name4> ) :
0 から <name3> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列の列を <name1> とする	<name1> = [ input ( ) for <name4> in range ( <name3> ) ]	<name6> = [ input ( ) for <name4> in range ( <name3> ) ]
<name1> の先頭が <val2> より小さいとき、 <blk> 繰り返しを中断する </blk>	if <name1> [ <val2> ] < <val2> : <blk> break </blk>	for if <name1> [ 0 ] < <val2> : <blk> break </blk>
<name1> の <name3> の <name5> に <val2> を加えた値番目を返す	return <name1> . <name3> [ <name5> + <val2> ]	yield <name1> . <name3> [ <name5> + <val2> ]
<name6> の <name2> 番目を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name6> [ <name2> ]	( <name3> [ <name4> ] = <name6> [ <name2> ] )
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列のリストを展開し、それぞれ <name6> 、 <name5> 、 <name2> 、 <name3> 、 <name1> 、 <name4> 、 <name6> 、 <name5> とする </blk>	try : <blk> <name6> , <name5> , <name2> , <name3> , <name1> , <name4> , <name6> , <name5> = list ( map ( float , input ( ) . split ( ) ) ) </blk>	: try : <blk> <name6> , <name5> , <name2> , <name3> , <name1> , <name4> , <name6> , <name5> = list ( map ( float , input ( ) . split ( ) ) ) </blk>
dai - kichi を返す	return 'dai-kichi'	return sorted_dist . sum ( )
<name3> ( <name6> . <name2> - <name6> . <name4> ) を <name1> とする	<name1> = <name3> ( <name6> . <name2> - <name6> . <name4> )	<name1> = <name3> ( <name6> . <name2> - <name6> . <name4> )
<name1> の <name3> 番目を <name4> の <name3> 番目だけ増加させる	<name1> [ <name3> ] += <name4> [ <name3> ]	<name2> [ <name3> ] += <name4> [ <name3> ]
<name2> . <name6> ( <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val3> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val2> ] , <name2> . <name4> [ <val6> ] , <name2> . <name4> [ <val4> ] )	<name2> . <name6> ( <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val3> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val2> ] , <name2> . <name4> [ <val6> ] , <name2> . <name4> [ <val4> ] )	<name4> . <name2> . <name6> ( <name2> . <name4> [ <val1> ] , <name2> . <name4> [ <val3> ] , <name2> . <name4> [ <val5> ] , <name2> . <name4> [ <val6> ] , <name2> . <name4> [ <val4> ] )
<name6> を順に <name1> として、繰り返す <blk> <name2> を <name1> から <name5> を引いた値の <val3> 乗だけ増加させる </blk>	for <name1> in <name6> : <blk> <name2> += ( <name1> - <name5> ) ** <val3> </blk>	: <blk> <name1> += ( <name2> ) / ( ( <name1> - <name5> ) ** <val3> ) </blk>
<name3> を反転した列を順に <name1> として、繰り返す	for <name1> in reversed ( <name3> ) :	: for <name1> in reversed ( <name3> ) :
( <val6> ) からなる列に <name3> の各要素を <name1> 、 <name2> とし、 <name1> の列を加えた値を <name1> とする	<name1> = [ <val6> ] + [ <name1> for <name1> , <name2> in <name3> ]	<name1> = [ <val6> ] + [ <name1> for <name1> , <name2> in <name3> ]
<name1> の各要素を <name6> とし、 <name6> の <name4> の各要素を <name2> とし、 <name2> の <name6> 番目の列の最大値乗の列を順に <name6> として、繰り返す	for <name6> in [ <name6> ** max ( [ <name2> [ <name6> ] for <name2> in <name4> ] ) for <name6> in <name1> ] :	( for <name6> in [ max ( [ <name2> [ <name6> ] for <name2> in <name6> . <name4> ] ) for <name6> in <name1> ] :
<name6> に <name1> を加えた値を <name2> とする <name3> に <name4> を加えた値を <name5> とする	<name2> = <name6> + <name1> <name5> = <name3> + <name4>	( <name2> = <name6> + <name1> ) <name5> = <name3> + <name4>
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name2> とする	<name6> , <name4> , <name2> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )	<name6> , <name4> , <name2> = map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) )
<val4> 年 <val1> 月 <name5> 日の日時を <name6> とする	<name6> = datetime . datetime ( <val4> , <val1> , <name5> )	<name6> = datetime . datetime ( <val4> , <val1> , <name5> )
<name3> を <name2> の <name1> だけ増加させる	<name3> += <name2> . <name1>	( <name3> += <name2> . <name1> )
<name3> [ <name6> ] の <val5> 番目に <name3> [ <name2> ] の先頭を加えた値の整数値、 <name3> [ <name2> ] の <val5> 番目に <name3> [ <name6> ] の先頭を加えた値の整数値の最小値を出力する	print ( min ( int ( <name3> [ <name6> ] [ <val5> ] + <name3> [ <name2> ] [ <val5> ] ) , int ( <name3> [ <name2> ] [ <val5> ] + <name3> [ <name6> ] [ <val5> ] ) ) )	print ( min ( int ( <name3> [ <name6> ] [ <val5> ] + <name3> [ <name2> ] [ <val5> ] ) , int ( <name3> [ <name2> ] [ <val5> ] + int ( <name3> [ <name6> ] [ <val5> ] ) ) )
<name3> の末尾に <name5> ( <name2> ( <name1> ( <name6> , <name4> ) -22 ) , <name3> ) を追加する	<name3> . append ( <name5> ( <name2> ( <name1> ( <name6> , <name4> ) - 22 ) , <name3> ) )	<name5> . append ( <name5> ( <name2> ( <name1> ( <name6> , <name4> ) - 2 ) , <name3> ) )
空列の両端キューを <name5> とする	<name5> = deque ( [ ] )	<name5> = deque ( [ ] )
<name2> ( <name1> . <name5> [ <val3> : ] )	<name2> ( <name1> . <name5> [ <val3> : ] )	<name2> ( <name1> . <name5> [ <val3> : ] )
<name5> に <name6> を加えた値に <val4> を加えた値を <name6> とするを <name1> の <val3> 番目にする	<name1> [ <val3> ] = <name6> = <name5> + <name6> + <val4>	else [ <name1> ] = <name6> = <name5> + <name6> + <val4>
<name2> の <name3> の <name5> 番目の <name1> 番目を <name6> の <name1> 番目の <val4> から <name5> を引いた値番目にする	<name6> [ <name1> ] [ <val4> - <name5> ] = <name2> . <name3> [ <name5> ] [ <name1> ]	<name4> [ <name1> ] [ <val4> - <name5> ] = <name2> [ <name3> [ <name5> ] [ <name1> ]
( ( <val3> 、 <val3> ) の組、 ( <name2> 、 <name4> ) の組、 ( <name6> 、 <name5> ) の組 ) からなる列を <name1> とする	<name1> = [ ( <val3> , <val3> ) , ( <name2> , <name4> ) , ( <name6> , <name5> ) ]	<name1> = [ ( <val3> , <val3> ) , ( <name2> , <name4> ) , ( <name6> , <name5> ) ]
<name4> の <name6> の <name2> が、つまり未定値と等しい間、次を繰り返す	while <name4> . <name6> . <name2> is not None :	: while <name4> . <name6> . <name2> is not None :
<name4> の <name5> 番目を出力する	print ( <name4> [ <name5> ] )	print ( <name4> [ <name5> ] )
- <name6> を <name2> で割った値に <name5> から <name3> を <val1> で割った値を引いた値を掛けた値に <name4> に <name6> を加えた値を <val1> で割った値を加えた値を <name4> とする	<name4> = - ( <name6> / <name2> ) * ( <name5> - <name3> / <val1> ) + ( <name4> + <name6> ) / <val1>	<name4> = - ( <name6> / <name2> ) * ( <name5> - <name3> / <val1> ) + ( <name4> + <name6> ) / <val1>
\ <name4> ( <val2> % <name3> ) \	\ <name4> ( <val2> % <name3> ) \	\ <name4> ( <val2> % <name3> ) \
<name6> の各要素を <name4> とし、 <name5> ( <val2> , <name3> ( <name1> ) -1 , <name4> ) の列内の、つまり真の出現回数を返す	return [ <name5> ( <val2> , <name3> ( <name1> ) - 1 , <name4> ) for <name4> in <name6> ] . count ( True )	def [ <name5> ( <val2> , <name3> ( <name1> ) - 1 , <name4> ) . count ( True for <name4> in <name6> ] )
改行せずに <val4> を ( <name6> 、 <name2> の <name6> 番目の <name3> 、 <name1> ( <name6> ) 、 <name5> 、 <name4> の <name6> 番目、 <name6> の <name6> 番目 ) の組で割った余りを出力する	print ( <val4> % ( <name6> , <name2> [ <name6> ] . <name3> , <name1> ( <name6> ) , <name5> , <name4> [ <name6> ] , <name6> [ <name6> ] ) , end = '' )	print ( <val4> % ( <name6> , <name2> [ <name6> ] . <name3> , <name1> ( <name6> ) , <name5> , <name4> [ <name6> ] , <name6> [ <name6> ] ) , end = '' )
<name5> の <name2> 番目に <val6> を加えた値、 <name2> の <name1> 番目に <val6> を加えた値、 <name5> の <name4> 番目に <val6> を加えた値、 <name2> の <name3> 番目に <val6> を加えた値を <name2> 、 <name1> 、 <name4> 、 <name3> とする	<name2> , <name1> , <name4> , <name3> = <name5> [ <name2> ] + <val6> , <name2> [ <name1> ] + <val6> , <name5> [ <name4> ] + <val6> , <name2> [ <name3> ] + <val6>	<name5> , <name2> , <name1> , <name4> , <name3> = <name5> [ <name2> ] + <val6> , <name2> [ <name1> ] + <val6> , <name5> [ <name4> ] + <val6> , <name2> [ <name3> ] + <val6>
<name3> ( <name5> -1 , <name6> , <name2> )	<name3> ( <name5> - 1 , <name6> , <name2> )	( <name3> ( <name5> - 1 , <name6> , <name2> ) )
<val3> から <val1> 未満までの数列の各要素を <name2> とし、 <val3> の列を <name6> とする	<name6> = [ <val3> for <name2> in range ( <val1> ) ]	<name4> = [ <val3> for <name2> in range ( <val1> ) ]
<name6> から <name1> を引いた値が <val2> 以上かつ <name3> から <name1> を引いた値が <val2> 以上のとき、	if <name6> - <name1> >= <val2> and <name3> - <name1> >= <val2> :	>= ( <name6> - <name1> >= <val2> ) and ( <name3> - <name1> >= <val2> ) :
 を代わりの行末として <name5> の <name2> 番目を出力する	print ( <name5> [ <name2> ] , end = ' ' )	print ( <name5> [ <name2> ] , end = ' ' ' )
<name4> の <name6> の <name3> 番目の <name1> 番目を <name5> とする	<name5> = <name4> . <name6> [ <name3> ] [ <name1> ]	<name5> = <name4> . <name6> [ <name3> ] [ <name1> ]
( -1 、 <val5> ) からなる列を順に <name3> として、繰り返す	for <name3> in [ - <val5> , <val5> ] :	in [ - <val5> , <val5> ] :
<name1> に <name3> から <name6> を引いた値に <val4> を加えた値を掛けた値を <name2> とする	<name2> = <name1> * ( <name3> - <name6> + <val4> )	<name2> = <name1> * ( <name3> - <name6> + <val4> )
<name2> の <name2> の <name2> の最大値と等しい要素の最初の位置を取り出した値を <name5> とする	<name5> = <name2> . pop ( <name2> . index ( max ( <name2> ) ) )	else = <name2> . pop ( <name2> . index ( max ( <name2> ) ) )
<name4> の <name6> から <val3> を引いた値番目を <name5> とする	<name5> = <name4> [ <name6> - <val3> ]	<name5> = <name4> [ <name6> - <val3> ]
<name5> の <name6> 番目が <name4> 以上のとき、 <blk> <name1> の末尾に ( <name6> 、 <name5> の <name6> 番目 ) の組を追加する </blk>	if <name5> [ <name6> ] >= <name4> : <blk> <name1> . append ( ( <name6> , <name5> [ <name6> ] ) ) </blk>	try >= <name4> : <blk> <name1> . append ( ( <name6> , <name5> [ <name6> ] ) ) </blk>
<name2> から <name5> の <name3> 番目を引いた値が <val4> <name1> <val6> より大きいとき、	if <name2> - <name5> [ <name3> ] > <val4> <name1> <val6> :	continue <name2> - <name5> [ <name3> ] > <val4> <name1> <val6> :
<val5> の <name3> の <name6> 乗を <name3> の <name1> にする	<name3> . <name1> = <val5> ** <name3> . <name6>	<name3> . <name1> = <val5> ** <name3> . <name6>
<name5> の <name4> 番目が -1 と等しいとき、	if <name5> [ <name4> ] == - 1 :	: if <name5> [ <name4> ] == - 1 :
<name2> から <name1> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> , <name1> + <val5> ) :	) : for <name4> in range ( <name2> , <name1> + <val5> ) :
<name2> の <name4> 番目が <name2> の <name1> 番目より小さいとき、	if <name2> [ <name4> ] < <name2> [ <name1> ] :	if <name2> [ <name4> ] < <name2> [ <name1> ] :
<name2> の先頭が <name1> で始まるとき、	if <name2> . startswith ( <name1> ) :	gcd ( <name2> . startswith ( <name1> ) :
<val6> の <val1> 乗を <name2> とする	<name2> = <val6> ** <val1>	<name2> = <val6> ** <val1>
( ( <name3> ) からなる列の 0 から <val1> を <name4> だけ左シフトした値未満までの数列の各要素を <name6> とし、 <name4> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <name3> ] * [ <name4> for <name6> in range ( <val1> << <name4> ) ] ]	<name5> = [ [ <name3> ] * [ <name4> for <name6> in range ( <val1> << <name4> ) ] ]
<name4> ( <name2> , <name6> ( <name2> ) ) かつ <name4> ( <name3> , <name6> ( <name3> ) ) のとき、	if <name4> ( <name2> , <name6> ( <name2> ) ) and <name4> ( <name3> , <name6> ( <name3> ) ) :	for <name4> in <name4> ( <name2> , <name6> ( <name2> ) ) and <name4> ( <name3> , <name6> ( <name3> ) ) :
<name6> ( ) . <name5> ( <name3> . <name1> - <name2> . <name1> , <name3> . <name4> - <name2> . <name4> )	<name6> ( ) . <name5> ( <name3> . <name1> - <name2> . <name1> , <name3> . <name4> - <name2> . <name4> )	<name6> ( ) . <name5> ( <name3> . <name1> - <name2> . <name1> , <name3> . <name4> - <name2> . <name4> )
( ( <val4> 、 <val4> ) の組 ) からなる列の両端キューを <name2> とする	<name2> = deque ( [ ( <val4> , <val4> ) ] )	<name2> = deque ( [ ( <val4> , <val4> ) ] )
<name3> モジュールを用いる	from <name3> import perf_counter	from <name3> import combinations
<name3> を <name4> の <name5> 番目の <name2> 番目に <name1> から <name5> を引いた値の絶対値、 <name6> から <name2> を引いた値の絶対値の最小値を掛けた値だけ増加させる	<name3> += <name4> [ <name5> ] [ <name2> ] * min ( abs ( <name1> - <name5> ) , abs ( <name6> - <name2> ) )	<name2> += <name3> / <name4> [ <name5> ] [ <name2> ] * min ( abs ( <name1> - <name5> ) , abs ( <name6> - <name2> ) )
<name2> を <val5> だけ増加させる	<name2> += <val5>	count += <val5>
<name6> . <name2> ( <name4> ) を <name3> とする	<name3> = <name6> . <name2> ( <name4> )	<name3> = <name6> . <name2> ( <name4> )
<name2> ( <name5> , <name1> ) の絶対値を <name5> の絶対値で割った値を返す	return abs ( <name2> ( <name5> , <name1> ) ) / abs ( <name5> )	return abs ( <name2> ( <name5> , <name1> ) ) / abs ( <name5> )
<name4> を <name1> で割った余りが <val6> と等しいとき <name1> 、そうでなければ <name4> を <name1> で割った余りを <name2> とする	<name2> = <name1> if <name4> % <name1> == <val6> else <name4> % <name1>	<name2> = <name1> if <name4> % <name1> == <val6> else <name4> % <name1>
<name4> . <name3> ( ) が <name2> . <name3> ( ) と等しくないとき、	if <name4> . <name3> ( ) != <name2> . <name3> ( ) :	raise <name4> . <name3> ( ) != <name2> . <name3> ( ) :
<name4> ( <name3> . <name6> - <name3> . <name2> ) を <name1> とする	<name1> = <name4> ( <name3> . <name6> - <name3> . <name2> )	<name1> = <name4> ( <name3> . <name6> - <name3> . <name2> )
<name2> ( <name3> [ -1 ] , -1 , <val4> )	<name2> ( <name3> [ - 1 ] , - 1 , <val4> )	set ( <name2> ( <name3> [ - 1 ] , - 1 , <val4> ) )
-1 を <name2> を <name1> を <name4> とするとするとするを <name6> とする	<name6> = <name4> = <name1> = <name2> = - 1	else = <name4> = <name1> = <name2> = - 1
辞書を <name5> の <name6> にする	<name5> . <name6> = dict ( )	not <name5> . <name6> = dict ( )
<name4> の <name2> の <name3> 番目番目の整数値を <name5> の <name3> 番目の <name3> に <val1> を加えた値番目とするを <name6> の <name3> 番目の <name3> に <val1> を加えた値番目にする	<name6> [ <name3> ] [ <name3> + <val1> ] = <name5> [ <name3> ] [ <name3> + <val1> ] = int ( <name4> [ <name2> [ <name3> ] ] )	else [ <name3> ] [ <name3> + <val1> ] = <name5> [ <name3> ] [ <name3> + <val1> ] = int ( <name4> [ <name2> [ <name3> ] ] )
<name6> を <name6> に <val3> を加えた値との論理和にする	<name6> | = ( <name6> + <val3> )	not = <name6> | = <name6> + <val3>
<name1> の末尾に <name3> の長さを追加する	<name1> . append ( len ( <name3> ) )	<name1> . append ( len ( <name3> ) )
<name1> の <name4> の <name1> の <name2> の <name3> 番目番目を <name3> とする	<name3> = <name1> . <name4> [ <name1> . <name2> [ <name3> ] ]	<name4> = <name1> . <name4> [ <name1> . <name2> [ <name3> ] ]
<name4> の先頭を <val3> で分割した字句列を <name5> とする	<name5> = <name4> [ 0 ] . split ( <val3> )	<name5> = <name4> [ 0 ] . split ( <val3> )
<name6> の <name4> の <name2> 番目に <val5> を加えた値を <name6> の <name4> の <name3> 番目にする	<name6> . <name4> [ <name3> ] = <name6> . <name4> [ <name2> ] + <val5>	<name2> . <name4> [ <name3> ] = <name6> . <name4> [ <name2> ] + <val5>
<name4> を <name3> の <name4> 番目の先頭にする	<name3> [ <name4> ] [ 0 ] = <name4>	( <name3> [ <name4> ] [ 0 ] = <name4> )
<name2> を <val5> で割った余りの文字列に <name6> を加えた値を <name6> とする	<name6> = str ( <name2> % <val5> ) + <name6>	<name6> = str ( <name2> % <val5> ) + <name6>
<name6> ( * <name4> [ <name3> -1 ] ) を <name2> とする	<name2> = <name6> ( * <name4> [ <name3> - 1 ] )	<name2> = <name6> ( * <name4> [ <name3> - 1 ] )
<name3> の <name4> 番目を <name5> の整数値だけ増加させる	<name3> [ <name4> ] += int ( <name5> )	<name4> [ <name4> ] += int ( <name5> )
<name2> を展開し、それぞれ <name3> 、 <name4> 、 <name6> とする	<name3> , <name4> , <name6> = <name2>	<name4> , <name6> = <name2>
( <val2> 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val2> , <val1> ]	<name4> = [ <val2> , <val1> ]
<name1> を <name5> だけ増加させる	<name1> += ( <name5> )	( <name1> += <name5> )
( <name1> 、 <name2> 、 <name3> 、 <name5> ) の組が <name6> に含まれないとき、	if ( <name1> , <name2> , <name3> , <name5> ) not in <name6> :	isinstance ( <name1> , <name2> , <name3> , <name5> ) not in <name6> :
<name2> を <name6> で割った余りを <name4> とする	<name4> = <name2> % <name6>	( <name4> = <name2> % <name6> )
<name5> 、 <name3> ( <name2> , <name2> ) に <name4> の <name2> 番目を加えた値の最大値を <name5> とする	<name5> = max ( <name5> , <name3> ( <name2> , <name2> ) + <name4> [ <name2> ] )	else = max ( <name5> , <name3> ( <name2> , <name2> ) + <name4> [ <name2> ] )
<name2> を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <name2>	( <name6> [ <val5> ] = <name2> )
<name2> を <val1> に <name4> を掛けた値が <name6> に含まれるかどうかだけ増加させる	<name2> += <val1> * <name4> in <name6>	( <name2> += <val1> * <name4> in <name6> )
<name4> に <name2> を掛けた値に <name5> を加えた値を <name6> とする	<name6> = <name4> * <name2> + <name5>	<name2> = <name4> * <name2> + <name5>
<name3> の <name3> の最小値と等しい要素の最初の位置を <name1> とする	<name1> = <name3> . index ( min ( <name3> ) )	<name1> = <name3> . index ( min ( <name3> ) )
<name5> を <name2> の <name4> だけ増加させる	<name5> += <name2> . <name4>	<name1> += ( <name2> . <name4> )
真を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = True	( <name5> [ <name3> ] [ <name4> ] = True )
<name4> を返す	return ( <name4> )	yield <name4>
<name6> の <name4> が <name6> の <name3> の <name4> より小さいとき、	if <name6> . <name4> < <name6> . <name3> . <name4> :	raise <name6> . <name4> < <name6> . <name3> . <name4> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列の逆順を展開し、それぞれ <name5> 、 <name2> 、 <name4> とする	<name5> , <name2> , <name4> = sorted ( map ( int , input ( ) . split ( ) ) ) [ : : - 1 ]	<name2> , <name4> = sorted ( map ( int , input ( ) . split ( ) ) [ : : - 1 ] )
<name2> の <name6> 番目が <val3> の <val4> 乗以下のとき、	if <name2> [ <name6> ] <= <val3> ** <val4> :	if <name2> [ <name6> ] <= <val3> ** <val4> :
<name6> が <name3> の <name5> の <name4> 番目と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> == <name3> . <name5> [ <name4> ] : <blk> continue </blk>	\ if <name6> == <name3> . <name5> [ <name4> ] : <blk> continue </blk>
<name2> の <name5> 番目を <name4> とする	<name4> = <name2> [ <name5> ]	<name4> = <name2> [ <name5> ]
<name2> を英小文字に変換した文字列が <name6> と等しいとき、	if <name2> . lower ( ) == <name6> :	list ( <name2> . lower ( ) == <name6> :
<name6> の <val1> 番目が <name2> と等しくないとき、	if <name6> [ <val1> ] is <name2> :	for <name6> in <name6> [ <val1> ] is <name2> :
( -1 ) からなる列の <name3> 回分の列を <name2> の <name4> にする	<name2> . <name4> = [ - 1 ] * <name3>	<name2> . <name4> = [ - 1 ] * <name3>
( ( <name1> の先頭、 ( <val6> 、 <val4> ) の組 ) の組 ) からなる列を <name2> とする	<name2> = [ ( <name1> [ <val4> ] , ( <val6> , <val4> ) ) ]	input = [ ( <name1> [ 0 ] , ( <val6> , <val4> ) ) ]
<name6> に <val1> を加えた値を <name5> とする	<name5> = <name6> + <val1>	<name5> = <name6> + <val1>
<name4> ( <name6> ) 空行を出力する <name3> ( <name6> ) 空行を出力する	<name4> ( <name6> ) print ( ) <name3> ( <name6> ) print ( )	print ( <name4> ( <name6> ) print ( ) <name3> ( <name6> ) print ( )
<name1> ( <name5> , <name6> , <name3> + <name4> ) を返す	return <name1> ( <name5> , <name6> , <name3> + <name4> )	yield <name1> ( <name5> , <name6> , <name3> + <name4> )
<name4> から <name3> を引いた値に <name6> から <name5> を引いた値を掛けた値から <name2> から <name1> を引いた値に <name4> から <name3> を引いた値を掛けた値を引いた値の絶対値が <val6> . <name5> <val2> より小さいとき、	if abs ( ( <name4> - <name3> ) * ( <name6> - <name5> ) - ( <name2> - <name1> ) * ( <name4> - <name3> ) ) < <val6> . <name5> <val2> :	[ abs ( ( <name4> - <name3> ) * ( <name6> - <name5> ) - ( <name2> - <name1> ) * ( <name4> - <name3> ) ) < <val6> . <name5> <val2> :
( <name5> + <name6> + <name3> ) に ( - <name5> + <name6> + <name3> ) を掛けた値に <name5> - <name6> に <name3> を加えた値を掛けた値に <name5> に <name6> を加えた値から <name3> を引いた値を掛けた値の平方根を <val4> に <name3> を掛けた値で割った値を <name2> とする	<name2> = sqrt ( ( <name5> + <name6> + <name3> ) * ( - <name5> + <name6> + <name3> ) * ( <name5> - <name6> + <name3> ) * ( <name5> + <name6> - <name3> ) ) / ( <val4> * <name3> )	<name2> = sqrt ( ( <name5> + <name6> + <name3> ) * ( <name5> - <name6> + <name3> ) * ( <name5> - <name6> + <name3> ) * ( <name5> + <name6> - <name3> ) * ( <val4> ) / <name3>
<val5> から <name2> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val5> , <name2> + <val5> ) :	continue range ( <val5> , <name2> + <val5> ) :
<name2> を <val5> の <name4> から <val3> を引いた値から <name1> を引いた値乗だけ減少させる	<name2> -= <val5> ** ( <name4> - <val3> - <name1> )	<name6> -= <val5> ** ( <name4> - <val3> - <name1> )
<name3> ( <name6> , <name5> ) を <name4> とする	<name4> = <name3> ( <name6> , <name5> )	<name4> = <name3> ( <name6> , <name5> )
<name6> から <name5> を引いた値の <val4> 乗に <name3> から <name2> を引いた値の <val4> 乗を加えた値を返す	return ( <name6> - <name5> ) ** <val4> + ( <name3> - <name2> ) ** <val4>	<val2> = ( <name6> - <name5> ) ** <val4> + ( <name3> - <name2> ) ** <val4>
0 から <val3> 未満までの数列の各要素を <name1> とし、 <name1> の列の組を <name6> とする	<name6> = tuple ( [ <name1> for <name1> in range ( <val3> ) ] )	set = tuple ( [ <name1> for <name1> in range ( <val3> ) ] )
<name6> に <name1> の <name3> 番目を加えた値を <name4> とする	<name4> = <name6> + <name1> [ <name3> ]	str = <name6> + <name1> [ <name3> ]
<name6> の逆順を出力する	print ( <name6> [ : : - 1 ] )	<name6> . print ( <name6> [ : : - 1 ] )
ソートされた順序を保ったまま <name5> を <name3> に挿入できる位置を <name1> とする	<name1> = bisect . bisect_left ( <name3> , <name5> )	<name1> = bisect . bisect_left ( <name3> , <name5> )
<name1> 、 <name6> を <name4> 、 <name2> とする	<name4> , <name2> = <name1> , <name6>	<name6> , <name2> = <name1> , <name6>
<val5> に <name1> に <name1> に <val5> を加えた値を掛けた値を <val2> で割った商を加えた値を出力する	print ( <val5> + <name1> * ( <name1> + <val5> ) // <val2> )	end = <val5> + <name1> * ( <name1> + <val5> ) // <val2> )
<name5> に <val3> に <name4> を掛けた値を加えた値を <val6> で割った値を <name2> とする	<name2> = ( <name5> + <val3> * <name4> ) / <val6>	<name2> = ( <name5> + <val3> * <name4> ) / <val6>
<name6> に <name5> を加えた値を <name4> の <name3> 番目の <name2> 番目にする	<name4> [ <name3> ] [ <name2> ] = <name6> + <name5>	<name1> [ <name3> ] [ <name2> ] = <name6> + <name5>
<val2> から <val5> 未満までの数列の各要素を <name6> とし、 <val2> の列を <name3> とする	<name3> = [ <val2> for <name6> in range ( <val5> ) ]	<name3> = [ <val2> for <name6> in range ( <val5> ) ]
<name3> の <val6> 番目を <name4> とする	<name4> = <name3> [ <val6> ]	str = <name3> [ <val6> ]
<name4> の <name4> の <val2> 番目が <name1> より小さいかどうか番目を <name4> とする	<name4> = <name4> [ <name4> [ <val2> ] < <name1> ]	<name4> = <name4> [ <name4> [ <val2> ] < <name1> ]
<name6> ( ) . <name2> ( <name4> , <name5> )	<name6> ( ) . <name2> ( <name4> , <name5> )	set ( <name6> ( ) . <name2> ( <name4> , <name5> ) )
<name5> を <name4> の、つまり先頭から、つまり末尾までの部分列にする	<name4> [ : ] = <name5>	( <name4> [ : ] = <name5> )
0 から <name3> を <val1> で割った商に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> // <val1> + <val6> ) :	) : for <name5> in range ( <name3> // <val1> + <val6> ) :
<name6> を <name3> の <name1> の <name4> 番目にする	<name3> . <name1> [ <name4> ] = <name6>	( <name3> . <name1> [ <name4> ] = <name6> )
<name6> に <name1> を加えた値に <name3> を加えた値に <name5> を加えた値が <name2> と等しいとき、	if <name6> + <name1> + <name3> + <name5> == <name2> :	list ( <name6> + <name1> + <name3> + <name5> == <name2> ) :
<val1> をそうでなければ、とする	else = <val1>	nonlocal <val1>
<name3> 、 <name4> ( <name5> , -1 , [ <name5> ] , <name2> -1 ) の最大値を <name3> とする	<name3> = max ( <name3> , <name4> ( <name5> , - 1 , [ <name5> ] , <name2> - 1 ) )	<name3> = max ( <name3> , <name4> ( <name5> , - 1 , [ <name5> ] , <name2> - 1 ) )
0 から <val5> から <name2> の長さを <val5> で割った余りを引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> - ( len ( <name2> ) % <val5> ) ) :	for <name1> in range ( <val5> - len ( <name2> ) % <val5> ) :
( <val1> 、 <val1> 、 -1 、 <val3> ) からなる列を <name5> とする	<name5> = [ <val1> , <val1> , - <val3> , <val3> ]	<name6> = [ <val1> , <val1> , - <val1> , <val3> ]
<name3> の <name5> 番目が <name6> の <name5> 番目と等しいとき、 <blk> <name2> を <val1> だけ増加させる </blk>	if <name3> [ <name5> ] == <name6> [ <name5> ] : <blk> <name2> += <val1> </blk>	\ if <name3> [ <name5> ] == <name6> [ <name5> ] : <blk> <name2> += <val1> </blk>
( ( <val5> ) からなる列の <val5> から <name2> 未満までの数列の各要素を <name3> とし、 <name2> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val5> ] * [ <name2> for <name3> in range ( <name2> ) ] ]	<name4> = [ [ <val5> ] * [ <name2> for <name3> in range ( <name2> ) ] ]
<name2> ( <name1> [ <name6> ] ) を <name3> とする	<name3> = <name2> ( <name1> [ <name6> ] )	else = <name2> ( <name1> [ <name6> ] )
<name5> は <name3> 型のとき、	if isinstance ( <name5> , <name3> ) :	if isinstance ( <name5> , <name3> ) :
<name4> の末尾に ( <name1> 、 <name3> 、 <name6> ) の組を追加する	<name4> . append ( ( <name1> , <name3> , <name6> ) )	<name4> . append ( ( <name1> , <name3> , <name6> ) )
<name6> に <val2> を加えた値が <name4> より小さいとき、	if <name6> + <val2> < <name4> :	list ( <name6> + <val2> < <name4> ) :
<name4> から <name3> を引いた値が <val5> 以上かつ <name1> から <name3> を引いた値が <val5> 以上のとき、	if <name4> - <name3> >= <val5> and <name1> - <name3> >= <val5> :	>= ( <name4> - <name3> >= <val5> ) and ( <name1> - <name3> >= <val5> ) :
<name4> 、 <name3> から <name2> を引いた値の最大値を <name4> とする	<name4> = max ( <name4> , <name3> - <name2> )	<name4> = max ( <name4> , <name3> - <name2> )
<name2> の <name6> 番目内の全ての要素を取り除く	<name2> [ <name6> ] . clear ( )	( <name2> [ <name6> ] . clear ( ) )
<name6> から <val2> を引いた値から <name1> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> - <val2> , <name1> ) :	range for <name4> in range ( <name6> - <val2> , <name1> ) :
<name3> ( <name5> , <name2> ( <name6> [ <val1> ] ) )	<name3> ( <name5> , <name2> ( <name6> [ <val1> ] ) )	<name5> ( <name2> , <name2> ( <name6> [ <val1> ] ) )
Case 、 <name5> の文字列に <val2> を加えた値、 <name4> の文字列を出力する	print ( 'Case' , str ( <name5> ) + <val2> , str ( <name4> ) )	print ( 'Case ' , str ( <name5> ) + <val2> , str ( <name4> ) )
<name5> が <name1> より小さいとき、 <blk> <name5> を <name1> とする </blk>	if <name5> < <name1> : <blk> <name1> = <name5> </blk>	\ <name1> = <name5> < <name1> : <blk> <name1> = <name5> </blk>
<name2> の <val3> 番目が <val4> と等しいとき、	if <name2> [ <val3> ] == <val4> :	if <name2> [ <val3> ] == <val4> :
<name5> の <val3> 番目を出力する	print ( <name5> [ <val3> ] )	print ( <name5> [ <val3> ] )
<name4> 内の <val3> を <name6> の文字列で置き換えた文字列を <name1> とする	<name1> = <name4> . replace ( <val3> , str ( <name6> ) )	<name1> = <name4> . replace ( <val3> , str ( <name6> ) )
( ( <name5> , <val3> ) 、 ( <name1> , <val3> ) 、 ( <name4> , <val3> ) 、 ( <name6> , <val3> ) 、 ( <name2> , <val3> ) 、 ( <name2> , <val3> ) 、 ( <val5> , <val3> ) ) からなる辞書を <name2> とする	<name2> = { <name5> : <val3> , <name1> : <val3> , <name4> : <val3> , <name6> : <val3> , <name2> : <val3> , <name2> : <val3> , <val5> : <val3> }	<name2> = { <name5> : <val3> , <name1> : <val3> , <name4> : <val3> , <name6> : <val3> , <name2> : <val3> , <name2> : <val3> , <val5> : <val3> }
<name4> . <name5> ( <name3> [ <name1> ] )	<name4> . <name5> ( <name3> [ <name1> ] )	<name4> . <name5> ( <name3> [ <name1> ] )
<name4> の <name1> に [ MASK ] を書き込むを <name6> とする	<name6> = <name4> . <name1> . <name6>	<name6> = <name4> . <name1> . <name6>
<name6> の末尾を <name2> とする	<name2> = <name6> [ - 1 ]	( <name2> = <name6> [ - 1 ] )
<name4> を <name1> の <name3> ( <name4> , <name5> [ <name4> ] [ <name6> [ <name4> ] -1 ] ) 番目にする	<name1> [ <name3> ( <name4> , <name5> [ <name4> ] [ <name6> [ <name4> ] - 1 ] ) ] = <name4>	<name4> [ <name1> [ <name3> ( <name4> , <name5> [ <name4> ] [ <name6> [ <name4> ] - 1 ] ) ] = <name4>
( <name5> の <val1> 番目に <val3> に <name6> [ <val1> ] を掛けた値を加えた値を <val2> で割った値、 <val4> を四捨五入した整数値、 <name5> の <val5> 番目に <val3> に <name6> [ <val5> ] を掛けた値を加えた値を <val2> で割った値、 <val4> を四捨五入した整数値 ) の組を <name4> とする	<name4> = ( round ( ( <name5> [ <val1> ] + <val3> * <name6> [ <val1> ] ) / <val2> , <val4> ) , round ( ( <name5> [ <val5> ] + <val3> * <name6> [ <val5> ] ) / <val2> , <val4> ) )	<name2> = ( ( <name5> [ <val1> ] + <val3> * <name6> [ <val1> ] ) / <val2> , ( int ( <val4> , <name5> [ <val5> ] + <val3> + <name6> [ <val5> ] ) / <val2> , <val4> ) )
\ <name1> ( <val2> . <name6> ( [ <val5> % ( <name4> , <name3> ) fori , dinenumerate ( <name1> ) ] ) ) \	\ <name1> ( <val2> . <name6> ( [ <val5> % ( <name4> , <name3> ) for <name4> , <name3> in enumerate ( <name1> ) ] ) ) \	from <name1> ( <val2> . <name6> ( [ <val5> % ( <name4> , <name3> ) for <name4> , <name3> in enumerate ( <name1> ) ] ) ) \
. を <name6> の <name1> 番目の <name4> 番目にする	<name6> [ <name1> ] [ <name4> ] = '.'	( <name6> [ <name1> ] [ <name4> ] = '.' )
<name6> を <name4> の <name1> 番目とするを <name2> とする	<name2> = <name4> [ <name1> ] = <name6>	set = <name4> [ <name1> ] = <name6>
<name4> の長さから <name2> を引いた値から <val3> を引いた値を <name5> とする	<name5> = len ( <name4> ) - <name2> - <val3>	<name5> = len ( <name4> ) - <name2> - <val3>
( ( <name1> 、 <name3> ) の組 ) からなる列の両端キューを <name5> とする	<name5> = deque ( [ ( <name1> , <name3> ) ] )	<name5> = deque ( [ ( <name1> , <name3> ) ] )
<name6> の末尾に <name1> . <name3> ( <name5> [ <name4> ] ) を追加する	<name6> . append ( <name1> . <name3> ( <name5> [ <name4> ] ) )	<name2> . append ( <name1> . <name3> ( <name5> [ <name4> ] ) )
<name4> に <name2> の <val6> 乗を掛けた値に <val6> に <name5> を掛けた値に <name2> を掛けた値を加えた値に <name1> を加えた値を <name3> とする	<name3> = <name4> * <name2> ** <val6> + <val6> * <name5> * <name2> + <name1>	<name3> = <name4> * <name2> ** <val6> + <val6> * <name5> * <name2> + <name1>
<name3> を <name2> に <name6> に <val4> を掛けた値を加えた値だけ増加させる	<name3> += <name2> + <name6> * <val4>	( <name3> += <name2> + <name6> * <val4> )
<name3> の末尾に ( <val6> ) からなる列に <name2> を加えた値に ( <val6> ) からなる列を加えた値を追加する	<name3> . append ( [ <val6> ] + <name2> + [ <val6> ] )	<name3> . append ( [ <val6> ] + <name2> + [ <val6> ] )
<name1> の <name2> の <name6> 番目が <name3> より大きいとき、	if <name1> . <name2> [ <name6> ] > <name3> :	if <name1> . <name2> [ <name6> ] > <name3> :
<name3> を ( <name4> ) からなる列だけ増加させる	<name3> += [ <name4> ]	<name3> += [ <name4> ]
<name2> の <name3> に <name2> の <name3> を掛けた値から <val1> を引いた値を <name2> の <name4> にする	<name2> . <name4> = <name2> . <name3> * <name2> . <name3> - <val1>	( <name2> . <name4> = <name2> . <name3> * <name2> . <name3> - <val1> )
<name1> ( <name5> . <name6> ) を <name3> とする	<name3> = <name1> ( <name5> . <name6> )	<name3> = <name1> ( <name5> . <name6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = map ( int , ( input ( ) . split ( ) ) )	<name3> , <name6> = map ( int , input ( ) . split ( ) )
0 から <val5> 未満までの数列の各要素を <name1> とし、 <val4> を出力するの列	[ print ( <val4> ) for <name1> in range ( <val5> ) ]	print ( [ <val4> for <name1> in range ( <val5> ) ] )
<name1> が <name2> の長さから <val5> を引いた値より小さいとき、	if <name1> < len ( <name2> ) - <val5> :	raise <name1> < len ( <name2> ) - <val5> :
<name3> の末尾に ( <name4> 、 <name6> ) の組を追加する	<name3> . append ( ( <name4> , <name6> ) )	<name4> . append ( ( <name4> , <name6> ) )
<name4> . <name2> ( <name5> . <name1> ( <name4> ) / <name4> . <name3> ( ) ) を返す	return <name4> . <name2> ( <name5> . <name1> ( <name4> ) / <name4> . <name3> ( ) )	return <name4> . <name2> ( <name5> . <name1> ( <name4> ) / <name4> . <name3> ( ) )
<name1> ( <name4> [ <name3> ] , <name4> [ <name5> ] ) が <val2> と等しいとき、	if <name1> ( <name4> [ <name3> ] , <name4> [ <name5> ] ) == <val2> :	list ( <name1> ( <name4> [ <name3> ] , <name4> [ <name5> ] ) == <val2> :
<name3> の <name6> 番目の <name4> 番目が <val2> と等しくかつ <name5> の <name6> 番目の <name4> 番目が <val1> と等しいとき、	if <name3> [ <name6> ] [ <name4> ] == <val2> and <name5> [ <name6> ] [ <name4> ] == <val1> :	list ( <name3> [ <name6> ] [ <name4> ] == <val2> and <name5> [ <name6> ] [ <name4> ] == <val1> :
<val1> から <name6> の長さ未満までの数列の各要素を <name2> とし、 <val4> 、 ( <val1> ) からなる列の <name6> の先頭の長さ回分の列からの配列の列を <name5> とする	<name5> = [ array ( <val4> , [ <val1> ] * len ( <name6> [ <val1> ] ) ) for <name2> in range ( len ( <name6> ) ) ]	<name4> = [ array ( <val4> , [ <val1> ] * len ( <name6> [ <val1> ] ) ) for <name2> in range ( len ( <name6> ) ) ]
<name2> から <val3> を引いた値から <name5> を引いた値を <name5> とする <name2> から <val3> を引いた値から <name1> を引いた値を <name1> とする	<name5> = <name2> - <val3> - <name5> <name1> = <name2> - <val3> - <name1>	<name6> = <name2> - <val3> - <name5> <name1> = <name2> - <val3> - <name1>
<name2> の <val6> 番目が <name5> の <val6> 番目と等しくかつ <name5> [ <val4> ] から <val1> を引いた値が <name2> の <val4> 番目以下かどうかが <name5> の <val4> 番目に <val1> を加えた値以下または <name2> の <val4> 番目が <name5> の <val4> 番目と等しくかつ <name5> [ <val6> ] から <val1> を引いた値が <name2> の <val6> 番目以下かどうかが <name5> の先頭に <val1> を加えた値以下のとき、	if ( <name2> [ <val6> ] == <name5> [ <val6> ] and <name5> [ <val4> ] - <val1> <= <name2> [ <val4> ] <= <name5> [ <val4> ] + <val1> ) or ( <name2> [ <val4> ] == <name5> [ <val4> ] and <name5> [ <val6> ] - <val1> <= <name2> [ <val6> ] <= <name5> [ <val6> ] + <val1> ) :	for <name5> in ( <name2> [ <val6> ] == <name5> [ <val6> ] and <name5> [ <val4> ] - <val1> <= <name2> [ <val4> ] <= <name5> [ <val4> ] + <val1> ) or ( <name2> [ <val4> ] == <name5> [ <val4> ] and <name5> [ <val6> ] == <val1> and <name2> [ <val6> ] [ <val1> ] <= <name5> [ <val1> ] + <val1> )
<name5> ( <name6> -1 , <name3> - ( <name4> * <name6> ) , <name2> )	<name5> ( <name6> - 1 , <name3> - ( <name4> * <name6> ) , <name2> )	<name4> ( <name5> ( <name6> - 1 , <name3> - ( <name4> * <name6> ) , <name2> ) )
0 から <name3> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name1> とする	<name1> = [ [ ] for <name5> in range ( <name3> ) ]	<name6> = [ [ ] for <name5> in range ( <name3> ) ]
<name5> に <val4> を加えた値を <name2> の <name1> 番目の <name6> 番目にする	<name2> [ <name1> ] [ <name6> ] = <name5> + <val4>	( <name2> [ <name1> ] [ <name6> ] = <name5> + <val4> )
偽を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = False	( <name3> [ <name4> ] [ <name6> ] = False )
<val4> 〜 <name6> から <val4> を引いた値の整数乱数を <name2> とする	<name2> = random . randint ( <val4> , <name6> - <val4> )	<name1> . <name2> = random . randint ( <val4> , <name6> - <val4> )
<name3> の間、次を繰り返す <blk> <name3> の先頭を <name5> とする <sep> <name1> ( <name5> ) <sep> <name3> の先頭を削除する </blk>	while <name3> : <blk> <name5> = <name3> [ 0 ] <sep> <name1> ( <name5> ) <sep> del <name3> [ 0 ] </blk>	try : <blk> <name5> = <name3> [ 0 ] <sep> <name1> ( <name5> ) <sep> del <name3> [ 0 ] </blk>
<name4> の <name1> 番目を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name4> [ <name1> ]	<name3> , <name5> = <name4> [ <name1> ]
<name6> の <name4> 番目に <name3> を追加した集まり	<name6> [ <name4> ] . add ( <name3> )	<name3> [ <name4> ] . add ( <name3> )
<name4> の <name5> が <name5> と等しくかつ <name4> の <name6> が <name1> と等しくないとき、	if <name4> . <name5> == <name5> and <name4> . <name6> is <name1> :	if <name4> . <name5> == <name5> and <name4> . <name6> != <name1> :
<name2> をソートした列を順に <name1> として、繰り返す	for <name1> in sorted ( <name2> ) :	: for <name1> in sorted ( <name2> ) :
<name4> ( <name1> , <name2> % <name1> ) を展開し、それぞれ <name6> 、 <name5> 、 <name3> とする	<name6> , <name5> , <name3> = <name4> ( <name1> , <name2> % <name1> )	<name4> , <name6> , <name5> , <name3> = <name4> ( <name1> , <name2> % <name1> )
<name2> の <name6> 、 <name2> の <name4> 、 <name2> の <name1> 、 <name2> の <name5> を <name2> の <name1> 、 <name2> の <name6> 、 <name2> の <name5> 、 <name2> の <name4> とする	<name2> . <name1> , <name2> . <name6> , <name2> . <name5> , <name2> . <name4> = <name2> . <name6> , <name2> . <name4> , <name2> . <name1> , <name2> . <name5>	<name2> . <name1> , <name2> . <name6> , <name2> . <name5> , <name2> . <name4> = <name2> . <name6> , <name2> . <name4> , <name2> . <name1> , <name2> . <name5>
<name3> から <name6> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> , <name6> ) :	continue for <name5> in range ( <name3> , <name6> ) :
0 から <name1> 未満までの数列の各要素を <name5> とし、 <name5> に <val2> を加えた値の列の順列のリストを <name4> とする	<name4> = list ( itertools . <name4> ( [ <name5> + <val2> for <name5> in range ( <name1> ) ] ) )	<name4> = list ( itertools . permutations ( [ <name5> + <val2> for <name5> in range ( <name1> ) ] ) )
<name5> に <val6> を加えた値を <name5> とする	<name5> = <name5> + <val6>	<name5> = <name5> + <val6>
<name2> . <name3> ( ) を展開し、それぞれ <name1> 、 <name6> 、 <name5> とする	<name1> , <name6> , <name5> = <name2> . <name3> ( )	<name1> , <name6> , <name5> = <name2> . <name3> ( )
<name3> の要素を右にひとつ回転する	<name3> . rotate ( )	else . rotate ( <name3> )
( <name2> 、 <name1> 、 <name5> ) からなる列を <name3> とするを <name5> の <val6> 番目にする	<name5> [ <val6> ] = <name3> = [ <name2> , <name1> , <name5> ]	<name4> [ <val6> ] = <name3> = [ <name2> , <name1> , <name5> ]
<name6> の <name2> 番目の <name1> に <val4> を加えた値番目が <name5> に <name3> を加えた値より小さいとき、	if <name6> [ <name2> ] [ <name1> + <val4> ] < <name5> + <name3> :	list ( <name6> [ <name2> ] [ <name1> + <val4> ] < <name5> + <name3> :
<name5> の <name4> の長さを <name2> とする	<name2> = len ( <name5> . <name4> )	dict = len ( <name5> . <name4> )
<name1> の末尾に ( <name2> 、 <name5> 、 <name3> 、 <name6> 、 <name4> と <val1> の排他論理和 ) の組を追加する	<name1> . append ( ( <name2> , <name5> , <name3> , <name6> , <name4> ^ <val1> ) )	not <name1> . append ( ( <name2> , <name5> , <name3> , <name6> , <name4> ^ <val1> ) )
<name4> に <name2> を加えた値を <val5> で割った値を <name3> とする	<name3> = ( <name4> + <name2> ) / <val5>	<name3> = ( <name4> + <name2> ) / <val5>
<name3> を展開し、それぞれ <name1> 、 <name6> 、 <name5> とする	<name1> , <name6> , <name5> = <name3>	not <name1> , <name6> , <name5> = <name3>
<name2> の <name1> 番目から <name1> に <name3> の長さを加えた値までの部分列を <name6> とする	<name6> = <name2> [ <name1> : <name1> + len ( <name3> ) ]	<name6> = <name2> [ <name1> : <name1> + len ( <name3> ) ]
<name2> と <val1> を <name3> だけ左シフトした値の論理和を <name6> とする	<name6> = <name2> | ( <val1> << <name3> )	<name6> = <name2> | ( <val1> << <name3> )
<name4> の <val3> 乗に <name1> の <val3> 乗を加えた値が <name6> の <val3> 乗と等しいとき、	if <name4> ** <val3> + <name1> ** <val3> == <name6> ** <val3> :	list ( <name4> ** <val3> + <name1> ** <val3> == <name6> ** <val3> :
( 、つまり未定値 ) からなる列の <name6> に <val3> を加えた値回分の列を <name2> とする	<name2> = [ None ] * ( <name6> + <val3> )	<name2> = [ None ] * ( <name6> + <val3> )
<name2> を <name5> 、 <name1> 、 <name3> の総和だけ増加させる	<name2> += <name5> . sum ( <name1> , <name3> )	<name1> += <name5> . sum ( <name1> , <name3> )
<name1> モジュールを用いる	from <name1> import acos , hypot , isclose , sqrt	return from <name1> import combinations
<name6> の末尾に <name1> の <name4> 番目の <name2> 番目を追加する	<name6> . append ( <name1> [ <name4> ] [ <name2> ] )	<name3> . append ( <name1> [ <name4> ] [ <name2> ] )
<name1> 、 <name2> ( <name4> + <val6> , <name3> ) の最小値を <name1> とする	<name1> = min ( <name1> , <name2> ( <name4> + <val6> , <name3> ) )	<name1> = min ( <name1> , <name2> ( <name4> + <val6> , <name3> ) )
<name4> の <name2> 番目に <name1> を加えた値から <name3> を引いた値を <name5> とする	<name5> = <name4> [ <name2> ] + <name1> - <name3>	<name5> = <name4> [ <name2> ] + <name1> - <name3>
<name4> を <val2> で割った商を <name3> とする	<name3> = <name4> // <val2>	( <name3> = <name4> // <val2> )
<name5> の末尾に <name4> の <name2> 番目を追加する	<name5> . append ( <name4> [ <name2> ] )	<name1> . append ( <name4> [ <name2> ] )
<name5> の末尾に <val2> を間に入れて <name3> の各要素を <name4> とし、 <name4> の文字列の列を連結した文字列を追加する	<name5> . append ( <val2> . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )	<name1> . append ( <val2> . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )
<name4> ( <name1> , <name1> [ <val3> ] , <name5> )	<name4> ( <name1> , <name1> [ <val3> ] , <name5> )	<name4> ( <name1> , <name1> [ <val3> ] , <name5> )
( <name6> 、 <name3> ) からなる列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , [ <name6> , <name3> ] )	<name2> , <name6> , <name3> = map ( int , [ <name6> , <name3> ] )
<name4> を <val1> で割った余りを <name3> とする <name4> を <val1> 分の一にする	<name3> = <name4> % <val1> <name4> // = <val1>	<name3> = <name4> % <val1> <name4> // = <val1>
\ <name4> ( <val3> % ( <name1> ( [ <name5> [ <name2> -1 - <name4> ] * ( <name3> - <name1> ( <name3> + <val6> ) ) % MODfori , einenumerate ( <name2> ) ] ) % <name5> ) ) \	\ <name4> ( <val3> % ( <name1> ( [ <name5> [ <name2> - <val6> - <name4> ] * ( <name3> - <name1> ( <name3> + <val6> ) ) % <name5> for <name4> , <name3> in enumerate ( <name2> ) ] ) % <name5> ) ) \	\ <name4> ( <val3> % ( <name1> ( [ ( <name5> [ <name2> - <val6> ] * <name4> ] * ( <name3> - <name1> ( <name3> + <val6> ) ) for <name3> in zip ( <name2> ) ] ) ) % ( <name5> ) ) \
<name6> の <name1> の長さを <name2> とする	<name2> = len ( <name6> . <name1> )	dict = len ( <name6> . <name1> )
<name5> の末尾に ( <name4> の整数値、 <name1> の整数値、 <name2> 、 <name3> の整数値、 <name6> ) からなる列を追加する	<name5> . append ( [ int ( <name4> ) , int ( <name1> ) , <name2> , int ( <name3> ) , <name6> ] )	<name1> . append ( [ int ( <name4> ) , int ( <name1> ) , <name2> , int ( <name3> ) , <name6> ] )
<name6> に <name6> から <val5> を引いた値を掛けた値を <val1> で割った商を返す	return <name6> * ( <name6> - <val5> ) // <val1>	yield <name6> * ( <name6> - <val5> ) // <val1>
- <name5> に <name4> から <name3> を引いた値を掛けた値に <name3> に <name6> から <name5> を引いた値を掛けた値を加えた値を <name2> とする	<name2> = - <name5> * ( <name4> - <name3> ) + <name3> * ( <name6> - <name5> )	<name2> = - <name5> * ( <name4> - <name3> ) + <name3> * ( <name6> - <name5> )
<name1> の <name3> 番目のリストを <name4> とする	<name4> = list ( <name1> [ <name3> ] )	<name4> = list ( <name1> [ <name3> ] )
<name3> をコピーした結果を <name6> とする	<name6> = copy ( <name3> )	<name2> <name6> = copy . copy ( <name3> )
<name4> をパラメータとして ( <name4> の先頭、 <name4> の <val6> 番目 ) の組を返す関数をキーとして <name3> をソートした列を <name3> とする	<name3> = sorted ( <name3> , key = lambda <name4> : ( <name4> [ 0 ] , <name4> [ <val6> ] ) )	<name1> = sorted ( <name3> , key = lambda <name4> : ( <name4> [ 0 ] , <name4> [ <val6> ] ) )
<name1> に ( <name2> 、 <name5> 、 <name6> ) の組を追加した集まり	<name1> . add ( ( <name2> , <name5> , <name6> ) )	not <name1> . add ( ( <name2> , <name5> , <name6> ) )
0 から <name4> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name6> in range ( <name4> ) ]	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name6> in range ( <name4> ) ]
<name1> の <name4> 番目を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name1> [ <name4> ]	<name2> , <name5> , <name6> = <name1> [ <name4> ]
<name4> の各要素を <name2> とし、 <name2> の最大値の列の最大値の <val6> 乗を出力する	print ( max ( [ max ( <name2> ) for <name2> in <name4> ] ) ** <val6> )	print ( max ( [ max ( <name2> ) for <name2> in <name4> ] ) , <val6> )
<name3> を <name1> に <val6> を掛けた値だけ減少させる	<name3> -= <name1> * <val6>	<name3> -= <name1> * <val6>
偽を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = False	( <name5> [ <name3> ] [ <name4> ] = False )
<name2> の各要素を <name4> とし、 <name4> を出力するの列	[ print ( <name4> ) for <name4> in <name2> ]	<name2> [ print ( <name4> ) for <name4> in <name2> ]
<name5> と <val3> を <name6> だけ左シフトした値の排他論理和を <name5> とする	<name5> = <name5> ^ ( <val3> << <name6> )	<name5> = <name5> ^ ( <val3> << <name6> )
<name1> を <val6> で割った余りが <val3> と等しいとき、	if <name1> % <val6> == <val3> :	list <name1> % <val6> == <val3> :
<name5> の <name1> の <name6> 番目が <name5> の <name1> の <name4> 番目より大きいとき、 <blk> <name6> と <name4> を入れ替える </blk>	if <name5> . <name1> [ <name6> ] > <name5> . <name1> [ <name4> ] : <blk> <name6> , <name4> = <name4> , <name6> </blk>	> if <name5> . <name1> [ <name6> ] > <name5> . <name1> [ <name4> ] : <blk> <name6> , <name4> = <name4> , <name6> </blk>
<name1> と <name5> 、 <name2> の和集合	<name1> . union ( <name5> , <name2> )	set ( <name1> . union ( <name5> , <name2> ) )
0 が <name2> と等しいとき、	if ( '0' == <name2> ) :	list == '0' == <name2> :
( <val2> ) の集合を <name6> とする	<name6> = { <val2> }	<name4> = { <val2> }
<name5> を <val1> で割った商の整数値を <name4> とする	<name4> = int ( <name5> // <val1> )	<name4> = int ( <name5> // <val1> )
( ( <name4> の x 座標、 <name4> の y 座標 ) の組 ) からなる列を <name1> とする	<name1> = [ ( <name4> . x , <name4> . y ) ]	<name6> = [ ( <name4> . x , <name4> . y ) ]
<name6> の <name2> の <name4> 番目を順に <name5> として、繰り返す	for <name5> in <name6> . <name2> [ <name4> ] :	in <name6> . <name2> [ <name4> ] :
<name3> に <val6> を加えた値を <val1> で割った商に <val1> を掛けた値から <val6> を引いた値を <name3> とする	<name3> = ( <name3> + <val6> ) // <val1> * <val1> - <val6>	<name3> = ( <name3> + <val6> ) // <val1> * <val1> - <val6>
( <name4> 、 <name1> 、未定値 ) からなる列を <name3> とする	<name3> = [ <name4> , <name1> , None ]	else = [ <name4> , <name1> , None ]
<val2> を <name6> の <name1> にする	<name6> . <name1> = <val2>	( <name6> . <name1> = <val2> )
<name3> の <name1> の <name2> 番目が、つまり未定値と等しいとき、	if <name3> . <name1> [ <name2> ] is not None :	for <name3> . <name1> [ <name2> ] is not None :
<name2> から <val5> を引いた値から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> - <val5> , - <val5> , - <val5> ) :	continue for <name4> in range ( <name2> - <val5> , - <val5> , - <val5> ) :
<name4> の各要素を <name6> 、 <name2> とし、 <name6> の列の総和を <name5> とする	<name5> = sum ( [ <name6> for <name6> , <name2> in <name4> ] )	else = sum ( [ <name6> for <name6> , <name2> in <name4> ] )
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の列を <name1> とする	<name1> = [ input ( ) . split ( ) for <name6> in range ( <name3> ) ]	<name1> = [ input ( ) . split ( ) for <name6> in range ( <name3> ) ]
<name5> に <name1> を加えた値の文字列の長さが <val4> より大きいとき、	if len ( str ( <name5> + <name1> ) ) > <val4> :	if ( len ( str ( <name5> + <name1> ) ) > <val4> :
<name1> の長さから <val3> を引いた値を <name6> とする	<name6> = len ( <name1> ) - <val3>	<name6> = len ( <name1> ) - <val3>
<name5> の末尾に ( <name3> 、 <name1> の整数値 ) の組を追加する	<name5> . append ( ( <name3> , int ( <name1> ) ) )	<name5> . append ( ( <name3> , int ( <name1> ) ) )
( <val4> 、 <val3> 、 <val2> ) の組を返す	return ( <val4> , <val3> , <val2> )	yield ( <val4> , <val3> , <val2> )
<name1> . <name3> ( ) を出力する	print ( <name1> . <name3> ( ) )	print ( <name1> . <name3> ( ) )
<name6> . <name5> ( <name2> , <name4> + <val3> , <val1> , <val1> , <name6> ( <val5> , <name6> . <name2> ) ) を返す	return <name6> . <name5> ( <name2> , <name4> + <val3> , <val1> , <val1> , <name6> ( <val5> , <name6> . <name2> ) )	return <name6> . <name5> ( <name2> , <name4> + <val3> , <val1> , <name6> ( <val5> , <name6> . <name2> ) )
<name6> を <name6> の絶対値で割った値を <name1> とする	<name1> = <name6> / abs ( <name6> )	( <name1> = <name6> / abs ( <name6> ) )
<name4> から <val1> を引いた値を <val3> で割った余りを <name4> とする	<name4> = ( <name4> - <val1> ) % <val3>	<name4> = ( <name4> - <val1> ) % <val3>
<name6> をパラメータとして <name4> に <name6> を加えた値を返す関数を <name5> とする	<name5> = lambda <name6> : <name4> + <name6>	( <name5> = lambda <name6> : <name4> + <name6> )
( <val3> ) からなる列の <val1> を <name2> だけ左シフトした値回分の列を <name5> とする	<name5> = [ <val3> ] * ( <val1> << <name2> )	<name5> = [ <val3> ] * ( <val1> << <name2> )
<name3> . <name2> ( <name1> [ <name4> [ <val6> ] ] , <val5> )	<name3> . <name2> ( <name1> [ <name4> [ <val6> ] ] , <val5> )	<name5> . <name2> ( <name1> [ <name4> [ <val6> ] ] , <val5> )
( <name4> 、 <name6> 、 <name5> 、 <name3> 、 <name2> ) からなる列を <name1> とする	<name1> = [ <name4> , <name6> , <name5> , <name3> , <name2> ]	<name4> = [ <name4> , <name6> , <name5> , <name3> , <name2> ]
-10000000007 を <name1> とする	<name1> = - 10000000007	<name6> = - count ( a - 2 )
<name6> が <name2> の <name1> 番目より大きいとき、	if <name6> > <name2> [ <name1> ] :	> <name6> > <name2> [ <name1> ] :
<name3> の末尾に <val6> に <name3> の -1 番目を掛けた値に <val2> を加えた値を追加する	<name3> . append ( <val6> * <name3> [ - <val2> ] + <val2> )	<name1> . append ( <val6> * <name3> [ - <val2> ] + <val2> )
<val3> を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <val3>	( <name4> [ <name5> ] = <val3> )
<name5> の <name1> の先頭番目を <val2> だけ増加させる	<name5> [ <name1> [ 0 ] ] += <val2>	<name2> [ <name1> [ 0 ] ] += <val2>
<name6> の <name2> 番目を <name6> の <name2> に <val4> を加えた値番目にする	<name6> [ <name2> + <val4> ] = <name6> [ <name2> ]	dict [ <name2> + <val4> ] = <name6> [ <name2> ]
<name4> ( <name6> . <name2> - <name6> . <name5> ) を <name3> とする	<name3> = <name4> ( <name6> . <name2> - <name6> . <name5> )	<name3> = <name4> ( <name6> . <name2> - <name6> . <name5> )
( <name5> 、 <name1> ) の組を <name6> とする	<name6> = ( <name5> , <name1> )	<name6> = ( <name5> , <name1> )
<val3> を書式として <name6> 、 <name1> 内の <name6> の出現回数で整形した文字列を出力する	print ( <val3> . format ( <name6> , <name1> . count ( <name6> ) ) )	print ( <val3> . format ( <name6> , <name1> . count ( <name6> ) ) )
meiji を <name2> とする	<name2> = 'meiji'	( <name2> = 'meiji' )
<name6> の <name2> を <name6> の <name1> にする	<name6> . <name1> = <name6> . <name2>	<name6> . <name1> = <name6> . <name2>
<name1> が <name6> と等しくないとき、	if not <name1> == <name6> :	raise <name1> != <name6> :
<name3> の <name1> の <name3> の <name1> の <name5> 番目番目を <name3> の <name1> の <name5> 番目にする	<name3> . <name1> [ <name5> ] = <name3> . <name1> [ <name3> . <name1> [ <name5> ] ]	<name3> . <name1> [ <name5> ] = <name3> . <name1> [ <name3> . <name1> [ <name5> ] ]
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を展開し、それぞれ <name6> 、 <name1> 、 <name4> とする	<name6> , <name1> , <name4> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]	<name2> , <name6> , <name1> , <name4> = [ int ( <name2> ) for <name2> in input ( ) . split ( ) ]
<name5> の長さ、 <name1> の長さの最小値を <name3> とする	<name3> = min ( len ( <name5> ) , len ( <name1> ) )	<name3> = min ( len ( <name5> ) , len ( <name1> ) )
- <name5> に <name6> を掛けた値に <name3> に <name2> を掛けた値を加えた値を <name2> に <name1> を掛けた値から <name6> に <name4> を掛けた値を引いた値で割った値を <name4> とする	<name4> = ( - <name5> * <name6> + <name3> * <name2> ) / ( <name2> * <name1> - <name6> * <name4> )	<name4> = ( - <name5> * <name6> + <name3> * <name2> ) / ( <name2> * <name1> - <name6> * <name4> )
<name1> . <name2> ( <name5> , <name3> , <name6> )	<name1> . <name2> ( <name5> , <name3> , <name6> )	<name3> . <name2> ( <name5> , <name3> , <name6> )
<name1> の <name2> 番目に - <name4> の <name2> 番目を追加した集まり	<name1> [ <name2> ] . add ( - <name4> [ <name2> ] )	<name1> [ <name2> ] . add ( - <name4> [ <name2> ] )
<name5> ( <name6> ) を <name5> ( <name6> - <name1> ) で割った商を <name5> ( <name1> ) で割った商を返す	return <name5> ( <name6> ) // <name5> ( <name6> - <name1> ) // <name5> ( <name1> )	yield <name5> ( <name6> ) // <name5> ( <name6> - <name1> ) // <name5> ( <name1> )
<name6> の <val4> 番目、 <name6> の <val5> 番目、 <name6> の <val2> 番目、 <name6> の先頭、 <name6> の <val1> 番目、 <name6> の <val3> 番目を <name6> の先頭、 <name6> の <val5> 番目、 <name6> の <val4> 番目、 <name6> の <val3> 番目、 <name6> の <val1> 番目、 <name6> の <val2> 番目とする	<name6> [ 0 ] , <name6> [ <val5> ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val1> ] , <name6> [ <val2> ] = <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ <val2> ] , <name6> [ 0 ] , <name6> [ <val1> ] , <name6> [ <val3> ]	<name6> [ 0 ] , <name6> [ <val5> ] , <name6> [ <val4> ] , <name6> [ <val3> ] , <name6> [ <val1> ] , <name6> [ <val2> ] = <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ <val2> ] , <name6> [ 0 ] , <name6> [ <val1> ] , <name6> [ <val3> ]
<name3> <name2> <name1>	<name3> <name2> <name1>	( <name3> <name2> <name1> )
<name5> の <name3> 番目に <name2> の <name3> 番目の <name4> 番目を加えた値が <name5> の <name4> 番目より小さいとき、	if <name5> [ <name3> ] + <name2> [ <name3> ] [ <name4> ] < <name5> [ <name4> ] :	list ( <name5> [ <name3> ] + <name2> [ <name3> ] [ <name4> ] < <name5> [ <name4> ] ) :
<name4> ( ( <name3> [ <val2> ] , <name3> [ <val6> ] ) , ( <name3> [ <val5> ] , <name3> [ <val1> ] ) ) を <name1> とする	<name1> = <name4> ( ( <name3> [ <val2> ] , <name3> [ <val6> ] ) , ( <name3> [ <val5> ] , <name3> [ <val1> ] ) )	<name1> = <name4> ( ( <name3> [ <val2> ] , <name3> [ <val6> ] ) , ( <name3> [ <val5> ] , <name3> [ <val1> ] ) )
<name5> に <name2> の <name4> 番目を加えた値を <name5> とする	<name5> = <name5> + <name2> [ <name4> ]	else = <name5> + <name2> [ <name4> ]
<name1> に番号付した組の列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in enumerate ( <name1> ) :	for <name5> , <name3> in enumerate ( <name1> ) :
<name4> を <val5> に <name1> を掛けた値だけ減少させる	<name4> -= <val5> * <name1>	( <name4> -= <val5> * <name1> )
<name2> に <val6> を追加した集まり	<name2> . add ( <val6> )	<name6> . add ( <val6> )
<name4> ( <name1> ( <name6> . <name2> ) ) を <name3> とする	<name3> = <name4> ( <name1> ( <name6> . <name2> ) )	else = <name4> ( <name1> ( <name6> . <name2> ) )
<name5> の末尾に ( <name4> を <val3> で割った商から <val6> を引いた値、 <name2> 、 <name1> ) の組を追加する	<name5> . append ( ( <name4> // <val3> - <val6> , <name2> , <name1> ) )	<name4> . append ( ( <name4> // <val3> - <val6> , <name2> , <name1> ) )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name6> 、 <name2> 、 <name5> 、 <name3> とする	<name6> , <name2> , <name5> , <name3> = input ( ) . split ( )	<name3> , <name2> , <name5> , <name3> = input ( ) . split ( )
<name2> の <name6> 番目を順に <name3> 、 <name5> 、 <name1> として、繰り返す	for <name3> , <name5> , <name1> in <name2> [ <name6> ] :	for <name3> , <name5> , <name1> in <name2> [ <name6> ] :
( <val2> 、 <val6> ) からなる列の <name5> 番目を出力する	print ( [ <val2> , <val6> ] [ <name5> ] )	print ( [ <val2> , <val6> ] [ <name5> ] )
<name5> の <name4> 番目の <name1> から <val2> を引いた値番目、 <name5> の <name4> から <val2> を引いた値番目の <name1> から <val2> を引いた値番目に <name3> の <name4> 番目に <name6> の <name1> 番目を掛けた値を加えた値の最小値を <name5> の <name4> 番目の <name1> 番目にする	<name5> [ <name4> ] [ <name1> ] = min ( <name5> [ <name4> ] [ <name1> - <val2> ] , <name5> [ <name4> - <val2> ] [ <name1> - <val2> ] + <name3> [ <name4> ] * <name6> [ <name1> ] )	<name6> [ <name4> ] [ <name1> ] = min ( <name5> [ <name4> ] [ <name1> - <val2> ] , <name5> [ <name4> - <val2> ] [ <name1> - <val2> ] + <name3> [ <name4> ] * <name6> [ <name1> ] )
<name5> から <name6> を引いた値を <name4> とする	<name4> = <name5> - <name6> ( A , b - 1 )	<name4> = <name5> - <name6>
0 から <name2> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 ( <name3> ) からなる列の列を <name1> とする	<name1> = [ [ <name3> ] for <name3> in range ( <name2> + <val6> ) ]	<name6> = [ [ <name3> ] for <name3> in range ( <name2> + <val6> ) ]
<name6> を展開し、それぞれ <name1> 、 <name3> 、 <name4> 、 <name5> とする	<name1> , <name3> , <name4> , <name5> = <name6>	[ <name1> , <name3> , <name4> , <name5> = <name6>
<name3> ( <name6> [ <val1> ] )	<name3> ( <name6> [ <val1> ] )	<name4> ( <name6> [ <val1> ] )
<val5> を <name1> の <name3> とするを <name1> の <name6> にする	<name1> . <name6> = <name1> . <name3> = <val5>	<name4> . <name1> . <name6> = <name1> . <name3> = <val5>
<name6> の先頭を <name3> とする	<name3> = <name6> [ 0 ]	<name3> = <name6> [ 0 ]
<val6> を <name2> の <name4> に <name5> を加えた値番目の <name3> 番目にする	<name2> [ <name4> + <name5> ] [ <name3> ] = <val6>	<name2> [ <name4> + <name5> ] [ <name3> ] = <val6>
<name3> ( <name4> , - <name5> [ <val2> ] )	<name3> ( <name4> , - <name5> [ <val2> ] )	<name3> ( <name4> , - <name5> [ <val2> ] )
<val6> <name5> を <name3> とする	<name3> = <val6> <name5>	<name2> <name3> = <val6> <name5>
( <name3> を <name6> の <name1> で割った商、 <name3> を <name6> の <name1> で割った余り ) の組を一旦、返す	yield ( <name3> // <name6> . <name1> , <name3> % <name6> . <name1> )	<name2> , yield ( <name3> // <name6> . <name1> , <name3> % <name6> . <name1> )
<name3> の <name6> に対応する値、もし存在しなければ <val1> を <name2> とする	<name2> = <name3> . <name6> . get ( <val1> )	<name2> = <name3> . <name6> . get ( <val1> )
( <val3> ) からなる列の <name2> に <val1> を加えた値回分の列を <name4> とする	<name4> = [ <val3> ] * ( <name2> + <val1> )	<name4> = [ <val3> ] * ( <name2> + <val1> )
<name1> を <name6> の <name4> 番目の <name5> 番目に <name2> の <name5> 番目の <name3> 番目を掛けた値だけ増加させる	<name1> += <name6> [ <name4> ] [ <name5> ] * <name2> [ <name5> ] [ <name3> ]	<name5> += <name1> / <name6> [ <name4> ] [ <name5> ] * <name2> [ <name5> ] [ <name3> ]
<name6> に <name1> を掛けた値を <name4> とする	<name4> = <name6> * <name1>	<name4> = <name6> * <name1>
<name1> - <name4> の絶対値を <val5> で割った余りが <val6> より小さいとき <name1> に <name4> を加えた値を <val2> で割った値を <val5> で割った余り、そうでなければ <name1> + <name4> に <val5> を加えた値を <val2> で割った値を <val5> で割った余りを出力する	print ( ( <name1> + <name4> ) / <val2> % <val5> if abs ( <name1> - <name4> ) % <val5> < <val6> else ( <name1> + <name4> + <val5> ) / <val2> % <val5> )	return ( ( <name1> + <name4> ) % <val2> ) % <val5> if abs ( <name1> - <name4> ) % <val5> < <val6> else ( ( <name1> + <name4> + <val5> ) % <val2> ) % <val5> )
<name1> の <val2> 番目の整数値から <name1> の <val4> 番目の整数値に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( int ( <name1> [ <val2> ] ) , int ( <name1> [ <val4> ] ) + <val2> ) :	( for <name6> in range ( int ( <name1> [ <val2> ] ) , int ( <name1> [ <val4> ] ) + <val2> ) :
<name3> に <val1> を加えた値を <name2> とする	<name2> = <name3> + <val1>	( <name2> = <name3> + <val1> )
<name2> の末尾に <name6> の末尾の <name1> 番目、 <name6> の末尾の <name1> に <val5> を加えた値番目の最大値に <name4> の <name1> 番目を加えた値を追加する	<name2> . append ( max ( <name6> [ - <val5> ] [ <name1> ] , <name6> [ - <val5> ] [ <name1> + <val5> ] ) + <name4> [ <name1> ] )	input . append ( max ( <name6> [ - <val5> ] [ <name1> ] , <name6> [ - <val5> ] [ <name1> + <val5> ] ) + <name4> [ <name1> ] )
0 から <name1> から <val2> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> - <val2> ) :	for <name6> in range ( <name1> - <val2> ) :
<name1> の <name4> 番目の総和を出力する	print ( sum ( <name1> [ <name4> ] ) )	print ( sum ( <name1> [ <name4> ] ) )
>が <name5> に含まれるとき、	if '>' in <name5> :	gcd if <val6> in <name5> :
<name5> の各要素を <name4> とし、 <name4> が <val2> 以下かどうかの列が全てが真または <name5> の各要素を <name4> とし、 <name4> が <val2> 以上かどうかの列が全てが真のとき、	if all ( [ <name4> <= <val2> for <name4> in <name5> ] ) or all ( [ <name4> >= <val2> for <name4> in <name5> ] ) :	if all ( [ <name4> <= <val2> for <name4> in <name5> ] ) or all ( [ <name4> >= <val2> for <name4> in <name5> ] ) :
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name2> 、 <name4> とする	<name3> , <name5> , <name2> , <name4> = map ( float , input ( ) . split ( ) )	<name5> , <name2> , <name4> = map ( float , input ( ) . split ( ) )
<name3> の -1 番目を <val6> だけ増加させる	<name3> [ - <val6> ] += <val6>	<name3> [ - <val6> ] += <val6>
<name3> が <val5> と等しくかつ <name1> が <val5> と等しいとき、	if <name3> == <val5> and <name1> == <val5> :	list ( <name3> == <val5> and <name1> == <val5> ) :
<name4> の <name1> 番目の <name6> 番目が <val5> と等しいとき、	if <name4> [ <name1> ] [ <name6> ] == <val5> :	: if <name4> [ <name1> ] [ <name6> ] == <val5> :
<name1> の <name2> の <name5> 番目に <name1> の <name3> の <name5> から <name4> を引いた値番目を掛けた値を <name1> の <name6> で割った余りを返す	return <name1> . <name2> [ <name5> ] * <name1> . <name3> [ <name5> - <name4> ] % <name1> . <name6>	x return <name1> . <name2> [ <name5> ] * <name1> . <name3> [ <name5> - <name4> ] % <name1> . <name6>
<name5> が <val2> より大きくかつ <name1> の <name3> の <name4> 番目が <val2> より小さいとき、	if <name5> > <val2> and <name1> . <name3> [ <name4> ] < <val2> :	continue <name5> > <val2> and <name1> . <name3> [ <name4> ] < <val2> :
<name1> を <name5> . <name6> ( <name4> ) の絶対値を <val2> で割った値だけ増加させる	<name1> += abs ( <name5> . <name6> ( <name4> ) ) / <val2>	<name4> += <name1> / abs ( <name5> . <name6> ( <name4> ) ) / <val2>
<name4> の <name1> に <val5> を掛けた値に <name6> を加えた値番目が <name2> より大きいとき、	if <name4> [ <name1> * <val5> + <name6> ] > <name2> :	isinstance ( <name4> [ <name1> * <val5> + <name6> ] > <name2> ) :
<name3> に <name6> を掛けた値が <val5> 以下かつ <name2> に <name4> を掛けた値が <val5> 以下のとき、	if <name3> * <name6> <= <val5> and <name2> * <name4> <= <val5> :	list ( <name3> * <name6> <= <val5> and <name2> * <name4> <= <val5> ) :
<name1> の末尾に入力された文字列を追加する	<name1> . append ( input ( ) )	<name1> . append ( input ( ) )
<name4> ( <name6> , ( <name5> + <name3> , <name2> ) )	<name4> ( <name6> , ( <name5> + <name3> , <name2> ) )	<name5> <name4> ( <name6> , ( <name5> + <name3> , <name2> ) )
<name5> ( <name3> , <name6> ) を <name1> とする	<name1> = <name5> ( <name3> , <name6> )	<name1> = <name5> ( <name3> , <name6> )
<name2> の <name5> から <val3> を引いた値番目の各要素を <name2> 、 <name4> 、 <name3> 、 <name1> とし、 <name2> が <name5> 以下かどうかが <name3> 以下かつ <name4> が <name6> 以下かどうかが <name1> 以下かどうかの列が少なくともひとつは真のとき、	if any ( [ <name2> <= <name5> <= <name3> and <name4> <= <name6> <= <name1> for <name2> , <name4> , <name3> , <name1> in <name2> [ <name5> - <val3> ] ] ) :	if any ( [ <name2> == <name5> and <name3> and <name4> <= <name6> <= <name1> for <name2> , <name4> , <name3> , <name1> in <name2> [ <name5> - <val3> ] ] ) :
入力された文字列を空白で分割した字句列の各要素に <name4> をパラメータとして <name4> の整数値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) )	<name6> , <name3> = map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) )
<name2> が <val3> と等しくなくかつ <name6> が <val3> と等しくないとき、	if <name2> != <val3> and <name6> != <val3> :	for <name2> != <val3> and <name6> != <val3> :
<val6> を <name3> の <val1> の <name4> 乗から <val5> を引いた値番目にする	<name3> [ <val1> ** <name4> - <val5> ] = <val6>	<name1> [ <val1> ** <name4> - <val5> ] = <val6>
( ( <name5> , 真 ) ) からなる辞書を <name2> とする	<name2> = { <name5> : True }	dict = { <name5> : True }
<name5> ( <name2> . <name4> )	<name5> ( <name2> . <name4> )	<name5> ( <name2> . <name4> )
<name1> の <val5> 乗から <name2> を引いた値の絶対値が <name6> より小さいとき、	if abs ( <name1> ** <val5> - <name2> ) < <name6> :	for <name1> in abs ( <name1> ** <val5> - <name2> ) < <name6> :
<name6> に対応する値、もし存在しなければ <name1> の先頭、 <val4> を出力する	print ( <name6> . get ( <name1> [ <val4> ] , <val4> ) )	range ( <name6> . get ( <name1> [ 0 ] , <val4> ) )
<val4> から <name2> に <val5> を加えた値未満までの数列の各要素を <name1> とし、 <val4> から <name6> 未満までの数列の各要素を <name3> とし、 <val4> の列の列を <name5> とする	<name5> = [ [ <val4> for <name3> in range ( <name6> ) ] for <name1> in range ( <name2> + <val5> ) ]	( <name5> = [ [ <val4> for <name3> in range ( <name6> ) ] for <name1> in range ( <name2> + <val5> ) ] )
<val5> 、 <val5> を <name6> 、 <name3> とする	<name6> , <name3> = <val5> , <val5>	( <name6> , <name3> = <val5> , <val5> )
<name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) に <val1> を加えた値を <name1> とする	<name1> = <name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) + <val1>	<name1> = <name6> ( <name2> , <name5> , <name4> , <name3> + <val1> ) + <val1>
<name3> ( <val1> ) エラーとなる	raise <name3> ( <val1> )	raise <name3> ( <val1> )
<name2> を <name1> とする	<name1> = <name2> ( SS , SS [ i ] + h - 1 )	<name6> = <name2> ( a , k - 1 )
<name3> の、つまり先頭から <name2> の <name1> 番目に <val4> を加えた値までの部分列の総和を出力する	print ( sum ( <name3> [ : <name2> [ <name1> ] + <val4> ] ) )	print ( sum ( <name3> [ : <name2> [ <name1> ] + <val4> ] ) )
<name1> の末尾を除いた部分列を <val4> で分割した字句列の各要素に整数を適用した列をソートした列を <name2> とする	<name2> = sorted ( map ( int , <name1> [ : - 1 ] . split ( <val4> ) ) )	<name2> = sorted ( map ( int , <name1> [ : - 1 ] . split ( <val4> ) ) )
<name4> [ <name2> ] . <name5> ( <name4> [ <name3> ] )	<name4> [ <name2> ] . <name5> ( <name4> [ <name3> ] )	<name3> [ <name2> ] . <name5> ( <name4> [ <name3> ] )
<name4> ( <name2> ) を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name4> ( <name2> )	<name3> , <name1> = <name4> ( <name2> )
<val3> を <name4> の <name6> 番目の <name6> 番目にする	<name4> [ <name6> ] [ <name6> ] = <val3>	( <name4> [ <name6> ] [ <name6> ] = <val3> )
<name5> から <name4> の <name2> 未満までの <name5> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <name4> . <name2> , <name5> ) :	. for <name1> in range ( <name5> , <name4> . <name2> , <name5> ) :
<name4> が <name2> の末尾より大きいとき、	if <name4> > <name2> [ - 1 ] :	if <name4> > <name2> [ - 1 ] :
<name1> が <name5> から <name6> を引いた値以下かつ <name3> が <name2> から <name6> を引いた値以下のとき、	if <name1> <= <name5> - <name6> and <name3> <= <name2> - <name6> :	for <name3> <= <name1> <= <name5> - <name6> and <name3> <= <name2> - <name6> :
<name2> の <name4> 番目の <name3> 番目を <name2> の <name4> 番目の <name3> から <val5> を引いた値番目にする	<name2> [ <name4> ] [ <name3> - <val5> ] = <name2> [ <name4> ] [ <name3> ]	<name1> [ <name4> ] [ <name3> - <val5> ] = <name2> [ <name4> ] [ <name3> ]
( . <val3> ) からなる列の <val5> 回分の列を <name6> とする	<name6> = [ . <val3> ] * <val5>	<name6> = [ <val3> ] * <val5>
<name5> に <name5> を掛けた値から <name1> に <val2> を加えた値未満までの <name5> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name5> * <name5> , <name1> + <val2> , <name5> ) :	. for <name3> in range ( <name5> * <name5> , <name1> + <val2> , <name5> ) :
<val6> から <name3> 未満までの数列の各要素を <name4> とし、 <val6> から <val2> 未満までの数列の各要素を <name1> とし、 <val6> の列の列を <name5> とする	<name5> = [ [ <val6> for <name1> in range ( <val2> ) ] for <name4> in range ( <name3> ) ]	<name5> = [ [ <val6> for <name1> in range ( <val2> ) ] for <name4> in range ( <name3> ) ]
<name4> から <name3> を引いた値の <val5> 乗に <name6> から <name2> を引いた値の <val5> 乗を加えた値の平方根を <name1> とする	<name1> = math . sqrt ( ( <name4> - <name3> ) ** <val5> + ( <name6> - <name2> ) ** <val5> )	<name1> = math . sqrt ( ( <name4> - <name3> ) ** <val5> + ( <name6> - <name2> ) ** <val5> )
<name2> に <name5> を掛けた値を返す	return <name2> * <name5>	yield <name2> * <name5>
<name1> . <name6> ( <name1> . <name2> , <name3> . <name4> ) を <name5> とする	<name5> = <name1> . <name6> ( <name1> . <name2> , <name3> . <name4> )	else = <name1> . <name6> ( <name1> . <name2> , <name3> . <name4> )
<name2> 、 <name6> の最大値を <name2> とする	<name2> = max ( <name2> , <name6> )	<name2> = max ( <name2> , <name6> )
<name4> の <name2> の <val1> 番目番目を出力する	print ( <name4> [ <name2> [ <val1> ] ] )	print ( <name4> [ <name2> [ <val1> ] ] )
<name1> を空白で分割した字句列の各要素を <name2> とし、 <name2> の浮動小数点数の列を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = [ float ( <name2> ) for <name2> in <name1> . split ( ) ]	<name2> , <name3> , <name6> = [ float ( <name2> ) for <name2> in <name1> . split ( ) ]
<name6> を <name1> の <name3> 番目から <name1> の <name5> 番目を引いた値の絶対値だけ増加させる	<name6> += abs ( <name1> [ <name3> ] - <name1> [ <name5> ] )	<name6> += abs ( <name1> [ <name3> ] - <name1> [ <name5> ] )
<name5> の各要素を <name1> とし、 <name1> の長さが <val4> と等しいときの <name1> の列の末尾を除いた部分列を <name6> とする	<name6> = [ <name1> for <name1> in <name5> if len ( <name1> ) == <val4> ] [ : - 1 ]	<name6> = [ <name1> for <name1> in <name5> if len ( <name1> ) == <val4> ] [ : - <val4> ]
<name5> の <name4> を <name3> の <name2> の <name1> にする	<name3> . <name2> . <name1> = <name5> . <name4>	<name3> . <name2> . <name1> = <name5> . <name4>
0 から <name4> 未満までの数列の各要素を <name1> とし、 <name3> ( <name2> . <name6> ( ) ) の列を <name5> とする	<name5> = [ <name3> ( <name2> . <name6> ( ) ) for <name1> in range ( <name4> ) ]	<name6> = [ <name3> ( <name2> . <name6> ( ) ) for <name1> in range ( <name4> ) ]
<name3> の <val2> 乗を出力する	print ( <name3> ** <val2> )	print ( <name3> ** <val2> )
<name6> の <name5> の <name2> に <name1> を加えた値番目の <name4> に <name3> を加えた値番目が <val6> と等しくないとき、 <blk> 繰り返しを中断する </blk>	if <name6> . <name5> [ <name2> + <name1> ] [ <name4> + <name3> ] != <val6> : <blk> break </blk>	\ if <name6> . <name5> [ <name2> + <name1> ] [ <name4> + <name3> ] != <val6> : <blk> break </blk>
<name1> の <name6> の <name4> 番目の <name3> 番目に <name1> の <name6> の <name3> 番目の <name5> 番目を加えた値を <name1> の <name6> の <name4> 番目の <name5> 番目にする	<name1> . <name6> [ <name4> ] [ <name5> ] = <name1> . <name6> [ <name4> ] [ <name3> ] + <name1> . <name6> [ <name3> ] [ <name5> ]	. <name1> . <name6> [ <name4> ] [ <name5> ] = <name1> . <name6> [ <name4> ] [ <name3> ] + <name1> . <name6> [ <name3> ] [ <name5> ]
<name1> ( <name5> , <name5> + <val6> , <name2> , <name4> ) を <name3> とする	<name3> = <name1> ( <name5> , <name5> + <val6> , <name2> , <name4> )	<name6> = <name1> ( <name5> , <name5> + <val6> , <name2> , <name4> )
<name4> から <name2> を引いた値に <name5> から <name3> を引いた値を掛けた値に <name1> の <name2> 番目を加えた値に <name6> の <name3> 番目を加えた値を返す	return ( <name4> - <name2> ) * ( <name5> - <name3> ) + <name1> [ <name2> ] + <name6> [ <name3> ]	return ( <name4> - <name2> ) * ( <name5> - <name3> ) + <name1> [ <name2> ] + <name6> [ <name3> ]
<name2> を <val3> で割った商を出力する	print ( <name2> // <val3> )	print ( <name2> // <val3> )
<name3> の <name6> 番目の <name4> 番目を <name1> の <name4> 番目の <name6> 番目にする	<name1> [ <name4> ] [ <name6> ] = <name3> [ <name6> ] [ <name4> ]	<name1> [ <name4> ] [ <name6> ] = <name3> [ <name6> ] [ <name4> ]
<name4> ( <name5> , <name2> )	<name4> ( <name5> , <name2> )	<name4> ( <name5> , <name2> )
<name6> . <name5> ( <name4> ) を返す	return <name6> . <name5> ( <name4> )	yield <name6> . <name5> ( <name4> )
<name5> に <name5> を掛けた値から <name6> に <name2> から <name1> を引いた値を掛けた値を引いた値を <name4> とする	<name4> = <name5> * <name5> - <name6> * ( <name2> - <name1> )	<name4> = <name5> * <name5> - <name6> * ( <name2> - <name1> )
<name3> . <name6> ( ) を返す	return <name3> . <name6> ( )	self return <name3> . <name6> ( )
<name2> ( <name4> , <name6> ) を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name2> ( <name4> , <name6> )	<name2> , <name1> = <name2> ( <name4> , <name6> )
<name6> . <name3> ( <name5> ) を <name2> とする	<name2> = <name6> . <name3> ( <name5> )	<name2> = <name6> . <name3> ( <name5> )
0 から <name2> の <val1> 番目未満までの数列を順に <name3> として、繰り返す <blk> <name4> の先頭を取り出した値 </blk>	for <name3> in range ( <name2> [ <val1> ] ) : <blk> <name4> . pop ( ) </blk>	) for <name3> in range ( <name2> [ <val1> ] ) : <blk> <name4> . pop ( ) </blk>
<name1> の <val6> 番目を <name4> の <val2> 番目にする	<name4> [ <val2> ] = <name1> [ <val6> ]	<name3> [ <val2> ] = <name1> [ <val6> ]
<name5> の <name4> が <name3> と等しくないとき、	if <name5> . <name4> is <name3> :	while <name5> . <name4> != <name3> :
<name2> の先頭を <name1> の <name2> 座標にする	<name1> . <name2> = <name2> [ 0 ]	not <name1> . <name2> = <name2> [ 0 ]
<name1> の <name2> 番目の <name6> 番目の先頭を <name5> とする	<name5> = <name1> [ <name2> ] [ <name6> ] [ 0 ]	( <name5> = <name1> [ <name2> ] [ <name6> ] [ 0 ] )
<name5> を順に <name6> として、繰り返す <blk> <name2> の <name6> の順序数番目を <val3> だけ増加させる </blk>	for <name6> in <name5> : <blk> <name2> [ ord ( <name6> ) ] += <val3> </blk>	: for <name6> in <name5> : <blk> <name2> [ ord ( <name6> ) ] += <val3> </blk>
<name5> に ( <name1> 、 <name3> ) の組を追加した集まり	<name5> . add ( ( <name1> , <name3> ) )	<name5> . add ( ( <name1> , <name3> ) )
<name1> の <name3> 番目の <name4> 番目が ( <val2> 、 <val6> ) からなる列に含まれかつ <name5> の <name3> 番目の <name4> 番目のとき、	if <name1> [ <name3> ] [ <name4> ] in [ <val2> , <val6> ] and <name5> [ <name3> ] [ <name4> ] :	if <name1> [ <name3> ] [ <name4> ] in [ <val2> , <val6> ] and <name5> [ <name3> ] [ <name4> ] :
<val4> に <name5> を加えた値から <name2> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val4> + <name5> , <name2> + <val4> ) :	range for <name3> in range ( <val4> + <name5> , <name2> + <val4> ) :
入力された文字列を <val1> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = map ( float , input ( ) . split ( <val1> ) )	<name3> , <name6> = map ( float , input ( ) . split ( <val1> ) )
<name2> のコピーされた列を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = <name2> [ : ]	( <name4> , <name6> = <name2> [ : ] )
-11111111 を <name5> とする	<name5> = - 11111111	<name6> <name5> = '-1' ( - 3 )
<name2> の <name5> 番目から <val1> に <name5> を掛けた値までの部分列を <name4> とする	<name4> = <name2> [ <name5> : <val1> * <name5> ]	<name4> = <name2> [ <name5> : <val1> * <name5> ]
<name4> の <name5> 番目を <name3> の整数値だけ増加させる	<name4> [ <name5> ] += int ( <name3> )	<name2> [ <name5> ] += int ( <name3> )
<name6> から <name1> の <val5> 乗から <name3> の <val5> 乗を引いた値の . <val4> 乗を引いた値を <name2> とする	<name2> = <name6> - ( <name1> ** <val5> - <name3> ** <val5> ) ** . <val4>	<name2> = <name6> - ( <name1> ** <val5> - <name3> ** <val5> ) ** . <val4>
辞書を <name1> とする	<name1> = dict ( ( zip ( 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' , [ 0 ] * 26 ) ) )	( <name1> = dict . dict ( ) )
入力された文字列を <val5> で分割した字句列の各要素を <name3> とし、 <name3> の浮動小数点数の列を展開し、それぞれ <name2> 、 <name1> 、 <name4> 、 <name6> とする	<name2> , <name1> , <name4> , <name6> = [ float ( <name3> ) for <name3> in input ( ) . split ( <val5> ) ]	<name2> , <name1> , <name4> , <name6> = [ float ( <name3> ) for <name3> in input ( ) . split ( <val5> ) ]
<val2> と <val1> を <name5> の <name6> だけ左シフトした値の論理積を <name4> とする	<name4> = <val2> & ( <val1> << <name5> . <name6> )	<name4> = <val2> & ( <val1> << <name5> . <name6> )
<name1> の <name2> 番目から <name4> 番目までの部分列を順に <name6> として、繰り返す	for <name6> in <name1> [ <name2> : <name4> ] :	for <name6> in <name1> [ <name2> : <name4> ] :
0 から <name4> に <val1> を加えた値未満までの数列の各要素を <name5> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name5> in range ( <name4> + <val1> ) ]	<name4> = [ [ ] for <name5> in range ( <name4> + <val1> ) ]
<name3> の <val2> 番目の整数値を <name5> とする	<name5> = int ( <name3> [ <val2> ] )	<name5> = int ( <name3> [ <val2> ] )
<name1> の <name4> 番目を <name2> とする	<name2> = <name1> [ <name4> ]	dict = <name1> [ <name4> ]
<name2> の先頭を除いた部分列を <name6> とする	<name6> = <name2> [ 1 : ]	<name6> = <name2> [ 1 : ]
<name2> と <val1> を <name6> だけ左シフトした値の論理積のとき、	if <name2> & ( <val1> << <name6> ) :	while <name2> & ( <val1> << <name6> ) :
0 から <name2> 未満までの数列を順に <name4> として、繰り返す <blk> <name6> の末尾に入力された文字列の整数値を追加する </blk>	for <name4> in range ( <name2> ) : <blk> <name6> . append ( int ( input ( ) ) ) </blk>	: for <name4> in range ( <name2> ) : <blk> <name6> . append ( int ( input ( ) ) ) </blk>
% . 15 f を <name2> の <name5> 番目の <name6> 番目を <name1> で割った値で割った余りを出力する	print ( '%.15f' % ( <name2> [ <name5> ] [ <name6> ] / <name1> ) )	print ( {1:.5f}' % ( <name2> [ <name5> ] [ <name6> ] / <name1> ) )
<name4> を <name3> の、つまり先頭から <name4> に <val5> を加えた値までの部分列の最大値だけ増加させる	<name4> += max ( <name3> [ : <name4> + <val5> ] )	<name4> += max ( <name3> [ : <name4> + <val5> ] )
<name4> の <name1> の <name2> 番目の末尾に <name5> を追加する	<name4> . <name1> [ <name2> ] . append ( <name5> )	<name1> . <name1> [ <name2> ] . append ( <name5> )
0 から <name4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name4> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name4> ) ]
<name6> の各要素を <name3> とし、 <name3> が <val4> と等しくないときの <name3> の列を <name1> とする	<name1> = [ <name3> for <name3> in <name6> if <name3> != <val4> ]	<name1> = [ <name3> for <name3> in <name6> if <name3> != <val4> ]
<name6> ( <name4> - <name5> . <name2> ) を <name1> とする	<name1> = <name6> ( <name4> - <name5> . <name2> )	<name1> = <name6> ( <name4> - <name5> . <name2> )
<name2> の <name4> に <val5> を加えた値番目に <name3> を加えた値をそうでなければ、とする	else = <name2> [ <name4> + <val5> ] + <name3>	now = <name2> [ <name4> + <val5> ] + <name3>
( <name6> ( <name2> ) ) からなる列を <name3> とする	<name3> = [ <name6> ( <name2> ) ]	<name3> = [ <name6> ( <name2> ) ]
<name3> の <name6> に対応する値、もし存在しなければ <val2> を <name4> とする	<name4> = <name3> . <name6> . get ( <val2> )	<name4> = <name3> . <name6> . get ( <val2> )
<name4> の -1 番目を <val2> だけ増加させる	<name4> [ - <val2> ] += <val2>	<name2> [ - <val2> ] += <val2>
<name4> の値の集まりの総和を <val1> で割った余りを返す	return sum ( <name4> . values ( ) ) % <val1>	x return sum ( <name4> . values ) % <val1>
<name2> 、 <name5> を <name1> の <name5> 番目、 <name6> とする	<name1> [ <name5> ] , <name6> = <name2> , <name5>	<name1> [ <name5> ] , <name6> = <name2> , <name5>
<name6> の間、次を繰り返す <blk> <name1> が <name6> の <name1> より小さいとき <name6> の <name3> 、そうでなければ <name6> の <name4> 、 <name6> を <name6> 、 <name2> とする </blk>	while <name6> : <blk> <name6> , <name2> = <name6> . <name3> if <name1> < <name6> . <name1> else <name6> . <name4> , <name6> </blk>	while <name6> : <blk> <name6> , <name2> , <name2> = <name6> . <name3> if <name1> < <name6> . <name1> else <name6> . <name4> , <name6> </blk>
<name4> の <name2> の <name6> 番目を順に <name1> として、繰り返す	for <name1> in <name4> . <name2> [ <name6> ] :	. for <name1> in <name4> . <name2> [ <name6> ] :
<name4> が <name3> の <name2> に含まれるとき、	if <name4> in <name3> . <name2> :	for <name4> in <name3> . <name2> :
-1 を <name5> の先頭にする	<name5> [ 0 ] = - 1	( <name5> [ 0 ] = - 1 )
<name5> の <name1> を <name5> の <name2> にする	<name5> . <name2> = <name5> . <name1>	<name1> . <name2> = <name5> . <name1>
<name3> . <name4> ( <name1> . <name2> ( ) , <name1> . <name5> ( ) )	<name3> . <name4> ( <name1> . <name2> ( ) , <name1> . <name5> ( ) )	<name5> . <name4> ( <name1> . <name2> ( ) , <name1> . <name5> ( ) )
<name5> から <name6> を引いた値に <name1> から <name3> を引いた値を掛けた値から <name4> から <name6> を引いた値に <name2> から <name3> を引いた値を掛けた値を引いた値を返す	return ( <name5> - <name6> ) * ( <name1> - <name3> ) - ( <name4> - <name6> ) * ( <name2> - <name3> )	return ( <name5> - <name6> ) * ( <name1> - <name3> ) - ( <name4> - <name6> ) * ( <name2> - <name3> )
<name2> . <name1> ( <name3> . <name6> )	<name2> . <name1> ( <name3> . <name6> )	set ( <name2> . <name1> ( <name3> . <name6> ) )
<name5> に <name4> を掛けた値から <name2> に <name3> を掛けた値を引いた値を <name1> とする	<name1> = <name5> * <name4> - <name2> * <name3>	<name1> = <name5> * <name4> - <name2> * <name3>
<name2> に <name5> を加えた値に <name6> を加えた値を <name1> とする	<name1> = <name2> + <name5> + <name6>	<name1> = <name2> + <name5> + <name6>
<name5> : // <name4> . <name6> . <name2> / <val1> / <name3> / <name5> . <name4>	<name5> : // <name4> . <name6> . <name2> / <val1> / <name3> / <name5> . <name4>	( <name5> : // <name4> . <name6> . <name2> / <val1> / <name3> / <name5> . <name4> )
区切りなしで <val4> 、 <name5> に <val3> を加えた値、 <val6> を出力する	print ( <val4> , <name5> + <val3> , <val6> , sep = '' )	print ( <val4> , <name5> + <val3> , <val6> , sep = '' , end = '' )
<name5> が <val4> より大きい間、次を繰り返す	while <name5> > <val4> :	del <name5> > <val4> :
<name6> が <name2> より小さいとき、 <blk> <name2> 、 <name1> を <name6> 、 <name5> とする </blk>	if <name6> < <name2> : <blk> <name6> , <name5> = <name2> , <name1> </blk>	if <name6> < <name2> : <blk> <name6> , <name5> = <name2> , <name1> </blk>
<val5> を <val6> で割った値に <name1> を掛けた値に <name4> を掛けた値に <name2> の正弦を掛けた値、 <name4> に <name2> の正弦を掛けた値を <name2> 、 <name3> とする	<name2> , <name3> = ( <val5> / <val6> ) * <name1> * <name4> * math . sin ( <name2> ) , <name4> * math . sin ( <name2> )	[ <name2> , <name3> = <val5> / <val6> * <name1> * <name4> * math . sin ( <name2> ) , <name4> * math . sin ( <name2> )
文字コード <name1> の <name5> に <val6> を加えた値番目の順序数から <val6> を引いた値の文字をそうでなければ、とする	else = chr ( ord ( <name1> [ <name5> + <val6> ] ) - <val6> )	else = chr ( ord ( <name1> [ <name5> + <val6> ] ) - <val6> )
<name2> をパラメータとして <name2> の先頭を返す関数をキーとして <name6> のキーと値の集まりをソートした列を <name4> とする	<name4> = sorted ( <name6> . items ( ) , key = lambda <name2> : <name2> [ 0 ] )	<name6> = sorted ( <name6> . items ( ) , key = lambda <name2> : <name2> [ 0 ] )
<val1> 、 <val3> を <name4> 、 <name6> とする	<name4> , <name6> = <val1> , <val3>	( <name4> , <name6> = <val1> , <val3> )
<name4> . <name3> ( <val6> )	<name4> . <name3> ( <val6> )	<name3> . <name3> ( <val6> )
<name1> のコピーされた列を <name2> の <name5> にする	<name2> . <name5> = <name1> [ : ]	( <name2> . <name5> = <name1> [ : ] )
<name4> 、 <name1> の <name3> 番目の <name5> 番目の最小値を <name4> とする	<name4> = min ( <name4> , <name1> [ <name3> ] [ <name5> ] )	<name4> = min ( <name4> , <name1> [ <name3> ] [ <name5> ] )
<name6> ( <name1> [ <val4> ] )	<name6> ( <name1> [ <val4> ] )	set ( <name6> ( <name1> [ <val4> ] ) )
<name6> が <name5> より小さくまたは <name6> が <name3> から <name5> を引いた値より大きいとき、	if <name6> < <name5> or <name6> > <name3> - <name5> :	isinstance ( <name6> < <name5> or <name6> > <name3> - <name5> ) :
<name2> に番号付した組の列を順に <name4> 、 <name3> 、 <name1> として、繰り返す	for <name4> , <name3> , <name1> in enumerate ( <name2> ) :	. for <name4> , <name3> , <name1> in enumerate ( <name2> ) :
<name3> の <name4> 番目の <name1> 番目が <name6> と等しくかつ ( <name1> 、 <name4> ) の組が <name2> に含まれないとき、	if <name3> [ <name4> ] [ <name1> ] == <name6> and ( <name1> , <name4> ) not in <name2> :	list ( <name3> [ <name4> ] [ <name1> ] == <name6> and ( <name1> , <name4> ) not in <name2> :
<val6> に <val1> を掛けた値を <name5> とする	<name5> = <val6> * <val1>	else = <val6> * <val1>
insert が <name3> と等しいとき、	if ( 'insert' == <name3> ) :	: if 'insert' == <name3> :
<name1> の <name5> から <val6> を引いた値番目を <name4> の先頭だけ増加させる	<name1> [ <name5> - <val6> ] += <name4> [ 0 ]	[ <name1> [ <name5> - <val6> ] += <name4> [ 0 ]
<name6> ( <name1> , <name3> , <name5> , <name4> )	<name6> ( <name1> , <name3> , <name5> , <name4> )	set ( <name6> ( <name1> , <name3> , <name5> , <name4> ) )
<name1> 内の <val2> を <name6> の文字列で置き換えた文字列を <name5> とする	<name5> = <name1> . replace ( <val2> , str ( <name6> ) )	<name5> = <name1> . replace ( <val2> , str ( <name6> ) )
<name3> を <name1> 分の一にする	<name3> /= <name1>	( <name3> // = <name1> )
<name4> の <name3> 番目の先頭を取り出した値	<name4> [ <name3> ] . pop ( )	( <name4> [ <name3> ] . pop ( ) )
<name3> ( <name1> , <name2> ) を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in <name3> ( <name1> , <name2> ) :	for <name4> , <name5> in <name3> ( <name1> , <name2> ) :
0 から <val1> 未満までの数列の各要素を <name2> とし、 <name5> の <name2> 番目の列を <name4> とする	<name4> = [ <name5> [ <name2> ] for <name2> in range ( <val1> ) ]	<name5> = [ <name5> [ <name2> ] for <name2> in range ( <val1> ) ]
<name2> の <name1> 番目が <val4> と等しくかつ <name1> が <name6> より小さいとき、	if <name2> [ <name1> ] == <val4> and <name1> < <name6> :	list ( <name2> [ <name1> ] == <val4> and <name1> < <name6> :
<name4> の <name1> 番目の <val6> に <val5> を挿入する	<name4> [ <name1> ] . insert ( <val6> , <val5> )	<name2> [ <name1> ] . insert ( <val6> , <val5> )
<name5> の x 座標が <name4> の x 座標より小さいかどうかを返す	return <name5> . x < <name4> . x	x return <name5> . x < <name4> . x
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name6> 、 <name3> 、 <name5> とする	<name4> , <name6> , <name3> , <name5> = map ( int , input ( ) . split ( ) )	<name6> , <name3> , <name5> = map ( int , input ( ) . split ( ) )
<name2> の <name5> から <val6> を引いた値番目が <val1> より小さいとき、	if <name2> [ <name5> - <val6> ] < <val1> :	for <name2> [ <name5> - <val6> ] < <val1> :
<name3> ( <name5> , - <name1> ) を <name5> とする	<name5> = <name3> ( <name5> , - <name1> )	else = <name3> ( <name5> , - <name1> )
( ( <val3> , <val5> ) ) からなる辞書を <name2> とする	<name2> = { <val3> : <val5> }	dict = { <val3> : <val5> }
<name5> の先頭の整数値を <name6> とする	<name6> = int ( <name5> [ 0 ] )	<name6> = int ( <name5> [ 0 ] )
( <val3> ) からなる列の <name1> 回分の列を <name6> とする	<name6> = [ <val3> ] * <name1>	<name6> = [ <val3> ] * <name1>
<name5> を <name4> の <name6> 番目の <name3> にする	<name4> [ <name6> ] . <name3> = <name5>	<name2> [ <name6> ] . <name3> = <name5>
<name1> の浮動小数点数を無限大とする	<name1> = float ( 'inf' )	( float ( <name1> ) ) = float ( 'inf' )
<name5> ( <name1> = <name2> )	<name5> ( <name1> = <name2> )	<name4> ( <name1> = <name2> )
<name5> ( <name6> , <val4> ) を出力する	print ( <name5> ( <name6> , <val4> ) )	print ( <name5> ( <name6> , <val4> ) )
<name3> の <name2> に <val1> を加えた値番目が <name3> の <name2> に <val6> を加えた値番目と等しいとき、	if <name3> [ <name2> + <val1> ] == <name3> [ <name2> + <val6> ] :	for <name3> [ <name2> + <val1> ] == <name3> [ <name2> + <val6> ] :
<name4> の <name6> 番目に <val2> を加えた値を <name3> とする	<name3> = <name4> [ <name6> ] + <val2>	<name3> = <name4> [ <name6> ] + <val2>
<name5> を <name4> の先頭だけ増加させる	<name5> += <name4> [ 0 ]	( <name5> += <name4> [ 0 ] )
<name2> の末尾の <val1> 番目が <name5> の <name4> 番目以下のとき、	if <name2> [ - 1 ] [ <val1> ] <= <name5> [ <name4> ] :	if <name2> [ - 1 ] [ <val1> ] <= <name5> [ <name4> ] :
<val5> が <name6> 以下かどうかが <name1> の <name2> より小さくなければならない	assert <val5> <= <name6> < <name1> . <name2>	<val1> assert <val5> <= <name6> < <name1> . <name2>
{} x を書式として <name5> が <val4> と等しいとき <val6> 、そうでなければ <name5> で整形した文字列を返す	return '{}x' . format ( <val6> if <name5> == <val4> else <name5> )	x return '{}x^{}' . format ( <val6> if <name5> == <val4> else <name5> )
<name1> を <name5> の <name3> に <val2> を加えた値番目だけ減少させる	<name1> -= <name5> [ <name3> + <val2> ]	<name1> -= <name5> [ <name3> + <val2> ]
sample - input . txt 、 <val3> を開いたファイルストリームを <name5> の <name6> にする	<name5> . <name6> = open ( 'sample-input.txt' , <val3> )	) . <name6> = open ( 'sample-input.txt' , <val3> )
<name3> が <name2> の末尾より大きいとき、	if <name3> > <name2> [ - 1 ] :	for <name3> in <name2> [ - 1 ] :
<name6> の <name5> 番目が <name1> より大きいとき、	if <name6> [ <name5> ] > <name1> :	list if <name6> [ <name5> ] > <name1> :
<name6> から <name2> の長さを引いた値を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <name6> - len ( <name2> )	<name1> [ <name4> ] = <name6> - len ( <name2> )
<name1> を <name6> が <name2> に含まれるとき <name2> の <name2> の <name6> と等しい要素の最初の位置から <name5> を引いた値番目、そうでなければ <name6> だけ増加させる	<name1> += <name2> [ <name2> . index ( <name6> ) - <name5> ] if <name6> in <name2> else <name6>	<name4> += <name2> [ <name2> . index ( <name6> ) - <name5> ] if <name1> in <name6> <name2> else <name6>
<name3> の <name2> に <val5> を加えた値番目の末尾に ( <name6> に <val5> を加えた値、 <name4> の整数値 ) の組を追加する	<name3> [ <name2> + <val5> ] . append ( ( <name6> + <val5> , int ( <name4> ) ) )	<name4> [ <name2> + <val5> ] . append ( ( <name6> + <val5> , int ( <name4> ) ) )
<name6> の <name1> の最大値に <val4> を加えた値を <name5> とする	<name5> = max ( <name6> . <name1> ) + <val4>	<name5> = max ( <name6> . <name1> ) + <val4>
<name2> に <name4> を加えた値を <name3> とする	<name3> = <name2> + <name4>	<name4> = <name2> + <name4>
<name2> から <name4> を引いた値から <name3> を引いた値を <name5> とする	<name5> = <name2> - <name4> - <name3>	<name5> = <name2> - <name4> - <name3>
<name1> 、 <name5> に <val6> を加えた値、 <name2> を追加して <name4> を更新する	<name4> . update ( <name1> , <name5> + <val6> , <name2> )	) <name4> . update ( <name1> , <name5> + <val6> , <name2> )
0 から <name1> を <val3> で割った商未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> // <val3> ) :	) : for <name5> in range ( <name1> // <val3> ) :
<name6> ( <name4> ) を <name3> とする	<name3> = <name6> ( <name4> )	<name3> = <name6> ( <name4> )
<name3> が <name4> の <name6> に含まれないとき、	if <name3> not in <name4> . <name6> :	or <name3> not in <name4> . <name6> :
<name6> が <name2> の <name4> に含まれなくまたは <name2> の <name4> の <name6> 番目が <name1> より大きいとき、	if <name6> not in <name2> . <name4> or <name2> . <name4> [ <name6> ] > <name1> :	list <name6> not in <name2> . <name4> or <name2> . <name4> [ <name6> ] > <name1> :
\ <name5> の末尾に <val1> を <name4> ( <name6> [ <val2> ] ) で割った余りを追加する\	\ <name5> . append ( <val1> % <name4> ( <name6> [ <val2> ] ) ) \	) <name5> . append ( <val1> % <name4> ( <name6> [ <val2> ] ) ) \
<name2> が <val6> 以上のとき、	if <name2> >= <val6> :	for <name2> >= <val6> :
<name1> の <name4> 番目を <val2> だけ増加させる	<name1> [ <name4> ] += <val2>	not <name1> [ <name4> ] += <val2>
<val5> を <name3> の <name1> から <val5> を引いた値番目にする	<name3> [ <name1> - <val5> ] = <val5>	( <name3> [ <name1> - <val5> ] = <val5> )
<name3> から <val1> を引いた値を <name2> とする	<name2> = <name3> - <val1>	( <name2> = <name3> - <val1> )
<name6> の x 座標を <name3> で割った値を <name2> とする	<name2> = <name6> . x / <name3>	( <name2> = <name6> . x / <name3> )
<name4> の <name1> 番目を <name5> の <name3> 番目にする	<name5> [ <name3> ] = <name4> [ <name1> ]	<name2> [ <name3> ] = <name4> [ <name1> ]
( ( <val4> 、 <name1> 、 <val2> 、 <name1> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <val4> , <name1> , <val2> , <name1> ) ]	<name5> = [ ( <val4> , <name1> , <val2> , <name1> ) ]
<name2> . <name5> ( <name6> . <name4> )	<name2> . <name5> ( <name6> . <name4> )	set ( <name2> . <name5> ( <name6> . <name4> ) )
<name6> の <name2> 番目を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name6> [ <name2> ]	<name2> , <name4> , <name3> = <name6> [ <name2> ]
<name5> の <val4> 乗を <name5> とする	<name5> = <name5> ** <val4>	<name5> = <name5> ** <val4>
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name5> とする	<name3> , <name2> , <name5> = map ( int , <name4> ( ) . split ( ) )	<name3> , <name2> , <name5> = map ( int , <name4> ( ) . split ( ) )
( <name1> 、 <val3> 、未定値 ) からなる列を <name2> とする	<name2> = [ <name1> , <val3> , None ]	<name6> = [ <name1> , <val3> , None ]
<name3> . <name5> ( <name3> . <name2> [ <val4> * <name1> + <val6> ] , <name3> . <name2> [ <val4> * <name1> + <val4> ] ) を <name3> の <name2> の <name1> 番目にする	<name3> . <name2> [ <name1> ] = <name3> . <name5> ( <name3> . <name2> [ <val4> * <name1> + <val6> ] , <name3> . <name2> [ <val4> * <name1> + <val4> ] )	<name3> . <name2> [ <name1> ] = <name3> . <name5> ( <name3> . <name2> [ <val4> * <name1> + <val6> ] , <name3> . <name2> [ <val4> * <name1> + <val4> ] )
<val6> の <val4> 乗を <name3> とする	<name3> = <val6> ** <val4>	<name3> = <val6> ** <val4>
<name6> に <name5> を加えた値を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name6> + <name5>	( <name3> [ <name4> ] = <name6> + <name5> )
( ( <val4> 、 -1 ) の組、 ( <val4> 、 <val5> ) の組、 ( -1 、 <val4> ) の組、 ( <val5> 、 <val4> ) の組 ) の組を <name6> とする	<name6> = ( ( <val4> , - <val5> ) , ( <val4> , <val5> ) , ( - <val5> , <val4> ) , ( <val5> , <val4> ) )	<name6> = ( ( <val4> , - <val4> ) , ( <val4> , <val5> ) , ( - <val4> , <val4> ) , ( <val5> , <val4> ) )
<name1> を <name4> だけ減少させる <name6> を <name3> だけ減少させる	<name1> -= <name4> <name6> -= <name3>	<name4> -= <name1> <name6> -= <name3>
<name6> が <val2> 以上かつ <name1> の <name6> 番目が <name3> より大きい間、次を繰り返す	while ( <name6> >= <val2> ) and ( <name1> [ <name6> ] > <name3> ) :	del ( <name6> >= <val2> and <name1> [ <name6> ] > <name3> ) :
<name3> ( ) のリストを <name5> とする	<name5> = list ( <name3> ( ) )	<name4> = list ( <name3> ( ) )
<name6> の <name5> 番目の <name1> 番目を <name6> の <name5> から <val2> を引いた値番目の <name1> 番目だけ増加させる	<name6> [ <name5> ] [ <name1> ] += <name6> [ <name5> - <val2> ] [ <name1> ]	<name1> [ <name5> ] [ <name1> ] += <name6> [ <name5> - <val2> ] [ <name1> ]
<name6> ( <name4> , <name3> )	<name6> ( <name4> , <name3> )	<name2> ( <name4> , <name3> )
<val6> から <name4> 未満までの数列を順に <name5> として、繰り返す <blk> <name1> の末尾に <name2> の <name5> 番目の先頭を追加する </blk>	for <name5> in range ( <name4> ) : <blk> <name1> . append ( <name2> [ <name5> ] [ <val6> ] ) </blk>	for <name5> in range ( <name4> ) : <blk> <name1> . append ( <name2> [ <name5> ] [ 0 ] ) </blk>
<name1> が <name4> から <val3> を引いた値と等しくないとき、	if <name1> != ( <name4> - <val3> ) :	while <name1> != <name4> - <val3> :
( ( <val5> 、 <val5> ) の組 ) からなる列を <name4> の <name1> にする	<name4> . <name1> = [ ( <val5> , <val5> ) ]	<name3> . <name1> = [ ( <val5> , <val5> ) ]
<name5> [ <name2> ] ( <name4> ) を <name1> とする	<name1> = <name5> [ <name2> ] ( <name4> )	<name1> = <name5> [ <name2> ] ( <name4> )
<name3> の <name4> の <name6> 番目を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in <name3> . <name4> [ <name6> ] :	. for <name1> , <name5> in <name3> . <name4> [ <name6> ] :
<val6> から <val2> 未満までの数列の各要素を <name1> とし、 ( ( <val6> ) からなる列の <val6> から <val3> 未満までの数列の各要素を <name4> とし、 <val5> の列回分の列 ) からなる列の列を <name2> とする	<name2> = [ [ [ <val6> ] * [ <val5> for <name4> in range ( <val3> ) ] ] for <name1> in range ( <val2> ) ]	<name2> = [ [ [ <val6> ] * [ <val5> for <name4> in range ( <val3> ) ] ] for <name1> in range ( <val2> ) ]
<name4> の <name1> から読み込んだデータを <name6> とする	<name6> = <name4> . <name1> . read ( )	<name6> = <name4> . <name1> . read ( )
<name4> と <name3> の論理積の長さを出力する	print ( len ( <name4> & <name3> ) )	) print ( len ( <name4> & <name3> ) )
<name2> の <name5> 番目を <val1> だけ増加させる	<name2> [ <name5> ] += <val1>	<name1> [ <name5> ] += <val1>
<name4> が <val3> と等しいとき、 <blk> <name1> ( <name2> , <name5> [ <val6> ] ) を <name2> とする </blk>	if <name4> == <val3> : <blk> <name2> = <name1> ( <name2> , <name5> [ <val6> ] ) </blk>	if <name4> == <val3> : <blk> <name2> = <name1> ( <name2> , <name5> [ <val6> ] ) </blk>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> 、 <name3> 、 <name6> とする	<name4> , <name5> , <name3> , <name6> = map ( int , input ( ) . split ( ) )	<name5> , <name3> , <name6> = map ( int , input ( ) . split ( ) )
<name5> の <val1> 番目が <name5> の <val3> 番目と等しいかどうかが <name5> の <val4> 番目と等しいとき、	if <name5> [ <val1> ] == <name5> [ <val3> ] == <name5> [ <val4> ] :	continue <name5> [ <val1> ] == <name5> [ <val3> ] == <name5> [ <val4> ] :
( <name6> 、 <name2> ) の組を <name5> とする	<name5> = ( <name6> , <name2> )	( <name6> , <name2> ) = ( <name6> , <name2> )
<val6> 、 <val5> 、 <val3> 、 <val2> 、 <val4> を <name5> 、 <name3> 、 <name2> 、 <name4> 、 <name1> とする	<name5> , <name3> , <name2> , <name4> , <name1> = <val6> , <val5> , <val3> , <val2> , <val4>	<name5> , <name3> , <name2> , <name4> , <name1> = <val6> , <val5> , <val3> , <val2> , <val4> , <val4>
<val1> を <name5> の <name4> 番目の <name3> にする	<name5> [ <name4> ] . <name3> = <val1>	( <name5> [ <name4> ] . <name3> = <val1> )
<name1> に <name6> を掛けた値を <name2> で割った余りを <name1> とする	<name1> = ( <name1> * <name6> ) % <name2>	<name1> = <name1> * <name6> % <name2>
<name4> の <name3> から読み込んだ一行を <name6> とする	<name6> = <name4> . <name3> . <name6>	<name6> = <name4> . <name3> . <name6>
( 、つまり偽 ) からなる列の <name1> 回分の列を <name4> とする	<name4> = [ False ] * <name1>	<name4> = [ False ] * <name1>
<name1> を展開し、それぞれ <name2> 、 <name4> 、 <name5> 、 <name6> とする	<name2> , <name4> , <name5> , <name6> = <name1>	( <name2> , <name4> , <name5> , <name6> = <name1> )
0 から <name1> 未満までの数列の各要素を <name5> とし、 <name6> から読み込んだ一行の整数値の列の組を <name3> とする	<name3> = tuple ( [ int ( <name6> . readline ( ) ) for <name5> in range ( <name1> ) ] )	<name3> = tuple ( [ int ( <name6> . readline ( ) ) for <name5> in range ( <name1> ) ] )
<name6> の <name2> が <name4> より小さい間、次を繰り返す	while <name6> . <name2> < <name4> :	del ( <name6> . <name2> < <name4> ) :
0 から <name6> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の列を <name1> とする	<name1> = [ input ( ) . split ( ) for <name4> in range ( <name6> ) ]	<name1> = [ input ( ) . split ( ) for <name4> in range ( <name6> ) ]
<name2> が <name6> の <name5> 番目以下のとき、	if <name2> <= <name6> [ <name5> ] :	or <name2> <= <name6> [ <name5> ] :
sample - input . txt 、 <val1> を開いたファイルストリームを <name4> の <name2> にする	<name4> . <name2> = open ( 'sample-input.txt' , <val1> )	) . <name2> = open ( 'sample-input.txt' , <val1> )
<name6> . <name5> ( ) を <name3> とする	<name3> = <name6> . <name5> ( )	<name3> = <name6> . <name5> ( )
入力された文字列を <val5> で分割した字句列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = input ( ) . split ( <val5> )	<name3> = input ( ) . split ( <val5> )
. #に <val5> を掛けた値を <name4> とする	<name4> = '.#' * <val5>	<name4> = '#.' * <val5>
<name1> が <name2> の <name3> の <name2> の <name4> 番目と等しくないとき、	if <name1> != <name2> . <name3> [ <name2> . <name4> ] :	for if <name1> != <name2> . <name3> [ <name2> . <name4> ] :
<name5> の階乗を <name2> とする	<name2> = math . factorial ( <name5> )	<name2> = math . factorial ( <name5> )
<name1> の <name4> 番目の末尾に <name5> を追加する	<name1> [ <name4> ] . append ( <name5> )	not <name1> [ <name4> ] . append ( <name5> )
区切りなしで <val2> 、 <name6> 、 <val1> を出力する	print ( <val2> , <name6> , <val1> , sep = '' )	, print ( <val2> , <name6> , <val1> , sep = '' , end = '' )
<name1> の <name6> を順に <name2> として、繰り返す	for <name2> in <name1> . <name6> :	. for <name2> in <name1> . <name6> :
<name1> から <val5> を引いた値から <val5> 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> - <val5> , <val5> , - <val5> ) :	range for <name4> in range ( <name1> - <val5> , <val5> , - <val5> ) :
<name5> を <val3> で割った値の切り上げ整数値に <val3> を掛けた値を <name5> とする	<name5> = math . ceil ( <name5> / <val3> ) * <val3>	<name5> = math . ceil ( <name5> / <val3> ) * <val3>
<name3> の <name5> に <name4> の <name1> を掛けた値から <name3> の <name1> に <name4> の <name5> を掛けた値を引いた値を返す	return <name3> . <name5> * <name4> . <name1> - <name3> . <name1> * <name4> . <name5>	x return <name3> . <name5> * <name4> . <name1> - <name3> . <name1> * <name4> . <name5>
<name3> モジュールを用いる	from <name3> import List , Tuple	from <name3> import combinations
<name5> の <name3> の <name2> 番目が <val4> 以上の間、次を繰り返す	while <name5> . <name3> [ <name2> ] >= <val4> :	while <name5> . <name3> [ <name2> ] >= <val4> :
<name6> の <name5> 番目が -1 と等しいとき、	if <name6> [ <name5> ] == - 1 :	for <name6> [ <name5> ] == - 1 :
<name2> . <name5> ( <name6> ) を展開し、それぞれ <name3> 、 <name1> 、 <name4> とする	<name3> , <name1> , <name4> = <name2> . <name5> ( <name6> )	<name3> , <name1> , <name4> = <name2> . <name5> ( <name6> )
<name6> の末尾に <name2> から <name1> を引いた値の絶対値を追加する	<name6> . append ( abs ( <name2> - <name1> ) )	<name1> . append ( abs ( <name2> - <name1> ) )
<name2> の <val5> 番目を <name4> とする	<name4> = <name2> [ <val5> ]	<name4> = <name2> [ <val5> ]
<name4> を <val3> で割った余りが <val6> と等しいとき、 <blk> <val3> を出力する </blk>	if <name4> % <val3> == <val6> : <blk> print ( <val3> ) </blk>	list ( <name4> % <val3> == <val6> ) : <blk> print ( <val3> ) </blk>
<name5> を <name6> の <name1> の <name3> 番目の <name4> にする	<name6> [ <name1> . <name3> ] . <name4> = <name5>	( <name6> . <name1> [ <name3> ] . <name4> = <name5> )
( <name3> ) からなる列の <name1> の <name4> 回分の列を <name6> とする	<name6> = [ <name3> ] * <name1> . <name4>	<name6> = [ <name3> ] * <name1> . <name4>
<name4> に <name1> を加えた値に <name6> を加えた値に <val3> を加えた値を出力する	print ( <name4> + <name1> + <name6> + <val3> )	str = <name4> + <name1> + <name6> + <val3> )
<name5> を <name2> の <name3> の <name6> 番目にする	<name2> . <name3> [ <name6> ] = <name5>	( <name2> . <name3> [ <name6> ] = <name5> )
<name6> を <name3> で割った商、 <name2> を <name3> で割った商を <name6> 、 <name2> とする	<name6> , <name2> = <name6> // <name3> , <name2> // <name3>	<name6> , <name2> = <name6> // <name3> , <name2> // <name3>
<name5> の整数値を返す	return int ( <name5> )	self return int ( <name5> )
<val6> を <name2> とする <name5> から <name4> を引いた値を <name3> とする	<name2> = <val6> <name3> = <name5> - <name4>	<name2> = <val6> <name3> = <name5> - <name4>
<val3> から <name5> に <val3> を加えた値未満までの数列を <name6> とする	<name6> = range ( <val3> , <name5> + <val3> )	<name6> = range ( <val3> , <name5> + <val3> )
<name1> の <name3> から <val5> を引いた値乗に対する <name3> の剰余を <name1> とする	<name1> = pow ( <name1> , <name3> - <val5> , <name3> )	<name1> = pow ( <name1> , <name3> - <val5> , <name3> )
<name4> を <val1> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name2> 、 <name6> 、 <name3> とする	<name2> , <name6> , <name3> = [ int ( <name5> ) for <name5> in <name4> . split ( <val1> ) ]	<name2> , <name6> , <name3> = [ int ( <name5> ) for <name5> in <name4> . split ( <val1> ) ]
<name6> の <name2> の <name5> から読み込んだ一行を入力された文字列とする	input = <name6> . <name2> . <name5> . readline	now = <name6> . <name2> . <name5> . readline ( )
<name1> . <name5> ( <name2> , <name3> ) を返す	return <name1> . <name5> ( <name2> , <name3> )	yield <name1> . <name5> ( <name2> , <name3> )
<name4> の先頭から <name6> を探して見つかった位置が <name4> の先頭から <name2> を探して見つかった位置と等しいかどうかを返す	return <name4> . find ( <name6> ) == <name4> . find ( <name2> )	x return <name4> . find ( <name6> ) == <name4> . find ( <name2> )
<name2> の <name6> の <name5> 番目を <name5> とする	<name5> = <name2> . <name6> [ <name5> ]	<name5> = <name2> . <name6> [ <name5> ]
<name6> の <val4> 番目が <val2> と等しいとき、	if <name6> [ <val4> ] == <val2> :	: if <name6> [ <val4> ] == <val2> :
<name1> の <name5> 番目の末尾に [ MASK ] を追加するを <name3> とする	<name3> = <name1> [ <name5> ] . append	<name3> = <name1> [ <name5> ] . append
<name6> の <name2> 番目から <name4> 番目までの部分列を <name1> とする	<name1> = <name6> [ <name2> : <name4> ]	<name1> = <name6> [ <name2> : <name4> ]
<name6> の <name3> に <name4> を加えた値番目の <name2> に <name5> を加えた値番目が <val1> と等しくないとき、	if <name6> [ <name3> + <name4> ] [ <name2> + <name5> ] != <val1> :	for <name6> [ <name3> + <name4> ] [ <name2> + <name5> ] != <val1> :
0 から <name2> から <val3> を引いた値から <name1> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> - <val3> - <name1> ) :	for <name6> in range ( <name2> - <val3> - <name1> ) :
<val1> を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = <val1>	( <name5> [ <name3> ] [ <name4> ] = <val1> )
<name3> の <val4> 番目、 <name3> の先頭を <name3> の先頭、 <name3> の <val4> 番目とする	<name3> [ 0 ] , <name3> [ <val4> ] = <name3> [ <val4> ] , <name3> [ 0 ]	<name3> [ 0 ] , <name3> [ <val4> ] = <name3> [ <val4> ] , <name3> [ 0 ]
<name2> の <name5> の <val6> 番目の整数値番目を出力する	print ( <name2> [ int ( <name5> [ <val6> ] ) ] )	print ( <name2> [ int ( <name5> [ <val6> ] ) ] )
<name5> の <name6> 番目を順に <name3> 、 <name4> 、 <name2> として、繰り返す	for <name3> , <name4> , <name2> in <name5> [ <name6> ] :	for <name3> , <name4> , <name2> in <name5> [ <name6> ] :
<name1> ( <name2> . <name6> * <name4> , <name2> . <name5> * <name4> ) を返す	return <name1> ( <name2> . <name6> * <name4> , <name2> . <name5> * <name4> )	yield <name1> ( <name2> . <name6> * <name4> , <name2> . <name5> * <name4> )
<name4> の <name3> の <name5> 番目が <name4> の <name3> の <name1> 番目より小さいとき、	if <name4> . <name3> [ <name5> ] < <name4> . <name3> [ <name1> ] :	print ( <name4> . <name3> [ <name5> ] < <name4> . <name3> [ <name1> ] :
<name6> に <name6> を加えた値を <name4> とする	<name4> = <name6> + <name6>	<name4> = <name6> + <name6>
<name2> ( <name6> ) を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name2> ( <name6> )	<name2> , <name4> = <name2> ( <name6> )
<name2> に <val1> を加えた値を返す	return <name2> + <val1>	yield <name2> + <val1>
<name3> . <name5> ( <name2> , <name6> . <name1> - <name4> . <name3> ) の絶対値を <name4> とする	<name4> = abs ( <name3> . <name5> ( <name2> , <name6> . <name1> - <name4> . <name3> ) )	<name4> = abs ( <name3> . <name5> ( <name2> , <name6> . <name1> - <name4> . <name3> ) )
<name3> ( <name1> , <name6> + <name4> , <name2> + <name5> )	<name3> ( <name1> , <name6> + <name4> , <name2> + <name5> )	<name2> ( <name1> , <name6> + <name4> , <name2> + <name5> )
<name1> が <name2> より小さい間、次を繰り返す	while <name1> < <name2> :	del <name1> < <name2> :
<name3> ( <name2> . <name5> [ <val4> : ] )	<name3> ( <name2> . <name5> [ <val4> : ] )	<name3> ( <name2> . <name5> [ <val4> : ] )
<name1> の <name6> 番目でないとき、	if not <name1> [ <name6> ] :	while not <name1> [ <name6> ] :
<name4> ( <name5> ) を <name5> とする	<name5> = <name4> ( <name5> )	<name5> = <name4> ( <name5> )
<name5> 、未定値を <name4> 、 <name2> とする	<name4> , <name2> = <name5> , None	( <name4> , <name2> = <name5> , None )
<val2> を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <val2>	( <name1> [ <name5> ] = <val2> )
<name1> の <val2> 番目、 <name1> の <val3> 番目、 <name1> の先頭、 <name1> の <val5> 番目を <name1> の先頭、 <name1> の <val2> 番目、 <name1> の <val5> 番目、 <name1> の <val3> 番目とする	<name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ] , <name1> [ <val3> ] = <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ 0 ] , <name1> [ <val5> ]	<name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ] , <name1> [ <val3> ] = <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ 0 ] , <name1> [ <val5> ]
% d % d を ( <name6> 、 <name3> ) の組で割った余りを出力する	print ( '%d %d' % ( <name6> , <name3> ) )	print ( '%d %d %d %d' % ( <name6> , <name3> ) )
( ( <val1> ) からなる列の <val1> から <name6> 未満までの数列の各要素を <name5> とし、 <name4> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val1> ] * [ <name4> for <name5> in range ( <name6> ) ] ]	<name2> = [ [ <val1> ] * [ <name4> for <name5> in range ( <name6> ) ] ]
<name1> の <name6> 番目が <val2> より小さいとき、 <blk> <name5> ( <name3> + <val4> , <name1> * <val2> + <name1> [ <name6> ] ) </blk>	if <name1> [ <name6> ] < <val2> : <blk> <name5> ( <name3> + <val4> , <name1> * <val2> + <name1> [ <name6> ] ) </blk>	: <blk> if <name1> [ <name6> ] < <val2> : <blk> <name5> ( <name3> + <val4> , <name1> * <val2> + <name1> [ <name6> ] ) </blk>
( <val2> ) からなる列に <name4> を加えた値を返す	return [ <val2> ] + <name4>	yield [ <val2> ] + <name4>
<name2> の <name5> を <val1> だけ増加させる	<name2> . <name5> += <val1>	pow ( <name2> . <name5> += <val1> )
<name1> の先頭に <name5> を追加する	<name1> . appendleft ( <name5> )	not <name1> . appendleft ( <name5> )
<val5> に <name3> を掛けた値に <val2> を加えた値が <name4> に <val5> を掛けた値より小さいとき、	if <val5> * <name3> + <val2> < <name4> * <val5> :	list ( <val5> * <name3> + <val2> < <name4> * <val5> ) :
<name4> が <val1> と等しくまたは <name5> が <val1> と等しいとき、 <blk> <name6> の末尾に <val3> を追加する </blk>	if <name4> == <val1> or <name5> == <val1> : <blk> <name6> . append ( <val3> ) </blk>	while <name4> == <val1> or <name5> == <val1> : <blk> <name6> . append ( <val3> ) </blk>
<name6> が <name5> より大きくかつ <name3> が <name5> より大きいとき、	if <name6> > <name5> and <name3> > <name5> :	for <name6> > <name5> and <name3> > <name5> :
<name4> ( <val6> , <name3> , <name5> ) の週を <name2> とする	<name2> = <name4> ( <val6> , <name3> , <name5> ) . weekday ( )	<name6> = { <name4> ( <val6> , <name3> , <name5> ) }
<name2> を <name5> だけ右シフトした値と <val1> の論理積でないとき、	if not ( ( <name2> >> <name5> ) & <val1> ) :	for ( not ( <name2> >> <name5> & <val1> ) :
<val3> を <name5> の <val3> 番目とするを <name2> の先頭の <val3> 番目にする	<name2> [ <val3> ] [ <val3> ] = <name5> [ <val3> ] = <val3>	<name2> [ <val3> ] [ <val3> ] = <name5> [ <val3> ] = <val3>
0 から <val6> 未満までの数列の各要素を <name2> とし、 <name1> から読み込んだ一行の整数値の列のリストを <name5> とする	<name5> = list ( [ int ( <name1> . readline ( ) ) for <name2> in range ( <val6> ) ] )	<name5> = list ( [ int ( <name1> . readline ( ) ) for <name2> in range ( <val6> ) ] )
<name1> の <name2> の <name5> 番目が <name4> の <name2> の <name5> 番目と等しくないとき、	if <name1> . <name2> [ <name5> ] != <name4> . <name2> [ <name5> ] :	!= <name1> . <name2> [ <name5> ] != <name4> . <name2> [ <name5> ] :
<val1> から <name3> 未満までの数列の各要素を <name4> とし、 <val1> から <val6> 未満までの数列の各要素を <name2> とし、 <val1> の列の列を <name5> とする	<name5> = [ [ <val1> for <name2> in range ( <val6> ) ] for <name4> in range ( <name3> ) ]	<name5> = [ [ <val1> for <name2> in range ( <val6> ) ] for <name4> in range ( <name3> ) ]
<name6> を <val3> に <name5> の <name4> 番目の先頭の文字列を加えた値だけ増加させる	<name6> += <val3> + str ( <name5> [ <name4> ] [ 0 ] )	<name6> += <val3> + str ( <name5> [ <name4> ] [ 0 ] )
<name5> ( <name6> . <name1> [ <val3> : ] )	<name5> ( <name6> . <name1> [ <val3> : ] )	map <name5> ( <name6> . <name1> [ <val3> : ] )
( -1 ) からなる列の <name6> の長さ回分の列を <name2> とする	<name2> = [ - 1 ] * len ( <name6> )	<name2> = [ - 1 ] * len ( <name6> )
<name5> の <name4> 番目が -1 と等しくないとき <name5> の <name4> 番目、 <name5> の <name2> 番目の最大値、そうでなければ <name5> の <name2> 番目を <name5> の <name4> 番目にする	<name5> [ <name4> ] = max ( <name5> [ <name4> ] , <name5> [ <name2> ] ) if <name5> [ <name4> ] != - 1 else <name5> [ <name2> ]	<name5> [ <name4> ] = max ( <name5> [ <name4> ] , <name5> [ <name2> ] ) if <name5> [ <name4> ] != - 1 else <name5> [ <name2> ]
<name5> が <name3> の <name6> 番目と等しいとき、	if <name5> == <name3> [ <name6> ] :	or <name5> == <name3> [ <name6> ] :
<name6> でなくまたは <name5> でなくなければならない	assert not <name6> or not <name5>	<val1> assert not <name6> or not <name5>
<name5> から <name4> 未満までの数列を順に <name1> として、繰り返す <blk> <val6> を <name2> の <name3> 番目の <name1> 番目にする </blk>	for <name1> in range ( <name5> , <name4> ) : <blk> <name2> [ <name3> ] [ <name1> ] = <val6> </blk>	) for <name1> in range ( <name5> , <name4> ) : <blk> <name2> [ <name3> ] [ <name1> ] = <val6> </blk>
<name6> を <name5> の <name3> 番目の <name2> 番目だけ増加させる	<name6> += <name5> [ <name3> ] [ <name2> ]	<name6> += <name5> [ <name3> ] [ <name2> ]
<name5> の <name6> の <name1> 番目の <name2> 番目を <name5> の <name4> の <name2> 番目にする	<name5> . <name4> [ <name2> ] = <name5> . <name6> [ <name1> ] [ <name2> ]	<name4> . <name2> = <name5> . <name6> [ <name1> ] [ <name2> ]
逆順に <name1> をソートした列を <name3> とする	<name3> = sorted ( <name1> , reverse = True )	else = sorted ( <name1> , reverse = True )
<name3> の長さが <name6> の <name4> より小さい間、次を繰り返す	while len ( <name3> ) < <name6> . <name4> :	del ( len ( <name3> ) < <name6> . <name4> ) :
<name3> の <name4> 番目が <name6> より大きいとき、	if <name3> [ <name4> ] > <name6> :	continue [ <name4> ] > <name6> :
<name3> が <val1> と等しくないとき、 <blk> 空行を出力する </blk>	if <name3> != <val1> : <blk> print ( ) </blk>	while <name3> != <val1> : <blk> print ( ) </blk>
<name4> の文字列を <name2> とする	<name2> = str ( <name4> )	<name2> = str ( <name4> )
<name2> の <name3> 番目に <name4> を追加した集まり	<name2> [ <name3> ] . add ( <name4> )	pow ( <name2> [ <name3> ] . add ( <name4> ) )
\ <name6> ( <val5> % <name2> ( <name4> ) ) \	\ <name6> ( <val5> % <name2> ( <name4> ) ) \	% <name6> ( <val5> % <name2> ( <name4> ) ) \
<name1> を <name5> の <val6> 番目だけ増加させる	<name1> += <name5> [ <val6> ]	( <name1> += <name5> [ <val6> ] )
<name1> ( * <name5> ( <val4> , <name2> ) )	<name1> ( * <name5> ( <val4> , <name2> ) )	<name1> ( * <name5> ( <val4> , <name2> ) )
( ( <val4> ) からなる列の <val3> 回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val4> ] * <val3> ]	<name2> = [ [ <val4> ] * <val3> ]
0 から <val3> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <val3> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <val3> ) ]
<name2> の <name4> に <val1> を加えた値番目の <name3> 番目を <val1> だけ増加させる	<name2> [ <name4> + <val1> ] [ <name3> ] += <val1>	<name1> [ <name4> + <val1> ] [ <name3> ] += <val1>
<name2> ( <name4> ) が <name4> と等しくないとき、	if <name2> ( <name4> ) != <name4> :	raise <name2> ( <name4> ) != <name4> :
<name3> の長さが <val6> 以上の間、次を繰り返す	while len ( <name3> ) >= <val6> :	try >= len ( <name3> ) >= <val6> :
<val2> に <name5> を掛けた値を <name6> とする	<name6> = <val2> * <name5>	<name6> = <val2> * <name5>
<name3> を <name2> に <val5> を加えた値だけ増加させる	<name3> += <name2> + <val5>	( <name3> += <name2> + <val5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name3> 、 <name5> 、 <name6> とする	<name1> , <name3> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name5> , <name6> = map ( int , input ( ) . split ( ) )
<name3> が <val2> と等しくまたは <name4> が <val2> と等しくまたは <name1> が <val2> と等しくまたは <name3> に <name4> を加えた値が <val5> 以上または <name3> に <name4> を加えた値に <name1> を加えた値が <val6> 以上のとき、	if <name3> == <val2> or <name4> == <val2> or <name1> == <val2> or <name3> + <name4> >= <val5> or <name3> + <name4> + <name1> >= <val6> :	or <name3> == <val2> or <name4> == <val2> or <name1> == <val2> or <name3> + <name4> >= <val5> or <name3> + <name4> + <name1> >= <val6> :
<name2> から <name4> を引いた値の平方根を <name5> とする	<name5> = sqrt ( <name2> - <name4> )	<name5> = math . sqrt ( <name2> - <name4> )
<name1> の <name6> から <val4> を引いた値番目が <name5> から <val3> を引いた値と等しくかつ <name1> の <name6> から <val2> を引いた値番目が <name5> から <val1> を引いた値と等しくかつ <name1> の <name6> から <val6> を引いた値番目が <name5> から <val2> を引いた値と等しいとき、	if <name1> [ <name6> - <val4> ] == <name5> - <val3> and <name1> [ <name6> - <val2> ] == <name5> - <val1> and <name1> [ <name6> - <val6> ] == <name5> - <val2> :	isinstance ( <name1> [ <name6> - <val4> ] == <name5> - <val3> and <name1> [ <name6> - <val2> ] == <name5> - <val1> and <name1> [ <name6> - <val6> ] == <name5> - <val2> :
meiji を <name1> とする	<name1> = 'meiji'	not <name1> = 'meiji'
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name3> 、 <name2> とする	<name4> , <name1> , <name3> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name2> = map ( int , input ( ) . split ( ) )
<name1> の <name4> の <name2> 番目の <name3> 番目が <name6> の <name4> の <name2> 番目の <name3> 番目と等しくないとき、	if <name1> . <name4> [ <name2> ] [ <name3> ] != <name6> . <name4> [ <name2> ] [ <name3> ] :	!= <name1> . <name4> [ <name2> ] [ <name3> ] != <name6> . <name4> [ <name2> ] [ <name3> ] :
0 から <name1> 未満までの数列の各要素を <name6> とし、 ( <name4> ) からなる列に <name5> ( ) . <name3> ( ) の各要素に <name2> を適用した列のリストを加えた値に ( <name4> ) からなる列を加えた値の列を <name1> とする	<name1> = [ [ <name4> ] + list ( map ( <name2> , <name5> ( ) . <name3> ( ) ) ) + [ <name4> ] for <name6> in range ( <name1> ) ]	<name3> = [ [ <name4> ] + list ( map ( <name2> , <name5> ( ) . <name3> ( ) ) ) + [ <name4> ] for <name6> in range ( <name1> ) ]
<val2> に <val2> を間に入れて <name3> を連結した文字列を加えた値を出力する	print ( <val2> + <val2> . join ( <name3> ) )	print ( <val2> + <val2> . join ( <name3> ) )
<name5> の <name6> の先頭を返す	return <name5> . <name6> [ 0 ]	yield <name5> . <name6> [ 0 ]
何もしない	pass	assert pass
を <name6> の <name4> 番目にする	<name6> [ <name4> ] = ''	( <name6> [ <name4> ] = '' )
<name1> の先頭を <name4> の <name1> 座標にする	<name4> . <name1> = <name1> [ 0 ]	<name2> . <name1> = <name1> [ 0 ]
入力された文字列を順に <name4> として、繰り返す	for <name4> in input ( ) :	for <name4> in input ( ) :
<name1> . <name6> ( <name1> . <name3> ( <name5> ) , <name1> . <name3> ( <name2> ) )	<name1> . <name6> ( <name1> . <name3> ( <name5> ) , <name1> . <name3> ( <name2> ) )	<name1> . <name6> ( <name1> . <name3> ( <name5> ) , <name1> . <name3> ( <name2> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name2> とする	<name3> , <name1> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name2> = map ( int , input ( ) . split ( ) )
0 から <name6> 未満までの数列の各要素を <name3> とし、 <name4> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name5> とする	<name5> = [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ]	<name5> = [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ]
<name2> の <name3> 番目の <name5> 番目が <val4> と等しいとき、	if <name2> [ <name3> ] [ <name5> ] == <val4> :	continue if <name2> [ <name3> ] [ <name5> ] == <val4> :
<name2> の末尾に ( <name1> 、 <name6> 、 <name3> の整数値 ) からなる列を追加する	<name2> . append ( [ <name1> , <name6> , int ( <name3> ) ] )	<name2> . append ( [ <name1> , <name6> , int ( <name3> ) ] )
<name4> の <name1> の先頭番目内の全ての要素を取り除く	<name4> [ <name1> [ 0 ] ] . clear ( )	<name3> [ <name1> [ 0 ] ] . clear ( )
<name5> の <name4> から <val2> を引いた値番目を <name3> とする	<name3> = <name5> [ <name4> - <val2> ]	<name3> = <name5> [ <name4> - <val2> ]
<name5> の <name1> に <name5> の <name6> から <name5> の <name1> を引いた値に <name3> を掛けた値を加えた値を返す	return <name5> . <name1> + ( <name5> . <name6> - <name5> . <name1> ) * <name3>	x return <name5> . <name1> + ( <name5> . <name6> - <name5> . <name1> ) * <name3>
<name6> が <name3> より小さくかつ <name1> の <name6> 番目が <name1> の <name4> 番目より大きいとき、	if <name6> < <name3> and <name1> [ <name6> ] > <name1> [ <name4> ] :	> <name6> < <name3> and <name1> [ <name6> ] > <name1> [ <name4> ] :
<name6> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストを <name5> とする	<name5> = list ( map ( int , <name6> . readline ( ) . split ( ) ) )	<name5> = list ( map ( int , <name6> . readline ( ) . split ( ) ) )
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name5> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name2> とする	<name2> = [ tuple ( map ( int , <name5> ( ) . split ( ) ) ) for <name4> in range ( <name3> ) ]	<name6> = [ tuple ( map ( int , <name5> ( ) . split ( ) ) ) for <name4> in range ( <name3> ) ]
<name1> の各要素を <name5> とし、 <val4> を間に入れて <name5> を連結した文字列を出力するの列	[ print ( <val4> . join ( <name5> ) ) for <name5> in <name1> ]	<name1> [ print ( <val4> . join ( <name5> ) ) for <name5> in <name1> ]
<name5> ( <name6> , <val2> , <name1> , <name3> , <name4> ) を出力する	print ( <name5> ( <name6> , <val2> , <name1> , <name3> , <name4> ) )	print ( <name5> ( <name6> , <val2> , <name1> , <name3> , <name4> ) )
<name6> の総和を <val5> で割った商を出力する	print ( ( sum ( <name6> ) ) // <val5> )	) print ( sum ( <name6> ) // <val5> )
<name6> を <val1> に <val5> 、 <name4> から <val5> を引いた値の最小値を掛けた値だけ増加させる	<name6> += <val1> * min ( <val5> , ( <name4> - <val5> ) )	<name1> += <val1> * min ( <val5> , <name4> - <val5> )
次は例外に関する条件がある <blk> 入力された文字列を <val2> で分割した字句列の各要素に浮動小数点数を適用した列のリストを展開し、それぞれ <name6> 、 <name3> とする </blk>	try : <blk> <name6> , <name3> = list ( map ( float , input ( ) . split ( <val2> ) ) ) </blk>	for <name6> in try : <blk> <name3> = list ( map ( float , input ( ) . split ( <val2> ) ) ) </blk>
<name2> の <name5> 番目が <name6> より小さいとき、	if <name2> [ <name5> ] < <name6> :	or <name2> [ <name5> ] < <name6> :
<name2> の <name3> 番目が <val4> と等しいとき、	if <name2> [ <name3> ] == <val4> :	: if <name2> [ <name3> ] == <val4> :
<name6> が <name4> より小さくまたは <name3> が <name1> より小さいとき、	if <name6> < <name4> or <name3> < <name1> :	if <name6> < <name4> or <name3> < <name1> :
<name2> 、 <name4> 、 <name5> を出力する	print ( <name2> , <name4> , <name5> )	print ( <name2> , <name4> , <name5> )
<name2> の <val5> 乗から <name3> に <name1> を掛けた値を引いた値を <name4> とする	<name4> = <name2> ** <val5> - <name3> * <name1>	<name4> = <name2> ** <val5> - <name3> * <name1>
<name6> の <name2> の <name1> 番目を <name5> だけ増加させる	<name6> . <name2> [ <name1> ] += <name5>	( <name6> . <name2> [ <name1> ] += <name5> )
<name5> の末尾に <name5> の先頭に <val4> を掛けた値を追加する	<name5> . append ( <name5> [ 0 ] * <val4> )	<name4> . append ( <name5> [ 0 ] * <val4> )
<name4> ( <val3> , <name6> ( <name5> ) -1 ) を出力する	print ( <name4> ( <val3> , <name6> ( <name5> ) - 1 ) )	print ( <name4> ( <val3> , <name6> ( <name5> ) - 1 ) )
<val4> を <name6> の <name5> の <val2> 番目にする	<name6> . <name5> [ <val2> ] = <val4>	<name4> . <name5> [ <val2> ] = <val4>
<name5> の末尾に ( <name6> 、 <name1> 、 <name3> ) の組を追加する	<name5> . append ( ( <name6> , <name1> , <name3> ) )	<name4> . append ( ( <name6> , <name1> , <name3> ) )
<name2> が <val3> と等しくないとき、	if <name2> != <val3> :	raise <name2> != <val3> :
<name6> を <name4> で割った余りが <val5> と等しいとき、	if <name6> % <name4> == <val5> :	list ( <name6> % <name4> == <val5> ) :
( <val2> 、 <val6> ) からなる列に <val5> から <name4> を <val6> で割った商から <name1> を引いた値未満までの数列の各要素を <name3> とし、 <name2> の <name3> 番目のときの <val6> に <name3> を掛けた値に <val5> を加えた値と <val5> の論理和の列を加えた値を返す	return [ <val2> , <val6> ] + [ <val6> * <name3> + <val5> | <val5> for <name3> in range ( <val5> , <name4> // <val6> - <name1> ) if <name2> [ <name3> ] ]	return [ <val2> , <val6> ] + [ <val6> * <name3> + <val5> | <val5> for <name3> in range ( <val5> , <name4> // <val6> - <name1> ) if <name2> [ <name3> ] ]
( 、つまり未定値、 <val4> 、 <val3> 、 <val5> 、 <val2> ) からなる列を <name1> とする	<name1> = [ None , <val4> , <val3> , <val5> , <val2> ]	<name4> = [ None , <val4> , <val3> , <val5> , <val2> ]
<name4> の <name6> 番目を <val2> だけ減少させる	<name4> [ <name6> ] -= <val2>	<name1> [ <name6> ] -= <val2>
<name4> の整数値が <name6> の整数値より小さいとき、	if int ( <name4> ) < int ( <name6> ) :	continue int ( <name4> ) < int ( <name6> ) :
<name2> が 0 から <val3> 未満までの数列に含まれないとき、	if <name2> not in range ( <val3> ) :	or <name2> not in range ( <val3> ) :
<name5> の先頭の整数値を <name4> の <name1> 番目の <name3> にする	<name4> [ <name1> ] . <name3> = int ( <name5> [ 0 ] )	<name1> [ <name1> ] . <name3> = int ( <name5> [ 0 ] )
( <val4> ) からなる列の <val5> 回分の列を <name2> とする	<name2> = [ <val4> ] * <val5>	<name2> = [ <val4> ] * <val5>
<name5> が <name3> より大きいとき、 <blk> 何も返さない </blk>	if <name5> > <name3> : <blk> return </blk>	list if <name5> > <name3> : <blk> return </blk>
<name2> の <name4> 番目の <val6> 番目が <name2> の <name3> 番目の先頭より小さいとき、	if <name2> [ <name4> ] [ <val6> ] < <name2> [ <name3> ] [ <val6> ] :	sum ( <name2> [ <name4> ] [ <val6> ] < <name2> [ <name3> ] [ <val6> ] ) :
<name1> に <name4> に <val2> を加えた値を掛けた値を出力する	print ( <name1> * ( <name4> + <val2> ) )	<name1> print ( <name1> * ( <name4> + <val2> ) )
<name1> を <name2> の先頭だけ増加させる	<name1> += <name2> [ 0 ]	( <name1> += <name2> [ 0 ] )
( -1 ) からなる列の <name6> の <name2> 回分の列を <name6> の <name1> にする	<name6> . <name1> = [ - 1 ] * <name6> . <name2>	<name3> . <name1> = [ - 1 ] * <name6> . <name2>
<name1> の <name4> 個までのコンビネーションを順に <name2> として、繰り返す	for <name2> in combinations ( <name1> , <name4> ) :	. for <name2> in ( combinations ( <name1> , <name4> ) ) :
<name3> ( <name5> + <val6> , <name1> ) の各要素を <name2> とし、 <val4> から <name2> を引いた値の列を返す	return [ <val4> - <name2> for <name2> in <name3> ( <name5> + <val6> , <name1> ) ]	yield [ <val4> - <name2> for <name2> in <name3> ( <name5> + <val6> , <name1> ) ]
<name6> の <name1> の <name2> 番目の <name4> 番目を <name5> とする	<name5> = <name6> . <name1> [ <name2> ] [ <name4> ]	<name5> = <name6> . <name1> [ <name2> ] [ <name4> ]
<name1> モジュールを用いる	from <name1> import deepcopy	return from <name1> import combinations
<name2> の <name1> 番目の <name5> 番目を <name2> の <name1> 番目の <name5> から <val3> を引いた値番目だけ増加させる	<name2> [ <name1> ] [ <name5> ] += <name2> [ <name1> ] [ <name5> - <val3> ]	[ <name2> [ <name1> ] [ <name5> ] += <name2> [ <name1> ] [ <name5> - <val3> ]
<name3> かつ <name3> の末尾の <val5> 番目が <name1> と等しくまたは <name3> の末尾の <val4> 番目が <name6> 以下の間、次を繰り返す	while <name3> and ( <name3> [ - <val4> ] [ <val5> ] == <name1> or <name3> [ - <val4> ] [ <val4> ] <= <name6> ) :	and ( <name3> and <name3> [ - 1 ] [ <val5> ] == <name1> or <name3> [ - <val4> ] [ <val4> ] <= <name6> ) :
<name1> は <name6> 型のとき、	if isinstance ( <name1> , <name6> ) :	for <name1> , <name6> in isinstance ( <name1> , <name6> ) :
<name4> が -1 と等しくない間、次を繰り返す	while <name4> != - 1 :	del <name4> != - 1 :
<name5> の末尾に ( <name3> に <name4> に <name6> から <name3> を引いた値を掛けた値を加えた値、 <name1> に <name4> に <name2> から <name1> を引いた値を掛けた値を加えた値 ) の組を追加する	<name5> . append ( ( <name3> + <name4> * ( <name6> - <name3> ) , <name1> + <name4> * ( <name2> - <name1> ) ) )	<name5> . append ( ( <name3> + <name4> * ( <name6> - <name3> ) , <name1> + <name4> * ( <name2> - <name1> ) ) )
無限の整数列の <name4> から <name2> を引いた値番目を <val3> だけ増加させる	count [ <name4> - <name2> ] += <val3>	& count [ <name4> - <name2> ] += <val3>
<name1> を <name5> に <name2> を掛けた値を <val3> で割った値の正弦だけ増加させる	<name1> += sin ( <name5> * <name2> / <val3> )	<name5> += <name1> . sin ( <name5> * <name2> / <val3> )
<name1> と ( ( <name3> の <val5> 番目、 <name3> の先頭、 <name3> の <val2> 番目、 <name3> の <val6> 番目、 <name3> の <val4> 番目、 <name3> の <val1> 番目 ) の組 ) の集合の和集合を <name1> とする	<name1> = <name1> . union ( { ( <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val4> ] , <name3> [ <val1> ] ) } )	<name1> = <name1> . union ( { ( <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val4> ] , <name3> [ <val1> ] ) } )
<val5> を <name3> の <name2> 番目の <val1> 番目にする	<name3> [ <name2> ] [ <val1> ] = <val5>	( <name3> [ <name2> ] [ <val1> ] = <val5> )
INF を出力する	print ( 'INF' )	print ( 'INF' )
<name6> と <name4> の最大公約数を <name1> とする	<name1> = gcd ( <name6> , <name4> )	<name1> = math . gcd ( <name6> , <name4> )
0 から <name4> の <name2> に <val6> を加えた値番目の整数値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( int ( <name4> [ <name2> + <val6> ] ) ) :	for <name5> in range ( int ( <name4> [ <name2> + <val6> ] ) ) :
<name3> が <name4> に含まれなくかつ <name3> が <name2> に含まれないとき、	if <name3> not in <name4> and <name3> not in <name2> :	while <name3> not in <name4> and <name3> not in <name2> :
<name3> に <val5> を掛けた値から <name2> に <val4> を加えた値未満までの <name3> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> * <val5> , <name2> + <val4> , <name3> ) :	( for <name6> in range ( <name3> * <val5> , <name2> + <val4> , <name3> ) :
<name6> . <name3> ( <name5> , <name4> -2 )	<name6> . <name3> ( <name5> , <name4> - 2 )	set ( <name6> . <name3> ( <name5> , <name4> - 2 ) )
0 から <name4> 未満までの数列の各要素を <name1> とし、 -1 の列を <name5> とする	<name5> = [ - 1 for <name1> in range ( <name4> ) ]	<name4> = [ - 1 for <name1> in range ( <name4> ) ]
<val5> 、 <val1> 、 <name3> を <name4> 、 <name2> 、 <name6> とする	<name4> , <name2> , <name6> = <val5> , <val1> , <name3>	<name3> , <name2> , <name6> = <val5> , <val1> , <name3>
0 から <val2> 未満までの数列の各要素を <name1> とし、 <name3> の <name1> 番目が <name4> と等しいときの <name1> の列を順に <name6> として、繰り返す	for <name6> in [ <name1> for <name1> in range ( <val2> ) if <name3> [ <name1> ] == <name4> ] :	( for <name6> in [ <name1> for <name1> in range ( <val2> ) if <name3> [ <name1> ] == <name4> ] :
<name3> の <name4> 番目から <name2> 番目までの部分列に ( <name1> ) からなる列を加えた値を <name6> とする	<name6> = <name3> [ <name4> : <name2> ] + [ <name1> ]	<name4> = <name3> [ <name4> : <name2> ] + [ <name1> ]
<name6> の <name4> 番目の末尾に <name2> を追加する	<name6> [ <name4> ] . append ( <name2> )	<name2> [ <name4> ] . append ( <name2> )
<name1> を <val2> だけ減少させる <name5> を <val2> だけ減少させる	<name1> -= <val2> <name5> -= <val2>	<name1> -= <val2> <name5> -= <val2>
<name2> の <name6> 番目を ( <name2> の <name6> 番目の総和 ) からなる列だけ増加させる	<name2> [ <name6> ] += [ sum ( <name2> [ <name6> ] ) ]	<name2> [ <name6> ] += [ sum ( <name2> [ <name6> ] ) ]
0 から <name6> の <name4> 未満までの数列の各要素を <name1> とし、 <name3> ( ) の列を <name2> とする	<name2> = [ <name3> ( ) for <name1> in range ( <name6> . <name4> ) ]	<name6> = [ <name3> ( ) for <name1> in range ( <name6> . <name4> ) ]
<val4> から <val3> 未満までの数列の各要素を <name6> とし、 <val4> の列を <name5> とする	<name5> = [ <val4> for <name6> in range ( <val3> ) ]	<name5> = [ <val4> for <name6> in range ( <val3> ) ]
<name3> ( <name2> , <name6> + <val4> , <name5> )	<name3> ( <name2> , <name6> + <val4> , <name5> )	<name4> ( <name2> , <name6> + <val4> , <name5> )
<name1> をパラメータとして <name1> の <val2> 番目から <name1> の先頭を引いた値を返す関数を <name5> として <name6> をソートする	<name6> . sort ( <name5> = lambda <name1> : <name1> [ <val2> ] - <name1> [ 0 ] )	<name5> . sort ( <name6> = lambda <name1> : <name1> [ <val2> ] - <name1> [ 0 ] )
<name2> を順に <name4> 、 <name6> 、 <name1> 、 <name3> として、繰り返す	for <name4> , <name6> , <name1> , <name3> in <name2> :	for <name4> , <name6> , <name1> , <name3> in <name2> :
<name2> の <name4> から <val1> を引いた値番目が <val6> と等しくないとき、	if <name2> [ <name4> - <val1> ] != <val6> :	for <name2> [ <name4> - <val1> ] != <val6> :
<val5> を <name3> の <name1> 番目の <name4> 番目にする	<name3> [ <name1> ] [ <name4> ] = <val5>	<name4> [ <name1> ] [ <name4> ] = <val5>
( <name3> の <name2> から <val1> を引いた値、 <name3> の <name2> から <val1> を引いた値 ) の組を返す	return ( <name3> . <name2> - <val1> , <name3> . <name2> - <val1> )	x return ( <name3> . <name2> - <val1> , <name3> . <name2> - <val1> )
<name4> が <name3> の <name1> より小さい間、次を繰り返す	while <name4> < <name3> . <name1> :	del ( <name4> < <name3> . <name1> ) :
<name5> の長さが <name1> より小さい間、次を繰り返す	while len ( <name5> ) < <name1> :	del ( len ( <name5> ) < <name1> ) :
<name6> の <name2> 番目の <name1> 番目が -1 と等しくないとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> [ <name2> ] [ <name1> ] != - 1 : <blk> continue </blk>	for if <name6> [ <name2> ] [ <name1> ] != - 1 : <blk> continue </blk>
<name3> から <val4> を引いた値を <val6> で割った商を <name3> とする	<name3> = ( <name3> - <val4> ) // <val6>	<name3> = ( <name3> - <val4> ) // <val6>
<val1> を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = <val1>	<name4> [ <name4> ] [ <name6> ] = <val1>
<name4> の <name6> の <name3> 番目に <name5> を加えた値を <name4> の <name6> の <name1> 番目にする	<name4> . <name6> [ <name1> ] = <name4> . <name6> [ <name3> ] + <name5>	<name2> . <name6> [ <name1> ] = <name4> . <name6> [ <name3> ] + <name5>
<name6> を <name4> で割った余りが <val5> と等しい間、次を繰り返す	while <name6> % <name4> == <val5> :	del <name6> % <name4> == <val5> :
<name6> を <val5> で割った値に <val4> を加えた値の整数値を <name1> とする	<name1> = int ( <name6> / <val5> + <val4> )	<name1> = int ( <name6> / <val5> + <val4> )
<name6> を <name3> の <name1> に <val2> を加えた値番目の <name4> に <val5> を加えた値番目にする	<name3> [ <name1> + <val2> ] [ <name4> + <val5> ] = <name6>	<name2> [ <name1> + <val2> ] [ <name4> + <val5> ] = <name6>
<name5> の <name4> から <val3> を引いた値番目の <name1> 番目に <name5> の <name4> 番目の <name1> から <name4> を引いた値番目を加えた値を <name5> の <name4> 番目の <name1> 番目にする	<name5> [ <name4> ] [ <name1> ] = <name5> [ <name4> - <val3> ] [ <name1> ] + <name5> [ <name4> ] [ <name1> - <name4> ]	( <name5> [ <name4> ] [ <name1> ] = <name5> [ <name4> - <val3> ] [ <name1> ] + <name5> [ <name4> ] [ <name1> - <name4> ] )
( ( <name4> , <val6> ) 、 ( <name5> , <val6> ) ) からなる辞書を <name3> とする	<name3> = { <name4> : <val6> , <name5> : <val6> }	<name3> = { <name4> : <val6> , <name5> : <val6> }
<name5> ( <name2> , <name4> ( <name3> , <name6> ) ) を <name1> とする	<name1> = <name5> ( <name2> , <name4> ( <name3> , <name6> ) )	<name1> = <name5> ( <name2> , <name4> ( <name3> , <name6> ) )
<name6> から <name2> を引いた値から <name5> を引いた値を <name1> とする	<name1> = <name6> - <name2> - <name5>	<name1> = <name6> - <name2> - <name5>
改行せずに <name4> ( <name3> [ <name1> ] ) . <name2> ( <val6> ) を出力する	print ( <name4> ( <name3> [ <name1> ] ) . <name2> ( <val6> ) , end = '' )	end = <name4> ( <name3> [ <name1> ] ) . <name2> ( <val6> ) , end = '' )
<name2> が <name4> から <val1> を引いた値と等しいとき、	if <name2> == <name4> - <val1> :	if <name2> == <name4> - <val1> :
<name1> の <val5> 番目を <val4> で割った余りを返す	return <name1> [ <val5> ] % <val4>	x return <name1> [ <val5> ] % <val4>
S に <name3> から <val5> を引いた値の文字列を加えた値を返す	return 'S' + str ( <name3> - <val5> )	yield '?' + str ( <name3> - <val5> )
<name2> の先頭を取り出した値を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name2> . pop ( )	<name2> , <name6> , <name1> = <name2> . pop ( )
<name3> の <name1> 番目の末尾に ( <name5> 、 <name6> ( <name4> ) ) の組を追加する	<name3> [ <name1> ] . append ( ( <name5> , <name6> ( <name4> ) ) )	<name3> [ <name1> ] . append ( ( <name5> , <name6> ( <name4> ) ) )
<name5> の <name3> 番目を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name6> 、 <name2> 、 <name1> とする	<name6> , <name2> , <name1> = [ int ( <name4> ) for <name4> in <name5> [ <name3> ] . split ( ) ]	<name2> , <name1> = [ int ( <name4> ) for <name4> in <name5> [ <name3> ] . split ( ) ]
<name3> の <val4> 乗に対する <name1> の剰余を <name3> とする	<name3> = pow ( <name3> , <val4> , <name1> )	<name3> = pow ( <name3> , <val4> , <name1> )
<name2> から <name5> を引いた値、 <name3> から <name2> を引いた値を <name1> 、 <name4> とする	<name1> , <name4> = <name2> - <name5> , <name3> - <name2>	<name1> , <name4> = <name2> - <name5> , <name3> - <name2>
<name5> の <name4> から <val3> を引いた値番目の整数値を <name5> の <name4> に <val3> を加えた値番目の整数値で割った余りが <val2> と等しいとき、	if int ( <name5> [ <name4> - <val3> ] ) % int ( <name5> [ <name4> + <val3> ] ) == <val2> :	> int ( <name5> [ <name4> - <val3> ] ) % int ( <name5> [ <name4> + <val3> ] ) == <val2> :
<val2> を開いたファイルストリームから読み込んだデータを空白で分割した字句列の各要素に整数を適用した列を <name4> とする	<name4> = map ( int , open ( <val2> ) . read ( ) . split ( ) )	<name4> = map ( int , open ( <val2> ) . read ( ) . split ( ) )
<name3> の <name1> 番目の <name4> 番目の <name5> 番目を <val6> だけ増加させる	<name3> [ <name1> ] [ <name4> ] [ <name5> ] += <val6>	<name4> [ <name1> ] [ <name4> ] [ <name5> ] += <val6>
<name4> . <name3> . <name1> . <name6> ( ) のとき、	if <name4> . <name3> . <name1> . <name6> ( ) :	while <name4> . <name3> . <name1> . <name6> ( ) :
<name1> の <name5> に対応する値、もし存在しなければ <val6> を <name4> とする	<name4> = <name1> . <name5> . get ( <val6> )	<name4> = <name1> . <name5> . get ( <val6> )
<name3> ( <name1> , <name4> )	<name3> ( <name1> , <name4> )	( <name3> ( <name1> , <name4> ) )
0 から <name3> 未満までの数列の各要素を <name1> とし、 <name1> の列を <name4> の <name6> にする	<name4> . <name6> = [ <name1> for <name1> in range ( <name3> ) ]	<name3> . <name6> = [ <name1> for <name1> in range ( <name3> ) ]
<val1> が <name6> 以下でないとき、	if not <val1> <= <name6> :	isinstance ( <val1> <= <name6> ) :
<name4> の <name5> に <name6> を掛けた値に <name1> を加えた値に <val3> を掛けた値に <name2> を加えた値番目のとき、	if <name4> [ ( <name5> * <name6> + <name1> ) * <val3> + <name2> ] :	while <name4> [ ( <name5> * <name6> + <name1> ) * <val3> + <name2> ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = sorted ( map ( int , input ( ) . split ( ) ) )	<name1> , <name6> = sorted ( map ( int , input ( ) . split ( ) ) )
<name1> ( <name5> ( <name2> , <name6> ) , <name5> ( <name3> , <name4> ) ) を <name4> とする	<name4> = <name1> ( <name5> ( <name2> , <name6> ) , <name5> ( <name3> , <name4> ) )	<name4> = <name1> ( <name5> ( <name2> , <name6> ) , <name5> ( <name3> , <name4> ) )
<val6> 、 ( <name1> ) からなる列の両端キューを <name4> 、 <name5> とする	<name4> , <name5> = <val6> , deque ( [ <name1> ] )	<name2> , <name5> = deque ( [ <name1> ] )
<name3> に <name1> を掛けた値から <name4> に <name2> を掛けた値を引いた値を返す	return <name3> * <name1> - <name4> * <name2>	self return <name3> * <name1> - <name4> * <name2>
 を間に入れて <name6> ( <name4> [ <name1> ( <name4> . <name5> ( ) ) ] ) の先頭の文字列の各要素を <name3> とし、 <name3> の列を連結した文字列を出力する	print ( ' ' . join ( [ <name3> for <name3> in str ( <name6> ( <name4> [ <name1> ( <name4> . <name5> ( ) ) ] ) [ 0 ] ) ] ) )	<val3> print ( ' . join ( [ <name3> for <name3> in str ( <name6> ( <name4> [ <name1> ( <name4> . <name5> ( ) ) ] ) [ 0 ] ) ] ) )
<name1> の末尾に ( <name4> 、 <name5> 、 <name3> ) の組を追加する	<name1> . append ( ( <name4> , <name5> , <name3> ) )	<name1> . append ( ( <name4> , <name5> , <name3> ) )
<name6> の末尾に ( <name3> 、 <name2> ) の組を追加する	<name6> . append ( ( <name3> , <name2> ) )	<name4> . append ( ( <name3> , <name2> ) )
<name3> から <name2> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> , <name2> ) :	'?' for <name4> in range ( <name3> , <name2> ) :
<val3> から <name1> 未満までの数列の各要素を <name5> とし、 <val3> の列を <name2> とする	<name2> = [ <val3> for <name5> in range ( <name1> ) ]	<name6> = [ <val3> for <name5> in range ( <name1> ) ]
<name3> の <val6> 番目から、つまり末尾までの部分列を順に <name4> として、繰り返す	for <name4> in <name3> [ <val6> : ] :	for <name4> in <name3> [ <val6> : ] :
 を間に入れて <name3> の各要素を <name4> とし、 <name4> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )	print ( ' ' . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )
0 から <name4> に <val2> を加えた値未満までの数列の各要素を <name5> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name5> in range ( <name4> + <val2> ) ]	<name3> = [ [ ] for <name5> in range ( <name4> + <val2> ) ]
入力された文字列内の <val1> を <val4> で置き換えた文字列内の <val3> を <val1> で置き換えた文字列内の <val4> を <val3> で置き換えた文字列を出力する	print ( input ( ) . replace ( <val1> , <val4> ) . replace ( <val3> , <val1> ) . replace ( <val4> , <val3> ) )	print ( input ( ) . replace ( <val1> , <val4> ) . replace ( <val3> , <val1> ) . replace ( <val4> , <val3> ) )
<name2> の <name3> 番目の <val4> 番目が <name2> の <name1> 番目の <val4> 番目より小さいとき、	if <name2> [ <name3> ] [ <val4> ] < <name2> [ <name1> ] [ <val4> ] :	[ if <name2> [ <name3> ] [ <val4> ] < <name2> [ <name1> ] [ <val4> ] :
<name5> ( <name1> , <name6> , <name2> , <name3> ) を <name4> とする	<name4> = <name5> ( <name1> , <name6> , <name2> , <name3> )	<name4> = <name5> ( <name1> , <name6> , <name2> , <name3> )
<name6> ( <name2> , <name1> ) を <name2> で割った値の絶対値を返す	return abs ( <name6> ( <name2> , <name1> ) / <name2> )	yield abs ( <name6> ( <name2> , <name1> ) / <name2> )
<name4> . <name6> ( <name5> = <name2> . <name3> ) を <name4> とする	<name4> = <name4> . <name6> ( <name5> = <name2> . <name3> )	<name6> = <name4> . <name6> ( <name5> = <name2> . <name3> )
<name5> から <val1> を引いた値から -1 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> - <val1> , - 1 , - 1 ) :	continue for <name6> in range ( <name5> - <val1> , - <val1> , - <val1> ) :
<name4> が <name5> と等しいとき、 <blk> <name4> を返す </blk>	if <name4> == <name5> : <blk> return <name4> </blk>	\ return <name4> == <name5> : <blk> return <name4> </blk>
<name3> の <name6> 番目の <name5> 番目に <val2> を加えた値を <name3> の <name4> 番目の <name1> 番目にする	<name3> [ <name4> ] [ <name1> ] = <name3> [ <name6> ] [ <name5> ] + <val2>	<name3> [ <name4> ] [ <name1> ] = <name3> [ <name6> ] [ <name5> ] + <val2>
<name5> の整数値を <name3> の <name6> 番目で割った余りを <name5> とする	<name5> = int ( <name5> ) % <name3> [ <name6> ]	<name5> = int ( <name5> ) % <name3> [ <name6> ]
0 から <name1> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name2> in range ( <name1> ) ]	<name6> = [ [ ] for <name2> in range ( <name1> ) ]
<name1> の <name4> 番目を順に <name3> 、 <name2> として、繰り返す	for <name3> , <name2> in <name1> [ <name4> ] :	. for <name3> , <name2> in <name1> [ <name4> ] :
0 から <name4> 未満までの数列の各要素を <name2> とし、 <val5> の列を <name1> とする	<name1> = [ <val5> for <name2> in range ( <name4> ) ]	<name1> = [ <val5> for <name2> in range ( <name4> ) ]
<name5> の <name6> 番目の <name3> 番目に <name1> を加えた値を <name4> とする	<name4> = <name5> [ <name6> ] [ <name3> ] + <name1>	<name4> = <name5> [ <name6> ] [ <name3> ] + <name1>
<name4> 、 <name2> を <name4> で割った余りを <name2> 、 <name4> とする	<name2> , <name4> = <name4> , <name2> % <name4>	<name2> , <name4> = <name4> , <name2> % <name4>
<name2> の両端から空白改行を取り除いた文字列を <name6> とする	<name6> = <name2> . strip ( )	<name4> = <name2> . strip ( )
<name3> から <val6> を引いた値、 <name1> から <val6> を引いた値を <name3> 、 <name1> とする	<name3> , <name1> = <name3> - <val6> , <name1> - <val6>	<name3> , <name1> = <name3> - <val6> , <name1> - <val6>
<name3> . <name1> ( <name6> , ( <name4> , <name2> ) )	<name3> . <name1> ( <name6> , ( <name4> , <name2> ) )	<name1> . <name1> ( <name6> , ( <name4> , <name2> ) )
<name4> が、つまり未定値と等しくかつ <name3> が、つまり未定値と等しいとき、	if <name4> == None and <name3> == None :	enumerate if <name4> is not None and <name3> is not None :
<name1> . <name2> . <name5> ( ) を <name3> とする	<name3> = <name1> . <name2> . <name5> ( )	<name3> = <name1> . <name2> . <name5> ( )
<name6> に <name3> を掛けた値が <val5> より小さいとき、	if <name6> * <name3> < <val5> :	list ( <name6> * <name3> < <val5> ) :
<val6> を開始番号として <name1> の先頭を除いた部分列に番号付した組の列を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in enumerate ( <name1> [ <val6> : ] , start = <val6> ) :	. for <name3> , <name5> in enumerate ( <name1> [ <val6> : ] , start = <val6> ) :
<name2> の末尾に ( <name3> 、 <name5> ) からなる列を追加する	<name2> . append ( [ <name3> , <name5> ] )	<name1> . append ( [ <name3> , <name5> ] )
<name6> ( <name4> , <name2> ) の . <val3> 乗を <name1> とする	<name1> = <name6> ( <name4> , <name2> ) ** . <val3>	<name1> = <name6> ( <name4> , <name2> ) ** . <val3>
<name6> の <name2> を取り出した値を <name1> とする	<name1> = <name6> . pop ( <name2> )	<name1> = <name6> . pop ( <name2> )
( <name3> の <name6> 、 <val2> ) の組を <name3> の <name4> の <name1> から <val5> を引いた値番目にする	<name3> . <name4> [ <name1> - <val5> ] = ( <name3> . <name6> , <val2> )	<name3> . <name4> [ <name1> - <val5> ] = ( <name3> . <name6> , <val2> )
<name2> ( <name4> ( <name6> ) ) を <name3> とする	<name3> = <name2> ( <name4> ( <name6> ) )	else = <name2> ( <name4> ( <name6> ) )
<name6> を <val2> に <name3> から <val4> を引いた値を掛けた値だけ増加させる	<name6> += <val2> * ( <name3> - <val4> )	<name2> += <val2> * ( <name3> - <val4> )
<val5> に <name2> [ <val3> ] から <name2> [ <val6> ] を引いた値を掛けた値に <val4> に <name2> [ <val1> ] から <name2> [ <val5> ] を引いた値を掛けた値を加えた値に <name2> の <val2> 番目を加えた値から <name2> の <val3> 番目を引いた値を <name1> とする	<name1> = <val5> * ( <name2> [ <val3> ] - <name2> [ <val6> ] ) + <val4> * ( <name2> [ <val1> ] - <name2> [ <val5> ] ) + <name2> [ <val2> ] - <name2> [ <val3> ]	<name3> = <val5> * ( <name2> [ <val3> ] - <name2> [ <val6> ] ) + <val4> * ( <name2> [ <val1> ] - <name2> [ <val5> ] ) + ( <name2> [ <val2> ] - <name2> [ <val3> ] )
<name2> の <name5> の <name3> 番目が <name2> の <name5> の <name4> 番目より大きいとき、	if <name2> . <name5> [ <name3> ] > <name2> . <name5> [ <name4> ] :	for <name2> . <name5> [ <name3> ] > <name2> . <name5> [ <name4> ] :
<name2> の <name1> 番目の <name4> に <val3> を加えた値番目の <name6> 番目を <val3> だけ増加させる	<name2> [ <name1> ] [ <name4> + <val3> ] [ <name6> ] += <val3>	( <name2> [ <name1> ] [ <name4> + <val3> ] [ <name6> ] += <val3> )
<name5> を <val4> に <name1> を掛けた値に <name6> を加えた値だけ増加させる	<name5> += <val4> * <name1> + <name6>	<name6> += <val4> * <name1> + <name6>
<val2> を <name5> とするを <name1> とする	<name1> = <name5> = <val2>	\ <name1> = <name5> = <val2>
<name5> の <name2> 番目、 <name5> の <name3> 番目を <name5> の <name3> 番目、 <name5> の <name2> 番目とする	<name5> [ <name3> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name3> ]	<name5> [ <name3> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name3> ]
<name6> から <name3> を引いた値を <name5> とする	<name5> = <name6> - <name3>	<name2> <name5> = <name6> - <name3>
真を <name5> の <name2> の先頭に <val1> を加えた値番目の <name2> の <val1> 番目番目にする	<name5> [ <name2> [ 0 ] + <val1> ] [ <name2> [ <val1> ] ] = True	else [ <name2> [ 0 ] + <val1> ] [ <name2> [ <val1> ] ] = True
<name6> の <name3> に対応する値、もし存在しなければ <val5> を <name2> とする	<name2> = <name6> . <name3> . get ( <val5> )	<name2> = <name6> . <name3> . get ( <val5> )
<name1> の <name3> 番目が <val4> 以上のとき、	if <name1> [ <name3> ] >= <val4> :	: if <name1> [ <name3> ] >= <val4> :
<name2> の <val5> 番目が <val3> と等しいとき、	if <name2> [ <val5> ] == <val3> :	: if <name2> [ <val5> ] == <val3> :
<name6> の <name5> 番目が <name6> の <name4> 番目より大きいとき、	if <name6> [ <name5> ] > <name6> [ <name4> ] :	> <name6> [ <name5> ] > <name6> [ <name4> ] :
<name4> モジュールを用いる	from <name4> import Decimal , ROUND_HALF_UP , ROUND_HALF_EVEN	return from <name4> import deque
<name3> の <name5> の <name4> の <name1> 番目と等しい要素の最初の位置番目を <name6> とする	<name6> = <name3> [ <name5> . index ( <name4> [ <name1> ] ) ]	<name4> = <name3> [ <name5> . index ( <name4> [ <name1> ] ) ]
<name6> ( <name3> + <val4> , <name5> [ : <name1> ] + <name5> [ <name1> + <val4> : ] ) を一旦、返す	yield <name6> ( <name3> + <val4> , <name5> [ : <name1> ] + <name5> [ <name1> + <val4> : ] )	global <name6> ( <name3> + <val4> , <name5> [ : <name1> ] + <name5> [ <name1> + <val4> : ] )
<name6> の末尾に <name4> を <name1> で割った商を追加する	<name6> . append ( <name4> // <name1> )	<name1> . append ( <name4> // <name1> )
<name1> の <val3> 番目を <name6> に <name4> を掛けた値だけ増加させる	<name1> [ <val3> ] += <name6> * <name4>	( <name1> [ <val3> ] += <name6> * <name4> )
<name3> の <val1> 番目を <name2> の先頭にする	<name2> [ 0 ] = <name3> [ <val1> ]	<name2> [ 0 ] = <name3> [ <val1> ]
<val5> 〜 <name3> から <val5> を引いた値の整数乱数を <name6> とする	<name6> = random . randint ( <val5> , <name3> - <val5> )	<name6> = random . randint ( <val5> , <name3> - <val5> )
<name2> 、 <name5> を <name1> 、 <name6> とする	<name1> , <name6> = <name2> , <name5>	[ <name1> , <name6> = <name2> , <name5>
( <name6> 、 <name1> ) の組が <name5> に含まれるとき、	if ( <name6> , <name1> ) in <name5> :	isinstance ( ( <name6> , <name1> ) in <name5> :
<name1> の <name6> を順に <name4> として、繰り返す	for <name4> in <name1> . <name6> :	: for <name4> in <name1> . <name6> :
<name6> . <name3> ( <name5> + <name1> )	<name6> . <name3> ( <name5> + <name1> )	set ( <name6> . <name3> ( <name5> + <name1> ) )
<name3> の <name2> 番目が <name5> の <name1> 番目以下のとき、	if <name3> [ <name2> ] <= <name5> [ <name1> ] :	if <name3> [ <name2> ] <= <name5> [ <name1> ] :
<name5> が <val6> 以下のとき、	if <name5> <= <val6> :	list ( <name5> <= <val6> ) :
<name3> ( <name5> * <name6> . <name2> , <name5> * <name6> . <name4> ) を返す	return <name3> ( <name5> * <name6> . <name2> , <name5> * <name6> . <name4> )	yield <name3> ( <name5> * <name6> . <name2> , <name5> * <name6> . <name4> )
<name3> が ( <val4> 、 <val6> 、 <val2> ) からなる列に含まれるとき、	if <name3> in [ <val4> , <val6> , <val2> ] :	or <name3> in [ <val4> , <val6> , <val2> ] :
<name6> を <name5> で割った商を <name4> とする	<name4> = <name6> // <name5>	<name4> = <name6> // <name5>
<name5> の <name6> 番目を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name5> [ <name6> ]	( <name2> [ <name1> ] = <name5> [ <name6> ] )
<name4> の <name2> 番目の <name6> 番目から <name1> を引いた値の絶対値が <val3> より大きいとき、	if abs ( <name4> [ <name2> ] [ <name6> ] - <name1> ) > <val3> :	if abs ( <name4> [ <name2> ] [ <name6> ] - <name1> ) > <val3> :
<name4> の <name3> の <name6> 番目を返す	return <name4> . <name3> [ <name6> ]	yield <name4> . <name3> [ <name6> ]
<name6> の <name3> から <name6> の <name1> を引いた値を <name2> とする	<name2> = <name6> . <name3> - <name6> . <name1>	( <name2> = <name6> . <name3> - <name6> . <name1> )
<name1> ( <name2> , <name3> )	<name1> ( <name2> , <name3> )	<name3> <name1> ( <name2> , <name3> )
<val2> に <val1> を掛けた値に <val1> を掛けた値から <name5> を引いた値を <name4> とする	<name4> = <val2> * <val1> * <val1> - <name5>	<name4> = <val2> * <val1> * <val1> - <name5>
<name6> に <name2> を加えた値を <val4> で割った値の切り上げ整数値から <name6> を引いた値を出力する	print ( math . ceil ( ( <name6> + <name2> ) / <val4> ) - <name6> )	print ( math . ceil ( ( <name6> + <name2> ) / <val4> ) - <name6> )
<name4> ( <name3> [ <name6> ] [ <name1> -1 ] , <name3> [ <name5> ] [ <name1> -1 ] ) を返す	return <name4> ( <name3> [ <name6> ] [ <name1> - 1 ] , <name3> [ <name5> ] [ <name1> - 1 ] )	yield <name4> ( <name3> [ <name6> ] [ <name1> - 1 ] , <name3> [ <name5> ] [ <name1> - 1 ] )
<name1> の末尾に ( <name4> に <val5> を加えた値、集合 ) の組を追加する	<name1> . append ( ( <name4> + <val5> , set ( ) ) )	not <name1> . append ( ( <name4> + <val5> , set ( ) ) )
<name5> の長さが <val1> と等しいとき、	if len ( <name5> ) == <val1> :	for <name5> in len ( <name5> ) == <val1> :
<name2> 、 <name1> の ( <name6> 、 <name3> ) の組番目に <name5> ( <name6> | <name3> ) を加えた値の最大値を <name2> とする	<name2> = max ( <name2> , <name1> [ ( <name6> , <name3> ) ] + <name5> ( <name6> | <name3> ) )	<name2> = max ( <name2> , <name1> [ ( <name6> , <name3> ) ] + <name5> ( <name6> | <name3> ) )
<name2> が <name3> より大きくかつ <name3> が <name1> から <name5> から <name2> の . <val4> 乗を引いた値を引いた値より小さいとき、	if <name2> > <name3> and <name3> < <name1> - ( <name5> - <name2> ** . <val4> ) :	isinstance ( <name2> > <name3> and <name3> < <name1> - ( <name5> - <name2> ** . <val4> ) ) :
<name4> から <val5> を引いた値を <name6> とする	<name6> = <name4> - <val5>	( <name6> = <name4> - <val5> )
( <name6> 、 <name3> ) の組が <name1> に含まれないとき、	if ( <name6> , <name3> ) not in <name1> :	list ( ( <name6> , <name3> ) not in <name1> :
<name5> を <val3> で分割した字句列の <val2> 番目を <name4> とする	<name4> = <name5> . split ( <val3> ) [ <val2> ]	<name4> = <name5> . split ( <val3> ) [ <val2> ]
<val2> から <name4> の整数値に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , int ( <name4> ) + <val2> ) :	) for <name6> in range ( <val2> , int ( <name4> ) + <val2> ) :
<name5> に <name6> から <name3> を引いた値の絶対値を掛けた値を <name1> で割った余りを <name5> とする	<name5> = <name5> * abs ( <name6> - <name3> ) % <name1>	<name5> = <name5> * abs ( <name6> - <name3> ) % <name1>
<name4> の先頭の長さを <name2> とする	<name2> = len ( <name4> [ 0 ] )	<name2> = len ( <name4> [ 0 ] )
<name2> から <name5> を引いた値を <val4> に <val4> を掛けた値で割った余りを <val4> で割った商を <name1> とする	<name1> = ( ( <name2> - <name5> ) % ( <val4> * <val4> ) ) // <val4>	<name1> = ( <name2> - <name5> ) % ( <val4> * <val4> ) // <val4>
<name5> を <val6> だけ右シフトする <name2> を <val6> だけ右シフトする	<name5> >> = <val6> <name2> >> = <val6>	<name3> >> = <val6> <name2> >> = <val6>
<val1> が <name3> 以下かどうかが <name6> より小さくなくまたは <val1> が <name4> 以下かどうかが <name6> より小さくないとき、	if not <val1> <= <name3> < <name6> or not <val1> <= <name4> < <name6> :	list ( <val1> <= <name3> < <name6> or not <val1> <= <name4> < <name6> ) :
<name3> に <name6> を加えた値を <val1> で割った商を <name2> とする	<name2> = ( <name3> + <name6> ) // <val1>	<name2> = ( <name3> + <name6> ) // <val1>
<name3> . <name5> ( <name4> ) を出力する	print ( <name3> . <name5> ( <name4> ) )	print ( <name3> . <name5> ( <name4> ) )
<name2> の <val4> 番目が <val5> と等しいとき、 <blk> <name6> ( <name3> ( <name1> [ <val4> ] ) ) </blk>	if <name2> [ <val4> ] == <val5> : <blk> <name6> ( <name3> ( <name1> [ <val4> ] ) ) </blk>	if <name2> [ <val4> ] == <val5> : <blk> <name6> ( <name3> ( <name1> [ <val4> ] ) ) </blk>
<name5> から読み込んだ一行の末尾から空白改行を取り除いた文字列を <name4> とする	<name4> = <name5> . readline ( ) . rstrip ( )	( <name4> = <name5> . readline ( ) . rstrip ( ) )
<name4> の先頭に <name2> を追加した集まり	<name4> [ 0 ] . add ( <name2> )	<name4> [ 0 ] . add ( <name2> )
<name2> に <val5> を加えた値から <name1> の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> + <val5> , len ( <name1> ) ) :	. for <name4> in range ( <name2> + <val5> , len ( <name1> ) ) :
<name3> から <name2> を引いた値を <name4> とする <name5> から <name2> を引いた値を <name6> とする	<name4> = ( <name3> - <name2> ) <name6> = ( <name5> - <name2> )	<name2> = <name3> - <name2> <name6> = <name5> - <name2>
black を出力する	print ( 'black' )	& print ( 'black' )
<name2> の <name1> 番目を展開してを出力する	print ( * <name2> [ <name1> ] )	print ( * <name2> [ <name1> ] )
<name6> . <name2> . <name1> . <name3> ( ) のとき、	if <name6> . <name2> . <name1> . <name3> ( ) :	list ( <name6> . <name2> . <name1> . <name3> ( ) ) :
<name5> の <name6> 番目、 <name5> の <name6> に <val2> を加えた値番目を <name3> 、 <name4> とする	<name3> , <name4> = <name5> [ <name6> ] , <name5> [ <name6> + <val2> ]	<name3> , <name4> = <name5> [ <name6> ] , <name5> [ <name6> + <val2> ]
<val1> から <name6> に <name5> を加えた値に <val1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <name6> + <name5> + <val1> ) :	for <name2> in range ( <val1> , <name6> + <name5> + <val1> ) :
<name3> から <val2> を引いた値に <name6> を加えた値を <name5> とする	<name5> = <name3> - <val2> + <name6>	<name5> = <name3> - <val2> + <name6>
0 から <name2> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name2> ) ]	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <name2> ) ]
0 から <name2> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列を <name1> とする	<name1> = [ int ( input ( ) ) for <name6> in range ( <name2> ) ]	<name6> = [ int ( input ( ) ) for <name6> in range ( <name2> ) ]
<name6> ( <name3> , <name1> , <name5> )	<name6> ( <name3> , <name1> , <name5> )	set ( <name6> ( <name3> , <name1> , <name5> ) )
( <val6> ) からなる列の <name4> に <val2> を加えた値回分の列を <name1> とする	<name1> = [ <val6> ] * ( <name4> + <val2> )	<name1> = [ <val6> ] * ( <name4> + <val2> )
<name5> を <val1> で割った商を <name6> とする	<name6> = <name5> // <val1>	<name6> = <name5> // <val1>
<name4> ( <name1> , <name3> + ( <name2> - <name5> ) / <val6> ) を <name6> とする	<name6> = <name4> ( <name1> , <name3> + ( <name2> - <name5> ) / <val6> )	<name6> = <name4> ( <name1> , <name3> + ( <name2> - <name5> ) / <val6> )
( ( <val2> 、 <val3> ) の組、 ( <val2> 、 -1 ) の組、 ( <val3> 、 -1 ) の組、 ( -1 、 -1 ) の組、 ( -1 、 <val3> ) の組、 ( -1 、 <val2> ) の組、 ( <val3> 、 <val2> ) の組、 ( <val2> 、 <val2> ) の組 ) の組を <name6> とする	<name6> = ( ( <val2> , <val3> ) , ( <val2> , - <val2> ) , ( <val3> , - <val2> ) , ( - <val2> , - <val2> ) , ( - <val2> , <val3> ) , ( - <val2> , <val2> ) , ( <val3> , <val2> ) , ( <val2> , <val2> ) )	<name5> = ( ( <val2> , <val3> ) , ( <val2> , - <val2> ) , ( <val3> , - <val2> ) , ( - <val2> , - <val2> ) , ( - <val2> , <val3> ) , ( <val2> , <val2> ) , ( <val2> , <val2> ) , ( <val2> ) )
<val5> が <name1> に <name4> を加えた値以下かどうかが <name3> より小さくないとき、	if not <val5> <= ( <name1> + <name4> ) < <name3> :	global <val5> <= ( <name1> + <name4> ) < <name3> :
<name4> の <name1> 番目を英小文字に変換した文字列を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name4> [ <name1> ] . lower ( )	<name4> [ <name1> ] = <name4> [ <name1> ] . lower ( )
<name3> の <name2> の <name5> 番目に <name3> の <name4> の <name6> 番目を掛けた値に <name3> の <name4> の <name5> から <name6> を引いた値番目を掛けた値を <name3> の <name1> で割った余りを返す	return <name3> . <name2> [ <name5> ] * <name3> . <name4> [ <name6> ] * <name3> . <name4> [ <name5> - <name6> ] % <name3> . <name1>	x return <name3> . <name2> [ <name5> ] * <name3> . <name4> [ <name6> ] * <name3> . <name4> [ <name5> - <name6> ] % <name3> . <name1>
<name6> の各要素を <name4> とし、 <name1> ( <name5> [ <name4> ] , <name3> [ <name4> ] ) の列の総和を返す	return sum ( [ <name1> ( <name5> [ <name4> ] , <name3> [ <name4> ] ) for <name4> in <name6> ] )	yield sum ( [ <name1> ( <name5> [ <name4> ] , <name3> [ <name4> ] ) for <name4> in <name6> ] )
0 から <name6> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の列を <name2> とする	<name2> = [ input ( ) for <name1> in range ( <name6> ) ]	<name6> = [ input ( ) for <name1> in range ( <name6> ) ]
<name3> が <name2> ( <name1> ) に含まれるかどうか	<name3> in <name2> ( <name1> )	( <name3> in <name2> ( <name1> ) )
( -1 、 <val3> 、 <val4> 、 <val4> 、 -1 、 -1 、 <val3> 、 <val3> ) からなる列を <name1> とする	<name1> = [ - <val3> , <val3> , <val4> , <val4> , - <val3> , - <val3> , <val3> , <val3> ]	<name1> = [ - <val3> , <val3> , <val4> , <val4> , <val4> , - <val4> , <val3> , <val3> , <val3> ]
<name1> の <name4> 番目を <name2> とする <name6> の <name4> 番目を <name5> とする <name2> の <name4> 番目を <name3> とする	<name2> = <name1> [ <name4> ] <name5> = <name6> [ <name4> ] <name3> = <name2> [ <name4> ]	<name5> = <name1> [ <name4> ] <name5> = <name6> [ <name4> ] <name3> = <name2> [ <name4> ]
<val2> 、 <val2> を <name1> 、 <name6> とする	<name1> , <name6> = <val2> , <val2>	<name1> , <name6> = <val2> , <val2>
<name1> の <name4> 番目を <name2> に <val5> を加えた値だけ増加させる	<name1> [ <name4> ] += <name2> + <val5>	<name4> [ <name4> ] += <name2> + <val5>
<name3> から <val1> を引いた値から <name2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> - <val1> , <name2> ) :	) : for <name5> in range ( <name3> - <val1> , <name2> ) :
0 から <name3> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name4> の <name1> にする	<name4> . <name1> = [ [ ] for <name2> in range ( <name3> ) ]	) . <name1> = [ [ ] for <name2> in range ( <name3> ) ]
0 から <name2> 未満までの数列の各要素を <name5> とし、 <name6> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name1> とする	<name1> = [ list ( map ( int , <name6> . readline ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]	<name6> = [ list ( map ( int , <name6> . readline ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]
<name2> の <name3> 番目の <name5> 番目を返す	return <name2> [ <name3> ] [ <name5> ]	yield <name2> [ <name3> ] [ <name5> ]
<name4> の <name2> を <name6> とする	<name6> = <name4> . <name2>	<name2> = <name4> . <name2>
( <name4> の <name5> ) からなる列を <name1> とする	<name1> = [ <name4> . <name5> ]	<name1> = [ <name4> . <name5> ]
0 から <name3> に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> + <val2> ) :	for <name4> in range ( <name3> + <val2> ) :
<name6> から <name6> を引いた値の <name1> を <name5> とする	<name5> = ( <name6> ( y , m , d ) - <name6> ( 1868 , 9 , 8 ) ) . <name1>	else = ( <name6> - <name6> ) . <name1>
<name3> 、 <name1> の要素をそれぞれ組にした列の各要素を <name5> 、 <name2> とし、 <name6> に <name5> を掛けた値を <name2> で割った商の列を <name4> とする	<name4> = [ <name6> * <name5> // <name2> for <name5> , <name2> in zip ( <name3> , <name1> ) ]	<name4> = [ <name6> * <name5> // <name2> for <name5> , <name2> in zip ( <name3> , <name1> ) ]
<name2> を <val3> で割った余りのとき <name5> を <val6> で割った値、そうでなければ <name5> に <val3> を掛けた値を <name5> とする	<name5> = <name5> / <val6> if <name2> % <val3> else <name5> * <val3>	<name5> = <name5> / <val6> if <name2> % <val3> else <name5> * <val3>
<name4> の <name6> の <name3> に <val5> を加えた値番目から <val5> を引いた値番目を <val1> だけ増加させる	<name4> [ <name6> [ <name3> + <val5> ] - <val5> ] += <val1>	<name4> . <name6> [ <name3> + <val5> ] - <val5> ] += <val1>
<name4> を反転した列を順に <name3> として、繰り返す	for <name3> in reversed ( <name4> ) :	for <name3> in reversed ( <name4> ) :
<name2> . <name4> . <name1> ( <name3> , <val6> )	<name2> . <name4> . <name1> ( <name3> , <val6> )	<name4> . <name1> ( <name3> , <val6> )
. を <name6> の <name4> 番目の <name1> 番目にする	<name6> [ <name4> ] [ <name1> ] = '.'	( <name6> [ <name4> ] [ <name1> ] = '.' )
<name5> . <name2> . <name4> ( ) かつ <name5> . <name1> . <name4> ( ) でないとき、	if <name5> . <name2> . <name4> ( ) and not <name5> . <name1> . <name4> ( ) :	isinstance ( <name5> . <name2> . <name4> ( ) and not <name5> . <name1> . <name4> ( ) ) :
<name4> が <name3> より小さいかどうかが <name5> 以下のとき、	if <name4> < <name3> <= <name5> :	list if <name4> < <name3> <= <name5> :
<name6> を <name5> の <name2> の <name6> 番目番目にする	<name5> [ <name2> [ <name6> ] ] = <name6>	<name4> [ <name2> [ <name6> ] ] = <name6>
<name6> が <name2> の <name5> 番目の先頭と等しくないとき、	if <name6> != <name2> [ <name5> ] [ 0 ] :	if <name6> != <name2> [ <name5> ] [ 0 ] :
<name5> の <name2> を <name5> の <name4> にする	<name5> . <name4> = <name5> . <name2>	<name1> . <name4> = <name5> . <name2>
<name5> の先頭に <val6> を掛けた値を返す	return <name5> [ 0 ] * <val6>	x return <name5> [ 0 ] * <val6>
<name3> に <name1> を掛けた値に <name5> に <name2> を掛けた値を加えた値に <val4> を掛けた値を <name6> とする	<name6> = ( <name3> * <name1> + <name5> * <name2> ) * <val4>	<name6> = ( <name3> * <name1> + <name5> * <name2> ) * <val4>
<name2> に <name2> を掛けた値から <name1> 未満までの <name2> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> * <name2> , <name1> , <name2> ) :	( for <name5> in range ( <name2> * <name2> , <name1> , <name2> ) :
0 から <name2> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> + <val6> ) :	for <name5> in range ( <name2> + <val6> ) :
<name2> の <val4> 番目かつ <name3> ( <name2> ) のとき、	if <name2> [ <val4> ] and <name3> ( <name2> ) :	continue <name2> [ <val4> ] and <name3> ( <name2> ) :
<name3> の <name4> かつ <name3> . <name4> . <name2> ( ) が <val6> と等しいとき、	if <name3> . <name4> and <name3> . <name4> . <name2> ( ) == <val6> :	list ( <name3> . <name4> and <name3> . <name4> . <name2> ( ) == <val6> :
<name6> が <name5> 以下かどうかが <name1> より小さいとき、	if <name6> <= <name5> < <name1> :	: if <name6> <= <name5> < <name1> :
<name3> の <val1> 番目を <name5> の <val2> 番目とするを <name6> とする	<name6> = <name5> [ <val2> ] = <name3> [ <val1> ]	<name2> = <name5> [ <val2> ] = <name3> [ <val1> ]
<name2> の <name4> 番目、 <name2> の <name3> 番目、 <name2> の <name5> 番目を <name5> 、 <name6> 、 <name1> とする	<name5> , <name6> , <name1> = <name2> [ <name4> ] , <name2> [ <name3> ] , <name2> [ <name5> ]	<name5> , <name6> , <name1> = <name2> [ <name4> ] , <name2> [ <name3> ] , <name2> [ <name5> ]
<name4> が、つまり空列と等しくなくかつ <name4> の末尾の <val5> 番目が <name6> 以上の間、次を繰り返す	while <name4> != [ ] and <name4> [ - 1 ] [ <val5> ] >= <name6> :	del <name4> != [ ] and <name4> [ - 1 ] [ <val5> ] >= <name6> :
<name6> . <name5> ( <name2> . <name1> ) を返す	return <name6> . <name5> ( <name2> . <name1> )	yield <name6> . <name5> ( <name2> . <name1> )
入力された文字列を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name2> とする	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]
( <val3> 、 <val2> 、 <val1> 、 <val6> 、 <val5> ) からなる列を <name4> とする	<name4> = [ <val3> , <val2> , <val1> , <val6> , <val5> ]	<name4> = [ <val3> , <val2> , <val1> , <val6> , <val5> ]
<name2> を順に <name6> 、 <name4> として、繰り返す	for <name6> , <name4> in <name2> :	. for <name6> , <name4> in <name2> :
<val6> 、 <val6> 、 <val6> を <name3> 、 <name4> 、 <name5> とする	<name3> , <name4> , <name5> = <val6> , <val6> , <val6>	else , <name3> , <name4> , <name5> = <val6> , <val6> , <val6>
<name3> の長さに <val1> を加えた値を <name5> とする	<name5> = len ( <name3> ) + <val1>	<name5> = len ( <name3> ) + <val1>
<name6> が <val2> と等しくないとき、 <blk> <name5> の末尾に <name6> を追加する </blk>	if <name6> != <val2> : <blk> <name5> . append ( <name6> ) </blk>	\ <name6> != <val2> : <blk> <name5> . append ( <name6> ) </blk>
<name3> の各要素を <name4> とし、 <name4> が <name1> に含まれるときの <val5> の列の総和から <name2> を引いた値を <name6> とする	<name6> = sum ( [ <val5> for <name4> in <name3> if <name4> in <name1> ] ) - <name2>	<name6> = sum ( [ <val5> for <name4> in <name3> if <name4> in <name1> ] ) - <name2>
<name6> が <val5> と等しくかつ <name1> が <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <val5> and <name1> == <val5> : <blk> break </blk>	list ( <name6> == <val5> and <name1> == <val5> ) : <blk> break </blk>
<name6> の <name2> 番目、 <name6> の <name5> 番目、 <name6> の <name3> 番目を <name3> 、 <name4> 、 <name1> とする	<name3> , <name4> , <name1> = <name6> [ <name2> ] , <name6> [ <name5> ] , <name6> [ <name3> ]	<name3> , <name4> , <name1> = <name6> [ <name2> ] , <name6> [ <name5> ] , <name6> [ <name3> ]
END_OF_TEXT が <name4> に含まれるとき、	if 'END_OF_TEXT' in <name4> :	list in 'l' in <name4> :
<name5> の各要素に整数を適用した列を順に <name4> として、繰り返す	for <name4> in map ( int , <name5> ) :	for <name4> in map ( int , <name5> ) :
<name6> を <val5> で割った余りを <val1> で割った商を <name2> とする	<name2> = <name6> % <val5> // <val1>	<name2> = ( <name6> % <val5> ) // <val1>
<name4> を <name1> の <val6> 番目にする	<name1> [ <val6> ] = <name4>	( <name1> [ <val6> ] = <name4> )
入力された文字列の両端から空白改行を取り除いた文字列の文字列を <name6> とする	<name6> = str ( input ( ) . strip ( ) )	<name6> = str ( input ( ) . strip ( ) )
<name2> の末尾に <name4> の <val5> 番目を追加する	<name2> . append ( <name4> [ <val5> ] )	<name2> . append ( <name4> [ <val5> ] )
<name4> が <name2> に <val5> を加えた値より小さいとき <name1> の <name4> 番目、そうでなければ <name1> の <name4> 番目から <name3> から <name6> を引いた値を引いた値が <name1> から <name3> を引いた値より小さいとき、	if ( <name1> [ <name4> ] if <name4> < <name2> + <val5> else <name1> [ <name4> ] - ( <name3> - <name6> ) ) < <name1> - <name3> :	isinstance ( <name1> [ <name4> ] if <name4> < <name2> + <val5> else <name1> [ <name4> ] - <name3> - <name6> < <name1> - <name3> ) :
<name6> が <val2> と等しくないとき、	if ( <name6> != <val2> ) :	raise <name6> != <val2> :
<name3> が <val2> と等しいとき、	if ( <name3> == <val2> ) :	: if <name3> == <val2> :
<name4> の <name3> 番目が <name4> の <name5> 番目より小さいとき、	if <name4> [ <name3> ] < <name4> [ <name5> ] :	if <name4> [ <name3> ] < <name4> [ <name5> ] :
<val6> 、 <val1> を <name4> 、 <name3> とする	<name4> , <name3> = <val6> , <val1>	( <name4> , <name3> = <val6> , <val1> )
0 から <name3> に <val1> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> + <val1> ) :	for <name6> in range ( <name3> + <val1> ) :
<name6> が <name1> と等しいかどうかが <name4> と等しいかどうかが -1 と等しいとき、	if <name6> == <name1> == <name4> == - 1 :	list <name6> == <name1> == <name4> == - 1 :
<name3> の <val6> に <name1> を掛けた値番目が <val5> と等しくなくまたは <name3> の <val6> に <name1> を掛けた値に <val4> を加えた値番目が <val2> と等しくないとき、	if <name3> [ <val6> * <name1> ] != <val5> or <name3> [ <val6> * <name1> + <val4> ] != <val2> :	for <name3> in <name3> [ <val6> * <name1> ] != <val5> or <name3> [ <val6> * <name1> + <val4> ] != <val2> :
入力された文字列の整数値に <val1> を掛けた値を <name5> とする	<name5> = int ( input ( ) ) * <val1>	<name5> = int ( input ( ) ) * <val1>
<name2> の <name4> 番目の末尾に ( <name3> 、 <name1> 、 <name5> 、 <name2> の <name3> 番目の長さ ) からなる列を追加する	<name2> [ <name4> ] . append ( [ <name3> , <name1> , <name5> , len ( <name2> [ <name3> ] ) ] )	<name2> [ <name4> ] . append ( [ <name3> , <name1> , <name5> , len ( <name2> [ <name3> ] ) ] )
<name5> の整数値から <val1> を引いた値を <name5> とする	<name5> = int ( <name5> ) - <val1>	<name5> = int ( <name5> ) - <val1>
<name5> 、 <name3> を <name5> で割った余りを <name3> 、 <name5> とする	<name3> , <name5> = <name5> , <name3> % <name5>	<name3> , <name5> = <name5> , <name3> % <name5>
<name2> の <name6> 番目を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name2> [ <name6> ]	not <name1> [ <name6> ] = <name2> [ <name6> ]
<val6> の <val3> 乗を <name5> とする	<name5> = <val6> ** <val3>	<name5> = <val6> ** <val3>
( -1 、 -1 ) の組を返す	return ( - 1 , - 1 )	yield ( - 1 , - 1 )
<name1> の <name4> 番目が <name1> の <name4> から <val5> を引いた値番目と等しくないとき、	if <name1> [ <name4> ] != <name1> [ <name4> - <val5> ] :	for if <name1> [ <name4> ] != <name1> [ <name4> - <val5> ] :
( ( <val4> , <val2> ) 、 ( <val6> , <val3> ) 、 ( <val1> , <val5> ) ) からなる辞書の <name4> 番目の <name2> 番目を <name5> とする	<name5> = { <val4> : <val2> , <val6> : <val3> , <val1> : <val5> } [ <name4> ] [ <name2> ]	<name5> = { <val4> : <val2> , <val6> : <val3> , <val1> : <val5> } [ <name4> ] [ <name2> ]
<val6> から <val5> 未満までの数列を順に <name4> として、繰り返す <blk> <name2> の <name4> から <val1> を引いた値番目に <name2> の <name4> から <val6> を引いた値番目を加えた値を <val5> で割った余りを <name2> の <name4> 番目にする </blk>	for <name4> in range ( <val6> , <val5> ) : <blk> <name2> [ <name4> ] = ( <name2> [ <name4> - <val1> ] + <name2> [ <name4> - <val6> ] ) % <val5> </blk>	\ <name2> [ <name4> ] = ( <val6> , <val5> ) : <blk> <name2> [ <name4> ] = ( <name2> [ <name4> - <val1> ] + <name2> [ <name4> - <val6> ] ) % <val5> </blk>
<name4> の <val3> 番目が <name6> の <val3> 番目より小さいとき、	if <name4> [ <val3> ] < <name6> [ <val3> ] :	raise <name4> [ <val3> ] < <name6> [ <val3> ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name6> 、 <name5> 、 <name1> 、 <name4> 、 <name3> とする	<name2> , <name6> , <name5> , <name1> , <name4> , <name3> = map ( int , input ( ) . split ( ) )	<name3> , <name6> , <name5> , <name1> , <name4> , <name3> = map ( int , input ( ) . split ( ) )
<name2> をパラメータとして <name2> の <val4> 番目を <name2> の <val6> 番目で割った値を返す関数を <name1> として逆順に <name3> をソートする	<name3> . sort ( <name1> = lambda <name2> : <name2> [ <val4> ] / <name2> [ <val6> ] , reverse = True )	<name3> . sort ( <name1> = lambda <name2> : <name2> [ <val4> ] / <name2> [ <val6> ] , reverse = True )
<name1> の <name2> 番目から、つまり末尾までの部分列を <name6> とする	<name6> = <name1> [ <name2> : ]	<name4> = <name1> [ <name2> : ]
<name3> の <name4> 番目を <val5> に <name1> を掛けた値だけ増加させる	<name3> [ <name4> ] += <val5> * <name1>	<name3> [ <name4> ] += <val5> * <name1>
( -1 ) からなる列の <name1> の <name6> 回分の列を <name3> とする	<name3> = [ - 1 ] * <name1> . <name6>	<name3> = [ - 1 ] * <name1> . <name6>
<name1> . <name6> ( <name3> ) を <name3> とする	<name3> = <name1> . <name6> ( <name3> )	<name3> = <name1> . <name6> ( <name3> )
<name1> を <val4> で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( str , <name1> . split ( <val4> ) ) )	<name1> = list ( map ( int , <name1> . split ( <val4> ) ) )
<val5> を間に入れて 0 から <name6> の長さを <val4> で割った商未満までの数列の各要素を <name2> とし、 <name1> の <name6> の <val4> に <name2> を掛けた値から <val4> * <name2> に <val4> を加えた値までの部分列番目の列を連結した文字列を返す	return <val5> . join ( [ <name1> [ <name6> [ <val4> * <name2> : <val4> * <name2> + <val4> ] ] for <name2> in range ( len ( <name6> ) // <val4> ) ] )	<val1> return <val5> . join ( [ <name1> [ <name6> [ <val4> * <name2> : <val4> * <name2> + <val4> ] ] for <name2> in range ( len ( <name6> ) // <val4> ) ] )
<name5> の <name6> 番目の <name2> が <name4> の <name2> と等しいとき、	if <name5> [ <name6> ] . <name2> == <name4> . <name2> :	list if <name5> [ <name6> ] . <name2> == <name4> . <name2> :
<name6> を <val3> で割った値の切り上げ整数値に <name4> を掛けた値を <name2> とする	<name2> = math . ceil ( <name6> / <val3> ) * <name4>	<name2> = math . ceil ( <name6> / <val3> ) * <name4>
<name1> の <name5> の <val3> 番目番目を <val3> だけ増加させる	<name1> [ <name5> [ <val3> ] ] += <val3>	<name2> [ <name1> [ <name5> [ <val3> ] ] += <val3>
<name3> ( ) . <name2> ( <name6> . <name5> , <name6> . <name1> )	<name3> ( ) . <name2> ( <name6> . <name5> , <name6> . <name1> )	( <name3> ( ) . <name2> ( <name6> . <name5> , <name6> . <name1> ) )
<name3> の整数値が <name1> の整数値と等しいとき、	if int ( <name3> ) == int ( <name1> ) :	continue int ( <name3> ) == int ( <name1> ) :
0 から <name6> 未満までの数列のリストを <name4> とする	<name4> = list ( range ( <name6> ) )	<name4> = list ( range ( <name6> ) )
<name4> . <name6> ( <name5> , <name2> , <name3> , <name1> ) を <name1> とする	<name1> = <name4> . <name6> ( <name5> , <name2> , <name3> , <name1> )	<name1> = <name4> . <name6> ( <name5> , <name2> , <name3> , <name1> )
<name6> に <name1> を加えた値を <val2> で割った値を <name3> とする	<name3> = ( <name6> + <name1> ) / <val2>	<name3> = ( <name6> + <name1> ) / <val2>
<name5> の <name6> 番目の長さが <val3> より大きいとき、	if len ( <name5> [ <name6> ] ) > <val3> :	> len ( <name5> [ <name6> ] ) > <val3> :
<name2> . <name4> ( <name6> ) を <name3> とする	<name3> = <name2> . <name4> ( <name6> )	<name3> = <name2> . <name4> ( <name6> )
<name2> から <name1> を引いた値が <val5> より小さいとき、 <blk> <val5> を返す </blk>	if <name2> - <name1> < <val5> : <blk> return <val5> </blk>	\ if <name2> - <name1> < <val5> : <blk> return <val5> </blk>
( <val2> ) からなる列の <name5> に <val1> を加えた値回分の列を <name3> の <name6> にする	<name3> . <name6> = [ <val2> ] * ( <name5> + <val1> )	<name3> . <name6> = [ <val2> ] * ( <name5> + <val1> )
<name4> から <name3> を引いた値に <name6> を掛けた値から <name5> から <name2> を引いた値に <name1> を掛けた値を引いた値を <name1> とする	<name1> = ( <name4> - <name3> ) * <name6> - ( <name5> - <name2> ) * <name1>	<name1> = ( <name4> - <name3> ) * <name6> - ( <name5> - <name2> ) * <name1>
<name4> の <val6> 乗から <name2> から <name1> を引いた値の <val6> 乗を引いた値から <name3> から <name5> を引いた値の <val6> 乗を引いた値を <name5> とする	<name5> = <name4> ** <val6> - ( <name2> - <name1> ) ** <val6> - ( <name3> - <name5> ) ** <val6>	<name5> = <name4> ** <val6> - ( <name2> - <name1> ) ** <val6> - ( <name3> - <name5> ) ** <val6>
<name1> ( <name4> , <name3> + <val5> )	<name1> ( <name4> , <name3> + <val5> )	<name4> ( <name4> , <name3> + <val5> )
<name3> に <name3> から <name2> を引いた値を掛けた値に <name3> から <name4> を引いた値を掛けた値に <name3> から <name5> を引いた値を掛けた値の平方根を返す	return sqrt ( <name3> * ( <name3> - <name2> ) * ( <name3> - <name4> ) * ( <name3> - <name5> ) )	assert sqrt ( <name3> * ( <name3> - <name2> ) * ( <name3> - <name4> ) * ( <name3> - <name5> ) )
<name2> が <name3> と等しくないとき、	if <name2> is <name3> :	: if <name2> != <name3> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を <name3> とする	<name3> = map ( int , input ( ) . split ( ) )	<name3> = map ( int , input ( ) . split ( ) )
<name1> の最小値を <name5> とする	<name5> = min ( <name1> )	<name5> = min ( <name1> )
<val4> を <name1> の先頭にする	<name1> [ <val4> ] = <val4>	( <name1> [ <val4> ] = <val4> )
<name5> の <name4> を <name6> の、つまり先頭から、つまり末尾までの部分列にする	<name6> [ : ] = <name5> . <name4>	<name1> [ : ] = <name5> . <name4>
0 から <val2> 未満までの数列の各要素を <name5> とし、 <name5> の列を <name6> の <name1> にする	<name6> . <name1> = [ <name5> for <name5> in range ( <val2> ) ]	<name6> . <name1> = [ <name5> for <name5> in range ( <val2> ) ]
<val3> から <val3> を <name1> だけ左シフトした値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val3> , ( <val3> << <name1> ) ) :	try : for <name5> in range ( <val3> , ( <val3> << <name1> ) ) :
<name3> を <name1> 分の一にする <name4> を <name1> 分の一にする	<name3> // = <name1> <name4> // = <name1>	<name3> // = <name1> <name4> // = <name1>
<val2> を <name4> の <name3> 番目の <val2> 番目にする	<name4> [ <name3> ] [ <val2> ] = <val2>	( <name4> [ <name3> ] [ <val2> ] = <val2> )
<name2> 、 <name6> の <name3> に <name4> を加えた値番目の最大値を <name2> とする	<name2> = max ( <name2> , <name6> [ <name3> + <name4> ] )	<name2> = max ( <name2> , <name6> [ <name3> + <name4> ] )
<name2> に <name5> の <name1> に <val6> を加えた値番目の <val3> 番目を加えた値から <name4> を引いた値を <name4> とする	<name4> = <name2> + <name5> [ <name1> + <val6> ] [ <val3> ] - <name4>	<name4> = <name2> + <name5> [ <name1> + <val6> ] [ <val3> ] - <name4>
<name3> が <name2> の長さより小さいとき、	if <name3> < len ( <name2> ) :	while <name3> < len ( <name2> ) :
<name2> の <val1> 番目から <name3> の <val1> 番目を引いた値を <name5> とする	<name5> = <name2> [ <val1> ] - <name3> [ <val1> ]	<name5> = <name2> [ <val1> ] - <name3> [ <val1> ]
<name2> の <name3> 番目の <name4> 番目が <name1> と等しくないとき、	if <name2> [ <name3> ] [ <name4> ] != <name1> :	raise <name2> [ <name3> ] [ <name4> ] != <name1> :
<name1> が <name6> に含まれないとき、	if <name1> not in <name6> :	while <name1> not in <name6> :
<name4> が <name5> に含まれるとき、	if <name4> in <name5> :	list in <name4> in <name5> :
<name1> が <val6> と等しくかつ <name4> が <val6> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <val6> and <name4> == <val6> : <blk> break </blk>	\ if <name1> == <val6> and <name4> == <val6> : <blk> break </blk>
( ( <val6> 、 <val4> ) の組、 ( <val4> 、 -1 ) の組、 ( -1 、 <val4> ) の組、 ( <val4> 、 <val6> ) の組 ) の組を <name3> とする	<name3> = ( ( <val6> , <val4> ) , ( <val4> , - <val6> ) , ( - <val6> , <val4> ) , ( <val4> , <val6> ) )	<name3> = ( ( <val6> , <val4> ) , ( <val4> , - <val6> ) , ( - <val6> , <val4> ) , ( <val4> , <val6> ) )
<name4> の <name1> 番目の <name6> が -1 と等しくないとき、	if <name4> [ <name1> ] . <name6> != - 1 :	for if <name4> [ <name1> ] . <name6> != - 1 :
<name2> 、 <name6> ( <name5> [ <name3> ] , <name5> [ <name1> ] ) の最小値を <name2> とする	<name2> = min ( <name2> , <name6> ( <name5> [ <name3> ] , <name5> [ <name1> ] ) )	<val5> <name2> = min ( <name2> , <name6> ( <name5> [ <name3> ] , <name5> [ <name1> ] ) )
<name1> ( <name6> , <val2> ) を <name5> とする	<name5> = <name1> ( <name6> , <val2> )	else = <name1> ( <name6> , <val2> )
<name3> が、つまり未定値と等しくかつ <name6> から <name5> を引いた値が <name3> より小さいかどうかが <name1> に <name5> を加えた値より小さいとき、	if <name3> is not None and <name6> - <name5> < <name3> < <name1> + <name5> :	> if <name3> is not None and <name6> - <name5> < <name3> < <name1> + <name5> :
<name4> ( <name6> . <name1> + <name3> . <name1> , <name6> . <name2> + <name3> . <name2> ) を返す	return <name4> ( <name6> . <name1> + <name3> . <name1> , <name6> . <name2> + <name3> . <name2> )	return <name4> ( <name6> . <name1> + <name3> . <name1> , <name6> . <name2> + <name3> . <name2> )
<name1> ( <name5> , <name5> )	<name1> ( <name5> , <name5> )	<name4> ( <name5> , <name5> )
<name3> ( <name2> ) を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name3> ( <name2> )	<name3> , <name1> = <name3> ( <name2> )
<name3> の <name4> を <val2> で割った商番目を <val6> だけ増加させる	<name3> [ <name4> // <val2> ] += <val6>	( <name3> [ <name4> // <val2> ] ) += <val6>
<name6> ( <name4> ( ) , <name4> ( ) ) を出力する	print ( <name6> ( <name4> ( ) , <name4> ( ) ) )	print ( <name6> ( <name4> ( ) , <name4> ( ) ) )
<name5> の正弦に <name2> を掛けた値に <name5> の余弦に <name1> を掛けた値を加えた値を <name6> とする	<name6> = sin ( <name5> ) * <name2> + cos ( <name5> ) * <name1>	<name6> = math . sin ( <name5> ) * <name2> + math . cos ( <name5> ) * <name1>
<name4> の <name5> を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name4> . <name5>	<name2> , <name6> , <name2> = <name4> . <name5>
<name2> . <name6> ( <name1> , <name3> ) を返す	return <name2> . <name6> ( <name1> , <name3> )	yield <name2> . <name6> ( <name1> , <name3> )
<name6> の <name3> の y 座標から <name6> の <name4> の y 座標を引いた値を <name6> の <name3> の x 座標から <name6> の <name4> の x 座標を引いた値で割った値を <name6> の <name2> にする	<name6> . <name2> = ( <name6> . <name3> . y - <name6> . <name4> . y ) / ( <name6> . <name3> . x - <name6> . <name4> . x )	<name6> . <name2> = ( <name6> . <name3> . y - <name6> . <name4> . y ) / ( <name6> . <name3> . <name4> . x )
<name5> の <name1> の <name4> に <val2> を加えた値番目に <name4> に <val2> を加えた値を掛けた値を <name6> で割った余りを <name5> の <name1> の <name4> 番目にする	<name5> . <name1> [ <name4> ] = <name5> . <name1> [ <name4> + <val2> ] * ( <name4> + <val2> ) % <name6>	<name5> . <name1> [ <name4> ] = <name5> . <name1> [ <name4> + <val2> ] * ( <name4> + <val2> ) % <name6>
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = input ( ) . strip ( ) . split ( )	<name4> , <name6> = input ( ) . strip ( ) . split ( )
<name3> の <name1> 番目に <name5> の <val4> 番目を加えた値を <name3> の <name5> の先頭番目にする	<name3> [ <name5> [ 0 ] ] = <name3> [ <name1> ] + <name5> [ <val4> ]	<name3> [ <name5> [ 0 ] ] = <name3> [ <name1> ] + <name5> [ <val4> ]
<name4> に <name5> を加えた値を <name6> とする <name1> に <name3> を加えた値を <name2> とする	<name6> = <name4> + <name5> <name2> = <name1> + <name3>	<name2> = <name4> + <name5> <name2> = <name1> + <name3>
文字コード <val1> の順序数に <name4> を加えた値の文字の文字列を <name3> とする	<name3> = str ( chr ( ord ( <val1> ) + <name4> ) )	else = chr ( ord ( <val1> ) + <name4> )
<name6> のキーと値の集まりをソートした列を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in sorted ( <name6> . items ( ) ) :	. for <name4> , <name5> in sorted ( <name6> . items ( ) ) :
0 から <name4> 未満までの数列の各要素を <name2> とし、 [ MASK ] の両端キューの列を <name6> とする	<name6> = [ deque ( ) for <name2> in range ( <name4> ) ]	<name6> = [ deque ( ) for <name2> in range ( <name4> ) ]
<name4> ( <name3> [ <val6> ] , <name3> [ <val2> ] ) を <name1> の <name3> にする	<name1> . <name3> = <name4> ( <name3> [ <val6> ] , <name3> [ <val2> ] )	<name2> . <name1> . <name3> = <name4> ( <name3> [ <val6> ] , <name3> [ <val2> ] )
0 から <name2> 未満までの数列の各要素を <name6> とし、 <name6> の列を <name4> とする	<name4> = [ <name6> for <name6> in range ( <name2> ) ]	<name3> = [ <name6> for <name6> in range ( <name2> ) ]
<name3> の文字列に <val4> を間に入れて <name5> を連結した文字列を加えた値を <name1> とする	<name1> = str ( <name3> ) + <val4> . join ( <name5> )	<name1> = str ( <name3> ) + <val4> . join ( <name5> )
<name5> の絶対値を <name4> の絶対値で割った商を <name1> とする	<name1> = abs ( <name5> ) // abs ( <name4> )	<name1> = abs ( <name5> ) // abs ( <name4> )
<name2> . <name4> ( <name1> ( <name5> , <name3> ) ) を出力する	print ( <name2> . <name4> ( <name1> ( <name5> , <name3> ) ) )	<val3> print ( <name2> . <name4> ( <name1> ( <name5> , <name3> ) ) )
<name4> から <name5> を引いた値から <val6> を引いた値を出力する	print ( <name4> - <name5> - <val6> )	print ( <name4> - <name5> - <val6> )
<name6> が <val2> 以上かつ <name3> ( <val1> , [ <val1> ] * <name6> , [ <val1> ] * <name5> , [ -1 ] * <val4> ) のとき、	if <name6> >= <val2> and <name3> ( <val1> , [ <val1> ] * <name6> , [ <val1> ] * <name5> , [ - 1 ] * <val4> ) :	> <name6> >= <val2> and <name3> ( <val1> , [ <val1> ] * <name6> , [ <val1> ] * <name5> , [ - <val2> ] * <val4> ) :
<name4> に <val2> を掛けた値に <name1> に <val6> を掛けた値を加えた値に <name3> を加えた値を <name5> とする	<name5> = <name4> * <val2> + <name1> * <val6> + <name3>	else = <name4> * <val2> + <name1> * <val6> + <name3>
<name2> . <name6> ( <name2> . <name4> ) を <name2> の <name4> にする	<name2> . <name4> = <name2> . <name6> ( <name2> . <name4> )	dict . <name4> = <name2> . <name6> ( <name2> . <name4> )
( ( <val4> ) からなる列の <val4> から <name5> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <name1> に <val6> を加えた値の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val4> ] * [ ( <name1> + <val6> ) for <name2> in range ( <name5> + <val6> ) ] ]	<name3> = [ [ <val4> ] * [ ( <name1> + <val6> ) for <name2> in range ( <name5> + <val6> ) ] ]
<name6> が <name3> 以下かどうかが <name2> 以下のとき、	if <name6> <= <name3> <= <name2> :	<= if <name6> <= <name3> <= <name2> :
<name2> の <val6> 番目の整数値を <name2> の <val6> 番目にする	<name2> [ <val6> ] = int ( <name2> [ <val6> ] )	<name2> [ <val6> ] = int ( <name2> [ <val6> ] )
<name1> を <name2> . <name3> ( <name4> , <name6> , <name5> , <name1> ) だけ増加させる	<name1> += <name2> . <name3> ( <name4> , <name6> , <name5> , <name1> )	<name2> += <name2> . <name3> ( <name4> , <name6> , <name5> , <name1> )
<name3> モジュールを用いる	from <name3> import floor , ceil , log	from <name3> import combinations
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> 、 <name6> 、 <name1> 、 <name3> とする	<name5> , <name2> , <name6> , <name1> , <name3> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name1> , <name3> = map ( int , input ( ) . split ( ) )
<val1> を <name6> の <name5> 番目の <name3> 番目とするを <name2> の <name5> 番目の <name3> 番目にする	<name2> [ <name5> ] [ <name3> ] = <name6> [ <name5> ] [ <name3> ] = <val1>	else [ <name5> ] [ <name3> ] = <name6> [ <name5> ] [ <name3> ] = <val1>
<name5> の <name6> に <name2> を加えた値番目を <name4> の <name6> と <name1> 、 <name2> のユークリッド距離番目にする	<name4> [ dist ( <name6> , <name1> , <name2> ) ] = <name5> [ <name6> + <name2> ]	<name4> [ <name6> for <name6> , <name1> , <name2> ] = <name5> [ <name6> + <name2> ]
<name6> に <name5> を加えた値が <name3> より小さいとき、	if <name6> + <name5> < <name3> :	list ( <name6> + <name5> < <name3> ) :
<name6> を英大文字に変換した文字列を <name3> とする	<name3> = <name6> . <name3> ( )	<name3> = <name6> . upper ( )
<name5> 内の <val4> の出現回数を <name2> とする	<name2> = <name5> . count ( <val4> )	( <name2> = <name5> . count ( <val4> ) )
<name1> ( <name5> ) を順に <name6> として、繰り返す	for <name6> in <name1> ( <name5> ) :	. for <name6> in <name1> ( <name5> ) :
<name5> 、 <name3> の <name6> 番目から <name2> の <name6> 番目を引いた値の絶対値の最大値を <name5> とする	<name5> = max ( <name5> , abs ( <name3> [ <name6> ] - <name2> [ <name6> ] ) )	else = max ( <name5> , abs ( <name3> [ <name6> ] - <name2> [ <name6> ] ) )
<name5> の <name4> 番目の末尾に <name1> を追加する	<name5> [ <name4> ] . append ( <name1> )	<name1> [ <name4> ] . append ( <name1> )
<name3> の <name4> に <val6> を加えた値番目の <name2> 番目のとき、	if <name3> [ <name4> + <val6> ] [ <name2> ] :	list if <name3> [ <name4> + <val6> ] [ <name2> ] :
<name5> が <name4> より小さいとき、 <blk> <name3> の <name6> 番目の先頭を <name4> とする </blk>	if <name5> < <name4> : <blk> <name4> = <name3> [ <name6> ] [ 0 ] </blk>	if <name5> < <name4> : <blk> <name4> = <name3> [ <name6> ] [ 0 ] </blk>
<name4> の <name6> 番目から、つまり末尾までの部分列を追加して <name2> を拡張する	<name2> . extend ( <name4> [ <name6> : ] )	<name2> . extend ( <name4> [ <name6> : ] )
<name1> の <name3> 番目のとき、	if <name1> [ <name3> ] :	if ( <name1> [ <name3> ] ) :
<val3> が <name6> 以下かどうかが <name5> より小さくなくまたは <val3> が <name2> 以下かどうかが <name1> より小さくないとき、	if not <val3> <= <name6> < <name5> or not <val3> <= <name2> < <name1> :	raise if not <val3> <= <name6> < <name5> or not <val3> <= <name2> < <name1> :
<name2> をパラメータとして <name2> の <val5> 番目を返す関数をキーとして <name1> をソートした列を <name3> とする	<name3> = sorted ( <name1> , key = lambda <name2> : <name2> [ <val5> ] )	<name2> = sorted ( <name1> , key = lambda <name2> : <name2> [ <val5> ] )
<name2> を <name3> の <name6> に <val4> を加えた値番目の <name5> に <val1> を加えた値番目にする	<name3> [ <name6> + <val4> ] [ <name5> + <val1> ] = <name2>	<name4> [ <name6> + <val4> ] [ <name5> + <val1> ] = <name2>
<name4> 、 <name2> の <name5> の <name6> 番目番目の <name1> の <name6> 番目番目の <val3> 番目の最小値を <name4> とする	<name4> = min ( <name4> , <name2> [ <name5> [ <name6> ] ] [ <name1> [ <name6> ] ] [ <val3> ] )	<name4> = min ( <name4> , <name2> [ <name5> [ <name6> ] ] [ <name1> [ <name6> ] ] [ <val3> ] )
<name5> の <name2> 番目が <name3> より大きいとき、 <blk> <name5> の <name2> 番目を <name3> とする </blk>	if <name5> [ <name2> ] > <name3> : <blk> <name3> = <name5> [ <name2> ] </blk>	while <name5> [ <name2> ] > <name3> : <blk> <name3> = <name5> [ <name2> ] </blk>
<name4> 内の ( ( <name6> の <name1> 、 <name6> の <name3> ) からなる列、 <name6> の <name5> ) からなる列の出現回数が <val2> と等しいとき、	if <name4> . count ( [ [ <name6> . <name1> , <name6> . <name3> ] , <name6> . <name5> ] ) == <val2> :	for <name4> in <name4> . count ( [ [ <name6> . <name1> , <name6> . <name3> ] , <name6> . <name5> ] ) == <val2> :
<val3> から <val1> に <val3> を加えた値未満までの数列の各要素に整数を適用した列を順に <name4> として、繰り返す	for <name4> in map ( str , range ( <val3> , <val1> + <val3> ) ) :	. for <name4> in map ( int , range ( <val3> , <val1> + <val3> ) ) :
<name3> の <name1> 番目の <name4> 番目を <name3> の <name6> 番目の <name4> 番目にする	<name3> [ <name6> ] [ <name4> ] = <name3> [ <name1> ] [ <name4> ]	<name4> [ <name6> ] [ <name4> ] = <name3> [ <name1> ] [ <name4> ]
<name2> の先頭を <name3> の <val5> 番目にする	<name3> [ <val5> ] = <name2> [ 0 ]	( <name3> [ <val5> ] = <name2> [ 0 ] )
<name6> を <name4> で割った余りが <val2> と等しくない間、次を繰り返す	while <name6> % <name4> != <val2> :	try != <name6> % <name4> != <val2> :
<name6> をパラメータとして <name6> の先頭を返す関数を <name2> として <name1> をソートする	<name1> . sort ( <name2> = lambda <name6> : <name6> [ 0 ] )	<name1> . sort ( <name2> = lambda <name6> : <name6> [ 0 ] )
<name3> の <name1> 番目から <name2> を引いた値、 <name5> から <name6> の <name1> 番目を引いた値の最大値を <name4> とする	<name4> = max ( <name3> [ <name1> ] - <name2> , <name5> - <name6> [ <name1> ] )	<name6> = max ( <name3> [ <name1> ] - <name2> , <name5> - <name6> [ <name1> ] )
\ <name3> の末尾に <val5> を追加する\	\ <name3> . append ( <val5> ) \	for <name3> . append ( <val5> ) \
( ( <val4> 、 <val4> ) の組、 ( <val4> 、 -1 ) の組、 ( -1 、 <val4> ) の組、 ( -1 、 -1 ) の組 ) の組を <name6> とする	<name6> = ( ( <val4> , <val4> ) , ( <val4> , - <val4> ) , ( - <val4> , <val4> ) , ( - <val4> , - <val4> ) )	else = ( ( <val4> , <val4> ) , ( <val4> , - <val4> ) , ( - <val4> , <val4> ) , ( - <val4> , - <val4> ) )
<name6> の末尾に <val2> を間に入れて <name4> の <name5> の <val1> 番目の整数値番目を連結した文字列を追加する	<name6> . append ( <val2> . join ( <name4> [ int ( <name5> [ <val1> ] ) ] ) )	<name2> . append ( <val2> . join ( <name4> [ int ( <name5> [ <val1> ] ) ] ) )
<name4> の <name5> 番目の <name2> の <val3> 番目番目の <val1> 番目を <name6> だけ増加させる	<name4> [ <name5> ] [ <name2> [ <val3> ] ] [ <val1> ] += <name6>	<name4> [ <name5> ] [ <name2> [ <val3> ] ] [ <val1> ] += <name6>
<name6> ( <name5> ) を <name3> とする <name6> ( <name4> ) を <name2> とする	<name3> = <name6> ( <name5> ) <name2> = <name6> ( <name4> )	<name1> = <name6> ( <name5> ) <name2> = <name6> ( <name4> )
<val2> の <name6> から <val1> を引いた値乗に対する <name6> の剰余を <name3> とする	<name3> = pow ( <val2> , <name6> - <val1> , <name6> )	<name3> = pow ( <val2> , <name6> - <val1> , <name6> )
<name2> を <val6> で割った余りを <val5> で割った商を <name1> とする	<name1> = <name2> % <val6> // <val5>	<name1> = <name2> % <val6> // <val5>
<name2> の <name5> から <val3> を引いた値番目の <name6> から <val3> を引いた値番目の <name1> から <val3> を引いた値番目を <name4> だけ増加させる	<name2> [ <name5> - <val3> ] [ <name6> - <val3> ] [ <name1> - <val3> ] += <name4>	<name1> [ <name5> - <val3> ] [ <name6> - <val3> ] [ <name1> - <val3> ] += <name4>
<name1> が <val4> 以上の間、次を繰り返す	while <name1> >= <val4> :	for <name1> in <name1> >= <val4> :
<name3> を <name6> に <name4> を掛けた値だけ増加させる	<name3> += <name6> * <name4>	( <name3> += <name6> * <name4> )
<val5> を <name2> の <name1> 番目で割った余りを出力する	print ( <val5> % <name2> [ <name1> ] )	print ( <val5> % <name2> [ <name1> ] )
( <name5> 、 <name6> 、 <name3> ) の組を返す	return ( <name5> , <name6> , <name3> )	insort ( <name5> , <name6> , <name3> )
0 から <name4> に <val2> を加えた値未満までの数列の各要素を <name3> とし、 <val1> の列を <name5> とする	<name5> = [ <val1> for <name3> in range ( <name4> + <val2> ) ]	<name5> = [ <val1> for <name3> in range ( <name4> + <val2> ) ]
<name5> . <name1> ( <name2> , <name6> ) かつ ( <name2> 、 <name6> ) の組が <name3> に含まれないとき、	if <name5> . <name1> ( <name2> , <name6> ) and ( <name2> , <name6> ) not in <name3> :	isinstance ( <name5> . <name1> ( <name2> , <name6> ) and ( <name2> , <name6> ) not in <name3> :
<name2> を <name5> の <name6> の <name1> に <name3> を掛けた値に <name4> を加えた値番目にする	<name5> . <name6> [ <name1> * <name3> + <name4> ] = <name2>	<name2> . <name6> [ <name1> * <name3> + <name4> ] = <name2>
<name4> が <name1> より小さいとき、	if ( <name4> < <name1> ) :	list if <name4> < <name1> :
0 から <val6> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name2> in range ( <val6> ) ]	<name3> = [ [ ] for <name2> in range ( <val6> ) ]
<name5> の <name2> の <name4> の <name6> 番目に <name1> の <name3> を加えた値が <name5> の <name2> の <name1> の <name5> 番目より小さいとき、	if <name5> . <name2> [ <name4> . <name6> ] + <name1> . <name3> < <name5> . <name2> [ <name1> . <name5> ] :	if <name5> . <name2> [ <name4> . <name6> ] + <name1> . <name3> < <name5> . <name2> [ <name1> . <name5> ] :
<name4> ( <name2> ) が <name4> ( <name5> ) と等しいとき、	if <name4> ( <name2> ) == <name4> ( <name5> ) :	for <name4> ( <name2> ) == <name4> ( <name5> ) :
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name4> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name4> 内の <name5> の出現回数を出力する	print ( <name4> . count ( <name5> ) )	print ( <name4> . count ( <name5> ) )
<name6> の <name1> から <val3> を引いた値番目が <name4> より大きいとき、	if <name6> [ <name1> - <val3> ] > <name4> :	> <name6> [ <name1> - <val3> ] > <name4> :
( <val5> 、 <val2> 、 <val4> 、 <val3> 、 <val1> 、 <val6> 、 <val5> 、 <val2> 、 <val4> 、 <val3> 、 <val1> 、 <val6> 、 <val5> 、 <val2> 、 <val4> ) からなる列を <name6> とする	<name6> = [ <val5> , <val2> , <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> ]	<name6> = [ <val5> , <val2> , <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> ]
0 から <name2> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name5> の <name4> にする	<name5> . <name4> = [ [ ] for <name6> in range ( <name2> ) ]	<name1> . <name4> = [ [ ] for <name6> in range ( <name2> ) ]
<name6> に <val1> を掛けた値を <name6> とする	<name6> = <name6> * <val1>	( <name6> = <name6> * <val1> )
<name3> の <name1> の <val2> 番目が <val6> と等しいとき、	if <name3> . <name1> [ <val2> ] == <val6> :	[ <val6> if <name3> . <name1> [ <val2> ] == <val6> :
<name5> から <name4> を引いた値に <name1> を掛けた値から <name2> から <name3> を引いた値に <name6> を掛けた値を引いた値を <name6> とする	<name6> = ( <name5> - <name4> ) * <name1> - ( <name2> - <name3> ) * <name6>	<name6> = ( <name5> - <name4> ) * <name1> - ( <name2> - <name3> ) * <name6>
真を <name5> の <name1> に <val4> を加えた値番目の <name3> 番目にする	<name5> [ <name1> + <val4> ] [ <name3> ] = True	( <name5> [ <name1> + <val4> ] [ <name3> ] = True )
<name3> に <name6> を <name5> で割った値を加えた値を <name1> とする	<name1> = <name3> + <name6> / <name5>	<name1> = <name3> + <name6> / <name5>
<name1> の <name4> から <val5> を引いた値番目の <name6> 番目、 <name1> の <name4> から <val5> を引いた値番目の <name6> から <name3> [ <name4> ] の <val5> 番目を引いた値番目に <name3> の <name4> 番目の先頭を加えた値の最大値を <name1> の <name4> 番目の <name6> 番目にする	<name1> [ <name4> ] [ <name6> ] = max ( <name1> [ <name4> - <val5> ] [ <name6> ] , <name1> [ <name4> - <val5> ] [ <name6> - <name3> [ <name4> ] [ <val5> ] ] + <name3> [ <name4> ] [ 0 ] )	<name1> [ <name4> ] [ <name6> ] = max ( <name1> [ <name4> - <val5> ] [ <name6> ] , <name1> [ <name4> - <val5> ] [ <name6> - <name3> [ <name4> ] [ <val5> ] ] + <name3> [ <name4> ] [ 0 ] )
<name5> が <name2> より大きいとき、 <blk> <name5> と <name2> を入れ替える </blk>	if <name5> > <name2> : <blk> <name5> , <name2> = <name2> , <name5> </blk>	list if <name5> > <name2> : <blk> <name5> , <name2> = <name2> , <name5> </blk>
<name6> の <name4> の <name3> 番目が <name5> と等しくまたは <name6> の <name2> の <name3> 番目が <name5> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> . <name4> [ <name3> ] == <name5> or <name6> . <name2> [ <name3> ] == <name5> : <blk> continue </blk>	for <name6> . <name4> [ <name3> ] == <name5> or <name6> . <name2> [ <name3> ] == <name5> : <blk> continue </blk>
<val2> を <name1> の <name6> に <name5> を加えた値に <val3> を加えた値番目の <name4> 番目にする	<name1> [ <name6> + <name5> + <val3> ] [ <name4> ] = <val2>	not <name1> [ <name6> + <name5> + <val3> ] [ <name4> ] = <val2>
<name6> の <name4> から <val3> を引いた値番目の <name1> 番目、 <name6> の <name4> から <val3> を引いた値番目の <name1> から <name5> の <name4> -1 番目を引いた値番目に <val3> を加えた値、 <name6> の <name4> 番目の <name1> から <name5> の <name4> -1 番目を引いた値番目に <val3> を加えた値の最小値を <name6> の <name4> 番目の <name1> 番目にする	<name6> [ <name4> ] [ <name1> ] = min ( <name6> [ <name4> - <val3> ] [ <name1> ] , <name6> [ <name4> - <val3> ] [ <name1> - <name5> [ <name4> - <val3> ] ] + <val3> , <name6> [ <name4> ] [ <name1> - <name5> [ <name4> - <val3> ] ] + <val3> )	<name1> [ <name4> ] [ <name6> ] [ <name1> ] = min ( <name6> [ <name4> - <val3> ] [ <name1> ] , <name6> [ <name4> - <val3> ] [ <name1> - <name5> [ <name4> - <val3> ] ] + <val3> , <name6> [ <name4> ] [ <name1> - <val3> ] [ <name5> - <val3> ] ) + <val3> )
( <name4> 、 <name1> 、 <name2> ) の組を <name6> とする	<name6> = ( <name4> , <name1> , <name2> )	<name6> = ( <name4> , <name1> , <name2> )
<name4> の、つまり先頭から <name1> 番目までの部分列に <name4> の <name1> 番目から <name6> に <val2> を加えた値までの部分列の、つまり先頭から、つまり末尾までの -1 間隔による部分列を加えた値に <name4> の <name6> に <val2> を加えた値から、つまり末尾までの部分列を加えた値を <name4> とする	<name4> = <name4> [ : <name1> ] + <name4> [ <name1> : <name6> + <val2> ] [ : : - <val2> ] + <name4> [ <name6> + <val2> : ]	<name4> = <name4> [ : <name1> ] + <name4> [ <name1> : <name6> + <val2> ] [ : : - <val2> ] + <name4> [ <name6> + <val2> : ]
0 から <name4> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val1> ) :	) for <name5> ) in range ( <name4> + <val1> ) :
<name4> の <name2> の <name3> 番目を <name6> だけ増加させる	<name4> . <name2> [ <name3> ] += <name6>	<name4> . <name2> [ <name3> ] += <name6>
<name2> の <name4> と等しい要素の最初の位置を <name6> とする	<name6> = <name2> . index ( <name4> )	<name6> = <name2> . index ( <name4> )
<name4> から <name3> を引いた値を <name1> とする <name5> から <name6> を引いた値を <name2> とする	<name1> = <name4> - <name3> <name2> = <name5> - <name6>	<name2> = <name4> - <name3> <name2> = <name5> - <name6>
偽を <name5> の <name1> に <name6> を加えた値番目にする	<name5> [ <name1> + <name6> ] = False	<name4> [ <name1> + <name6> ] = False
<name5> に <val3> を掛けた値に <name2> に <val6> を掛けた値を加えた値に <name1> に <val3> を掛けた値を加えた値を <name4> とする	<name4> = <name5> * <val3> + <name2> * <val6> + <name1> * <val3>	<name4> = <name5> * <val3> + <name2> * <val6> + <name1> * <val3>
0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name2> の <name1> にする	<name2> . <name1> = [ [ ] for <name5> in range ( <name6> ) ]	<name6> . <name1> = [ [ ] for <name5> in range ( <name6> ) ]
<name1> を順に <name6> として、繰り返す <blk> <name6> を展開してを出力する </blk>	for <name6> in <name1> : <blk> print ( * <name6> ) </blk>	for <name6> in <name1> : <blk> print ( * <name6> ) </blk>
<name3> を <val2> で割った商から <val6> 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> // <val2> , <val6> , - 1 ) :	) for <name4> in range ( <name3> // <val2> , <val6> , - 1 ) :
<name1> . <name4> ( <name6> , <name5> , <name2> * <val3> + <val3> , ( <name1> + <name4> ) // <val3> , <name4> ) を <name3> とする	<name3> = <name1> . <name4> ( <name6> , <name5> , <name2> * <val3> + <val3> , ( <name1> + <name4> ) // <val3> , <name4> )	else = <name1> . <name4> ( <name6> , <name5> , <name2> * <val3> + <val3> , ( <name1> + <name4> ) // <val3> , <name4> )
<name5> が <name4> と等しいとき、	if <name5> == <name4> :	: if <name5> == <name4> :
<name3> の末尾に ( ( <val2> ) からなる列の <val2> から <val4> 未満までの数列の各要素を <name6> とし、 <val4> の列回分の列 ) からなる列を追加する	<name3> . append ( [ [ <val2> ] * [ <val4> for <name6> in range ( <val4> ) ] ] )	<name5> . append ( [ [ <val2> ] * [ <val4> for <name6> in range ( <val4> ) ] ] )
を間に入れて <name1> を連結した文字列を <name4> とする	<name4> = '' . join ( <name1> )	<name4> = '' . join ( <name1> )
( <val1> 、 <val3> 、 <val6> 、 <val2> ) からなる列を <name5> とする	<name5> = [ <val1> , <val3> , <val6> , <val2> ]	else = [ <val1> , <val3> , <val6> , <val2> ]
<val4> に入力された文字列の整数値を掛けた値を出力する	print ( <val4> * int ( input ( ) ) )	print ( <val4> * int ( input ( ) ) )
<name1> の <name3> 番目を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name1> [ <name3> ]	<name2> [ <name4> ] = <name1> [ <name3> ]
<name6> の先頭と <name6> の <val3> 番目の最大公約数を <name1> とする	<name1> = gcd ( <name6> [ 0 ] , <name6> [ <val3> ] )	<name1> = gcd ( <name6> [ 0 ] , <name6> [ <val3> ] )
<name6> ( <val4> , [ ( <val4> , <val4> ) ] )	<name6> ( <val4> , [ ( <val4> , <val4> ) ] )	<name6> ( <val4> , [ ( <val4> , <val4> ) ] )
<name2> ( <name6> [ : <name5> ] , <name5> ) 、 <name2> ( <name6> [ <name5> : ] , <name3> - <name5> ) の最小値を <name1> とする	<name1> = min ( <name2> ( <name6> [ : <name5> ] , <name5> ) , <name2> ( <name6> [ <name5> : ] , <name3> - <name5> ) )	<name1> = min ( <name2> ( <name6> [ : <name5> ] , <name5> ) , <name2> ( <name6> [ <name5> : ] , <name3> - <name5> ) )
<name3> の <name4> 番目を <val5> だけ増加させる	<name3> [ <name4> ] += <val5>	( <name3> [ <name4> ] += <val5> )
<name5> ( <name2> = <name4> , <name1> = <name6> . <name3> . <name1> , <name5> = <name6> . <name3> ) を <name3> とする	<name3> = <name5> ( <name2> = <name4> , <name1> = <name6> . <name3> . <name1> , <name5> = <name6> . <name3> )	<name4> = <name5> ( <name2> = <name4> , <name1> = <name6> . <name3> . <name1> , <name5> = <name6> . <name3> )
<name2> 、 <name3> の最大値を <name1> の <name6> 番目にする	<name1> [ <name6> ] = max ( <name2> , <name3> )	dict [ <name1> . <name6> ] = max ( <name2> , <name3> )
<name6> から <name1> を引いた値を <name5> とする <name4> から <name3> を引いた値を <name2> とする	<name5> = <name6> - <name1> <name2> = <name4> - <name3>	<name2> = <name6> - <name1> <name2> = <name4> - <name3>
<name3> が <name5> より小さいとき、 <blk> <val2> を出力する </blk>	if <name3> < <name5> : <blk> print ( <val2> ) </blk>	\ print ( <name3> < <name5> : <blk> print ( <val2> ) </blk>
<val3> から <name5> の <val2> 乗の整数値に <val3> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , int ( <name5> ** <val2> ) + <val3> ) :	. for <name4> in range ( <val3> , int ( <name5> ** <val2> ) + <val3> ) :
<name5> の末尾に ( <name6> 、 <name3> の整数値 ) の組を追加する	<name5> . append ( ( <name6> , int ( <name3> ) ) )	<name4> . append ( ( <name6> , int ( <name3> ) ) )
<name2> ( <name4> , ( <name1> [ <name3> -2 ] [ <name5> -1 ] , <name3> -1 , <name5> ) )	<name2> ( <name4> , ( <name1> [ <name3> - 2 ] [ <name5> - 1 ] , <name3> - 1 , <name5> ) )	set <name2> ( <name4> , ( <name1> [ <name3> - 2 ] [ <name5> - 1 ] , <name3> - 1 , <name5> ) )
<name2> の <name1> 番目が <name2> の <name1> に <val5> を加えた値番目より大きいとき、	if <name2> [ <name1> ] > <name2> [ <name1> + <val5> ] :	continue <name2> [ <name1> ] > <name2> [ <name1> + <val5> ] :
<name6> が <name1> より小さくかつ ( <name6> に <val5> を加えた値、 <name2> 、 <name4> ) の組が <name3> の <name6> 番目の <name1> 番目に含まれないとき、	if <name6> < <name1> and ( <name6> + <val5> , <name2> , <name4> ) not in <name3> [ <name6> ] [ <name1> ] :	isinstance ( <name6> < <name1> and ( <name6> + <val5> , <name2> , <name4> ) not in <name3> [ <name6> ] [ <name1> ] ) :
0 から <name1> 未満までの数列の各要素を <name2> とし、 <val3> の列を <name5> とする	<name5> = [ <val3> for <name2> in range ( <name1> ) ]	<name5> = [ <val3> for <name2> in range ( <name1> ) ]
<name5> 内の <name4> の出現回数が <val3> と等しいとき、	if <name5> . count ( <name4> ) == <val3> :	if <name5> . count ( <name4> ) == <val3> :
<name1> の先頭から <name6> の先頭の整数値を探して見つかった位置のとき <val2> 、そうでなければ <val5> を出力する	print ( <val2> if <name1> . find ( int ( <name6> [ 0 ] ) ) else <val5> )	print ( <val2> if <name1> . find ( int ( <name6> [ 0 ] ) ) else <val5> )
を間に入れて ( <name3> が <name2> に含まれないとき <name1> の <name3> 番目、そうでなければ <name1> ( <name3> ) の各要素を <name3> とし、 ( <val4> ifx [ <name3> ] == <val5> <name6> <val5> ) の列 ) からなる列を連結した文字列を出力する	print ( '' . join ( [ <name1> [ <name3> ] if <name3> not in <name2> <name6> [ ( <val4> if <name1> [ <name3> ] == <val5> <name6> <val5> ) for <name3> in <name1> ( <name3> ) ] ] ) )	'' . join ( [ <name1> [ <name3> ] if <name1> not in <name2> else [ ( <val4> [ <name3> ] == <val5> and <name6> [ <val5> ] ) ] for <name3> in <name1> ( <name3> ) ] ) )
<val2> が <name6> 以下かどうかが <name3> より小さくかつ <val2> が <name1> 以下かどうかが <name5> より小さくかつ <name4> の <name6> 番目の <name1> 番目が <name2> と等しいとき、	if <val2> <= <name6> < <name3> and <val2> <= <name1> < <name5> and <name4> [ <name6> ] [ <name1> ] == <name2> :	for <name6> <= <val2> <= <name6> < <name3> and <val2> <= <name1> < <name5> and <name4> [ <name6> ] [ <name1> ] == <name2> :
0 から <name3> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> + <val6> ) :	for <name1> in range ( <name3> + <val6> ) :
<name4> を <name1> の <val2> 番目にする	<name1> [ <val2> ] = <name4>	( <name1> [ <val2> ] = <name4> )
( <name5> 、 <name6> 、 <name2> ) の組を返す	return ( <name5> , <name6> , <name2> )	yield ( <name5> , <name6> , <name2> )
( <name1> の <name6> の <val4> 番目番目、 <name6> の先頭 ) の組が ( <name1> の <name5> の <val4> 番目番目、 <name5> の先頭 ) の組より小さいとき、	if ( <name1> [ <name6> [ <val4> ] ] , <name6> [ 0 ] ) < ( <name1> [ <name5> [ <val4> ] ] , <name5> [ 0 ] ) :	isinstance ( <name1> [ <name6> [ <val4> ] ] , <name6> [ 0 ] ) < ( <name1> [ <name5> [ <val4> ] ] , <name5> [ 0 ] ) :
<val6> が <name5> 以下かどうかが <val4> より小さいとき、	if <val6> <= <name5> < <val4> :	list if <val6> <= <name5> < <val4> :
<val5> に <name3> を掛けた値に <val2> を加えた値を <name1> とする	<name1> = <val5> * <name3> + <val2>	<name1> = <val5> * <name3> + <val2>
<name5> の末尾に <name4> ( <name2> , <name3> , <name1> ) を追加する	<name5> . append ( <name4> ( <name2> , <name3> , <name1> ) )	<name5> . append ( <name4> ( <name2> , <name3> , <name1> ) )
<name2> ( <name3> . <name4> + <name5> . <name4> , <name3> . <name1> + <name5> . <name1> ) を返す	return <name2> ( <name3> . <name4> + <name5> . <name4> , <name3> . <name1> + <name5> . <name1> )	x return <name2> ( <name3> . <name4> + <name5> . <name4> , <name3> . <name1> + <name5> . <name1> )
<name6> の <name5> 番目を展開し、それぞれ <name4> 、 <name3> 、 <name1> とする	<name4> , <name3> , <name1> = <name6> [ <name5> ]	( <name4> , <name3> , <name1> = <name6> [ <name5> ] )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name6> 、 <name5> とする	<name2> , <name6> , <name5> = map ( int , <name4> ( ) . split ( ) )	<name3> , <name6> , <name5> = map ( int , <name4> ( ) . split ( ) )
<name1> 、 <name5> に <name3> の <name2> 番目の <name4> 番目を加えた値の最小値を <name4> の <name6> 番目にする	<name4> [ <name6> ] = min ( <name1> , <name5> + <name3> [ <name2> ] [ <name4> ] )	dict [ <name6> ] = min ( <name1> , <name5> + <name3> [ <name2> ] [ <name4> ] )
<name6> の末尾に ( ( <val1> ) からなる列の <val1> から <val2> 未満までの数列の各要素を <name3> とし、 <val2> の列回分の列 ) からなる列を追加する	<name6> . append ( [ [ <val1> ] * [ <val2> for <name3> in range ( <val2> ) ] ] )	<name3> . append ( [ [ <val1> ] * [ <val2> for <name3> in range ( <val2> ) ] ] )
<name2> 内の <name3> の出現回数を出力する	print ( <name2> . count ( <name3> ) )	print ( <name2> . count ( <name3> ) )
入力された文字列の両端から空白改行を取り除いた文字列を <name4> とする	<name4> = input ( ) . strip ( )	<name4> = input ( ) . strip ( )
<name1> の <val2> 番目を <name4> の <name5> にする	<name4> . <name5> = <name1> [ <val2> ]	( <name4> [ <name5> ] = <name1> [ <val2> ] )
<name1> が <val2> と等しくかつ <name3> が <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <val2> and <name3> == <val2> : <blk> break </blk>	\ if <name1> == <val2> and <name3> == <val2> : <blk> break </blk>
<name6> 、 <name2> から <name1> を引いた値に <name5> を掛けた値の最大値を <name6> とする	<name6> = max ( <name6> , ( <name2> - <name1> ) * <name5> )	<name6> = max ( <name6> , ( <name2> - <name1> ) * <name5> )
<name5> の <name6> を <name1> の <name4> にする	<name1> . <name4> = <name5> . <name6>	<name2> . <name1> . <name4> = <name5> . <name6>
区切りなしで <name5> 、 <val6> 、 <name1> 、 <val2> 、 <name5> に <name1> を掛けた値を出力する	print ( <name5> , <val6> , <name1> , <val2> , <name5> * <name1> , sep = '' )	sep . print ( <name5> , <val6> , <name1> , <val2> , <name5> * <name1> , sep = '' )
<name6> の <name4> 番目が <name2> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> [ <name4> ] < <name2> : <blk> continue </blk>	\ if <name6> [ <name4> ] < <name2> : <blk> continue </blk>
<name6> の <name4> 番目に <val3> を加えた値を <name1> とする	<name1> = <name6> [ <name4> ] + <val3>	<name1> = <name6> [ <name4> ] + <val3>
( <name5> ) からなる列の <name2> に <val1> を加えた値回分の列を <name6> とする	<name6> = [ <name5> ] * ( <name2> + <val1> )	<name6> = [ <name5> ] * ( <name2> + <val1> )
<name1> に <val6> を加えた値に <name1> に <val4> を加えた値を掛けた値に <name1> に <val2> を加えた値を掛けた値を <val3> で割った値を <name5> とする	<name5> = ( <name1> + <val6> ) * ( <name1> + <val4> ) * ( <name1> + <val2> ) / <val3>	<name5> = ( <name1> + <val6> ) * ( <name1> + <val4> ) * ( <name1> + <val2> ) / <val3>
<name6> の <name1> 番目が <name5> より大きいとき、	if <name6> [ <name1> ] > <name5> :	> <name6> [ <name1> ] > <name5> :
( ( <val2> , <val6> ) 、 ( <val1> , <val5> ) 、 ( <val4> , <val3> ) 、 ( <val2> , <val6> ) 、 ( <val1> , <val5> ) 、 ( <val4> , <val4> ) 、 ( <val3> , <val1> ) ) からなる辞書を <name3> とする	<name3> = { <val2> : <val6> , <val1> : <val5> , <val4> : <val3> , <val2> : <val6> , <val1> : <val5> , <val4> : <val4> , <val3> : <val1> }	<name3> = { <val2> : <val6> , <val1> : <val5> , <val4> : <val3> , <val2> : <val6> , <val1> : <val5> , <val4> : <val4> , <val3> : <val1> }
Danger を <name2> とする	<name2> = 'Danger'	<name2> = '{0:.5f} '
入力された文字列の整数値の階乗を出力する	print ( math . factorial ( int ( input ( ) ) ) )	str . factorial ( int ( input ( ) ) )
<name2> に <val4> を掛けた値に <name5> を <val6> で割った値に <val4> を掛けた値を加えた値を <name1> とする	<name1> = <name2> * <val4> + ( <name5> / <val6> * <val4> )	<name1> = <name2> * <val4> + <name5> / <val6> * <val4>
<name1> ( <name6> , <name4> , <name3> ) を <name2> とする	<name2> = <name1> ( <name6> , <name4> , <name3> )	dict = <name1> ( <name6> , <name4> , <name3> )
<name1> の各要素を <name3> とし、 <name4> [ <name6> ] の <name2> 番目が <name3> と等しいかどうかの列の総和が <val5> と等しいとき、	if sum ( [ <name4> [ <name6> ] [ <name2> ] == <name3> for <name3> in <name1> ] ) == <val5> :	if sum ( [ <name4> [ <name6> ] [ <name2> ] == <name3> for <name3> in <name1> ] ) == <val5> :
<name2> の末尾に <name5> ( <name4> , <name6> , <name3> , <name1> ) を追加する	<name2> . append ( <name5> ( <name4> , <name6> , <name3> , <name1> ) )	<name2> . append ( <name5> ( <name4> , <name6> , <name3> , <name1> ) )
( <name1> の <name2> 、 <name1> の <name4> 、 <name1> の <name6> 、 <name1> の <name5> 、 <name1> の <name3> 、 <name1> の <name1> 、 <name1> の <name2> 、 <name1> の <name4> 、 <name1> の <name6> 、 <name1> の <name5> 、 <name1> の <name3> 、 <name1> の <name1> ) からなる列を <name3> とする	<name3> = [ <name1> . <name2> , <name1> . <name4> , <name1> . <name6> , <name1> . <name5> , <name1> . <name3> , <name1> . <name1> , <name1> . <name2> , <name1> . <name4> , <name1> . <name6> , <name1> . <name5> , <name1> . <name3> , <name1> . <name1> ]	<name3> = [ <name1> . <name2> , <name1> . <name4> , <name1> . <name6> , <name1> . <name5> , <name1> . <name3> , <name1> . <name1> , <name1> . <name2> , <name1> . <name6> , <name1> . <name5> , <name1> . <name1> , <name1> . <name1> , <name1> . <name1> ]
<name6> の <name6> の最大値と等しい要素の最初の位置を <name5> とする	<name5> = <name6> . index ( max ( <name6> ) )	<name5> = <name6> . index ( max ( <name6> ) )
-1 を <name5> とする <name3> を <name6> とする	<name5> = - 1 <name6> = <name3>	( <name5> = - 1 ) <name6> = <name3>
入力された文字列のリストの各要素に整数を適用した列のリストを <name4> とする	<name4> = list ( map ( int , list ( input ( ) ) ) )	<name4> = list ( map ( int , list ( input ( ) ) ) )
<name4> . <name5> . <name6> ( <name3> ) を <name1> とする	<name1> = <name4> . <name5> . <name6> ( <name3> )	<name1> = <name4> . <name5> . <name6> ( <name3> )
<name2> が <val4> と等しくないとき、	if <name2> != <val4> :	raise <name2> != <val4> :
<name1> の <name3> の x 座標から <name1> の <name5> の x 座標を引いた値に <name4> の <name5> の y 座標から <name1> の <name3> の y 座標を引いた値を掛けた値に <name1> の <name3> の y 座標から <name1> の <name5> の y 座標を引いた値に <name1> の <name3> の x 座標から <name4> の <name5> の x 座標を引いた値を掛けた値を加えた値を <name2> とする	<name2> = ( <name1> . <name3> . x - <name1> . <name5> . x ) * ( <name4> . <name5> . y - <name1> . <name3> . y ) + ( <name1> . <name3> . y - <name1> . <name5> . y ) * ( <name1> . <name3> . x - <name4> . <name5> . x )	<name2> = ( <name1> . <name3> . x - <name1> . <name5> . x ) * ( <name4> . <name5> . <name3> . y ) + ( <name1> . <name3> . <name5> . <name1> . <name3> . x - <name4> . <name5> . x )
<name3> ( <name2> , ( <name5> . <name6> + <name4> , <name5> . <name6> , <name1> , <name5> , <name4> ) )	<name3> ( <name2> , ( <name5> . <name6> + <name4> , <name5> . <name6> , <name1> , <name5> , <name4> ) )	<name4> ( <name2> , ( <name5> . <name6> + <name4> , <name5> . <name6> , <name1> , <name5> , <name4> ) )
<name6> . <name3> ( <name2> , ( <name1> [ <name4> ] [ <name5> ] [ <name6> ] , <name4> , <name5> , <name6> ) )	<name6> . <name3> ( <name2> , ( <name1> [ <name4> ] [ <name5> ] [ <name6> ] , <name4> , <name5> , <name6> ) )	set . <name3> ( <name2> , ( <name1> [ <name4> ] [ <name5> ] [ <name6> ] , <name4> , <name5> , <name6> ) )
<name6> 、 <name4> の最小値を <name4> とするを <name6> とする	<name6> = <name4> = min ( <name6> , <name4> )	<name6> = <name4> = min ( <name6> , <name4> )
<name4> を反転した列を順に <name1> 、 <name2> として、繰り返す	for <name1> , <name2> in reversed ( <name4> ) :	. for <name1> , <name2> in reversed ( <name4> ) :
辞書に対応する値、もし存在しなければ <name5> の先頭を出力する	print ( dict . get ( <name5> [ 0 ] ) )	& print ( dict . get ( <name5> [ 0 ] ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name6> 、 <name4> とする	<name1> , <name5> , <name6> , <name4> = map ( int , input ( ) . split ( ) )	<name6> , <name4> = map ( int , input ( ) . split ( ) )
<name5> の <name2> 番目が ( <val3> ) からなる列の <val6> または <name5> の <name2> 番目が [ <val1> ] の <val6> 回分の列と等しいかどうか回分の列と等しいとき、	if <name5> [ <name2> ] == [ <val3> ] * <val6> or <name5> [ <name2> ] == [ <val1> ] * <val6> :	> if <name5> [ <name2> ] == [ <val3> ] * ( <val6> or <name5> [ <name2> ] == [ <val1> ] * <val6> ) :
<name3> の <name2> の先頭の末尾に <name6> を追加する	<name3> . <name2> [ 0 ] . append ( <name6> )	<name2> . <name2> [ 0 ] . append ( <name6> )
<name3> ( <name4> , <name6> , <name4> , <name1> ) が <val2> 以上のとき、	if <name3> ( <name4> , <name6> , <name4> , <name1> ) >= <val2> :	continue <name3> ( <name4> , <name6> , <name4> , <name1> ) >= <val2> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を無限に繰り返した列を <name4> とする	<name4> = cycle ( map ( int , input ( ) . split ( ) ) )	<name4> = map ( int , input ( ) . split ( ) )
<name4> のコピーされた列を <name1> の <name3> にする	<name1> . <name3> = <name4> [ : ]	not <name1> . <name3> = <name4> [ : ]
( ( <val4> 、 <val4> 、 <name5> 、 <name6> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val4> , <val4> , <name5> , <name6> ) ]	<name4> = [ ( <val4> , <val4> , <name5> , <name6> ) ]
<name1> のとき、 <blk> <name5> を <val4> だけ増加させる </blk>	if <name1> : <blk> <name5> += <val4> </blk>	<blk> if <name1> : <blk> <name5> += <val4> </blk>
<name1> を <name2> で割った余りを <name3> とする	<name3> = <name1> % <name2>	( <name3> = <name1> % <name2> )
<name2> の総和を <name3> で割った値を <name6> とする	<name6> = sum ( <name2> ) / <name3>	<name6> = sum ( <name2> ) / <name3>
入力された文字列を <val3> で分割した字句列の各要素に整数を適用した列の組を <name6> とする	<name6> = tuple ( map ( int , input ( ) . split ( <val3> ) ) )	<name6> = tuple ( map ( int , input ( ) . split ( <val3> ) ) )
<name3> の <name2> 番目の <name4> 番目が <val1> と等しいとき、	if <name3> [ <name2> ] [ <name4> ] == <val1> :	if <name3> [ <name2> ] [ <name4> ] == <val1> :
<name1> 、 <name5> を <name4> 、 <name3> とする	<name4> , <name3> = <name1> , <name5>	<name2> , <name4> , <name3> = <name1> , <name5>
<name4> を <val2> で割った余りが <val6> と等しいとき <name4> 、そうでなければ <name4> に <val6> を加えた値を返す	return <name4> if <name4> % <val2> == <val6> else <name4> + <val6>	<val2> return <name4> if <name4> % <val2> == <val6> else <name4> + <val6>
<name2> に <name4> を加えた値と <name2> 、 <name4> の最小値のコンビネーションを <name1> だけ左シフトした値を <val3> で割った余りを出力する	print ( ( comb ( <name2> + <name4> , min ( <name2> , <name4> ) ) << <name1> ) % <val3> )	[ print ( comb ( <name2> + <name4> , min ( <name2> , <name4> ) ) << <name1> ) % <val3> )
<name4> <name3> <name2> <name1> <name6>	<name4> <name3> <name2> <name1> <name6>	( <name4> <name3> <name2> <name1> <name6> )
<name6> の長さを <name3> とする <name5> の長さを <name1> とする	<name3> = len ( <name6> ) <name1> = len ( <name5> )	<name2> = len ( <name6> ) <name1> = len ( <name5> )
<name6> に <name4> に <name1> を掛けた値を加えた値が <name5> より小さいとき、	if <name6> + <name4> * <name1> < <name5> :	isinstance ( <name6> + <name4> * <name1> < <name5> ) :
<name4> の <name2> 番目を <val1> だけ増加させる	<name4> [ <name2> ] += <val1>	<name2> [ <name2> ] += <val1>
<name1> ( <name4> , <name5> % <name4> ) を展開し、それぞれ <name3> 、 <name2> 、 <name6> とする	<name3> , <name2> , <name6> = <name1> ( <name4> , <name5> % <name4> )	<name3> , <name2> , <name6> = <name1> ( <name4> , <name5> % <name4> )
( <name3> 、 <name6> ) の組を <name4> の <val5> 番目にする	<name4> [ <val5> ] = ( <name3> , <name6> )	( <name3> , <name6> ) [ <val5> ] = ( <name3> , <name6> )
<name5> を <name4> の <name3> 番目に <name6> から <name3> を引いた値から <val2> を引いた値を掛けた値だけ増加させる	<name5> += <name4> [ <name3> ] * ( <name6> - <name3> - <val2> )	<name2> += <name4> [ <name3> ] * ( <name6> - <name3> - <val2> )
<val6> から <name3> から <val6> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name3> - <val6> ) :	. for <name1> in range ( <val6> , <name3> - <val6> ) :
<name2> の <name4> に <name2> に <name3> を掛けた値を加えた値を返す	return <name2> . <name4> + <name2> * <name3>	yield <name2> . <name4> + <name2> * <name3>
<name2> の <name4> の <name3> 番目から <name2> の <name4> の <name5> 番目を引いた値を <name6> とする	<name6> = <name2> . <name4> [ <name3> ] - <name2> . <name4> [ <name5> ]	<name6> = <name2> . <name4> [ <name3> ] - <name2> . <name4> [ <name5> ]
<name2> の <name5> 番目の <name4> から <val3> を引いた値番目が <val1> と等しい間、次を繰り返す	while <name2> [ <name5> ] [ <name4> - <val3> ] == <val1> :	for <name2> in <name2> [ <name5> ] [ <name4> - <val3> ] == <val1> :
<name4> の <val1> 番目を出力する	print ( <name4> [ <val1> ] )	print ( <name4> [ <val1> ] )
<name2> の <name6> の <name3> 番目の <name1> 番目が <val4> と等しくないとき、	if <name2> . <name6> [ <name3> ] [ <name1> ] != <val4> :	!= <name2> . <name6> [ <name3> ] [ <name1> ] != <val4> :
<name3> が <name2> に含まれるとき、	if <name3> in <name2> :	if <name3> in <name2> :
<name5> に <name3> を加えた値が <name4> より小さい間、次を繰り返す	while <name5> + <name3> < <name4> :	del ( <name5> + <name3> < <name4> ) :
<name6> を <name1> の <name2> ( <name5> ) 番目にする	<name1> [ <name2> ( <name5> ) ] = <name6>	<name6> [ <name1> [ <name2> ( <name5> ) ] ] = <name6>
<name5> の <name1> の <name2> 番目の <name6> 番目に <name5> の <name4> の <name6> 番目を掛けた値を <name5> の <name3> で割った余りを返す	return <name5> . <name1> [ <name2> ] [ <name6> ] * <name5> . <name4> [ <name6> ] % <name5> . <name3>	return <name5> . <name1> [ <name2> ] [ <name6> ] * <name5> . <name4> [ <name6> ] % <name5> . <name3>
<name1> の <name6> の <val5> 番目の整数値番目を出力する	print ( <name1> [ int ( <name6> [ <val5> ] ) ] )	print ( <name1> [ int ( <name6> [ <val5> ] ) ] )
{ 0 } x { 1 } = { 2 }を書式として <name3> 、 <name6> 、 <name3> に <name6> を掛けた値で整形した文字列を出力する	print ( '{0}x{1}={2}' . format ( <name3> , <name6> , <name3> * <name6> ) )	input = '{0} . format ' . format ( <name3> , <name6> , <name3> * <name6> ) )
<name4> の末尾に <name5> に <val6> を加えた値を追加する	<name4> . append ( <name5> + <val6> )	<name3> . append ( <name5> + <val6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name2> 、 <name6> とする	<name5> , <name4> , <name2> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name2> . <name4> ( <name3> )	<name2> . <name4> ( <name3> )	set ( <name2> . <name4> ( <name3> ) )
<val5> から <name4> の長さ未満までの数列の逆順を順に <name3> として、繰り返す	for <name3> in range ( <val5> , len ( <name4> ) ) [ : : - <val5> ] :	: for <name3> in range ( <val5> , len ( <name4> ) ) [ : : - 1 ] :
<val6> から <name5> 未満までの <name2> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name5> , <name2> ) :	range for <name1> in range ( <val6> , <name5> , <name2> ) :
( <name4> の <val3> 番目から <name5> の先頭を引いた値、 <name4> の <val1> 番目から <name5> の <val1> 番目を引いた値、 <name4> の <val2> 番目から <name5> の <val2> 番目を引いた値 ) の組を返す	return ( <name4> [ <val3> ] - <name5> [ <val3> ] , <name4> [ <val1> ] - <name5> [ <val1> ] , <name4> [ <val2> ] - <name5> [ <val2> ] )	x return ( <name4> [ <val3> ] - <name5> [ <val3> ] , <name4> [ <val1> ] - <name5> [ <val1> ] , <name4> [ <val2> ] - <name5> [ <val2> ] )
<name6> の <name5> 番目、 <name1> の <name6> の <name5> 番目番目を出力する	print ( <name6> [ <name5> ] , <name1> [ <name6> [ <name5> ] ] )	print ( <name6> [ <name5> ] , <name1> [ <name6> [ <name5> ] ] )
<name2> の <name6> に [ MASK ] を書き込むを <name5> とする	<name5> = <name2> . <name6> . <name5>	<name2> . <name5> = <name2> . <name6> . <name5>
<name6> 、 <name3> 、 <name4> をパラメータとして <name4> に <name3> から <name2> を引いた値を加えた値を <name3> から <name6> を引いた値で割った余りを返す関数を <name1> とする	<name1> = lambda <name6> , <name3> , <name4> : ( <name4> + ( <name3> - <name2> ) ) % ( <name3> - <name6> )	<name1> = lambda <name6> , <name3> , <name4> : ( <name4> + ( <name3> - <name2> ) ) % ( <name3> - <name6> )
<name1> の、つまり先頭から <name3> 番目までの部分列を順に <name5> として、繰り返す	for <name5> in <name1> [ : <name3> ] :	while <name1> [ : <name3> ] :
<name4> を <val1> で割った商を <name3> とする	<name3> = <name4> // <val1>	<name3> = <name4> // <val1>
<name1> ( <name5> * <val2> + <val3> , <name6> , <name4> , <name1> ) を返す	return <name1> ( <name5> * <val2> + <val3> , <name6> , <name4> , <name1> )	yield <name1> ( <name5> * <val2> + <val3> , <name6> , <name4> , <name1> )
<name2> をパラメータとして <name2> の <val5> 番目を返す関数を <name3> として <name6> をソートする	<name6> . sort ( <name3> = lambda <name2> : <name2> [ <val5> ] )	<name6> . sort ( <name3> = lambda <name2> : <name2> [ <val5> ] )
<name5> の <name6> に <name4> を加えた値番目を <name1> とする	<name1> = <name5> [ <name6> + <name4> ]	<name2> = <name5> [ <name6> + <name4> ]
<name4> が <val2> と等しくまたは <name4> が <name1> から <val6> を引いた値と等しくまたは <name5> が <val2> と等しくまたは <name5> が <name3> から <val6> を引いた値と等しいとき、	if <name4> == <val2> or <name4> == <name1> - <val6> or <name5> == <val2> or <name5> == <name3> - <val6> :	for <name4> in <name4> == <val2> or <name4> == <name1> - <val6> or <name5> == <val2> or <name5> == <name3> - <val6> :
<val6> を <name1> の <name3> の <val4> 番目にする	<name1> . <name3> [ <val4> ] = <val6>	( <name1> [ <name3> . <val4> ] = <val6> )
<name1> の絶対値が <val3> より小さいかどうかを返す	return abs ( <name1> ) < <val3>	x return abs ( <name1> ) < <val3>
<name6> の <name1> 番目を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name6> [ <name1> ]	( <name3> , <name2> = <name6> [ <name1> ] )
<name3> の <name6> の <name4> 番目の末尾に <name2> を追加する	<name3> . <name6> [ <name4> ] . append ( <name2> )	<name2> . <name6> [ <name4> ] . append ( <name2> )
<name3> が <val5> と等しくないとき、 <blk> <name2> に <name3> から <val5> を引いた値を掛けた値を <name3> で割った商を <name2> とする </blk>	if <name3> != <val5> : <blk> <name2> = <name2> * ( <name3> - <val5> ) // <name3> </blk>	for <name2> in <name3> != <val5> : <blk> <name2> = <name2> * ( <name3> - <val5> ) // <name3> </blk>
<name4> の <name3> 番目の <name2> 番目に <val6> を加えた値を返す	return <name4> [ <name3> ] [ <name2> ] + <val6>	x return <name4> [ <name3> ] [ <name2> ] + <val6>
<name1> の長さを <name5> とする <name4> の長さを <name6> とする	<name5> = len ( <name1> ) <name6> = len ( <name4> )	<name1> = len ( <name1> ) <name6> = len ( <name4> )
<name1> ( <name2> . <name3> , <name6> ) を <name5> とする	<name5> = <name1> ( <name2> . <name3> , <name6> )	<name5> = <name1> ( <name2> . <name3> , <name6> )
<name2> の <name4> の x 座標から <name2> の <name6> の x 座標を引いた値に <name5> の <name6> の y 座標から <name2> の <name4> の y 座標を引いた値を掛けた値に <name2> の <name4> の y 座標から <name2> の <name6> の y 座標を引いた値に <name2> の <name4> の x 座標から <name5> の <name6> の x 座標を引いた値を掛けた値を加えた値を <name3> とする	<name3> = ( <name2> . <name4> . x - <name2> . <name6> . x ) * ( <name5> . <name6> . y - <name2> . <name4> . y ) + ( <name2> . <name4> . y - <name2> . <name6> . y ) * ( <name2> . <name4> . x - <name5> . <name6> . x )	<name3> = ( <name2> . <name4> . x - <name2> . <name6> . x ) * ( <name5> . <name6> . x - <name2> . <name4> . <name2> . <name6> . x ) + ( <name2> . <name4> . x - <name5> . <name6> . x )
<name2> モジュールを用いる	from <name2> import cos , sin , pi	from <name2> , deque
<name4> の <name5> 番目が <name1> 以下のとき、	if <name4> [ <name5> ] <= <name1> :	list if <name4> [ <name5> ] <= <name1> :
<name1> の <name4> 番目でないとき、 <blk> 偽を返す </blk>	if not <name1> [ <name4> ] : <blk> return False </blk>	while not <name1> [ <name4> ] : <blk> return False </blk>
<name2> の総和が <name3> と等しいとき、	if sum ( <name2> ) == <name3> :	list == sum ( <name2> ) == <name3> :
<name3> . <name1> ( <name5> . <name2> ) を返す	return <name3> . <name1> ( <name5> . <name2> )	self return <name3> . <name1> ( <name5> . <name2> )
<name2> の <name4> の <name5> 番目の <val6> 番目番目を <val6> だけ増加させる	<name2> [ <name4> [ <name5> ] [ <val6> ] ] += <val6>	<name2> [ <name4> [ <name5> ] [ <val6> ] ] += <val6>
<name3> が <name1> を <name3> で割った商と等しくないとき、 <blk> <name4> を <name3> に <name1> を <name3> で割った商を加えた値だけ増加させる </blk>	if <name3> != <name1> // <name3> : <blk> <name4> += <name3> + <name1> // <name3> </blk>	if <name3> != <name1> // <name3> : <blk> <name4> += <name3> + <name1> // <name3> </blk>
空辞書を <name6> の <name2> にする	<name6> . <name2> = { }	( <name6> . <name2> = { } )
<name1> の <name6> の <name1> の <name2> 番目を <val5> で割った商を <name3> とする	<name3> = <name1> . <name6> [ <name1> . <name2> ] // <val5>	<name3> = <name1> . <name6> [ <name1> . <name2> ] // <val5>
<name5> 、 <name3> の <name1> 番目の <name2> 番目の最小値を <name6> とする	<name6> = min ( <name5> , <name3> [ <name1> ] [ <name2> ] )	<name6> = min ( <name5> , <name3> [ <name1> ] [ <name2> ] )
<name6> の <name5> 番目の <val4> 番目、 <name3> に <val4> を加えた値の最大値を <name6> の <name5> 番目の <val4> 番目にする	<name6> [ <name5> ] [ <val4> ] = max ( <name6> [ <name5> ] [ <val4> ] , <name3> + <val4> )	[ <name6> [ <name5> ] [ <val4> ] = max ( <name6> [ <name5> ] [ <val4> ] , <name3> + <val4> )
<name5> 、 <name3> の最小値を返す	return min ( <name5> , <name3> )	self return min ( <name5> , <name3> )
<name3> の <name5> 番目から <name3> の <name6> 番目を引いた値が <name4> より大きい間、次を繰り返す <blk> <name6> を <val1> だけ増加させる </blk>	while <name3> [ <name5> ] - <name3> [ <name6> ] > <name4> : <blk> <name6> += <val1> </blk>	for <name3> in <name3> [ <name5> ] - <name3> [ <name6> ] > <name4> : <blk> <name6> += <val1> </blk>
<name5> と <val3> の論理積が <val4> と等しいとき、 <blk> <name6> の <name5> から <val3> を引いた値番目のとき <val4> 、そうでなければ <val1> を出力する </blk>	if ( <name5> & <val3> ) == <val4> : <blk> print ( <val4> if <name6> [ <name5> - <val3> ] else <val1> ) </blk>	if <name5> & <val3> == <val4> : <blk> print ( <val4> if <name6> [ <name5> - <val3> ] else <val1> ) </blk>
<name5> と - <name5> の論理積を <name3> とする	<name3> = <name5> & - <name5>	( <name3> = <name5> & - <name5> )
<name4> の先頭を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = <name4> [ 0 ]	( <name3> , <name6> = <name4> [ 0 ] )
<name5> . <name2> ( <name1> + <val4> , <name3> + <val4> )	<name5> . <name2> ( <name1> + <val4> , <name3> + <val4> )	<name2> . <name2> ( <name1> + <val4> , <name3> + <val4> )
<name5> の <name3> の絶対値が <name1> より大きくまたは <name5> の <name2> の絶対値が <name1> より大きいとき、 <blk> ( 、つまり偽、 <val6> ) からなる列を返す </blk>	if abs ( <name5> . <name3> ) > <name1> or abs ( <name5> . <name2> ) > <name1> : <blk> return [ False , <val6> ] </blk>	if abs ( <name5> . <name3> ) > <name1> or abs ( <name5> . <name2> ) > <name1> : <blk> return [ False , <val6> ] </blk>
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name6> 、 <name2> 、 <name5> とする	<name4> , <name6> , <name2> , <name5> = map ( float , input ( ) . split ( ) )	<name6> , <name2> , <name5> = map ( float , input ( ) . split ( ) )
<name3> ( <name1> , ( <name2> , <name6> ) )	<name3> ( <name1> , ( <name2> , <name6> ) )	<name3> ( <name1> , ( <name2> , <name6> ) )
( <val5> ) からなる列の <name2> 回分の列を <name3> とする ( <val5> ) からなる列の <name2> 回分の列を <name1> とする	<name3> = [ <val5> ] * <name2> <name1> = [ <val5> ] * <name2>	<name2> = [ <val5> ] * <name2> <name1> = [ <val5> ] * <name2>
( <name1> の <val5> 番目から <name2> を引いた値、 <name1> の <val4> 番目から <name3> を引いた値 ) の組を <name6> とする	<name6> = ( <name1> [ <val5> ] - <name2> , <name1> [ <val4> ] - <name3> )	<name6> = ( <name1> [ <val5> ] - <name2> , <name1> [ <val4> ] - <name3> )
<name1> の <name6> ( <name1> , <name2> ) から <val5> を引いた値番目を <name4> とする	<name4> = <name1> [ <name6> ( <name1> , <name2> ) - <val5> ]	<name4> = <name1> [ <name6> ( <name1> , <name2> ) - <val5> ]
<val1> <name4> <val5> を <name2> とする	<name2> = <val1> <name4> <val5>	<name6> = <val1> <name4> <val5>
<name1> ( <name4> , <name3> - <name2> , <name5> )	<name1> ( <name4> , <name3> - <name2> , <name5> )	<name4> ( <name4> , <name3> - <name2> , <name5> )
<name4> 、 <name6> 、 <name1> 、 <name5> において正規表現 <name3> が最初にマッチする位置を <name2> とする	<name2> = search ( <name3> , <name4> , <name6> , <name1> , <name5> )	<name2> = search ( <name3> , <name4> , <name6> , <name1> , <name5> )
<name2> を <name5> だけ増加させる <name5> を <val4> だけ増加させる	<name2> += <name5> <name5> += <val4>	<name2> += <name5> <name5> += <val4>
<name2> ( <name6> , <name1> , <name3> , <name4> + <val5> ) に <val5> を加えた値を <name5> とする	<name5> = <name2> ( <name6> , <name1> , <name3> , <name4> + <val5> ) + <val5>	<name5> = <name2> ( <name6> , <name1> , <name3> , <name4> + <val5> ) + <val5>
<name3> の総和を <val6> で割った余りを出力する	print ( sum ( <name3> ) % <val6> )	print ( sum ( <name3> ) % <val6> )
<name4> に <name2> を加えた値を <val3> で割った商を <name5> とする	<name5> = ( <name4> + <name2> ) // <val3>	<name5> = ( <name4> + <name2> ) // <val3>
<name6> が <name5> より小さくかつ <name4> が <name1> より小さくかつ <name3> の <name6> 番目の <name4> 番目が全て数字のとき、	if <name6> < <name5> and <name4> < <name1> and <name3> [ <name6> ] [ <name4> ] . isdigit ( ) :	list ( <name6> < <name5> and <name4> < <name1> and <name3> [ <name6> ] [ <name4> ] . isdigit ( ) :
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストを <name3> とする	<name3> = list ( map ( int , <name1> . readline ( ) . split ( ) ) )	<name3> = list ( map ( int , <name1> . readline ( ) . split ( ) ) )
<name2> の先頭の <val3> 乗に <name2> の <val4> 番目の <val3> 乗を加えた値の平方根を返す	return math . sqrt ( <name2> [ 0 ] ** <val3> + <name2> [ <val4> ] ** <val3> )	return math . sqrt ( <name2> [ 0 ] ** <val3> + <name2> [ <val4> ] ** <val3> )
<val3> が <name6> から <val4> を引いた値以下かつ <name2> の <name6> から <val4> を引いた値番目が <val1> と等しいとき、	if <val3> <= <name6> - <val4> and <name2> [ <name6> - <val4> ] == <val1> :	for <name6> in <val3> <= <name6> - <val4> and <name2> [ <name6> - <val4> ] == <val1> :
<name5> の <name4> の <val2> 番目番目を <name1> とする	<name1> = <name5> [ <name4> [ <val2> ] ]	<name1> = <name5> [ <name4> [ <val2> ] ]
<name5> の <name2> 番目が <val6> と等しくないとき、	if <name5> [ <name2> ] != <val6> :	raise <name5> [ <name2> ] != <val6> :
<name6> に <name1> から <val5> を引いた値を <name3> で割った余りに <name3> を掛けた値を加えた値を <name4> の <name6> に <name3> に <name1> を掛けた値を加えた値番目にする	<name4> [ <name6> + <name3> * <name1> ] = <name6> + ( ( <name1> - <val5> ) % <name3> ) * <name3>	<name4> [ <name6> + <name3> * <name1> ] = <name6> + ( ( <name1> - <val5> ) % <name3> ) * <name3>
<name2> の <name4> に <val1> を掛けた値に <val3> を加えた値番目に <name2> の <name4> に <val1> を掛けた値に <val1> を加えた値番目を加えた値を <name2> の <name4> 番目にする	<name2> [ <name4> ] = <name2> [ <name4> * <val1> + <val3> ] + <name2> [ <name4> * <val1> + <val1> ]	( <name2> [ <name4> ] = <name2> [ <name4> * <val1> + <val3> ] + <name2> [ <name4> * <val1> + <val1> ] )
<name2> から <val3> を引いた値を <name1> で割った余りを <name2> とする	<name2> = ( <name2> - <val3> ) % <name1>	<name2> = ( <name2> - <val3> ) % <name1>
<name3> の <name6> 番目の先頭を <name1> の <name6> 番目の <val5> 番目にする	<name1> [ <name6> ] [ <val5> ] = <name3> [ <name6> ] [ <val5> ]	<name1> [ <name6> ] [ <val5> ] = <name3> [ <name6> ] [ <val5> ]
<name5> から <name4> を引いた値を <name3> から <name1> を引いた値で割った値を <name2> とする	<name2> = ( <name5> - <name4> ) / ( <name3> - <name1> )	<name2> = ( <name5> - <name4> ) / ( <name3> - <name1> )
<name5> の各要素を <name1> とし、 <name3> から <name1> [ <val6> ] を引いた値に <val2> を加えた値の列を展開してを出力する	print ( * [ <name3> - <name1> [ <val6> ] + <val2> for <name1> in <name5> ] )	<name4> = * [ <name3> - <name1> [ <val6> ] + <val2> for <name1> in <name5> ] )
<name6> から <name2> を引いた値に <val3> を加えた値が <val5> 以上かつ <name4> に対応する値、もし存在しなければ <name6> から <name2> を引いた値に <val3> を加えた値、 <name6> に <val3> を加えた値が <name1> の <name2> 番目と等しいとき、	if <name6> - <name2> + <val3> >= <val5> and <name4> . get ( <name6> - <name2> + <val3> , <name6> + <val3> ) == <name1> [ <name2> ] :	>= <name6> - <name2> + <val3> >= <val5> and <name4> . get ( <name6> - <name2> ) + <val3> , <name6> + <val3> ) == <name1> [ <name2> ] :
<name1> の末尾に <name4> を追加する	<name1> . append ( <name4> )	not <name1> . append ( <name4> )
<name3> ( <name1> , ( ( <name5> , <name6> ) , ( <name2> , <name4> ) ) ) を <name1> とする	<name1> = <name3> ( <name1> , ( ( <name5> , <name6> ) , ( <name2> , <name4> ) ) )	<name1> = <name3> ( <name1> , ( ( <name5> , <name6> ) , ( <name2> , <name4> ) ) )
<val1> を <name5> の <name2> 番目にする	<name5> [ <name2> ] = <val1>	( <name5> [ <name2> ] = <val1> )
<name6> の <name3> の文字列を返す	return str ( <name6> . <name3> )	yield str ( <name6> . <name3> )
<name2> を <name2> から <val1> を引いた値との論理積にする	<name2> & = ( <name2> - <val1> )	<name2> & = ( <name2> - <val1> )
<val4> が <name3> 以下かどうかが <name6> より小さいとき、	if <val4> <= <name3> < <name6> :	list ( <val4> <= <name3> < <name6> ) :
<name1> の <name4> に [ MASK ] を書き込むを <name6> とする	<name6> = <name1> . <name4> . <name6>	<name6> = <name1> . <name4> . <name6>
<name6> の <name5> 番目を <name6> とする	<name6> = <name6> [ <name5> ]	else = <name6> [ <name5> ]
<name6> を <name3> の <name5> 番目の <val2> 番目から <name3> の <name5> に <val4> を加えた値番目の先頭を引いた値に <name3> の <name5> 番目の <val4> 番目に <name3> の <name5> に <val4> を加えた値番目の <val4> 番目を加えた値を掛けた値だけ増加させる	<name6> += ( <name3> [ <name5> ] [ <val2> ] - <name3> [ <name5> + <val4> ] [ <val2> ] ) * ( <name3> [ <name5> ] [ <val4> ] + <name3> [ <name5> + <val4> ] [ <val4> ] )	<name6> += ( <name3> [ <name5> ] [ <val2> ] - <name3> [ <name5> + <val4> ] [ <val2> ] ) * ( <name3> [ <name5> ] [ <val4> ] + <name3> [ <name5> + <val4> ] [ <val2> ] )
<name2> の <val5> 番目から、つまり末尾までの部分列を <name2> とする	<name2> = <name2> [ <val5> : ]	<name2> = <name2> [ <val5> : ]
<name2> ( <name5> + <val6> , <name3> , <name4> + <name1> [ <name2> ] [ <val5> ] )	<name2> ( <name5> + <val6> , <name3> , <name4> + <name1> [ <name2> ] [ <val5> ] )	<name2> ( <name5> + <val6> , <name3> , <name4> + <name1> [ <name2> ] [ <val5> ] )
<name2> . <name6> ( <name1> , <name4> , <name3> [ <val5> ] )	<name2> . <name6> ( <name1> , <name4> , <name3> [ <val5> ] )	set ( <name2> . <name6> ( <name1> , <name4> , <name3> [ <val5> ] ) )
<name3> の <name4> 乗に対する <val1> の <val6> 乗に <val2> を加えた値の剰余を出力する	print ( pow ( <name3> , <name4> , <val1> ** <val6> + <val2> ) )	print ( pow ( <name3> , <name4> , <val1> ** <val6> + <val2> ) )
<val3> から <name4> に <val3> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val3> , <name4> + <val3> ) :	continue for <name2> in range ( <val3> , <name4> + <val3> ) :
0 から <name5> 未満までの数列の各要素を <name3> とし、、つまり空辞書の列を <name6> とする	<name6> = [ { } for <name3> in range ( <name5> ) ]	<name6> = [ { } for <name3> in range ( <name5> ) ]
<name4> に <name3> を加えた値を <name5> で割った余りを <name4> とする	<name4> = ( <name4> + <name3> ) % <name5>	<name4> = ( <name4> + <name3> ) % <name5>
<name1> を <val3> だけ減少させる	<name1> -= <val3>	not <name1> -= <val3>
<name5> の <val3> 番目の先頭を出力する	print ( <name5> [ <val3> ] [ 0 ] )	print ( <name5> [ <val3> ] [ 0 ] )
<name1> が <name2> から <val5> を引いた値と等しいとき、	if <name1> == <name2> - <val5> :	if <name1> == <name2> - <val5> :
<name1> ( ) の両端から空白改行を取り除いた文字列を <name6> とする	<name6> = <name1> ( ) . strip ( )	<name6> = <name1> ( ) . strip ( )
<name3> の <name4> を <name6> とする	<name6> = <name3> . <name4>	( <name6> = <name3> . <name4> )
( <name6> の先頭、 <name6> の <val3> 番目、 <name6> の <val4> 番目、 <name6> の <val5> 番目、 <name6> の <val1> 番目、 <name6> の <val2> 番目 ) からなる列を <name2> とする	<name2> = [ <name6> [ 0 ] , <name6> [ <val3> ] , <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] ]	<name6> = [ <name6> [ 0 ] , <name6> [ <val3> ] , <name6> [ <val4> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] ]
kichi を出力する	print ( 'kichi' )	& print ( 'NONE' )
<name1> . <name5> ( <name6> , <name2> , <name3> )	<name1> . <name5> ( <name6> , <name2> , <name3> )	. <name1> . <name5> ( <name6> , <name2> , <name3> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name6> 、 <name2> 、 <name5> とする	<name6> , <name2> , <name5> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name2> , <name5> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name4> . <name1> ( ) のとき、	if <name4> . <name1> ( ) :	isinstance ( <name4> . <name1> ( ) ) :
0 から <name4> の長さ未満までの数列を順に <name1> として、繰り返す <blk> <name4> の <name1> 番目を英小文字に変換した文字列を <name4> の <name1> 番目にする </blk>	for <name1> in range ( len ( <name4> ) ) : <blk> <name4> [ <name1> ] = <name4> [ <name1> ] . lower ( ) </blk>	) in range ( len ( <name4> ) ) : <blk> <name4> [ <name1> ] = <name4> [ <name1> ] . lower ( ) </blk>
<name2> の長さを <name5> の <name4> 番目にする	<name5> [ <name4> ] = len ( <name2> )	<name3> [ <name4> ] = len ( <name2> )
( ( <val4> 、 <val4> 、 <val4> ) の組 ) からなる列を <name1> とする	<name1> = [ ( <val4> , <val4> , <val4> ) ]	<name6> = [ ( <val4> , <val4> , <val4> ) ]
<val2> から <val3> 未満までの数列の各要素を <name6> とし、 <val2> の列を <name4> とする	<name4> = [ <val2> for <name6> in range ( <val3> ) ]	<name4> = [ <val2> for <name6> in range ( <val3> ) ]
<name2> 、 <name3> はグローバル変数とする	global <name2> , <name3>	else = <name2> , <name3>
<name4> の <name3> 番目が <name5> の <name6> 番目以下のとき、	if <name4> [ <name3> ] <= <name5> [ <name6> ] :	if <name4> [ <name3> ] <= <name5> [ <name6> ] :
<name6> の <name3> と等しい要素の最初の位置を <name1> とする	<name1> = <name6> . index ( <name3> )	<name1> = <name6> . index ( <name3> )
<name5> と <name1> の <name3> 番目の論理和を <name5> とする	<name5> = <name5> | <name1> [ <name3> ]	( <name5> = <name5> | <name1> [ <name3> ] )
<name4> 、 <name6> の要素をそれぞれ組にした列の各要素を <name5> 、 <name3> とし、 <name1> を <name2> から <name5> を引いた値で割った値に <name3> を掛けた値の列の総和を返す	return sum ( [ <name1> / ( <name2> - <name5> ) * <name3> for <name5> , <name3> in zip ( <name4> , <name6> ) ] )	yield sum ( [ <name1> / ( <name2> - <name5> ) * <name3> for <name5> , <name3> in zip ( <name4> , <name6> ) ] )
<name4> の末尾に入力された文字列を空白で分割した字句列を追加する	<name4> . append ( input ( ) . split ( ) )	<name4> . append ( input ( ) . split ( ) )
<name4> から <name2> を引いた値を <name3> とする	<name3> = <name4> - <name2>	( <name3> = <name4> - <name2> )
- が <name5> の先頭を除いた部分列に含まれるとき、	if '-' in <name5> [ 1 : ] :	list in - 1 in <name5> [ 1 : ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name2> 、 <name1> とする	<name6> , <name2> , <name1> = map ( int , input ( ) . split ( ) )	<name3> , <name2> , <name1> = map ( int , input ( ) . split ( ) )
<val2> から <name1> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <name6> の列を <name4> とする	<name4> = [ <name6> for <name6> in range ( <val2> , <name1> + <val2> ) ]	<name4> = [ <name6> for <name6> in range ( <val2> , <name1> + <val2> ) ]
<name6> の <name2> の <name3> から <name5> を引いた値番目の末尾に ( <name4> から <name5> を引いた値、 <name1> ) の組を追加する	<name6> . <name2> [ <name3> - <name5> ] . append ( ( <name4> - <name5> , <name1> ) )	<name4> . <name2> [ <name3> - <name5> ] . append ( ( <name4> - <name5> , <name1> ) )
( <name4> 、 <name3> ) の組を <name6> とする	<name6> = ( <name4> , <name3> )	( <name4> , <name3> ) = ( <name4> , <name3> )
<val3> 、 <val3> を <name6> 、 <name4> とする	<name6> , <name4> = <val3> , <val3>	( <name6> , <name4> = <val3> , <val3> )
<name2> の <name5> 番目が <name1> の先頭と等しいとき、	if <name2> [ <name5> ] == <name1> [ 0 ] :	list if <name2> [ <name5> ] == <name1> [ 0 ] :
( <val2> ) からなる列の <name1> に <val6> を加えた値回分の列、 ( <val2> ) からなる列の <name4> に <val6> を加えた値回分の列を <name5> 、 <name3> とする	<name5> , <name3> = [ <val2> ] * ( <name1> + <val6> ) , [ <val2> ] * ( <name4> + <val6> )	<name5> , <name3> = [ <val2> ] * ( <name1> + <val6> ) , [ <val2> ] * ( <name4> + <val6> )
<name1> の長さから <name5> を引いた値から <val6> を引いた値を <name3> とする	<name3> = len ( <name1> ) - <name5> - <val6>	<name3> = len ( <name1> ) - <name5> - <val6>
<name3> から <name5> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> , <name5> ) :	continue for <name6> in range ( <name3> , <name5> ) :
<name6> の <name3> 番目を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name6> [ <name3> ]	<name2> , <name5> , <name4> = <name6> [ <name3> ]
<val3> から <val3> に <val1> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , <val3> + <val1> ) :	continue for <name6> in range ( <val3> , <val3> + <val1> ) :
<name2> ( <name3> , <name4> , <name6> ) を <name1> とする	<name1> = <name2> ( <name3> , <name4> , <name6> )	<name1> = <name2> ( <name3> , <name4> , <name6> )
<name5> の <name6> 番目に <name2> を加えた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name5> [ <name6> ] + <name2>	( <name5> [ <name1> ] = <name5> [ <name6> ] + <name2> )
<name3> の <name6> が <name1> より小さい間、次を繰り返す <blk> <name3> の <name6> を <val5> 倍にする </blk>	while <name3> . <name6> < <name1> : <blk> <name3> . <name6> *= <val5> </blk>	: while <name3> . <name6> < <name1> : <blk> <name3> . <name6> *= <val5> </blk>
<name1> の整数値を <name6> とする	<name6> = int ( <name1> )	else = int ( <name1> )
<name6> から <name5> から <val3> を引いた値未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> , <name5> - <val3> , - <val3> ) :	in for range ( <name6> , <name5> - <val3> , - <val3> ) :
<name6> 、 <name1> 、 <name2> 、 <name3> を <name1> の <val2> 番目、 <name1> の <val3> 番目、 <name1> の <val4> 番目、 <name1> の <val5> 番目とする	<name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ <val5> ] = <name6> , <name1> , <name2> , <name3>	<name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ <val5> ] = <name6> , <name1> , <name2> , <name3>
<name3> の <name6> から <val2> を引いた値番目を出力する	print ( <name3> [ <name6> - <val2> ] )	<name3> [ <name6> - <val2> ] = <name3> [ <name6> - <val2> ] )
<name4> の、つまり先頭から <name6> 番目までの部分列の各要素を <name5> とし、 <name1> の <name2> から <name5> を引いた値番目の列の総和を出力する	print ( sum ( [ <name1> [ <name2> - <name5> ] for <name5> in <name4> [ : <name6> ] ] ) )	<name4> = sum ( [ <name1> [ <name2> - <name5> ] for <name5> in <name4> [ : <name6> ] ] ) )
<name2> を <name4> から <name6> を引いた値だけ増加させる	<name2> += <name4> - <name6>	<name2> += <name4> - <name6>
<val2> から <name6> を引いた値を <name3> とする	<name3> = <val2> - <name6>	<name3> = <val2> - <name6>
<name6> から <name3> の <name2> の <name5> 番目を引いた値に <name3> の <name2> の <name4> 番目を加えた値を <name3> の <name2> の <name1> 番目にする	<name3> . <name2> [ <name1> ] = <name6> - <name3> . <name2> [ <name5> ] + <name3> . <name2> [ <name4> ]	( <name3> . <name2> [ <name1> ] = <name6> - <name3> . <name2> [ <name5> ] + <name3> . <name2> [ <name4> ] )
<name2> の <name6> 番目が -1 と等しくなくかつ <name5> が <name3> ( <name6> ) と等しくないとき、	if <name2> [ <name6> ] != - 1 and <name5> != <name3> ( <name6> ) :	for <name2> in <name2> [ <name6> ] != - 1 and <name5> != <name3> ( <name6> ) :
<val5> を <name2> の <name6> 番目の <name3> 番目とするを <name1> の <name3> 番目の <name6> 番目にする	<name1> [ <name3> ] [ <name6> ] = <name2> [ <name6> ] [ <name3> ] = <val5>	<name1> [ <name3> ] [ <name6> ] = <name2> [ <name6> ] [ <name3> ] = <val5>
<name5> ( <name2> , ( <name1> + ( <val4> * ( <name3> % <val6> ) + <val5> * ( <name3> % <val5> ) + <val2> ) , <val1> , <name3> ) )	<name5> ( <name2> , ( <name1> + ( <val4> * ( <name3> % <val6> ) + <val5> * ( <name3> % <val5> ) + <val2> ) , <val1> , <name3> ) )	<name5> ( <name2> , ( <name1> + ( <val4> * ( <name3> % <val6> ) + <val5> * ( <name3> % <val5> ) + <val2> , <val1> ) , <name3> ) )
<name4> の位置 <name2> が <name5> で始まるとき、	if <name4> . startswith ( <name5> , <name2> ) :	for <name4> . product ( <name4> , <name2> , <name5> ) :
( <val1> 、 <val2> 、 <val2> 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val1> , <val2> , <val2> , <val1> ]	<name6> = [ <val1> , <val2> , <val2> , <val1> ]
<name5> の <name4> 番目内の <name5> の <name4> 番目の <name1> 番目の出現回数が <val3> より大きいとき、	if <name5> [ <name4> ] . count ( <name5> [ <name4> ] [ <name1> ] ) > <val3> :	isinstance ( <name5> [ <name4> ] . count ( <name5> [ <name4> ] [ <name1> ] ) > <val3> :
<name4> ( ) . <name5> ( ) の各要素に <name2> を適用した列をソートした列の逆順を展開してを出力する	print ( * sorted ( map ( <name2> , <name4> ( ) . <name5> ( ) ) ) [ : : - 1 ] )	print ( * sorted ( map ( <name2> , <name4> ( ) . <name5> ( ) ) ) [ : : - 1 ] )
( -1 ) からなる列の <name4> の <name1> 回分の列を <name4> の <name6> にする	<name4> . <name6> = [ - 1 ] * <name4> . <name1>	<name3> . <name6> = [ - 1 ] * <name4> . <name1>
<name2> ( <name6> + <val4> , <name5> )	<name2> ( <name6> + <val4> , <name5> )	set ( <name2> ( <name6> + <val4> , <name5> ) )
<val4> 、 <val5> を <name3> 、 <name1> とする	<name3> , <name1> = <val4> , <val5>	<name2> , <name3> , <name1> = <val4> , <val5>
<val1> を <name6> の先頭の先頭の <val1> 番目にする	<name6> [ <val1> ] [ <val1> ] [ <val1> ] = <val1>	( <name6> [ <val1> ] [ <val1> ] ) = <val1>
( <name6> に <val5> を加えた値、 <name2> に <name4> を加えた値 ) の組を <name3> の <name1> 番目にする	<name3> [ <name1> ] = ( <name6> + <val5> , <name2> + <name4> )	<name3> [ <name1> ] = ( <name6> + <val5> , <name2> + <name4> )
#を <name5> とする	<name5> = '#'	( <name5> = '#' )
<name5> を展開し、それぞれ <name6> 、 <name1> とする <name4> を展開し、それぞれ <name2> 、 <name3> とする	<name6> , <name1> = <name5> <name2> , <name3> = <name4>	<name2> , <name1> = <name5> <name2> , <name3> = <name4>
( ( <val2> 、 -1 ) の組、 ( <val6> 、 -1 ) の組、 ( <val6> 、 <val2> ) の組、 ( <val2> 、 <val6> ) の組、 ( -1 、 <val6> ) の組、 ( -1 、 <val2> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val2> , - <val6> ) , ( <val6> , - <val6> ) , ( <val6> , <val2> ) , ( <val2> , <val6> ) , ( - <val6> , <val6> ) , ( - <val6> , <val2> ) ]	<name4> = [ ( <val2> , - <val6> ) , ( <val6> , - <val2> ) , ( <val6> , <val2> ) , ( <val2> , <val6> ) , ( - <val2> , <val6> ) , ( - <val2> , <val2> ) ]
<name6> の長さが <val4> より小さいとき、 <blk> 偽を返す </blk>	if len ( <name6> ) < <val4> : <blk> return False </blk>	while len ( <name6> ) < <val4> : <blk> return False </blk>
<name3> が <name1> より小さくまたは <name3> が <name1> と等しくかつ <name4> が <name5> より小さい間、次を繰り返す	while <name3> < <name1> or ( <name3> == <name1> and <name4> < <name5> ) :	while <name3> < <name1> or ( <name3> == <name1> and <name4> < <name5> ) :
( <name3> 、 <name2> ) からなる列を <name6> とする	<name6> = [ <name3> , <name2> ]	else = [ <name3> , <name2> ]
<name2> を <name3> だけ増加させる <name3> を <val6> だけ増加させる	<name2> += <name3> <name3> += <val6>	<name2> += <name3> <name3> += <val6>
<name3> を <name1> で割った値に <name6> を <name1> で割った値を掛けた値に <name5> を掛けた値の整数値を出力する	print ( int ( ( ( <name3> / <name1> ) * ( <name6> / <name1> ) ) * <name5> ) )	<name3> print ( int ( ( <name3> / <name1> ) * ( <name6> / <name1> ) * <name5> ) )
<name4> から <name5> を引いた値が <val3> より小さいとき、 <blk> <val3> を返す </blk>	if <name4> - <name5> < <val3> : <blk> return <val3> </blk>	\ if <name4> - <name5> < <val3> : <blk> return <val3> </blk>
<name5> の末尾に ( <name6> に <name3> を掛けた値、 <name2> に <name3> を掛けた値 ) の組を追加する	<name5> . append ( ( <name6> * <name3> , <name2> * <name3> ) )	<name5> . append ( ( <name6> * <name3> , <name2> * <name3> ) )
<val6> から <name5> に <val4> を加えた値の平方根の切り上げ整数値未満までの <val3> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , math . ceil ( math . sqrt ( <name5> + <val4> ) ) , <val3> ) :	, for <name1> in range ( <val6> , math . ceil ( math . sqrt ( <name5> + <val4> ) ) , <val3> ) :
<name5> を <val1> に <name4> を掛けた値分の一にする	<name5> /= <val1> * <name4>	( <name5> // = <val1> * <name4> )
<name3> から読み込んだ一行を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値から <val4> を引いた値を返す関数を適用した列の組を <name2> とする	<name2> = tuple ( map ( lambda <name1> : int ( <name1> ) - <val4> , <name3> . readline ( ) . split ( ) ) )	<name2> = tuple ( map ( lambda <name1> : int ( <name1> ) - <val4> , <name3> . readline ( ) . split ( ) ) )
<name1> ( <name2> [ <name6> ( <name4> ) ] )	<name1> ( <name2> [ <name6> ( <name4> ) ] )	set ( <name1> ( <name2> [ <name6> ( <name4> ) ] ) )
<name5> ( <name3> ( <name2> , <name1> ) , <name6> ) を <name4> とする	<name4> = <name5> ( <name3> ( <name2> , <name1> ) , <name6> )	<name4> = <name5> ( <name3> ( <name2> , <name1> ) , <name6> )
0 から <name6> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name1> とする	<name1> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name6> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name6> ) ]
[ MASK ] の両端キューを <name4> の <name3> にする	<name4> . <name3> = deque ( )	<name4> . <name3> = deque ( )
<name6> から読み込んだ一行の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name2> とする	<name2> = list ( map ( int , <name6> . readline ( ) . strip ( ) . split ( ) ) )	<name2> = list ( map ( int , <name6> . readline ( ) . strip ( ) . split ( ) ) )
<name6> を <val1> だけ右シフトした値の <val2> 進数文字列の <val2> 番目から、つまり末尾までの部分列を長さ <val4> になるように '0' 左詰めした文字列を出力する	print ( bin ( <name6> >> <val1> ) [ <val2> : ] . zfill ( <val4> ) )	str ( bin ( <name6> >> <val1> ) [ <val2> : ] . zfill ( <val4> ) )
<name3> の <name5> の <name2> 番目が <name1> と等しいとき、	if <name3> . <name5> [ <name2> ] == <name1> :	list if <name3> . <name5> [ <name2> ] == <name1> :
<name3> の <name1> 番目の <name4> 番目でないとき、	if not <name3> [ <name1> ] [ <name4> ] :	for <name3> in not <name3> [ <name1> ] [ <name4> ] :
<name3> の <name1> 番目を <name6> とする	<name6> = <name3> [ <name1> ]	else = <name3> [ <name1> ]
<name2> の <name5> 番目を <name4> 、 <name6> の最大値だけ増加させる	<name2> [ <name5> ] += max ( <name4> , <name6> )	<name2> [ <name5> ] += max ( <name4> , <name6> )
<name3> の <name4> の <name2> 番目番目の <name6> の <name2> 番目番目を <name1> とする	<name1> = <name3> [ <name4> [ <name2> ] ] [ <name6> [ <name2> ] ]	<name1> = <name3> [ <name4> [ <name2> ] ] [ <name6> [ <name2> ] ]
<val5> を <name1> の <name3> 番目の <name3> 番目とするを <name1> の先頭の <name3> 番目にする	<name1> [ 0 ] [ <name3> ] = <name1> [ <name3> ] [ <name3> ] = <val5>	now [ <name3> ] = <name1> [ <name3> ] [ <name3> ] = <val5>
<name1> が <name3> から <name4> を引いた値の <val6> 乗以下のとき、	if <name1> <= ( <name3> - <name4> ) ** <val6> :	list ( <name1> <= ( <name3> - <name4> ) ** <val6> ) :
( ( <name5> から <val6> を引いた値、 <name3> ) の組、 ( <name5> に <val6> を加えた値、 <name3> ) の組、 ( <name5> 、 <name3> から <val6> を引いた値 ) の組、 ( <name5> 、 <name3> に <val6> を加えた値 ) の組 ) からなる列の各要素を <name2> とし、 <val1> が <name2> [ <val1> ] 以下かつ <name2> [ <val1> ] が <name4> より小さくかつ <val1> が <name2> の <val6> 番目以下かつ <name2> の <val6> 番目が <name2> より小さいときの <name2> の列を <name4> とする	<name4> = [ <name2> for <name2> in [ ( <name5> - <val6> , <name3> ) , ( <name5> + <val6> , <name3> ) , ( <name5> , <name3> - <val6> ) , ( <name5> , <name3> + <val6> ) ] if ( <val1> <= <name2> [ <val1> ] and <name2> [ <val1> ] < <name4> and <val1> <= <name2> [ <val6> ] and <name2> [ <val6> ] < <name2> ) ]	<name2> = [ [ <name5> - <val6> , <name3> ) for <name2> , <name2> in zip ( <name5> - <val6> , <name3> ) , ( <name5> + <val6> , <name3> ) , ( <name5> , <name3> - <val6> ) , ( <name5> , <name3> + <val6> ) ]
<name6> をソートする	<name6> . sort ( )	<name6> . sort ( )
<name2> ( <val4> , <val4> , <val4> , <name5> -1 , <val3> ) かつ <name2> ( <val4> , <name5> -1 , <name1> -1 , <name5> -1 , <val2> ) かつ <name2> ( <name1> -1 , <name5> -1 , <name1> -1 , <val4> , <val6> ) かつ <name2> ( <name1> -1 , <val4> , <val4> , <val4> , <val4> ) のとき、	if <name2> ( <val4> , <val4> , <val4> , <name5> - <val6> , <val3> ) and <name2> ( <val4> , <name5> - <val6> , <name1> - <val6> , <name5> - <val6> , <val2> ) and <name2> ( <name1> - <val6> , <name5> - <val6> , <name1> - <val6> , <val4> , <val6> ) and <name2> ( <name1> - <val6> , <val4> , <val4> , <val4> , <val4> ) :	if <name2> ( <val4> , <val4> , <val4> , <name5> - <val4> , <val3> ) and <name2> ( <val4> , <name5> - <val2> , <name1> - <val2> , <name5> - <val6> , <val2> ) and <name2> ( <name1> - <val6> , <name1> - <val6> , <val4> , <val6> ) and <name2> ( <name1> , <val4> , <val4> , <val4> ) :
<name6> から <name5> [ : <name2> ] の総和に <val1> を掛けた値を引いた値から <name3> に <name4> から <name2> に <val1> を掛けた値を引いた値を掛けた値を引いた値に <val1> を掛けた値を <name4> とする	<name4> = ( <name6> - sum ( <name5> [ : <name2> ] ) * <val1> - <name3> * ( <name4> - <name2> * <val1> ) ) * <val1>	<name4> = ( <name6> - sum ( <name5> [ : <name2> ] ) * <val1> - <name3> * ( <name4> - <name2> * <val1> ) ) * <val1>
<name2> ( <name5> . <name6> [ <val3> : ] )	<name2> ( <name5> . <name6> [ <val3> : ] )	<name2> ( <name5> . <name6> [ <val3> : ] )
<name1> に <val4> を加えた値から <name6> に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> + <val4> , <name6> + <val4> ) :	. for <name2> in range ( <name1> + <val4> , <name6> + <val4> ) :
<name1> に <name6> ( <name4> + <val2> + <name5> , <name3> , <val2> ) を追加した集まり	<name1> . add ( <name6> ( <name4> + <val2> + <name5> , <name3> , <val2> ) )	<name1> . add ( <name6> ( <name4> + <val2> + <name5> , <name3> , <val2> ) )
<name6> ( <name5> . <name2> , <name1> ) を <name3> とする	<name3> = <name6> ( <name5> . <name2> , <name1> )	else = <name6> ( <name5> . <name2> , <name1> )
<name6> から <name3> を引いた値の <val1> 乗に <name5> から <name2> を引いた値の <val1> 乗を加えた値の . <val4> 乗を <name4> とする	<name4> = ( ( <name6> - <name3> ) ** <val1> + ( <name5> - <name2> ) ** <val1> ) ** . <val4>	str <name4> = ( ( <name6> - <name3> ) ** <val1> + ( <name5> - <name2> ) ** <val1> ) ** . <val4>
<name1> を <name6> で割った余りにする	<name1> % = <name6>	( <name1> % = <name6> )
( <name5> ) からなる列の <name2> 回分の列を <name6> とする	<name6> = [ <name5> ] * <name2>	<name6> = [ <name5> ] * <name2>
<name1> が <name2> 以下かつ <name2> が <name3> 以下かつ <name5> <= <name6> かつ <name5> <= <name4> かつ <name4> が <name6> 以下かどうかと <name5> > <name6> かつ <name6> <= <name4> かつ <name4> が <name5> 以下かどうかの論理和かつ <name4> から <name5> を引いた値に <name3> から <name1> を引いた値を掛けた値が <name6> から <name5> を引いた値に <name2> から <name1> を引いた値を掛けた値と等しいかどうかを返す	return <name1> <= <name2> and <name2> <= <name3> and ( ( <name5> <= <name6> and <name5> <= <name4> and <name4> <= <name6> ) | ( <name5> > <name6> and <name6> <= <name4> and <name4> <= <name5> ) ) and ( <name4> - <name5> ) * ( <name3> - <name1> ) == ( <name6> - <name5> ) * ( <name2> - <name1> )	<name5> = <name1> <= <name2> and ( ( <name2> <= <name3> and <name5> <= <name6> ) and ( <name5> <= <name4> and <name4> <= <name6> ) | ( <name6> and <name4> <= <name5> ) ) and ( <name4> - <name5> ) * ( <name3> - <name1> ) == ( <name6> - <name5> ) * ( <name5> - <name1> ) )
<name1> が <name4> と等しくないとき、 <blk> <name2> の <name4> 番目と <name2> の <name1> 番目を入れ替える <sep> <name3> を <val6> だけ増加させる </blk>	if <name1> != <name4> : <blk> <name2> [ <name4> ] , <name2> [ <name1> ] = <name2> [ <name1> ] , <name2> [ <name4> ] <sep> <name3> += <val6> </blk>	\ <name1> != <name4> : <blk> <name2> [ <name4> ] = <name2> [ <name1> ] , <name3> += <val6> </blk>
文字コード <name5> ( <name6> ) から <name5> ( <val4> ) を引いた値に <name2> を加えた値を <val3> で割った余りに <val4> の順序数を加えた値の文字を <name6> とする	<name6> = chr ( ( <name5> ( <name6> ) - <name5> ( <val4> ) + <name2> ) % <val3> + <name5> ( <val4> ) )	else = chr ( ( <name5> ( <name6> ) - <name5> ( <val4> ) + <name2> ) % <val3> + ord ( <val4> ) )
( ( <name2> ) からなる列の 0 から <name1> に <val3> を加えた値未満までの数列の各要素を <name5> とし、 <name1> に <val3> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <name2> ] * [ ( <name1> + <val3> ) for <name5> in range ( <name1> + <val3> ) ] ]	<name4> = [ [ <name2> ] * [ ( <name1> + <val3> ) for <name5> in range ( <name1> + <val3> ) ] ]
<name4> の <name5> の <name2> 番目の先頭番目を <name3> とする	<name3> = <name4> [ <name5> [ <name2> ] [ 0 ] ]	<name2> = <name4> [ <name5> [ <name2> ] [ 0 ] ]
<name2> の <name3> 番目の値の集まりの最大値を出力する	print ( max ( <name2> [ <name3> ] . values ( ) ) )	print ( max ( <name2> [ <name3> ] . values ( ) ) )
<name1> が <name6> と等しいかどうかが <val2> と等しいとき、	if <name1> == <name6> == <val2> :	: if <name1> == <name6> == <val2> :
<val2> に <name6> を掛けた値に <name6> を掛けた値を <name3> とする	<name3> = <val2> * <name6> * <name6>	<name3> = <val2> * <name6> * <name6>
<name5> ( <name3> , <name1> ) を <name5> ( <name3> , <name3> ) で割った値を返す	return <name5> ( <name3> , <name1> ) / <name5> ( <name3> , <name3> )	yield <name5> ( <name3> , <name1> ) / <name5> ( <name3> , <name3> )
<name6> の文字列を <val1> で分割した字句列を <name3> とする	<name3> = str ( <name6> ) . split ( <val1> )	<name3> = str ( <name6> ) . split ( <val1> )
<name4> に <val3> を加えた値に <name4> に <val6> を加えた値を掛けた値に <name4> に <val1> を加えた値を掛けた値を <val5> で割った値を <name2> とする	<name2> = ( <name4> + <val3> ) * ( <name4> + <val6> ) * ( <name4> + <val1> ) / <val5>	input = ( <name4> + <val3> ) * ( <name4> + <val6> ) * ( <name4> + <val1> ) / <val5>
<name5> を <val6> で割った商を <name2> とする	<name2> = <name5> // <val6>	<name2> = <name5> // <val6>
0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり集合の列を <name2> とする	<name2> = [ set ( ) for <name5> in range ( <name6> ) ]	set = [ set ( ) for <name5> in range ( <name6> ) ]
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = map ( int , input ( ) . split ( <val5> ) )	<name1> , <name3> = map ( int , input ( ) . split ( <val5> ) )
<name1> の <name2> の <name3> の <name4> の <name6> 番目を順に <name5> として、繰り返す	for <name5> in <name1> . <name2> . <name3> [ <name4> . <name6> ] :	. for <name5> in <name1> . <name2> . <name3> [ <name4> . <name6> ] :
( <val3> の浮動小数点数 ) からなる列の <name6> 回分の列を <name5> とする	<name5> = [ float ( <val3> ) ] * <name6>	( <name5> = [ float ( <val3> ) ] * <name6> )
<name6> . <name4> ( <name1> ) に <val5> を掛けた値から <name1> を引いた値を返す	return <name6> . <name4> ( <name1> ) * <val5> - <name1>	x return <name6> . <name4> ( <name1> ) * <val5> - <name1>
<name5> を <val6> で割った余りを <name4> とする <name5> を <val6> 分の一にする	<name4> = <name5> % <val6> <name5> // = <val6>	<name2> = <name5> % <val6> <name5> // = <val6>
<name5> のキーの集まりの <name6> 番目が、つまり未定値と等しくないとき、	if <name5> . keys [ <name6> ] is None :	if <name5> . keys [ <name6> ] != None :
0 から <name4> に <val2> を加えた値未満までの数列の各要素を <name1> とし、、つまり未定値の列を <name5> とする	<name5> = [ None for <name1> in range ( <name4> + <val2> ) ]	<name5> = [ None for <name1> in range ( <name4> + <val2> ) ]
<name5> の <name2> 番目を <val3> だけ増加させる	<name5> [ <name2> ] += <val3>	<name2> [ <name2> ] += <val3>
<name3> の <name5> 番目の <name4> 番目に <val6> を加えた値を <name3> の <name1> 番目の <name2> 番目にする	<name3> [ <name1> ] [ <name2> ] = <name3> [ <name5> ] [ <name4> ] + <val6>	<name3> [ <name1> ] [ <name2> ] = <name3> [ <name5> ] [ <name4> ] + <val6>
<name3> の <name4> の <val2> 番目番目の <name4> の先頭番目が <val1> と等しいとき、	if <name3> [ <name4> [ <val2> ] ] [ <name4> [ 0 ] ] == <val1> :	while <name3> [ <name4> [ <val2> ] ] [ <name4> [ <val1> ] ] == <val1> :
<name1> ( <name2> . <name6> . <name3> + <name4> * <name2> . <name3> , <name2> . <name6> . <name5> + <name4> * <name2> . <name5> ) を返す	return <name1> ( <name2> . <name6> . <name3> + <name4> * <name2> . <name3> , <name2> . <name6> . <name5> + <name4> * <name2> . <name5> )	yield <name1> ( <name2> . <name6> . <name3> + <name4> * <name2> . <name3> , <name2> . <name6> . <name5> + <name4> * <name2> . <name5> )
次は例外に関する条件がある <blk> <name3> の <name5> の <val6> 番目を取り出した値 </blk>	try : <blk> <name3> . pop ( <name5> [ <val6> ] ) </blk>	: try ( <name3> . pop ( <name5> [ <val6> ] ) ) : <blk> <name3> . pop ( <name5> [ <val6> ] ) </blk>
<name6> 、 <name5> に <name1> を加えた値の最小値を <name6> とする	<name6> = min ( <name6> , <name5> + <name1> )	<name6> = min ( <name6> , <name5> + <name1> )
<name3> の先頭の整数値を <name2> とする	<name2> = int ( <name3> [ 0 ] )	<name2> = int ( <name3> [ 0 ] )
<name4> の <name5> 番目が <name4> の <name1> 番目に <name6> を加えた値より大きいとき、	if <name4> [ <name5> ] > <name4> [ <name1> ] + <name6> :	if <name4> [ <name5> ] > <name4> [ <name1> ] + <name6> :
<name2> を <name6> の <name1> の <name5> にする	<name6> . <name1> . <name5> = <name2>	( <name6> . <name1> . <name5> = <name2> )
<name3> の <name5> 番目に <val2> を加えた値を <name1> とする	<name1> = <name3> [ <name5> ] + <val2>	<name1> = <name3> [ <name5> ] + <val2>
<name3> の <name6> から <val5> を引いた値から <name2> から <name4> を引いた値を引いた値番目の <name6> から <val5> を引いた値から <name4> を引いた値番目が <val1> より大きいとき、	if <name3> [ <name6> - <val5> - ( <name2> - <name4> ) ] [ <name6> - <val5> - <name4> ] > <val1> :	list ( <name3> [ <name6> - <val5> - ( <name2> - <name4> ) ] [ <name6> - <val5> - <name4> ] > <val1> :
<name1> が <name6> 以下のとき、	if <name1> <= <name6> :	list ( <name1> <= <name6> ) :
<name1> の先頭を除いた部分列の集合を <name6> とする	<name6> = set ( <name1> [ 1 : ] )	} <name6> = set ( <name1> [ 1 : ] )
<name4> ( <name1> , <name5> , <name3> , <name6> ) のとき、	if <name4> ( <name1> , <name5> , <name3> , <name6> ) :	isinstance ( <name4> ( <name1> , <name5> , <name3> , <name6> ) ) :
<name3> の <name6> 、 <name3> の <name1> を出力する	print ( <name3> . <name6> , <name3> . <name1> )	print ( <name3> . <name6> , <name3> [ <name1> ] )
<name6> の <name1> の <name4> 番目を <name4> とする	<name4> = <name6> . <name1> [ <name4> ]	<name4> = <name6> . <name1> [ <name4> ]
<name6> の -2 番目を <name1> の ( <name4> 、 <name3> ) の組番目にする	<name1> [ ( <name4> , <name3> ) ] = <name6> [ - 2 ]	<name2> [ ( <name4> , <name3> ) ] = <name6> [ - 2 ]
<name5> の <name2> の先頭番目を <name5> の <name2> の <val1> 番目番目にする	<name5> [ <name2> [ <val1> ] ] = <name5> [ <name2> [ 0 ] ]	( <name5> [ <name2> [ <val1> ] ] = <name5> [ <name2> [ 0 ] ] )
<val3> に <name1> を掛けた値に <val2> を加えた値を <name4> とする	<name4> = <val3> * <name1> + <val2>	<name4> = <val3> * <name1> + <val2>
( <name2> ) からなる列の <name3> から <val4> を引いた値回分の列を <name5> とする ( <name2> ) からなる列の <name3> から <val4> を引いた値回分の列を <name6> とする	<name5> = [ <name2> ] * ( <name3> - <val4> ) <name6> = [ <name2> ] * ( <name3> - <val4> )	else = [ <name2> ] * ( <name3> - <val4> ) <name6> = [ <name2> ] * ( <name3> - <val4> )
ABC を <name3> とする	<name3> = 'ABC'	( <name3> = 'ABC' )
<val5> から <name1> 未満までの数列の各要素を <name2> とし、 <name6> ( <name3> , <name4> [ <name2> ] , <name2> , <name5> ) でないときの <name2> の列を <name4> とする	<name4> = [ <name2> for <name2> in range ( <val5> , <name1> ) if not <name6> ( <name3> , <name4> [ <name2> ] , <name2> , <name5> ) ]	<name4> = [ <name2> for <name2> in range ( <name1> ) if not <name6> ( <name3> , <name4> [ <name2> ] , <name2> , <name5> ) ]
<name3> が <name1> の <name5> に <val2> を加えた値番目より大きいとき、 <blk> <name6> を <name3> から <name1> の <name5> に <val2> を加えた値番目を引いた値だけ増加させる </blk>	if <name3> > <name1> [ <name5> + <val2> ] : <blk> <name6> += <name3> - <name1> [ <name5> + <val2> ] </blk>	if <name3> > <name1> [ <name5> + <val2> ] : <blk> <name6> += <name3> - <name1> [ <name5> + <val2> ] </blk>
<name1> から <val6> を引いた値、 <name5> から <val6> を引いた値を <name1> 、 <name5> とする	<name1> , <name5> = <name1> - <val6> , <name5> - <val6>	<name1> , <name5> = <name1> - <val6> , <name5> - <val6>
<name6> ( <name4> ) を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name6> ( <name4> )	<name6> , <name3> , <name5> = <name6> ( <name4> )
os . <name1> の <name3> と等しい要素の最初の位置を <name4> とする	<name4> = <name1> . index ( <name3> )	<name4> = <name1> . index ( <name3> )
<name4> . <name1> ( <name2> + <val5> + <name6> , <name2> + <name3> + <val5> , <val5> , <val4> )	<name4> . <name1> ( <name2> + <val5> + <name6> , <name2> + <name3> + <val5> , <val5> , <val4> )	( <name4> . <name1> ( <name2> + <val5> + <name6> , <name2> + <name3> + <val5> , <val5> , <val4> ) )
<name2> ( <name1> , <name3> ) を <name6> とする	<name6> = <name2> ( <name1> , <name3> )	<name6> = <name2> ( <name1> , <name3> )
0 から <name1> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name2> の <name6> にする	<name2> . <name6> = [ [ ] for <name5> in range ( <name1> ) ]	<name3> . <name6> = [ [ ] for <name5> in range ( <name1> ) ]
<name2> の <name1> を <name1> とする <name2> の <name6> を <name6> とする	<name1> = <name2> . <name1> <name6> = <name2> . <name6>	<name1> = <name2> . <name1> <name6> = <name2> . <name6>
<val5> を書式として <name3> 、 <name4> で整形した文字列を <name1> とする	<name1> = <val5> . format ( <name3> , <name4> )	<name1> = <val5> . format ( <name3> , <name4> )
<name5> 、 <name4> から <name6> の逆順の <name2> と等しい要素の最初の位置を引いた値から <val3> を引いた値の最大値を <name5> とする	<name5> = max ( <name5> , <name4> - <name6> [ : : - <val3> ] . index ( <name2> ) - <val3> )	<name6> = max ( <name5> , <name4> - <name6> [ : : - <val3> ] . index ( <name2> ) - <val3> )
<name6> の末尾に ( <val4> ) からなる列の <name3> に <val1> を加えた値回分の列を追加する	<name6> . append ( [ <val4> ] * ( <name3> + <val1> ) )	<name6> . append ( [ <val4> ] * ( <name3> + <val1> ) )
<name1> が <val2> に <name4> を掛けた値より大きいとき、	if <name1> > <val2> * <name4> :	if <name1> > <val2> * <name4> :
<name6> が <val1> と等しくまたは <name5> が <name2> より大きいとき、	if <name6> == <val1> or <name5> > <name2> :	> if <name6> == <val1> or <name5> > <name2> :
<name6> の <name2> の整数値から <val3> を引いた値番目を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <name6> [ int ( <name2> ) - <val3> ]	<name1> [ <name4> ] = <name6> [ int ( <name2> ) - <val3> ]
<name2> 、 <name3> の <name5> と等しい要素の最初の位置の最小値を <name2> とする	<name2> = min ( <name2> , <name3> . index ( <name5> ) )	<name2> = min ( <name2> , <name3> . index ( <name5> ) )
<name2> の末尾に ( <name4> 、 <name5> ) からなる列を追加する	<name2> . append ( [ <name4> , <name5> ] )	<name1> . append ( [ <name4> , <name5> ] )
<name4> の <name3> 番目に <name5> の <name3> 番目が <val2> と等しいかどうかを加えた値を <name4> の <name3> に <val6> を加えた値番目にする	<name4> [ <name3> + <val6> ] = <name4> [ <name3> ] + ( <name5> [ <name3> ] == <val2> )	<name4> [ <name3> + <val6> ] = <name4> [ <name3> ] + ( <name5> [ <name3> ] == <val2> )
0 から <name3> 未満までの数列の各要素を <name5> とし、 <name2> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name1> とする	<name1> = [ tuple ( map ( int , <name2> ( ) . split ( ) ) ) for <name5> in range ( <name3> ) ]	<name6> = [ tuple ( map ( int , <name2> ( ) . split ( ) ) ) for <name5> in range ( <name3> ) ]
<name6> の <name3> が <name4> の <name3> より小さいとき、	if <name6> . <name3> < <name4> . <name3> :	isinstance ( <name6> . <name3> < <name4> . <name3> ) :
<name2> を開始番号として <name5> の <name2> 番目から <name2> に <val1> を掛けた値に <val6> を加えた値までの部分列、 <name5> の要素をそれぞれ組にした列に番号付した組の列を順に <name3> 、 <name4> として、繰り返す	for <name3> , <name4> in enumerate ( zip ( <name5> [ <name2> : <name2> * <val1> + <val6> ] , <name5> ) , start = <name2> ) :	len , <name3> , <name4> in enumerate ( zip ( <name5> [ <name2> ] : <name2> * <val1> + <val6> ] , <name5> ) , start = <name2> ) :
<name4> の <val2> 番目から <name4> の <val3> 番目を引いた値を <name1> とする	<name1> = <name4> [ <val2> ] - <name4> [ <val3> ]	<name1> = <name4> [ <val2> ] - <name4> [ <val3> ]
<name1> の <val3> から <name5> を引いた値番目の <name4> 番目を <name6> の <name4> 番目の <name5> 番目にする	<name6> [ <name4> ] [ <name5> ] = <name1> [ <val3> - <name5> ] [ <name4> ]	<name6> [ <name4> ] [ <name5> ] = <name1> [ <val3> - <name5> ] [ <name4> ]
<name2> の x 座標を <name5> とする	<name5> = <name2> . x	<name5> = <name2> . x
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name3> 、 <name4> とする	<name1> , <name3> , <name4> = list ( map ( int , input ( ) . split ( ) ) )	<name3> , <name4> = list ( map ( int , input ( ) . split ( ) ) )
<name2> に ( <name5> 、 <name1> ) の組を追加した集まり	<name2> . add ( ( <name5> , <name1> ) )	not <name2> . add ( ( <name5> , <name1> ) )
<name1> の最大値を <name6> とする	<name6> = max ( <name1> )	else = max ( <name1> )
<name4> ( <name5> , <name2> , <name3> * <val6> + <val1> , <name4> , ( <name4> + <name5> ) // <val6> ) を <name1> とする	<name1> = <name4> ( <name5> , <name2> , <name3> * <val6> + <val1> , <name4> , ( <name4> + <name5> ) // <val6> )	<name1> = <name4> ( <name5> , <name2> , <name3> * <val6> + <val1> , <name4> , ( <name4> + <name5> ) // <val6> )
<name1> から <val5> を引いた値を <name6> とする	<name6> = <name1> - <val5>	( <name6> = <name1> - <val5> )
ソートされた順序を保ったまま <name3> から <name5> を引いた値を <name2> に挿入できる最後の位置を <name1> とする	<name1> = bisect_right ( <name2> , <name3> - <name5> )	<name1> = bisect_right ( <name2> , <name3> - <name5> )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> 、 <name2> 、 <name6> とする	<name4> , <name5> , <name2> , <name6> = map ( int , <name1> ( ) . split ( ) )	<name5> , <name2> , <name6> = map ( int , <name1> ( ) . split ( ) )
( <name2> から <name5> を引いた値、 <name1> から <name4> を引いた値 ) の組を <name6> とする	<name6> = ( <name2> - <name5> , <name1> - <name4> )	<name6> = ( <name2> - <name5> , <name1> - <name4> )
<name2> の <name4> から <name5> を引いた値番目に <name6> の <name1> 番目を加えた値を <name2> の <name4> から <name5> を引いた値に <name3> の <name1> 番目を加えた値番目にする	<name2> [ <name4> - <name5> + <name3> [ <name1> ] ] = <name2> [ <name4> - <name5> ] + <name6> [ <name1> ]	<name2> [ <name4> - <name5> + <name3> [ <name1> ] ] = <name2> [ <name4> - <name5> ] + <name6> [ <name1> ]
<name6> の <name4> に <val3> ?' を加えた値を <name2> とする	<name2> = <name6> . <name4> + <val3> ?'	<name2> = <name6> . <name4> + <val3>
<name6> を <name5> の <name2> から <val1> を引いた値番目だけ増加させる	<name6> += <name5> [ <name2> - <val1> ]	( <name6> += <name5> [ <name2> - <val1> ] )
<name4> に <name4> を加えた値を <name4> とする	<name4> = <name4> + <name4>	<name4> = <name4> + <name4>
<name2> ( <name4> . <name3> + <name1> . <name3> , <name4> . <name5> + <name1> . <name5> ) を返す	return <name2> ( <name4> . <name3> + <name1> . <name3> , <name4> . <name5> + <name1> . <name5> )	x return <name2> ( <name4> . <name3> + <name1> . <name3> , <name4> . <name5> + <name1> . <name5> )
<name6> が <val1> と等しくないとき、	if <name6> != <val1> :	for <name6> != <val1> :
<name6> の <name1> 番目の <name3> を <name5> とする	<name5> = <name6> [ <name1> ] . <name3>	( <name5> = <name6> [ <name1> ] . <name3> )
<name2> ( <name5> , <name3> , <name1> = <val4> ) を <name6> とする	<name6> = <name2> ( <name5> , <name3> , <name1> = <val4> )	<name6> = <name2> ( <name5> , <name3> , <name1> = <val4> )
<name4> の <name1> 番目を追加して <name6> を拡張する	<name6> . extend ( <name4> [ <name1> ] )	<name6> . extend ( <name4> [ <name1> ] )
<name1> が <name6> 以上のとき、	if <name1> >= <name6> :	if <name1> >= <name6> :
<val5> から <name1> に <val5> を加えた値未満までの数列のリストを <name2> とする	<name2> = list ( range ( <val5> , <name1> + <val5> ) )	<name2> = list ( range ( <val5> , <name1> + <val5> ) )
<name1> かつ <name1> の先頭の <val2> 番目が <name4> 以下の間、次を繰り返す	while <name1> and <name1> [ <val2> ] [ <val2> ] <= <name4> :	del <name1> and <name1> [ 0 ] [ <val2> ] <= <name4> :
0 から <val1> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> ) :	str for <name4> in range ( <val1> ) :
<name3> の <val6> と等しい要素の最初の位置を <name1> とする	<name1> = <name3> . index ( <val6> )	<name1> = <name3> . index ( <val6> )
<name5> の末尾に <name4> の <val1> 番目を追加する	<name5> . append ( <name4> [ <val1> ] )	<name1> . append ( <name4> [ <val1> ] )
<name6> 、 <name1> の <name4> から <val3> を引いた値番目の最小値を <name1> の <name4> から <val3> を引いた値番目にする	<name1> [ <name4> - <val3> ] = min ( <name6> , <name1> [ <name4> - <val3> ] )	<name1> [ <name4> - <val3> ] = min ( <name6> , <name1> [ <name4> - <val3> ] )
<name4> を <name1> の <name6> から <val3> を引いた値番目倍にする	<name4> *= <name1> [ <name6> - <val3> ]	( <name4> *= <name1> [ <name6> - <val3> ] )
<val4> から <val5> 未満までの <val3> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> , <val5> , <val3> ) :	continue for <name6> in range ( <val4> , <val5> , <val3> ) :
<name6> が <val4> より小さいとき、	if <name6> < <val4> :	list ( <name6> < <val4> ) :
sample - input . txt 、 <val4> を開いたファイルストリームを <name2> の <name6> にする	<name2> . <name6> = open ( 'sample-input.txt' , <val4> )	<name2> . <name6> = open ( 'sample-input.txt' , <val4> )
<name3> の <name6> を返す	return <name3> . <name6>	yield <name3> . <name6>
<name6> の <val2> 乗から <name3> を引いた値の絶対値が <val4> に <name3> を掛けた値より小さいとき、	if abs ( <name6> ** <val2> - <name3> ) < <val4> * <name3> :	isinstance ( abs ( <name6> ** <val2> - <name3> ) < <val4> * <name3> ) :
<name6> を <name1> だけ減少させる <name4> を <name2> だけ減少させる	<name6> -= <name1> <name4> -= <name2>	<name1> -= <name1> <name4> -= <name2>
<name5> の ( <name3> 、 <val2> ) の組番目に <name1> を加えた値を <name4> で割った余りを <name5> の ( <name3> 、 <val2> ) の組番目にする	<name5> [ ( <name3> , <val2> ) ] = ( <name5> [ ( <name3> , <val2> ) ] + <name1> ) % <name4>	) <name5> [ ( <name3> , <val2> ) ] = ( <name5> [ ( <name3> , <val2> ) ] + <name1> ) % <name4>
<name4> の <name6> 番目の <val1> 番目が <name4> の <name2> 番目の <val1> 番目より小さいとき、	if <name4> [ <name6> ] [ <val1> ] < <name4> [ <name2> ] [ <val1> ] :	if <name4> [ <name6> ] [ <val1> ] < <name4> [ <name2> ] [ <val1> ] :
<name1> の <name5> に [ MASK ] を書き込むを <name2> とする	<name2> = <name1> . <name5> . <name2>	<name1> . <name2> = <name1> . <name5> . <name2>
<name5> が <name2> に <name3> を加えた値以上のとき、	if <name5> >= <name2> + <name3> :	>= <name5> >= <name2> + <name3> :
<name6> の <name3> の <name1> 番目の <name6> . <name3> の <name2> [ <name1> ] 番目の <name5> の <name1> 番目番目の <name4> 番目の <name6> を <name3> だけ増加させる	<name6> . <name3> [ <name1> ] [ <name6> . <name3> [ <name2> [ <name1> ] ] [ <name5> [ <name1> ] ] . <name4> ] . <name6> += <name3>	( <name6> . <name3> [ <name1> ] [ <name6> . <name3> [ <name2> [ <name1> ] ] [ <name5> [ <name1> ] ] [ <name4> ] . <name6> += <name3> )
( ( 、つまり未定値 ) からなる列の 0 から <name1> 未満までの数列の各要素を <name3> とし、 <name1> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ None ] * [ <name1> for <name3> in range ( <name1> ) ] ]	<name2> = [ [ None ] * [ <name1> for <name3> in range ( <name1> ) ] ]
<name2> の <name3> の <val6> 番目番目の長さが <val4> と等しくないとき、	if len ( <name2> [ <name3> [ <val6> ] ] ) != <val4> :	raise len ( <name2> [ <name3> [ <val6> ] ] ) != <val4> :
<name4> の <name5> に <val6> を加えた値番目に <name1> から <val6> を引いた値を追加した集まり	<name4> [ <name5> + <val6> ] . add ( <name1> - <val6> )	<name1> [ <name5> + <val6> ] . add ( <name1> - <val6> )
<name5> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name1> とする	<name3> , <name6> , <name1> = map ( int , <name5> . split ( ) )	<name3> , <name6> , <name1> = map ( int , <name5> . split ( ) )
% . 8 f % . 8 f を <name6> とする	<name6> = '%.8f %.8f'	( <name6> = {1:.5f}' ) . isalpha ( )
<name4> の <name5> を返す	return <name4> . <name5>	yield <name4> . <name5>
<val2> <name6> <val3> を <name1> とする	<name1> = <val2> <name6> <val3>	<name1> = <val2> <name6> <val3>
<name1> の <val6> 番目、 <name1> の <val2> 番目を <name4> 、 <name5> とする	<name4> , <name5> = <name1> [ <val6> ] , <name1> [ <val2> ]	<name3> , <name5> = <name1> [ <val6> ] , <name1> [ <val2> ]
<name3> が ( <val2> ) からなる列と等しいとき、	if <name3> == [ <val2> ] :	[ if <name3> == [ <val2> ] :
<name5> から <name4> から <val3> を引いた値未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> , <name4> - <val3> , - <val3> ) :	for <name6> in range ( <name5> , <name4> - <val3> , - <val3> ) :
<val2> に <name4> を掛けた値に <name5> を加えた値を <val6> で割った値、 <val2> に <name1> を掛けた値に <name3> を加えた値を <val6> で割った値を <name1> 、 <name3> とする	<name1> , <name3> = ( <val2> * <name4> + <name5> ) / <val6> , ( <val2> * <name1> + <name3> ) / <val6>	<name1> , <name3> = ( <val2> * <name4> + <name5> ) / <val6> , ( <val2> * <name1> + <name3> ) / <val6>
<name3> ( <name1> [ <val5> ] , <name4> ) 、 <name3> ( <name1> [ <val2> ] , <name4> ) を <name2> 、 <name6> とする	<name2> , <name6> = <name3> ( <name1> [ <val5> ] , <name4> ) , <name3> ( <name1> [ <val2> ] , <name4> )	<name2> , <name6> = <name3> ( <name1> [ <val5> ] , <name4> ) , <name3> ( <name1> [ <val2> ] , <name4> )
( <name1> の先頭から <name6> の先頭を引いた値、 <name1> の <val4> 番目から <name6> の <val4> 番目を引いた値 ) からなる列を <name3> とする	<name3> = [ <name1> [ 0 ] - <name6> [ 0 ] , <name1> [ <val4> ] - <name6> [ <val4> ] ]	else = [ <name1> [ 0 ] - <name6> [ 0 ] , <name1> [ <val4> ] - <name6> [ <val4> ] ]
<val5> の -9 乗を <name3> とする	<name3> = <val5> ** - 9	<name4> = <val5> ** - 3
入力された文字列を空白で分割した字句列を展開し、それぞれ <name6> 、 <name1> 、 <name4> とする	<name6> , <name1> , <name4> = input ( ) . split ( )	<name3> , <name1> , <name4> = input ( ) . split ( )
<val5> を <name2> とする <name4> に <name1> を掛けた値を <name3> とする	<name2> = <val5> <name3> = <name4> * <name1>	<name1> = <name2> = <val5> <name3> = <name4> * <name1>
<name1> ( <name4> . <name2> [ <val3> : ] )	<name1> ( <name4> . <name2> [ <val3> : ] )	<name1> ( <name4> . <name2> [ <val3> : ] )
<name6> の末尾に <name2> の <name1> に <val4> を加えた値番目を追加する	<name6> . append ( <name2> [ <name1> + <val4> ] )	<name4> . append ( <name2> [ <name1> + <val4> ] )
<name6> の <name2> 番目を展開し、それぞれ <name4> 、 <name5> とする <name4> の <name5> 番目を展開し、それぞれ <name3> 、 <name1> とする	<name4> , <name5> = <name6> [ <name2> ] <name3> , <name1> = <name4> [ <name5> ]	<name1> , <name5> = <name6> [ <name2> ] <name3> , <name1> = <name4> [ <name5> ]
<name4> の <name2> 番目の末尾に ( <name6> 、 <name1> に <name3> を掛けた値 ) の組を追加する	<name4> [ <name2> ] . append ( ( <name6> , <name1> * <name3> ) )	<name3> [ <name2> ] . append ( ( <name6> , <name1> * <name3> ) )
<name4> ( <name1> . <name3> - <name2> . <name3> , <name1> . <name5> - <name2> . <name5> ) を返す	return <name4> ( <name1> . <name3> - <name2> . <name3> , <name1> . <name5> - <name2> . <name5> )	x return <name4> ( <name1> . <name3> - <name2> . <name3> , <name1> . <name5> - <name2> . <name5> )
<name5> の <val2> 番目を <val3> だけ増加させる	<name5> [ <val2> ] += <val3>	<name2> [ <val2> ] += <val3>
<name2> の末尾の <name6> 番目を <name2> の <name6> 番目の -1 番目にする	<name2> [ <name6> ] [ - 1 ] = <name2> [ - 1 ] [ <name6> ]	<name1> [ <name6> ] [ - 1 ] = <name2> [ - 1 ] [ <name6> ]
<name2> ( <name3> . <name5> , ( <name6> . <name4> ( ) , <name1> ) )	<name2> ( <name3> . <name5> , ( <name6> . <name4> ( ) , <name1> ) )	<name2> ( <name3> . <name5> , ( <name6> . <name4> ( ) , <name1> ) )
<name6> の <name5> 番目の <name3> 番目を <name6> の <name5> に <val2> を加えた値番目の <name3> 番目にする	<name6> [ <name5> + <val2> ] [ <name3> ] = <name6> [ <name5> ] [ <name3> ]	<name4> [ <name5> + <val2> ] [ <name3> ] = <name6> [ <name5> ] [ <name3> ]
( <val1> 、 <val2> 、 <val5> ) からなる列を <name3> とする	<name3> = [ <val1> , <val2> , <val5> ]	else = [ <val1> , <val2> , <val5> ]
<name4> . <name5> ( <name1> , <name2> , <name4> . <name6> , <val3> )	<name4> . <name5> ( <name1> , <name2> , <name4> . <name6> , <val3> )	( <name4> . <name5> ( <name1> , <name2> , <name4> . <name6> , <val3> ) )
<name3> を <name2> の <name6> の先頭番目にする	<name2> [ <name6> [ 0 ] ] = <name3>	<name4> [ <name2> [ <name6> [ 0 ] ] = <name3>
( <val1> 、 <val1> ) からなる列に ( <val2> ) からなる列の <val3> 回分の列を加えた値を <name6> とする	<name6> = [ <val1> , <val1> ] + [ <val2> ] * <val3>	<name6> = [ <val1> , <val1> ] + [ <val2> ] * <val3>
<name6> の <name3> 番目の整数値を <name1> の <name4> 番目の <name3> 番目にする	<name1> [ <name4> ] [ <name3> ] = int ( <name6> [ <name3> ] )	dict [ <name1> [ <name4> ] [ <name3> ] = int ( <name6> [ <name3> ] )
<name1> の <name6> の <name5> 番目の末尾に <name4> を追加する	<name1> . <name6> [ <name5> ] . append ( <name4> )	. <name1> [ <name6> . <name5> ] . append ( <name4> )
<name4> ( <val2> , <name1> -1 ) を出力する	print ( <name4> ( <val2> , <name1> - 1 ) )	print ( <name4> ( <val2> , <name1> - 1 ) )
<name2> ( <name5> , <name6> , <name4> )	<name2> ( <name5> , <name6> , <name4> )	set ( <name2> ( <name5> , <name6> , <name4> ) )
<name4> ( <name3> )	<name4> ( <name3> )	str ( <name4> ( <name3> ) )
未定値を <name4> の <name6> の <name2> 番目の <name5> にする	<name4> . <name6> [ <name2> ] . <name5> = None	( <name4> . <name6> [ <name2> ] . <name5> = None )
未定値を <name2> の <name5> の <name4> にする	<name2> . <name5> . <name4> = None	<name2> . <name5> . <name4> = None
<name1> の <name6> のとき、	if <name1> . <name6> :	. if <name1> . <name6> :
<name3> の末尾に <name6> の <name4> 番目を追加する	<name3> . append ( <name6> [ <name4> ] )	<name3> . append ( <name6> [ <name4> ] )
( <val1> ) からなる列に入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを加えた値を <name5> とする	<name5> = [ <val1> ] + list ( map ( int , input ( ) . split ( ) ) )	<name5> = [ <val1> ] + list ( map ( int , input ( ) . split ( ) ) )
<name1> の末尾に <val3> から <val6> 未満までの数列の各要素を <name5> とし、 <val3> の列を追加する	<name1> . append ( [ <val3> for <name5> in range ( <val6> ) ] )	<name1> . append ( [ <val3> for <name5> in range ( <val6> ) ] )
<name5> の <name6> から読み込んだ一行の整数値を <name4> とする	<name4> = int ( <name5> . <name6> . readline ( ) )	<name4> = int ( <name5> . <name6> . readline ( ) )
<name2> を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name6> とする	<name6> = [ int ( <name1> ) for <name1> in <name2> . split ( ) ]	<name6> = [ int ( <name1> ) for <name1> in <name2> . split ( ) ]
<name4> ( <name1> , <name3> , <name6> , <val5> ) を <name2> とする	<name2> = <name4> ( <name1> , <name3> , <name6> , <val5> )	<name2> = <name4> ( <name1> , <name3> , <name6> , <val5> )
<val6> から <name2> の <val5> 乗の整数値に <val6> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , int ( <name2> ** <val5> ) + <val6> ) :	. for <name3> in range ( <val6> , int ( <name2> ** <val5> ) + <val6> ) :
<name5> ( <val3> ) エラーとなる	raise <name5> ( <val3> )	raise <name5> ( <val3> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name2> とする	<name4> , <name1> , <name2> = map ( int , input ( ) . split ( ) )	<name4> , <name1> , <name2> = map ( int , input ( ) . split ( ) )
-1 を <name2> の <name3> を <val5> で割った商番目の <name3> を <val5> で割った余り番目にする	<name2> [ <name3> // <val5> ] [ <name3> % <val5> ] = - 1	<name4> [ <name2> [ <name3> // <val5> ] [ <name3> % <val5> ] ] = - <val5>
<name3> の末尾に <name2> と <val5> の排他論理和を追加する	<name3> . append ( <name2> ^ <val5> )	<name1> . append ( <name2> ^ <val5> )
<name1> を <name6> の <name3> の <name1> 番目番目にする	<name6> [ <name3> [ <name1> ] ] = <name1>	<name6> [ <name3> [ <name1> ] ] = <name1>
<name6> の <name3> の <val4> 番目番目の先頭を取り出した値	<name6> [ <name3> [ <val4> ] ] . pop ( )	<name1> [ <name3> [ <val4> ] ] . pop ( )
<val2> に <name1> の文字列を加えた値を出力する	print ( <val2> + str ( <name1> ) )	print ( <val2> + str ( <name1> ) )
<name4> が <name3> の <name2> の <name3> の <name5> 番目と等しくないとき、	if <name4> != <name3> . <name2> [ <name3> . <name5> ] :	for <name4> != <name3> . <name2> [ <name3> . <name5> ] :
os . <name4> の -2 番目を <name5> とする	<name5> = <name4> [ - 2 ]	<name5> = <name4> [ - 2 ]
<name6> が <name5> の <name4> 番目より小さいとき、 <blk> <name4> を <name3> とする </blk>	if <name6> < <name5> [ <name4> ] : <blk> <name3> = <name4> </blk>	\ <name3> = <name6> < <name5> [ <name4> ] : <blk> <name3> = <name4> </blk>
<name6> の各要素を <name2> とし、 <val1> を書式として <name2> の先頭、 <name2> の <val5> 番目で整形した文字列を出力するの列	[ print ( <val1> . format ( <name2> [ 0 ] , <name2> [ <val5> ] ) ) for <name2> in <name6> ]	print ( [ <val1> . format ( <name2> [ <val1> ] , <name2> [ <val5> ] ) for <name2> in <name6> ] )
<name4> に <val3> を加えた値を <name2> で割った余りを返す	return ( <name4> + <val3> ) % <name2>	self return ( <name4> + <val3> ) % <name2>
<name5> の <name6> 番目の <name3> を順に <name4> として、繰り返す	for <name4> in <name5> [ <name6> ] . <name3> :	. for <name4> in <name5> [ <name6> ] . <name3> :
<name6> の <name5> 番目の <val3> 番目、 <name6> の <name5> 番目の <val2> 番目の要素をそれぞれ組にした列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in zip ( <name6> [ <name5> ] [ <val3> ] , <name6> [ <name5> ] [ <val2> ] ) :	in zip ( <name6> [ <name5> ] [ <val3> ] , <name6> [ <name5> ] [ <val2> ] ) :
改行せずに <val1> 、 <name6> の <name4> を出力する <name2> ( <name6> . <name3> ) <name2> ( <name6> . <name5> )	print ( <val1> , <name6> . <name4> , end = <val1> ) <name2> ( <name6> . <name3> ) <name2> ( <name6> . <name5> )	<name6> . print ( <val1> , <name6> . <name4> , end = <val1> ) <name2> ( <name6> . <name5> )
<val2> を <name6> だけ左シフトした値を <name3> とする	<name3> = <val2> << <name6>	<name3> = <val2> << <name6>
<name6> の <name3> 番目が <name2> と等しいとき、 <blk> <name5> の <name3> 番目を <val4> だけ増加させる </blk>	if <name6> [ <name3> ] == <name2> : <blk> <name5> [ <name3> ] += <val4> </blk>	<blk> if <name6> [ <name3> ] == <name2> : <blk> <name5> [ <name3> ] += <val4> </blk>
<name5> ( <val6> . <name2> ( <name4> ) )	<name5> ( <val6> . <name2> ( <name4> ) )	<name3> ( <val6> . <name2> ( <name4> ) )
<name3> の <val5> 番目、 <name4> の最小値を <name3> の <val5> 番目にする	<name3> [ <val5> ] = min ( <name3> [ <val5> ] , <name4> )	<val5> <name3> [ <val5> ] = min ( <name3> [ <val5> ] , <name4> )
<name6> の <val1> に <val1> から <name5> に <val3> を加えた値未満までの数列の各要素を <name2> とし、 <val4> の列を挿入する	<name6> . insert ( <val1> , [ <val4> for <name2> in range ( <name5> + <val3> ) ] )	<name1> . insert ( <val1> , [ <val4> for <name2> in range ( <name5> + <val3> ) ] )
<name3> * <name1> < <val4> かつ <name2> * <name6> < <val4> と <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) の論理和と <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) の論理和と <name5> ( <name4> , <name2> , <name3> , <name1> , <name3> , <name1> ) の論理和と <name5> ( <name6> , <name5> , <name3> , <name1> , <name3> , <name1> ) の論理和のとき、	if ( <name3> * <name1> < <val4> and <name2> * <name6> < <val4> ) | <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) | <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) | <name5> ( <name4> , <name2> , <name3> , <name1> , <name3> , <name1> ) | <name5> ( <name6> , <name5> , <name3> , <name1> , <name3> , <name1> ) :	for <name3> , <name1> in <name3> * <name1> < <val4> and <name2> * <name6> < <val4> | <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) | <name5> ( <name3> , <name1> , <name4> , <name2> , <name6> , <name5> ) | <name5> ( <name4> , <name2> , <name3> , <name1> , <name3> , <name1> ) | ( <name5> , <name3> , <name1> , <name3> , <name1> , <name1> ) | <name3> ) :
<name2> を <val5> だけ右シフトする <name6> を <val5> だけ右シフトする	<name2> >> = <val5> <name6> >> = <val5>	else = <name2> >> = <val5> <name6> >> = <val5>
<name3> . <name5> ( <name1> . <name6> ) かつ <name3> . <name5> ( <name1> . <name4> ) のとき、	if <name3> . <name5> ( <name1> . <name6> ) and <name3> . <name5> ( <name1> . <name4> ) :	for <name3> . <name5> ( <name1> . <name6> ) and <name3> . <name5> ( <name1> . <name4> ) :
{} : {}を出力する	print ( { n } : { combi } )	[ print ( i ) ] = dict [ i : ]
<name1> の <name5> に <name4> を加えた値から、つまり末尾までの部分列を追加して <name3> を拡張する	<name3> . extend ( <name1> [ <name5> + <name4> : ] )	<name3> . extend ( <name1> [ <name5> + <name4> : ] )
<name5> の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , <name5> . strip ( ) . split ( ) ) )	<name1> = list ( map ( int , <name5> . strip ( ) . split ( ) ) )
<name5> の <name4> 番目、 <val1> を <name5> の <name6> 番目、 <name5> の <name4> 番目とする	<name5> [ <name6> ] , <name5> [ <name4> ] = <name5> [ <name4> ] , <val1>	<name2> [ <name6> ] , <name5> [ <name4> ] = <name5> [ <name4> ] , <val1>
<name4> の末尾に <name1> の <val2> 番目を追加する	<name4> . append ( <name1> [ <val2> ] )	<name5> . append ( <name1> [ <val2> ] )
<name6> を <name4> の <name6> にする	<name4> . <name6> = <name6>	( <name4> . <name6> = <name6> )
<name3> ( <name1> , <name4> ) を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = <name3> ( <name1> , <name4> )	<name2> , <name1> , <name4> = <name3> ( <name1> , <name4> )
<name1> ( <name6> , <name3> ) を返す	return <name1> ( <name6> , <name3> )	yield <name1> ( <name6> , <name3> )
<name4> の <name5> の各要素を <name6> 、 <name3> 、 <name6> とし、 <name3> の列を返す	return [ <name3> for <name6> , <name3> , <name6> in <name4> . <name5> ]	return [ <name3> for <name6> , <name3> , <name6> in <name4> . <name5> ]
os . <name1> の <name4> 番目を <name2> だけ増加させる	<name1> [ <name4> ] += <name2>	( <name1> [ <name4> ] += <name2> )
os . <name1> の <name6> を取り出した値を <name5> とする	<name5> = <name1> . pop ( <name6> )	else = <name1> . pop ( <name6> )
<name6> の <name2> を <name3> だけ減少させる	<name6> . <name2> -= <name3>	<name1> . <name2> -= <name3>
<name1> の <name5> を <name2> の <name3> にする	<name2> . <name3> = <name1> . <name5>	<name2> . <name3> = <name1> . <name5>
<name5> から <name4> から <val1> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <name4> - <val1> ) :	for <name2> in range ( <name5> , <name4> - <val1> ) :
<name3> ( <val4> , <name5> )	<name3> ( <val4> , <name5> )	<name3> ( <val4> , <name5> )
<val3> 、 ( <val2> ) からなる列の <name6> の <name1> 回分の列からの配列を <name6> の <name4> にする	<name6> . <name4> = array ( <val3> , [ <val2> ] * <name6> . <name1> )	dict . <name4> = array ( <val3> , [ <val2> ] * <name6> . <name1> )
<val6> を <name3> の先頭の <name4> の順序数から <name5> を引いた値番目にする	<name3> [ 0 ] [ ord ( <name4> ) - <name5> ] = <val6>	<name3> [ 0 ] [ ord ( <name4> ) - <name5> ] = <val6>
<name4> から <name6> に <name3> を掛けた値を引いた値を <name2> とする <name5> から <name2> に <name3> を掛けた値を引いた値を <name1> とする <name6> に <name3> から <name1> に <name3> を掛けた値を引いた値を掛けた値を <name4> とする	<name2> = <name4> - <name6> * <name3> <name1> = <name5> - <name2> * <name3> <name4> = <name6> * ( <name3> - <name1> * <name3> )	<name1> = ( <name4> - <name6> * <name3> ) <name4> = ( <name5> - <name2> * <name3> ) <name4> = <name6> * ( <name3> - <name1> * <name3> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name6> 、 <name1> 、 <name2> 、 <name3> とする	<name5> , <name4> , <name6> , <name1> , <name2> , <name3> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name1> , <name2> , <name3> = map ( int , input ( ) . split ( ) )
<name3> . <name5> ( <val6> )	<name3> . <name5> ( <val6> )	( <name3> . <name5> ( <val6> ) )
<val4> の <val1> 乗を <name3> とする	<name3> = <val4> ** <val1>	<name3> = <val4> ** <val1>
<name1> が <name5> に <name5> を掛けた値と等しくないとき、	if <name1> != <name5> * <name5> :	while <name1> != <name5> * <name5> :
<name6> を <val4> で割った値の切り捨て整数値を <name1> とする	<name1> = math . floor ( <name6> / <val4> )	<name1> = math . floor ( <name6> / <val4> )
<name2> の <name4> 番目の <val5> 番目が <name2> の先頭の先頭と等しいとき、	if <name2> [ <name4> ] [ <val5> ] == <name2> [ <val5> ] [ <val5> ] :	while <name2> [ <name4> ] [ <val5> ] == <name2> [ 0 ] [ 0 ] :
<name2> を <name4> の <name6> 番目とするを <name3> とする	<name3> = <name4> [ <name6> ] = <name2>	<name4> [ <name6> ] = <name4> [ <name6> ] = <name2>
<name3> の <name1> と <name3> の <name4> の <name5> 番目の論理積が <name3> の <name4> の <name5> 番目と等しいかどうかを返す	return <name3> . <name1> & <name3> . <name4> [ <name5> ] == <name3> . <name4> [ <name5> ]	x return <name3> . <name1> & <name3> . <name4> [ <name5> ] == <name3> . <name4> [ <name5> ]
<name3> . <name4> ( <name2> . <name1> . <name5> ) を <name2> の <name1> の <name5> にする	<name2> . <name1> . <name5> = <name3> . <name4> ( <name2> . <name1> . <name5> )	<name3> . <name1> . <name5> = <name3> . <name4> ( <name2> . <name1> . <name5> )
<name3> . <name4> ( <name6> ) が <name3> . <name4> ( <name5> ) と等しいかどうかを返す	return <name3> . <name4> ( <name6> ) == <name3> . <name4> ( <name5> )	x return <name3> . <name4> ( <name6> ) == <name3> . <name4> ( <name5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name3> 、 <name4> 、 <name6> 、 <name5> 、 <name1> 、 <name2> とする	<name1> , <name2> , <name3> , <name4> , <name6> , <name5> , <name1> , <name2> = map ( int , input ( ) . split ( ) )	<name2> , <name3> , <name4> , <name6> , <name5> , <name1> , <name2> = map ( int , input ( ) . split ( ) )
<name3> モジュールを用いる	from <name3> import deepcopy	from <name3> import combinations
<name3> を <val6> だけ左シフトする	<name3> << = <val6>	not = <name3> << = <val6>
<name1> が <name2> と等しいかどうかが <val3> と等しいとき、	if ( <name1> == <name2> == <val3> ) :	for if <name1> == <name2> == <val3> :
<val5> から <name4> の長さ未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , len ( <name4> ) ) :	. for <name6> in range ( <val5> , len ( <name4> ) ) :
<name5> モジュールを用いる	from <name5> import date	from <name5> , Counter
<name3> ( <name4> , <name1> [ <name5> ] [ <val6> ] )	<name3> ( <name4> , <name1> [ <name5> ] [ <val6> ] )	<name3> ( <name4> , <name1> [ <name5> ] [ <val6> ] )
<name2> . <name6> ( <name3> ) を追加して <name1> を拡張する	<name1> . extend ( <name2> . <name6> ( <name3> ) )	<name1> . extend ( <name2> . <name6> ( <name3> ) )
<name2> の末尾に ( <name5> の先頭の整数値、 <name5> の <val6> 番目の整数値 ) からなる列を追加する	<name2> . append ( [ int ( <name5> [ 0 ] ) , int ( <name5> [ <val6> ] ) ] )	<name2> . append ( [ int ( <name5> [ 0 ] ) , int ( <name5> [ <val6> ] ) ] )
<name6> が <val4> と等しいとき <val3> 、そうでなければ <val5> を返す	return <val3> if <name6> == <val4> else <val5>	return <val3> if <name6> == <val4> else <val5>
<name4> 、 <name5> の <name3> 番目の <val1> 番目から <name5> の <name3> -1 番目の <val6> 番目を引いた値に <val1> を加えた値の最大値を <name4> とする	<name4> = max ( <name4> , <name5> [ <name3> ] [ <val1> ] - <name5> [ <name3> - <val1> ] [ <val6> ] + <val1> )	<name4> = max ( <name4> , <name5> [ <name3> ] [ <val1> ] - <name5> [ <name3> - <val1> ] [ <val6> ] + <val1> )
<name1> の間、次を繰り返す <blk> <name1> 、 <name4> を <name1> で割った余りを <name4> 、 <name1> とする </blk>	while <name1> : <blk> <name4> , <name1> = <name1> , <name4> % <name1> </blk>	: while <name1> : <blk> <name4> , <name1> = <name1> , <name4> % <name1> </blk>
<name4> ( <name3> [ <name5> ] . <name2> ) に <val1> を加えた値を <name6> とする	<name6> = <name4> ( <name3> [ <name5> ] . <name2> ) + <val1>	<name6> = <name4> ( <name3> [ <name5> ] . <name2> ) + <val1>
<name5> の末尾に ( <name1> 、 <val4> 、 <name6> 、 <name3> ) の組を追加する	<name5> . append ( ( <name1> , <val4> , <name6> , <name3> ) )	<name5> . append ( ( <name1> , <val4> , <name6> , <name3> ) )
<name4> の <val1> 番目の整数値を <name4> の <val1> 番目にする	<name4> [ <val1> ] = int ( <name4> [ <val1> ] )	<name2> [ <val1> ] = int ( <name4> [ <val1> ] )
0 から、つまり整数の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( len ( str ) ) :	for <name4> in range ( len ( str ( str ) ) ) :
<name3> 、 <name4> ( <name2> ) の <val5> 番目の最大値を出力する	print ( max ( <name3> , <name4> ( <name2> ) [ <val5> ] ) )	print ( max ( <name3> , <name4> ( <name2> ) [ <val5> ] ) )
<name1> が <val3> と等しくかつ <name5> の <name6> 番目が <name2> と等しいとき、	if <name1> == <val3> and <name5> [ <name6> ] == <name2> :	if <name1> == <val3> and <name5> [ <name6> ] == <name2> :
( 、つまり未定値 ) からなる列に入力された文字列のリストを加えた値を <name2> とする	<name2> = [ None ] + list ( input ( ) )	<name2> = [ None ] + list ( input ( ) )
<val5> が <name4> 以下のとき、	if ( <val5> <= <name4> ) :	list if <val5> <= <name4> :
<val6> から <name5> に <val4> を加えた値未満までの数列の各要素を <name3> とし、 <val6> から <name2> に <val4> を加えた値未満までの数列の各要素を <name1> とし、 <val6> の列の列を <name5> とする	<name5> = [ [ <val6> for <name1> in range ( <name2> + <val4> ) ] for <name3> in range ( <name5> + <val4> ) ]	<name5> = [ [ <val6> for <name1> in range ( <name2> + <val4> ) ] for <name3> in range ( <name5> + <val4> ) ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name4> 、 <name2> 、 <name5> 、 <name6> とする	<name3> , <name1> , <name4> , <name2> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name4> , <name2> , <name5> , <name6> = map ( int , input ( ) . split ( ) )
<name1> 内の [ MASK ] の出現回数が <name1> の <name6> 以上のとき、	if <name1> . count >= <name1> . <name6> :	isinstance ( <name1> . count ) >= <name1> . <name6> :
( <val1> ) からなる列の <name2> に <val1> を加えた値回分の列を <name4> とする	<name4> = [ <val1> ] * ( <name2> + <val1> )	<name4> = [ <val1> ] * ( <name2> + <val1> )
<name2> を <val3> で割った値を出力する	print ( <name2> / <val3> )	print ( <name2> / <val3> )
<name6> モジュールを用いる	from <name6> import perf_counter	sqrt ( <name6> ) import sqrt
<name4> から <name6> を引いた値に <val1> を加えた値に <name2> から <name5> を引いた値に <val1> を加えた値を掛けた値から <name5> の <val3> 番目を引いた値から <name5> の <val1> 番目を引いた値を <name5> の <val3> 番目にする	<name5> [ <val3> ] = ( <name4> - <name6> + <val1> ) * ( <name2> - <name5> + <val1> ) - <name5> [ <val3> ] - <name5> [ <val1> ]	<name2> [ <val3> ] = ( <name4> - <name6> + <val1> ) * ( <name2> - <name5> + <val1> ) - ( <name5> [ <val3> ] - <name5> [ <val1> ] )
<name3> の <name4> から <val6> を引いた値番目の <name1> 番目が <name2> と等しいとき、	if <name3> [ <name4> - <val6> ] [ <name1> ] == <name2> :	for <name3> in <name3> [ <name4> - <val6> ] [ <name1> ] == <name2> :
<name6> の <name1> 番目の末尾に <name5> を追加する	<name6> [ <name1> ] . append ( <name5> )	<name1> [ <name1> ] . append ( <name5> )
<name4> の各要素を <name3> とし、 <name2> の <name3> 番目の列を <name2> とする	<name2> = [ <name2> [ <name3> ] for <name3> in <name4> ]	<name6> = [ <name2> [ <name3> ] for <name3> in <name4> ]
<name4> の <name1> 番目を <val6> で割った余りにする	<name4> [ <name1> ] % = <val6>	<name2> [ <name1> ] % = <val6>
<name4> から <name3> に <name5> を掛けた値を引いた値を <name6> から <name3> を引いた値で割った商、 <name2> 、 <name4> を <name6> で割った商の最小値を <name1> とする	<name1> = min ( ( <name4> - <name3> * <name5> ) // ( <name6> - <name3> ) , <name2> , <name4> // <name6> )	<name6> = min ( ( <name4> - <name3> * <name5> ) // ( <name6> - <name3> ) , <name2> , <name4> // <name6> )
<name6> 内の <val4> の出現回数を <name1> とする	<name1> = <name6> . count ( <val4> )	<name1> = <name6> . count ( <val4> )
<name2> が <val5> 以上または <name2> が <val4> 以上かつ <name3> が <val6> 以上のとき、 <blk> <val1> + <name2> ( <name2> -30 ) に <val5> を加えた値に <name3> の文字列を加えた値に <val5> を加えた値に <name4> の文字列を加えた値を出力する </blk>	if <name2> >= <val5> or <name2> >= <val4> and <name3> >= <val6> : <blk> print ( <val1> + <name2> ( <name2> - 30 ) + <val5> + <name2> ( <name3> ) + <val5> + <name2> ( <name4> ) ) </blk>	for <name2> in <val5> or <name2> >= <val4> and <name3> >= <val6> : <blk> print ( <val1> + str ( <name2> - 2 ) + <val5> + str ( <name4> + <val5> ) ) </blk> ) </blk>
<name2> に <val6> を加えた値から <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> + <val6> , <name3> ) :	) for <name5> in range ( <name2> + <val6> , <name3> ) :
( ( <name4> の先頭、 <val5> ) の組 ) からなる列を <name1> とする	<name1> = [ ( <name4> [ <val5> ] , <val5> ) ]	<name1> = [ ( <name4> [ <val5> ] , <val5> ) ]
<val2> から <val4> 未満までの数列の各要素を <name1> とし、 <val2> の列を <name6> とする	<name6> = [ <val2> for <name1> in range ( <val4> ) ]	<name6> = [ <val2> for <name1> in range ( <val4> ) ]
<name5> の <name1> の <name3> 番目を返す	return <name5> . <name1> [ <name3> ]	yield <name5> . <name1> [ <name3> ]
ON を <name4> とする	<name4> = 'ON'	( <name4> = 'ON' )
<name1> ( <name2> , <name4> , <name3> -1 )	<name1> ( <name2> , <name4> , <name3> - 1 )	<name2> ( <name2> , <name4> , <name3> - 1 )
<name1> が <name6> から <val5> を引いた値より小さくかつ <name3> の <name4> 番目の <name1> に <val5> を加えた値番目が <val2> と等しいとき、	if <name1> < <name6> - <val5> and <name3> [ <name4> ] [ <name1> + <val5> ] == <val2> :	for <name1> < <name6> - <val5> and <name3> [ <name4> ] [ <name1> + <val5> ] == <val2> :
<name5> の <name4> 番目のとき、 <blk> <name3> に <name5> の <name4> 番目を <val6> だけ右シフトした値を掛けた値を <val2> で割った余りを <name3> とする </blk>	if <name5> [ <name4> ] : <blk> <name3> = <name3> * ( <name5> [ <name4> ] >> <val6> ) % <val2> </blk>	while <name5> [ <name4> ] : <blk> <name3> = <name3> * ( <name5> [ <name4> ] >> <val6> ) % <val2> </blk>
<name1> を <val5> を <name6> の <name3> 番目だけ左シフトした値との論理和にする	<name1> | = <val5> << <name6> [ <name3> ]	<name2> << = <name1> << = <val5> << <name6> [ <name3> ]
<name5> が <val1> と等しくまたは <name4> が <val1> と等しい間、次を繰り返す	while <name5> == <val1> or <name4> == <val1> :	del ( <name5> == <val1> or <name4> == <val1> ) :
<name2> を <name5> の <name6> 番目とするを <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name5> [ <name6> ] = <name2>	<name4> [ <name6> ] = <name5> [ <name6> ] = <name2>
<name3> の <name1> から <val2> を引いた値番目が <val5> と等しいとき、	if <name3> [ <name1> - <val2> ] == <val5> :	for <name3> [ <name1> - <val2> ] == <val5> :
<name4> の末尾に ( <name3> 、 <name5> 、 <name2> に <val6> を掛けた値に <name1> を加えた値 ) の組を追加する	<name4> . append ( ( <name3> , <name5> , <name2> * <val6> + <name1> ) )	<name4> . append ( ( <name3> , <name5> , <name2> * <val6> + <name1> ) )
<name6> に <name5> を加えた値の <val1> 乗から <name6> から <name5> を引いた値の <val1> 乗を引いた値の <val3> を <val1> で割った値乗を返す	return ( ( <name6> + <name5> ) ** <val1> - ( <name6> - <name5> ) ** <val1> ) ** ( <val3> / <val1> )	def ( <name6> + <name5> ) ** <val1> - ( <name6> - <name5> ) ** <val1> ) ** ( <val3> / <val1> )
<name6> の <name2> に <name5> を加えた値番目の <name3> 番目が <val1> と等しくなくかつ <name6> の <name2> + <name5> に <val4> を加えた値番目の <name3> 番目が <val1> と等しいとき、	if <name6> [ <name2> + <name5> ] [ <name3> ] != <val1> and <name6> [ <name2> + <name5> + <val4> ] [ <name3> ] == <val1> :	list ( <name6> [ <name2> + <name5> ] [ <name3> ] != <val1> and <name6> [ <name2> + <name5> + <val4> ] [ <name3> ] == <val1> :
<val5> を <name3> の先頭の <val1> 番目にする	<name3> [ <val1> ] [ <val1> ] = <val5>	<name4> [ <val1> ] [ <val1> ] = <val5>
<name3> が <name6> から <val1> を引いた値と等しいとき、	if <name3> == <name6> - <val1> :	if <name3> == <name6> - <val1> :
( <name4> ) からなる列を os . <name6> とする	<name6> = [ <name4> ]	else . <name6> = [ <name4> ]
入力された文字列を空白で分割した字句列を展開し、それぞれ <name2> 、 <name5> 、 <name4> とする	<name2> , <name5> , <name4> = input ( ) . split ( )	<name2> , <name5> , <name4> = input ( ) . split ( )
<name2> に <name1> から <name5> を引いた値を加えた値が <val6> 以下のとき、	if <name2> + ( <name1> - <name5> ) <= <val6> :	for <name2> + ( <name1> - <name5> ) <= <val6> :
<name4> をパラメータとして ( - <name4> の先頭、 <name4> の <val5> 番目 ) の組を返す関数を <name6> として <name3> をソートする	<name3> . sort ( <name6> = lambda <name4> : ( - <name4> [ 0 ] , <name4> [ <val5> ] ) )	<name3> . sort ( <name6> = lambda <name4> : ( - <name4> [ 0 ] , <name4> [ <val5> ] ) )
<name4> の <name1> 番目の先頭、 <name4> の <name1> 番目の <val6> 番目を出力する	print ( <name4> [ <name1> ] [ 0 ] , <name4> [ <name1> ] [ <val6> ] )	print ( <name4> [ <name1> ] [ 0 ] , <name4> [ <name1> ] [ <val6> ] )
( <val2> ) からなる列の <val5> 回分の列を <name1> とする	<name1> = [ <val2> ] * <val5>	<name1> = [ <val2> ] * <val5>
<name5> 内の <name2> の <name6> 番目と等しい要素を取り除く	<name5> . remove ( <name2> [ <name6> ] )	not <name5> . remove ( <name2> [ <name6> ] )
<val3> から <name1> 未満までの <val6> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <val3> , <name1> , <val6> ) :	. for <name2> in range ( <val3> , <name1> , <val6> ) :
<name1> から <name2> に <val3> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> , <name2> + <val3> ) :	continue for <name4> in range ( <name1> , <name2> + <val3> ) :
<name2> の <name1> 番目の <name6> 番目に <name1> を <name2> として <name3> の <name1> 番目の <name6> 番目の各要素を <name4> とし、 <name5> の <name6> 番目の <name4> 番目の列の最小値を加えた値を <name3> とする	<name3> = <name2> [ <name1> ] [ <name6> ] + min ( ( [ <name5> [ <name6> ] [ <name4> ] for <name4> in <name3> [ <name1> ] [ <name6> ] ] ) , <name2> = <name1> )	<name6> = <name2> [ <name1> ] [ <name6> ] + min ( [ <name5> [ <name6> ] [ <name4> ] for <name4> in <name3> [ <name1> ] [ <name6> ] ] ) , <name2> = <name1> )
<name6> に <name1> を加えた値から <name5> に <name1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> + <name1> , <name5> + <name1> ) :	range for <name2> in range ( <name6> + <name1> , <name5> + <name1> ) :
<name4> ( <name2> ) を展開し、それぞれ <name1> 、 <name3> 、 <name6> とする	<name1> , <name3> , <name6> = <name4> ( <name2> )	dict , <name1> , <name3> , <name6> = <name4> ( <name2> )
<name4> 、 <name5> を <val6> で割った商の最小値を <name2> とする	<name2> = min ( <name4> , <name5> // <val6> )	<name2> = min ( <name4> , <name5> // <val6> )
<name1> の <name6> の <name5> 番目が <name1> の <name6> の <name3> 番目より小さいとき、 <blk> <name3> と <name5> を入れ替える </blk>	if <name1> . <name6> [ <name5> ] < <name1> . <name6> [ <name3> ] : <blk> <name3> , <name5> = <name5> , <name3> </blk>	<blk> if <name1> . <name6> [ <name5> ] < <name1> . <name6> [ <name3> ] : <blk> <name3> , <name5> = <name5> , <name3> </blk>
<name6> から <name2> を引いた値の <val1> 乗に <name3> から <name5> を引いた値の <val1> 乗を加えた値の <val4> を <val1> で割った値乗を <name4> とする	<name4> = ( ( <name6> - <name2> ) ** <val1> + ( <name3> - <name5> ) ** <val1> ) ** ( <val4> / <val1> )	<name4> = ( ( <name6> - <name2> ) ** <val1> + ( <name3> - <name5> ) ** <val1> ) ** ( <val4> / <val1> )
( ( <name3> , <name2> の各要素を <name3> とし、 <name3> から <val5> を引いた値の列 ) ) からなる辞書を <name6> とする	<name6> = { <name3> : [ <name3> - <val5> for <name3> in <name2> ] }	<name6> = { <name3> : [ <name3> - <val5> for <name3> in <name2> ] }
<name1> の、つまり先頭から <val4> 番目までの部分列が ( <name6> 、 <name2> ) からなる列と等しいとき、	if <name1> [ : <val4> ] == [ <name6> , <name2> ] :	for <name1> in <name1> [ : <val4> ] == [ <name6> , <name2> ] :
<name2> の <name6> を <name2> の <name4> の <name3> にする	<name2> . <name4> . <name3> = <name2> . <name6>	<name6> . <name4> . <name3> = <name2> . <name6>
<name4> が <name5> 以上のとき、	if <name4> >= <name5> :	list if <name4> >= <name5> :
{ <val5> } { <val3> } { <val6> }を書式として <name4> の先頭、 <name4> の <val3> 番目、 <name4> の <val6> 番目で整形した文字列を出力する	print ( '{0} {1} {2}' . format ( <name4> [ <val5> ] , <name4> [ <val3> ] , <name4> [ <val6> ] ) )	[ print ( '{0} '{0} ] % <val6> . format ( <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val6> ] ) )
<name5> の <val4> 番目の <val4> 番目から <name5> の先頭の <val4> 番目を引いた値を <name5> の <val4> 番目の <val3> 番目から <name5> の先頭の先頭を引いた値で割った値を <name2> とする	<name2> = ( <name5> [ <val4> ] [ <val4> ] - <name5> [ <val3> ] [ <val4> ] ) / ( <name5> [ <val4> ] [ <val3> ] - <name5> [ <val3> ] [ <val3> ] )	<name5> = ( <name5> [ <val4> ] [ <val4> ] - <name5> [ <val4> ] [ <val4> ] ) / ( <name5> [ <val4> ] [ <val3> ] - <name5> [ <val4> ] [ <val4> ] )
<name1> のリストを <name1> とする	<name1> = list ( <name1> )	( <name1> = list ( <name1> ) )
<name5> ( <val4> ) の各要素を <name6> とし、 <name3> + <name2> + <name1> + <name6> == <name3> のときの <name5> ( <val4> ) の列の各要素を <name1> とし、 0 から <val4> 未満までの数列の列の各要素を <name2> とし、 0 から <val4> 未満までの数列の列の各要素を <name3> とし、 <val6> の列の総和を返す	return sum ( [ <val6> for <name3> in [ <name5> ( <val4> ) for <name2> in [ <name5> ( <val4> ) for <name1> in [ <name5> ( <val4> ) for <name6> in <name5> ( <val4> ) if <name3> + <name2> + <name1> + <name6> == <name3> ] ] ] ] )	[ return sum ( [ [ <val6> for <name3> in [ [ range ( <val4> ) for <name1> in [ range ( <val4> ) ] ] ) ) for <name6> in <name5> ( <val4> ) if <name3> + <name2> + <name1> + <name6> + <name3> ] ] for <name6> in <name5> ( <val4> ) ] ]
( <val3> 、 <val5> 、 <val5> ) からなる列を <name2> とする	<name2> = [ <val3> , <val5> , <val5> ]	<name6> = [ <val3> , <val5> , <val5> ]
<name5> の末尾に <name1> に <name1> から <val4> を引いた値を掛けた値を <val6> で割った値の整数値を追加する	<name5> . append ( int ( <name1> * ( <name1> - <val4> ) / <val6> ) )	<name5> . append ( int ( <name1> * ( <name1> - <val4> ) / <val6> ) )
<name3> の <name6> の <val2> 番目の整数値番目を展開してを出力する	print ( * <name3> [ int ( <name6> [ <val2> ] ) ] )	print ( * <name3> [ int ( <name6> [ <val2> ] ) ] )
<name3> の <val5> に <name4> の <val6> 番目を挿入する	<name3> . insert ( <val5> , <name4> [ <val6> ] )	<name3> . insert ( <val5> , <name4> [ <val6> ] )
<name4> : // <name3> . <name1> / <name5> / <val6> / <name2> - <name4> - <name3> - <name1> - <name5> - <name6> - <name2> - <name4>	<name4> : // <name3> . <name1> / <name5> / <val6> / <name2> - <name4> - <name3> - <name1> - <name5> - <name6> - <name2> - <name4>	: // <name4> : // <name3> . <name1> / <name5> / <val6> / <name2> / <name4> - <name3> - <name1> - <name5> - <name6> - <name2> - <name4>
( <val2> 、 <val2> 、 <val2> ) からなる列を <name4> とする	<name4> = [ <val2> , <val2> , <val2> ]	<name4> = [ <val2> , <val2> , <val2> ]
<name5> の <name1> 番目を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name5> [ <name1> ] :	. for <name2> , <name4> in <name5> [ <name1> ] :
<name3> の末尾に <name6> の <name2> に <name4> を掛けた値から <name2> に <name4> を掛けた値に <name4> を加えた値までの部分列を追加する	<name3> . append ( <name6> [ <name2> * <name4> : <name2> * <name4> + <name4> ] )	<name2> . append ( <name3> [ <name6> [ <name2> * <name4> : <name2> * <name4> + <name4> ] ] )
<name6> かつ <name6> . <name2> ( ) が <val1> と等しいとき、	if <name6> and <name6> . <name2> ( ) == <val1> :	> <name6> and <name6> . <name2> ( ) == <val1> :
<name1> . <name2> ( <name6> ) を <name2> とする	<name2> = <name1> . <name2> ( <name6> )	dict = <name1> . <name2> ( <name6> )
( <name3> の <name5> ) からなる列を <name4> とする	<name4> = [ <name3> . <name5> ]	<name4> = [ <name3> . <name5> ]
<name3> の <name5> 番目から、つまり末尾までの部分列を順に <name2> として、繰り返す	for <name2> in <name3> [ <name5> : ] :	: for <name2> in <name3> [ <name5> : ] :
<name2> でないとき、 <blk> ( <name2> 、 <val4> ) からなる列を返す </blk>	if not <name2> : <blk> return [ <name2> , <val4> ] </blk>	try : <blk> return [ <name2> , <val4> ] </blk>
<name2> ( <name5> - <name3> , <name6> - <name1> , <name4> ) を <name4> とする	<name4> = <name2> ( <name5> - <name3> , <name6> - <name1> , <name4> )	<name6> = <name2> ( <name5> - <name3> , <name6> - <name1> , <name4> )
sample - input . txt 、 <val5> を開いたファイルストリームを <name4> の <name3> にする	<name4> . <name3> = open ( 'sample-input.txt' , <val5> )	<name4> . <name3> = open ( 'sample-input.txt' , <val5> )
<name3> から <name4> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> , len ( <name4> ) ) :	for <name2> in range ( <name3> , len ( <name4> ) ) :
<name5> の、つまり先頭から <val2> 番目までの部分列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name5> [ : <val2> ]	( <name6> , <name4> = <name5> [ : <val2> ] )
0 から <name5> 未満までの数列の各要素を <name4> とし、 <name1> から読み込んだ一行の整数値の列を <name6> とする	<name6> = [ int ( <name1> . readline ( ) ) for <name4> in range ( <name5> ) ]	<name6> = [ int ( <name1> . readline ( ) ) for <name4> in range ( <name5> ) ]
<name3> を <name4> . <name1> . <name6> ( ) だけ増加させる	<name3> += <name4> . <name1> . <name6> ( )	<name3> += <name4> . <name1> . <name6> ( )
<name6> から <name3> に <val5> を加えた値に <val4> を掛けた値を引いた値を <val1> で割った余りのとき、 <blk> 最初からもう一度、繰り返す </blk>	if ( <name6> - ( <name3> + <val5> ) * <val4> ) % <val1> : <blk> continue </blk>	\ if ( <name6> - ( <name3> + <val5> ) * <val4> ) % <val1> : <blk> continue </blk>
\ <name5> ( <name2> . <name4> ( <val3> ) ) を <name1> とする\	\ <name1> = <name5> ( <name2> . <name4> ( <val3> ) ) \	for <name1> in <name5> ( <name2> . <name4> ( <val3> ) ) \
<name3> の <name2> の <name4> 番目を返す	return <name3> . <name2> [ <name4> ]	yield <name3> . <name2> [ <name4> ]
<name4> から <val2> を引いた値、 <name3> から <val2> を引いた値を <name4> 、 <name3> とする	<name4> , <name3> = <name4> - <val2> , <name3> - <val2>	<name2> , <name3> = <name4> - <val2> , <name3> - <val2>
<val6> を <name5> の <val4> を <name3> だけ左シフトした値から <val4> を引いた値番目の <val6> 番目にする	<name5> [ ( <val4> << <name3> ) - <val4> ] [ <val6> ] = <val6>	( <name5> [ ( <val4> << <name3> ) - <val4> ] ) [ <val6> ] = <val6>
% . 03 f % . 03 f を ( <name3> を <name5> で割った値、 <name6> を <name5> で割った値 ) の組で割った余りを出力する	print ( '%.03f %.03f' % ( <name3> / <name5> , <name6> / <name5> ) )	print ( '%.16f %.16f' % ( <name3> / <name5> , <name6> / <name5> ) )
( ( <val1> ) からなる列の 0 から <name6> の <name4> 未満までの数列の各要素を <name5> とし、 <name6> の <name4> の列回分の列 ) からなる列を <name6> の <name3> にする	<name6> . <name3> = [ [ <val1> ] * [ <name6> . <name4> for <name5> in range ( <name6> . <name4> ) ] ]	<name6> . <name3> = [ [ <val1> ] * [ <name6> . <name4> for <name5> in range ( <name6> . <name4> ) ] ]
<name5> に <val6> を加えた値から <name2> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> + <val6> , <name2> ) :	) for <name1> in range ( <name5> + <val6> , <name2> ) :
<name5> と <name1> の論理積のリストをソートした列を順に <name2> として、繰り返す	for <name2> in sorted ( list ( <name5> & <name1> ) ) :	) for <name2> in sorted ( list ( <name5> & <name1> ) ) :
<name4> の整数値と <name2> の整数値の最大公約数を出力する	print ( math . gcd ( int ( <name4> ) , int ( <name2> ) ) )	<name4> print ( gcd ( int ( <name4> ) , int ( <name2> ) ) )
<name6> が <val3> より小さい間、次を繰り返す	while <name6> < <val3> :	del <name6> < <val3> :
文字コード <name6> の文字に <val5> を加えた値、 <name4> 内の、つまり文字コード <name6> の文字の出現回数を出力する	print ( chr ( <name6> ) + <val5> , <name4> . count ( chr ( <name6> ) ) )	print ( chr ( <name6> ) + <val5> , <name4> . count ( chr ( <name6> ) ) )
<name4> の <name5> 番目を <val2> だけ増加させる	<name4> [ <name5> ] += <val2>	( <name4> [ <name5> ] += <val2> )
<name5> . <name5> ( <val2> , [ <val6> ] ) を <name4> とする	<name4> = <name5> . <name5> ( <val2> , [ <val6> ] )	<name4> = <name5> . <name5> ( <val2> , [ <val6> ] )
<name6> の <name3> 番目を展開し、それぞれ <name5> 、 <name1> 、 <name4> とする	<name5> , <name1> , <name4> = <name6> [ <name3> ]	( <name5> , <name1> , <name4> = <name6> [ <name3> ] )
<name3> の総和から <name3> の最大値を引いた値から <name3> の最小値を引いた値を <name4> から <val5> を引いた値で割った商を出力する	print ( ( sum ( <name3> ) - max ( <name3> ) - min ( <name3> ) ) // ( <name4> - <val5> ) )	range ( sum ( <name3> ) - max ( <name3> ) - min ( <name3> ) ) // ( <name4> - <val5> ) )
os . <name6> の先頭を除いた部分列、 os . <name6> の末尾を除いた部分列の要素をそれぞれ組にした列を順に <name2> 、 <name1> として、繰り返す	for <name2> , <name1> in zip ( <name6> [ 1 : ] , <name6> [ : - 1 ] ) :	for <name2> , <name1> in zip ( <name6> [ 1 : ] , <name6> [ : - 1 ] ) :
<name2> の各要素を <name1> とし、 <name1> を <val4> で割った余りが <val5> と等しいときの <name1> の列を <name6> とする	<name6> = [ <name1> for <name1> in <name2> if <name1> % <val4> == <val5> ]	<name2> = [ <name1> for <name1> in <name2> if <name1> % <val4> == <val5> ]
入力された文字列を <val5> で分割した字句列を展開し、それぞれ <name4> 、 <name6> 、 <name3> とする	<name4> , <name6> , <name3> = input ( ) . split ( <val5> )	input , <name3> = input ( ) . split ( <val5> )
<val1> の <val3> 乗を <name2> とする	<name2> = <val1> ** <val3>	( <name2> = <val1> ** <val3> )
<name2> を空白で分割した字句列の先頭を除いた部分列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name1> とする	<name3> , <name5> , <name1> = map ( int , <name2> . split ( ) [ 1 : ] )	<name3> , <name5> , <name1> = map ( int , <name2> . split ( ) [ 1 : ] )
-1 を <name5> とする <val1> を <name3> とする	<name5> = - 1 <name3> = <val1>	<name1> = - 1 <name3> = <val1>
<name4> ( <name1> , <name2> ) を <name5> とする	<name5> = <name4> ( <name1> , <name2> )	else = <name4> ( <name1> , <name2> )
<name4> の <name1> の <name2> 番目の <name3> から <val5> を引いた値乗に対する <name3> の剰余を <name4> の <name6> の <name2> 番目にする	<name4> . <name6> [ <name2> ] = pow ( <name4> . <name1> [ <name2> ] , <name3> - <val5> , <name3> )	<name4> [ <name6> . <name2> ] = pow ( <name4> . <name1> [ <name2> ] , <name3> - <val5> , <name3> )
 に <val2> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列を加えた値を出力する	print ( <val2> + <val2> . join ( map ( str , <name5> ) ) )	print ( <val2> + <val2> . join ( map ( str , <name5> ) ) )
<name6> に <name5> の <val2> 番目を追加した集まり	<name6> . add ( <name5> [ <val2> ] )	<name6> . add ( <name5> [ <val2> ] )
<name3> に <name5> に <val6> を加えた値を掛けた値を出力する	print ( <name3> * ( <name5> + <val6> ) )	<name3> . print ( <name3> * ( <name5> + <val6> ) )
<name6> が <val1> より大きいとき、 <blk> <val4> を返す </blk>	if <name6> > <val1> : <blk> return <val4> </blk>	try : <blk> return <val4> </blk>
<name5> の <name2> 番目の <name1> が、つまり未定値と等しくないとき、 <blk> <name3> ( <name5> [ <name2> ] . <name1> , <name6> + <val4> ) </blk>	if <name5> [ <name2> ] . <name1> != None : <blk> <name3> ( <name5> [ <name2> ] . <name1> , <name6> + <val4> ) </blk>	\ if <name5> [ <name2> ] . <name1> != None : <blk> <name3> ( <name5> [ <name2> ] . <name1> , <name6> + <val4> ) </blk>
<name1> の末尾に <val3> 、入力された文字列の整数値の最大値を追加する	<name1> . append ( max ( <val3> , int ( input ( ) ) ) )	<name1> . append ( max ( <val3> , int ( input ( ) ) ) )
<name5> の <val1> 番目が <val1> と等しいとき、	if <name5> [ <val1> ] == <val1> :	if <name5> [ <val1> ] == <val1> :
<name1> の <name4> の <val6> 番目番目から <name1> の <name4> の <val3> 番目番目を引いた値を <name5> とする	<name5> = <name1> [ <name4> [ <val6> ] ] - <name1> [ <name4> [ <val3> ] ]	<name5> = <name1> [ <name4> [ <val6> ] ] - <name1> [ <name4> [ <val3> ] ]
<name5> から <name6> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <name6> ) :	: for <name1> in range ( <name5> , <name6> ) :
<name6> を <name1> の <name4> にする	<name1> . <name4> = <name6>	not <name1> . <name4> = <name6>
<name4> の各要素を <name6> とし、 <name6> の長さに <name3> を加えた値の列の最大値を <name1> とする	<name1> = max ( [ len ( <name6> ) + <name3> for <name6> in <name4> ] )	<name1> = max ( [ len ( <name6> ) + <name3> for <name6> in <name4> ] )
<name1> . <name4> ( <name3> , <name6> + <val5> , <val2> , <val2> , <name1> . <name1> ) を返す	return <name1> . <name4> ( <name3> , <name6> + <val5> , <val2> , <val2> , <name1> . <name1> )	yield <name1> . <name4> ( <name3> , <name6> + <val5> , <val2> , <val2> , <name1> . <name1> )
<name6> の <name3> に <name4> を加えた値から <name2> 番目までの部分列が <name5> の <name1> に含まれるとき、	if <name6> [ <name3> + <name4> : <name2> ] in <name5> . <name1> :	isinstance ( <name6> [ <name3> + <name4> : <name2> ] in <name5> . <name1> ) :
<name6> 、 <name4> の要素をそれぞれ組にした列の各要素を <name2> 、 <name1> とし、 <name2> に <name1> を加えた値を <name3> で割った余りの列の辞書カウンタを <name5> とする	<name5> = Counter ( ( [ ( <name2> + <name1> ) % <name3> for <name2> , <name1> in zip ( <name6> , <name4> ) ] ) )	<name5> = Counter ( [ ( <name2> + <name1> ) % <name3> for <name2> , <name1> in zip ( <name6> , <name4> ) ] )
<name4> の <val2> 番目を <name1> とする	<name1> = <name4> [ <val2> ]	<name1> = <name4> [ <val2> ]
{}を出力する	print ( { math . sqrt ( variance ) } )	print ( { ( x & 2 ) } )
<name1> の末尾に ( <val5> 、 <val2> ) の組を追加する	<name1> . append ( ( <val5> , <val2> ) )	not <name1> . append ( ( <val5> , <val2> ) )
<name6> が <name2> の <name5> 番目より小さいとき、	if <name6> < <name2> [ <name5> ] :	: if <name6> < <name2> [ <name5> ] :
<name2> のキーと値の集まりの各要素を <name5> 、 <name4> とし、 <name4> の <val3> 番目が -1 と等しいときの <name5> の列の先頭を <name6> とする	<name6> = [ <name5> for <name5> , <name4> in <name2> . items ( ) if <name4> [ <val3> ] == - 1 ] [ 0 ]	<name6> = [ <name5> for <name5> , <name4> in <name2> . items ( ) if <name4> [ <val3> ] == - 1 ] [ 0 ]
<name5> の <name3> 番目の <name1> が -1 と等しいとき、	if <name5> [ <name3> ] . <name1> == - 1 :	continue <name5> [ <name3> ] . <name1> == - 1 :
<val3> を <name4> とするを <name1> とする	<name1> = <name4> = <val3>	<name1> = <name4> = <val3>
<val1> から <name5> [ <val1> ] に <val4> を加えた値未満までの数列の各要素を <name6> とし、 <name2> ( <val1> , <name5> [ <val1> ] - <name6> ) に <name6> を加えた値の列の最小値を出力する	print ( min ( [ <name2> ( <val1> , <name5> [ <val1> ] - <name6> ) + <name6> for <name6> in range ( <name5> [ <val1> ] + <val4> ) ] ) )	[ print ( min ( [ <name2> ( <val1> , <name5> [ <val1> ] - <name6> ) + <name6> for <name6> in range ( <val1> , <name5> [ <val1> ] + <val4> ) ] ) )
<name3> から <name4> を引いた値から <val1> を引いた値を <name6> とする	<name6> = <name3> - <name4> - <val1>	( <name6> = <name3> - <name4> - <val1> )
<name3> の <name1> の <name4> 番目の末尾に ( <name5> 、 <name3> . <name1> の <name5> 番目の長さから <val6> を引いた値、 <val2> ) からなる列を追加する	<name3> . <name1> [ <name4> ] . append ( [ <name5> , len ( <name3> . <name1> [ <name5> ] ) - <val6> , <val2> ] )	<name1> . <name1> [ <name4> ] . append ( [ <name5> , len ( <name3> . <name1> [ <name5> ] ) - <val6> , <val2> ] )
<name2> を <name4> に <name3> を底とする <name4> の対数を掛けた値だけ減少させる	<name2> -= <name4> * log ( <name4> , <name3> )	<name6> -= <name4> * math . sin ( <name3> , <name4> )
<name3> の <name6> 番目の末尾に ( <name2> 、 <name1> ) の組を追加する	<name3> [ <name6> ] . append ( ( <name2> , <name1> ) )	<name2> [ <name6> ] . append ( ( <name2> , <name1> ) )
<name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )	<name3> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )
<name5> モジュールを用いる	from <name5> import List , Set	from <name5> , Counter
無限の整数列を <name4> から <name2> を引いた値だけ増加させる	count += <name4> - <name2>	<name2> += count << ( <name4> - <name2> )
<name3> から <name1> を引いた値、 <name2> から <name6> を引いた値を出力する	print ( <name3> - <name1> , <name2> - <name6> )	print ( <name3> - <name1> , <name2> - <name6> )
<name4> ( <name3> ) を <name2> とする <name4> ( <name5> ) を <name6> とする	<name2> = <name4> ( <name3> ) <name6> = <name4> ( <name5> )	<name6> = <name4> ( <name3> ) <name6> = <name4> ( <name5> )
<name2> の末尾に <name6> の <name5> から <val3> を引いた値番目の先頭を追加する	<name2> . append ( <name6> [ <name5> - <val3> ] [ 0 ] )	<name2> . append ( <name6> [ <name5> - <val3> ] [ 0 ] )
<name3> [ <val5> ] * <name6> [ <val1> ] * <name2> [ <val4> ] に <name3> [ <val4> ] * <name6> [ <val5> ] * <name2> [ <val1> ] を加えた値に <name3> [ <val1> ] * <name6> [ <val4> ] に <name2> [ <val5> ] を掛けた値を加えた値から <name3> [ <val4> ] に <name6> [ <val1> ] を掛けた値に <name2> の <val5> 番目を掛けた値を引いた値から <name3> の <val1> 番目に <name6> の先頭を掛けた値に <name2> の <val4> 番目を掛けた値を引いた値から <name3> の先頭に <name6> の <val4> 番目を掛けた値に <name2> の <val1> 番目を掛けた値を引いた値を返す	return <name3> [ <val5> ] * <name6> [ <val1> ] * <name2> [ <val4> ] + <name3> [ <val4> ] * <name6> [ <val5> ] * <name2> [ <val1> ] + <name3> [ <val1> ] * <name6> [ <val4> ] * <name2> [ <val5> ] - <name3> [ <val4> ] * <name6> [ <val1> ] * <name2> [ <val5> ] - <name3> [ <val1> ] * <name6> [ <val5> ] * <name2> [ <val4> ] - <name3> [ <val5> ] * <name6> [ <val4> ] * <name2> [ <val1> ]	<name6> [ <val1> ] * ( <name3> [ <val5> ] * <name6> [ <val1> ] * <name2> [ <val4> ] + <name3> [ <val4> ] * <name6> [ <val5> ] * <name2> [ <val1> ] + <name3> [ <val1> ] + <name3> [ <val1> ] ) * ( <name6> [ <val4> ] * <name2> [ <val5> ] - <name3> [ <val4> ] ) * ( <name6> [ <val1> ] - <name2> [ <val1> ] ) * ( <name3> [ <val1> ] )
<name4> ( <name5> , ( <val6> , <name3> , <val6> , <val6> ) )	<name4> ( <name5> , ( <val6> , <name3> , <val6> , <val6> ) )	<name4> ( <name5> , ( <val6> , <name3> , <val6> , <val6> ) )
0 から <name2> 未満までの数列の各要素を <name4> とし、、つまり空辞書の列を <name1> とする	<name1> = [ { } for <name4> in range ( <name2> ) ]	<name1> = [ { } for <name4> in range ( <name2> ) ]
( <name5> の <name4> ) からなる列の <name5> の <name1> を <val2> だけ左シフトした値から <val2> を引いた値回分の列を <name5> の <name6> にする	<name5> . <name6> = [ <name5> . <name4> ] * ( ( <name5> . <name1> << <val2> ) - <val2> )	<name3> . <name6> = [ <name5> . <name4> ] * ( ( <name5> . <name1> << <val2> ) - <val2> )
<val4> から <name3> を引いた値を出力する	print ( <val4> - <name3> )	print ( <val4> - <name3> )
<name1> 、 <name5> 、 <name6> を <name6> 、 <name1> 、 <name5> とする	<name6> , <name1> , <name5> = <name1> , <name5> , <name6>	<name6> , <name1> , <name5> = <name1> , <name5> , <name6>
<name1> ( <name4> , <name5> ) を <name3> とする	<name3> = <name1> ( <name4> , <name5> )	<name3> = <name1> ( <name4> , <name5> )
<name4> の集合のリストをソートした列を <name4> とする	<name4> = sorted ( list ( set ( <name4> ) ) )	<name4> = sorted ( list ( set ( <name4> ) ) )
<name4> の <name5> 番目の <name2> 番目に <val6> を加えた値が <name4> の <name5> 番目の <name2> から <val3> を引いた値番目と等しいかどうかを <name1> とする	<name1> = ( <name4> [ <name5> ] [ <name2> ] + <val6> == <name4> [ <name5> ] [ <name2> - <val3> ] )	<name1> = ( <name4> [ <name5> ] [ <name2> ] + <val6> == <name4> [ <name5> ] [ <name2> - <val3> ] )
<val3> から <name5> の長さ未満までの数列の各要素を <name1> とし、 <name1> が <val3> と等しくまたは <name5> の <name1> 番目が <name5> の <name1> から <val6> を引いた値番目より大きいときの <name5> の <name1> 番目の列を返す	return [ <name5> [ <name1> ] for <name1> in range ( len ( <name5> ) ) if <name1> == <val3> or <name5> [ <name1> ] > <name5> [ <name1> - <val6> ] ]	return [ <name5> [ <name1> ] for <name1> in range ( len ( <name5> ) ) if <name1> == <val3> or <name5> [ <name1> ] > <name5> [ <name1> - <val6> ] ]
<name3> の <name1> 番目の <name6> から <val4> を引いた値番目を <val2> だけ増加させる	<name3> [ <name1> ] [ <name6> - <val4> ] += <val2>	[ <name3> [ <name1> ] [ <name6> - <val4> ] += <val2>
<val2> に <name6> を掛けた値に <val3> に <name4> を掛けた値を加えた値を返す	return <val2> * <name6> + <val3> * <name4>	self = <val2> * <name6> + <val3> * <name4>
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name2> とする	<name5> , <name4> , <name2> = map ( int , <name3> . readline ( ) . split ( ) )	<name3> , <name4> , <name2> = map ( int , <name3> . readline ( ) . split ( ) )
os . <name5> を返す	return <name5>	yield <name5>
<name1> に <name3> の <name5> 番目を加えた値を <name6> とする	<name6> = <name1> + <name3> [ <name5> ]	<name4> = <name1> + <name3> [ <name5> ]
<name3> を <val6> で割った余りが <val2> と等しいとき、	if <name3> % <val6> == <val2> :	continue % <val6> == <val2> :
<name6> の <name6> の最大値と等しい要素の最初の位置を <name1> とする	<name1> = <name6> . index ( max ( <name6> ) )	<name1> = <name6> . index ( max ( <name6> ) )
<name2> に <name1> から <name2> に <name4> を掛けた値を引いた値を <name3> で割った商を加えた値が <name5> より小さいとき、	if <name2> + ( <name1> - <name2> * <name4> ) // <name3> < <name5> :	isinstance ( <name2> + ( <name1> - <name2> * <name4> ) // <name3> < <name5> ) :
<name1> モジュールを用いる	from <name1> import UserList	return from <name1> import combinations
<name4> が <val2> と等しいとき、 <blk> <name3> の末尾に ( <name6> 、 <name5> ) の組を追加する </blk>	if <name4> == <val2> : <blk> <name3> . append ( ( <name6> , <name5> ) ) </blk>	if <name4> == <val2> : <blk> <name3> . append ( ( <name6> , <name5> ) ) </blk>
( <val3> 、 <val4> ) からなる列に <val5> から <name2> を <val4> で割った商から <name6> を引いた値未満までの数列の各要素を <name1> とし、 <name3> の <name1> 番目のときの <val4> に <name1> を掛けた値に <val5> を加えた値と <val5> の論理和の列を加えた値を返す	return [ <val3> , <val4> ] + [ <val4> * <name1> + <val5> | <val5> for <name1> in range ( <val5> , <name2> // <val4> - <name6> ) if <name3> [ <name1> ] ]	return [ <val3> , <val4> ] + [ <val4> * <name1> + <val5> | <val5> for <name1> in range ( <val5> , <name2> // <val4> - <name6> ) if <name3> [ <name1> ] ]
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name6> 、 <name5> 、 <name2> とする <name3> を <val3> だけ減少させる <name4> を <val3> だけ減少させる	<name3> , <name4> , <name6> , <name5> , <name2> = map ( int , <name1> ( ) . split ( ) ) <name3> -= <val3> <name4> -= <val3>	<name4> , <name6> , <name5> , <name2> = map ( int , <name1> ( ) . split ( ) ) <name3> -= <val3> <name4> -= <val3>
<name4> を順に <name6> 、 <name2> 、 <name1> として、繰り返す	for <name6> , <name2> , <name1> in <name4> :	. for <name6> , <name2> , <name1> in <name4> :
<name2> を <name2> に <name6> を加えた値で割った値を <name3> とする	<name3> = <name2> / ( <name2> + <name6> )	else = <name2> / ( <name2> + <name6> )
<name2> から <name6> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> , <name6> ) :	) : for <name5> in range ( <name2> , <name6> ) :
ソートされた順序を保ったまま <name3> の先頭を <name5> に挿入できる最後の位置を <name2> とする	<name2> = bisect_right ( <name5> , <name3> [ 0 ] )	<name2> = bisect_right ( <name5> , <name3> [ 0 ] )
<name5> が <name2> より小さいとき、 <blk> 繰り返しを中断する </blk>	if <name5> < <name2> : <blk> break </blk>	if <name5> < <name2> : <blk> break </blk>
<name5> の末尾に ( <name6> の <name4> の <name3> 番目に <name2> を加えた値、 <name6> の <name4> の <name1> 番目に <val5> を加えた値 ) の組を追加する	<name5> . append ( ( <name6> . <name4> [ <name3> ] + <name2> , <name6> . <name4> [ <name1> ] + <val5> ) )	<name5> . append ( ( <name6> . <name4> [ <name3> ] + <name2> , <name6> . <name4> [ <name1> ] + <val5> ) )
<name5> を <name4> の <val2> 番目に <name3> の先頭を掛けた値だけ減少させる	<name5> -= <name4> [ <val2> ] * <name3> [ <val2> ]	<name2> -= <name4> [ <val2> ] * <name3> [ 0 ]
<name6> ( <name4> , <name3> ) を出力する	print ( <name6> ( <name4> , <name3> ) )	print ( <name6> ( <name4> , <name3> ) )
<name4> の <name2> 番目に <val1> を加えた値に <name3> の <name2> 番目を加えた値に <name5> の <name2> 番目を加えた値に <name6> の <name2> 番目を加えた値を <name4> の <name2> に <val1> を加えた値番目にする	<name4> [ <name2> + <val1> ] = <name4> [ <name2> ] + <val1> + <name3> [ <name2> ] + <name5> [ <name2> ] + <name6> [ <name2> ]	<name2> [ <name2> + <val1> ] = <name4> [ <name2> ] + <val1> + <name3> [ <name2> ] + <name5> [ <name2> ] + <name6> [ <name2> ]
0 から <name2> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]
<name1> の <name5> 番目の <name4> 番目を <name6> とする	<name6> = <name1> [ <name5> ] [ <name4> ]	else = <name1> [ <name5> ] [ <name4> ]
<val6> を <name3> とするを <name1> とする	<name1> = <name3> = <val6>	<name1> = <name3> = <val6>
<name5> の <name2> の <name1> 番目が <name6> の <name2> の <name1> 番目と等しいとき、	if <name5> . <name2> [ <name1> ] == <name6> . <name2> [ <name1> ] :	[ if <name5> . <name2> [ <name1> ] == <name6> . <name2> [ <name1> ] :
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name4> 、 <name6> とする	<name3> , <name1> , <name4> , <name6> = map ( int , <name2> . split ( ) )	<name3> , <name1> , <name4> , <name6> = map ( int , <name2> . split ( ) )
<name3> の辞書カウンタを <name4> とする	<name4> = collections . Counter ( <name3> )	<name4> = Counter ( <name3> )
( 、つまり未定値 ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ None ] * <name2>	<name1> = [ None ] * <name2>
<name4> 、 <name6> の最小値を返す	return min ( <name4> , <name6> )	self return min ( <name4> , <name6> )
<name4> を <name2> から <name5> の末尾を引いた値だけ増加させる	<name4> += <name2> - <name5> [ - 1 ]	( <name4> += <name2> - <name5> [ - 1 ] )
<name1> ( <name3> , <name2> ) のとき、	if <name1> ( <name3> , <name2> ) :	for <name1> in <name1> ( <name3> , <name2> ) :
<name2> の <name4> 番目の <name3> 番目が ( <val1> 、 <val6> ) からなる列に含まれかつ <name5> の <name4> 番目の <name3> 番目が ( <name2> 、 <val1> ) からなる列に含まれるとき、	if ( <name2> [ <name4> ] [ <name3> ] in [ <val1> , <val6> ] ) and ( <name5> [ <name4> ] [ <name3> ] in [ <name2> , <val1> ] ) :	for <name2> in [ <name4> ] [ <name3> ] in [ <val1> , <val6> ] and <name5> [ <name4> ] [ <name3> ] in [ <name2> , <val1> ] :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name3> 、 <name5> 、 <name4> とする	<name3> , <name5> , <name4> = input ( ) . split ( )	<name3> , <name5> , <name4> = input ( ) . split ( )
<name6> かつ <name6> の <name3> が <name3> と等しくない間、次を繰り返す	while <name6> and <name6> . <name3> != <name3> :	del <name6> and <name6> . <name3> != <name3> :
<name2> が <val1> と等しくなければならない	assert <name2> == <val1>	sep = <name2> == <val1>
<name1> の <name2> の <name5> 番目番目を <val4> だけ減少させる	<name1> [ <name2> [ <name5> ] ] -= <val4>	dict [ <name1> [ <name2> [ <name5> ] ] -= <val4>
<name2> ( <name3> ) のとき、 <blk> <name3> を <name4> とする </blk>	if <name2> ( <name3> ) : <blk> <name4> = <name3> </blk>	: if <name2> ( <name3> ) : <blk> <name4> = <name3> </blk>
<name4> の <name6> の長さを <name3> とする	<name3> = len ( <name4> . <name6> )	<name3> = len ( <name4> . <name6> )
<name6> の <name1> 番目、 <name4> の - <name3> に <name2> を加えた値番目を <name5> の <name2> 番目、 <name6> の <name1> 番目とする	<name5> [ <name2> ] , <name6> [ <name1> ] = <name6> [ <name1> ] , <name4> [ - <name3> + <name2> ]	( <name5> [ <name2> ] , <name6> [ <name1> ] = <name6> [ <name1> ] , <name4> [ - <name3> + <name2> ] )
<name1> から <name3> を引いた値を <name5> とする <name2> から <name6> を引いた値を <name4> とする	<name5> = <name1> - <name3> <name4> = <name2> - <name6>	<name2> = <name1> - <name3> <name4> = <name2> - <name6>
<val4> から <name1> の長さに <val4> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , len ( <name1> ) + <val4> ) :	) for <name5> in range ( <val4> , len ( <name1> ) + <val4> ) :
<name3> の <name2> 、 <val5> 、 <name6> 、 <name4> の日付の週番目を出力する	print ( <name3> [ <name2> . date ( <val5> , <name6> , <name4> ) . weekday ( ) ] )	print ( <name3> [ <name2> . date ( <val5> , <name6> , <name4> ) . weekday ( ) ] )
( <val6> ) の集合を <name3> とする	<name3> = { <val6> }	<name4> = { <val6> }
<val2> を <name3> とする <name4> を <name5> とする	<name3> = <val2> <name5> = <name4>	<name1> = <name3> = <val2> <name5> = <name4>
<name3> の <name5> の <name4> + <name1> から <val2> を引いた値番目に <name3> の <name6> の <name4> 番目を掛けた値に <name3> の <name6> の <name1> から <val2> を引いた値番目を掛けた値を <name3> の <name3> で割った余りを返す	return <name3> . <name5> [ <name4> + <name1> - <val2> ] * <name3> . <name6> [ <name4> ] * <name3> . <name6> [ <name1> - <val2> ] % <name3> . <name3>	x return <name3> . <name5> [ <name4> + <name1> - <val2> ] * <name3> . <name6> [ <name4> ] * <name3> . <name6> [ <name1> - <val2> ] % <name3> . <name3>
<name4> の <val1> 番目が <name6> に含まれるとき、	if <name4> [ <val1> ] in <name6> :	for <name4> in <name4> [ <val1> ] in <name6> :
<name3> . <name4> ( <name6> , <name5> ) の絶対値が <name2> の <name1> より小さくかつ <name3> . <name3> ( <name6> , <name5> ) が <name2> の <name1> より小さいとき、	if abs ( <name3> . <name4> ( <name6> , <name5> ) ) < <name2> . <name1> and <name3> . <name3> ( <name6> , <name5> ) < <name2> . <name1> :	for <name2> in abs ( <name3> . <name4> ( <name6> , <name5> ) ) < <name2> . <name1> and <name3> . <name3> ( <name6> , <name5> ) < <name2> . <name1> :
<name3> を順に <name6> 、 <name4> として、繰り返す	for <name6> , <name4> in <name3> :	. for <name6> , <name4> in <name3> :
<name4> の <val1> 番目が <val5> と等しいとき、	if <name4> [ <val1> ] == <val5> :	: if <name4> [ <val1> ] == <val5> :
<name6> を <val5> から <name4> を引いた値を <val3> で割った商に <val1> を掛けた値だけ増加させる	<name6> += ( <val5> - <name4> ) // <val3> * <val1>	<name6> += ( <val5> - <name4> ) // <val3> * <val1>
<val2> を <name4> の <name6> から <val5> を引いた値番目の <name1> から <val5> を引いた値番目にする	<name4> [ <name6> - <val5> ] [ <name1> - <val5> ] = <val2>	<name4> [ <name6> - <val5> ] [ <name1> - <val5> ] = <val2>
<name2> を <name2> の絶対値で割った商を返す	return <name2> // abs ( <name2> )	return <name2> // abs ( <name2> )
<name6> ( <name3> , ( <name5> , <name2> , <name1> ) )	<name6> ( <name3> , ( <name5> , <name2> , <name1> ) )	set ( <name6> ( <name3> , ( <name5> , <name2> , <name1> ) ) )
<name5> から <name4> を引いた値の文字列を長さ <val1> になるように '0' 左詰めした文字列のリストを <name6> とする	<name6> = list ( str ( <name5> - <name4> ) . zfill ( <val1> ) )	<name6> = list ( str ( <name5> - <name4> ) . zfill ( <val1> ) )
<name1> を展開し、それぞれ <name3> 、 <name2> とする <name5> を展開し、それぞれ <name6> 、 <name4> とする	<name3> , <name2> = <name1> <name6> , <name4> = <name5>	<name3> , <name2> = <name1> <name6> , <name4> = <name5>
<name1> の <name2> 番目の <name6> の <name2> 番目から <val3> を引いた値番目を <name4> とする	<name4> = <name1> [ <name2> ] [ <name6> [ <name2> ] - <val3> ]	<name6> = <name1> [ <name2> ] [ <name6> [ <name2> ] - <val3> ]
ooo が <name4> の <name5> に <val6> を掛けた値から <name5> に <val6> を掛けた値に <val6> を加えた値までの部分列と等しくまたは <val1> が <name4> の <name5> 番目から、つまり末尾までの <val6> 間隔による部分列と等しいとき、	if <val1> == <name4> [ <name5> * <val6> : <name5> * <val6> + <val6> ] or <val1> == <name4> [ <name5> : : <val6> ] :	for <name4> , <name5> * <val6> : <name5> * <val6> + <val6> ] == <val1> or <name4> [ <name5> : : <val6> ] :
( <name5> 、 ( <name2> 、 <name4> 、 <name3> ) の組 ) の組を <name1> とする	<name1> = ( <name5> , ( <name2> , <name4> , <name3> ) )	<name1> = ( <name5> , ( <name2> , <name4> , <name3> ) )
-10 の <val1> 乗を <name3> とする	<name3> = - 10 ** <val1>	<name3> = - 10 ** <val1>
<name6> が、つまり現在の日時の <name6> より小さいとき、	if <name6> < now . <name6> :	for <name6> in <name6> [ now ] . <name6> :
<name5> が <name2> と等しいかどうかが <val3> と等しいとき、	if <name5> == <name2> == <val3> :	for if <name5> == <name2> == <val3> :
<name5> の末尾に <name2> の先頭の文字列に <name2> の <val4> 番目の文字列を加えた値の整数値を追加する	<name5> . append ( int ( str ( <name2> [ 0 ] ) + str ( <name2> [ <val4> ] ) ) )	<name5> . append ( int ( str ( <name2> [ 0 ] ) + str ( <name2> [ <val4> ] ) ) )
<name5> の <name4> 番目の <name1> 番目を <name5> の <name2> 番目の <name1> 番目だけ増加させる	<name5> [ <name4> ] [ <name1> ] += <name5> [ <name2> ] [ <name1> ]	<name2> [ <name4> ] [ <name1> ] += <name5> [ <name2> ] [ <name1> ]
<name6> の <name2> 番目を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = <name6> [ <name2> ]	dict , <name1> , <name3> = <name6> [ <name2> ]
<name4> の <name3> 番目に <name6> の <name3> 番目を掛けた値を <name6> の先頭で割った値を出力する	print ( ( <name4> [ <name3> ] * <name6> [ <name3> ] ) / <name6> [ 0 ] )	print ( <name4> [ <name3> ] * <name6> [ <name3> ] / <name6> [ 0 ] )
<name4> の <name6> 番目が <name3> と等しいとき、	if <name4> [ <name6> ] == <name3> :	list if <name4> [ <name6> ] == <name3> :
<name4> の <name3> 番目が <val5> と等しいとき、	if <name4> [ <name3> ] == <val5> :	: if <name4> [ <name3> ] == <val5> :
-1 を <name3> の <name2> 番目とするを <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name3> [ <name2> ] = - 1	else [ <name2> ] = <name3> [ <name2> ] = - 1
0 から <name1> 、 <name6> から <name5> を引いた値の最小値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( min ( <name1> , <name6> - <name5> ) ) :	in range ( min ( <name1> , <name6> - <name5> ) ) :
<name5> の <name2> 個までのコンビネーションを順に <name6> として、繰り返す	for <name6> in combinations ( <name5> , <name2> ) :	. for <name6> : in combinations ( <name5> , <name2> ) :
真を <name1> の <val2> 番目にする	<name1> [ <val2> ] = True	( <name1> [ <val2> ] = True )
<name3> が <val1> と等しくない間、次を繰り返す	while <name3> != <val1> :	del <name3> != <val1> :
<name6> ( <name3> ) 、 <name6> ( <name1> ) の最小値を返す	return min ( <name6> ( <name3> ) , <name6> ( <name1> ) )	yield min ( <name6> ( <name3> ) , <name6> ( <name1> ) )
<name6> ( <name2> , <name3> , <name4> ) . <name5> ( <name6> ( <name1> , <name6> , <name2> ) ) を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name6> ( <name2> , <name3> , <name4> ) . <name5> ( <name6> ( <name1> , <name6> , <name2> ) )	<name5> , <name1> = <name6> ( <name2> , <name3> , <name4> ) . <name5> ( <name6> ( <name1> , <name6> , <name2> ) )
<name1> の集合を <name2> とする	<name2> = set ( <name1> )	<name2> = set ( <name1> )
<name1> の <val2> 乗に <name4> の <val2> 乗を加えた値から <val2> に <name1> を掛けた値に <name4> を掛けた値に <name6> の余弦を掛けた値を引いた値の平方根を <name3> とする	<name3> = math . sqrt ( <name1> ** <val2> + <name4> ** <val2> - <val2> * <name1> * <name4> * math . cos ( <name6> ) )	else = math . sqrt ( <name1> ** <val2> + <name4> ** <val2> - <val2> * <name1> * <name4> * math . cos ( <name6> ) )
{ : 04 d }を書式として <name5> から <name2> を引いた値で整形した文字列のリストを <name1> とする	<name1> = list ( '{:04d}' . format ( <name5> - <name2> ) )	<name2> = list ( log . format ( <name5> - <name2> ) )
真を <name5> の <name1> 番目の <name3> 番目にする	<name5> [ <name1> ] [ <name3> ] = True	( <name5> [ <name1> ] [ <name3> ] = True )
<name4> の <name3> に <name6> の <name5> を掛けた値から <name4> の <name5> に <name6> の <name3> を掛けた値を引いた値を返す	return <name4> . <name3> * <name6> . <name5> - <name4> . <name5> * <name6> . <name3>	x return <name4> . <name3> * <name6> . <name5> - <name4> . <name5> * <name6> . <name3>
<val1> から <name4> の <val5> 乗に <val3> を加えた値の整数値未満までの <val2> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> , int ( <name4> ** <val5> + <val3> ) , <val2> ) :	. for <name6> in range ( <val1> , int ( <name4> ** <val5> + <val3> ) , <val2> ) :
<name4> を <val1> で割った商から <val5> を引いた値を <name6> の <name2> 番目の <name3> 番目にする	<name6> [ <name2> ] [ <name3> ] = <name4> // <val1> - <val5>	( <name6> [ <name2> ] [ <name3> ] = <name4> // <val1> - <val5> )
<val2> の <val5> 乗を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <val2> ** <val5>	<name1> [ <name4> ] = <val2> ** <val5>
<name1> の両端キューを <name2> とする	<name2> = deque ( <name1> )	<name2> = deque ( <name1> )
<name4> の先頭、 <name4> の <val3> 番目、 <name4> の <val6> 番目、 <name4> の <val1> 番目、 <name4> の <val5> 番目、 <name4> の <val2> 番目を <name4> の先頭、 <name4> の <val1> 番目、 <name4> の <val3> 番目、 <name4> の <val5> 番目、 <name4> の <val6> 番目、 <name4> の <val2> 番目とする	<name4> [ 0 ] , <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val6> ] , <name4> [ <val2> ] = <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] , <name4> [ <val5> ] , <name4> [ <val2> ]	<name4> [ 0 ] , <name4> [ <val1> ] , <name4> [ <val3> ] , <name4> [ <val5> ] , <name4> [ <val6> ] , <name4> [ <val2> ] = <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] , <name4> [ <val5> ] , <name4> [ <val2> ]
<name4> の <name1> の <name6> 番目に <name4> の <name3> の <name6> に <name4> の <name5> を掛けた値に <name2> を加えた値番目を加えた値を <name4> の <name1> の <name2> 番目にする	<name4> . <name1> [ <name2> ] = <name4> . <name1> [ <name6> ] + <name4> . <name3> [ <name6> * <name4> . <name5> + <name2> ]	( <name4> . <name1> [ <name2> ] = <name4> . <name1> [ <name6> ] + <name4> . <name3> [ <name6> * <name4> . <name5> + <name2> ] )
を間に入れて ( <name6> が <val2> と等しくないとき、つまり文字コード ( <name2> * ( <name3> ( <name6> ) - <name1> ) + <name4> ) % <val5> に <name1> を加えた値の文字、そうでなければ <name3> の各要素を <name6> とし、 <val2> の列 ) からなる列を連結した文字列を <name5> とする	<name5> = '' . join ( [ chr ( ( <name2> * ( <name3> ( <name6> ) - <name1> ) + <name4> ) % <val5> + <name1> ) if <name6> != <val2> else [ <val2> for <name6> in <name3> ] ] )	<name5> = '' . join ( [ chr ( ( <name2> * ( <name3> ( <name6> ) - <name1> ) + <name4> ) % <val5> + <name1> ) if <name6> != <val2> else [ chr ( <name6> ) for <name6> in <val2> ] ] )
( <name4> の <name3> 、 <name4> の <name6> ) の組を一旦、返す	yield ( <name4> . <name3> , <name4> . <name6> )	global ( <name4> . <name3> , <name4> . <name6> )
<name4> が <name1> から <val6> を引いた値と等しいとき、	if <name4> == <name1> - <val6> :	list if <name4> == <name1> - <val6> :
0 から <name5> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値から <val4> を引いた値の列の列を <name6> とする	<name6> = [ [ int ( <name2> ) - <val4> for <name2> in input ( ) . split ( ) ] for <name1> in range ( <name5> ) ]	count = [ [ int ( <name2> ) - <val4> for <name2> in input ( ) . split ( ) ] for <name1> in range ( <name5> ) ]
<name3> . <name6> ( <name2> ) を <name6> とする	<name6> = <name3> . <name6> ( <name2> )	<name6> = <name3> . <name6> ( <name2> )
入力された文字列の整数値、入力された文字列の整数値を <name6> 、 <name3> とする	<name6> , <name3> = int ( input ( ) ) , int ( input ( ) )	<name3> = int ( input ( ) ) , int ( input ( ) )
( <val5> ) からなる列の、つまり入力された文字列の整数値回分の列を順に <name1> として、繰り返す	for <name1> in [ <val5> ] * int ( input ( ) ) :	for <name1> in [ <val5> ] * int ( input ( ) ) :
<name4> ( <name1> . <name2> , ( <val5> ** <val6> -1 , <val5> ** <val6> -1 ) ) を <name1> の <name3> にする	<name1> . <name3> = <name4> ( <name1> . <name2> , ( <val5> ** <val6> - 1 , <val5> ** <val6> - 1 ) )	<name3> . = <name4> ( <name1> . <name2> , ( <val5> ** <val6> - <val6> , <val5> ** <val6> - 1 ) )
<name3> . <name6> ( <val5> ** <val4> )	<name3> . <name6> ( <val5> ** <val4> )	<name1> . <name6> ( <val5> ** <val4> )
<name1> ( <name4> , ( <name2> + <name3> [ <name6> ] , <name6> ) )	<name1> ( <name4> , ( <name2> + <name3> [ <name6> ] , <name6> ) )	<name5> ( <name4> , ( <name2> + <name3> [ <name6> ] , <name6> ) )
<name1> の正弦を返す	return math . sin ( <name1> )	x return math . sin ( <name1> )
<name3> が <val1> と等しくかつ <name2> が <val1> と等しくかつ <name5> が <val1> と等しいとき、	if <name3> == <val1> and <name2> == <val1> and <name5> == <val1> :	or ( <name3> == <val1> and <name2> == <val1> and <name5> == <val1> ) :
( ( <val6> ) からなる列の <val6> から <name3> 未満までの数列の各要素を <name4> とし、 <name3> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val6> ] * [ ( <name3> ) for <name4> in range ( <name3> ) ] ]	<name2> = [ [ <val6> ] * [ <name3> for <name4> in range ( <name3> ) ] ]
\ <name4> ( <val3> % <name6> ( <name5> [ <name2> ] [ <name1> ] . <name4> ( ) ) ) \	\ <name4> ( <val3> % <name6> ( <name5> [ <name2> ] [ <name1> ] . <name4> ( ) ) ) \	for <name4> in <val3> % <name6> ( <name5> [ <name2> ] [ <name1> ] . <name4> ( ) ) \
<name3> に <val6> を掛けた値を <val4> で割った値の切り上げ整数値に <val4> を掛けた値を <name3> とする	<name3> = math . ceil ( <name3> * <val6> / <val4> ) * <val4>	<name3> = math . ceil ( <name3> * <val6> / <val4> ) * <val4>
<name6> を <val4> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name1> とする	<name2> , <name3> , <name1> = map ( float , <name6> . split ( <val4> ) )	<name2> , <name3> , <name1> = map ( float , <name6> . split ( <val4> ) )
<name4> . <name6> ( <name3> [ <val5> ] , <name3> [ <val1> ] , <name3> [ <val2> ] )	<name4> . <name6> ( <name3> [ <val5> ] , <name3> [ <val1> ] , <name3> [ <val2> ] )	<name2> . <name6> ( <name3> [ <val5> ] , <name3> [ <val1> ] , <name3> [ <val2> ] )
<name4> の <name1> から読み込んだ一行を <name5> とする	<name5> = <name4> . <name1> . <name5>	<name4> . <name5> = <name4> . <name1> . <name5>
<name5> の <name2> から <val3> を引いた値番目を出力する	print ( <name5> [ <name2> - <val3> ] )	<name5> [ <name2> - <val3> ] = <name5> [ <name2> - <val3> ] )
<name4> ( <val2> . <name1> ( <name6> ) )	<name4> ( <val2> . <name1> ( <name6> ) )	<name4> ( <val2> . <name1> ( <name6> ) )
<name1> の <val3> 番目が <name1> の <val6> 番目以上のとき、	if <name1> [ <val3> ] >= <name1> [ <val6> ] :	if <name1> [ <val3> ] >= <name1> [ <val6> ] :
<name4> に <name5> を掛けた値に <name2> に <name1> を掛けた値を加えた値を <name3> とする - <name2> に <name5> を掛けた値に <name4> に <name1> を掛けた値を加えた値を <name6> とする	<name3> = ( <name4> * <name5> + <name2> * <name1> ) <name6> = ( - <name2> * <name5> + <name4> * <name1> )	<name6> = ( <name4> * <name5> + <name2> * <name1> ) <name6> = ( - <name2> * <name5> + <name4> * <name1> )
<name5> を <name2> に <name1> を掛けた値だけ増加させる	<name5> += <name2> * <name1>	( <name5> += <name2> * <name1> )
<name6> を <name5> の <name4> の <name2> 番目にする	<name5> . <name4> [ <name2> ] = <name6>	<name2> . <name5> [ <name4> . <name2> ] = <name6>
<name2> を <val6> で割った余りが <val1> と等しくまたは <name2> を <val3> で割った余りが <val1> と等しくかつ <name2> を <val4> で割った余りが <val1> と等しくないかどうかを返す	return <name2> % <val6> == <val1> or ( <name2> % <val3> == <val1> and <name2> % <val4> != <val1> )	x return <name2> % <val6> == <val1> or <name2> % <val3> == <val1> and <name2> % <val4> != <val1>
<name5> に <name4> から <name3> を引いた値を加えた値を <name5> とするを <name1> の <name6> に <val2> を加えた値番目にする	<name1> [ <name6> + <val2> ] = <name5> = <name5> + ( <name4> - <name3> )	else [ <name1> [ <name6> + <val2> ] = <name5> = <name5> + ( <name4> - <name3> )
( ( -1 、 <val2> ) の組、 ( <val2> 、 -1 ) の組、 ( <val6> 、 <val2> ) の組、 ( <val2> 、 <val6> ) の組 ) の組を <name4> とする	<name4> = ( ( - <val6> , <val2> ) , ( <val2> , - <val6> ) , ( <val6> , <val2> ) , ( <val2> , <val6> ) )	<name4> = ( ( - <val6> , <val2> ) , ( <val2> , - <val6> ) , ( <val6> , <val2> ) , ( <val2> , <val6> ) )
\ <name1> ( <val6> % <name5> ) \	\ <name1> ( <val6> % <name5> ) \	try <name1> ( <val6> % <name5> ) \
<name1> から <name4> に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> , <name4> + <val2> ) :	continue for <name3> in range ( <name1> , <name4> + <val2> ) :
<name4> の階乗を <name4> から <name6> を引いた値の階乗で割った商を <val2> の <val5> 乗に <val1> を加えた値で割った余りを返す	return factorial ( <name4> ) // factorial ( <name4> - <name6> ) % ( <val2> ** <val5> + <val1> )	x return math . factorial ( <name4> ) // math . factorial ( <name4> - <name6> ) % math . factorial ( <val2> , <val5> + <val1> )
- <name3> の <name4> の <name3> . <name6> ( <name2> ) 番目を返す	return - <name3> . <name4> [ <name3> . <name6> ( <name2> ) ]	return - <name3> . <name4> [ <name3> . <name6> ( <name2> ) ]
<name3> の <name1> 番目が <name2> と等しいとき、 <blk> ( <name2> 、空列 ) の組を返す </blk>	if <name3> [ <name1> ] == <name2> : <blk> return ( <name2> , [ ] ) </blk>	\ if <name3> [ <name1> ] == <name2> : <blk> return ( <name2> , [ ] ) </blk>
<name2> . <name5> ( <name6> ) を <name4> とする	<name4> = <name2> . <name5> ( <name6> )	<name4> = <name2> . <name5> ( <name6> )
( ( <val3> ) からなる列の <val3> から <name6> 未満までの数列の各要素を <name4> とし、 <name6> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val3> ] * [ <name6> for <name4> in range ( <name6> ) ] ]	<name1> = [ [ <val3> ] * [ <name6> for <name4> in range ( <name6> ) ] ]
<val1> 、 <val4> から <name3> を引いた値を <name2> 、 <name3> とする	<name2> , <name3> = <val1> , <val4> - <name3>	<name2> , <name3> = <val1> , <val4> - <name3>
<name6> . <name2> ( ) を <name1> とする	<name1> = <name6> . <name2> ( )	<name1> = <name6> . <name2> ( )
<name1> を <name4> から <val3> を引いた値に <val2> を掛けた値だけ増加させる	<name1> += ( <name4> - <val3> ) * <val2>	<name1> += ( <name4> - <val3> ) * <val2>
<val1> を <name2> の <name6> の <val1> 番目にする	<name2> . <name6> [ <val1> ] = <val1>	( <name2> [ <name6> . <val1> ] = <val1> )
<name1> の <name5> の <name3> 番目を <name3> とする	<name3> = <name1> . <name5> [ <name3> ]	<name3> = <name1> . <name5> [ <name3> ]
<name6> の <name3> 番目を ( 、つまり無限の整数列 ) からなる列だけ増加させる	<name6> [ <name3> ] += [ count ]	( <name6> [ <name3> ] += [ count , count ] )
<name4> の <name5> から <val6> を引いた値番目が <val3> と等しいとき、	if <name4> [ <name5> - <val6> ] == <val3> :	continue <name4> [ <name5> - <val6> ] == <val3> :
<name3> が <name4> と等しくかつ <name2> が <name1> と等しいとき、	if <name3> == <name4> and <name2> == <name1> :	if <name3> == <name4> and <name2> == <name1> :
<name3> の <name4> 番目の <name2> 番目を <name1> の <name4> 番目の <name2> 番目にする	<name1> [ <name4> ] [ <name2> ] = <name3> [ <name4> ] [ <name2> ]	<name1> [ <name4> ] [ <name2> ] = <name3> [ <name4> ] [ <name2> ]
<name1> の値の集まりを順に <name6> として、繰り返す	for <name6> in <name1> . values ( ) :	. for <name6> in <name1> . values ( ) :
<name1> の <name6> 番目の先頭を <name5> とする	<name5> = <name1> [ <name6> ] [ 0 ]	( <name5> = <name1> [ <name6> ] [ 0 ] )
<name2> の <val1> 番目が <name6> に含まれるとき、	if <name2> [ <val1> ] in <name6> :	for <name2> in <name2> [ <val1> ] in <name6> :
3 が <name6> の文字列に含まれるとき、	if '3' in str ( <name6> ) :	list ( '3C' in str ( <name6> ) ) :
<name6> を <name4> の <name1> の <name2> 番目だけ増加させる	<name6> += <name4> . <name1> [ <name2> ]	<name2> += <name4> . <name1> [ <name2> ]
<name2> に <name5> を <val4> で割った商を掛けた値を <name3> とする	<name3> = <name2> * ( <name5> // <val4> )	else = <name2> * ( <name5> // <val4> )
<name6> の末尾に <name3> の <name1> の <val5> 番目番目を追加する	<name6> . append ( <name3> [ <name1> [ <val5> ] ] )	<name3> . append ( <name3> [ <name1> [ <val5> ] ] )
<name5> ( <name6> , <name3> , <name1> )	<name5> ( <name6> , <name3> , <name1> )	<name5> ( <name6> , <name3> , <name1> )
<name4> の <name1> 番目に <name6> を加えた値を <name2> とする	<name2> = <name4> [ <name1> ] + <name6>	( <name2> = <name4> [ <name1> ] + <name6> )
<name4> を順に <name2> として、繰り返す	for <name2> in <name4> :	. for <name2> in <name4> :
<name6> の <name4> 番目を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name6> [ <name4> ]	( <name1> , <name5> = <name6> [ <name4> ] )
0 から <name1> 未満までの数列の各要素を <name5> とし、 ( -1 ) からなる列に <name4> ( ) . <name2> ( ) の各要素に <name3> を適用した列のリストを加えた値に ( -1 ) からなる列を加えた値の列を <name6> とする	<name6> = [ [ - 1 ] + list ( map ( <name3> , <name4> ( ) . <name2> ( ) ) ) + [ - 1 ] for <name5> in range ( <name1> ) ]	<name6> = [ [ - 1 ] + list ( map ( <name3> , <name4> ( ) . <name2> ( ) ) ) + [ - 1 ] for <name5> in range ( <name1> ) ]
<name1> の <name3> 番目の末尾に ( <val2> 、 <val2> ) の組を追加する	<name1> [ <name3> ] . append ( ( <val2> , <val2> ) )	<name1> [ <name3> ] . append ( ( <val2> , <val2> ) )
( <name4> から <name1> を引いた値、 <name3> から <name5> を引いた値 ) の組を <name2> とする	<name2> = ( <name4> - <name1> , <name3> - <name5> )	<name2> = ( <name4> - <name1> , <name3> - <name5> )
<val5> 、 <val5> 、 <val5> を <name6> 、 <name2> 、 <name4> とする	<name6> , <name2> , <name4> = <val5> , <val5> , <val5>	( <name6> , <name2> , <name4> = <val5> , <val5> , <val5> )
<name1> の <name5> 番目の <name2> 番目が <name6> より大きいとき、	if <name1> [ <name5> ] [ <name2> ] > <name6> :	for <name1> [ <name5> ] [ <name2> ] > <name6> :
<name4> に <name3> 、 <name1> を追加した集まり	<name4> . add ( <name3> , <name1> )	<name2> . add ( <name3> , <name1> )
<name1> ( ) の最小値を <name2> とする	<name2> = min ( <name1> ( ) )	( <name2> = min ( <name1> ( ) ) )
<name5> ( <name6> ) を順に <name2> として、繰り返す	for <name2> in <name5> ( <name6> ) :	. for <name2> in <name5> ( <name6> ) :
文字列、つまり入力された文字列内の <val1> を <val3> で置き換えた文字列を評価した値に <name6> を掛けた値を <name2> とする	<name2> = eval ( input ( ) . replace ( <val1> , <val3> ) ) * <name6>	<name2> = eval ( input ( ) . replace ( <val1> , <val3> ) ) * <name6>
( <val6> 、 <val4> 、 <val6> 、 -1 、 <val6> 、 <val2> 、 <val6> 、 -2 、 <val6> 、 <val5> 、 <val6> 、 -3 ) からなる列を <name3> とする	<name3> = [ <val6> , <val4> , <val6> , - <val4> , <val6> , <val2> , <val6> , - <val2> , <val6> , <val5> , <val6> , - <val5> ]	<name3> = [ <val6> , <val4> , <val6> , - <val5> , <val6> , <val2> , <val6> , <val6> , <val2> , <val6> , <val5> , <val6> , - <val2> ]
<name3> の <name2> 番目の <name1> 番目が <val5> と等しいとき、	if <name3> [ <name2> ] [ <name1> ] == <val5> :	continue if <name3> [ <name2> ] [ <name1> ] == <val5> :
<name2> を <name4> の <name6> 番目、 <name3> の <name6> 番目の最小値だけ増加させる	<name2> += min ( <name4> [ <name6> ] , <name3> [ <name6> ] )	<name2> += min ( <name4> [ <name6> ] , <name3> [ <name6> ] )
<val5> の <val2> 乗を <name3> とする	<name3> = <val5> ** <val2>	<name3> = <val5> ** <val2>
<name6> の <name4> 番目をソートした列を展開してを出力する	print ( * sorted ( <name6> [ <name4> ] ) )	print ( * sorted ( <name6> [ <name4> ] ) )
<name6> の整数値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = int ( <name6> )	<name4> [ <name1> ] = int ( <name6> )
<name6> と <name3> の論理積が <name1> に含まれないとき、 <blk> <val2> を <name1> の <name6> と <name3> の論理積番目にする </blk>	if <name6> & <name3> not in <name1> : <blk> <name1> [ <name6> & <name3> ] = <val2> </blk>	try if <name6> & <name3> not in <name1> : <blk> <name1> [ <name6> & <name3> ] = <val2> </blk>
<name4> が <name2> と等しいかどうかが <val3> と等しいとき、	if <name4> == <name2> == <val3> :	list == <name4> == <name2> == <val3> :
<name3> の <name1> の <name6> 番目を <val5> だけ増加させる	<name3> . <name1> [ <name6> ] += <val5>	<name4> . <name1> [ <name6> ] += <val5>
<name4> の <name6> の x 座標から <name2> の <name5> の x 座標を引いた値に <name4> の <name5> の x 座標から <name2> の <name6> の x 座標を引いた値を掛けた値を <name3> とする	<name3> = ( <name4> . <name6> . x - <name2> . <name5> . x ) * ( <name4> . <name5> . x - <name2> . <name6> . x )	<name3> = ( <name4> . <name6> . x - <name2> . <name5> . x ) * ( <name4> . <name5> . <name2> . <name6> . x )
<name3> の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name3> 、 <name4> 、 <name6> 、 <name1> 、 <name2> 、 <name5> とする	<name2> , <name5> , <name3> , <name4> , <name6> , <name1> , <name2> , <name5> = map ( float , <name3> . strip ( ) . split ( ) )	<name3> , <name4> , <name6> , <name1> , <name2> , <name5> = map ( float , <name3> . strip ( ) . split ( ) )
( <val3> 、 <val6> 、 <val5> 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val3> , <val6> , <val5> , <val1> ]	<name4> = [ <val3> , <val6> , <val5> , <val1> ]
<name1> の、つまり入力された文字列の整数値番目を出力する	print ( <name1> [ int ( input ( ) ) ] )	<name1> [ int ( input ( ) ) ] print ( <name1> [ int ( input ( ) ) ] )
<name6> を <name2> の <name1> 番目から、つまり末尾までの部分列とするを <name2> の <name5> 番目から、つまり末尾までの部分列にする	<name2> [ <name5> : ] = <name2> [ <name1> : ] = <name6>	dict [ <name5> : ] = <name2> [ <name1> : ] = <name6>
<val1> から <val3> 未満までの -1 間隔の数列の各要素を <name6> とし、 <name4> の末尾に <name6> を追加するの列	[ <name4> . append ( <name6> ) for <name6> in range ( <val1> , <val3> , - 1 ) ]	<name4> . append ( [ <name4> . append ( <name6> ) for <name6> in range ( <val1> , <val3> , - 1 ) ] )
( ( <val2> 、 <name6> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val2> , <name6> ) ]	<name6> = [ ( <val2> , <name6> ) ]
<name3> の <name1> 番目、 <name3> の <name1> から <name6> を引いた値番目に <name2> を加えた値の最大値を <name3> の <name1> 番目にする	<name3> [ <name1> ] = max ( <name3> [ <name1> ] , <name3> [ <name1> - <name6> ] + <name2> )	<name3> [ <name1> ] = max ( <name3> [ <name1> ] , <name3> [ <name1> - <name6> ] + <name2> )
<name6> に <name6> を掛けた値から <val3> 未満までの <name6> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> * <name6> , <val3> , <name6> ) :	. for <name2> in range ( <name6> * <name6> , <val3> , <name6> ) :
<name3> を <name2> に <name1> から <name2> を引いた値に <val5> を掛けた値を加えた値だけ増加させる	<name3> += <name2> + ( <name1> - <name2> ) * <val5>	<name2> += <name2> + ( <name1> - <name2> ) * <val5>
<name2> 、 <name4> ( <name3> ( <name5> ( <name6> ) ) ) . <name1> ( <name4> ( <val2> ) , <name4> = <name3> ) を出力する	print ( <name2> , <name4> ( <name3> ( <name5> ( <name6> ) ) ) . <name1> ( <name4> ( <val2> ) , <name4> = <name3> ) )	print ( <name2> , <name4> ( <name3> ( <name5> ( <name6> ) ) ) . <name1> ( <name4> ( <val2> ) , <name4> = <name3> ) )
<name3> を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in <name3> :	. for <name6> , <name5> in <name3> :
<name6> から <name1> を引いた値から <name2> を引いた値が <name2> より大きくかつ <name6> から <name1> を引いた値から <name2> を引いた値が <name5> 以下のとき、	if <name6> - <name1> - <name2> > <name2> and <name6> - <name1> - <name2> <= <name5> :	isinstance ( <name6> - <name1> - <name2> > <name2> and <name6> - <name1> - <name2> <= <name5> ) :
入力された文字列を空白で分割した字句列のリストを <name6> とする	<name6> = list ( input ( ) . split ( ) )	<name6> = list ( input ( ) . split ( ) )
<val2> から <name5> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列の整数値の列に ( <val2> ) からなる列を加えた値を <name1> とする	<name1> = [ int ( input ( ) ) for <name4> in range ( <name5> ) ] + [ <val2> ]	<name6> = [ int ( input ( ) ) for <name4> in range ( <name5> ) ] + [ <val2> ]
<name6> . <name1> ( <name4> ) を <name2> とする	<name2> = <name6> . <name1> ( <name4> )	dict = <name6> . <name1> ( <name4> )
<name3> [ ( <name6> , <name5> , <val4> ) ] に <name3> [ ( <name6> , <name5> , <val1> ) ] を加えた値に <name3> の ( <name6> , <name5> , <val2> ) 番目を加えた値に <name3> の ( <name6> 、 <name5> 、 <val3> ) の組番目を加えた値を <val6> で割った余りを出力する	print ( ( <name3> [ ( <name6> , <name5> , <val4> ) ] + <name3> [ ( <name6> , <name5> , <val1> ) ] + <name3> [ ( <name6> , <name5> , <val2> ) ] + <name3> [ ( <name6> , <name5> , <val3> ) ] ) % <val6> )	print ( <name3> [ ( <name6> , <name5> , <val4> ) ] + <name3> [ ( <name6> , <name5> , <val1> ) ] + <name3> [ ( <name6> , <name5> , <val2> ) ] + <name3> [ ( <name6> , <name5> , <val3> ) ] % <val6> )
<name5> . <name6> ( <name2> . <name1> , <name3> , <name4> ( <name5> , <name2> . <name6> ) ) を <name4> とする	<name4> = <name5> . <name6> ( <name2> . <name1> , <name3> , <name4> ( <name5> , <name2> . <name6> ) )	<name4> = <name5> . <name6> ( <name2> . <name1> , <name3> , <name4> ( <name5> , <name2> . <name6> ) )
<name1> に <val3> に <name6> ( <name2> , <name1> ) から <name1> を引いた値を掛けた値を加えた値を返す	return <name1> + <val3> * ( <name6> ( <name2> , <name1> ) - <name1> )	yield <name1> + <val3> * ( <name6> ( <name2> , <name1> ) - <name1> )
<name5> が <name4> 以下かつ <name5> が <name6> 以下かつ <name5> が <name2> より大きいとき、	if <name5> <= <name4> and <name5> <= <name6> and <name5> > <name2> :	while <name5> <= <name4> and <name5> <= <name6> and <name5> > <name2> :
<name1> の先頭、 <name1> の <val5> 番目、 <name1> の <val4> 番目、 <name1> の <val3> 番目、 <name1> の <val6> 番目を出力する	print ( <name1> [ 0 ] , <name1> [ <val5> ] , <name1> [ <val4> ] , <name1> [ <val3> ] , <name1> [ <val6> ] )	print ( <name1> [ 0 ] , <name1> [ <val5> ] , <name1> [ <val4> ] , <name1> [ <val3> ] , <name1> [ <val6> ] )
<name2> . <name4> ( <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] , <name6> [ <val4> ] , <name6> [ <val6> ] )	<name2> . <name4> ( <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] , <name6> [ <val4> ] , <name6> [ <val6> ] )	( <name2> . <name4> ( <name6> [ <val3> ] , <name6> [ <val5> ] , <name6> [ <val1> ] , <name6> [ <val2> ] , <name6> [ <val4> ] , <name6> [ <val6> ] ) )
<name3> の末尾に ( <name4> の <name6> 番目、 <name4> の <name5> 番目 ) からなる列を追加する	<name3> . append ( [ <name4> [ <name6> ] , <name4> [ <name5> ] ] )	<name4> . append ( [ <name4> [ <name6> ] , <name4> [ <name5> ] ] )
<name6> の末尾に ( <name1> の <name3> 番目の先頭から <name5> を引いた値、 <name1> の <name3> 番目の <val4> 番目から <name2> を引いた値 ) からなる列を追加する	<name6> . append ( [ ( <name1> [ <name3> ] [ 0 ] - <name5> ) , ( <name1> [ <name3> ] [ <val4> ] - <name2> ) ] )	<name6> . append ( [ <name1> [ <name3> ] [ 0 ] - <name5> , <name1> [ <name3> ] [ <val4> ] - <name2> ] )
<name3> を <name2> の <val5> 番目にする <name6> を <name2> の <val4> 番目にする	<name2> [ <val5> ] = <name3> <name2> [ <val4> ] = <name6>	<name6> [ <val5> ] = <name3> <name2> [ <val4> ] = <name6>
( ( <val4> 、 <name2> ) の組 ) からなる列を <name1> とする	<name1> = [ ( <val4> , <name2> ) ]	<name1> = [ ( <val4> , <name2> ) ]
<name5> の <name1> の <val4> 番目を出力する	print ( <name5> . <name1> [ <val4> ] )	print ( <name5> . <name1> [ <val4> ] )
<name2> の -1 番目に <val3> を加えた値が <name5> の先頭と等しいとき、	if <name2> [ - 1 ] + <val3> == <name5> [ 0 ] :	continue <name2> [ - <val3> ] + <val3> == <name5> [ 0 ] :
<name6> に <name2> を掛けた値に <name1> を掛けた値を <name3> で割った値を <name5> とする	<name5> = <name6> * <name2> * <name1> / <name3>	<name5> = <name6> * <name2> * <name1> / <name3>
文字コード <val2> の順序数に <name4> を加えた値の文字を <name6> とする	<name6> = chr ( ord ( <val2> ) + <name4> )	<name6> = chr ( ord ( <val2> ) + <name4> )
<val3> から <name5> の長さ未満までの数列の各要素を <name6> とし、 <val2> 、 ( <val3> ) からなる列の <name5> の先頭の長さ回分の列からの配列の列を <name4> とする	<name4> = [ array ( <val2> , [ <val3> ] * len ( <name5> [ <val3> ] ) ) for <name6> in range ( len ( <name5> ) ) ]	<name4> = [ array ( <val2> , [ <val3> ] * len ( <name5> [ <val3> ] ) ) for <name6> in range ( len ( <name5> ) ) ]
<name1> . <name4> ( <name3> . <name2> , <name5> , <name3> . <name6> ) を <name6> とする	<name6> = <name1> . <name4> ( <name3> . <name2> , <name5> , <name3> . <name6> )	<name6> = <name1> . <name4> ( <name3> . <name2> , <name5> , <name3> . <name6> )
未定値を <name2> の <name4> とするを <name2> の <name3> にする	<name2> . <name3> = <name2> . <name4> = None	dict . <name2> . <name3> = <name2> . <name4> = None
<name4> の <val2> 番目を <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name4> [ <val2> ]	<name1> [ <val5> ] = <name4> [ <val2> ]
<name4> に <name3> を加えた値が <name2> より小さいとき、	if <name4> + <name3> < <name2> :	list if <name4> + <name3> < <name2> :
<name2> 、 <name5> の最小値を <name5> とする	<name5> = min ( <name2> , <name5> )	<name2> . <name5> = min ( <name2> , <name5> )
<name3> を <name2> ( <name6> , <name1> , <name4> , <name5> , <name3> , <name2> ) だけ増加させる	<name3> += <name2> ( <name6> , <name1> , <name4> , <name5> , <name3> , <name2> )	<name1> += <name2> ( <name6> , <name1> , <name4> , <name5> , <name3> , <name2> )
<name4> に <name6> を掛けた値から <name2> に <name5> を掛けた値を引いた値を出力する	print ( <name4> * <name6> - <name2> * <name5> )	print ( <name4> * <name6> - <name2> * <name5> )
<name4> の <name1> 番目を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name4> [ <name1> ]	<name1> [ <name2> ] = <name4> [ <name1> ]
<name1> の <name2> から <val5> を引いた値番目が <val4> と等しいとき、	if <name1> [ <name2> - <val5> ] == <val4> :	for <name1> [ <name2> - <val5> ] == <val4> :
<name3> が <name6> に含まれないとき、	if not ( <name3> in <name6> ) :	while <name3> not in <name6> :
<name5> ( <name2> [ <name1> ] ) を <name2> の <name1> 番目とするを <name1> とする	<name1> = <name2> [ <name1> ] = <name5> ( <name2> [ <name1> ] )	<name4> = <name2> [ <name1> ] = <name5> ( <name2> [ <name1> ] )
-1 * <name1> に <name5> . <name2> を掛けた値に <name5> の y 座標を加えた値から <name6> を引いた値の絶対値を <val3> に <name1> に <name1> を掛けた値を加えた値の平方根で割った値を <name4> とする	<name4> = abs ( - <val3> * <name1> * <name5> . <name2> + <name5> . y - <name6> ) / math . sqrt ( <val3> + <name1> * <name1> )	<name5> = abs ( - <val3> * <name1> * <name5> . <name2> + <name5> . y - <name6> ) / sqrt ( <val3> + <name1> * <name1> )
\ <name3> ( <val5> ) \	\ <name3> ( <val5> ) \	) <name3> ( <val5> ) \
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name4> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name3> を <name5> で割った余りが <val2> と等しいとき、	if <name3> % <name5> == <val2> :	continue % <name5> == <val2> :
0 から <name5> 未満までの数列の各要素を <name3> とし、 <name4> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name1> とする	<name1> = [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name3> in range ( <name5> ) ]	<name6> = [ tuple ( map ( int , <name4> ( ) . split ( ) ) ) for <name3> in range ( <name5> ) ]
<name5> の <name3> 番目に <name2> の <name3> 番目を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name5> [ <name3> ] + <name2> [ <name3> ]	<name4> [ <name3> ] = <name5> [ <name3> ] + <name2> [ <name3> ]
区切りなしで改行せずに <val5> を出力する	print ( <val5> , sep = '' , end = '' )	print ( <val5> , sep = '' , end = '' )
<name1> の <name3> に対応する値、もし存在しなければ <val5> を <name2> とする	<name2> = <name1> . <name3> . get ( <val5> )	<name1> . <name2> = <name1> . <name3> . get ( <val5> )
<name2> に番号付した組の列を順に <name4> 、 <name1> として、繰り返す	for <name4> , <name1> in enumerate ( <name2> ) :	\ <name4> , <name1> in enumerate ( <name2> ) :
<name6> . <name3> ( <name1> ) を <name1> とする	<name1> = <name6> . <name3> ( <name1> )	<name1> = <name6> . <name3> ( <name1> )
<name5> を <name6> の文字列だけ増加させる	<name5> += str ( <name6> )	<name2> += str ( <name6> )
<name3> の <name6> 、 <name3> の <name4> 、 <name3> の <name5> 、 <name3> の <name1> を <name3> の <name4> 、 <name3> の <name1> 、 <name3> の <name6> 、 <name3> の <name5> とする	<name3> . <name4> , <name3> . <name1> , <name3> . <name6> , <name3> . <name5> = <name3> . <name6> , <name3> . <name4> , <name3> . <name5> , <name3> . <name1>	<name3> . <name4> , <name3> . <name1> , <name3> . <name6> , <name3> . <name5> = <name3> . <name6> , <name3> . <name4> , <name3> . <name5> , <name3> . <name1>
<name2> が <name5> の <name1> より小さい間、次を繰り返す	while <name2> < <name5> . <name1> :	for <name2> in <name5> . <name1> :
<val2> を <name3> とするを <name6> とする	<name6> = <name3> = <val2>	else = <name3> = <val2>
0 から <name3> から <name5> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> - <name5> ) :	for <name1> in range ( <name3> - <name5> ) :
<val5> の <val4> 乗を <name2> とする	<name2> = <val5> ** <val4>	( <name2> = <val5> ** <val4> )
<name6> の <name4> 、 <name6> の <name5> を <name3> 、 <name2> とする	<name3> , <name2> = <name6> . <name4> , <name6> . <name5>	<name3> , <name2> = <name6> . <name4> , <name6> . <name5>
<val5> に <name4> を加えた値に <val1> に <name6> を掛けた値を加えた値を <name3> とする	<name3> = <val5> + <name4> + <val1> * <name6>	( <name3> = <val5> + <name4> + <val1> * <name6> )
<val4> から <name3> を引いた値を <name6> とする	<name6> = <val4> - <name3>	( <name6> = <val4> - <name3> )
- <name6> の x 座標を <name3> とする	<name3> = - <name6> . x	( <name3> = - <name6> . x )
<name1> の <val4> 番目が <name5> の <val4> 番目と等しいとき、	if <name1> [ <val4> ] == <name5> [ <val4> ] :	: if <name1> [ <val4> ] == <name5> [ <val4> ] :
<name4> のリストの各要素に整数を適用した列のリストを <name4> とする	<name4> = list ( map ( int , list ( <name4> ) ) )	<name4> = list ( map ( int , list ( <name4> ) ) )
<name5> が <val4> と等しくかつ <name6> が <val4> と等しいとき、	if <name5> == <val4> and <name6> == <val4> :	: if <name5> == <val4> and <name6> == <val4> :
<name3> の <name2> の <name4> から <name1> を引いた値番目を <val6> だけ増加させる	<name3> . <name2> [ <name4> - <name1> ] += <val6>	<name3> . <name2> [ <name4> - <name1> ] += <val6>
<name2> が <name3> 以下のとき、 <blk> 繰り返しを中断する </blk>	if <name2> <= <name3> : <blk> break </blk>	list ( <name2> <= <name3> ) : <blk> break </blk>
<name3> の <name2> 番目の <val1> 番目をそうでなければ、とする	else = <name3> [ <name2> ] [ <val1> ]	now = <name3> [ <name2> ] [ <val1> ]
0 から <name2> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を <val6> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列の列を <name1> とする	<name1> = [ [ int ( <name5> ) for <name5> in input ( ) . split ( <val6> ) ] for <name3> in range ( <name2> ) ]	<name6> = [ [ int ( <name5> ) for <name5> in input ( ) . split ( <val6> ) ] for <name3> in range ( <name2> ) ]
<val5> を <name6> とする <name4> から <name2> を引いた値を <name1> とする	<name6> = <val5> <name1> = <name4> - <name2>	<name2> = <val5> <name1> = <name4> - <name2>
<name1> の先頭の <val6> 番目が <name2> と等しい間、次を繰り返す	while <name1> [ 0 ] [ <val6> ] == <name2> :	del <name1> [ 0 ] [ <val6> ] == <name2> :
<name4> の末尾に ( <name2> を <name6> で割った値、 <name2> 、 <name6> ) の組を追加する	<name4> . append ( ( <name2> / <name6> , <name2> , <name6> ) )	<name4> . append ( ( <name2> / <name6> , <name2> , <name6> ) )
<name4> の <name3> が、つまり未定値と等しくないとき、	if <name4> . <name3> is None :	if <name4> . <name3> != None :
{ 0 } { 1 } { 2 : . 8 f }を書式として <name3> を <name5> で割った商、 <name3> を <name5> で割った余り、 <name3> を <name5> で割った値で整形した文字列を出力する	print ( '{0} {1} {2:.8f}' . format ( <name3> // <name5> , <name3> % <name5> , <name3> / <name5> ) )	[ print ( '{0} << 2 ] . format ( <name3> // <name5> , <name3> % <name5> , <name3> / <name5> ) )
<name6> の末尾に <name3> の <name1> 番目を追加する	<name6> . append ( <name3> [ <name1> ] )	<name3> . append ( <name3> [ <name1> ] )
<name5> の <name1> 番目の出現頻度順の列を <name6> とする	<name6> = <name5> [ <name1> ] . most_common ( )	<name4> = <name5> [ <name1> ] . most_common ( )
<name3> を <name5> の <name2> の <name3> 番目から <val6> を引いた値番目にする	<name5> [ <name2> [ <name3> ] - <val6> ] = <name3>	<name4> [ <name2> [ <name3> ] - <val6> ] = <name3>
( -1 ) からなる列の <name2> に <name5> を掛けた値に <val1> を加えた値回分の列を <name6> とする	<name6> = [ - <val1> ] * ( <name2> * <name5> + <val1> )	<name6> = [ - <val1> ] * ( <name2> * <name5> + <val1> )
<name1> ( <name4> , <name5> , <name3> , <name2> )	<name1> ( <name4> , <name5> , <name3> , <name2> )	<name5> ( <name1> ( <name4> , <name5> , <name3> , <name2> ) )
<name1> 内の <val5> を <name2> の文字列で置き換えた文字列を <name3> とする	<name3> = <name1> . replace ( <val5> , str ( <name2> ) )	<name3> = <name1> . replace ( <val5> , str ( <name2> ) )
無限の整数列を <name4> を <name6> で割った商だけ増加させる	count += <name4> // <name6>	<name2> += count // <name4> // <name6>
<name6> の絶対値を返す	return abs ( <name6> )	yield abs ( <name6> )
<name6> が <name2> より小さいかどうかを返す	return <name6> < <name2>	yield <name6> < <name2>
<name4> に <val6> を加えた値から <name5> の <name3> 番目の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> + <val6> , len ( <name5> [ <name3> ] ) ) :	for <name2> in range ( <name4> + <val6> , len ( <name5> [ <name3> ] ) ) :
( <val6> 、 <val2> ) の組	( <val6> , <val2> )	( <val6> , <val2> )
<name1> が <name2> 以下でないとき、	if not <name1> <= <name2> :	list ( not <name1> <= <name2> ) :
<val3> 進表記 <name5> の <val4> 番目から <val6> 番目までの部分列の整数値を <name1> とする	<name1> = int ( <name5> [ <val4> : <val6> ] , <val3> )	<name1> = int ( <name5> [ <val4> : <val6> ] , <val3> )
<name1> の <name4> の <name3> が、つまり未定値と等しくないとき、	if <name1> . <name4> . <name3> is None :	if <name1> . <name4> . <name3> != None :
<name1> 、 <name5> 、 <name4> はグローバル変数とする	global <name1> , <name5> , <name4>	>> = <name1> , <name5> , <name4>
<name3> に <name2> を加えた値を <name5> とする	<name5> = <name3> + <name2>	else = <name3> + <name2>
. を <name1> の <name2> 番目の <name3> 番目にする	<name1> [ <name2> ] [ <name3> ] = '.'	( <name1> [ <name2> ] [ <name3> ] = '.' )
<name1> に <name2> を加えた値から <name4> を引いた値に <name5> の <val3> 乗を加えた値に <val6> を加えた値を <name6> とする	<name6> = <name1> + <name2> - <name4> + <name5> ** <val3> + <val6>	<name6> = <name1> + <name2> - <name4> + <name5> ** <val3> + <val6>
( <val6> 、 -1 、 <val1> ) からなる列を <name2> とする	<name2> = [ <val6> , - <val1> , <val1> ]	<name6> = [ <val6> , - <val1> , <val1> ]
<name3> の <name6> を <name2> の <name6> にする	<name2> . <name6> = <name3> . <name6>	<name2> . <name6> = <name3> . <name6>
<name1> に <name5> に <val2> を掛けた値、 <name4> 、 <name6> 、 <name3> 、 <name1> 、 <name5> を追加した集まり	<name1> . add ( <name5> * <val2> , <name4> , <name6> , <name3> , <name1> , <name5> )	<name1> . add ( <name5> * <val2> , <name4> , <name6> , <name3> , <name1> , <name5> )
<name6> を <name5> で割った余りを <name1> とする	<name1> = <name6> % <name5>	( <name1> = <name6> % <name5> )
<val2> に <name4> を掛けた値を <name5> とする	<name5> = <val2> * <name4>	<name5> = <val2> * <name4>
<val1> が <name5> に含まれるとき、	if <val1> in <name5> :	list in <val1> in <name5> :
0 から <name3> 未満までの数列を順に <name4> として、繰り返す <blk> <name6> の <name4> 番目に <name5> の <name1> 番目の <name4> 番目を加えた値を <name6> の <name4> に <val2> を加えた値番目にする </blk>	for <name4> in range ( <name3> ) : <blk> <name6> [ <name4> + <val2> ] = <name6> [ <name4> ] + <name5> [ <name1> ] [ <name4> ] </blk>	: <name6> [ <name4> + <val2> ] = range ( <name3> ) : <blk> <name6> [ <name4> + <val2> ] = <name6> [ <name4> ] + <name5> [ <name1> ] [ <name4> ] </blk>
未定値を <name5> の <val3> 番目とするを <name6> の <val1> 番目にする	<name6> [ <val1> ] = <name5> [ <val3> ] = None	<name3> [ <val1> ] = <name5> [ <val3> ] = None
<name2> に <name5> を加えた値が <name4> の <name6> 番目より小さいとき、	if <name2> + <name5> < <name4> [ <name6> ] :	continue <name2> + <name5> < <name4> [ <name6> ] :
( <val4> 、 <val3> 、 <val6> 、 <val5> 、 <val1> ) からなる列を <name2> とする	<name2> = [ <val4> , <val3> , <val6> , <val5> , <val1> ]	<name4> = [ <val4> , <val3> , <val6> , <val5> , <val1> ]
<val1> を <name5> の <name3> から <name6> を引いた値に <val2> を加えた値番目にする	<name5> [ <name3> - <name6> + <val2> ] = <val1>	<name4> [ <name3> - <name6> + <val2> ] = <val1>
文字列 <name5> を評価した値が <val1> と等しいとき、	if eval ( <name5> ) == <val1> :	for <name5> in eval ( <name5> ) == <val1> :
<name6> の <name5> と等しい要素の最初の位置を <name1> とする	<name1> = <name6> . index ( <name5> )	<name1> = <name6> . index ( <name5> )
|に <val4> に <name3> から <val1> を引いた値に <val2> を加えた値を掛けた値を加えた値を出力する	print ( <val2> + <val4> * ( <name3> - <val1> ) + <val2> )	end = <val4> + <val4> * ( <name3> - <val1> ) + <val2> )
<val5> から <name3> 未満までの数列の各要素を <name6> とし、 <val5> の列を <name2> とする	<name2> = [ <val5> for <name6> in range ( <name3> ) ]	<name6> = [ <val5> for <name6> in range ( <name3> ) ]
<val1> を <name3> の <name6> の <name2> 番目にする	<name3> . <name6> [ <name2> ] = <val1>	( <name3> [ <name6> . <name2> ] = <val1> )
<name5> の <name3> を <name3> とする	<name3> = <name5> . <name3>	<name3> = <name5> . <name3>
<name2> の <name6> 番目の <name5> 番目に <name4> の <name5> 番目を加えた値を <name2> の <name6> に <val3> を加えた値番目の <name5> 番目にする	<name2> [ <name6> + <val3> ] [ <name5> ] = <name2> [ <name6> ] [ <name5> ] + <name4> [ <name5> ]	( <name2> [ <name6> + <val3> ] [ <name5> ] = <name2> [ <name6> ] [ <name5> ] + <name4> [ <name5> ] )
<name1> から <name3> に <val5> を加えた値未満までの数列の各要素を <name2> とし、 <name2> が <name6> に含まれるときの <name2> の列を <name4> とする	<name4> = [ <name2> for <name2> in range ( <name1> , <name3> + <val5> ) if <name2> in <name6> ]	<name2> = [ <name2> for <name2> in range ( <name1> , <name3> + <val5> ) if <name2> in <name6> ]
<name4> ( <name6> [ <name3> ] [ <val2> ] )	<name4> ( <name6> [ <name3> ] [ <val2> ] )	<name4> ( <name6> [ <name3> ] [ <val2> ] )
<name3> の <name5> に <val4> を加えた値番目でないを <name3> の <name5> に <val4> を加えた値番目にする	<name3> [ <name5> + <val4> ] = not <name3> [ <name5> + <val4> ]	( <name3> [ <name5> + <val4> ] = not <name3> [ <name5> + <val4> ] )
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列のリストを <name2> とする	<name2> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )	<name2> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )
<name6> の <name5> 番目の先頭、 <name6> の <name5> 番目の <val1> 番目を出力する	print ( <name6> [ <name5> ] [ 0 ] , <name6> [ <name5> ] [ <val1> ] )	end = <name6> [ <name5> ] [ 0 ] , <name6> [ <name5> ] [ <val1> ] )
<name6> を <name2> を <name3> で割った商に <name5> を掛けた値だけ減少させる	<name6> -= ( <name2> // <name3> ) * <name5>	<name1> -= <name2> // <name3> * <name5>
<name2> の長さが <name3> 以上のとき、 <blk> 繰り返しを中断する </blk>	if len ( <name2> ) >= <name3> : <blk> break </blk>	while len ( <name2> ) >= <name3> : <blk> break </blk>
<name4> の -1 番目が <name3> と等しくないとき、	if <name4> [ - 1 ] != <name3> :	while <name4> [ - 1 ] != <name3> :
<name3> を <name2> の <name2> の <name1> 番目の <name1> 番目に <name1> が <name6> と等しくないとき -1 、そうでなければ <val5> を掛けた値倍にする	<name3> *= <name2> . <name2> [ <name1> ] [ <name1> ] * ( - <val5> if <name1> != <name6> else <val5> )	<name2> *= <name2> . <name2> [ <name1> ] [ <name1> ] * ( - <val5> if <name1> != <name6> else <val5> )
<val1> を開始番号として <name4> の先頭を除いた部分列に番号付した組の列を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in enumerate ( <name4> [ <val1> : ] , start = <val1> ) :	. for <name2> , <name5> in enumerate ( <name4> [ <val1> : ] , start = <val1> ) :
<name2> の <name4> の <name1> 番目が <name5> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name2> . <name4> [ <name1> ] == <name5> : <blk> continue </blk>	\ if <name2> . <name4> [ <name1> ] == <name5> : <blk> continue </blk>
<name4> を反転した列を順に <name5> として、繰り返す	for <name5> in reversed ( <name4> ) :	for <name5> in reversed ( <name4> ) :
<name6> の <name1> 番目の <name4> 番目でないとき、	if not <name6> [ <name1> ] [ <name4> ] :	isinstance ( not <name6> [ <name1> ] [ <name4> ] ) :
<name6> に番号付した組の列の各要素を <name5> 、 <name2> とし、 <name3> と <name2> の論理積が <val4> <name1> と等しくないときの <name5> の列を <name1> とする	<name1> = [ <name5> for <name5> , <name2> in enumerate ( <name6> ) if <name3> & <name2> != <val4> <name1> ]	<name6> = [ <name5> for <name5> , <name2> in enumerate ( <name6> ) if <name3> & <name2> != <val4> <name1> ]
<name2> の <name5> 番目を <name1> とする	<name1> = <name2> [ <name5> ]	<name1> = <name2> [ <name5> ]
0 から <val4> 未満までの数列の各要素を <name5> とし、 ( <name5> 、 <name1> の <name5> 番目 ) からなる列の列を <name3> とする	<name3> = [ [ <name5> , <name1> [ <name5> ] ] for <name5> in range ( <val4> ) ]	<name6> = [ [ <name5> , <name1> [ <name5> ] ] for <name5> in range ( <val4> ) ]
<name2> の <name6> 番目の <name3> 番目から <name2> の <name1> 番目の <name3> 番目を引いた値を <name5> とする	<name5> = <name2> [ <name6> ] [ <name3> ] - <name2> [ <name1> ] [ <name3> ]	<name5> = <name2> [ <name6> ] [ <name3> ] - <name2> [ <name1> ] [ <name3> ]
<name3> の <name2> に [ MASK ] を書き込むを <name5> とする	<name5> = <name3> . <name2> . <name5>	<name2> . <name5> = <name3> . <name2> . <name5>
<name6> を順に <name1> 、 <name5> 、 <name2> として、繰り返す	for <name1> , <name5> , <name2> in <name6> :	. for <name1> , <name5> , <name2> in <name6> :
<name5> に <val4> を掛けた値に <name3> に <val1> を掛けた値を加えた値に <name2> を加えた値に <name6> に <val5> を掛けた値を加えた値を <name6> とする	<name6> = <name5> * <val4> + <name3> * <val1> + <name2> + <name6> * <val5>	<name6> = <name5> * <val4> + <name3> * <val1> + <name2> + <name6> * <val5>
<name4> をパラメータとして ( <name4> の先頭の長さ、 <name4> の先頭 ) の組を返す関数をキーとして <name5> のキーと値の集まりをソートした列を <name2> とする	<name2> = sorted ( <name5> . items ( ) , key = lambda <name4> : ( len ( <name4> [ 0 ] ) , <name4> [ 0 ] ) )	input = sorted ( <name5> . items ( ) , key = lambda <name4> : ( len ( <name4> [ 0 ] ) , <name4> [ 0 ] ) )
<name1> と <val3> を <name2> だけ左シフトした値の論理積のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name1> & ( <val3> << <name2> ) : <blk> continue </blk>	\ if <name1> & ( <val3> << <name2> ) : <blk> continue </blk>
<name3> の末尾に <name2> . <name5> ( <name4> , <name1> ) を追加する	<name3> . append ( <name2> . <name5> ( <name4> , <name1> ) )	<name3> . append ( <name2> . <name5> ( <name4> , <name1> ) )
<name5> . <name6> ( <name4> . <name2> ( ) )	<name5> . <name6> ( <name4> . <name2> ( ) )	<name5> . <name6> ( <name4> . <name2> ( ) )
<name5> の <name4> 番目を順に <name1> として、繰り返す	for <name1> in <name5> [ <name4> ] :	continue <name5> [ <name4> ] :
( 、つまり偽、 <name3> 、 <name2> ) の組を返す	return ( False , <name3> , <name2> )	insort ( False , <name3> , <name2> )
<name6> から <name1> を引いた値から <val3> を引いた値を <name2> とする	<name2> = <name6> - <name1> - <val3>	<name2> = <name6> - <name1> - <val3>
<name1> の <name4> の <name6> 番目を返す	return <name1> . <name4> [ <name6> ]	yield <name1> . <name4> [ <name6> ]
<name6> が <name2> と等しいかどうかが <val5> と等しいとき、	if ( <name6> == <name2> == <val5> ) :	list == <name6> == <name2> == <val5> :
<name4> を <val1> で割った値の整数値に <val5> を加えた値に <val1> を掛けた値を <name4> とする	<name4> = ( int ( <name4> / <val1> ) + <val5> ) * <val1>	<name4> = ( int ( <name4> / <val1> ) + <val5> ) * <val1>
( <name3> 、 <name1> ) の組を <name4> の <name6> の <name1> 番目の <name3> 番目の整数値番目にする	<name4> [ int ( <name6> [ <name1> ] [ <name3> ] ) ] = ( <name3> , <name1> )	<name4> [ int ( <name6> [ <name1> ] [ int ( <name3> ] ) ) ] = ( <name3> , <name1> )
<name3> を <name6> の <name2> の <name4> 番目にする	<name6> . <name2> [ <name4> ] = <name3>	( <name6> . <name2> [ <name4> ] = <name3> )
<name5> の末尾に <name5> の <name6> 番目に <val3> を加えた値を追加する	<name5> . append ( <name5> [ <name6> ] + <val3> )	) <name5> . append ( <name5> [ <name6> ] + <val3> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の浮動小数点数の列を展開し、それぞれ <name3> 、 <name6> 、 <name5> 、 <name2> 、 <name4> 、 <name1> とする	<name3> , <name6> , <name5> , <name2> , <name4> , <name1> = [ float ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name6> , <name5> , <name2> , <name4> , <name1> = [ float ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name4> の <name1> の <name6> の <name2> の <name3> 番目を順に <name5> として、繰り返す	for <name5> in <name4> . <name1> . <name6> [ <name2> . <name3> ] :	. for <name5> in <name4> . <name1> . <name6> [ <name2> . <name3> ] :
<val5> から <name1> の長さ未満までの数列の各要素を <name6> とし、 <val2> 、 ( <val5> ) からなる列の <name1> の先頭の長さ回分の列からの配列の列を <name4> とする	<name4> = [ array ( <val2> , [ <val5> ] * len ( <name1> [ <val5> ] ) ) for <name6> in range ( len ( <name1> ) ) ]	<name4> = [ array ( <val2> , [ <val5> ] * len ( <name1> [ <val5> ] ) ) for <name6> in range ( len ( <name1> ) ) ]
<name3> を <name1> の ( <name5> 、 <name4> ) の組番目にする	<name1> [ ( <name5> , <name4> ) ] = <name3>	<name1> [ ( <name5> , <name4> ) ] = <name3>
<name3> を <name4> の <name2> だけ増加させる	<name3> += <name4> . <name2>	( <name3> += <name4> . <name2> )
<name3> を <name6> の <name5> の <name1> 番目にする	<name6> . <name5> [ <name1> ] = <name3>	<name3> . <name5> [ <name1> ] = <name3>
<name2> の <name5> 番目が <val3> と等しいとき、	if <name2> [ <name5> ] == <val3> :	continue if <name2> [ <name5> ] == <val3> :
<name6> の <name4> 番目の <name1> 番目を <name5> とする	<name5> = <name6> [ <name4> ] [ <name1> ]	<name5> = <name6> [ <name4> ] [ <name1> ]
<name4> から <name1> を引いた値から <name4> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> - <name1> , <name4> ) :	: for <name5> in range ( <name4> - <name1> , <name4> ) :
<val4> を <name2> の <name5> から <val4> を引いた値番目の <name3> の <name6> 番目から <val4> を引いた値番目にする	<name2> [ <name5> - <val4> ] [ <name3> [ <name6> ] - <val4> ] = <val4>	<name2> [ <name5> - <val4> ] [ <name3> [ <name6> ] - <val4> ] = <val4>
<name2> の <name4> 番目を順に <name5> として、繰り返す	for <name5> in <name2> [ <name4> ] :	continue [ <name4> ] :
<name6> に <name3> の <name4> 番目を加えた値を <name1> とする	<name1> = <name6> + <name3> [ <name4> ]	<name1> = <name6> + <name3> [ <name4> ]
<name2> の、つまり先頭から <val4> 番目までの部分列を <name1> とする	<name1> = <name2> [ : <val4> ]	<name1> = <name2> [ : <val4> ]
( ( 、つまり真 ) からなる列の <name6> に <val3> を加えた値回分の列 ) からなる列を <name4> とする	<name4> = [ [ True ] * ( <name6> + <val3> ) ]	<name4> = [ [ True ] * ( <name6> + <val3> ) ]
<name4> が <val5> より小さいとき、	if ( <name4> < <val5> ) :	list if <name4> < <val5> :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = input ( ) . split ( )	<name4> , <name1> , <name6> = input ( ) . split ( )
<name4> の y 座標を <name3> の y 座標にする	<name3> . y = <name4> . y	<name3> . y = <name4> . y
<name2> を <name3> の <name4> にする	<name3> . <name4> = <name2>	<name3> . <name4> = <name2>
<name4> が <val2> 以上または <name4> が <val1> 以上かつ <name5> が <val6> 以上のとき、 <blk> <val3> + <name4> ( <name4> -30 ) に <val2> を加えた値に <name5> の文字列を加えた値に <val2> を加えた値に <name1> の文字列を加えた値を出力する </blk>	if <name4> >= <val2> or <name4> >= <val1> and <name5> >= <val6> : <blk> print ( <val3> + <name4> ( <name4> - 30 ) + <val2> + <name4> ( <name5> ) + <val2> + <name4> ( <name1> ) ) </blk>	for <name4> in <val2> or <name4> >= <val1> and <name5> >= <val6> : <blk> print ( <val3> + str ( <name4> - <val1> ) + <val2> + str ( <name1> ) + <val2> + <name4> ) </blk>
<val3> を <name2> の <name1> 番目の <name4> 番目の <name5> 番目にする	<name2> [ <name1> ] [ <name4> ] [ <name5> ] = <val3>	( <name2> [ <name1> ] [ <name4> ] [ <name5> ] = <val3> )
0 から <name6> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の浮動小数点数の列を <name4> とする	<name4> = [ float ( input ( ) ) for <name3> in range ( <name6> ) ]	<name4> = [ float ( input ( ) ) for <name3> in range ( <name6> ) ]
<name6> の <name2> 番目、 <name6> の <name5> 番目を <name6> の <name5> 番目、 <name6> の <name2> 番目とする	<name6> [ <name5> ] , <name6> [ <name2> ] = <name6> [ <name2> ] , <name6> [ <name5> ]	<name6> [ <name5> ] , <name6> [ <name2> ] = <name6> [ <name2> ] , <name6> [ <name5> ]
<name2> 、 <name6> 、 <name1> 、 <name3> の最小値を返す	return min ( <name2> , <name6> , <name1> , <name3> )	self return min ( <name2> , <name6> , <name1> , <name3> )
<name5> の <name3> に対応する値、もし存在しなければ <val2> を <name4> とする	<name4> = <name5> . <name3> . get ( <val2> )	<name4> = <name5> . <name3> . get ( <val2> )
<name4> ( ) の整数値を <name2> とする	<name2> = int ( <name4> ( ) )	( <name2> = int ( <name4> ( ) ) )
<name2> から <name6> を引いた値を出力する	print ( <name2> - <name6> )	print ( <name2> - <name6> )
<name6> . <name2> ( <name1> ) を順に <name5> として、繰り返す	for <name5> in <name6> . <name2> ( <name1> ) :	for <name5> in <name6> . <name2> ( <name1> ) :
<name1> が <name2> と等しいかどうかが <val3> と等しいかどうかに [ MASK ] を加えた値を <name4> とする	<name4> = + ( <name1> == <name2> == <val3> )	<name4> = + ( <name1> == <name2> == <val3> )
<name3> から <name2> を引いた値が <name6> から <name1> を引いた値より大きくまたは <name5> が <name4> 以上のとき、	if <name3> - <name2> > <name6> - <name1> or <name5> >= <name4> :	or ( <name3> - <name2> ) > ( <name6> - <name1> ) or ( <name5> >= <name4> ) :
0 から <val4> に <name1> を掛けた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val4> * <name1> ) :	for <name3> in range ( <val4> * <name1> ) :
<val1> を <name6> の <name5> 番目の <name5> 番目にする	<name6> [ <name5> ] [ <name5> ] = <val1>	( <name6> [ <name5> ] [ <name5> ] = <val1> )
<name3> の先頭の先頭を出力する	print ( <name3> [ 0 ] [ 0 ] )	end = <name3> [ 0 ] [ 0 ] )
<name6> の末尾に ( <name2> 、 <name1> ) の組を追加する	<name6> . append ( ( <name2> , <name1> ) )	<name2> . append ( ( <name2> , <name1> ) )
( <val3> ) からなる列の <name2> に <val3> を加えた値回分の列を <name5> とする	<name5> = [ <val3> ] * ( <name2> + <val3> )	else = [ <val3> ] * ( <name2> + <val3> )
( <name3> に <name1> を掛けた値に <name5> に <name4> を掛けた値を加えた値、 <name6> に <name1> を掛けた値に <name5> に <name2> を掛けた値を加えた値、 <name1> ) の組を返す	return ( <name3> * <name1> + <name5> * <name4> , <name6> * <name1> + <name5> * <name2> , <name1> )	yield ( <name3> * <name1> + <name5> * <name4> , <name6> * <name1> + <name5> * <name2> , <name1> )
0 から <name3> に <val4> を加えた値未満までの数列の各要素を <name6> とし、 <val2> を間に入れて <name1> の <name6> 番目の各要素に整数を適用した列を連結した文字列を出力するの列を <name5> とする	<name5> = [ print ( <val2> . join ( map ( str , <name1> [ <name6> ] ) ) ) for <name6> in range ( <name3> + <val4> ) ]	<name5> = [ <val2> . join ( map ( str , <name1> [ <name6> ] ) ) for <name6> in range ( <name3> + <val4> ) ]
<name6> ( <name1> , <name2> , <name5> )	<name6> ( <name1> , <name2> , <name5> )	set ( <name6> ( <name1> , <name2> , <name5> ) )
<val6> から <name1> + <val6> 未満までの数列の <val3> 個までのコンビネーションの各要素を <name2> とし、 <name2> の総和が <name4> と等しいときの <name2> の列の長さを出力する	print ( len ( [ <name2> for <name2> in combinations ( range ( <val6> , <name1> + <val6> ) , <val3> ) if sum ( <name2> ) == <name4> ] ) )	[ print ( len ( [ <name2> for <name2> in itertools . combinations ( range ( <val6> , <name1> + <val6> ) , <val3> ) if sum ( <name2> ) == <name4> ] ) )
<name5> が <name1> 以下かつ <name6> の <name5> 番目が <name6> の <name2> 番目より大きいとき、	if <name5> <= <name1> and <name6> [ <name5> ] > <name6> [ <name2> ] :	for <name5> <= <name1> and <name6> [ <name5> ] > <name6> [ <name2> ] :
<name3> の <name5> - <name4> - <name6> 番目から <name3> の <name5> - <name6> 番目を引いた値に <name2> の <name6> 番目を掛けた値を <name1> で割った余りが <name3> と等しいとき、	if ( <name3> [ <name5> - <name4> - <name6> ] - <name3> [ <name5> - <name6> ] ) * <name2> [ <name6> ] % <name1> == <name3> :	for <name3> in ( <name3> [ <name5> - <name4> - <name6> ] - <name3> [ <name5> - <name6> ] ) * <name2> [ <name6> ] % <name1> == <name3> :
<name6> ( * <name4> [ <name5> ] ) を <name3> とする	<name3> = <name6> ( * <name4> [ <name5> ] )	else = <name6> ( * <name4> [ <name5> ] )
<val6> <name2> <val5> を <name1> とする	<name1> = <val6> <name2> <val5>	<name1> = <val6> <name2> <val5>
<val5> から <name6> に <val4> を加えた値未満までの数列の各要素を <name3> とし、 ( ( <val5> ) からなる列の <val5> から <name6> + <val4> 未満までの数列の各要素を <name2> とし、 <name6> に <val4> を加えた値の列回分の列 ) からなる列の列を <name1> とする	<name1> = [ [ [ <val5> ] * [ ( <name6> + <val4> ) for <name2> in range ( <name6> + <val4> ) ] ] for <name3> in range ( <name6> + <val4> ) ]	<name1> = [ [ [ <val5> ] * [ ( <name6> + <val4> ) for <name2> in range ( <name6> + <val4> ) ] ] for <name3> in range ( <name6> + <val4> ) ]
<name6> の先頭の各要素を <name2> 、 <name5> とし、 ( <name5> 、 <name2> ) の組の列を <name1> とする	<name1> = [ ( <name5> , <name2> ) for <name2> , <name5> in <name6> [ 0 ] ]	<name6> = [ ( <name5> , <name2> ) for <name2> , <name5> in <name6> [ 0 ] ]
( <name1> 、 <name2> 、 <name6> 、 <name3> ) の組を <name4> とする	<name4> = ( <name1> , <name2> , <name6> , <name3> )	<name4> = ( <name1> , <name2> , <name6> , <name3> )
<name1> を <val5> で割った余りが <val4> と等しいとき、	if <name1> % <val5> == <val4> :	continue <name1> % <val5> == <val4> :
( <val6> 、 <val5> 、 <val6> 、 <val1> 、 <val6> 、 <val1> 、 <val6> 、 <val6> 、 <val1> 、 <val6> 、 <val1> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val6> , <val5> , <val6> , <val1> , <val6> , <val1> , <val6> , <val6> , <val1> , <val6> , <val1> , <val6> ]	<name4> = [ <val6> , <val5> , <val6> , <val1> , <val6> , <val1> , <val6> , <val6> , <val6> , <val1> , <val6> , <val1> , <val6> ]
<name5> から <name6> を引いた値から <name3> を引いた値を出力する	print ( <name5> - <name6> - <name3> )	print ( <name5> - <name6> - <name3> )
( <name1> から <name4> を引いた値、 <name5> から <name6> を引いた値 ) からなる列を <name2> とする	<name2> = [ <name1> - <name4> , <name5> - <name6> ]	<name2> = [ <name1> - <name4> , <name5> - <name6> ]
<name3> の <val2> 個までのコンビネーションを順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in combinations ( <name3> , <val2> ) :	for <name5> , <name4> in combinations ( <name3> , <val2> ) :
<name5> に <name2> から <name1> を引いた値の絶対値を掛けた値を <name4> で割った余りを <name5> とする	<name5> = <name5> * abs ( <name2> - <name1> ) % <name4>	: <name5> = <name5> * abs ( <name2> - <name1> ) % <name4>
<name3> . <name1> ( <name2> . <name4> )	<name3> . <name1> ( <name2> . <name4> )	<name3> . <name1> ( <name2> . <name4> )
<name5> の末尾に <name4> . <name3> ( <name6> , <name1> ) のとき <name4> . <name2> ( <name6> , <name1> ) 、そうでなければ <val5> を追加する	<name5> . append ( <name4> . <name2> ( <name6> , <name1> ) if <name4> . <name3> ( <name6> , <name1> ) else <val5> )	<name1> . append ( <name4> . <name2> ( <name6> , <name1> ) if <name4> . <name3> ( <name6> , <name1> ) else <val5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = map ( int , input ( ) . split ( ) )	<name1> , <name5> = map ( int , input ( ) . split ( ) )
<val6> から <name3> に <val5> を加えた値未満までの数列の各要素を <name2> とし、 <val6> の列を <name4> とする	<name4> = [ <val6> for <name2> in range ( <name3> + <val5> ) ]	<name4> = [ <val6> for <name2> in range ( <name3> + <val5> ) ]
<val1> を <name4> に <name2> を掛けた値から <name6> に <name5> を掛けた値を引いた値で割った値に <name2> に <name3> を掛けた値から <name6> に <name1> を掛けた値を引いた値を掛けた値を <name3> とする	<name3> = <val1> / ( <name4> * <name2> - <name6> * <name5> ) * ( <name2> * <name3> - <name6> * <name1> )	<name3> = <val1> / ( <name4> * <name2> - <name6> * <name5> ) * ( <name2> * <name3> - <name6> * <name1> )
<name2> の -2 番目から <name1> を引いた値が <name2> の末尾より小さいかどうかを返す	return <name2> [ - 2 ] - <name1> < <name2> [ - 1 ]	x return <name2> [ - 2 ] - <name1> < <name2> [ - 1 ]
<name4> . <name5> ( <name6> )	<name4> . <name5> ( <name6> )	<name2> . <name5> ( <name6> )
<name5> . <name4> ( <name6> ) を順に <name1> として、繰り返す	for <name1> in <name5> . <name4> ( <name6> ) :	. for <name1> in <name5> . <name4> ( <name6> ) :
<name3> から <name4> [ : <name5> ] の総和に <val6> を掛けた値を引いた値から <name2> に <name1> から <name5> に <val6> を掛けた値を引いた値を掛けた値を引いた値に <val6> を掛けた値を <name1> とする	<name1> = ( <name3> - sum ( <name4> [ : <name5> ] ) * <val6> - <name2> * ( <name1> - <name5> * <val6> ) ) * <val6>	<name1> = ( <name3> - sum ( <name4> [ : <name5> ] ) * <val6> - <name2> * ( <name1> - <name5> * <val6> ) ) * <val6>
<name2> に <name6> を掛けた値から <name1> に <name5> を掛けた値を引いた値を <name4> に <name6> を掛けた値から <name1> に <name3> を掛けた値を引いた値で割った値を <name3> とする	<name3> = ( <name2> * <name6> - <name1> * <name5> ) / ( <name4> * <name6> - <name1> * <name3> )	else = ( <name2> * <name6> - <name1> * <name5> ) / ( <name4> * <name6> - <name1> * <name3> )
( <name1> ) からなる列の <name5> の <name6> 回分の列を <name4> とする	<name4> = [ <name1> ] * <name5> . <name6>	<name4> = [ <name1> ] * <name5> . <name6>
<name3> から <name4> を引いた値が <val5> より大きいとき、 <blk> <val1> から <name3> を引いた値に <name4> を加えた値を <name6> とする </blk>	if <name3> - <name4> > <val5> : <blk> <name6> = <val1> - <name3> + <name4> </blk>	while <name3> - <name4> > <val5> : <blk> <name6> = <val1> - <name3> + <name4> </blk>
ソートされた順序を保ったまま <name6> を <name1> に挿入できる位置を <name4> とする	<name4> = bisect . bisect_left ( <name1> , <name6> )	<name4> = bisect . bisect_left ( <name1> , <name6> )
<name6> から <val3> を引いた値から <name4> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> - <val3> , <name4> ) :	: for <name5> in range ( <name6> - <val3> , <name4> ) :
 に <val4> を間に入れて <name6> の各要素に整数を適用した列を連結した文字列を加えた値を出力する	print ( <val4> + <val4> . join ( map ( str , <name6> ) ) )	print ( <val4> + <val4> . join ( map ( str , <name6> ) ) )
<name1> の <name3> 番目、 <name1> の <name4> 番目を <name1> の <name4> 番目、 <name1> の <name3> 番目とする	<name1> [ <name4> ] , <name1> [ <name3> ] = <name1> [ <name3> ] , <name1> [ <name4> ]	<name1> [ <name4> ] , <name1> [ <name3> ] = <name1> [ <name3> ] , <name1> [ <name4> ]
<name5> の <name6> 番目を順に <name4> 、 <name1> として、繰り返す	for <name4> , <name1> in <name5> [ <name6> ] :	for <name4> , <name1> in <name5> [ <name6> ] :
\ <name3> ( <val4> . <name6> ( <name5> ) ) \	\ <name3> ( <val4> . <name6> ( <name5> ) ) \	for <name3> in <name3> ( <val4> . <name6> ( <name5> ) ) \
<name2> 、 <name3> の最小値を出力する	print ( min ( <name2> , <name3> ) )	range ( min ( <name2> , <name3> ) )
0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name4> の <name3> にする	<name4> . <name3> = [ [ ] for <name5> in range ( <name6> ) ]	<name4> . <name3> = [ [ ] for <name5> in range ( <name6> ) ]
<name3> に <name2> を加えた値が <name6> に <name1> を加えた値と等しいとき、	if <name3> + <name2> == <name6> + <name1> :	raise <name3> + <name2> == <name6> + <name1> :
<name4> の <name2> から <val6> を引いた値番目を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name4> [ <name2> - <val6> ]	<name3> [ <name2> ] = <name4> [ <name2> - <val6> ]
<name1> . <name5> ( <name6> , <name4> , <name2> , <name3> )	<name1> . <name5> ( <name6> , <name4> , <name2> , <name3> )	<name1> . <name5> ( <name6> , <name4> , <name2> , <name3> )
<name4> の <name1> 番目を <name5> だけ増加させる	<name4> [ <name1> ] += <name5>	<name1> [ <name1> ] += <name5>
<name5> の末尾が <val6> と等しくかつ <name5> の -2 番目が <val4> と等しいとき、	if <name5> [ - 1 ] == <val6> and <name5> [ - 2 ] == <val4> :	list ( <name5> [ - 1 ] == <val6> and <name5> [ - 2 ] == <val4> ) :
<name5> ( <name6> , <name3> , <name6> [ <val2> ] )	<name5> ( <name6> , <name3> , <name6> [ <val2> ] )	<name5> ( <name6> , <name3> , <name6> [ <val2> ] )
<name6> の <name1> の <name3> の <name5> を出力する	print ( <name6> . <name1> . <name3> . <name5> )	print ( <name6> . <name1> . <name3> [ <name5> ] )
<name1> の末尾に <name6> の <name3> 番目から、つまり末尾までの <name4> 間隔による部分列を追加する	<name1> . append ( <name6> [ <name3> : : <name4> ] )	<name1> . append ( <name6> [ <name3> : : <name4> ] )
<name6> ( <name4> + <val5> ) を <name1> とする	<name1> = <name6> ( <name4> + <val5> )	<name1> = <name6> ( <name4> + <val5> )
<name3> でなくかつ <name6> でなくかつ <name4> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name3> and not <name6> and not <name4> : <blk> break </blk>	if not <name3> and not <name6> and not <name4> : <blk> break </blk>
<name2> を <name5> の <name6> 番目の整数値に <val4> から <name6> を引いた値を掛けた値だけ増加させる	<name2> += int ( <name5> [ <name6> ] ) * ( <val4> - <name6> )	<name1> += int ( <name5> [ <name6> ] ) * ( <val4> - <name6> )
( <val6> 、 <val3> 、 -1 、 <val3> 、 <val1> 、 <val3> 、 -2 、 <val3> 、 <val4> 、 <val3> 、 -3 、 <val3> ) からなる列を <name2> とする	<name2> = [ <val6> , <val3> , - <val6> , <val3> , <val1> , <val3> , - <val1> , <val3> , <val4> , <val3> , - <val4> , <val3> ]	<name6> = [ <val6> , <val3> , - <val3> , <val3> , <val1> , <val3> , - <val3> , <val4> , <val3> , - 3 , <val3> ]
<name2> の、つまり先頭から <val3> 番目までの部分列を <name1> とする	<name1> = <name2> [ : <val3> ]	\ <name1> = <name2> [ 0 : <val3> ]
<name3> を <val4> に <name5> の末尾から空白改行を取り除いた文字列を加えた値に <val4> を加えた値だけ増加させる	<name3> += <val4> + <name5> . rstrip ( ) + <val4>	<name3> += <val4> + <name5> . rstrip ( ) + <val4>
0 から <name4> 未満までの数列の各要素を <name5> とし、、つまり空列の列を <name2> の <name3> にする	<name2> . <name3> = [ [ ] for <name5> in range ( <name4> ) ]	<name6> . <name3> = [ [ ] for <name5> in range ( <name4> ) ]
<name5> ( <name1> , <name4> , <name3> , <name6> ) を順に <name2> として、繰り返す	for <name2> in <name5> ( <name1> , <name4> , <name3> , <name6> ) :	. for <name2> in <name5> ( <name1> , <name4> , <name3> , <name6> ) :
<name4> の <val1> 番目を <name6> の <name2> 番目の <name3> 番目にする	<name6> [ <name2> ] [ <name3> ] = <name4> [ <val1> ]	<name4> [ <name2> ] [ <name3> ] = <name4> [ <val1> ]
<name5> を <name4> から <name2> を引いた値に <val3> を加えた値だけ増加させる	<name5> += <name4> - <name2> + <val3>	<name5> += ( <name4> - <name2> + <val3> )
<name2> に <val4> を加えた値を <name2> とする	<name2> = <name2> + <val4>	( <name2> = <name2> + <val4> )
( <val5> ) からなる列の <name3> に <val4> を加えた値回分の列を <name2> の <name1> にする	<name2> . <name1> = [ <val5> ] * ( <name3> + <val4> )	<name2> . <name1> = [ <val5> ] * ( <name3> + <val4> )
( <val3> ) からなる列の <name1> 回分の列を <name4> とする	<name4> = [ <val3> ] * <name1>	<name4> = [ <val3> ] * <name1>
<name4> の <name3> の長さから、つまり末尾までの部分列を <name4> とする	<name4> = <name4> [ len ( <name3> ) : ]	<name4> = <name4> [ len ( <name3> ) : ]
os . <name2> の <name6> 番目でないとき、	if not <name2> [ <name6> ] :	for <name2> [ <name6> ] in not <name2> [ <name6> ] :
<val6> を <name1> の <name4> から <name3> を引いた値番目の <name2> から <name3> を引いた値番目にする	<name1> [ <name4> - <name3> ] [ <name2> - <name3> ] = <val6>	<name1> [ <name4> - <name3> ] [ <name2> - <name3> ] = <val6>
0 から <name4> の <name3> 未満までの数列の各要素を <name1> とし、 <name4> . <name6> ( <name1> ) が <name5> と等しいときの <name1> の列を返す	return [ <name1> for <name1> in range ( <name4> . <name3> ) if <name4> . <name6> ( <name1> ) == <name5> ]	return [ <name1> for <name1> in range ( <name4> . <name3> ) if <name4> . <name6> ( <name1> ) == <name5> ]
<name2> の <name1> の <name4> 番目の末尾に <name2> . <name6> ( <name3> , <name2> . <name5> ( ) , <name2> ( <name2> . <name1> [ <name3> ] ) -1 ) を追加する	<name2> . <name1> [ <name4> ] . append ( <name2> . <name6> ( <name3> , <name2> . <name5> ( ) , <name2> ( <name2> . <name1> [ <name3> ] ) - 1 ) )	<name5> . <name1> [ <name4> ] . append ( <name2> . <name6> ( <name3> , <name2> . <name5> ( ) , <name2> ( <name2> . <name1> [ <name3> ] ) - 1 ) )
{ : . 6 f }を書式として <name3> で整形した文字列に <val2> を加えた値に <val4> を書式として <name5> で整形した文字列を加えた値を出力する	print ( <val4> . format ( <name3> ) + <val2> + <val4> . format ( <name5> ) )	print ( '{:.6f}' . format ( <name3> ) + <val2> + <val4> . format ( <name5> ) )
<name5> ( <name3> . <name1> ( ) )	<name5> ( <name3> . <name1> ( ) )	map <name5> ( <name3> . <name1> ( ) )
<name1> ( <name5> , <name3> , <name4> , <name2> ) を <name6> とする	<name6> = <name1> ( <name5> , <name3> , <name4> , <name2> )	<name6> = <name1> ( <name5> , <name3> , <name4> , <name2> )
<name5> ( <val1> , <name2> , <name6> [ <name4> ] [ <val1> ] )	<name5> ( <val1> , <name2> , <name6> [ <name4> ] [ <val1> ] )	<name1> ( <val1> , <name2> , <name6> [ <name4> ] [ <val1> ] )
<name5> と <name2> の最大公約数を出力する	print ( gcd ( <name5> , <name2> ) )	print ( math . gcd ( <name5> , <name2> ) )
<val4> を <name2> の <name1> 番目の <name3> から <val6> を引いた値番目にする	<name2> [ <name1> ] [ <name3> - <val6> ] = <val4>	<name1> [ <name3> ] [ <name3> - <val6> ] = <val4>
<name5> を <name4> を英小文字に変換した文字列を空白で分割した字句列内の <name2> の出現回数だけ増加させる	<name5> += <name4> . lower ( ) . split ( ) . count ( <name2> )	<name2> += <name5> . <name4> . lower ( ) . count ( <name2> )
<val1> から <name6> の長さ未満までの数列を反転した列を順に <name4> として、繰り返す	for <name4> in reversed ( range ( <val1> , len ( <name6> ) ) ) :	in reversed ( range ( <val1> , len ( <name6> ) ) :
<name3> . <name2> . <name1> ( <name5> ) を <name4> とする	<name4> = <name3> . <name2> . <name1> ( <name5> )	<name4> = <name3> . <name2> . <name1> ( <name5> )
<name4> . <name3> ( <name6> , <name5> ) を返す	return <name4> . <name3> ( <name6> , <name5> )	yield <name4> . <name3> ( <name6> , <name5> )
文字コード <val3> の順序数に <name6> の <name2> と等しい要素の最初の位置を加えた値の文字、 <name2> を出力する	print ( chr ( ord ( <val3> ) + <name6> . index ( <name2> ) ) , <name2> )	print ( chr ( ord ( <val3> ) + <name6> . index ( <name2> ) ) , <name2> )
<name1> . <name4> ( <name5> ( <name1> . <name3> , <name6> . <name3> ) ) の絶対値を <name2> とする	<name2> = abs ( <name1> . <name4> ( <name5> ( <name1> . <name3> , <name6> . <name3> ) ) )	<name2> = abs ( <name1> . <name4> ( <name5> ( <name1> . <name3> , <name6> . <name3> ) ) )
<name2> の <name5> 番目、 <name2> の <name6> 番目を <name2> の <name6> 番目、 <name2> の <name5> 番目とする	<name2> [ <name6> ] , <name2> [ <name5> ] = <name2> [ <name5> ] , <name2> [ <name6> ]	[ <name2> . <name6> ] , <name2> [ <name5> ] = <name2> [ <name5> ] , <name2> [ <name6> ]
<val4> を <name6> とするを <name1> とする	<name1> = <name6> = <val4>	\ <name1> = <name6> = <val4>
<name5> のとき、 <blk> <name2> を <name5> の末尾に <name4> を加えた値が <name3> より大きいとき <name3> から <name5> の -1 番目を引いた値、そうでなければ <name4> だけ増加させる </blk>	if <name5> : <blk> <name2> += <name3> - <name5> [ - 1 ] if <name5> [ - 1 ] + <name4> > <name3> else <name4> </blk>	if <name5> : <blk> <name2> += <name3> - <name5> [ - 1 ] if <name5> [ - 1 ] + <name4> > <name3> else <name4> </blk>
<name3> を <val6> で割った余りを <val4> で割った商を <name2> とする	<name2> = ( <name3> % <val6> ) // <val4>	<name2> = ( <name3> % <val6> ) // <val4>
<name4> を <name1> とするを <name5> とする	<name5> = <name1> = <name4>	<name5> = <name1> = <name4>
<name4> が <val2> と等しくかつ <name5> が <val2> と等しいとき、	if <name4> == <val2> and <name5> == <val2> :	: if <name4> == <val2> and <name5> == <val2> :
( ( -1 ) からなる列の <val5> に <name1> ( ) を空白で分割した字句列を加えた値に ( -1 ) からなる列の <name2> ( <name3> ) の各要素を <name6> とし、 <val5> の列回分の列を加えた値回分の列 ) からなる列を <name4> とする	<name4> = [ [ - 1 ] * <val5> + <name1> ( ) . split ( ) + [ - 1 ] * [ <val5> for <name6> in <name2> ( <name3> ) ] ]	<name4> = [ [ - 1 ] * <val5> + <name1> ( ) . split ( ) + [ - 1 ] * [ <val5> for <name6> in <name2> ( <name3> ) ] ]
<name1> ( <name2> . <name6> [ <val5> : ] )	<name1> ( <name2> . <name6> [ <val5> : ] )	<name1> ( <name2> . <name6> [ <val5> : ] )
<name5> を <name4> で割った商を <name3> とする	<name3> = <name5> // <name4>	( <name3> = <name5> // <name4> )
<name5> の <name6> に <name1> を加えた値、 <name4> に <val2> を加えた値の最小値番目が <val3> と等しくないとき、	if <name5> [ min ( <name6> + <name1> , <name4> + <val2> ) ] != <val3> :	!= <name5> [ min ( <name6> + <name1> , <name4> + <val2> ) ] != <val3> :
<name2> の、つまり先頭から -2 番目までの部分列を <name2> とする	<name2> = <name2> [ : - 2 ]	<name6> = <name2> [ : - 2 ]
<name5> の <name4> を <name5> の <name2> にする	<name5> . <name2> = <name5> . <name4>	<name1> . <name2> = <name5> . <name4>
<name5> を反転した列を順に <name2> として、繰り返す	for <name2> in reversed ( <name5> ) :	for <name2> in reversed ( <name5> ) :
入力された文字列を <val5> で分割した字句列を <name3> とする	<name3> = input ( ) . split ( <val5> )	<name3> = input ( ) . split ( <val5> )
<val4> を間に入れて <name2> を連結した文字列を <name6> とする	<name6> = <val4> . join ( <name2> )	<name6> = <val4> . join ( <name2> )
<name1> を <val6> に <name3> を掛けた値だけ増加させる	<name1> += <val6> * <name3>	( <name1> += <val6> * <name3> )
<name5> に <name1> を加えた値を <name1> の <name4> に <val2> を加えた値番目の <name3> に <val6> を加えた値番目にする	<name1> [ <name4> + <val2> ] [ <name3> + <val6> ] = <name5> + <name1>	<name6> [ <name1> [ <name4> + <val2> ] [ <name3> + <val6> ] = <name5> + <name1>
<name5> の <name4> から <val2> を引いた値番目を <name6> とする <name5> の <name4> 番目を <name1> とする	<name6> = <name5> [ <name4> - <val2> ] <name1> = <name5> [ <name4> ]	<name6> = <name5> [ <name4> - <val2> ] <name1> = <name5> [ <name4> ]
<name6> の <name4> に <name3> を追加した集まり	<name6> . <name4> . add ( <name3> )	<name3> . <name4> . add ( <name3> )
<name4> の <name6> の <name2> 番目の <name1> 番目を <name5> とする	<name5> = <name4> . <name6> [ <name2> ] [ <name1> ]	<name5> = <name4> . <name6> [ <name2> ] [ <name1> ]
<name4> の先頭を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name4> [ 0 ]	<name2> , <name3> = <name4> [ 0 ]
<name5> の <name3> 番目の <name2> の <name3> 番目番目を <name1> とする <name2> の <name3> 番目を <val6> だけ増加させる	<name1> = <name5> [ <name3> ] [ <name2> [ <name3> ] ] <name2> [ <name3> ] += <val6>	<name5> [ <name3> ] [ <name2> [ <name3> ] ] <name1> = <name5> <name2> [ <name3> ] += <val6>
<name2> から <name4> を引いた値を <name6> とする <name3> から <name5> を引いた値を <name1> とする	<name6> = <name2> - <name4> <name1> = <name3> - <name5>	<name6> = <name2> - <name4> <name1> = <name3> - <name5>
0 から <name1> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <name6> の <name4> 番目の最大値の列を返す	return [ max ( <name6> [ <name4> ] ) for <name4> in range ( <name1> + <val2> ) ]	[ return max ( <name6> [ <name4> ] ) for <name4> in range ( <name1> + <val2> ) ]
( ( <name1> , <name6> の各要素を <name1> とし、、つまり未定値の列 ) ) からなる辞書を <name2> とする	<name2> = { <name1> : [ None for <name1> in <name6> ] }	input = { <name1> : [ None for <name1> in <name6> ] }
( <name6> の先頭、 <name6> の <val2> 番目、 <name6> の <val4> 番目、 <name6> の <val1> 番目、 <name6> の <val5> 番目、 <name6> の <val3> 番目 ) からなる列を <name3> とする	<name3> = [ <name6> [ 0 ] , <name6> [ <val2> ] , <name6> [ <val4> ] , <name6> [ <val1> ] , <name6> [ <val5> ] , <name6> [ <val3> ] ]	else = [ <name6> [ 0 ] , <name6> [ <val2> ] , <name6> [ <val4> ] , <name6> [ <val1> ] , <name6> [ <val5> ] , <name6> [ <val3> ] ]
<name2> ( <name4> ( <name6> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) 、 <name2> ( <name4> ( <name4> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) 、 <name2> ( <name4> ( <name6> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) を出力する	print ( <name2> ( <name4> ( <name6> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) , <name2> ( <name4> ( <name4> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) , <name2> ( <name4> ( <name6> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) )	print ( <name2> ( <name4> ( <name6> ) ) . <name5> ( <name2> ( <val1> ) , <name3> = <name2> ) , <name2> ( <name4> ( <name4> ) ) . <name5> ( <name2> ) , <name2> ) , <name2> ( <name4> ( <name6> ) ) . <name5> ( <val1> ) ) )
<name6> ( <name1> ) のとき、 <blk> <name1> の <name5> を返す </blk>	if <name6> ( <name1> ) : <blk> return <name1> . <name5> </blk>	\ return <name6> ( <name1> ) : <blk> return <name1> . <name5> </blk>
改行せずに <val5> を <name6> で割った余りを出力する	print ( <val5> % <name6> , end = '' )	print ( <val5> % <name6> , end = '' )
( ( <val3> ) からなる列の <val3> から <name6> に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <name2> に <val4> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val3> ] * [ ( <name2> + <val4> ) for <name5> in range ( <name6> + <val4> ) ] ]	<name1> = [ [ <val3> ] * [ ( <name2> + <val4> ) for <name5> in range ( <name6> + <val4> ) ] ]
<name3> ( <name5> , <name4> , <name2> )	<name3> ( <name5> , <name4> , <name2> )	( <name3> ( <name5> , <name4> , <name2> ) )
<name1> を展開し、それぞれ <name6> 、 <name5> 、 <name3> とする	<name6> , <name5> , <name3> = <name1>	( <name6> , <name5> , <name3> = <name1> )
<name2> の末尾に ( <name5> 、 <name1> ) の組を追加する	<name2> . append ( ( <name5> , <name1> ) )	<name2> . append ( ( <name5> , <name1> ) )
<name6> を <name2> ( <name1> [ <val4> : ] , <name5> , <name3> , <name6> , <name2> ) だけ増加させる	<name6> += <name2> ( <name1> [ <val4> : ] , <name5> , <name3> , <name6> , <name2> )	<name1> += <name2> ( <name1> [ <val4> : ] , <name5> , <name3> , <name6> , <name2> )
<name5> ( <name6> , <name3> ( <name2> , <name1> ) ) を <name4> とする	<name4> = <name5> ( <name6> , <name3> ( <name2> , <name1> ) )	<name4> = <name5> ( <name6> , <name3> ( <name2> , <name1> ) )
<name2> の <name6> の <name5> 番目の <name1> 番目の <name4> 番目を <val3> だけ減少させる	<name2> . <name6> [ <name5> ] [ <name1> ] [ <name4> ] -= <val3>	<name2> [ <name6> [ <name5> ] [ <name1> ] [ <name4> ] -= <val3>
<name5> の先頭を取り出した値を <name1> とする <name5> の先頭を取り出した値を <name3> とする	<name1> = <name5> . pop ( ) <name3> = <name5> . pop ( )	<name1> = <name5> . pop ( ) <name3> = <name5> . pop ( )
<val2> の浮動小数点数を <name3> とする	<name3> = float ( <val2> )	<name3> = float ( <val2> )
<name1> の <name3> の整数値から <val6> を引いた値番目を <val6> だけ増加させる	<name1> [ int ( <name3> ) - <val6> ] += <val6>	count [ int ( <name3> ) - <val6> ] += <val6>
0 から <name4> 未満までの数列を順に <name3> として、繰り返す <blk> <name5> を <name6> の <name3> 番目で割った商に <name1> の <name3> 番目を掛けた値を <name6> の <name3> 番目にする </blk>	for <name3> in range ( <name4> ) : <blk> <name6> [ <name3> ] = ( <name5> // <name6> [ <name3> ] ) * <name1> [ <name3> ] </blk>	try : for <name3> in range ( <name4> ) : <blk> <name6> [ <name3> ] = <name5> // <name6> [ <name3> ] * <name1> [ <name3> ] </blk>
<name2> の <name6> 番目の先頭でないとき、	if not <name2> [ <name6> ] [ 0 ] :	for <name2> in not <name2> [ <name6> ] [ 0 ] :
<name1> の <name5> の <name6> の末尾に <name6> を追加する	<name1> . <name5> . <name6> . append ( <name6> )	<name1> . <name5> . <name6> . append ( <name6> )
three card を <name2> とする	<name2> = 'three card'	input = card' . card'
<name5> が <name1> ( <name4> ) に含まれるかどうか	<name5> in <name1> ( <name4> )	( <name5> in <name1> ( <name4> ) )
<name4> . <name2> ( <name6> ) を <name3> とする	<name3> = <name4> . <name2> ( <name6> )	<name3> = <name4> . <name2> ( <name6> )
<name2> ( <name4> * <val3> + <val5> , <name6> , <name1> , <name2> )	<name2> ( <name4> * <val3> + <val5> , <name6> , <name1> , <name2> )	<name2> ( <name4> * <val3> + <val5> , <name6> , <name1> , <name2> )
<name4> ( <name2> , ( <name6> + <val5> , <name3> , <name1> , <name4> ) )	<name4> ( <name2> , ( <name6> + <val5> , <name3> , <name1> , <name4> ) )	<name4> ( <name2> , ( <name6> + <val5> , <name3> , <name1> , <name4> ) )
- <name5> を <name5> とする	<name5> = - <name5>	<name4> <name5> = - <name5>
<name5> の <name3> 番目が <val2> と等しくないとき、	if <name5> [ <name3> ] != <val2> :	: if <name5> [ <name3> ] != <val2> :
<name2> の末尾に ( <name5> と <name6> の排他論理和、 <name3> ) の組を追加する	<name2> . append ( ( <name5> ^ <name6> , <name3> ) )	not <name2> . append ( ( <name5> ^ <name6> , <name3> ) )
<name4> の先頭を取り出した値、 <name4> の先頭を取り出した値を <name3> 、 <name6> とする	<name3> , <name6> = <name4> . pop ( ) , <name4> . pop ( )	<name3> , <name6> = <name4> . pop ( ) , <name4> . pop ( )
<name6> の <name4> 番目の <name5> 番目を <val1> だけ増加させる	<name6> [ <name4> ] [ <name5> ] += <val1>	<name4> [ <name4> ] [ <name5> ] += <val1>
Closed by 、 <name3> を出力する	print ( 'Closed by' , <name3> )	& print ( suit , <name3> )
0 から <name2> 未満までの数列の各要素を <name4> とし、 <name3> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name5> とする	<name5> = [ tuple ( map ( int , <name3> ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]	<name1> = [ tuple ( map ( int , <name3> ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]
0 から <val1> 未満までの数列の各要素を <name4> とし、、つまり空列の列を <name3> とするを展開し、それぞれ <name3> 、 <name4> 、 <name1> 、 <name6> 、 <name2> 、 <name5> とする	<name3> , <name4> , <name1> , <name6> , <name2> , <name5> = <name3> = [ [ ] for <name4> in range ( <val1> ) ]	<name3> , <name4> , <name1> , <name6> , <name2> , <name5> = [ [ ] for <name4> in range ( <val1> ) ]
<name5> の末尾に <name3> が <name6> より小さいとき ( <name3> 、 <name6> ) の組、そうでなければ ( <name6> 、 <name3> ) の組を追加する	<name5> . append ( ( <name3> , <name6> ) if <name3> < <name6> else ( <name6> , <name3> ) )	<name4> . append ( ( <name3> , <name6> ) if <name3> < <name6> else ( <name6> , <name3> ) )
<name4> を <val3> で割った余りを <name2> とする	<name2> = <name4> % <val3>	<name2> = <name4> % <val3>
<name5> から <name4> の <name6> を引いた値の絶対値を返す	return abs ( <name5> - <name4> . <name6> )	x return abs ( <name5> - <name4> . <name6> )
<name5> の <val4> 番目から、つまり末尾までの部分列に ( <val6> ) からなる列を加えた値を順に <name2> として、繰り返す	for <name2> in <name5> [ <val4> : ] + [ <val6> ] :	\ <name2> in <name5> [ <val4> : ] + [ <val6> ] :
( <val6> 、 <val1> 、 <val3> 、 <val2> 、 <val4> 、 <val5> 、 <val6> 、 <val1> 、 <val3> 、 <val2> 、 <val4> 、 <val5> ) からなる列を <name5> とする	<name5> = [ <val6> , <val1> , <val3> , <val2> , <val4> , <val5> , <val6> , <val1> , <val3> , <val2> , <val4> , <val5> ]	<name5> = [ <val6> , <val1> , <val3> , <val2> , <val4> , <val5> , <val6> , <val1> , <val3> , <val2> , <val4> , <val5> ]
<val5> に <name6> に <name1> を加えた値を掛けた値を <name2> とする	<name2> = <val5> * ( <name6> + <name1> )	<name2> = <val5> * ( <name6> + <name1> )
<name6> ( <name1> , <name3> ) の最大値を出力する	print ( max ( <name6> ( <name1> , <name3> ) ) )	print ( max ( <name6> ( <name1> , <name3> ) ) )
<name1> を <name2> の <name5> 番目の <name4> 番目にする	<name2> [ <name5> ] [ <name4> ] = <name1>	( <name2> [ <name5> ] [ <name4> ] = <name1> )
<name3> . <name2> ( <name3> . <name6> ) を <name3> の <name4> にする	<name3> . <name4> = <name3> . <name2> ( <name3> . <name6> )	<name3> . <name4> = <name3> . <name2> ( <name3> . <name6> )
<name5> と <name4> の <name2> 番目の論理積を返す	return <name5> & <name4> [ <name2> ]	return <name5> & <name4> [ <name2> ]
<name4> の <name2> 番目の <val6> 番目に <name3> を追加した集まり	<name4> [ <name2> ] [ <val6> ] . add ( <name3> )	<name3> [ <name2> ] [ <val6> ] . add ( <name3> )
<val2> + <val4> + <val2> に <val6> を加えた値に <val2> を加えた値に <val6> を加えた値に <val2> を加えた値に <name1> を加えた値を <name5> とする	<name5> = <val2> + <val4> + <val2> + <val6> + <val2> + <val6> + <val2> + <name1>	( <name5> = <val2> + <val4> + <val2> + <val6> + <val2> + <val6> + <val2> + <name1> )
: を出力する	print ( ':' )	str . sort ( ) )
<name1> の <val3> 番目を <name4> の <val3> 番目にする	<name4> [ <val3> ] = <name1> [ <val3> ]	<name2> [ <val3> ] = <name1> [ <val3> ]
<name5> を返す	return ( <name5> )	assert <name5> ( P , z )
<name2> ( <name3> . <name5> . <name6> - <name4> . <name5> . <name6> , <name3> . <name5> . <name1> - <name4> . <name5> . <name1> ) を <name1> とする	<name1> = <name2> ( <name3> . <name5> . <name6> - <name4> . <name5> . <name6> , <name3> . <name5> . <name1> - <name4> . <name5> . <name1> )	<name1> = <name2> ( <name3> . <name5> . <name6> - <name4> . <name5> . <name6> , <name3> . <name5> . <name1> - <name4> . <name5> . <name1> )
( <name2> 、 <name5> 、 <name4> ) からなる列の最大値を <name2> とする	<name2> = max ( [ <name2> , <name5> , <name4> ] )	<name2> = max ( [ <name2> , <name5> , <name4> ] )
<name6> . <name1> ( ) を返す	return <name6> . <name1> ( )	yield <name6> . <name1> ( )
<val5> が <name2> に含まれるとき、 <blk> <name2> 内の <val5> を <val1> で置き換えた文字列を <name2> とする </blk>	if <val5> in <name2> : <blk> <name2> = <name2> . replace ( <val5> , <val1> ) </blk>	if <val5> in <name2> : <blk> <name2> = <name2> . replace ( <val5> , <val1> ) </blk>
<val2> から <name6> に <val1> を加えた値未満までの数列の各要素を <name4> とし、 <val2> の列を <name5> の <name3> にする	<name5> . <name3> = [ <val2> for <name4> in range ( <name6> + <val1> ) ]	<name4> . <name3> = [ <val2> for <name4> in range ( <name6> + <val1> ) ]
<name4> の先頭の <val1> 番目を <name6> とする	<name6> = <name4> [ 0 ] [ <val1> ]	<name6> = <name4> [ 0 ] [ <val1> ]
<name2> の要素を右に <name3> 個、回転する	<name2> . rotate ( <name3> )	not <name2> . rotate ( <name3> )
<val6> を <name3> の <name4> の先頭の <name5> 番目にする	<name3> . <name4> [ 0 ] [ <name5> ] = <val6>	<name4> . <name4> [ <val6> ] [ <name5> ] = <val6>
<name4> ( <name3> . <name1> + <name6> . <name1> , <name3> . <name5> + <name6> . <name5> ) を返す	return <name4> ( <name3> . <name1> + <name6> . <name1> , <name3> . <name5> + <name6> . <name5> )	x return <name4> ( <name3> . <name1> + <name6> . <name1> , <name3> . <name5> + <name6> . <name5> )
os . <name4> の末尾を <name6> とする	<name6> = <name4> [ - 1 ]	( <name6> = <name4> [ - 1 ] )
<val2> 、 <val2> 、 <val2> を <name5> 、 <name3> 、 <name1> とする	<name5> , <name3> , <name1> = <val2> , <val2> , <val2>	( <name5> , <name3> , <name1> = <val2> , <val2> , <val2> )
<name3> の <name4> 番目の <name6> 番目が <val1> より大きいとき、	if <name3> [ <name4> ] [ <name6> ] > <val1> :	for <name3> in <name3> [ <name4> ] [ <name6> ] > <val1> :
<name2> が -1 と等しくないかどうかが <name6> と等しくないとき、	if <name2> != - 1 != <name6> :	!= ( <name2> != - 1 ) != <name6> :
<name4> の長さまたは <name2> の長さの間、次を繰り返す	while len ( <name4> ) or len ( <name2> ) :	del ( len ( <name4> ) or len ( <name2> ) ) :
<name4> の <name1> 番目を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name4> [ <name1> ]	<name6> , <name2> , <name3> = <name4> [ <name1> ]
<name2> の <name1> 番目の <name6> 番目が <name2> の <name1> に <val5> を加えた値番目の <name6> 番目より小さいとき、 <blk> <name2> の <name1> 番目の <name6> 番目を <name2> の <name1> に <val5> を加えた値番目の <name6> 番目にする </blk>	if <name2> [ <name1> ] [ <name6> ] < <name2> [ <name1> + <val5> ] [ <name6> ] : <blk> <name2> [ <name1> + <val5> ] [ <name6> ] = <name2> [ <name1> ] [ <name6> ] </blk>	<blk> if <name2> [ <name1> ] [ <name6> ] < <name2> [ <name1> + <val5> ] [ <name6> ] : <blk> <name2> [ <name1> + <val5> ] [ <name6> ] = <name2> [ <name1> ] [ <name6> ] </blk>
<name5> 、 <name4> の最大値、 <name5> 、 <name4> の最小値を <name3> 、 <name6> とする	<name3> , <name6> = max ( <name5> , <name4> ) , min ( <name5> , <name4> )	<name3> , <name6> = max ( <name5> , <name4> ) , min ( <name5> , <name4> )
<name3> の <val1> 番目が <name2> の <val1> 番目と等しいとき、	if <name3> [ <val1> ] == <name2> [ <val1> ] :	if <name3> [ <val1> ] == <name2> [ <val1> ] :
( <val4> ) からなる列の集合を <name6> とする	<name6> = set ( [ <val4> ] )	<name6> = set ( [ <val4> ] )
<name4> の <name1> から <val3> を引いた値番目の <name2> 番目が <val6> と等しいとき、	if <name4> [ <name1> - <val3> ] [ <name2> ] == <val6> :	for <name4> [ <name1> - <val3> ] [ <name2> ] == <val6> :
<name5> . <name1> ( <name2> )	<name5> . <name1> ( <name2> )	<name1> . <name1> ( <name2> )
<name2> ( <name3> , <name1> + <val6> , <name4> )	<name2> ( <name3> , <name1> + <val6> , <name4> )	( <name2> ( <name3> , <name1> + <val6> , <name4> ) )
<name1> を <name6> の <name4> から <val2> を引いた値番目の <name5> 番目だけ増加させる	<name1> += <name6> [ <name4> - <val2> ] [ <name5> ]	( <name1> += <name6> [ <name4> - <val2> ] [ <name5> ] )
<name2> . <name4> ( <val3> , <name1> )	<name2> . <name4> ( <val3> , <name1> )	set ( <name2> . <name4> ( <val3> , <name1> ) )
<name5> の <name3> 、 <name1> の最大値番目を出力する	print ( <name5> [ max ( <name3> , <name1> ) ] )	print ( <name5> [ max ( <name3> , <name1> ) ] )
<name2> の <name4> 番目が <name3> と等しいとき、	if <name2> [ <name4> ] == <name3> :	if <name2> [ <name4> ] == <name3> :
<name1> 、 <name2> から <name5> の <name4> 番目を引いた値から <val3> を引いた値に <name6> の <name4> 番目を掛けた値の最大値を <name1> とする	<name1> = max ( <name1> , ( <name2> - <name5> [ <name4> ] - <val3> ) * <name6> [ <name4> ] )	<name1> = max ( <name1> , ( <name2> - <name5> [ <name4> ] - <val3> ) * <name6> [ <name4> ] )
( 、つまり真、 <name1> 、 <name5> ) の組を返す	return ( True , <name1> , <name5> )	yield ( True , <name1> , <name5> )
<name2> が <name5> から <val3> を引いた値と等しいとき、 <blk> <name4> の末尾に ( <name1> 、 <name6> ) の組を追加する </blk>	if <name2> == <name5> - <val3> : <blk> <name4> . append ( ( <name1> , <name6> ) ) </blk>	while <name2> == <name5> - <val3> : <blk> <name4> . append ( ( <name1> , <name6> ) ) </blk>
<name4> のとき <name1> ( <name4> . <name5> ) に <val2> を加えた値に <name4> の <name6> の文字列を加えた値に <name1> ( <name4> . <name3> ) を加えた値、そうでなければ <val1> を返す	return <name1> ( <name4> . <name5> ) + <val2> + str ( <name4> . <name6> ) + <name1> ( <name4> . <name3> ) if <name4> else <val1>	return <name1> ( <name4> . <name5> ) + <val2> + str ( <name4> . <name6> ) + <name1> ( <name4> . <name3> ) if <name4> else <val1>
<name1> の末尾に <val2> を追加する	<name1> . append ( <val2> )	not <name1> . append ( <val2> )
<name3> 、 <name6> の <name2> 番目に <name4> を加えた値の最小値を <name3> とする	<name3> = min ( <name3> , <name6> [ <name2> ] + <name4> )	<name3> = min ( <name3> , <name6> [ <name2> ] + <name4> )
<name2> に <name1> から <val5> を引いた値、 <name3> を追加した集まり	<name2> . add ( <name1> - <val5> , <name3> )	<name1> . add ( <name1> - <val5> , <name3> )
<name5> に <name4> を <val1> で割った商を掛けた値に <name3> に ( <name4> % <val1> ) を <val6> で割った商に ( <name4> % <val1> ) % <val6> の論理値を加えた値を掛けた値、 <name5> に <name4> を <val1> で割った余りの論理値を掛けた値の最小値を加えた値を <name2> とする	<name2> = <name5> * ( <name4> // <val1> ) + min ( <name3> * ( ( <name4> % <val1> ) // <val6> + bool ( ( <name4> % <val1> ) % <val6> ) ) , <name5> * bool ( <name4> % <val1> ) )	<name2> = <name5> * ( <name4> // <val1> ) + min ( <name3> * ( <name4> % <val1> ) // <val6> + ( <name4> % <val1> ) % <val6> , <name5> * ( <name4> % <val1> ) )
<val4> から <name1> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , <name1> ) :	) : for <name5> in range ( <val4> , <name1> ) :
<name2> に <name1> を加えた値を <val5> で割った余りが <val3> と等しいとき、	if ( <name2> + <name1> ) % <val5> == <val3> :	list ( ( <name2> + <name1> ) ) % <val5> == <val3> :
<name2> に <name3> を掛けた値に <name6> に <name1> を掛けた値を加えた値が <val5> と等しいとき、つまり真、そうでなければ、つまり偽を返す	return True if <name2> * <name3> + <name6> * <name1> == <val5> else False	def <name2> * <name3> + <name6> * <name1> == <val5> else False
0 から <name4> 未満までの数列の各要素を <name3> とし、 <name3> の列を <name5> とする	<name5> = [ <name3> for <name3> in range ( <name4> ) ]	<name4> = [ <name3> for <name3> in range ( <name4> ) ]
<name6> を展開し、それぞれ <name3> 、 <name5> 、 <name1> 、 <name4> 、 <name2> とする	<name3> , <name5> , <name1> , <name4> , <name2> = <name6>	<name6> , <name3> , <name5> , <name1> , <name4> , <name2> = <name6>
<name5> を <name4> から <val1> を引いた値だけ減少させる	<name5> -= <name4> - <val1>	( <name5> -= <name4> - <val1> )
<name5> が <name6> と等しいかどうかが <val1> と等しいとき、	if <name5> == <name6> == <val1> :	for <name5> == <name6> == <val1> :
<name5> の <name1> と <name3> の排他論理和番目に <val2> を加えた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name5> [ <name1> ^ <name3> ] + <val2>	<name4> [ <name1> ] = <name5> [ <name1> ^ <name3> ] + <val2>
<name6> [ <name1> ] [ <val2> ] に <name6> [ <name1> ] [ <val3> ] を掛けた値に <name6> [ <name1> ] の <val5> 番目を掛けた値に <name6> の <name1> 番目の <val4> 番目を掛けた値に <name6> の <name1> 番目の <val6> 番目を掛けた値が <val3> と等しいとき、	if <name6> [ <name1> ] [ <val2> ] * <name6> [ <name1> ] [ <val3> ] * <name6> [ <name1> ] [ <val5> ] * <name6> [ <name1> ] [ <val4> ] * <name6> [ <name1> ] [ <val6> ] == <val3> :	for <name6> , <name1> in <name6> [ <name1> ] [ <val2> ] * <name6> [ <name1> ] [ <val3> ] * <name6> [ <name1> ] [ <val5> ] * <name6> [ <name1> ] [ <val4> ] * <name6> [ <name1> ] [ <val2> ] [ <val4> ] * <name6> [ <val6> ] == <val6> [ <name1> [ <val6> ] * <val3> == <val3> :
<name3> の <name2> の各要素を <name6> とし、 <name6> を <val1> で分割した字句列の各要素に浮動小数点数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( float , <name6> . split ( <val1> ) ) ) for <name6> in <name3> . <name2> ]	<name5> = [ list ( map ( float , <name6> . split ( <val1> ) ) ) for <name6> in <name3> . <name2> ]
( <name2> の先頭の整数値、 <name2> の <val4> 番目の整数値 ) からなる列を <name1> とする	<name1> = [ int ( <name2> [ 0 ] ) , int ( <name2> [ <val4> ] ) ]	<name4> = [ int ( <name2> [ 0 ] ) , int ( <name2> [ <val4> ] ) ]
<val1> から <name2> に <val1> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , <name2> + <val1> ) :	. for <name3> in range ( <val1> , <name2> + <val1> ) :
<name2> の <name3> 番目の末尾に ( <name5> 、 <name6> ) からなる列を追加する	<name2> [ <name3> ] . append ( [ <name5> , <name6> ] )	<name1> [ <name3> ] . append ( [ <name5> , <name6> ] )
<name5> の <name4> 番目の <name2> 番目から <name3> を引いた値を <name1> とする	<name1> = <name5> [ <name4> ] [ <name2> ] - <name3>	<name1> = <name5> [ <name4> ] [ <name2> ] - <name3>
改行せずに <name2> の <name1> から <name6> を引いた値番目の文字列に <val5> を加えた値を出力する	print ( str ( <name2> [ <name1> - <name6> ] ) + <val5> , end = '' )	, end = str ( <name2> [ <name1> - <name6> ] ) + <val5> , end = '' )
<name5> が <name6> より大きくかつ <name2> ( <name1> [ <name5> -1 ] - <name1> [ <name5> -2 ] , <name4> [ <name5> ] - <name1> [ <name5> -1 ] ) が <val6> より小さい間、次を繰り返す <blk> <name5> を <val3> だけ減少させる </blk>	while <name5> > <name6> and <name2> ( <name1> [ <name5> - <val3> ] - <name1> [ <name5> - 2 ] , <name4> [ <name5> ] - <name1> [ <name5> - <val3> ] ) < <val6> : <blk> <name5> -= <val3> </blk>	for <name5> in <name5> > <name6> and <name2> ( <name1> [ <name5> - <val6> ] - <name1> [ <name5> - 2 ] , <name4> [ <name5> ] - <name1> [ <name5> - <val6> ] ) < <val6> : <blk> <name5> -= <val3> </blk>
<name6> に <name5> を <val4> で割った値を加えた値を <name3> とする	<name3> = <name6> + <name5> / <val4>	<name3> = <name6> + <name5> / <val4>
<name2> から <val3> を引いた値を <name4> とする	<name4> = <name2> - <val3>	<name4> = <name2> - <val3>
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name4> とする	<name5> , <name1> , <name4> = map ( int , <name6> ( ) . split ( ) )	<name3> , <name1> , <name4> = map ( int , <name6> ( ) . split ( ) )
<name4> の <name3> 番目の順序数が <name1> の <name3> 番目の順序数より大きいとき、	if ord ( <name4> [ <name3> ] ) > ord ( <name1> [ <name3> ] ) :	for <name4> [ <name3> ] ) > ord ( <name1> [ <name3> ] ) :
<name3> の総和を <name4> で割った商、 <name3> の最小値の最大値を <name6> とする	<name6> = max ( sum ( <name3> ) // <name4> , min ( <name3> ) )	<name6> = max ( sum ( <name3> ) // <name4> , min ( <name3> ) )
<name6> に <val2> を加えた値が <name3> の <name1> に <val4> を加えた値番目の <name5> 番目と等しいとき、	if <name6> + <val2> == <name3> [ <name1> + <val4> ] [ <name5> ] :	for <name6> + <val2> == <name3> [ <name1> + <val4> ] [ <name5> ] :
<name3> の末尾に ( <name5> 、 <name1> から <val4> を引いた値 ) の組を追加する	<name3> . append ( ( <name5> , <name1> - <val4> ) )	<name4> . append ( ( <name5> , <name1> - <val4> ) )
<name2> を <name3> に <name1> を掛けた値に <name1> を掛けた値だけ増加させる	<name2> += <name3> * <name1> * <name1>	( <name2> += ( <name3> * <name1> ) * <name1> )
<name4> の先頭の <val1> 乗に <name4> の <val3> 番目の <val1> 乗を加えた値を返す	return <name4> [ 0 ] ** <val1> + <name4> [ <val3> ] ** <val1>	return <name4> [ 0 ] ** <val1> + <name4> [ <val3> ] ** <val1>
<val4> から <name5> の <val3> 番目を引いた値を <name2> とする	<name2> = <val4> - <name5> [ <val3> ]	<name2> = <val4> - <name5> [ <val3> ]
<name4> ( <name6> + <name1> , <name6> + <name3> )	<name4> ( <name6> + <name1> , <name6> + <name3> )	<name5> ( <name4> ( <name6> + <name1> , <name6> + <name3> ) )
<name3> の <name2> の <name4> 番目を <name1> だけ増加させる	<name3> . <name2> [ <name4> ] += <name1>	now . <name2> [ <name4> ] += <name1>
<name5> を開始番号として <name6> の <name5> 番目から、つまり末尾までの部分列、 <name6> の要素をそれぞれ組にした列に番号付した組の列を順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in enumerate ( zip ( <name6> [ <name5> : ] , <name6> ) , start = <name5> ) :	in enumerate ( zip ( <name6> [ <name5> : ] , <name6> ) , start = <name5> ) :
<name6> の末尾に <name5> の -2 番目を追加する	<name6> . append ( <name5> [ - 2 ] )	<name4> . append ( <name5> [ - 2 ] )
<name2> を <name6> で割った余りが <val4> と等しい間、次を繰り返す	while <name2> % <name6> == <val4> :	for <name2> in <name2> % <name6> == <val4> :
<name6> を <name5> で割った余りを <name2> とする	<name2> = <name6> % <name5>	( <name2> = <name6> % <name5> )
( ( <name5> , <val4> ) 、 ( <name1> , <val4> ) 、 ( <name3> , <val4> ) 、 ( <name2> , <val4> ) 、 ( <name6> , <val4> ) 、 ( <name6> , <val4> ) 、 ( <val5> , <val4> ) ) からなる辞書を <name6> とする	<name6> = { <name5> : <val4> , <name1> : <val4> , <name3> : <val4> , <name2> : <val4> , <name6> : <val4> , <name6> : <val4> , <val5> : <val4> }	<name6> = { <name5> : <val4> , <name1> : <val4> , <name3> : <val4> , <name2> : <val4> , <name6> : <val4> , <name6> : <val4> , <val5> : <val4> }
<name4> の <name1> 番目が、つまり真と等しいとき、	if <name4> [ <name1> ] == True :	continue if <name4> [ <name1> ] == True :
<name6> を <name4> の <name5> 番目に <name4> の <name2> を <name5> で割った商番目を掛けた値だけ増加させる	<name6> += <name4> [ <name5> ] * <name4> [ <name2> // <name5> ]	<name2> += <name4> [ <name5> ] * <name4> [ <name2> // <name5> ]
<name1> 、 <name4> から <name3> に <name1> を掛けた値を引いた値を <name4> 、 <name1> とする	<name4> , <name1> = <name1> , <name4> - <name3> * <name1>	<name2> , <name1> = <name1> , <name4> - <name3> * <name1>
<name1> の末尾に <name5> を実部、 <name2> を虚部とした複素数を追加する	<name1> . append ( complex ( <name5> , <name2> ) )	not <name1> . append ( complex ( <name5> , <name2> ) )
<name2> の <name3> 番目を <name4> の <name5> の <name1> 番目にする	<name4> . <name5> [ <name1> ] = <name2> [ <name3> ]	<name4> . <name5> [ <name1> ] = <name2> [ <name3> ]
<name1> の <name6> の <name4> 番目番目の <name3> の <name5> 番目番目を <val2> だけ減少させる	<name1> [ <name6> [ <name4> ] ] [ <name3> [ <name5> ] ] -= <val2>	<name1> [ <name6> [ <name4> ] ] [ <name3> [ <name5> ] ] -= <val2>
<val1> を <name6> を <name2> を <name3> とするとするとするを <name4> とする	<name4> = <name3> = <name2> = <name6> = <val1>	<name4> = <name3> = <name2> = <name6> = <val1>
<val1> が <name3> の長さ以下かどうかが <val6> 以下のとき、	if <val1> <= len ( <name3> ) <= <val6> :	. if <val1> <= len ( <name3> ) <= <val6> :
<name4> の <val1> 番目から <name4> の <val2> 番目を引いた値を <name3> とする	<name3> = <name4> [ <val1> ] - <name4> [ <val2> ]	<name3> = <name4> [ <val1> ] - <name4> [ <val2> ]
<name3> に <name3> に <val1> を加えた値を掛けた値を <val5> で割った商から <name6> . <name4> ( <name3> -1 ) を引いた値を出力する	print ( <name3> * ( <name3> + <val1> ) // <val5> - <name6> . <name4> ( <name3> - <val1> ) )	print ( <name3> * ( <name3> + <val1> ) // <val5> - <name6> . <name4> ( <name3> - <val1> ) )
<name1> . <name4> ( <name6> [ <name5> ] )	<name1> . <name4> ( <name6> [ <name5> ] )	<name4> . <name4> ( <name6> [ <name5> ] )
<name6> の <name5> が、つまり未定値と等しくない間、次を繰り返す	while <name6> . <name5> != None :	try != <name6> . <name5> != None :
<val6> の <val1> 乗から <val3> を引いた値を <name5> とする	<name5> = <val6> ** <val1> - <val3>	<name5> = <val6> ** <val1> - <val3>
<name4> が <name6> から <val3> を引いた値と等しいとき、	if <name4> == <name6> - <val3> :	continue if <name4> == <name6> - <val3> :
<name2> を <name4> の <name6> の <name5> の <name3> 番目と等しい要素の最初の位置番目だけ増加させる	<name2> += <name4> [ <name6> . index ( <name5> [ <name3> ] ) ]	( <name2> += <name4> [ <name6> . index ( <name5> [ <name3> ] ) ] )
( 、つまり未定値 ) からなる列の <name1> 回分の列を <name6> とする	<name6> = [ None ] * <name1>	<name6> = [ None ] * <name1>
<val6> から <val3> 未満までの数列の各要素を <name2> とし、 <name2> の列を <name4> とする	<name4> = [ <name2> for <name2> in range ( <val6> , <val3> ) ]	<name4> = [ <name2> for <name2> in range ( <val6> , <val3> ) ]
<name5> の <val2> 乗から <name4> から <name1> を引いた値の <val2> 乗を引いた値の . <val3> 乗を <name6> とする	<name6> = ( <name5> ** <val2> - ( <name4> - <name1> ) ** <val2> ) ** . <val3>	<name6> = ( <name5> ** <val2> - ( <name4> - <name1> ) ** <val2> ) ** . <val3>
<name4> の <val3> 番目を <val3> だけ増加させる	<name4> [ <val3> ] += <val3>	<name2> [ <val3> ] += <val3>
<name2> の各要素を <name4> とし、 <name4> が <name3> に含まれないときの <name4> の列を <name6> とする	<name6> = [ <name4> for <name4> in <name2> if <name4> not in <name3> ]	<name6> = [ <name4> for <name4> in <name2> if <name4> not in <name3> ]
<val1> を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <val1>	( <name6> [ <name4> ] = <val1> )
( ( -1 、 <val3> ) の組、 ( <val3> 、 -1 ) の組、 ( <val2> 、 <val3> ) の組、 ( <val3> 、 <val2> ) の組 ) の組を <name1> とする	<name1> = ( ( - <val2> , <val3> ) , ( <val3> , - <val2> ) , ( <val2> , <val3> ) , ( <val3> , <val2> ) )	<name1> = ( ( - <val2> , <val3> ) , ( <val3> , - <val2> ) , ( <val2> , <val3> ) , ( <val3> , <val2> ) )
<val1> を間に入れて <name4> の各要素を <name2> とし、 <name2> の文字列の列を連結した文字列を出力する	print ( <val1> . join ( [ str ( <name2> ) for <name2> in <name4> ] ) )	print ( <val1> . join ( [ str ( <name2> ) for <name2> in <name4> ] ) )
<name3> ( <name4> ) を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name3> ( <name4> )	<name1> , <name2> = <name3> ( <name4> )
<name6> 、 <name3> の <name2> 番目の最大値を <name6> とする	<name6> = max ( <name6> , <name3> [ <name2> ] )	<name6> = max ( <name6> , <name3> [ <name2> ] )
<name5> の <name4> の先頭番目、 <name5> の <name4> の <val3> 番目番目を <name6> 、 <name1> とする	<name6> , <name1> = <name5> [ <name4> [ 0 ] ] , <name5> [ <name4> [ <val3> ] ]	else , <name6> , <name1> = <name5> [ <name4> [ 0 ] ] , <name5> [ <name4> [ <val3> ] ]
<name6> の <name2> が <name1> 以下のとき、	if <name6> . <name2> <= <name1> :	if <name6> . <name2> <= <name1> :
<name2> の <name1> に [ MASK ] を書き込むを <name5> とする	<name5> = <name2> . <name1> . <name5>	<name1> . <name5> = <name2> . <name1> . <name5>
0 から <val5> 未満までの数列を順に <name6> として、繰り返す <blk> 入力された文字列のリストを <name1> の <name6> 番目にする </blk>	for <name6> in range ( <val5> ) : <blk> <name1> [ <name6> ] = list ( input ( ) ) </blk>	in for <val5> ) : <blk> <name1> [ <name6> ] = list ( input ( ) ) </blk>
<name5> の末尾に ( <name1> 、 <name6> ) の組を追加する	<name5> . append ( ( <name1> , <name6> ) )	<name5> . append ( ( <name1> , <name6> ) )
<name1> 、 <name4> の要素をそれぞれ組にした列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in zip ( <name1> , <name4> ) :	. for <name5> , <name2> in zip ( <name1> , <name4> ) :
<name5> モジュールを用いる	from <name5> import Fraction	from <name5> , Counter
<name6> の <name5> の <name4> 番目を順に <name2> 、 <name3> 、 <name1> として、繰り返す	for <name2> , <name3> , <name1> in <name6> . <name5> [ <name4> ] :	for <name2> , <name3> , <name1> in <name6> . <name5> [ <name4> ] :
( <val4> ) からなる列を <name2> とする	<name2> = [ <val4> ]	( <name2> = [ <val4> ] )
<name3> の余弦を <name2> とする	<name2> = cos ( <name3> )	dict = math . cos ( <name3> )
<name5> の <name4> の <name3> 番目を <val1> だけ増加させる	<name5> . <name4> [ <name3> ] += <val1>	<name2> . <name4> [ <name3> ] += <val1>
<name1> の <val3> 番目が <name2> と等しくないとき、	if <name1> [ <val3> ] is <name2> :	[ if <name1> [ <val3> ] is <name2> :
<val5> を <name6> の <name1> 番目の <name4> 番目にする	<name6> [ <name1> ] [ <name4> ] = <val5>	<name4> [ <name1> ] [ <name4> ] = <val5>
<name5> に <name6> に <name2> を掛けた値を加えた値を <name4> で割った余りを <name5> とする	<name5> = ( <name5> + <name6> * <name2> ) % <name4>	: <name5> = ( <name5> + <name6> * <name2> ) % <name4>
<name4> の <name1> の <name6> 番目を <name4> の <name1> の <name2> 番目だけ増加させる	<name4> . <name1> [ <name6> ] += <name4> . <name1> [ <name2> ]	<name1> . <name1> [ <name6> ] += <name4> . <name1> [ <name2> ]
<name6> の <name4> から <val2> を引いた値番目の末尾に <name3> から <val2> を引いた値を追加する	<name6> [ <name4> - <val2> ] . append ( <name3> - <val2> )	<name3> [ <name4> - <val2> ] . append ( <name3> - <val2> )
<name5> の末尾に ( <name4> 、 <name1> ) の組を追加する	<name5> . append ( ( <name4> , <name1> ) )	<name4> . append ( ( <name4> , <name1> ) )
<name5> の順序数が <val1> の順序数以下のとき、	if ord ( <name5> ) <= ord ( <val1> ) :	list ( ord ( <name5> ) <= ord ( <val1> ) ) :
<name1> の <name3> 番目の <name6> から <val5> を引いた値番目、 <name1> の <name3> から <val5> を引いた値番目の <name6> 番目の最大値を <name1> の <name3> 番目の <name6> 番目にする	<name1> [ <name3> ] [ <name6> ] = max ( <name1> [ <name3> ] [ <name6> - <val5> ] , <name1> [ <name3> - <val5> ] [ <name6> ] )	<name6> [ <name3> ] [ <name6> ] = max ( <name1> [ <name3> ] [ <name6> - <val5> ] , <name1> [ <name3> - <val5> ] [ <name6> ] )
<name6> ( ( <val4> , <name1> , <name2> ) )	<name6> ( ( <val4> , <name1> , <name2> ) )	set <name6> ( ( <val4> , <name1> , <name2> ) )
改行せずに <val6> を書式として <name3> の <name5> から <val4> を引いた値番目で整形した文字列を出力する	print ( <val6> . format ( <name3> [ <name5> - <val4> ] ) , end = '' )	end = <val6> . format ( <name3> [ <name5> - <val4> ] ) , end = '' )
<name4> を順に <name1> 、 <name5> 、 <name6> として、繰り返す	for <name1> , <name5> , <name6> in <name4> :	for <name1> , <name5> , <name6> in <name4> :
<name6> かつ <name3> が <name6> の先頭より小さいとき、	if <name6> and <name3> < <name6> [ 0 ] :	list ( <name6> and <name3> < <name6> [ 0 ] ) :
<name3> から <val6> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> , <val6> , - 1 ) :	) : for <name1> in range ( <name3> , <val6> , - 1 ) :
( <val2> ) からなる列に <name3> の、つまり先頭から <val1> 番目までの部分列を加えた値を <name3> とする	<name3> = [ <val2> ] + <name3> [ : <val1> ]	\ <name3> = [ <val2> ] + <name3> [ 0 : <val1> ]
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = map ( float , input ( ) . split ( ) )	<name3> , <name5> = map ( float , input ( ) . split ( ) )
<name5> の <name6> の <name1> 番目の <name2> から <val4> を引いた値乗に対する <name2> の剰余を <name5> の <name3> の <name1> 番目にする	<name5> . <name3> [ <name1> ] = pow ( <name5> . <name6> [ <name1> ] , <name2> - <val4> , <name2> )	<name5> [ <name3> . <name1> ] = pow ( <name5> . <name6> [ <name1> ] , <name2> - <val4> , <name2> )
<name5> の先頭から <name3> を探して見つかった位置が <name5> の先頭から <name1> を探して見つかった位置と等しいかどうかを返す	return <name5> . find ( <name3> ) == <name5> . find ( <name1> )	x return <name5> . find ( <name3> ) == <name5> . find ( <name1> )
0 から <name4> に <val3> を加えた値未満までの数列の各要素を <name1> とし、 <name1> の列を <name5> の <name6> にする	<name5> . <name6> = [ <name1> for <name1> in range ( <name4> + <val3> ) ]	) <name5> . <name6> = [ <name1> for <name1> in range ( <name4> + <val3> ) ]
<val6> を <name4> の <name3> 番目の <name1> 番目にする	<name4> [ <name3> ] [ <name1> ] = <val6>	<name4> [ <name3> ] [ <name1> ] = <val6>
<name4> を <name5> の <name6> 番目の <name3> 番目にする	<name5> [ <name6> ] [ <name3> ] = <name4>	( <name5> [ <name6> ] [ <name3> ] = <name4> )
<name3> が <name2> の <val6> 番目より大きいとき、	if <name3> > <name2> [ <val6> ] :	for <name3> in <name2> [ <val6> ] :
( ( <name5> 、 <name1> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name5> , <name1> ) ]	<name4> = [ ( <name5> , <name1> ) ]
( ( <val3> 、 <val2> 、 <val1> 、 <val5> ) からなる列、 ( <val1> 、 <val5> 、 <val3> 、 <val2> ) からなる列、 ( <val5> 、 <val3> 、 <val2> 、 <val1> ) からなる列、 ( <val2> 、 <val1> 、 <val5> 、 <val3> ) からなる列 ) からなる列を <name6> とする	<name6> = [ [ <val3> , <val2> , <val1> , <val5> ] , [ <val1> , <val5> , <val3> , <val2> ] , [ <val5> , <val3> , <val2> , <val1> ] , [ <val2> , <val1> , <val5> , <val3> ] ]	<name6> = [ [ <val3> , <val2> , <val1> , <val5> ] , [ <val1> , <val5> , <val3> , <val2> ] , [ <val5> , <val3> , <val2> , <val1> ] , [ <val2> , <val1> , <val5> , <val3> ] ]
<name4> . <name5> ( <name4> . <name6> ) を返す	return <name4> . <name5> ( <name4> . <name6> )	self return <name4> . <name5> ( <name4> . <name6> )
( <name1> 、 <name2> ) の組を <name3> の <name2> 番目にする	<name3> [ <name2> ] = ( <name1> , <name2> )	<name3> [ <name2> ] = ( <name1> , <name2> )
<name1> 、 <name3> の最小値を <name1> とする	<name1> = min ( <name1> , <name3> )	<name1> = min ( <name1> , <name3> )
<name6> に <name2> を掛けた値を <name4> とする	<name4> = <name6> * <name2>	<name4> = <name6> * <name2>
<name1> を展開し、それぞれ <name4> 、 <name5> 、 <name6> とする	<name4> , <name5> , <name6> = <name1>	( <name4> , <name5> , <name6> = <name1> )
<name3> から <name6> を引いた値を出力する	print ( <name3> - <name6> )	print ( <name3> - <name6> )
<name4> の <val6> 乗に <name5> の <val6> 乗を加えた値が <name1> の <val6> 乗より大きいとき、	if <name4> ** <val6> + <name5> ** <val6> > <name1> ** <val6> :	list ( <name4> ** <val6> + <name5> ** <val6> > <name1> ** <val6> :
<name3> の <val2> 番目を <name5> の先頭に <name5> の <val1> 番目を掛けた値だけ増加させる	<name3> [ <val2> ] += <name5> [ 0 ] * <name5> [ <val1> ]	( <name3> [ <val2> ] += <name5> [ 0 ] * <name5> [ <val1> ] )
<name3> の <name1> の <name2> 番目を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in <name3> . <name1> [ <name2> ] :	for <name6> , <name5> in <name3> . <name1> [ <name2> ] :
<val4> に <name6> に <name6> に <val4> を加えた値を掛けた値を <val1> で割った商を加えた値を出力する	print ( <val4> + <name6> * ( <name6> + <val4> ) // <val1> )	print ( <val4> + <name6> * ( <name6> + <val4> ) // <val1> )
<name1> ( <name2> ) に <name5> を掛けた値を出力する	print ( <name1> ( <name2> ) * <name5> )	<name2> print ( <name1> ( <name2> ) * ( <name5> ) )
<name5> の <val3> 番目、 <name5> の <val6> 番目を <name5> の <val6> 番目、 <name5> の <val3> 番目とする	<name5> [ <val6> ] , <name5> [ <val3> ] = <name5> [ <val3> ] , <name5> [ <val6> ]	) [ <val6> ] , <name5> [ <val3> ] = <name5> [ <val3> ] , <name5> [ <val6> ]
<name5> が <val3> と等しいとき、 <blk> <val4> に <name6> を加えた値を出力する </blk>	if <name5> == <val3> : <blk> print ( <val4> + <name6> ) </blk>	for if <name5> == <val3> : <blk> print ( <val4> + <name6> ) </blk>
<name5> の <name2> 番目の各要素を <name4> とし、 <name3> の <name4> 番目の列の最大値に <val6> を加えた値を <name3> の <name2> 番目にする	<name3> [ <name2> ] = max ( [ <name3> [ <name4> ] for <name4> in <name5> [ <name2> ] ] ) + <val6>	<name3> [ <name2> ] = max ( [ <name3> [ <name4> ] for <name4> in <name5> [ <name2> ] ] ) + <val6>
<name1> ( [ <name3> - bfora , binzip ( <name6> , <name2> ) ] ) を返す	return <name1> ( [ <name3> - b for <name3> , b in zip ( <name6> , <name2> ) ] )	yield <name1> ( [ <name3> - b for <name3> , b in zip ( <name6> , <name2> ) ] )
<name6> をソートされた順序を保ったまま <name5> を <name1> に挿入できる最後の位置から、つまりソートされた順序を保ったまま <name5> を <name1> に挿入できる位置を引いた値だけ増加させる	<name6> += bisect_right ( <name1> , <name5> ) - bisect_left ( <name1> , <name5> )	<name6> += bisect . bisect_right ( <name1> , <name5> ) - bisect . bisect . bisect_right ( <name5> , <name1> )
( ( <val6> ) からなる列の <val6> から <name1> に <val5> を加えた値未満までの数列の各要素を <name3> とし、 <name2> に <val5> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val6> ] * [ ( <name2> + <val5> ) for <name3> in range ( <name1> + <val5> ) ] ]	<name4> = [ [ <val6> ] * [ ( <name2> + <val5> ) for <name3> in range ( <name1> + <val5> ) ] ]
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> 、 <name4> とする	<name5> , <name6> , <name4> = map ( int , <name3> . readline ( ) . split ( ) )	<name3> , <name6> , <name4> = map ( int , <name3> . readline ( ) . split ( ) )
<name5> の <name1> 番目が <name3> より小さいとき、	if <name5> [ <name1> ] < <name3> :	list if <name5> [ <name1> ] < <name3> :
<name3> を <name6> の <name4> 番目の <name5> 番目に <name2> から <name4> を引いた値の絶対値、 <name1> から <name5> を引いた値の絶対値の最小値を掛けた値だけ増加させる	<name3> += <name6> [ <name4> ] [ <name5> ] * min ( abs ( <name2> - <name4> ) , abs ( <name1> - <name5> ) )	<name5> += <name3> / <name6> [ <name4> ] [ <name5> ] * min ( abs ( <name2> - <name4> ) , abs ( <name1> - <name5> ) )
<name4> の長さを <name5> の <name1> にする	<name5> . <name1> = len ( <name4> )	( <name5> . <name1> = len ( <name4> ) )
<name1> の <name2> 番目を <name4> とする	<name4> = <name1> [ <name2> ]	<name2> = <name1> [ <name2> ]
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name1> とする	<name3> , <name6> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )	<name3> , <name6> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )
<name3> . <name2> ( <name3> . <name5> )	<name3> . <name2> ( <name3> . <name5> )	<name1> . <name2> ( <name3> . <name5> )
- <name4> の <name2> 番目の <name5> 番目を <name1> で割った余りを <name6> の <name2> 番目の <name5> 番目にする	<name6> [ <name2> ] [ <name5> ] = ( - <name4> [ <name2> ] [ <name5> ] ) % <name1>	- <name6> [ <name2> ] [ <name5> ] = - <name4> [ <name2> ] [ <name5> ] % <name1>
<name1> をパラメータとして <name1> を返す関数を <name5> とする	<name5> = lambda <name1> : <name1>	<name1> = lambda <name1> : <name1> ( lambda <name5> : <name1> ) \
<name6> が <name5> より小さいとき、 <blk> <name1> を <name6> から <name2> を引いた値だけ増加させる </blk>	if <name6> < <name5> : <blk> <name1> += <name6> - <name2> </blk>	try : <blk> <name1> += <name6> - <name2> </blk>
<name1> の <name6> が、つまり未定値と等しいとき、	if <name1> . <name6> is not None :	for <name1> . <name6> is not None :
<name1> ( <name3> , <name4> ) を <name6> とする	<name6> = <name1> ( <name3> , <name4> )	<name6> = <name1> ( <name3> , <name4> )
<name5> の <val3> 番目を <val3> だけ増加させる	<name5> [ <val3> ] += <val3>	<name1> [ <val3> ] += <val3>
0 から <name4> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 0 から <name4> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <name1> が <name5> と等しいかどうかの列の列を <name2> とする	<name2> = [ [ <name1> == <name5> for <name5> in range ( <name4> + <val6> ) ] for <name1> in range ( <name4> + <val6> ) ]	<name3> = [ [ <name4> + <val6> for <name5> in range ( <name4> + <val6> ) ] for <name1> in range ( <name4> + <val6> ) ]
<val4> 、 <val4> を <name1> 、 <name2> とする	<name1> , <name2> = <val4> , <val4>	<name6> , <name1> , <name2> = <val4> , <val4>
<name4> を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name4>	( <name5> , <name2> = <name4> )
<name3> の、つまり先頭から <name4> から <name2> を引いた値までの部分列が <name6> の <name2> 番目から <name4> 番目までの部分列と等しくないとき、	if <name3> [ : <name4> - <name2> ] != <name6> [ <name2> : <name4> ] :	for <name3> in <name3> [ : <name4> - <name2> ] != <name6> [ <name2> : <name4> ] :
<name2> ( <name5> ) を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name2> ( <name5> )	<name1> [ <name1> ] = <name2> ( <name5> )
<name4> の先頭の <name1> を <name2> とする	<name2> = <name4> [ 0 ] . <name1>	<name2> = <name4> [ 0 ] . <name1>
 を間に入れて <name2> . <name3> ( <name6> ( ) . <name5> ( ) ) のリストを連結した文字列を出力する	print ( ' ' . join ( list ( <name2> . <name3> ( <name6> ( ) . <name5> ( ) ) ) ) )	print ( '' . join ( list ( <name2> . <name3> ( <name6> ( ) . <name5> ( ) ) ) ) )
<name2> の先頭を除いた部分列を順に <name3> として、繰り返す	for <name3> in <name2> [ 1 : ] :	in <name2> [ 1 : ] :
<name6> の <name5> の <name4> 番目が <val1> 以上の間、次を繰り返す	while <name6> . <name5> [ <name4> ] >= <val1> :	del <name6> . <name5> [ <name4> ] >= <val1> :
関数 <name6> を <name1> をパラメータとして定義する <val2> に <name1> を掛けた値に <val2> を加えた値を返す	def <name6> ( <name1> ) : return <val2> * <name1> + <val2>	: <name6> ( <name1> ) : return <val2> * <name1> + <val2>
<name1> . <name5> ( ) を順に <name6> として、繰り返す	for <name6> in <name1> . <name5> ( ) :	. for <name6> in <name1> . <name5> ( ) :
Miserable Hokusai !を出力する	print ( 'Miserable Hokusai!' )	dict print ( 'Data ) )
<name5> の <name3> を返す	return <name5> . <name3>	yield <name5> . <name3>
<name4> の <name6> 、 <name4> の <name1> 、 <name4> の <name3> 、 <name4> の <name5> を <name4> の <name5> 、 <name4> の <name6> 、 <name4> の <name1> 、 <name4> の <name3> とする	<name4> . <name5> , <name4> . <name6> , <name4> . <name1> , <name4> . <name3> = <name4> . <name6> , <name4> . <name1> , <name4> . <name3> , <name4> . <name5>	<name5> . <name4> , <name5> . <name4> , <name1> . <name4> . <name3> = <name4> . <name6> , <name4> . <name1> , <name4> . <name3> , <name4> . <name5>
<name4> ( <name1> , <name3> . <name5> , <name6> ) を <name2> とする	<name2> = <name4> ( <name1> , <name3> . <name5> , <name6> )	<name2> = <name4> ( <name1> , <name3> . <name5> , <name6> )
入力された文字列の先頭を <name5> とする	<name5> = input ( ) [ 0 ]	<name5> = input ( ) [ 0 ]
?を <name6> とする	<name6> = '?'	( <name6> = '?' )
<val4> を <name5> の <name2> にする	<name5> . <name2> = <val4>	( <name5> . <name2> = <val4> )
<name4> を <name2> の <name6> 番目の <name3> 番目にする	<name2> [ <name6> ] [ <name3> ] = <name4>	( <name2> [ <name6> ] [ <name3> ] = <name4> )
0 から <name2> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の列を <name5> とする	<name5> = [ input ( ) . split ( ) for <name6> in range ( <name2> ) ]	<name5> = [ input ( ) . split ( ) for <name6> in range ( <name2> ) ]
<name6> から <val4> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> , <val4> , - 1 ) :	for <name2> in range ( <name6> , <val4> , - 1 ) :
<name2> に <val3> を掛けた値に <val5> を加えた値、 <name2> に <val3> を掛けた値に <val3> を加えた値を <name1> 、 <name4> とする	<name1> , <name4> = <name2> * <val3> + <val5> , <name2> * <val3> + <val3>	<name1> , <name4> = <name2> * <val3> + <val5> , <name2> * <val3> + <val3>
<name4> の先頭から <name2> を引いた値を出力する	print ( <name4> [ 0 ] - <name2> )	print ( <name4> [ 0 ] - <name2> )
<name6> [ <name4> ] . <name3> ( )	<name6> [ <name4> ] . <name3> ( )	<name3> [ <name4> ] . <name3> ( )
<name3> ( <name6> ( <name4> ) ) を出力する	print ( <name3> ( <name6> ( <name4> ) ) )	print ( <name3> ( <name6> ( <name4> ) ) )
<name4> の最小値を <name3> の <name5> 番目の <name5> に <name1> を加えた値番目にする	<name3> [ <name5> ] [ <name5> + <name1> ] = min ( <name4> )	<name1> [ <name5> ] [ <name5> + <name1> ] = min ( <name4> )
<name2> に <val6> を加えた値から <name1> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> + <val6> , <name1> ) :	continue + <val6> , <name1> in range ( <name1> ) :
<name3> を <val1> で割った値の整数値を <name2> とする	<name2> = int ( <name3> / <val1> )	<val5> <name2> = int ( <name3> / <val1> )
<name5> が <name3> 以上の間、次を繰り返す	while <name5> >= <name3> :	del <name5> >= <name3> :
<name2> ( <name3> , <name4> , <name1> , <name5> )	<name2> ( <name3> , <name4> , <name1> , <name5> )	( <name2> ( <name3> , <name4> , <name1> , <name5> ) )
<name3> を <name5> の <val6> 番目だけ増加させる	<name3> += <name5> [ <val6> ]	( <name3> += <name5> [ <val6> ] )
<name1> を <val4> で割った余りが <val3> と等しいとき <val4> 、そうでなければ <val2> を <name5> とする	<name5> = <val4> if ( <name1> % <val4> ) == <val3> else <val2>	<name5> = <val4> if <name1> % <val4> == <val3> else <val2>
<name1> の <name3> 番目の <name5> 番目、 <name1> の <name3> と <val4> << <name2> の論理和番目の <name2> 番目に <name6> を加えた値の最小値を <name1> の <name3> 番目の <name5> 番目にする	<name1> [ <name3> ] [ <name5> ] = min ( <name1> [ <name3> ] [ <name5> ] , <name1> [ <name3> | <val4> << <name2> ] [ <name2> ] + <name6> )	<name2> [ <name3> ] [ <name5> ] = min ( <name1> [ <name3> ] [ <name5> ] , <name1> [ <name3> | <val4> << <name2> ] [ <name2> ] + <name6> )
<name5> の <val1> 個までのコンビネーションを順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in itertools . combinations ( <name5> , <val1> ) :	. for <name6> , <name3> in combinations ( <name5> , <val1> ) :
<name1> . <name2> ( <name3> ) 、 <name1> . <name2> ( <name5> ) を <name4> 、 <name6> とする	<name4> , <name6> = <name1> . <name2> ( <name3> ) , <name1> . <name2> ( <name5> )	<name3> , <name6> = <name1> . <name2> ( <name3> ) , <name1> . <name2> ( <name5> )
<name2> の <name1> と <name2> の <name5> の <name3> 番目の論理積が <val4> <name6> と等しくないかどうかを返す	return <name2> . <name1> & <name2> . <name5> [ <name3> ] != <val4> <name6>	x = <name2> . <name1> & <name2> . <name5> [ <name3> ] != <val4> <name6>
<name3> の <name4> の <name6> 番目を一旦、返す	yield <name3> . <name4> [ <name6> ]	global <name3> . <name4> [ <name6> ]
<name3> . <name4> ( <name1> , <name5> )	<name3> . <name4> ( <name1> , <name5> )	<name1> . <name5> ( <name1> , <name5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name5> とする	<name5> = list ( map ( str , input ( ) . split ( ) ) )	<name5> = list ( map ( int , input ( ) . split ( ) ) )
<name6> の <val3> 番目の整数値を <name5> とする	<name5> = int ( <name6> [ <val3> ] )	else = int ( <name6> [ <val3> ] )
<name4> の末尾に <name3> と <val6> を <name2> だけ左シフトした値の論理積が <val1> より大きいかどうかを追加する	<name4> . append ( <name3> & ( <val6> << <name2> ) > <val1> )	<name4> . append ( ( <name3> & ( <val6> << <name2> ) > <val1> )
( <val3> 、 <val6> 、 <val2> 、 <val5> 、 <val1> 、 <val4> 、 <val3> 、 <val6> 、 <val2> 、 <val5> 、 <val1> 、 <val4> 、 <val3> ) からなる列を <name4> とする	<name4> = [ <val3> , <val6> , <val2> , <val5> , <val1> , <val4> , <val3> , <val6> , <val2> , <val5> , <val1> , <val4> , <val3> ]	<name5> = [ <val3> , <val6> , <val2> , <val5> , <val1> , <val4> , <val3> , <val6> , <val2> , <val5> , <val1> , <val4> , <val3> ]
改行せずに <val2> を書式として <name6> の <name4> 番目で整形した文字列を出力する	print ( <val2> . format ( <name6> [ <name4> ] ) , end = '' )	end = <val2> . format ( <name6> [ <name4> ] ) , end = '' )
<name2> ( <name6> . <name4> )	<name2> ( <name6> . <name4> )	count ( <name6> . <name4> )
( <val2> ) からなる列の <name1> に <val4> を加えた値回分の列を <name5> とする	<name5> = [ <val2> ] * ( <name1> + <val4> )	else = [ <val2> ] * ( <name1> + <val4> )
を間に入れて <name3> を連結した文字列を <name5> とする	<name5> = '' . join ( <name3> )	<name5> = '' . join ( <name3> )
( <name2> の <name1> の <name2> の <name6> の <name5> 番目番目、 <name2> の <name1> の <name5> 番目に <val4> を加えた値 ) の組を一旦、返す	yield ( <name2> . <name1> [ <name2> . <name6> [ <name5> ] ] , <name2> . <name1> [ <name5> ] + <val4> )	while ( <name2> . <name1> [ <name2> . <name6> [ <name5> ] ] , <name2> . <name1> [ <name5> ] + <val4> ) :
<name2> の <name5> 番目の <name1> 番目を <name2> の <name5> から <val6> を引いた値番目の <name1> 番目だけ増加させる	<name2> [ <name5> ] [ <name1> ] += <name2> [ <name5> - <val6> ] [ <name1> ]	[ <name2> [ <name5> ] [ <name1> ] += <name2> [ <name5> - <val6> ] [ <name1> ]
<name1> の <name5> を <name1> の <name2> の <val4> 番目にする	<name1> . <name2> [ <val4> ] = <name1> . <name5>	<name6> . <name2> [ <val4> ] = <name1> . <name5>
( ( <val3> ) からなる列の <name5> の各要素を <name2> とし、 <name2> に <val1> を加えた値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val3> ] * [ ( <name2> + <val1> ) for <name2> in <name5> ] ]	<name6> = [ [ <val3> ] * [ ( <name2> + <val1> ) for <name2> in <name5> ] ]
<name2> を <val3> で割った商が <name5> を <val4> で割った余りと等しいとき、	if <name2> // <val3> == <name5> % <val4> :	raise ( <name2> // <val3> ) == ( <name5> % <val4> ) :
<name2> の <name3> から <val6> を引いた値番目が <name2> の <name3> から <val4> を引いた値番目と等しいとき、	if <name2> [ <name3> - <val6> ] == <name2> [ <name3> - <val4> ] :	continue <name2> [ <name3> - <val6> ] == <name2> [ <name3> - <val4> ] :
<name6> の <name5> 番目の <val1> 番目の整数値を <name6> の <name5> 番目の <val1> 番目にする	<name6> [ <name5> ] [ <val1> ] = int ( <name6> [ <name5> ] [ <val1> ] )	<name4> [ <name5> ] [ <val1> ] = int ( <name6> [ <name5> ] [ <val1> ] )
<name6> を <name1> の <name5> ( <name6> , <name2> [ <name6> ] [ <name4> [ <name6> ] -1 ] ) 番目にする	<name1> [ <name5> ( <name6> , <name2> [ <name6> ] [ <name4> [ <name6> ] - 1 ] ) ] = <name6>	<name6> [ <name1> [ <name5> ( <name6> , <name2> [ <name6> ] [ <name4> [ <name6> ] - 1 ] ) ] = <name6>
<name4> に <val6> を加えた値から <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> + <val6> , <name3> ) :	) for <name5> in range ( <name4> + <val6> , <name3> ) :
<name5> から <name6> を引いた値を <name2> とする	<name2> = <name5> - <name6>	( <name2> = <name5> - <name6> )
<name3> から <name1> を引いた値をソートした列を <name5> とする	<name5> = sorted ( <name3> - <name1> )	<name5> = sorted ( <name3> - <name1> )
<name1> . <name2> ( <name5> , <name3> , <name4> ) を <name6> とする	<name6> = <name1> . <name2> ( <name5> , <name3> , <name4> )	<name6> = <name1> . <name2> ( <name5> , <name3> , <name4> )
<name4> から <name2> を引いた値から <name1> ( <name5> , <name6> ) を引いた値から <name1> ( <name6> , <name5> ) を引いた値を出力する	print ( <name4> - <name2> - <name1> ( <name5> , <name6> ) - <name1> ( <name6> , <name5> ) )	<name4> - <name2> - <name1> ( <name5> , <name6> ) - <name1> ( <name6> , <name5> ) )
<name1> の <name5> から <val3> を引いた値番目に <name1> の <name5> 番目を加えた値を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <name1> [ <name5> - <val3> ] + <name1> [ <name5> ]	( <name1> [ <name5> ] = <name1> [ <name5> - <val3> ] + <name1> [ <name5> ] )
<name2> かつ <name2> の先頭の <val1> 番目が <name5> に <val4> を加えた値から <name3> を引いた値以下のとき、	if ( <name2> and <name2> [ <val1> ] [ <val1> ] <= <name5> + <val4> - <name3> ) :	for <name2> in <name2> and <name2> [ <val1> ] [ <val1> ] <= <name5> + <val4> - <name3> :
<name1> と <name6> 、 <name5> の和集合	<name1> . union ( <name6> , <name5> )	<name2> . union ( <name6> , <name5> )
<name3> . <name5> ( <name1> , ( <name6> [ <name2> ] , <name2> ) )	<name3> . <name5> ( <name1> , ( <name6> [ <name2> ] , <name2> ) )	min <name3> . <name5> ( <name1> , ( <name6> [ <name2> ] , <name2> ) )
<name2> の <name5> から <val1> を引いた値番目を <val1> だけ増加させる	<name2> [ <name5> - <val1> ] += <val1>	<name1> [ <name5> - <val1> ] += <val1>
<name4> ( <val6> ) を <name3> として <name5> をソートする	<name5> . sort ( <name3> = <name4> ( <val6> ) )	<name3> . sort ( <name3> = <name4> ( <val6> ) )
<name3> の <name5> 番目を順に <name6> 、 <name4> 、 <name2> として、繰り返す	for <name6> , <name4> , <name2> in <name3> [ <name5> ] :	for <name6> , <name4> , <name2> in <name3> [ <name5> ] :
<name1> の <name3> 番目の <name6> 番目が <val5> に含まれまたは <name2> の <name3> 番目の <name6> 番目が <name4> と等しくないとき、	if <name1> [ <name3> ] [ <name6> ] in <val5> or <name2> [ <name3> ] [ <name6> ] != <name4> :	for <name1> in <name1> [ <name3> ] [ <name6> ] in <val5> or <name2> [ <name3> ] [ <name6> ] != <name4> :
<name4> の <name3> 番目が <val5> 以下のとき、	if <name4> [ <name3> ] <= <val5> :	: if <name4> [ <name3> ] <= <val5> :
<val2> 、 <val1> 、入力された文字列の整数値を <name5> 、 <name3> の先頭、 <name4> の <val2> 番目とする	<name5> , <name3> [ <val2> ] , <name4> [ <val2> ] = <val2> , <val1> , int ( input ( ) )	<name6> , <name3> [ 0 ] , <name4> [ <val2> ] = <val2> , <val1> , int ( input ( ) )
入力された文字列を <val4> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name3> 、 <name6> 、 <name5> 、 <name1> 、 <name2> とする	<name4> , <name3> , <name6> , <name5> , <name1> , <name2> = map ( float , input ( ) . split ( <val4> ) )	<name4> , <name3> , <name6> , <name5> , <name1> , <name2> = map ( float , input ( ) . split ( <val4> ) )
<name3> の <name6> から <name5> を引いた値番目を <name4> とする <name1> の <name4> から <name3> を引いた値番目を <name2> とする	<name4> = <name3> [ <name6> - <name5> ] <name2> = <name1> [ <name4> - <name3> ]	<name6> = <name3> [ <name6> - <name5> ] <name2> = <name1> [ <name4> - <name3> ]
<val4> から <name3> を引いた値を <name2> とする	<name2> = <val4> - <name3>	<name1> <name2> = <val4> - <name3>
<name2> の末尾に <val6> を追加する	<name2> . append ( <val6> )	<name2> . append ( <val6> )
<name3> の <name4> のとき <name3> の <name4> 、そうでなければ <name3> の <name2> を <name1> とする	<name1> = <name3> . <name4> if <name3> . <name4> else <name3> . <name2>	<name1> = <name3> . <name4> if <name3> . <name4> else <name3> . <name2>
プログラムを正常終了する	sys . exit ( )	exit . exit ( )
<name6> の <name4> 番目から <name4> に <name3> の長さを加えた値までの部分列が <name3> と等しいとき、	if <name6> [ <name4> : <name4> + len ( <name3> ) ] == <name3> :	while <name6> [ <name4> : <name4> + len ( <name3> ) ] == <name3> :
<name6> に <val5> を加えた値から <name4> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> + <val5> , <name4> ) :	range for <name3> in range ( <name6> + <val5> , <name4> ) :
<name3> の <name2> の <name4> 番目を <name4> とする	<name4> = <name3> . <name2> [ <name4> ]	( <name4> = <name3> . <name2> [ <name4> ] )
<name1> の <name2> 番目が <name1> の <name6> 番目と等しいとき <val5> 、そうでなければ <val4> を出力する	print ( <val5> if <name1> [ <name2> ] == <name1> [ <name6> ] else <val4> )	print ( <val5> if <name1> [ <name2> ] == <name1> [ <name6> ] else <val4> )
<name4> の <val5> と等しい要素の最初の位置を <name2> とする	<name2> = <name4> . <name2> ( <val5> )	<name2> = <name4> . index ( <val5> )
<name3> を <name4> の <val2> 番目にする	<name4> [ <val2> ] = <name3>	( <name4> [ <val2> ] = <name3> )
<name2> . <name1> ( <name3> ) を出力する	print ( <name2> . <name1> ( <name3> ) )	print ( <name2> . <name1> ( <name3> ) )
<name5> に <name1> を <name4> で割った値を加えた値を <name3> とするを <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name3> = <name5> + <name1> / <name4>	else = <name3> = <name5> + <name1> / <name4>
<name6> ( <name5> , <val2> , <name1> )	<name6> ( <name5> , <val2> , <name1> )	set ( <name6> ( <name5> , <val2> , <name1> ) )
<name6> の <name5> 番目の <name3> 番目を <name6> の <name5> から <val1> を引いた値番目の <name3> 番目だけ増加させる	<name6> [ <name5> ] [ <name3> ] += <name6> [ <name5> - <val1> ] [ <name3> ]	<name1> [ <name5> ] [ <name3> ] += <name6> [ <name5> - <val1> ] [ <name3> ]
( ( <val1> の浮動小数点数 ) からなる列の 0 から <name4> 未満までの数列の各要素を <name2> とし、 <name4> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ float ( <val1> ) ] * [ ( <name4> ) for <name2> in range ( <name4> ) ] ]	<name6> = [ [ float ( <val1> ) ] * [ <name4> for <name2> in range ( <name4> ) ] ]
<name2> ( ) . <name6> ( <name4> , <name5> )	<name2> ( ) . <name6> ( <name4> , <name5> )	set ( <name2> ( ) . <name6> ( <name4> , <name5> ) )
<name3> の <name6> 番目の <name4> 番目が <val1> と等しくないとき、	if <name3> [ <name6> ] [ <name4> ] != <val1> :	for <name3> in <name3> [ <name6> ] [ <name4> ] != <val1> :
<name1> の末尾に <name3> の <val2> 番目を追加する	<name1> . append ( <name3> [ <val2> ] )	<name1> . append ( <name3> [ <val2> ] )
<name2> が <name1> の長さから <val6> を引いた値と等しいとき、	if <name2> == len ( <name1> ) - <val6> :	for <name2> == len ( <name1> ) - <val6> :
<name4> の <val2> 乗を出力する	print ( <name4> ** <val2> )	print ( <name4> ** <val2> )
( <val3> 、 <val6> ) からなる列	[ <val3> , <val6> ]	<name2> [ <val3> , <val6> ]
, を間に入れて ( <name6> の <name4> 、 <name6> の <name2> 、 <name6> の <name3> 、 <name6> の <name1> 、 <name6> の <name5> 、 <name6> の <name6> ) の組の各要素を <name5> とし、 <name5> を <name1> として整数の列を連結した文字列を返す	return ',' . join ( [ str ( <name1> = <name5> ) for <name5> in ( <name6> . <name4> , <name6> . <name2> , <name6> . <name3> , <name6> . <name1> , <name6> . <name5> , <name6> . <name6> ) ] )	<name5> [ update . join ( [ str ( <name1> ) for <name5> in ( <name6> [ <name4> , <name6> . <name2> , <name6> . <name3> , <name6> . <name1> , <name6> . <name5> , <name6> . <name6> . <name6> ) ] ) for <name5> in <name6> . <name6> ] ] )
<val3> を <name2> の <name1> 番目の <name1> 番目にする	<name2> [ <name1> ] [ <name1> ] = <val3>	( <name2> [ <name1> ] [ <name1> ] = <val3> )
<val2> を <name5> の先頭の <val3> 番目にする	<name5> [ <val3> ] [ <val3> ] = <val2>	<name4> [ <val3> ] [ <val3> ] = <val2>
<name3> が <val1> と等しいとき、	if ( <name3> == <val1> ) :	if <name3> == <val1> :
<name6> の -1 を取り出した値を <name4> とする	<name4> = <name6> . pop ( - 1 )	<name4> = <name6> . pop ( - 1 )
区切りなしで <val4> 、 <name2> から <val1> を引いた値を出力する	print ( <val4> , <name2> - <val1> , sep = '' )	print ( <val4> , <name2> - <val1> , sep = '' , end = '' )
<name1> に <val3> を加えた値を <name4> とする	<name4> = <name1> + <val3>	<name4> = <name1> + <val3>
<name3> の <name6> 番目に <name1> を加えた値を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name3> [ <name6> ] + <name1>	( <name3> [ <name2> ] = <name3> [ <name6> ] + <name1> )
<name6> <name2> <name1>	<name6> <name2> <name1>	( <name6> <name2> <name1> )
<name5> ( <name3> . <name4> [ <val6> : ] )	<name5> ( <name3> . <name4> [ <val6> : ] )	<name5> ( <name3> . <name4> [ <val6> : ] )
( ( <val2> 、 <name1> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val2> , <name1> ) ]	else = [ ( <val2> , <name1> ) ]
<val4> から <val2> 未満までの数列の各要素を <name6> とし、 <name6> に <name6> に <val4> を加えた値を掛けた値に <name6> に <val5> を加えた値を掛けた値を <val1> で割った商の列を <name3> とする	<name3> = [ <name6> * ( <name6> + <val4> ) * ( <name6> + <val5> ) // <val1> for <name6> in range ( <val4> , <val2> ) ]	<name3> = [ <name6> * ( <name6> + <val4> ) * ( <name6> + <val5> ) // <val1> for <name6> in range ( <val2> ) ]
<name4> の <name3> に <val6> を加えた値番目を <name2> とする	<name2> = <name4> [ <name3> + <val6> ]	<name2> = <name4> [ <name3> + <val6> ]
<name3> の <name5> から <val6> を引いた値番目を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = <name3> [ <name5> - <val6> ]	( <name1> , <name4> = <name3> [ <name5> - <val6> ] )
<name3> に <name2> を加えた値が <val6> と等しいとき、	if <name3> + <name2> == <val6> :	for <name3> + <name2> == <val6> :
<name5> の <name1> の <name6> 番目が <name5> の <name1> の <name3> 番目より小さいとき、 <blk> <name3> と <name6> を入れ替える </blk>	if <name5> . <name1> [ <name6> ] < <name5> . <name1> [ <name3> ] : <blk> <name3> , <name6> = <name6> , <name3> </blk>	\ if <name5> . <name1> [ <name6> ] < <name5> . <name1> [ <name3> ] : <blk> <name3> , <name6> = <name6> , <name3> </blk>
<name6> の長さが <val2> と等しくないとき、	if len ( <name6> ) != <val2> :	raise len ( <name6> ) != <val2> :
<name1> の <name5> 番目の <name3> 番目が ( <val2> 、 <val4> 、 <val6> ) の組に含まれるとき、	if <name1> [ <name5> ] [ <name3> ] in ( <val2> , <val4> , <val6> ) :	for <name1> in ( <name1> [ <name5> ] [ <name3> ] in ( <val2> , <val4> , <val6> ) :
<name1> に <val2> を掛けた値から <name3> に <val5> を加えた値未満までの <name1> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> * <val2> , <name3> + <val5> , <name1> ) :	. for <name4> in range ( <name1> * <val2> , <name3> + <val5> , <name1> ) :
<name5> から <val6> を引いた値を出力する	print ( <name5> - <val6> )	print ( <name5> - <val6> )
<name4> を <name3> と <val6> の論理積との排他的論理和にする	<name4> ^ = ( <name3> & <val6> )	not <name4> ^ = ( <name3> & <val6> )
<name2> 、 <name4> の先頭、 <name4> の <val1> 番目、 <name4> の <val6> 番目の日付を <name3> とする	<name3> = <name2> . date ( <name4> [ 0 ] , <name4> [ <val1> ] , <name4> [ <val6> ] )	<name4> = <name2> . date ( <name4> [ 0 ] , <name4> [ <val1> ] , <name4> [ <val6> ] )
<name4> の <name3> 番目を正規表現 <val5> で分割した文字列リストを <name4> の <name3> 番目にする	<name4> [ <name3> ] = re . split ( <val5> , <name4> [ <name3> ] )	<name4> [ <name3> ] = re . split ( <val5> , <name4> [ <name3> ] )
<name4> ( <name1> , <val6> , <name2> ) を <name3> とする	<name3> = <name4> ( <name1> , <val6> , <name2> )	<name3> = <name4> ( <name1> , <val6> , <name2> )
<name4> の末尾に <name1> の補数を追加する	<name4> . append ( ~ <name1> )	<name5> . append ( ~ <name1> )
<name6> が <name1> の <name5> 番目の <val3> 番目より小さいとき、	if <name6> < <name1> [ <name5> ] [ <val3> ] :	for <name6> < <name1> [ <name5> ] [ <val3> ] :
<name5> 内の <val1> の出現回数を <name6> とする	<name6> = <name5> . count ( <val1> )	<name6> = <name5> . count ( <val1> )
<name6> を <val3> で分割した字句列を <name2> とする	<name2> = <name6> . split ( <val3> )	<name2> = <name6> . split ( <val3> )
<name6> に <name3> を掛けた値から <name4> に <name5> を掛けた値を引いた値を返す	return <name6> * <name3> - <name4> * <name5>	yield <name6> * <name3> - <name4> * <name5>
<val2> を間に入れて <name3> の各要素を <name4> とし、 <name4> の文字列の列を連結した文字列を出力する	print ( <val2> . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )	print ( <val2> . join ( [ str ( <name4> ) for <name4> in <name3> ] ) )
<name1> モジュールを用いる	from <name1> import heappush , heappop , heapify	return from <name1> import combinations
<name2> から <name3> を引いた値に <val4> を加えた値を <val5> で割った商を出力する	print ( ( <name2> - <name3> + <val4> ) // <val5> )	print ( ( <name2> - <name3> + <val4> ) // <val5> )
<name3> 、 <name6> を <name1> 、 <name3> とする	<name1> , <name3> = <name3> , <name6>	<name2> , <name1> , <name3> = <name3> , <name6>
% . 6 f を <name6> ( <name3> , <name4> ( <name3> ) ) で割った余りを出力する	print ( '%.6f' % <name6> ( <name3> , <name4> ( <name3> ) ) )	6 print ( <name6> % ( <name3> , <name4> ( <name3> ) ) )
<name6> 、 <name2> に <val1> を加えた値において正規表現 <name3> が最初にマッチする位置の最小値を <name6> とする	<name6> = min ( <name6> , search ( <name3> , <name2> + <val1> ) )	<name6> = min ( <name6> , search ( <name3> , <name2> + <val1> ) )
<name6> ( <name4> [ <name2> ] , ( <name3> , <name5> , <name1> ) )	<name6> ( <name4> [ <name2> ] , ( <name3> , <name5> , <name1> ) )	set <name6> ( <name4> [ <name2> ] , ( <name3> , <name5> , <name1> ) )
<name1> を <name4> の <name2> 番目だけ増加させる	<name1> += <name4> [ <name2> ]	( <name1> += <name4> [ <name2> ] )
<name2> の <name4> 番目を順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in <name2> [ <name4> ] :	. for <name6> , <name1> in <name2> [ <name4> ] :
<name4> . <name1> ( <name6> . <name3> , <name5> , <name2> ( <name4> , <name6> . <name1> ) ) を <name2> とする	<name2> = <name4> . <name1> ( <name6> . <name3> , <name5> , <name2> ( <name4> , <name6> . <name1> ) )	<name2> = <name4> . <name1> ( <name6> . <name3> , <name5> , <name2> ( <name4> , <name6> . <name1> ) )
<name2> の <name3> 番目を空白で分割した字句列を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = <name2> [ <name3> ] . split ( )	<name6> , <name5> = <name2> [ <name3> ] . split ( )
<name1> の <name2> の <name3> 番目に <val4> を加えた値を <name1> の <name2> の <name5> 番目にする	<name1> . <name2> [ <name5> ] = <name1> . <name2> [ <name3> ] + <val4>	. <name1> [ <name2> . <name5> ] = <name1> . <name2> [ <name3> ] + <val4>
<name5> を <name4> ( <val3> , <val6> ) で割った余りを <name5> とする	<name5> = <name5> % <name4> ( <val3> , <val6> )	<name5> = <name5> % <name4> ( <val3> , <val6> )
<name6> [ <name5> ] の <name4> 番目から <name6> [ <name5> ] の <name1> 番目を引いた値から <name6> の <name3> 番目の <name4> 番目を引いた値に <name6> の <name3> 番目の <name1> 番目を加えた値を出力する	print ( <name6> [ <name5> ] [ <name4> ] - <name6> [ <name5> ] [ <name1> ] - <name6> [ <name3> ] [ <name4> ] + <name6> [ <name3> ] [ <name1> ] )	end = <name6> [ <name5> ] [ <name4> ] - <name6> [ <name5> ] [ <name1> ] - <name6> [ <name3> ] [ <name4> ] + <name6> [ <name3> ] [ <name1> ] )
<name2> の最小値、 <name2> の最大値を <name4> 、 <name6> とする	<name4> , <name6> = min ( <name2> ) , max ( <name2> )	<name2> , <name6> = min ( <name2> ) , max ( <name2> )
0 から <name5> の長さに <val6> を加えた値未満までの数列の各要素を <name3> とし、 0 から <name1> の長さに <val6> を加えた値未満までの数列の各要素を <name4> とし、 <name3> に <name4> を加えた値の列の列を <name2> とする	<name2> = [ [ <name3> + <name4> for <name4> in range ( len ( <name1> ) + <val6> ) ] for <name3> in range ( len ( <name5> ) + <val6> ) ]	<name1> = [ [ <name3> + <name4> for <name4> in range ( len ( <name1> ) + <val6> ) ] for <name3> in range ( len ( <name5> ) + <val6> ) ]
<name2> の <val3> 番目を <name1> とする	<name1> = <name2> [ <val3> ]	\ <name1> = <name2> [ <val3> ]
<name4> の末尾に ( <name6> 、 <name5> 、 <name2> ) の組を追加する	<name4> . append ( ( <name6> , <name5> , <name2> ) )	<name4> . append ( ( <name6> , <name5> , <name2> ) )
入力された文字列に番号付した組の列を順に <name6> 、 <name4> として、繰り返す	for <name6> , <name4> in enumerate ( input ( ) ) :	\ <name6> , <name4> in enumerate ( input ( ) ) :
<val6> を <name5> の <name4> の <val2> 番目にする	<name5> . <name4> [ <val2> ] = <val6>	<name4> . <name4> [ <val2> ] = <val6>
<name2> の <name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列の組を <name6> とする	<name6> = tuple ( map ( int , <name2> . <name5> . readline ( ) . split ( ) ) )	<name6> = tuple ( map ( int , <name2> . <name5> . readline ( ) . split ( ) ) )
<name2> の <name1> の <val5> 番目番目の末尾を出力する	print ( <name2> [ <name1> [ <val5> ] ] [ - <val5> ] )	print ( <name2> [ <name1> [ <val5> ] ] [ - <val5> ] )
<name5> をソートした列を <name5> とする <name1> をソートした列を <name1> とする	<name5> = sorted ( <name5> ) <name1> = sorted ( <name1> )	<name1> = sorted ( <name5> ) <name1> = sorted ( <name1> )
( <name5> 、 <name3> ) の組を <name1> の <name2> にする	<name1> . <name2> = ( <name5> , <name3> )	not <name1> . <name2> = ( <name5> , <name3> )
偽を <name6> の <name5> 番目の <name3> 番目にする	<name6> [ <name5> ] [ <name3> ] = False	( <name6> [ <name5> ] [ <name3> ] = False )
<name5> が <name2> より大きくかつ <name6> が <name5> から <name2> を引いた値より小さいとき、	if <name5> > <name2> and <name6> < <name5> - <name2> :	list ( <name5> > <name2> and <name6> < <name5> - <name2> ) :
<name2> の先頭を出力する	print ( <name2> [ 0 ] )	print ( <name2> [ 0 ] )
( <val4> ) からなる列に <val4> から <name1> から <val2> を引いた値未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列を加えた値に ( <name6> ) からなる列を加えた値を <name3> とする	<name3> = [ <val4> ] + [ int ( input ( ) ) for <name5> in range ( <name1> - <val2> ) ] + [ <name6> ]	<name3> = [ <val4> ] + [ int ( input ( ) ) for <name5> in range ( <name1> - <val2> ) ] + [ <name6> ]
<name3> の <name4> 、 <name5> から <val2> を引いた値の総和に <name5> から <val2> を引いた値を掛けた値に <name3> の <name1> 、 <name5> から <val2> を引いた値の総和を加えた値を <name6> とする	<name6> = <name3> . <name4> . sum ( <name5> - <val2> ) * ( <name5> - <val2> ) + <name3> . <name1> . sum ( <name5> - <val2> )	<name5> = <name3> . <name4> . sum ( <name5> - <val2> ) * ( <name5> - <val2> ) + <name3> . <name1> . sum ( <name5> - <val2> )
( <name4> の <name1> の <name2> ) からなる列の <name3> 回分の列を <name5> の <name6> にする	<name5> . <name6> = [ <name4> . <name1> . <name2> ] * <name3>	<name5> . <name6> = [ <name4> . <name1> . <name2> ] * <name3>
<name4> . <name6> ( <name3> ) を <name3> とする	<name3> = <name4> . <name6> ( <name3> )	<name3> = <name4> . <name6> ( <name3> )
<name5> を <name3> の <name2> にする	<name3> . <name2> = <name5>	( <name3> . <name2> = <name5> )
<name5> の <name6> 番目の <val1> 番目に <val1> を加えた値を <name5> の <name2> 番目の <val1> 番目にする	<name5> [ <name2> ] [ <val1> ] = <name5> [ <name6> ] [ <val1> ] + <val1>	<name5> [ <name2> ] [ <val1> ] = <name5> [ <name6> ] [ <val1> ] + <val1>
<name3> を <name1> に <val6> を加えた値だけ増加させる	<name3> += <name1> + <val6>	<val2> += ( <name1> + <val6> )
<name1> の浮動小数点数を <name5> の <name4> の整数値番目にする	<name5> [ int ( <name4> ) ] = float ( <name1> )	<name1> [ int ( <name4> ) ] = float ( <name1> )
- <name1> が <name5> 以下かつ <name5> が <name1> 以下のとき、 <blk> <val2> を返す </blk>	if - <name1> <= <name5> and <name5> <= <name1> : <blk> return <val2> </blk>	\ if - <name1> <= <name5> and <name5> <= <name1> : <blk> return <val2> </blk>
<name4> の <name4> 座標を <name5> の <name4> 座標にする	<name5> . <name4> = <name4> . <name4>	<name2> . <name4> = <name4> . <name4>
<name1> が <name3> と等しいかどうかが <val2> と等しいとき、	if <name1> == <name3> == <val2> :	: if <name1> == <name3> == <val2> :
<name5> . <name6> ( <name5> . <name3> [ <val4> ] , <name5> . <name3> [ <val1> ] , <name5> . <name3> [ <val2> ] , <name5> . <name3> [ <val5> ] , <name5> . <name3> [ <val6> ] , <name5> . <name3> [ <val3> ] )	<name5> . <name6> ( <name5> . <name3> [ <val4> ] , <name5> . <name3> [ <val1> ] , <name5> . <name3> [ <val2> ] , <name5> . <name3> [ <val5> ] , <name5> . <name3> [ <val6> ] , <name5> . <name3> [ <val3> ] )	<name4> . <name6> ( <name5> . <name3> [ <val4> ] , <name5> . <name3> [ <val1> ] , <name5> . <name3> [ <val2> ] , <name5> . <name3> [ <val5> ] , <name5> . <name3> [ <val6> ] , <name5> . <name3> [ <val3> ] )
<name3> ( <name6> , <name1> , <name2> ) を <name4> とする	<name4> = <name3> ( <name6> , <name1> , <name2> )	<name6> = <name3> ( <name6> , <name1> , <name2> )
<name5> の末尾に <name2> の整数値を追加するを <name6> とする	<name6> = <name5> . append ( int ( <name2> ) )	<name6> = <name5> . append ( int ( <name2> ) )
0 から <name1> 未満までの数列の各要素を <name4> とし、 0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり未定値の列の列を <name2> とする	<name2> = [ [ None for <name6> in range ( <name1> ) ] for <name4> in range ( <name1> ) ]	<name2> = [ [ None for <name6> in range ( <name1> ) ] for <name4> in range ( <name1> ) ]
<name4> を <val5> で割った商を <name3> とする	<name3> = <name4> // <val5>	<name3> = <name4> // <val5>
<name2> * <name6> < <val4> かつ <name3> * <name1> < <val4> と <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) の論理和と <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) の論理和と <name5> ( <name4> , <name3> , <name2> , <name6> , <name2> , <name6> ) の論理和と <name5> ( <name1> , <name5> , <name2> , <name6> , <name2> , <name6> ) の論理和のとき、	if ( <name2> * <name6> < <val4> and <name3> * <name1> < <val4> ) | <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) | <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) | <name5> ( <name4> , <name3> , <name2> , <name6> , <name2> , <name6> ) | <name5> ( <name1> , <name5> , <name2> , <name6> , <name2> , <name6> ) :	for <name2> , <name6> , <name5> , <name2> , <name3> in ( <name2> * <name6> , <val4> and <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) | <name5> ( <name2> , <name6> , <name4> , <name3> , <name1> , <name5> ) | <name5> ( <name4> , <name3> , <name6> , <name2> ) ) | <name5> ( <name1> , <name6> , <name2> , <name5> , <name6> , <name2> , <name6> , <name6> , <name6> , <name2> ) | <name6> )
<val2> を間に入れて <name3> をソートした列を連結した文字列の整数値を <name6> とする	<name6> = int ( <val2> . join ( sorted ( <name3> ) ) )	<name6> = int ( <val2> . join ( sorted ( <name3> ) ) )
0 から <name5> 未満までの数列の各要素を <name4> とし、 <name1> の <name4> 番目を出力するの列を <name2> とする	<name2> = [ print ( <name1> [ <name4> ] ) for <name4> in range ( <name5> ) ]	<name2> = [ print ( <name1> [ <name4> ] ) for <name4> in range ( <name5> ) ]
<name3> の <name5> 番目の <name2> から <val6> を引いた値番目が <name1> と等しくかつ <name4> の <name5> 番目の <name2> から <val6> を引いた値番目が、つまり偽と等しいとき、	if <name3> [ <name5> ] [ <name2> - <val6> ] == <name1> and <name4> [ <name5> ] [ <name2> - <val6> ] == False :	list if <name3> [ <name5> ] [ <name2> - <val6> ] == <name1> and <name4> [ <name5> ] [ <name2> - <val6> ] == False :
<name5> の <name6> の <val4> 番目、 <name5> の <name6> の <val2> 番目、 <name5> の <name6> の <val1> 番目、 <name5> の <name6> の <val3> 番目を <name5> の <name6> の <val2> 番目、 <name5> の <name6> の <val1> 番目、 <name5> の <name6> の <val3> 番目、 <name5> の <name6> の <val4> 番目とする	<name5> . <name6> [ <val2> ] , <name5> . <name6> [ <val1> ] , <name5> . <name6> [ <val3> ] , <name5> . <name6> [ <val4> ] = <name5> . <name6> [ <val4> ] , <name5> . <name6> [ <val2> ] , <name5> . <name6> [ <val1> ] , <name5> . <name6> [ <val3> ]	<name6> [ <val2> ] , <name5> [ <val1> ] , <name5> [ <val3> ] , <name5> . <name6> [ <val3> ] , <name5> . <name6> [ <val4> ] = <name5> . <name6> [ <val4> ] , <name5> . <name6> [ <val2> ] , <name5> . <name6> [ <val1> ] , <name5> . <name6> [ <val3> ]
<name1> の <name5> 番目の <name4> 番目が <name2> より大きいとき、	if <name1> [ <name5> ] [ <name4> ] > <name2> :	continue <name1> [ <name5> ] [ <name4> ] > <name2> :
<name1> の <name6> の <name3> の <name4> 番目が <name3> の <name5> より小さいとき、	if <name1> . <name6> [ <name3> . <name4> ] < <name3> . <name5> :	for <name1> . <name6> [ <name3> . <name4> ] < <name3> . <name5> :
pre - meiji を <name4> とする	<name4> = 'pre-meiji'	<name4> = array ( True , - 1 )
<name4> に <val3> を加えた値が <name2> と等しいとき、	if <name4> + <val3> == <name2> :	continue + <val3> == <name2> :
<val5> * <name3> に <name2> を掛けた値に <name6> を掛けた値から <name3> ** <val5> から <name2> ** <val5> を引いた値に <name4> を掛けた値を引いた値から <val5> に <name3> を掛けた値に <name1> に <name5> を掛けた値から <name3> に <name2> を掛けた値を引いた値を掛けた値を引いた値を <name3> の <val5> 乗に <name2> の <val5> 乗を加えた値で割った値を <name1> とする	<name1> = ( <val5> * <name3> * <name2> * <name6> - ( <name3> ** <val5> - <name2> ** <val5> ) * <name4> - <val5> * <name3> * ( <name1> * <name5> - <name3> * <name2> ) ) / ( <name3> ** <val5> + <name2> ** <val5> )	<name6> = ( <val5> * <name3> * <name2> * <name6> - ( <name3> ** <val5> - <name2> ** <val5> ) * <name4> - ( <val5> * <name3> ) * ( <name1> * <name5> - <name3> * <name2> ) / ( <val5> ) )
<name5> の末尾に <name6> の先頭を取り出した値を追加する	<name5> . append ( <name6> . pop ( ) )	<name3> . append ( <name6> . pop ( ) )
<name6> ( <name5> , <name4> , <name3> , <name1> , <name2> ) を <name2> とする	<name2> = <name6> ( <name5> , <name4> , <name3> , <name1> , <name2> )	<name2> = <name6> ( <name5> , <name4> , <name3> , <name1> , <name2> )
入力された文字列を <val6> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( float , input ( ) . split ( <val6> ) )	<name5> , <name1> = map ( float , input ( ) . split ( <val6> ) )
<name4> . <name5> ( <name4> . <name3> [ <name1> | ( <name1> + <val6> ) ] , <name4> . <name3> [ <name1> ] ) を <name4> の <name3> の <name1> と <name1> に <val6> を加えた値の論理和番目にする	<name4> . <name3> [ <name1> | ( <name1> + <val6> ) ] = <name4> . <name5> ( <name4> . <name3> [ <name1> | ( <name1> + <val6> ) ] , <name4> . <name3> [ <name1> ] )	<name4> . <name3> [ <name1> | ( <name1> + <val6> ) ] = <name4> . <name5> ( <name4> . <name3> [ <name1> | ( <name1> + <val6> ) ] , <name4> . <name3> [ <name1> ] )
<name2> の <name1> の整数値番目の末尾を出力する	print ( <name2> [ int ( <name1> ) ] [ - 1 ] )	[ int ( <name2> [ int ( <name1> ) ] ) - 1 ] )
#に <name5> を掛けた値を <name2> とする	<name2> = '#' * <name5>	( <name2> = '#' * <name5> )
<val3> の <name5> 番目から、つまり末尾までの <val1> 間隔による部分列を出力する	print ( <val3> [ <name5> : : <val1> ] )	<val3> [ <name5> : : <val1> ] = <val3> [ <name5> : : <val1> ] )
<name1> の長さが <val4> 以上のとき、	if len ( <name1> ) >= <val4> :	for <name1> in len ( <name1> ) >= <val4> :
<name4> が ( ( <val3> 、 <val3> ) の組、 ( <val1> 、 -1 ) の組、 ( <val1> 、 <val3> ) の組、 ( <val6> 、 -1 ) の組 ) からなる列と等しいとき、 <blk> <val2> を出力する </blk>	if <name4> == [ ( <val3> , <val3> ) , ( <val1> , - <val1> ) , ( <val1> , <val3> ) , ( <val6> , - <val1> ) ] : <blk> print ( <val2> ) </blk>	while <name4> == [ ( <val3> , <val3> ) , ( <val1> , - <val1> ) , ( <val1> , <val3> ) , ( <val6> , - <val6> ) ] : <blk> print ( <val2> ) </blk>
<name3> の <name2> 番目から <name6> を引いた値を <name5> とする	<name5> = <name3> [ <name2> ] - <name6>	( <name5> = <name3> [ <name2> ] - <name6> )
<name5> の各要素を <name4> とし、 <name4> の文字列の列を <name3> とする	<name3> = [ str ( <name4> ) for <name4> in <name5> ]	<name6> = [ str ( <name4> ) for <name4> in <name5> ]
<name2> の末尾に ( <name5> 、 <name1> ) からなる列を追加する	<name2> . append ( [ <name5> , <name1> ] )	<name1> . append ( [ <name5> , <name1> ] )
<name2> を <name3> の <name1> 番目の <name4> 番目とするを <name3> の <name4> 番目の <name1> 番目にする	<name3> [ <name4> ] [ <name1> ] = <name3> [ <name1> ] [ <name4> ] = <name2>	else [ <name4> ] [ <name1> ] = <name3> [ <name1> ] [ <name4> ] = <name2>
入力された文字列を空白で分割した字句列の各要素に <name5> をパラメータとして <name5> の整数値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = map ( lambda <name5> : int ( <name5> ) , input ( ) . split ( ) )	<name6> , <name1> = map ( lambda <name5> : int ( <name5> ) , input ( ) . split ( ) )
<name3> をパラメータとして ( - <name3> の <val4> 番目、 <name3> の <val5> 番目、 <name3> の先頭 ) の組を返す関数を <name2> として <name6> をソートする	<name6> . sort ( <name2> = lambda <name3> : ( - <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ 0 ] ) )	<name6> . sort ( <name2> = lambda <name3> : ( - <name3> [ <val4> ] , <name3> [ <val5> ] , <name3> [ 0 ] ) )
<name6> の <name2> 番目の <name1> 番目を <val3> だけ増加させる	<name6> [ <name2> ] [ <name1> ] += <val3>	<name1> [ <name2> ] [ <name1> ] += <val3>
<val4> 、 <name5> から <name2> を引いた値の最大値を <name6> で割った商を <name1> とする	<name1> = max ( <val4> , ( <name5> - <name2> ) ) // <name6>	<name1> = max ( <val4> , <name5> - <name2> ) // <name6>
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name6> とする	<name5> , <name4> , <name6> = map ( int , <name3> . readline ( ) . split ( ) )	<name3> , <name4> , <name6> = map ( int , <name3> . readline ( ) . split ( ) )
<val1> <name2> <val5> を <name3> とする	<name3> = <val1> <name2> <val5>	<name3> = <val1> <name2> <val5>
0 から <name2> 未満までの数列の各要素を <name3> とし、 <val1> の列を <name4> とする	<name4> = [ <val1> for <name3> in range ( <name2> ) ]	<name4> = [ <val1> for <name3> in range ( <name2> ) ]
<name3> の値の集まりの辞書カウンタを <name6> とする	<name6> = Counter ( <name3> . values ( ) )	dict = Counter ( <name3> . values ( ) )
( <name2> の <name3> 番目、 <name2> の <name3> から <val1> を引いた値番目 ) の組が ( <val6> 、 <val6> ) の組と等しいとき、	if ( <name2> [ <name3> ] , <name2> [ <name3> - <val1> ] ) == ( <val6> , <val6> ) :	for <name2> in ( <name2> [ <name3> ] , <name2> [ <name3> - <val1> ] ) == ( <val6> , <val6> ) :
<name4> の、つまり先頭から <name6> に <val2> を加えた値までの部分列の辞書カウンタの出現頻度順の列に ( ( <val1> 、 <val5> ) の組 ) からなる列を加えた値を <name3> とする	<name3> = Counter ( <name4> [ : <name6> + <val2> ] ) . most_common ( ) + [ ( <val1> , <val5> ) ]	<name3> = Counter ( <name4> [ : <name6> + <val2> ] ) + [ ( <val1> , <val5> ) ]
( ( -1 ) からなる列の 0 から <name3> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <name5> に <val6> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ - 1 ] * [ ( <name5> + <val6> ) for <name2> in range ( <name3> + <val6> ) ] ]	<name1> = [ [ - <val6> ] * [ ( <name5> + <val6> ) for <name2> in range ( <name3> + <val6> ) ] ]
<name2> ( <name5> . <name6> ) を <name4> の <name3> にする	<name4> . <name3> = <name2> ( <name5> . <name6> )	<name2> . <name4> . <name3> = <name2> ( <name5> . <name6> )
<name2> をパラメータとして <name2> の <name6> を返す関数を <name1> として <name3> をソートする	<name3> . sort ( <name1> = lambda <name2> : <name2> . <name6> )	<name3> . sort ( <name1> = lambda <name2> : <name2> . <name6> )
<name1> の末尾に <name4> の <val6> 番目を追加する	<name1> . append ( <name4> [ <val6> ] )	<name3> . append ( <name4> [ <val6> ] )
<name3> と <name2> の最大公約数を <name4> とする	<name4> = gcd ( <name3> , <name2> )	<name4> = gcd ( <name3> , <name2> )
<name2> の <val6> 番目から <name5> を引いた値の <val4> 乗が <name3> 以上のとき、	if ( <name2> [ <val6> ] - <name5> ) ** <val4> >= <name3> :	>= ( <name2> [ <val6> ] - <name5> ) ** <val4> >= <name3> :
<name2> の長さ、 <name3> の長さの最小値を <name1> とする	<name1> = min ( len ( <name2> ) , len ( <name3> ) )	<name1> = min ( len ( <name2> ) , len ( <name3> ) )
<name2> の絶対値と <name4> の絶対値の最大公約数を <name3> とする	<name3> = gcd ( abs ( <name2> ) , abs ( <name4> ) )	<name3> = gcd ( abs ( <name2> ) , abs ( <name4> ) )
<name4> ( <name3> -1 , <name2> , <name5> ) または <name4> ( <name3> -1 , <name2> , <name5> + <name6> [ <name3> -1 ] ) を返す	return <name4> ( <name3> - 1 , <name2> , <name5> ) or <name4> ( <name3> - 1 , <name2> , <name5> + <name6> [ <name3> - 1 ] )	x return <name4> ( <name3> - 1 , <name2> , <name5> ) or <name4> ( <name3> - 1 , <name2> , <name5> + <name6> [ <name3> - 1 ] )
未定値を <name2> を <name6> とするとするを <name4> とする	<name4> = <name6> = <name2> = None	<name3> = <name6> = <name2> = None
( <val5> ) からなる列の <name6> に <val3> を加えた値回分の列を <name2> とする	<name2> = [ <val5> ] * ( <name6> + <val3> )	<name2> = [ <val5> ] * ( <name6> + <val3> )
<name4> が <name1> と等しいかどうかが <val2> と等しいとき、	if <name4> == <name1> == <val2> :	: if <name4> == <name1> == <val2> :
<name6> のとき <name6> の整数値、そうでなければ <val5> を <name4> の - <name2> の両端から <val3> を取り除いた文字列の整数値から <val5> を引いた値番目にする	<name4> [ - int ( <name2> . strip ( <val3> ) ) - <val5> ] = int ( <name6> ) if <name6> else <val5>	[ int ( <name4> - <name2> . strip ( <val3> ) ) - <val5> ] = int ( <name6> ) if <name6> else <val5>
<name2> の <name6> 番目を順に <name4> として、繰り返す	for <name4> in <name2> [ <name6> ] :	in <name2> [ <name6> ] :
<name6> の先頭を <name2> とする <name2> の長さを <name4> とする	<name2> = <name6> [ 0 ] <name4> = len ( <name2> )	<name2> = <name6> [ 0 ] <name4> = len ( <name2> )
<name2> ( <name4> , <name3> -1 , <name6> [ ( <name1> , <name5> ) ] ) を <name5> とする	<name5> = <name2> ( <name4> , <name3> - 1 , <name6> [ ( <name1> , <name5> ) ] )	<name6> = <name2> ( <name4> , <name3> - 1 , <name6> [ ( <name1> , <name5> ) ] )
( <name3> 、 <val4> 、未定値 ) からなる列を <name2> とする	<name2> = [ <name3> , <val4> , None ]	<name6> = [ <name3> , <val4> , None ]
<name1> の <name3> 番目の <name6> 番目が <val4> と等しいとき、	if <name1> [ <name3> ] [ <name6> ] == <val4> :	: if <name1> [ <name3> ] [ <name6> ] == <val4> :
<name4> . <name1> ( ( <name5> - <name6> [ <val3> ] [ <val3> ] ) , <val2> ) に <name4> . <name1> ( ( <name4> - <name6> [ <val3> ] [ <val1> ] ) , <val2> ) を加えた値の平方根を <name2> とする	<name2> = <name4> . sqrt ( <name4> . <name1> ( ( <name5> - <name6> [ <val3> ] [ <val3> ] ) , <val2> ) + <name4> . <name1> ( ( <name4> - <name6> [ <val3> ] [ <val1> ] ) , <val2> ) )	<name2> = sqrt ( <name4> . <name1> ( ( <name5> - <name6> [ <val3> ] [ <val3> ] ) , <val2> ) + <name4> . <name1> ( ( <name4> - <name6> [ <val3> ] [ <val1> ] ) , <val2> )
<val3> に <name4> から <name6> を引いた値を掛けた値を <name2> とする	<name2> = <val3> * ( <name4> - <name6> )	<name2> = <val3> * ( <name4> - <name6> )
<name1> の、つまり先頭から、つまり末尾までの部分列を <name5> とする	<name5> = <name1> [ : ]	<name5> = <name1> [ : ]
<val1> から <val3> 未満までの <val2> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> , <val3> , <val2> ) :	continue for <name6> in range ( <val1> , <val3> , <val2> ) :
<name4> でないとき、 <blk> ( <name4> 、 <val1> ) からなる列を返す </blk>	if not <name4> : <blk> return [ <name4> , <val1> ] </blk>	while not <name4> : <blk> return [ <name4> , <val1> ] </blk>
<name1> が <name6> の長さより小さい間、次を繰り返す	while <name1> < len ( <name6> ) :	global <name1> < len ( <name6> ) :
<name2> が <name1> の長さより小さくかつ <name5> が <name4> の長さより小さい間、次を繰り返す	while <name2> < len ( <name1> ) and <name5> < len ( <name4> ) :	map ( <name2> < len ( <name1> ) and <name5> < len ( <name4> ) ) :
( ( <val4> ) からなる列の <val4> から <val6> 未満までの数列の各要素を <name5> とし、 <val6> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val4> ] * [ <val6> for <name5> in range ( <val6> ) ] ]	<name2> = [ [ <val4> ] * [ <val6> for <name5> in range ( <val6> ) ] ]
<name2> から <val6> を引いた値を <name1> の <name3> 番目にする <val6> を <name5> の <name3> 番目にする	<name1> [ <name3> ] = <name2> - <val6> <name5> [ <name3> ] = <val6>	( <name1> [ <name3> ] = <name2> - <val6> ) <name5> [ <name3> ] = <val6>
<name5> が <name1> の <name2> 番目に含まれるとき、	if <name5> in <name1> [ <name2> ] :	for <name5> in <name1> [ <name2> ] :
<name1> ( ) から <name3> を引いた値を <name5> とする	<name5> = <name1> ( ) - <name3>	<name2> <name5> = <name1> ( ) - <name3>
<val4> を <name6> 内の [ MASK ] の出現回数にする	<name6> . count = <val4>	( <name6> . count = <val4> )
<name1> に <name2> の <name6> 番目の <name3> 番目に <name5> の <name3> 番目を掛けた値を加えた値を <name1> とする	<name1> = <name1> + <name2> [ <name6> ] [ <name3> ] * <name5> [ <name3> ]	<name1> = <name1> + <name2> [ <name6> ] [ <name3> ] * <name5> [ <name3> ]
( 、つまり未定値 ) からなる列の <val2> に <name1> を掛けた値回分の列を <name4> とする	<name4> = [ None ] * ( <val2> * <name1> )	<name4> = [ None ] * ( <val2> * <name1> )
<name6> の <name1> 番目を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name6> [ <name1> ] :	. for <name2> , <name4> in <name6> [ <name1> ] :
0 から <name4> を <val5> で割った商に <val6> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> // <val5> + <val6> ) :	for <name3> in range ( <name4> // <val5> + <val6> ) :
入力された文字列の各要素を <name6> とし、 <name6> の順序数の列を <name2> とする	<name2> = [ ord ( <name6> ) for <name6> in input ( ) ]	<name2> = [ ord ( <name6> ) for <name6> in input ( ) ]
<name1> ( <name3> , <name6> , <name5> ) のとき、	if <name1> ( <name3> , <name6> , <name5> ) :	isinstance ( <name1> ( <name3> , <name6> , <name5> ) ) :
( <name6> ) からなる列の <name3> の <name4> 回分の列を <name5> とする	<name5> = [ <name6> ] * <name3> . <name4>	<name5> = [ <name6> ] * <name3> . <name4>
( <name4> 、 <name5> 、 <name1> 、 <name6> 、 <name2> 、 <name3> ) からなる列を返す	return [ <name4> , <name5> , <name1> , <name6> , <name2> , <name3> ]	return [ <name4> , <name5> , <name1> , <name6> , <name2> , <name3> ]
<name5> ( <name3> [ <name4> + <val6> ] , <name3> [ <name4> ] ) を <name3> の <name4> に <val6> を加えた値番目にする	<name3> [ <name4> + <val6> ] = <name5> ( <name3> [ <name4> + <val6> ] , <name3> [ <name4> ] )	<name4> [ <name4> + <val6> ] = <name5> ( <name3> [ <name4> + <val6> ] , <name3> [ <name4> ] )
<name2> を <name1> の <name3> 番目の <val4> 番目にする	<name1> [ <name3> ] [ <val4> ] = <name2>	( <name1> [ <name3> ] [ <val4> ] = <name2> )
<name1> の <name2> から <val4> を引いた値番目の <name6> 番目が <name5> と等しくないとき、	if <name1> [ <name2> - <val4> ] [ <name6> ] != <name5> :	!= <name1> [ <name2> - <val4> ] [ <name6> ] != <name5> :
<name1> ( <name2> [ <name3> ] ) を <name4> とする	<name4> = <name1> ( <name2> [ <name3> ] )	<name4> = <name1> ( <name2> [ <name3> ] )
<name1> . <name2> ( <name5> ( <name1> . <name4> , <name6> ) ) を <name1> . <name3> ( ) の <val1> 乗で割った値を <name3> とする	<name3> = <name1> . <name2> ( <name5> ( <name1> . <name4> , <name6> ) ) / pow ( <name1> . <name3> ( ) , <val1> )	<name4> = <name1> . <name2> ( <name5> ( <name1> . <name4> , <name6> ) ) / pow ( <name1> . <name3> ( ) , <val1> )
- <name1> に <name5> の平方根を加えた値を <name3> で割った値を <name6> とする	<name6> = ( - <name1> + sqrt ( <name5> ) ) / <name3>	<name6> = ( - <name1> + math . sqrt ( <name5> ) ) / <name3>
<name4> の <name2> 番目が <name5> と等しいとき、	if <name4> [ <name2> ] == <name5> :	while <name4> [ <name2> ] == <name5> :
<name4> の末尾に <name3> ( * <name5> ( <name2> , <name1> ( ) . <name6> ( ) ) ) を追加する	<name4> . append ( <name3> ( * <name5> ( <name2> , <name1> ( ) . <name6> ( ) ) ) )	<name5> . append ( <name3> ( * <name3> ( <name5> ( <name2> , <name1> ( ) . <name6> ( ) ) ) ) )
<val6> を書式として <name2> の <name3> で整形した文字列を <name3> とする	<name3> = <val6> . format ( <name2> . <name3> )	<name3> = <val6> . format ( <name2> . <name3> )
<name1> から <name5> を引いた値を <name6> とする <name4> から <name3> を引いた値を <name2> とする	<name6> = <name1> - <name5> <name2> = <name4> - <name3>	<name2> = <name1> - <name5> <name2> = <name4> - <name3>
<name5> に <name6> を加えた値が <name2> より大きいとき、	if ( <name5> + <name6> > <name2> ) :	isinstance ( <name5> + <name6> > <name2> ) :
<name2> の <name3> 番目に <name2> の <name6> 番目を加えた値を <name5> とする	<name5> = <name2> [ <name3> ] + <name2> [ <name6> ]	<name5> = <name2> [ <name3> ] + <name2> [ <name6> ]
<name1> から <val6> を引いた値を <name5> で割った余りを <name3> とする	<name3> = ( <name1> - <val6> ) % <name5>	<name3> = ( <name1> - <val6> ) % <name5>
<val4> を <name3> の <name5> の先頭から <val4> を引いた値番目の <name5> の <name1> 番目から <val4> を引いた値番目にする	<name3> [ <name5> [ 0 ] - <val4> ] [ <name5> [ <name1> ] - <val4> ] = <val4>	<name4> [ <name5> [ 0 ] - <val4> ] [ <name5> [ <name1> ] - <val4> ] = <val4>
<name3> に <name5> から <name1> を引いた値を掛けた値を <name4> とする	<name4> = <name3> * ( <name5> - <name1> )	<name4> = <name3> * ( <name5> - <name1> )
( <val3> ) からなる列の <name1> に <val5> を加えた値回分の列を <name2> とする	<name2> = [ <val3> ] * ( <name1> + <val5> )	<name2> = [ <val3> ] * ( <name1> + <val5> )
<name4> . <name2> ( <name4> . <name6> [ <name3> | ( <name3> + <val1> ) ] , <name4> . <name6> [ <name3> ] ) を <name4> の <name6> の <name3> と <name3> に <val1> を加えた値の論理和番目にする	<name4> . <name6> [ <name3> | ( <name3> + <val1> ) ] = <name4> . <name2> ( <name4> . <name6> [ <name3> | ( <name3> + <val1> ) ] , <name4> . <name6> [ <name3> ] )	<name4> . <name6> [ <name3> | ( <name3> + <val1> ) ] = <name4> . <name2> ( <name4> . <name6> [ <name3> | ( <name3> + <val1> ) ] , <name4> . <name6> [ <name3> ] )
<name3> の <val4> 番目が <name6> より大きいとき、	if <name3> [ <val4> ] > <name6> :	continue [ <val4> ] > <name6> :
<name5> を <name2> を <val6> で割った値だけ増加させる	<name5> += <name2> / <val6>	<name2> += <name2> / <val6>
-1 が <name6> と等しいとき、	if - 1 == <name6> :	if - 1 == <name6> :
<name2> のとき <val3> を <name2> から <val3> を引いた値だけ左シフトした値、そうでなければ <val6> を <name4> とする	<name4> = ( <val3> << ( <name2> - <val3> ) ) if <name2> else <val6>	<name4> = <val3> << ( <name2> - <val3> ) if <name2> else <val6>
<name6> モジュールを用いる	from <name6> import isinf	sqrt ( <name6> ) import sqrt
0 から <name4> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name2> の <name5> にする	<name2> . <name5> = [ [ ] for <name1> in range ( <name4> ) ]	<name6> . <name5> = [ [ ] for <name1> in range ( <name4> ) ]
<name6> の <val1> 番目、 <name6> の <val4> 番目を <name2> の <val4> 番目、 <name2> の <val1> 番目とする	<name2> [ <val4> ] , <name2> [ <val1> ] = <name6> [ <val1> ] , <name6> [ <val4> ]	<name6> [ <val4> ] , <name2> [ <val1> ] = <name6> [ <val1> ] , <name6> [ <val4> ]
<name6> の末尾に ( -1 ) からなる列の <name5> に <val4> を加えた値回分の列を追加する	<name6> . append ( [ - 1 ] * ( <name5> + <val4> ) )	<name4> . append ( [ - <val4> ] * ( <name5> + <val4> ) )
<name1> を <name6> の <name1> 番目にする	<name6> [ <name1> ] = <name1>	( <name6> [ <name1> ] = <name1> )
<name4> ( <name5> -1 , <name1> )	<name4> ( <name5> - 1 , <name1> )	<name4> ( <name5> - 1 , <name1> )
<name6> の <name4> を <name3> の、つまり先頭から、つまり末尾までの部分列にする	<name3> [ : ] = <name6> . <name4>	<name1> [ : ] = <name6> . <name4>
<name2> + <name4> * <val5> + <name6> * <val1> + <name3> * <val2> に <name4> * <val5> を加えた値に <name6> に <val1> を掛けた値を加えた値が <val3> 以上かどうかの整数値を出力する	print ( int ( <name2> + <name4> * <val5> + <name6> * <val1> + <name3> * <val2> + <name4> * <val5> + <name6> * <val1> >= <val3> ) )	<name2> print ( int ( int ( <name2> + <name4> * <val5> + <name6> * <val1> + <name3> * <val2> + <name4> * <val5> + <name6> * <val1> >= <val3> ) ) )
<name4> の <name2> と等しい要素の最初の位置	<name4> . index ( <name2> )	( <name4> . index ( <name2> ) )
<name2> . <name4> ( <name6> , -1 ) を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name2> . <name4> ( <name6> , - 1 )	<name1> , <name5> = <name2> . <name4> ( <name6> , - 1 )
<name2> の逆順を <name5> とする	<name5> = <name2> [ : : - 1 ]	<name5> = <name2> [ : : - 1 ]
<val2> を <name3> とするを <name1> とする	<name1> = <name3> = <val2>	<name1> = <name3> = <val2>
<name1> と <name3> の最小公倍数を <name4> とする	<name4> = lcm ( <name1> , <name3> )	<name4> = lcm ( <name1> , <name3> )
- <name4> . <name5> ( <val1> , <name3> -1 , <val6> , <val2> ** <val4> ) を出力する	print ( - <name4> . <name5> ( <val1> , <name3> - 1 , <val6> , <val2> ** <val4> ) )	print ( - <name4> . <name5> ( <val1> , <name3> - <val6> , <val6> , <val2> ** <val4> ) )
<name6> の <name3> に <val5> を掛けた値に <name4> を加えた値番目が <val1> と等しいとき、	if <name6> [ <name3> * <val5> + <name4> ] == <val1> :	list ( <name6> [ <name3> * <val5> + <name4> ] == <val1> :
( <val2> ) からなる列の <val1> に <name5> を掛けた値に <val1> を加えた値回分の列を <name4> とする	<name4> = [ <val2> ] * ( <val1> * <name5> + <val1> )	<name4> = [ <val2> ] * ( <val1> * <name5> + <val1> )
<name4> から <val3> を引いた値を <name1> とする	<name1> = <name4> - <val3>	<name1> = <name4> - <val3>
<name6> から <name6> に <name2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> , <name6> + <name2> ) :	continue for <name3> in range ( <name6> , <name6> + <name2> ) :
<val3> <name5> <val6> を <name2> とする	<name2> = <val3> <name5> <val6>	<name6> <name2> = <val3> <name5> <val6>
<name5> の <name4> 番目を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name5> [ <name4> ]	<name3> [ <name4> ] = <name5> [ <name4> ]
空列を <name1> の <name3> 番目にする	<name1> [ <name3> ] = [ ]	not <name1> [ <name3> ] = [ ]
<name5> の <name4> の <name2> 番目と等しい要素の最初の位置を <name1> とする	<name1> = <name5> . index ( <name4> [ <name2> ] )	<name4> = <name5> . index ( <name4> [ <name2> ] )
( <name1> 、 <name6> 、 <name2> 、無限の整数列 ) の組を返す	return ( <name1> , <name6> , <name2> , count )	yield ( <name1> , <name6> , <name2> , count )
<name3> の順列の集合を順に <name2> として、繰り返す	for <name2> in set ( permutations ( <name3> ) ) :	( <name2> in set ( <name3> ) :
( <name5> に <name6> に <name2> を掛けた値から <name4> に <name1> を掛けた値を引いた値を <name3> で割った値を加えた値、 <name5> に <name4> に <name2> を掛けた値に <name6> に <name1> を掛けた値を加えた値を <name3> で割った値を加えた値 ) の組を返す	return ( <name5> + ( <name6> * <name2> - <name4> * <name1> ) / <name3> , <name5> + ( <name4> * <name2> + <name6> * <name1> ) / <name3> )	return ( <name5> + ( <name6> * <name2> - <name4> * <name1> ) / <name3> , <name5> + ( <name4> * <name2> + <name6> * <name1> ) / <name3> )
<name4> を <name5> ( <name2> , <name1> [ <name3> ] , <name6> ) だけ増加させる	<name4> += <name5> ( <name2> , <name1> [ <name3> ] , <name6> )	<name6> += <name5> ( <name2> , <name1> [ <name3> ] , <name6> )
<name4> . <name5> ( <name2> , <name6> ) を <name4> の <name1> にする	<name4> . <name1> = <name4> . <name5> ( <name2> , <name6> )	) . <name1> = <name4> . <name5> ( <name2> , <name6> )
<name4> に <val5> を加えた値が <name2> より小さいとき、	if <name4> + <val5> < <name2> :	list if <name4> + <val5> < <name2> :
<name6> の先頭を <name4> の先頭で割った余りが <val1> と等しくない間、次を繰り返す	while <name6> [ <val1> ] % <name4> [ <val1> ] != <val1> :	del ( <name6> [ 0 ] % <name4> [ <val1> ] ) != <val1> :
<name1> の <name5> の <name6> 番目の <name6> 番目番目を <name4> とする	<name4> = <name1> [ <name5> [ <name6> ] [ <name6> ] ]	<name4> = <name1> [ <name5> [ <name6> ] [ <name6> ] ]
<name5> ( <name1> , <name2> , <name4> ) を <name3> とする	<name3> = <name5> ( <name1> , <name2> , <name4> )	else = <name5> ( <name1> , <name2> , <name4> )
<name4> の最大値から <val6> を引いた値を <name2> とする <name4> の総和を <name5> とする	<name2> = max ( <name4> ) - <val6> <name5> = sum ( <name4> )	<name2> = max ( <name4> ) - <val6> <name5> = sum ( <name4> )
<name6> を <name4> で割った余りを返す	return <name6> % <name4>	self return <name6> % <name4>
<name3> が <name4> より小さくまたは <name6> が <name1> より小さくかつ <name3> が <val2> に <name4> を掛けた値より小さくかつ <name6> が <val2> に <name1> を掛けた値より小さい間、次を繰り返す	while ( <name3> < <name4> or <name6> < <name1> ) and ( <name3> < <val2> * <name4> ) and ( <name6> < <val2> * <name1> ) :	del ( <name3> < <name4> or <name6> < <name1> and <name3> < <val2> * <name4> ) and ( <name6> < <val2> * <name1> ) :
<name5> の <name1> から読み込んだ一行を入力された文字列とする	input = <name5> . <name1> . readline	now = <name5> . <name1> . readline ( )
<name1> モジュールを用いる	from <name1> import pi	return from <name1> import combinations
<name6> ( <name2> ) を <name4> の <name2> 座標にする	<name4> . <name2> = <name6> ( <name2> )	<name4> . <name2> = <name6> ( <name2> )
<name1> * <name5> < <val4> かつ <name2> * <name6> < <val4> と <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) の論理和と <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) の論理和と <name3> ( <name4> , <name2> , <name1> , <name5> , <name1> , <name5> ) の論理和と <name3> ( <name6> , <name3> , <name1> , <name5> , <name1> , <name5> ) の論理和のとき、	if ( <name1> * <name5> < <val4> and <name2> * <name6> < <val4> ) | <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) | <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) | <name3> ( <name4> , <name2> , <name1> , <name5> , <name1> , <name5> ) | <name3> ( <name6> , <name3> , <name1> , <name5> , <name1> , <name5> ) :	return ( <name1> * <name5> <= <val4> and <name2> * <name6> < <val4> ) | <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) | <name3> ( <name1> , <name5> , <name4> , <name2> , <name6> , <name3> ) | <name3> ( <name4> , <name2> , <name1> , <name5> , <name1> , <name5> , <name1> , <name5> , <name3> ) | <name3> ( <name6> , <name1> , <name5> , <name3> , <name1> , <name5> )
<name1> に <name5> を加えた値の絶対値が <name6> に <name1> の絶対値に <name5> の絶対値を加えた値を掛けた値より小さいとき <val2> 、そうでなければ <name1> に <name5> を加えた値を返す	return <val2> if abs ( <name1> + <name5> ) < <name6> * ( abs ( <name1> ) + abs ( <name5> ) ) else <name1> + <name5>	return <val2> if abs ( <name1> + <name5> ) < <name6> * ( <name1> ) + abs ( <name5> ) ) else <name1> + <name5>
( <val2> に <name4> を加えた値、 <val5> 、未定値 ) からなる列を <name6> とする	<name6> = [ <val2> + <name4> , <val5> , None ]	<name6> = [ <val2> + <name4> , <val5> , None ]
<name1> の <val5> を <name3> から <val5> を引いた値だけ左シフトした値から <val5> を引いた値番目を <name6> とする	<name6> = <name1> [ ( <val5> << ( <name3> - <val5> ) ) - <val5> ]	count = <name1> [ ( <val5> << ( <name3> - <val5> ) ) - <val5> ]
<name2> の <name6> を <name6> とする <name2> の <name1> を <name1> とする	<name6> = <name2> . <name6> <name1> = <name2> . <name1>	<name1> = <name2> . <name6> <name1> = <name2> . <name1>
<name4> の絶対値が <val3> <name2> <val6> より小さいとき <val1> 、そうでなければ <val5> を出力する	print ( <val1> if abs ( <name4> ) < <val3> <name2> <val6> else <val5> )	print ( <val1> if abs ( <name4> ) < <val3> <name2> <val6> else <val5> )
( ( <val3> , <val2> ) ) からなる辞書を返す	return { <val3> : <val2> }	{ <val3> : <val2> }
<name5> の <name2> に <val4> の <name6> から <val1> を引いた値乗を掛けた値を <name3> とする	<name3> = <name5> . <name2> * <val4> ** ( <name6> - <val1> )	<name4> = <name5> . <name2> * ( <val4> ** ( <name6> - <val1> ) )
<name6> の <name1> に <val3> を加えた値番目の <name4> 番目を <val2> だけ増加させる	<name6> [ <name1> + <val3> ] [ <name4> ] += <val2>	<name4> [ <name1> + <val3> ] [ <name4> ] += <val2>
<name3> の <name1> 番目が <name3> の <name6> 番目より小さいとき、	if <name3> [ <name1> ] < <name3> [ <name6> ] :	continue [ <name1> ] < <name3> [ <name6> ] :
<name5> を <name2> から読み込んだ一行の <val1> 番目から <name3> に <val1> を加えた値までの部分列だけ増加させる	<name5> += <name2> . readline ( ) [ <val1> : <name3> + <val1> ]	<name2> += <name2> . readline ( ) [ <val1> : <name3> + <val1> ]
<name6> を <name3> で割った値を <name2> とする	<name2> = <name6> / <name3>	( <name2> = <name6> / <name3> )
<name3> の <name2> の <name4> 番目を <name1> の <name3> の <name2> の <name6> 番目番目の <name2> の <name5> 番目にする	<name1> [ <name3> [ <name2> . <name6> ] ] [ <name2> . <name5> ] = <name3> [ <name2> . <name4> ]	<name1> . <name3> [ <name2> . <name6> ] [ <name2> . <name5> ] = <name3> . <name2> [ <name4> ]
<name6> の <name5> 番目が <name2> の <name5> 番目より大きいとき、	if <name6> [ <name5> ] > <name2> [ <name5> ] :	> <name6> [ <name5> ] > <name2> [ <name5> ] :
<name1> の <name3> 番目を順に <name4> 、 <name5> 、 <name6> として、繰り返す	for <name4> , <name5> , <name6> in <name1> [ <name3> ] :	. for <name4> , <name5> , <name6> in <name1> [ <name3> ] :
<name6> の <name2> の <name1> 番目の <name3> 番目に <name3> に <val5> を加えた値に <name6> の <name2> の <name1> 番目の <name3> に <val5> を加えた値番目を掛けた値を加えた値を <name6> の <name2> の <name1> に <val5> を加えた値番目の <name3> に <val5> を加えた値番目にする	<name6> . <name2> [ <name1> + <val5> ] [ <name3> + <val5> ] = <name6> . <name2> [ <name1> ] [ <name3> ] + ( <name3> + <val5> ) * <name6> . <name2> [ <name1> ] [ <name3> + <val5> ]	( <name6> [ <name2> [ <name1> + <val5> ] [ <name3> + <val5> ] = <name6> . <name2> [ <name1> ] [ <name3> ] + ( <name3> + <val5> ) * <name6> [ <name2> [ <name1> ] [ <name3> + <val5> ] )
<name6> モジュールを用いる	from <name6> import heappop , heappush	sqrt ( <name6> ) import sqrt
<name1> 、 <name2> から <name6> を引いた値の最大値を <name1> とする	<name1> = max ( <name1> , <name2> - <name6> )	<name1> = max ( <name1> , <name2> - <name6> )
改行せずに <val5> 、 <name2> を出力する	print ( <val5> , <name2> , end = <val5> )	print ( <val5> , <name2> , end = <val5> )
<name1> ( <val5> , <name6> , <name2> , <name3> , <name4> )	<name1> ( <val5> , <name6> , <name2> , <name3> , <name4> )	<name3> ( <name1> ( <val5> , <name6> , <name2> , <name3> , <name4> ) )
<val3> から <name6> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , <name6> + <val5> ) :	continue range ( <val3> , <name6> + <val5> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name5> 、 <name1> 、 <name2> 、 <name6> とする	<name3> , <name4> , <name5> , <name1> , <name2> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name4> , <name5> , <name1> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name4> を <name2> の <name3> と <name5> の排他論理和番目にする	<name2> [ <name3> ^ <name5> ] = <name4>	( <name2> [ <name3> ^ <name5> ] = <name4> )
<name5> の <name2> が <name2> と等しいとき、	if <name5> . <name2> == <name2> :	: if <name5> . <name2> == <name2> :
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列のリストを <name6> とする	<name6> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )	<name6> = list ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) )
<name5> を <name4> で割った余りを <name3> とする	<name3> = <name5> % <name4>	<name3> = <name5> % <name4>
<val1> が <name4> に含まれるとき、	if <val1> in <name4> :	list if <val1> in <name4> :
<name6> が <val5> と等しいとき、 <blk> <val1> を <name6> とする </blk>	if <name6> == <val5> : <blk> <name6> = <val1> </blk>	\ <name6> = <name6> == <val5> : <blk> <name6> = <val1> </blk>
<name4> の <name1> の <name5> の <name6> 番目の末尾に <name5> を追加する	<name4> . <name1> [ <name5> . <name6> ] . append ( <name5> )	<name2> . <name1> [ <name5> . <name6> ] . append ( <name5> )
<name2> に <name5> を加えた値に <name1> を加えた値を <val3> で割った値を <name4> とする	<name4> = ( <name2> + <name5> + <name1> ) / <val3>	<name4> = ( <name2> + <name5> + <name1> ) / <val3>
( <val4> 、 <val2> ) からなる列を <name6> とする	<name6> = [ <val4> , <val2> ]	else = [ <val4> , <val2> ]
<name3> ( <name1> , <val5> , <name4> )	<name3> ( <name1> , <val5> , <name4> )	( <name3> ( <name1> , <val5> , <name4> ) )
<name4> の <val3> 番目の整数値を <name1> とする	<name1> = int ( <name4> [ <val3> ] )	<name1> = int ( <name4> [ <val3> ] )
<name3> の <val2> 番目を <name3> の <name6> 番目に <val5> を加えた値だけ増加させる	<name3> [ <val2> ] += ( <name3> [ <name6> ] + <val5> )	( <name3> [ <val2> ] += <name3> [ <name6> ] + <val5> )
<name6> に <val2> を加えた値に <name6> に <val3> を加えた値を掛けた値に <name6> に <val1> を加えた値を掛けた値を <val5> で割った値を <name4> とする	<name4> = ( <name6> + <val2> ) * ( <name6> + <val3> ) * ( <name6> + <val1> ) / <val5>	<name4> = ( <name6> + <val2> ) * ( <name6> + <val3> ) * ( <name6> + <val1> ) / <val5>
( <name6> の <val4> 番目、 <name6> の先頭、 <name6> の <val5> 番目、 <name6> の <val3> 番目、 <name6> の <val1> 番目、 <name6> の <val2> 番目 ) からなる列を <name1> の <name2> にする	<name1> . <name2> = [ <name6> [ <val4> ] , <name6> [ 0 ] , <name6> [ <val5> ] , <name6> [ <val3> ] , <name6> [ <val1> ] , <name6> [ <val2> ] ]	<name6> . <name2> = [ <name6> [ <val4> ] , <name6> [ 0 ] , <name6> [ <val5> ] , <name6> [ <val3> ] , <name6> [ <val1> ] , <name6> [ <val2> ] ]
<name4> ( <name3> , <name1> , <name5> ) を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name4> ( <name3> , <name1> , <name5> )	<name6> , <name2> = <name4> ( <name3> , <name1> , <name5> )
<name5> が <name2> の <name3> 番目より小さいとき、	if <name5> < <name2> [ <name3> ] :	for <name5> < <name2> [ <name3> ] :
<name2> の <name4> 番目が <name2> の <name6> 番目に <name3> を加えた値より大きいとき、	if <name2> [ <name4> ] > <name2> [ <name6> ] + <name3> :	continue <name2> [ <name4> ] > <name2> [ <name6> ] + <name3> :
<name6> から <val3> を引いた値を <name5> とする	<name5> = <name6> - <val3>	<name5> = <name6> - <val3>
\ <name1> ( <val2> % ( <name5> // <val6> , ( <name5> // <val3> ) % <val3> , <name5> % <val3> ) ) \	\ <name1> ( <val2> % ( <name5> // <val6> , ( <name5> // <val3> ) % <val3> , <name5> % <val3> ) ) \	for <name1> in <val2> % ( ( <name5> // <val6> , ( <name5> // <val3> ) % <val3> , <name5> % <val3> ) ) \
<name3> の、つまり先頭から <val5> 番目までの部分列の総和が <val6> より小さいとき、	if sum ( <name3> [ 0 : <val5> ] ) < <val6> :	> sum ( <name3> [ : <val5> ] ) < <val6> :
<name6> を <name5> ( <name3> [ <val1> ] * <name2> / <name3> [ <name4> ] ) だけ増加させる	<name6> += <name5> ( <name3> [ <val1> ] * <name2> / <name3> [ <name4> ] )	<name2> += <name5> ( <name3> [ <val1> ] * <name2> / <name3> [ <name4> ] )
<name6> の <name5> 番目を <val3> だけ増加させる	<name6> [ <name5> ] += <val3>	<name5> [ <name5> ] += <val3>
<name5> の末尾に ( <name2> 、 <name6> ) からなる列を追加する	<name5> . append ( [ <name2> , <name6> ] )	<name5> . append ( [ <name2> , <name6> ] )
<name4> . <name2> ( <val1> )	<name4> . <name2> ( <val1> )	<name3> . <name2> ( <val1> )
<name3> が <name6> を <val2> で割った商より大きいとき、	if <name3> > <name6> // <val2> :	continue <name3> > <name6> // <val2> :
<val2> に <name5> から <name6> を引いた値に <name3> から <name4> を引いた値を掛けた値から <name1> から <name6> を引いた値に <name2> から <name4> を引いた値を掛けた値を引いた値を掛けた値を <name1> とする	<name1> = <val2> * ( ( <name5> - <name6> ) * ( <name3> - <name4> ) - ( <name1> - <name6> ) * ( <name2> - <name4> ) )	<name6> = <val2> * ( <name5> - <name6> ) * ( <name3> - <name4> ) - ( <name1> - <name6> ) * ( <name2> - <name4> ) )
<val2> から <name4> に <val3> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , <name4> + <val3> ) :	continue for <name1> in range ( <val2> , <name4> + <val3> ) :
現在の日時を <name4> の <name1> 番目にする	<name4> [ <name1> ] = now	( <name4> [ <name1> ] = now )
<name6> ( <name5> + <val3> , <name1> - <name4> [ <name5> ] ) を <name2> とする	<name2> = <name6> ( <name5> + <val3> , <name1> - <name4> [ <name5> ] )	<name2> = <name6> ( <name5> + <val3> , <name1> - <name4> [ <name5> ] )
0 から <name2> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <name4> ( <name3> ) の列を <name5> とする	<name5> = [ <name4> ( <name3> ) for <name6> in range ( <name2> + <val1> ) ]	<name5> = [ <name4> ( <name3> ) for <name6> in range ( <name2> + <val1> ) ]
<name6> を <name4> に <val1> を掛けた値だけ減少させる	<name6> -= ( <name4> * <val1> )	<name3> -= <name4> * <val1>
0 から <name1> の長さから <val2> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name1> ) - <val2> ) :	for <name6> ) in range ( len ( <name1> ) - <val2> ) :
<name4> モジュールを用いる	from <name4> import perf_counter	return from <name4> import deque
<name6> と <val5> の論理積のとき、	if <name6> & <val5> :	list ( <name6> & <val5> ) :
<name2> の <name1> 番目を -1 だけ増加させる	<name2> [ <name1> ] += - 1	( <name2> [ <name1> ] += - 1 )
D : {}を書式として <name6> の <name2> のリテラルで整形した文字列を出力する	print ( 'D:{}' . format ( repr ( <name6> . <name2> ) ) )	print ( 'Data {}:' . format ( ~ <name6> . <name2> ) )
<name5> が <name4> より小さいとき、 <blk> <name5> と <name4> を入れ替える </blk>	if <name5> < <name4> : <blk> <name5> , <name4> = <name4> , <name5> </blk>	for <name5> , <name4> in <name5> < <name4> : <blk> <name5> , <name4> = <name4> , <name5> </blk>
<name2> の各要素を <name3> 、 <name5> とし、 ( <name3> から <name4> の先頭を引いた値、 <name5> から <name4> の <val1> 番目を引いた値 ) の組の列を <name2> とする	<name2> = [ ( <name3> - <name4> [ 0 ] , <name5> - <name4> [ <val1> ] ) for <name3> , <name5> in <name2> ]	<name6> = [ ( <name3> - <name4> [ 0 ] , <name5> - <name4> [ <val1> ] ) for <name3> , <name5> in <name2> ]
<name2> ( <val6> )	<name2> ( <val6> )	( <name2> ( <val6> ) )
( ( <val4> ) からなる列の <val4> から <name1> - <name4> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <name2> から <name3> を引いた値に <val6> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val4> ] * [ ( <name2> - <name3> + <val6> ) for <name5> in range ( <name1> - <name4> + <val6> ) ] ]	<name1> = [ [ <val4> ] * [ ( <name2> - <name3> + <val6> ) for <name5> in range ( <name1> - <name4> + <val6> ) ] ]
<name6> ( ( <name5> ** <val2> + <name1> ** <val2> - <name4> ** <val2> ) / ( <val2> * <name5> * <name1> ) ) を <name3> とする	<name3> = <name6> ( ( <name5> ** <val2> + <name1> ** <val2> - <name4> ** <val2> ) / ( <val2> * <name5> * <name1> ) )	<name6> = <name6> ( ( <name5> ** <val2> + <name1> ** <val2> - <name4> ** <val2> ) / ( <val2> * <name5> * <name1> ) )
( <name2> の <name3> の <name5> 番目の先頭、 <name1> 、 <name4> に <name6> を加えた値、 <name6> 、 <name2> ) の組を返す	return ( <name2> . <name3> [ <name5> ] [ 0 ] , <name1> , <name4> + <name6> , <name6> , <name2> )	yield ( <name2> . <name3> [ <name5> ] [ 0 ] , <name1> , <name4> + <name6> , <name6> , <name2> )
<name1> の <name6> が <name1> の <name2> の <name6> より小さいとき、	if <name1> . <name6> < <name1> . <name2> . <name6> :	raise <name1> . <name6> < <name1> . <name2> . <name6> :
<name1> の <name6> の先頭番目の末尾に <name6> の <val4> 番目の整数値を追加する	<name1> [ <name6> [ 0 ] ] . append ( int ( <name6> [ <val4> ] ) )	not <name1> [ <name6> [ 0 ] ] . append ( int ( <name6> [ <val4> ] ) )
<name2> の <val5> 番目に <name4> の <val3> 番目を掛けた値から <name2> の <val3> 番目に <name4> の先頭を掛けた値を引いた値の浮動小数点数を返す	return float ( <name2> [ <val5> ] * <name4> [ <val3> ] - <name2> [ <val3> ] * <name4> [ <val5> ] )	x return float ( <name2> [ <val5> ] * <name4> [ <val3> ] - <name2> [ <val3> ] * <name4> [ <val5> ] ) float ( )
<name5> ( <name4> , ( <val1> , <name6> ) )	<name5> ( <name4> , ( <val1> , <name6> ) )	<name5> ( <name4> , ( <val1> , <name6> ) )
<name6> . <name2> ( ) が、つまり偽と等しくなければならない	assert <name6> . <name2> ( ) == False	sep = <name6> . <name2> ( ) == False
セパレータを <val6> だけ減少させる	sep -= <val6>	assert sep -= <val6>
<name3> の <name1> から <val4> を引いた値番目に <name3> の <name1> から <val5> を引いた値番目を加えた値を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name3> [ <name1> - <val4> ] + <name3> [ <name1> - <val5> ]	( <name3> [ <name1> ] = <name3> [ <name1> - <val4> ] + <name3> [ <name1> - <val5> ] )
<name1> を <name1> に <name4> を加えた値で割った値を <name2> とする	<name2> = <name1> / ( <name1> + <name4> )	<name6> = <name1> / ( <name1> + <name4> )
<name5> が <name1> より大きいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> > <name1> : <blk> continue </blk>	list if <name5> > <name1> : <blk> continue </blk>
<name4> の <name5> の先頭番目を順に <name2> として、繰り返す	for <name2> in <name4> [ <name5> [ 0 ] ] :	. for <name2> in <name4> [ <name5> [ 0 ] ] :
<name4> が <val6> より大きいとき、 <blk> <name5> を <val1> に <name4> から <val6> を引いた値を掛けた値だけ増加させる </blk>	if <name4> > <val6> : <blk> <name5> += <val1> * ( <name4> - <val6> ) </blk>	try : <blk> <name5> += <val1> * ( <name4> - <val6> ) </blk>
<name2> に <name6> の <name3> 番目の <name1> 番目を追加した集まり	<name2> . add ( <name6> [ <name3> ] [ <name1> ] )	not <name2> . add ( <name6> [ <name3> ] [ <name1> ] )
<name2> が <name6> より小さくかつ <name5> の <name2> 番目が <val3> と等しい間、次を繰り返す	while <name2> < <name6> and <name5> [ <name2> ] == <val3> :	del <name2> < <name6> and <name5> [ <name2> ] == <val3> :
<name1> の <name2> 番目の <name5> 番目を <name4> とする	<name4> = <name1> [ <name2> ] [ <name5> ]	<name4> = <name1> [ <name2> ] [ <name5> ]
( <val3> 、 <val2> ) からなる列を <name6> の <val4> 番目にする	<name6> [ <val4> ] = [ <val3> , <val2> ]	dict [ <val4> ] = [ <val3> , <val2> ]
<name2> の <name3> の長さ番目の <name6> の長さ番目を出力する	print ( <name2> [ len ( <name3> ) ] [ len ( <name6> ) ] )	print ( <name2> [ len ( <name3> ) ] [ len ( <name6> ) ] )
<name6> を <name2> で割った値の整数値に <val5> を加えた値を <name3> とする	<name3> = int ( <name6> / <name2> ) + <val5>	<name3> = int ( <name6> / <name2> ) + <val5>
<name1> の末尾に <name2> の <val3> 番目が <val3> より大きいとき <val5> を <name2> の <val3> 番目で割った余り、そうでなければ <val4> を追加する	<name1> . append ( ( <val5> % <name2> [ <val3> ] ) if <name2> [ <val3> ] > <val3> else <val4> )	<name1> . append ( <val5> % <name2> [ <val3> ] if <name2> [ <val3> ] > <val3> else <val4> )
( <val6> ) からなる列の <name1> 回分の列を <name2> の <name3> にする	<name2> . <name3> = [ <val6> ] * <name1>	<name2> . <name3> = [ <val6> ] * <name1>
<val4> を <name3> の <name1> に <name6> を加えた値番目の <name2> 番目にする	<name3> [ <name1> + <name6> ] [ <name2> ] = <val4>	<name3> [ <name1> + <name6> ] [ <name2> ] = <val4>
<name2> . <name1> ( <name5> , <name6> ) のとき、	if <name2> . <name1> ( <name5> , <name6> ) :	list ( <name2> . <name1> ( <name5> , <name6> ) ) :
<name3> 内の <val4> を <name1> の文字列で置き換えた文字列を <name2> とする	<name2> = <name3> . replace ( <val4> , str ( <name1> ) )	<name2> = <name3> . replace ( <val4> , str ( <name1> ) )
<name4> の <name1> の <name3> 番目に <name3> に <val2> を加えた値を掛けた値を <name5> で割った余りを <name4> の <name1> の <name3> に <val2> を加えた値番目にする	<name4> . <name1> [ <name3> + <val2> ] = <name4> . <name1> [ <name3> ] * ( <name3> + <val2> ) % <name5>	<name4> . <name1> [ <name3> + <val2> ] = <name4> . <name1> [ <name3> ] * ( <name3> + <val2> ) % <name5>
{} {}を書式として <name3> の x 座標、 <name3> の y 座標で整形した文字列を出力する	print ( '{} {}' . format ( <name3> . x , <name3> . y ) )	print ( '{} {}' . format ( <name3> . x , <name3> . y ) )
<name6> を <name4> だけ減少させる <name1> を <name2> だけ減少させる	<name6> -= <name4> <name1> -= <name2>	<name6> -= <name4> <name1> -= <name2>
showa を <name1> とする	<name1> = 'showa'	( <name1> = 'showa' )
<name5> 、無限の整数列の最大値を <name5> とする	<name5> = max ( <name5> , count )	else = max ( <name5> , count )
a の順序数を <name4> とする	<name4> = ord ( 'a' )	<name4> = ord ( 'a' )
<name4> をパラメータとして <name4> の <name2> を返す関数を <name1> として <name3> の最小値を <name5> とする	<name5> = min ( <name3> , <name1> = lambda <name4> : <name4> . <name2> )	<name6> = min ( <name3> , <name1> = lambda <name4> : <name4> . <name2> )
<name4> の末尾に <name3> の <val6> 番目に <name2> の <val5> 番目を加えた値に <name1> の <val4> 番目を加えた値を追加する	<name4> . append ( <name3> [ <val6> ] + <name2> [ <val5> ] + <name1> [ <val4> ] )	<name4> . append ( <name3> [ <val6> ] + <name2> [ <val5> ] + <name1> [ <val4> ] )
<name6> . <name2> ( ) を展開し、それぞれ <name5> 、 <name1> 、 <name4> とする	<name5> , <name1> , <name4> = <name6> . <name2> ( )	<name3> , <name1> , <name4> = <name6> . <name2> ( )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を <name6> とする	<name6> = map ( int , input ( ) . split ( ) )	<name6> = map ( int , input ( ) . split ( ) )
black を <name1> の <name2> 番目の <name3> 番目にする	<name1> [ <name2> ] [ <name3> ] = 'black'	<name1> [ <name2> ] [ <name3> ] = 'black'
<name2> の <val4> 番目が <name5> の先頭と等しくない間、次を繰り返す	while <name2> [ <val4> ] != <name5> [ <val4> ] :	del <name2> [ <val4> ] != <name5> [ <val4> ] :
<name1> の整数値の <val5> 乗の文字列を長さ <val2> になるように '0' 左詰めした文字列の <val5> 番目から <val4> 番目までの部分列を <name1> とする	<name1> = str ( int ( <name1> ) ** <val5> ) . zfill ( <val2> ) [ <val5> : <val4> ]	<name6> = str ( int ( int ( <name1> ) ** <val5> ) . zfill ( <val2> ) [ <val5> : <val4> ] )
( 、つまり未定値 ) からなる列の <name2> に <val1> を加えた値回分の列を <name5> とする	<name5> = [ None ] * ( <name2> + <val1> )	<name5> = [ None ] * ( <name2> + <val1> )
<name6> の <name5> 番目の <name3> 番目が <val4> と等しいとき、	if <name6> [ <name5> ] [ <name3> ] == <val4> :	if <name6> [ <name5> ] [ <name3> ] == <val4> :
<name2> の末尾に <name1> を実部、 <name4> を虚部とした複素数を追加する	<name2> . append ( complex ( <name1> , <name4> ) )	<name2> . append ( complex ( <name1> , <name4> ) )
<name2> を <name1> の長さだけ増加させる	<name2> += len ( <name1> )	<name2> += len ( <name1> )
<name4> の <name5> 番目を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name4> [ <name5> ]	<name3> , <name2> = <name4> [ <name5> ]
( ( 、つまり無限大 ) からなる列の 0 から <name3> 未満までの数列の各要素を <name4> とし、 <name3> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ inf ] * [ <name3> for <name4> in range ( <name3> ) ] ]	<name2> = [ [ inf ] * [ <name3> for <name4> in range ( <name3> ) ] ]
<name4> の総和が <val1> と等しいとき、	if sum ( <name4> ) == <val1> :	: if sum ( <name4> ) == <val1> :
<name4> . <name3> ( <name5> ( ) . <name2> ( ) )	<name4> . <name3> ( <name5> ( ) . <name2> ( ) )	<name4> . <name3> ( <name5> ( ) . <name2> ( ) )
<name5> の <name3> 番目の <name2> 番目に <name4> の <name2> 番目を加えた値を <name5> の <name3> に <val6> を加えた値番目の <name2> 番目にする	<name5> [ <name3> + <val6> ] [ <name2> ] = <name5> [ <name3> ] [ <name2> ] + <name4> [ <name2> ]	<name5> [ <name3> + <val6> ] [ <name2> ] = <name5> [ <name3> ] [ <name2> ] + <name4> [ <name2> ]
<name3> が <name6> と等しいとき <name5> 、そうでなければ <val2> を出力する	print ( <name5> if <name3> == <name6> else <val2> )	<name3> . print ( <name5> if <name3> == <name6> else <val2> )
<name4> の <name1> 番目の <val6> 番目の整数値を <name4> の <name1> 番目の <val6> 番目にする	<name4> [ <name1> ] [ <val6> ] = int ( <name4> [ <name1> ] [ <val6> ] )	<name4> [ <name1> ] [ <val6> ] = int ( <name4> [ <name1> ] [ <val6> ] )
0 から <name3> に <val1> を加えた値未満までの数列の各要素を <name4> とし、 <name5> の <name6> 番目の <name4> 番目のときの <name4> の列を <name2> とする	<name2> = [ <name4> for <name4> in range ( <name3> + <val1> ) if <name5> [ <name6> ] [ <name4> ] ]	<name1> = [ <name4> for <name4> in range ( <name3> + <val1> ) if <name5> [ <name6> ] [ <name4> ] ]
<name3> が <name6> の長さと等しくなければならない	assert <name3> == len ( <name6> )	sep = <name3> == len ( <name6> )
<name2> の <val3> 番目を <name5> にソート順で挿入する	bisect . insort_left ( <name5> , <name2> [ <val3> ] )	insort_left ( <name5> , <name2> [ <val3> ] )
<name4> が <name5> より小さくないとき、	if not <name4> < <name5> :	while not <name4> < <name5> :
<name1> の <name3> の <name4> 番目の末尾に <name2> を追加する	<name1> . <name3> [ <name4> ] . append ( <name2> )	. <name1> [ <name3> . <name4> ] . append ( <name2> )
<val4> の <name3> 乗に <val4> の <name2> 乗から <val4> の <name2> から <name1> を引いた値乗を引いた値を掛けた値を <name6> とする	<name6> = <val4> ** <name3> * ( <val4> ** <name2> - <val4> ** ( <name2> - <name1> ) )	<name6> = <val4> ** <name3> * ( <val4> ** <name2> - <val4> ** ( <name2> - <name1> ) )
<name6> の <name2> 番目が <val3> と等しくかつ <name5> の <name2> 番目が、つまり偽と等しいとき、	if <name6> [ <name2> ] == <val3> and <name5> [ <name2> ] == False :	while <name6> [ <name2> ] == <val3> and <name5> [ <name2> ] == False :
<name3> の先頭、 <name3> の <val1> 番目を <name3> の <val1> 番目、 <name3> の <val2> 番目とする	<name3> [ <val1> ] , <name3> [ <val2> ] = <name3> [ 0 ] , <name3> [ <val1> ]	<name3> [ <val1> ] , <name3> [ <val2> ] = <name3> [ 0 ] , <name3> [ <val1> ]
<name3> の末尾に ( <name2> 、 <name1> ) の組を追加する	<name3> . append ( ( <name2> , <name1> ) )	<name1> . append ( ( <name2> , <name1> ) )
<name6> の <name4> 、 <name6> の <name4> を <name5> 、 <name2> とする	<name5> , <name2> = <name6> . <name4> , <name6> . <name4>	( <name5> , <name2> = <name6> . <name4> , <name6> . <name4> )
<val6> を <name1> だけ左シフトした値を <name5> とする	<name5> = <val6> << <name1>	else = <val6> << <name1>
<name5> . <name4> ( ) を <name3> とする	<name3> = <name5> . <name4> ( )	<name3> = <name5> . <name4> ( )
<name3> を <name4> の <val1> 番目にする	<name4> [ <val1> ] = <name3>	( <name4> [ <val1> ] = <name3> )
<name5> ( <name4> , <name2> , <name1> ) を <name3> とする	<name3> = <name5> ( <name4> , <name2> , <name1> )	else = <name5> ( <name4> , <name2> , <name1> )
<name4> の <val2> 番目が <name6> の <name5> 番目より大きいとき、	if <name4> [ <val2> ] > <name6> [ <name5> ] :	continue <name4> [ <val2> ] > <name6> [ <name5> ] :
<name2> の <name1> 番目の <name5> が、つまり未定値と等しくないとき、	if <name2> [ <name1> ] . <name5> != None :	if <name2> [ <name1> ] . <name5> != None :
<name6> をソートした列を <name2> の <name1> 番目にする	<name2> [ <name1> ] = sorted ( <name6> )	dict [ <name1> ] = sorted ( <name6> )
<name4> の <val6> 乗に <name3> の <val6> 乗を加えた値を <name1> とする	<name1> = <name4> ** <val6> + <name3> ** <val6>	<name1> = <name4> ** <val6> + <name3> ** <val6>
 ' , - . ? <name6> を <name2> とする	<name2> = ' ' , - . ? <name6> '	<name2> = ' ' . format ( <name6> )
<name3> の <name5> の <val6> 番目、 <name3> の <name5> の <val1> 番目、 <name3> の <name5> の <val2> 番目、 <name3> の <name5> の <val4> 番目を <name3> の <name5> の <val4> 番目、 <name3> の <name5> の <val6> 番目、 <name3> の <name5> の <val1> 番目、 <name3> の <name5> の <val2> 番目とする	<name3> . <name5> [ <val4> ] , <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val2> ] = <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val4> ]	<name3> . <name5> [ <val4> ] , <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val2> ] = <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val4> ]
<name4> に <val3> を加えた値、 <name4> に <val3> を加えた値を <name5> 、 <name2> とする	<name5> , <name2> = <name4> + <val3> , <name4> + <val3>	<name5> , <name2> = <name4> + <val3> , <name4> + <val3>
<name1> の末尾に <name3> の <name5> 番目の <name2> の <name5> 番目番目を追加する	<name1> . append ( <name3> [ <name5> ] [ <name2> [ <name5> ] ] )	<name1> . append ( <name3> [ <name5> ] [ <name2> [ <name5> ] ] )
<name4> が <name3> より小さいかどうかが <name1> 以下のとき、	if <name4> < <name3> <= <name1> :	list if <name4> < <name3> <= <name1> :
( <name6> ) からなる列の <val1> に <name5> を掛けた値回分の列を <name4> とする	<name4> = [ <name6> ] * ( <val1> * <name5> )	<name4> = [ <name6> ] * ( <val1> * <name5> )
<name4> の各要素を <name5> とし、 <name5> の各要素を <name2> 、 <name1> とし、 ( <name2> に <name3> を掛けた値、 <name1> に <name3> を掛けた値 ) の組の列の列を <name6> とする	<name6> = [ [ ( <name2> * <name3> , <name1> * <name3> ) for <name2> , <name1> in <name5> ] for <name5> in <name4> ]	<name6> = [ [ ( <name2> * <name3> , <name1> * <name3> ) for <name2> , <name1> in <name5> ] for <name5> in <name4> ]
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = list ( map ( int , input ( ) . split ( <val1> ) ) )	<name5> , <name6> = list ( map ( int , input ( ) . split ( <val1> ) ) )
( <name3> の総和、 <name1> から <val2> を引いた値 ) の組を返す	return ( sum ( <name3> ) , <name1> - <val2> )	x return ( sum ( <name3> ) , <name1> - <val2> )
<name3> 、 <name2> の <val4> 番目の最小値を <name1> とする	<name1> = min ( <name3> , <name2> [ <val4> ] )	<name1> = min ( <name3> , <name2> [ <val4> ] )
<name5> が <val4> の <val2> 乗より小さいとき <name5> 、そうでなければ <val1> を出力する	print ( <name5> if <name5> < <val4> ** <val2> else <val1> )	print ( <name5> if <name5> < <val4> ** <val2> else <val1> )
<name4> が <name4> の逆順と等しいとき、 <blk> 無限の整数列を <val5> だけ増加させる </blk>	if <name4> == <name4> [ : : - <val5> ] : <blk> count += <val5> </blk>	<blk> if <name4> == <name4> [ : : - <val5> ] : <blk> count += <val5> </blk>
<name3> が <name6> の <name1> の <name3> 番目と等しい要素の最初の位置と等しいとき、	if <name3> == <name6> . index ( <name1> [ <name3> ] ) :	for <name3> in <name3> == <name6> . index ( <name1> [ <name3> ] ) :
( <val6> 、 <val4> 、 <val5> 、 <val1> 、 <val3> 、 <val2> 、 <val6> 、 <val4> 、 <val5> 、 <val1> ) からなる列を <name2> とする	<name2> = [ <val6> , <val4> , <val5> , <val1> , <val3> , <val2> , <val6> , <val4> , <val5> , <val1> ]	<name2> = [ <val6> , <val4> , <val5> , <val1> , <val3> , <val2> , <val6> , <val4> , <val5> , <val1> ]
<name4> の <name3> に <val1> を加えた値番目、 <name2> の最小値を <name4> の <name3> に <val1> を加えた値番目にする	<name4> [ <name3> + <val1> ] = min ( <name4> [ <name3> + <val1> ] , <name2> )	<name3> [ <name3> + <val1> ] = min ( <name4> [ <name3> + <val1> ] , <name2> )
<name2> の整数値から <name6> の整数値を引いた値を出力する	print ( int ( <name2> ) - int ( <name6> ) )	print ( int ( <name2> ) - int ( <name6> ) )
<name3> の各要素を <name5> とし、 <name4> の列の各要素を <name2> とし、 <name2> に <name5> を加えた値の列を <name6> とする	<name6> = [ <name2> + <name5> for <name2> in [ <name4> for <name5> in <name3> ] ]	<name6> = [ <name2> + <name5> for <name2> in [ <name4> for <name5> in <name3> ] ]
<name2> の <name6> に <val3> を加えた値番目、 <name2> の <name6> 番目を <name2> の <name6> 番目、 <name2> の <name6> に <val3> を加えた値番目とする	<name2> [ <name6> ] , <name2> [ <name6> + <val3> ] = <name2> [ <name6> + <val3> ] , <name2> [ <name6> ]	<name2> [ <name6> ] , <name2> [ <name6> + <val3> ] = <name2> [ <name6> + <val3> ] , <name2> [ <name6> ]
<name4> の末尾に ( <name6> から <val3> を引いた値、 <name2> 、 <name5> ) の組を追加する	<name4> . append ( ( <name6> - <val3> , <name2> , <name5> ) )	not <name4> . append ( ( <name6> - <val3> , <name2> , <name5> ) )
<name4> を <val5> で分割した字句列を <name4> とする	<name4> = <name4> . split ( <val5> )	<name4> = <name4> . split ( <val5> )
<name4> の <val2> 番目を実部、 <name4> の <val6> 番目を虚部とした複素数を <name1> とする	<name1> = complex ( <name4> [ <val2> ] , <name4> [ <val6> ] )	<name1> = complex ( <name4> [ <val2> ] , <name4> [ <val6> ] )
<name3> の <name5> 番目、 <name3> の <name4> 番目を <name3> の <name4> 番目、 <name3> の <name5> 番目とする <name6> を <val1> だけ増加させる	<name3> [ <name4> ] , <name3> [ <name5> ] = <name3> [ <name5> ] , <name3> [ <name4> ] <name6> += <val1>	<name2> [ <name4> ] , <name3> [ <name5> ] = <name3> [ <name5> ] , <name3> [ <name4> ] <name6> += <val1>
<name2> 、 <name6> はグローバル変数とする	global <name2> , <name6>	>> = <name2> , <name6>
( <val1> ) からなる列の <name4> 回分の列を <name5> とする	<name5> = [ <val1> ] * <name4>	else = [ <val1> ] * <name4>
<name6> の <val4> を取り出した値を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = <name6> . pop ( <val4> )	<name2> , <name5> , <name3> = <name6> . pop ( <val4> )
<name5> の <name3> の <name4> 番目を <name5> の <name3> の <name2> 番目だけ増加させる	<name5> . <name3> [ <name4> ] += <name5> . <name3> [ <name2> ]	<name2> . <name3> [ <name4> ] += <name5> . <name3> [ <name2> ]
<name1> の <name6> 番目に <name3> を加えた値を <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name1> [ <name6> ] + <name3>	( <name1> [ <name2> ] = <name1> [ <name6> ] + <name3> )
<name3> を <name6> の <name4> 番目の <name2> 番目だけ増加させる	<name3> += <name6> [ <name4> ] [ <name2> ]	<name3> += <name6> [ <name4> ] [ <name2> ]
<name5> から <name4> を引いた値を <name3> とする <name1> から <name2> を引いた値を <name6> とする	<name3> = <name5> - <name4> <name6> = <name1> - <name2>	<name2> = <name5> - <name4> <name6> = <name1> - <name2>
<name2> ( <name6> ) を <name5> とする	<name5> = <name2> ( <name6> )	else = <name2> ( <name6> )
<name6> と <name4> の論理和を <name5> とする	<name5> = <name6> | <name4>	( <name5> = <name6> | <name4> )
<name1> . <name4> ( <name6> , <name2> ) を返す	return <name1> . <name4> ( <name6> , <name2> )	yield <name1> . <name4> ( <name6> , <name2> )
<name6> が <name5> の <name3> 番目に含まれないとき、	if <name6> not in <name5> [ <name3> ] :	or <name6> not in <name5> [ <name3> ] :
<name5> の <name6> 番目が <name4> に <name1> を加えた値より大きいとき、	if <name5> [ <name6> ] > <name4> + <name1> :	continue <name5> [ <name6> ] > <name4> + <name1> :
<name5> の <name2> 番目が <name1> の <name2> 番目の長さより小さいとき、	if <name5> [ <name2> ] < len ( <name1> [ <name2> ] ) :	while <name5> [ <name2> ] < len ( <name1> [ <name2> ] ) :
<name6> の <name2> に <val1> を加えた値を <name5> で割った余り番目から <name4> を引いた値を <name3> とする	<name3> = <name6> [ ( <name2> + <val1> ) % <name5> ] - <name4>	<name3> = <name6> [ ( <name2> + <val1> ) % <name5> ] - <name4>
<val3> の <val3> 乗を <name6> とする	<name6> = <val3> ** <val3>	<name6> = <val3> ** <val3>
<name5> ( <name3> , <val1> , <name4> )	<name5> ( <name3> , <val1> , <name4> )	<name4> ( <name3> , <val1> , <name4> )
( <name2> の先頭から <name4> の先頭を引いた値、 <name2> の <val5> 番目から <name4> の <val5> 番目を引いた値 ) の組を <name1> とする	<name1> = ( <name2> [ 0 ] - <name4> [ 0 ] , <name2> [ <val5> ] - <name4> [ <val5> ] )	( <name2> = ( <name2> [ 0 ] - <name4> [ 0 ] , <name2> [ <val5> ] - <name4> [ <val5> ] ) )
<name4> の <name3> のキーと値の集まりを順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in <name4> . <name3> . items ( ) :	. for <name6> , <name1> in <name4> . <name3> . items ( ) :
<name6> の <name1> 番目の末尾に ( <name5> に <name3> を加えた値、 <name4> に <val2> を加えた値 ) の組を追加する	<name6> [ <name1> ] . append ( ( <name5> + <name3> , <name4> + <val2> ) )	<name2> [ <name1> ] . append ( ( <name5> + <name3> , <name4> + <val2> ) )
( <val5> ) からなる列に <name6> を加えた値を <name6> とする	<name6> = [ <val5> ] + <name6>	<name6> = [ <val5> ] + <name6>
<name2> エラーとなる	raise <name2>	dict = <name2> ( a , k - 1 )
<name2> を <val5> で割った余りにする	<name2> % = <val5>	<name3> % = <name2> % = <val5>
<name2> の <val6> 番目が <val3> と等しいとき、	if <name2> [ <val6> ] == <val3> :	for <name2> in <name2> [ <val6> ] == <val3> :
<name3> の <name5> の <name1> 番目を <name6> だけ増加させる	<name3> . <name5> [ <name1> ] += <name6>	( <name3> . <name5> [ <name1> ] += <name6> )
<name3> の <name4> 番目に <name5> を加えた値を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name3> [ <name4> ] + <name5>	<name3> [ <name1> ] = <name3> [ <name4> ] + <name5>
<name3> を <name1> の <name2> にする	<name1> . <name2> = <name3>	( <name1> . <name2> = <name3> )
<name2> 、 <name6> に <name1> の <name6> 番目を加えた値の最大値を <name2> とする	<name2> = max ( <name2> , <name6> + <name1> [ <name6> ] )	<name2> = max ( <name2> , <name6> + <name1> [ <name6> ] )
<name1> 内の <val4> の出現回数を出力する	print ( <name1> . count ( <val4> ) )	print ( <name1> . count ( <val4> ) )
<val5> を <name3> とするを <name2> とする	<name2> = <name3> = <val5>	input = <name3> = <val5>
<name4> の <name2> 番目を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <name4> [ <name2> ]	<name3> [ <name6> ] = <name4> [ <name2> ]
<val5> を最大長として [ MASK ] の両端キューを <name3> とする	<name3> = collections . deque ( maxlen = <val5> )	( <name3> = collections . deque ( ) , key = <val5> )
\ <name5> ( <val3> % <name4> ( [ <name6> [ <name1> ] [ <name2> ] forkinrange ( <val5> ) ] ) ) \	\ <name5> ( <val3> % <name4> ( [ <name6> [ <name1> ] [ <name2> ] for <name1> in range ( <val5> ) ] ) ) \	for <name5> in <name5> ( <val3> % <name4> ( [ <name6> [ <name1> ] [ <name2> ] for <name1> in range ( <val5> ) ] ) ) \
<name6> の <name2> 番目が <val4> と等しくないとき、	if <name6> [ <name2> ] != <val4> :	raise <name6> [ <name2> ] != <val4> :
<name2> の <name1> から読み込んだ一行を <name5> とする	<name5> = <name2> . <name1> . <name5>	<name1> . <name5> = <name2> . <name1> . <name5>
<name6> に <name3> を掛けた値に <name5> を加えた値を <name1> で割った余りを <name6> とする	<name6> = ( <name6> * <name3> + <name5> ) % <name1>	<name6> = ( <name6> * <name3> + <name5> ) % <name1>
0 から <name6> 未満までの数列の各要素を <name1> とし、 0 から <name3> 未満までの数列の各要素を <name2> とし、 <val4> の浮動小数点数の列の列、空列を <name6> 、 <name5> とする	<name6> , <name5> = [ [ float ( <val4> ) for <name2> in range ( <name3> ) ] for <name1> in range ( <name6> ) ] , [ ]	<name3> , <name6> , <name5> = [ [ float ( <val4> ) for <name2> in range ( <name3> ) ] for <name1> in range ( <name6> ) ] , [ ]
<name4> の . <val1> 乗を <name6> とする	<name6> = <name4> ** . <val1>	<name6> = <name4> ** . <val1>
<name5> を入力された文字列だけ増加させる	<name5> += input ( )	( <name5> += input ( ) )
改行せずに <val3> を ( <name1> 、 <name6> の <name1> から <val2> を引いた値番目 ) の組で割った余りを出力する	print ( <val3> % ( <name1> , <name6> [ <name1> - <val2> ] ) , end = '' )	end = <val3> % ( <name1> , <name6> [ <name1> - <val2> ] ) , end = '' )
a の順序数から <val5> を引いた値を <name2> とする	<name2> = ord ( 'a' ) - <val5>	<name2> = ord ( 'a' ) - <val5>
<name2> から <name3> を引いた値の <val1> 乗に <name4> から <name6> を引いた値の <val1> 乗を加えた値に <name5> から <name2> を引いた値の <val1> 乗を加えた値を <name5> とする	<name5> = ( <name2> - <name3> ) ** <val1> + ( <name4> - <name6> ) ** <val1> + ( <name5> - <name2> ) ** <val1>	<name5> = ( <name2> - <name3> ) ** <val1> + ( <name4> - <name6> ) ** <val1> + ( <name5> - <name2> ) ** <val1>
<name3> の <name4> から <name1> を引いた値番目が <name3> の <name4> 番目と等しいとき、	if <name3> [ <name4> - <name1> ] == <name3> [ <name4> ] :	for <name3> [ <name4> - <name1> ] == <name3> [ <name4> ] :
<name4> の <name3> 番目を <name2> とする <name6> の <name3> 番目を <name5> とする	<name2> = <name4> [ <name3> ] <name5> = <name6> [ <name3> ]	<name1> = <name4> [ <name3> ] <name5> = <name6> [ <name3> ]
<name2> ( <name6> ( <name1> ( ) ) ) のとき、 <blk> <name4> を <val3> だけ増加させる </blk>	if <name2> ( <name6> ( <name1> ( ) ) ) : <blk> <name4> += <val3> </blk>	for <name2> in <name2> ( <name6> ( <name1> ( ) ) ) : <blk> <name4> += <val3> </blk>
ソートされた順序を保ったまま <name6> を <name1> に挿入できる最後の位置を <name5> とする	<name5> = bisect . bisect_right ( <name1> , <name6> )	<name5> = bisect_right ( <name1> , <name6> )
0 から <val4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <val4> ) ]	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <val4> ) ]
集合を <name2> とする集合を <name6> とする	<name2> = set ( ) <name6> = set ( )	( <name2> = set ( ) ) <name6> = set ( )
<val2> から <name3> の <val6> 乗の整数値に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , int ( <name3> ** <val6> ) + <val1> ) :	. for <name5> in range ( <val2> , int ( <name3> ** <val6> ) + <val1> ) :
<name3> の <name5> を <val1> だけ減少させる	<name3> . <name5> -= <val1>	( <name3> . <name5> -= <val1> )
<val1> から <name6> の長さ未満までの <val2> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> , len ( <name6> ) , <val2> ) :	. for <name4> in range ( <val1> , len ( <name6> ) , <val2> ) :
<name2> の <name3> 番目を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = <name2> [ <name3> ]	<name3> , <name5> = <name2> [ <name3> ]
( <name2> から <name1> を引いた値、 <name6> から <name5> を引いた値 ) の組を <name4> とする	<name4> = ( <name2> - <name1> , <name6> - <name5> )	<name4> = ( <name2> - <name1> , <name6> - <name5> )
<name5> の末尾に <name2> ( <name3> , <name1> ) を追加する	<name5> . append ( <name2> ( <name3> , <name1> ) )	<name5> . append ( <name2> ( <name3> , <name1> ) )
<name6> の <name3> の <name4> の順序数から <val1> の順序数を引いた値に <name5> を加えた値を <val2> で割った余り番目を返す	return <name6> . <name3> [ ( ord ( <name4> ) - ord ( <val1> ) + <name5> ) % <val2> ]	return <name6> . <name3> [ ( ord ( <name4> ) - ord ( <val1> ) + <name5> ) % <val2> ]
<name5> の <name3> の <name2> を <name5> の <name3> にする	<name5> . <name3> = <name5> . <name3> . <name2>	<name1> . <name3> = <name5> . <name3> . <name2>
<name2> ( <name4> , <name4> [ <name3> ] . <name5> , <name1> )	<name2> ( <name4> , <name4> [ <name3> ] . <name5> , <name1> )	<name2> ( <name4> , <name4> [ <name3> ] . <name5> , <name1> )
0 から <name2> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name2> ) ]
<name5> の末尾に <name6> の整数値に <val1> を加えた値を <val4> で割った余りの文字列を追加する	<name5> . append ( str ( ( int ( <name6> ) + <val1> ) % <val4> ) )	<name1> . append ( str ( ( ( int ( <name6> ) + <val1> ) % <val4> ) )
<name4> . <name5> ( <name2> , <name3> ) が <name6> より大きいとき、	if <name4> . <name5> ( <name2> , <name3> ) > <name6> :	isinstance ( <name4> . <name5> ( <name2> , <name3> ) > <name6> :
<name5> <name4> - <name2>	<name5> <name4> - <name2>	( <name5> <name4> - <name2> )
<name1> の <val2> 番目、 <name1> の <val4> 番目を <name3> の <val4> 番目、 <name3> の <val2> 番目とする	<name3> [ <val4> ] , <name3> [ <val2> ] = <name1> [ <val2> ] , <name1> [ <val4> ]	<name3> [ <val4> ] , <name3> [ <val2> ] = <name1> [ <val2> ] , <name1> [ <val4> ]
<name4> の <name3> の末尾番目を返す	return <name4> [ <name3> [ - 1 ] ]	yield <name4> [ <name3> [ - 1 ] ]
<name1> から <name4> を引いた値から <name6> を引いた値を <name3> とする	<name3> = <name1> - <name4> - <name6>	<name3> = <name1> - <name4> - <name6>
0 から <name5> 未満までの数列の各要素を <name6> とし、 <name3> の <name6> 番目のときの <name6> の列を <name2> とする	<name2> = [ <name6> for <name6> in range ( <name5> ) if <name3> [ <name6> ] ]	<name4> = [ <name6> for <name6> in range ( <name5> ) if <name3> [ <name6> ] ]
<name6> の <name1> の <name4> 番目が -1 と等しくないとき、	if <name6> . <name1> [ <name4> ] != - 1 :	raise <name6> [ <name1> . <name4> ] != - 1 :
<name2> に <name6> ( <name3> >> <val1> , <name5> >> <val1> ) を加えた値を返す	return <name2> + <name6> ( <name3> >> <val1> , <name5> >> <val1> )	yield <name2> + <name6> ( <name3> >> <val1> , <name5> >> <val1> )
<name6> を <name1> ( <name4> , <name5> ) だけ減少させる	<name6> -= <name1> ( <name4> , <name5> )	<name6> -= <name1> ( <name4> , <name5> )
<name6> ( <name3> . <name2> / <name5> , - <name3> . <name4> / <name5> ) に <name1> を掛けた値を <name1> とする	<name1> = <name6> ( <name3> . <name2> / <name5> , - <name3> . <name4> / <name5> ) * <name1>	<name1> = <name6> ( <name3> . <name2> / <name5> , - <name3> . <name4> / <name5> ) * <name1>
<name5> の末尾に - <name3> の先頭を追加する	<name5> . append ( - <name3> [ 0 ] )	<name1> . append ( - <name3> [ 0 ] )
2 を底とする <name4> の対数の整数値に <val2> を加えた値を <name1> とする	<name1> = int ( math . log2 ( <name4> ) ) + <val2>	<name1> = int ( math . log2 ( <name4> ) ) + <val2>
<name4> の <name2> が <name3> の <name1> と等しいかどうかを返す	return <name4> . <name2> == <name3> . <name1>	x return <name4> . <name2> == <name3> . <name1>
<name4> が <val6> より小さいとき - <name4> に <name3> を掛けた値に <name2> を加えた値に <name1> に <name5> を掛けた値を加えた値、そうでなければ <name1> から <name4> を引いた値に <name5> を掛けた値を出力する	print ( - <name4> * <name3> + <name2> + <name1> * <name5> if <name4> < <val6> else ( <name1> - <name4> ) * <name5> )	print ( - <name4> * <name3> + <name2> + <name1> * <name5> if <name4> < <val6> else ( <name1> - <name4> ) * <name5> )
<name2> から <name1> を引いた値の <val3> 乗に <name6> から <name5> を引いた値の <val3> 乗を加えた値を <name4> とする	<name4> = ( <name2> - <name1> ) ** <val3> + ( <name6> - <name5> ) ** <val3>	<name4> = ( <name2> - <name1> ) ** <val3> + ( <name6> - <name5> ) ** <val3>
<name4> から <name3> を引いた値の <val2> 乗に <name1> から <name6> を引いた値の <val2> 乗を加えた値に <name5> から <name4> を引いた値の <val2> 乗を加えた値から <name3> の <val2> 乗を引いた値を <name5> とする	<name5> = ( <name4> - <name3> ) ** <val2> + ( <name1> - <name6> ) ** <val2> + ( <name5> - <name4> ) ** <val2> - <name3> ** <val2>	<name5> = ( <name4> - <name3> ) ** <val2> + ( <name1> - <name6> ) ** <val2> + ( <name5> - <name4> ) ** <val2> - <name3> ** <val2>
<val2> から <val5> 未満までの数列の各要素を <name1> とし、、つまり文字コード <name1> の文字の列を <name3> とする	<name3> = [ chr ( <name1> ) for <name1> in range ( <val2> , <val5> ) ]	else = [ chr ( <name1> ) for <name1> in range ( <val2> , <val5> ) ]
<name6> の <name5> の <val1> 乗から <name3> . <name2> ( ) を引いた値の平方根を <name4> とする	<name4> = math . sqrt ( pow ( <name6> . <name5> , <val1> ) - <name3> . <name2> ( ) )	<name4> = math . sqrt ( <name6> . <name5> ** <val1> - <name3> . <name2> ( ) )
<name3> の <name6> 番目の <name1> に <val2> を加えた値番目のとき、	if <name3> [ <name6> ] [ <name1> + <val2> ] :	for <name3> in <name3> [ <name6> ] [ <name1> + <val2> ] :
<name6> から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> , - 1 , - 1 ) :	for <name2> in range ( <name6> , - 1 , - 1 ) :
<name4> の <name3> 番目を出力する	print ( <name4> [ <name3> ] )	print ( <name4> [ <name3> ] )
<name6> の <name2> をソートした列を返す	return sorted ( <name6> . <name2> )	yield sorted ( <name6> . <name2> )
<name2> の各要素に整数を適用した列を <name2> とする	<name2> = map ( str , <name2> )	<name2> = map ( int , <name2> )
<name3> の <name1> 番目の末尾に ( <name4> 、 <name6> ) の組を追加する	<name3> [ <name1> ] . append ( ( <name4> , <name6> ) )	<name2> [ <name1> ] . append ( ( <name4> , <name6> ) )
<name1> 、 <name5> から <name4> に <name1> を掛けた値を引いた値を <name5> 、 <name1> とする	<name5> , <name1> = <name1> , ( <name5> - <name4> * <name1> )	<name5> , <name1> = <name1> , <name5> - <name4> * <name1>
<name2> の要素を右に <val1> 個、回転する	<name2> . rotate ( <val1> )	not <name2> . rotate ( <val1> )
<name1> の <name5> 番目が -1 と等しくないとき、	if <name1> [ <name5> ] != - 1 :	for <name1> [ <name5> ] != - 1 :
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name5> とする	<name3> , <name4> , <name5> = map ( int , <name2> ( ) . split ( ) )	<name3> , <name4> , <name5> = map ( int , <name2> ( ) . split ( ) )
<name3> の <name2> 番目が <name5> と等しいとき、 <blk> ( <name5> 、空列 ) の組を返す </blk>	if <name3> [ <name2> ] == <name5> : <blk> return ( <name5> , [ ] ) </blk>	\ if <name3> [ <name2> ] == <name5> : <blk> return ( <name5> , [ ] ) </blk>
( 、つまり偽 ) からなる列の <name1> に <val6> を加えた値回分の列を <name4> とする	<name4> = [ False ] * ( <name1> + <val6> )	<name4> = [ False ] * ( <name1> + <val6> )
<name6> が <name1> より大きくかつ <name6> が <name2> 以下のとき、	if <name6> > <name1> and <name6> <= <name2> :	> if <name6> > <name1> and <name6> <= <name2> :
<name6> の末尾に <val5> に <name4> に <val3> を加えた値を掛けた値を追加する	<name6> . append ( <val5> * ( <name4> + <val3> ) )	<name3> . append ( <val5> * ( <name4> + <val3> ) )
<name2> 内の <val1> を <val3> で置き換えた文字列を <name2> とする	<name2> = <name2> . replace ( <val1> , <val3> )	<name2> = <name2> . replace ( <val1> , <val3> )
<name6> の <name1> 番目が <name5> と等しくない間、次を繰り返す	while <name6> [ <name1> ] != <name5> :	del <name6> [ <name1> ] != <name5> :
<name6> . <name5> ( <name4> ) に -1 を掛けた値を出力する	print ( <name6> . <name5> ( <name4> ) * ( - 1 ) )	str ( <name6> . <name5> ( <name4> ) * ( - 1 ) )
<name4> の <val6> 番目、 <name4> の先頭、 <name4> の <val2> 番目、 <name4> の <val3> 番目、 <name4> の <val1> 番目、 <name4> の <val5> 番目を <name4> の先頭、 <name4> の <val5> 番目、 <name4> の <val2> 番目、 <name4> の <val3> 番目、 <name4> の <val6> 番目、 <name4> の <val1> 番目とする	<name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] = <name4> [ <val6> ] , <name4> [ 0 ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val1> ] , <name4> [ <val5> ]	( <name4> [ 0 ] , <name4> [ <val5> ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val6> ] , <name4> [ <val1> ] = <name4> [ <val6> ] , <name4> [ 0 ] , <name4> [ <val2> ] , <name4> [ <val3> ] , <name4> [ <val1> ] , <name4> [ <val5> ]
<name5> を空白で分割した字句列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name5> . split ( )	<name3> , <name4> = <name5> . split ( )
<val4> に <name6> を掛けた値を <name1> とする	<name1> = <val4> * <name6>	<name2> <name1> = <val4> * <name6>
<name5> の <name4> 個までのコンビネーションを順に <name2> として、繰り返す	for <name2> in combinations ( <name5> , <name4> ) :	( <name2> in ( <name5> , <name4> ) :
<name3> の <name6> 番目に <name2> の <name6> 番目を加えた値を <name1> とする	<name1> = <name3> [ <name6> ] + <name2> [ <name6> ]	<name1> = <name3> [ <name6> ] + <name2> [ <name6> ]
<name1> の先頭の先頭が <name4> と等しくないとき <name1> の先頭の <val6> 番目、そうでなければ -1 を返す	return <name1> [ <val6> ] [ <val6> ] if <name1> [ <val6> ] [ <val6> ] != <name4> else - 1	x return <name1> [ <val6> ] [ <val6> ] if <name1> [ <val6> ] [ <val6> ] != <name4> else - 1
<name6> を <name2> に <val4> を掛けた値だけ左シフトする	<name6> << = ( <name2> * <val4> )	<name6> << = ( <name2> * <val4> )
<name1> の <name2> 番目から、つまり末尾までの部分列の先頭が <name4> で始まるとき、	if <name1> [ <name2> : ] . startswith ( <name4> ) :	if ( <name1> [ <name2> : ] . startswith ( <name4> ) :
<name3> の <name6> から <val4> を引いた値番目の <name5> 番目を <val4> だけ増加させる	<name3> [ <name6> - <val4> ] [ <name5> ] += <val4>	<name3> [ <name6> - <val4> ] [ <name5> ] += <val4>
<name3> 、 <name6> 、 <name5> 、 <name4> の日付を <name4> とする	<name4> = <name3> . date ( <name6> , <name5> , <name4> )	<name4> = <name3> . date ( <name6> , <name5> , <name4> )
<name4> の <val3> 番目かつ <name5> ( <name4> )	<name4> [ <val3> ] and <name5> ( <name4> )	<name4> [ <val3> ] and <name5> ( <name4> )
<name3> の <name4> 番目に <name6> の <name4> 番目を加えた値を <name3> の <name4> に <val5> を加えた値番目にする	<name3> [ <name4> + <val5> ] = <name3> [ <name4> ] + <name6> [ <name4> ]	<name3> [ <name4> + <val5> ] = <name3> [ <name4> ] + <name6> [ <name4> ]
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = map ( int , <name5> ( ) . split ( ) )	<name4> = map ( int , <name5> ( ) . split ( ) )
<name2> ( <name3> . <name4> ) を <name3> の <name4> にする	<name3> . <name4> = <name2> ( <name3> . <name4> )	<name3> . <name4> = <name2> ( <name3> . <name4> )
<name1> の <name4> に <name6> を加えた値番目、 <name1> の <name3> に <name6> を加えた値番目を <name1> の <name3> に <name6> を加えた値番目、 <name1> の <name4> に <name6> を加えた値番目とする	<name1> [ <name3> + <name6> ] , <name1> [ <name4> + <name6> ] = <name1> [ <name4> + <name6> ] , <name1> [ <name3> + <name6> ]	<name1> [ <name3> + <name6> ] , <name1> [ <name4> + <name6> ] = <name1> [ <name4> + <name6> ] , <name1> [ <name3> + <name6> ]
真を <name1> の <name5> 番目の <name6> 番目にする	<name1> [ <name5> ] [ <name6> ] = True	( <name1> [ <name5> ] [ <name6> ] = True )
<name4> の階乗を <name1> とする	<name1> = factorial ( <name4> )	<name2> = math . factorial ( <name4> )
0 から <val6> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val6> ) :	for <name2> in range ( <val6> ) :
<name5> が <name6> より小さくまたは <name1> が <name3> より大きいとき、	if <name5> < <name6> or <name1> > <name3> :	continue <name5> < <name6> or <name1> > <name3> :
<name6> のキーと値の集まりを順に <name4> 、 <name5> 、 <name2> として、繰り返す	for <name4> , <name5> , <name2> in <name6> . items ( ) :	( <name4> , <name5> , <name2> in <name6> . items ( ) :
<name1> の <name2> を <name3> とする	<name3> = <name1> . <name2>	<name2> = <name1> . <name2>
<val5> <name2> <val3> を <name4> とする	<name4> = <val5> <name2> <val3>	<name6> = <val5> <name2> <val3>
<name6> ( <name2> , <name3> ) を <name4> とする	<name4> = <name6> ( <name2> , <name3> )	<name4> = <name6> ( <name2> , <name3> )
0 から <name4> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の列を <name3> とする	<name3> = [ input ( ) for <name1> in range ( <name4> ) ]	<name3> = [ input ( ) for <name1> in range ( <name4> ) ]
<name4> の <val6> 番目のとき、	if <name4> [ <val6> ] :	[ if <name4> [ <val6> ] :
<name5> の <val1> に ( -1 ) からなる列の <name2> に <val3> を加えた値回分の列を挿入する	<name5> . insert ( <val1> , [ - 1 ] * ( <name2> + <val3> ) )	<name5> . insert ( <val1> , [ - 1 ] * ( <name2> + <val3> ) )
<name1> の末尾に ( <name4> 、 <name2> に <val5> を加えた値、 <val6> ) の組を追加する	<name1> . append ( ( <name4> , <name2> + <val5> , <val6> ) )	<name1> . append ( ( <name4> , <name2> + <val5> , <val6> ) )
<name4> に <name3> を加えた値を出力する	print ( <name4> + <name3> )	print ( <name4> + <name3> )
<name5> が <name3> の長さと等しくなければならない	assert ( <name5> == len ( <name3> ) )	sep = <name5> == len ( <name3> )
<name6> が <val4> と等しいとき、	if <name6> == <val4> :	: if <name6> == <val4> :
<name2> . <name4> ( <name5> , <name6> . <name3> - <name1> . <name3> ) の絶対値を <name1> とする	<name1> = abs ( <name2> . <name4> ( <name5> , <name6> . <name3> - <name1> . <name3> ) )	<name1> = abs ( <name2> . <name4> ( <name5> , <name6> . <name3> - <name1> . <name3> ) )
<name1> が <name6> の総和より大きいとき、	if <name1> > sum ( <name6> ) :	for <name1> in <name1> > sum ( <name6> ) :
<name1> に <name6> を加えた値を <val5> だけ右シフトした値を <name4> とする	<name4> = ( <name1> + <name6> ) >> <val5>	<name4> = ( <name1> + <name6> ) >> <val5>
<name5> の <name3> 番目に <val4> を加えた値を <name2> とする	<name2> = <name5> [ <name3> ] + <val4>	( <name2> = <name5> [ <name3> ] + <val4> )
<name4> ( <name5> [ <name6> ] ) を <name2> とするを <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name2> = <name4> ( <name5> [ <name6> ] )	<name5> [ <name6> ] = <name2> = <name4> ( <name5> [ <name6> ] )
<name3> の <name2> の <name4> 番目の末尾に <name5> を追加する	<name3> . <name2> [ <name4> ] . append ( <name5> )	<name2> . <name2> [ <name4> ] . append ( <name5> )
<name3> が <val4> より大きくかつ <name6> が <val4> より大きい間、次を繰り返す	while <name3> > <val4> and <name6> > <val4> :	del <name3> > <val4> and <name6> > <val4> :
<name2> ( ) を順に <name6> として、繰り返す	for <name6> in <name2> ( ) :	. for <name6> in <name2> ( ) :
<val2> <name3> <val5> を <name6> とする	<name6> = <val2> <name3> <val5>	( <name6> = <val2> <name3> <val5> )
<name6> 内の <name4> の <val1> 番目から、つまり末尾までの部分列と等しい要素を取り除く	<name6> . remove ( <name4> [ <val1> : - 1 ] )	not <name6> . remove ( <name4> [ <val1> : ] )
<name1> が <name4> より大きいとき、 <blk> 繰り返しを中断する </blk>	if <name1> > <name4> : <blk> break </blk>	if <name1> > <name4> : <blk> break </blk>
<name3> の整数値に <name5> の整数値を加えた値を <name2> とする	<name2> = int ( <name3> ) + int ( <name5> )	<name2> = int ( <name3> ) + int ( <name5> )
<name4> に <name6> を <name3> で割った値を加えた値を <name2> とする	<name2> = <name4> + <name6> / <name3>	<name2> = <name4> + <name6> / <name3>
<name3> の末尾に <name4> を英大文字に変換した文字列を追加する	<name3> . append ( <name4> . upper ( ) )	<name3> . append ( <name4> . upper ( ) )
<name3> の <val1> 乗を出力する	print ( <name3> ** <val1> )	<name3> print ( <name3> ** <val1> )
( <val3> ) からなる列の <name6> の整数値回分の列を追加して <name5> を拡張する	<name5> . extend ( [ <val3> ] * int ( <name6> ) )	<name2> . <name5> . extend ( [ <val3> ] * int ( <name6> ) )
<name6> の長さが <name2> の長さより大きいとき、	if len ( <name6> ) > len ( <name2> ) :	list ( <name6> ) > len ( <name2> ) :
lambdax : <name5> [ <val3> ] を <name6> として <name4> . <name1> ( ) の最大値の <val2> 番目に <val4> を加えた値に <name1> に <val3> を加えた値の文字列を加えた値を出力する	print ( max ( <name4> . <name1> ( ) , <name6> = lambda <name5> : <name5> [ <val3> ] ) [ <val2> ] + <val4> + str ( <name1> + <val3> ) )	[ print ( max ( <name4> , <name1> ( ) ) [ <val2> ] ) + <val4> + str ( <name1> + <val3> ) , <name6> = lambda <name5> : <name5> [ <val3> ] )
<name3> . <name1> ( <val6> )	<name3> . <name1> ( <val6> )	( <name3> . <name1> ( <val6> ) )
<name6> を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = [ int ( <name5> ) for <name5> in <name6> . split ( ) ]	<name4> , <name2> = [ int ( <name5> ) for <name5> in <name6> . split ( ) ]
\ <name4> が <val3> と等しいとき、\	\ if <name4> == <val3> : \	'\\\\' \ if <name4> == <val3> :
lunch 、 <name4> のとき <val2> に <name3> を掛けた値を <name4> で割った商、そうでなければ <val1> を出力する	print ( 'lunch' , <val2> * <name3> // <name4> if <name4> else <val1> )	print ( dict , <val2> * <name3> // <name4> if <name4> else <val1> )
<name6> の <name4> を <name1> の <name2> にする	<name1> . <name2> = <name6> . <name4>	not <name1> . <name2> = <name6> . <name4>
<name6> の <val2> 番目を <name4> の <val2> 番目にする	<name4> [ <val2> ] = <name6> [ <val2> ]	<name4> [ <val2> ] = <name6> [ <val2> ]
<val5> を <name3> として <name1> をソートする	<name1> . sort ( <name3> = <val5> )	<name3> . sort ( <name3> = <val5> )
<name1> が <name2> と等しいかどうかが <val4> と等しくない間、次を繰り返す	while not <name1> == <name2> == <val4> :	del ( <name1> == <name2> == <val4> ) :
( 、つまり偽 ) からなる列の <val4> 回分の列を <name6> とする	<name6> = [ False ] * <val4>	<name6> = [ False ] * <val4>
( <val6> 、 <val4> ) からなる列に 0 から <name1> の <name5> の長さ未満までの数列の各要素を <name3> とし、 <name1> . <name1> ( <name3> ) かつ <name3> が <val2> 以上のときの <name3> の列を加えた値を <name1> の <name2> にする	<name1> . <name2> = [ <val6> , <val4> ] + [ <name3> for <name3> in range ( len ( <name1> . <name5> ) ) if <name1> . <name1> ( <name3> ) and <name3> >= <val2> ]	<name6> . <name1> . <name2> = [ <val6> , <val4> ] + [ <name3> for <name3> in range ( len ( <name1> . <name5> ) ) if <name1> . <name3> ( ) ) and <val2> >= <val2> ]
<name2> の <val4> 個までの重複コンビネーションを <name3> とする	<name3> = combinations_with_replacement ( <name2> , <val4> )	else = itertools ( combinations ( <name2> , <val4> ) )
<name6> から <name5> を引いた値のリストの最小値を出力する	print ( min ( list ( <name6> - <name5> ) ) )	print ( min ( list ( <name6> - <name5> ) ) )
<name2> . <name4> ( <name1> , <name3> )	<name2> . <name4> ( <name1> , <name3> )	print ( <name2> . <name4> ( <name1> , <name3> ) )
( <val5> 、 <val4> 、 <val3> 、 <val2> ) の組を順に <name6> として、繰り返す	for <name6> in ( <val5> , <val4> , <val3> , <val2> ) :	in ( <val5> , <val4> , <val3> , <val2> ) :
<name3> の <name5> 番目の <name6> 番目に <name4> を加えた値が <name3> の <name5> に <val1> を加えた値番目の <name6> に <val1> を加えた値番目より小さいとき、 <blk> <name3> の <name5> 番目の <name6> 番目に <name4> を加えた値を <name3> の <name5> に <val1> を加えた値番目の <name6> に <val1> を加えた値番目にする </blk>	if <name3> [ <name5> ] [ <name6> ] + <name4> < <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] : <blk> <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] = <name3> [ <name5> ] [ <name6> ] + <name4> </blk>	\ <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] = <name3> [ <name5> ] [ <name6> ] + <name4> < <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] : <blk> <name3> [ <name5> ] [ <name6> + <val1> ] + <name4> </blk>
<name3> の <name5> 番目が <name3> の <name1> 番目より小さいとき、	if <name3> [ <name5> ] < <name3> [ <name1> ] :	for <name3> [ <name5> ] < <name3> [ <name1> ] :
<name1> 、 <name5> の最小値を <name3> とする	<name3> = min ( <name1> , <name5> )	<name3> = min ( <name1> , <name5> )
( ( <val1> 、 <name4> 、 <name2> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <val1> , <name4> , <name2> ) ]	<name6> = [ ( <val1> , <name4> , <name2> ) ]
<name4> の <val3> に ( <val1> ) からなる列の <name2> に <val5> を加えた値回分の列を挿入する	<name4> . insert ( <val3> , [ <val1> ] * ( <name2> + <val5> ) )	<name5> . insert ( <val3> , [ <val1> ] * ( <name2> + <val5> ) )
<name1> の組を <name3> とする	<name3> = tuple ( <name1> )	( <name3> = tuple ( <name1> ) )
<name5> 、 <name3> 、 <name2> を出力する	print ( <name5> , <name3> , <name2> )	print ( <name5> , <name3> , <name2> )
<name1> . <name5> . <name4> ( <name2> . <name5> , <name2> . <name6> ) に <name1> . <name6> . <name4> ( <name2> . <name5> , <name2> . <name6> ) を掛けた値を <name3> とする	<name3> = <name1> . <name5> . <name4> ( <name2> . <name5> , <name2> . <name6> ) * <name1> . <name6> . <name4> ( <name2> . <name5> , <name2> . <name6> )	<name3> = <name1> . <name5> . <name4> ( <name2> . <name5> , <name2> . <name6> ) * <name1> . <name6> . <name4> ( <name2> . <name5> , <name2> . <name6> )
0 から <val1> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name5> とする	<name5> = [ [ ] for <name6> in range ( <val1> ) ]	<name5> = [ [ ] for <name6> in range ( <val1> ) ]
<name4> から <val5> を引いた値を <name2> の <name4> に <val5> を加えた値番目にする	<name2> [ <name4> + <val5> ] = <name4> - <val5>	<name1> [ <name4> + <val5> ] = <name4> - <val5>
<val1> の <val6> 乗から <val2> を引いた値を <name5> とする	<name5> = <val1> ** <val6> - <val2>	<name5> = <val1> ** <val6> - <val2>
<name6> を <name5> の <name2> 番目だけ増加させる	<name6> += <name5> [ <name2> ]	( <name6> += <name5> [ <name2> ] )
<name5> が <val2> より小さくかつ <name4> が <val2> より小さくかつ <name1> が <val2> より小さくまたは <name5> が <val2> より大きくかつ <name4> が <val2> より大きくかつ <name1> が <val2> より大きいとき、	if ( ( <name5> < <val2> and <name4> < <val2> and <name1> < <val2> ) or ( <name5> > <val2> and <name4> > <val2> and <name1> > <val2> ) ) :	isinstance ( <name5> < <val2> and <name4> < <val2> and <name1> < <val2> ) or ( <name5> > <val2> and <name4> > <val2> and <name1> > <val2> ) :
<name1> の <name6> の x 座標から <name1> の <name5> の x 座標を引いた値と <name1> の <name6> の y 座標から <name1> の <name5> の y 座標を引いた値のノルムを <name2> とする	<name2> = hypot ( <name1> . <name6> . x - <name1> . <name5> . x , <name1> . <name6> . y - <name1> . <name5> . y )	<name2> = hypot ( <name1> . <name6> . x - <name1> . <name5> . x , <name1> . <name6> . <name5> . y )
<name6> の <name3> 番目が <name1> に含まれるとき、	if <name6> [ <name3> ] in <name1> :	if <name6> [ <name3> ] in <name1> :
<name6> の <name3> 番目を順に <name1> として、繰り返す	for <name1> in <name6> [ <name3> ] :	. for <name1> in <name6> [ <name3> ] :
<name2> の <name1> の <name3> の末尾に <name5> を追加する	<name2> . <name1> . <name3> . append ( <name5> )	. <name2> . <name1> . <name3> . append ( <name5> )
<name2> の長さが <val4> と等しくまたは <val3> のとき、	if len ( <name2> ) == <val4> or <val3> :	if ( len ( <name2> ) == <val4> ) or <val3> :
<name5> の <name3> 番目が <val1> と等しくかつ <name5> の <name4> から <val2> を引いた値番目が <val6> と等しいとき、	if <name5> [ <name3> ] == <val1> and <name5> [ <name4> - <val2> ] == <val6> :	list ( <name5> [ <name3> ] == <val1> and <name5> [ <name4> - <val2> ] == <val6> :
<name3> の先頭、 - <name5> の最大値を <name3> の <val4> 番目にする	<name3> [ <val4> ] = max ( <name3> [ <val4> ] , - <name5> )	else [ <val4> ] = max ( <name3> [ <val4> ] , - <name5> )
<name1> から <name6> を引いた値が <val3> に <name5> を掛けた値以上かどうかを返す	return <name1> - <name6> >= <val3> * <name5>	yield <name1> - <name6> >= <val3> * <name5>
<name2> が <name1> を <val4> で割った商より小さいとき、	if <name2> < <name1> // <val4> :	: if <name2> < <name1> // <val4> :
<name4> の先頭の <val3> 番目に <name4> の <val1> 番目の <val3> 番目を加えた値を <val1> で割った値を <name5> とする	<name5> = ( <name4> [ 0 ] [ <val3> ] + <name4> [ <val1> ] [ <val3> ] ) / <val1>	<name5> = ( <name4> [ <val3> ] [ <val3> ] + <name4> [ <val1> ] [ <val3> ] ) / <val1>
0 から <val2> 未満までの数列の各要素を <name4> とし、 0 から <val5> 未満までの数列の各要素を <name3> とし、、つまり偽の列の列を <name6> とする	<name6> = [ [ False for <name3> in range ( <val5> ) ] for <name4> in range ( <val2> ) ]	<name6> = [ [ False for <name3> in range ( <val5> ) ] for <name4> in range ( <val2> ) ]
<name2> の -1 を取り出した値を <name6> とする	<name6> = <name2> . pop ( - 1 )	<name6> = <name2> . pop ( - 1 )
 を間に入れて <name5> ( <name4> , <name1> ( <name4> ) ) の各要素を <name2> とし、 <name2> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name2> ) for <name2> in <name5> ( <name4> , <name1> ( <name4> ) ) ] ) )	print ( '' . join ( [ str ( <name2> ) for <name2> in <name5> ( <name4> , <name1> ( <name4> ) ) ] ) )
<name6> が <val3> と等しいとき、 <blk> 区切りなしで <name5> 、 <val1> 、 <name4> を出力する </blk>	if <name6> == <val3> : <blk> print ( <name5> , <val1> , <name4> , sep = '' ) </blk>	== <name6> == <val3> : <blk> print ( <name5> , <val1> , <name4> ) </blk>
<name3> に <name5> を加えた値を <val1> で割った値の整数値を <name6> とする	<name6> = int ( ( <name3> + <name5> ) / <val1> )	<name6> = int ( ( <name3> + <name5> ) / <val1> )
<name6> の <name5> の <name4> 番目を <name2> とする	<name2> = <name6> . <name5> [ <name4> ]	<name2> = <name6> [ <name5> . <name4> ]
<name4> から <name2> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name4> , <name2> ) :	for <name6> in range ( <name4> , <name2> ) :
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name5> とする	<name3> , <name6> , <name5> = map ( int , <name1> ( ) . split ( ) )	<name3> , <name6> , <name5> = map ( int , <name1> ( ) . split ( ) )
<name4> の <name5> の <name6> の <name2> 番目の末尾に <name6> を追加する	<name4> . <name5> [ <name6> . <name2> ] . append ( <name6> )	<name2> . <name5> [ <name6> . <name2> ] . append ( <name6> )
<name1> の末尾に <name4> の浮動小数点数を追加する	<name1> . append ( float ( <name4> ) )	<name1> . append ( float ( <name4> ) )
<name6> でないとき、 <blk> ( <name6> 、 <val3> ) からなる列を返す </blk>	if not <name6> : <blk> return [ <name6> , <val3> ] </blk>	try : <blk> return [ <name6> , <val3> ] </blk>
( <name1> ) からなる列の <name2> の <name4> 回分の列を <name5> とする	<name5> = [ <name1> ] * <name2> . <name4>	<name5> = [ <name1> ] * <name2> . <name4>
<name4> ( <name6> ) のとき、 <blk> 無限の整数列を <val3> だけ増加させる </blk>	if <name4> ( <name6> ) : <blk> count += <val3> </blk>	for if <name4> ( <name6> ) : <blk> count += <val3> </blk>
0 から <name5> から <val3> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> - <val3> ) :	for <name2> in range ( <name5> - <val3> ) :
<name3> が <name2> から <val1> を引いた値より小さいとき、	if <name3> < <name2> - <val1> :	while <name3> < <name2> - <val1> :
<name4> の <name6> に <val1> を加えた値番目、 <name4> の <name6> 番目の最大値を <name4> の <name6> に <val1> を加えた値番目にする	<name4> [ <name6> + <val1> ] = max ( <name4> [ <name6> + <val1> ] , <name4> [ <name6> ] )	<name4> [ <name6> + <val1> ] = max ( <name4> [ <name6> + <val1> ] , <name4> [ <name6> ] )
<name6> の長さに <val4> を加えた値を <name1> とする	<name1> = len ( <name6> ) + <val4>	<name1> = len ( <name6> ) + <val4>
<name4> の <name3> の <name6> 番目が、つまり偽と等しいとき、つまり真、そうでなければ、つまり偽を <name4> の <name3> の <name6> 番目にする	<name4> . <name3> [ <name6> ] = True if <name4> . <name3> [ <name6> ] == False else False	<name2> . <name4> [ <name3> . <name6> ] = True if <name4> . <name3> [ <name6> ] == False else False
<name1> . <name4> ( ) を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name1> . <name4> ( )	<name3> , <name5> = <name1> . <name4> ( )
<name3> と <val6> の論理積のとき、	if <name3> & <val6> :	if <name3> & <val6> :
<name1> の <val2> 番目が <val6> と等しいとき、	if <name1> [ <val2> ] == <val6> :	if <name1> [ <val2> ] == <val6> :
<name2> が <name4> に含まれるとき、 <blk> <name4> の <name2> 番目の末尾に <name1> の整数値を追加する </blk>	if <name2> in <name4> : <blk> <name4> [ <name2> ] . append ( int ( <name1> ) ) </blk>	for if <name2> in <name4> : <blk> <name4> [ <name2> ] . append ( int ( <name1> ) ) </blk>
<name5> ( <name3> ) を順に <name1> として、繰り返す	for <name1> in <name5> ( <name3> ) :	: for <name1> in <name5> ( <name3> ) :
<name6> ( <name1> - <name4> , <name5> - <name3> ) を <name2> とする	<name2> = <name6> ( <name1> - <name4> , <name5> - <name3> )	<name2> = <name6> ( <name1> - <name4> , <name5> - <name3> )
0 から <name5> に <name1> を掛けた値に <val4> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> * <name1> + <val4> ) :	: <name2> in range ( <name5> * <name1> + <val4> ) :
<name6> の <name5> 番目、 <name5> を <name2> 、 <name4> とする	<name2> , <name4> = <name6> [ <name5> ] , <name5>	<name2> , <name4> = <name6> [ <name5> ] , <name5>
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name6> とする <name1> を <val5> だけ減少させる <name4> を <val5> だけ減少させる	<name1> , <name4> , <name6> = map ( int , <name2> ( ) . split ( ) ) <name1> -= <val5> <name4> -= <val5>	<name1> , <name4> , <name6> = map ( int , <name2> ( ) . split ( ) ) <name1> -= <val5> <name4> -= <val5>
<name6> ( <name1> . <name5> . <name2> - <name4> . <name5> . <name2> , <name1> . <name5> . <name3> - <name4> . <name5> . <name3> ) を <name3> とする	<name3> = <name6> ( <name1> . <name5> . <name2> - <name4> . <name5> . <name2> , <name1> . <name5> . <name3> - <name4> . <name5> . <name3> )	else = <name6> ( <name1> . <name5> . <name2> - <name4> . <name5> . <name2> , <name1> . <name5> . <name3> - <name4> . <name5> . <name3> )
<name2> の <name4> 番目のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name2> [ <name4> ] : <blk> continue </blk>	continue </blk> if <name2> [ <name4> ] : <blk> continue </blk>
( <name2> 、 <name5> ) の組を <name6> の <name1> から <val3> を引いた値番目にする	<name6> [ <name1> - <val3> ] = ( <name2> , <name5> )	<name4> [ <name1> - <val3> ] = ( <name2> , <name5> )
- <name2> を <name2> とする - <name5> を <name5> とする - <name4> を <name4> とする	<name2> = - <name2> <name5> = - <name5> <name4> = - <name4>	<name1> = - <name2> <name5> = - <name5> <name4> = - <name4>
<name4> ( <name2> , <name5> , <name1> ) のとき、	if <name4> ( <name2> , <name5> , <name1> ) :	list <name4> ( <name2> , <name5> , <name1> ) :
<name2> を <name1> の値の集まりにする	<name1> . <name2> = <name2>	( <name1> . values = <name2> )
<name5> の <name1> に対応する値、もし存在しなければ <val6> を <name4> とする	<name4> = <name5> . <name1> . get ( <val6> )	<name4> = <name5> . <name1> . get ( <val6> )
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )	<name3> , <name5> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )
0 から <val6> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列の列を <name3> とする	<name3> = [ input ( ) for <name2> in range ( <val6> ) ]	<name3> = [ input ( ) for <name2> in range ( <val6> ) ]
<name6> の <name3> 番目の <name3> 番目が <val1> より小さいとき、	if <name6> [ <name3> ] [ <name3> ] < <val1> :	list ( <name6> [ <name3> ] [ <name3> ] < <val1> ) :
<name2> に ( <name1> 、 <name5> ) の組を追加した集まり	<name2> . add ( ( <name1> , <name5> ) )	<name2> . add ( ( <name1> , <name5> ) )
<name3> かつ <name3> の末尾の <val4> 番目が <name6> より大きい間、次を繰り返す	while <name3> and <name3> [ - 1 ] [ <val4> ] > <name6> :	yield <name3> and <name3> [ - 1 ] [ <val4> ] > <name6> :
<name4> ( <name6> + <val5> , <name2> , <name3> + <val5> , <name1> -1 )	<name4> ( <name6> + <val5> , <name2> , <name3> + <val5> , <name1> - <val5> )	<name3> ( <name4> ( <name6> + <val5> , <name2> , <name3> + <val5> , <name1> - 1 ) )
<name1> の <name3> の <name5> に <val4> を加えた値番目の <name6> 番目に <name1> の <name3> の <name5> から <name6> を引いた値番目の <name6> に <val4> を加えた値番目を加えた値を <name1> の <name3> の <name5> に <val4> を加えた値番目の <name6> に <val4> を加えた値番目にする	<name1> . <name3> [ <name5> + <val4> ] [ <name6> + <val4> ] = <name1> . <name3> [ <name5> + <val4> ] [ <name6> ] + <name1> . <name3> [ <name5> - <name6> ] [ <name6> + <val4> ]	<name2> . <name1> [ <name3> . <name5> + <val4> ] [ <name6> + <val4> ] = <name1> . <name3> [ <name5> + <val4> ] [ <name6> ] + <name1> . <name3> [ <name5> - <val4> ] [ <name6> + <val4> ]
<name4> を <name1> だけ増加させる <name1> を <val6> だけ増加させる	<name4> += <name1> <name1> += <val6>	<name2> += <name1> <name1> += <val6>
<name4> の各要素に <name6> を適用した列のリストを <name3> とする	<name3> = list ( map ( <name6> , <name4> ) )	<name3> = list ( map ( <name6> , <name4> ) )
( <name2> に <name4> に <name1> を掛けた値を <name6> で割った値を加えた値、 <name3> に <name4> に <name5> を掛けた値を <name6> で割った値を加えた値 ) の組を返す	return ( <name2> + <name4> * <name1> / <name6> , <name3> + <name4> * <name5> / <name6> )	insort ( <name2> + <name4> * <name1> / <name6> , <name3> + <name4> * <name5> / <name6> )
<name2> モジュールを用いる	from <name2> import Dict	from <name2> , deque
<name4> の <name2> 番目の <name3> 番目から <name6> の <name2> 番目の <name3> 番目を引いた値を <name5> で割った余りを <name1> の <name2> 番目の <name3> 番目にする	<name1> [ <name2> ] [ <name3> ] = ( <name4> [ <name2> ] [ <name3> ] - <name6> [ <name2> ] [ <name3> ] ) % <name5>	<name2> [ <name2> ] [ <name3> ] = ( <name4> [ <name2> ] [ <name3> ] - <name6> [ <name2> ] [ <name3> ] ) % <name5>
<name5> が <name2> の <name1> より小さい間、次を繰り返す	while <name5> < <name2> . <name1> :	del ( <name5> < <name2> . <name1> ) :
( ( <val6> , <val5> ) ) からなる辞書を <name1> とする	<name1> = { <val6> : <val5> }	<name1> = { <val6> : <val5> }
<name5> 、 -1 を <name3> 、 <name2> とする	<name3> , <name2> = <name5> , - 1	( <name3> , <name2> = <name5> , - 1 )
os . <name2> の <name6> 番目を <name3> だけ増加させる	<name2> [ <name6> ] += <name3>	<name6> [ <name6> ] += <name3>
( ( <val5> 、 <name2> ) からなる列 ) からなる列を <name6> とする	<name6> = [ [ <val5> , <name2> ] ]	else = [ [ <val5> , <name2> ] ]
<name4> から <name2> を引いた値の <val5> 乗に <name6> から <name1> を引いた値の <val5> 乗を加えた値の <val3> 乗を出力する	print ( ( ( <name4> - <name2> ) ** <val5> + ( <name6> - <name1> ) ** <val5> ) ** <val3> )	<val3> print ( ( <name4> - <name2> ) ** <val5> + ( <name6> - <name1> ) ** <val5> ) ** <val3> )
( <val1> 、 <val1> 、 -1 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val1> , <val1> , - <val6> , <val6> ]	<name4> = [ <val1> , <val1> , - <val6> , <val6> ]
<val6> から <name3> を引いた値を出力する	print ( <val6> - <name3> )	print ( <val6> - <name3> )
<name5> の <name6> 番目に <name4> の <val2> 番目を加えた値が <name5> の <name4> の先頭番目より小さくかつ <name5> の <name4> の先頭番目が、つまり無限大を <val3> で割った商より小さいとき、	if <name5> [ <name6> ] + <name4> [ <val2> ] < <name5> [ <name4> [ 0 ] ] and <name5> [ <name4> [ 0 ] ] < inf // <val3> :	list ( <name5> [ <name6> ] + <name4> [ <val2> ] < <name5> [ <name4> [ <val2> ] ] ) and ( <name5> [ <name4> [ 0 ] ] ] < <val3> ) :
<name1> を <name4> の <val2> 番目だけ増加させる	<name1> += <name4> [ <val2> ]	<name1> += <name4> [ <val2> ]
<name1> の <name3> を <name4> だけ減少させる	<name1> . <name3> -= <name4>	<name2> . <name1> -= <name3> -= <name4>
<name5> の <val1> 番目を <name5> の <val4> 番目にする	<name5> [ <val4> ] = <name5> [ <val1> ]	<name4> [ <val4> ] = <name5> [ <val1> ]
<name6> から <name5> を引いた値の <val3> 乗に <name1> から <name4> を引いた値の <val3> 乗を加えた値の平方根を返す	return math . sqrt ( ( <name6> - <name5> ) ** <val3> + ( <name1> - <name4> ) ** <val3> )	assert math . sqrt ( ( <name6> - <name5> ) ** <val3> + ( <name1> - <name4> ) ** <val3> )
<name3> ( <val1> , <val1> , <name5> [ <val1> ] [ <val1> ] , <name6> )	<name3> ( <val1> , <val1> , <name5> [ <val1> ] [ <val1> ] , <name6> )	( <name3> ( <val1> , <val1> , <name5> [ <val1> ] [ <val1> ] , <name6> ) )
<name3> ( <name2> . <name5> [ <val1> : ] )	<name3> ( <name2> . <name5> [ <val1> : ] )	<name3> ( <name2> . <name5> [ <val1> : ] )
<name2> の先頭を <name2> の <val1> 番目にする	<name2> [ <val1> ] = <name2> [ 0 ]	( <name2> [ <val1> ] = <name2> [ 0 ] )
<name2> の <name1> 番目が -1 と等しくないとき、	if <name2> [ <name1> ] != - 1 :	for <name2> [ <name1> ] != - 1 :
<name3> が <name1> より大きいとき、 <blk> <name6> を <val5> から <val5> を <name3> で割った値を引いた値倍にする </blk>	if <name3> > <name1> : <blk> <name6> *= <val5> - <val5> / <name3> </blk>	for if <name3> > <name1> : <blk> <name6> / ( <val5> - <name3> ) </blk>
<name3> の <name5> 番目が <name1> の <name4> 番目と等しくないとき、	if <name3> [ <name5> ] != <name1> [ <name4> ] :	raise <name3> [ <name5> ] != <name1> [ <name4> ] :
<name6> から <name4> を引いた値に <name3> から <name1> を引いた値を掛けた値から <name2> から <name4> を引いた値に <name5> から <name1> を引いた値を掛けた値を引いた値を返す	return ( <name6> - <name4> ) * ( <name3> - <name1> ) - ( <name2> - <name4> ) * ( <name5> - <name1> )	yield ( <name6> - <name4> ) * ( <name3> - <name1> ) - ( <name2> - <name4> ) * ( <name5> - <name1> )
<name1> を <val2> 分の一にする	<name1> /= <val2>	( <name1> // = <val2> )
<name1> の長さが <val5> と等しくないとき <val3> を書式として <name6> 、 <val4> を間に入れて <name1> の各要素に <name2> を適用した列を連結した文字列で整形した文字列を出力する、そうでなければ '{}:' を出力する	print ( <val3> . format ( <name6> , <val4> . join ( map ( <name2> , <name1> ) ) ) ) if len ( <name1> ) != <val5> else print ( { <name6> } : )	<name5> = <val3> . format ( <val3> . format ( <name6> , <val4> . join ( map ( <name2> , <name1> ) ) for <name2> , <name1> in <val5> ) else <val5> )
次は例外に関する条件がある <blk> 入力された文字列の整数値を <name5> とする </blk>	try : <blk> <name5> = int ( input ( ) ) </blk>	: try : <blk> <name5> = int ( input ( ) ) </blk>
<name5> から <name1> を引いた値に <name6> を掛けた値から <name3> から <name2> を引いた値に <name4> を掛けた値を引いた値を <name4> とする	<name4> = ( <name5> - <name1> ) * <name6> - ( <name3> - <name2> ) * <name4>	<name6> = ( <name5> - <name1> ) * <name6> - ( <name3> - <name2> ) * <name4>
<name4> の <name5> が <name1> の <name5> と等しくないとき、	if <name4> . <name5> != <name1> . <name5> :	for <name4> . <name5> != <name1> . <name5> :
<name2> の末尾に ( <name6> 、 <name3> ) からなる列を追加する	<name2> . append ( [ <name6> , <name3> ] )	<name4> . append ( [ <name6> , <name3> ] )
<name3> を <val1> で割った商を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <name3> // <val1>	<name3> [ <val5> ] = <name3> // <val1>
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name6> 、 <name2> 、 <name3> とする	<name6> , <name2> , <name3> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name2> , <name3> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name3> の <name5> 番目、 <name3> の <name5> から <name2> を引いた値番目に <name6> を加えた値の最大値を <name3> の <name5> 番目にする	<name3> [ <name5> ] = max ( <name3> [ <name5> ] , <name3> [ <name5> - <name2> ] + <name6> )	<name3> [ <name5> ] = max ( <name3> [ <name5> ] , <name3> [ <name5> - <name2> ] + <name6> )
<name4> を空白で分割した字句列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name4> . split ( )	<name2> , <name3> = <name4> . split ( )
( <name2> - <name6> ) . <name1> ( ) に <name3> から <name6> を引いた値を掛けた値を <name4> とする	<name4> = ( <name2> - <name6> ) . <name1> ( ) * ( <name3> - <name6> )	<name4> = [ <name2> - <name6> ] * ( <name1> ( ) ) * ( <name3> - <name6> )
( ( <name4> から <name2> を引いた値 ) からなる列の 0 から <name1> に <val3> を加えた値未満までの数列の各要素を <name6> とし、 <name5> に <val3> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <name4> - <name2> ] * [ ( <name5> + <val3> ) for <name6> in range ( <name1> + <val3> ) ] ]	<name1> = [ [ <name4> - <name2> ] * [ ( <name5> + <val3> ) for <name6> in range ( <name1> + <val3> ) ] ]
<name5> の <name1> 番目を <name2> とする <name5> の <name3> 番目を <name6> とする <name2> の <name3> 番目から <name2> の <name1> 番目を引いた値を <name4> とする	<name2> = <name5> [ <name1> ] <name6> = <name5> [ <name3> ] <name4> = <name2> [ <name3> ] - <name2> [ <name1> ]	<name6> = <name5> [ <name1> ] <name4> = <name5> [ <name3> ] <name4> = <name2> [ <name3> ] - <name2> [ <name1> ]
<name1> の <name4> に [ MASK ] を書き込むを <name5> とする	<name5> = <name1> . <name4> . <name5>	<name1> . <name5> = <name1> . <name4> . <name5>
<name4> の <name5> から読み込んだ一行を <name2> とする	<name2> = <name4> . <name5> . <name2>	<name6> . <name2> = <name4> . <name5> . <name2>
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name1> とする	<name1> = [ [ ] for <name2> in range ( <name5> ) ]	<name6> = [ [ ] for <name2> in range ( <name5> ) ]
Y を <name4> とする	<name4> = 'Y'	<name4> = 'ON'
<name3> の末尾に ( <name5> 、 <name4> 、真 ) の組を追加する	<name3> . append ( ( <name5> , <name4> , True ) )	<name4> . append ( ( <name5> , <name4> , True ) )
<name3> から <name1> を引いた値が <name2> 以上の間、次を繰り返す	while <name3> - <name1> >= <name2> :	while <name3> - <name1> >= <name2> :
<name6> の長さが <val2> より大きい間、次を繰り返す	while len ( <name6> ) > <val2> :	yield ( len ( <name6> ) > <val2> ) :
<name3> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = map ( int , <name3> . split ( ) )	<name1> , <name5> = map ( int , <name3> . split ( ) )
<name1> の <name3> 番目が <val2> より小さいとき、	if <name1> [ <name3> ] < <val2> :	: if <name1> [ <name3> ] < <val2> :
<val2> を <name4> とする <val2> を <name1> とする	<name4> = <val2> <name1> = <val2>	<name1> = <name4> = <val2> <name1> = <val2>
<name4> の <name3> 番目の総和を <name4> の <name3> 番目の <name5> 番目にする	<name4> [ <name3> ] [ <name5> ] = ( sum ( <name4> [ <name3> ] ) )	<name6> [ <name3> ] [ <name5> ] = sum ( <name4> [ <name3> ] )
<name3> 、 <name6> の要素をそれぞれ組にした列の各要素を <name2> 、 <name4> とし、 <name2> に <name4> を掛けた値の列の総和を <name1> とする	<name1> = sum ( [ <name2> * <name4> for <name2> , <name4> in zip ( <name3> , <name6> ) ] )	<name1> = sum ( [ <name2> * <name4> for <name2> , <name4> in zip ( <name3> , <name6> ) ] )
<name4> <name2> .	<name4> <name2> .	<name1> <name2> .
改行せずに <name4> の <name2> 番目の <name5> の長さから <val1> を引いた値を <name4> の <name2> 番目の長さで割った余り番目を出力する	print ( <name4> [ <name2> ] [ ( len ( <name5> ) - <val1> ) % len ( <name4> [ <name2> ] ) ] , end = '' )	print ( <name4> [ <name2> ] [ len ( <name5> ) - <val1> ) % len ( <name4> [ <name2> ] ) ] , end = '' )
入力された文字列を <val2> で分割した字句列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = input ( ) . split ( <val2> )	<name3> = input ( ) . split ( <val2> )
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name3> とする	<name3> = list ( map ( int , input ( ) . strip ( ) . split ( ) ) )	<name3> = list ( map ( int , input ( ) . strip ( ) . split ( ) ) )
<val1> を <name6> の <name5> に <val1> を加えた値番目の <name3> に <val1> を加えた値番目にする	<name6> [ <name5> + <val1> ] [ <name3> + <val1> ] = <val1>	<name4> [ <name5> + <val1> ] [ <name3> + <val1> ] = <val1>
0 から <name2> 未満までの数列の各要素を <name6> とし、 ( <name6> に <name6> を <val5> で割った余りを加えた値に <val3> を加えた値、 <name6> に <name6> を <val5> で割った余りを加えた値に <val5> を加えた値 ) の組の列を <name1> とする	<name1> = ( [ ( <name6> + ( <name6> % <val5> ) + <val3> , <name6> + ( <name6> % <val5> ) + <val5> ) for <name6> in range ( <name2> ) ] )	<name6> = [ ( <name6> + ( <name6> % <val5> ) + <val3> , <name6> + ( <name6> % <val5> ) + <val5> ) for <name6> in range ( <name2> ) ]
<name4> に <val1> を加えた値が <name2> の長さより小さくかつ <name6> の <name2> の <name4> 番目番目が <name6> の <name2> の <name4> に <val1> を加えた値番目番目より小さいとき、	if <name4> + <val1> < len ( <name2> ) and <name6> [ <name2> [ <name4> ] ] < <name6> [ <name2> [ <name4> + <val1> ] ] :	for <name4> + <val1> < len ( <name2> ) and <name6> [ <name2> [ <name4> ] ] < <name6> [ <name2> [ <name4> + <val1> ] ] :
<name1> の <name2> 番目が <val6> と等しいとき、	if <name1> [ <name2> ] == <val6> :	: if <name1> [ <name2> ] == <val6> :
<name5> に <name3> から <name1> を引いた値を掛けた値を <name2> とする	<name2> = <name5> * ( <name3> - <name1> )	( <name2> = <name5> * ( <name3> - <name1> ) )
<name2> ( <name6> , <name4> , <name5> )	<name2> ( <name6> , <name4> , <name5> )	set ( <name2> ( <name6> , <name4> , <name5> ) )
<name5> に <name6> を加えた値、 <name3> に <name2> を加えた値を <name1> 、 <name4> とする	<name1> , <name4> = <name5> + <name6> , <name3> + <name2>	<name1> , <name4> = <name5> + <name6> , <name3> + <name2>
<name1> のキーと値の集まりを順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name1> . items ( ) :	. for <name3> , <name6> in <name1> . items ( ) :
<name6> の <name5> に <name2> [ <name3> ] を加えた値に <val1> を加えた値番目の <name4> に <name6> の <name3> 番目を加えた値に <val1> を加えた値番目でないとき、	if not <name6> [ <name5> + <name2> [ <name3> ] + <val1> ] [ <name4> + <name6> [ <name3> ] + <val1> ] :	isinstance ( <name6> [ <name5> + <name2> [ <name3> ] + <val1> ] [ <name4> + <name6> [ <name3> ] + <val1> ] ) :
( <val1> ) からなる列の <name2> の <name4> 回分の列を <name6> とする	<name6> = [ <val1> ] * <name2> . <name4>	<name6> = [ <val1> ] * <name2> . <name4>
<name1> の <name2> 番目と <name1> の <name6> 番目を入れ替える	<name1> [ <name2> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name2> ]	<name4> [ <name2> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name2> ]
<name4> ( <name6> , <name5> ( <name1> , <name2> ) ) を <name3> とする	<name3> = <name4> ( <name6> , <name5> ( <name1> , <name2> ) )	<name6> = <name4> ( <name6> , <name5> ( <name1> , <name2> ) )
<name2> の <name3> 番目の <name5> に <val6> を加えた値番目を <name2> の <name3> 番目の <name5> 番目だけ増加させる	<name2> [ <name3> ] [ <name5> + <val6> ] += <name2> [ <name3> ] [ <name5> ]	[ <name2> [ <name3> ] [ <name5> + <val6> ] += <name2> [ <name3> ] [ <name5> ]
<name4> 、 <name1> から <name5> を引いた値に <name3> を掛けた値の最大値を <name4> とする	<name4> = max ( <name4> , ( <name1> - <name5> ) * <name3> )	<name4> = max ( <name4> , ( <name1> - <name5> ) * <name3> )
( 、つまり真 ) からなる列の <val6> 回分の列を <name3> とする	<name3> = [ True ] * <val6>	<name3> = [ True ] * <val6>
<name3> の末尾に <name1> の <name5> に <val4> を加えた値番目を追加する	<name3> . append ( <name1> [ <name5> + <val4> ] )	<name3> . append ( <name1> [ <name5> + <val4> ] )
<name1> の <name5> の <name4> 番目番目が <val3> と等しいとき、	if <name1> [ <name5> [ <name4> ] ] == <val3> :	for <name1> [ <name5> [ <name4> ] ] == <val3> :
<name1> ( <name4> , <name6> ( <name3> ) ) を順に <name5> として、繰り返す	for <name5> in <name1> ( <name4> , <name6> ( <name3> ) ) :	. for <name5> in <name1> ( <name4> , <name6> ( <name3> ) ) :
<name6> から <name3> を引いた値を <val1> に <name3> を掛けた値に <val4> を加えた値で割った余りが <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if ( <name6> - <name3> ) % ( <val1> * <name3> + <val4> ) == <val5> : <blk> break </blk>	try % ( <name6> - <name3> ) == ( <val1> * <name3> + <val4> ) == <val5> : <blk> break </blk>
<name3> のとき、 <blk> 空行を出力する </blk>	if <name3> : <blk> print ( ) </blk>	for <name3> in <name3> : <blk> print ( ) </blk>
<name4> ( <name2> -1 , <name1> , <name3> , <name6> , <name5> )	<name4> ( <name2> - 1 , <name1> , <name3> , <name6> , <name5> )	<name5> ( <name4> ( <name2> - 1 , <name1> , <name3> , <name6> , <name5> ) )
<name1> の <name4> の長さを <name6> とする	<name6> = len ( <name1> . <name4> )	<name6> = len ( <name1> . <name4> )
( ( -1 ) からなる列の 0 から <name6> 未満までの数列の各要素を <name1> とし、 <name3> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ - 1 ] * [ <name3> for <name1> in range ( <name6> ) ] ]	<name2> = [ [ - 1 ] * [ <name3> for <name1> in range ( <name6> ) ] ]
<name1> [ <name4> ] . <name3> ( )	<name1> [ <name4> ] . <name3> ( )	<name4> [ <name4> ] . <name3> ( )
<name6> に <name4> を加えた値を <val1> で割った商を <name3> とする	<name3> = ( <name6> + <name4> ) // <val1>	<name3> = ( <name6> + <name4> ) // <val1>
<name6> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を <name1> とする	<name1> = map ( int , <name6> . readline ( ) . split ( ) )	<name1> = map ( int , <name6> . readline ( ) . split ( ) )
( <name3> 、 <name4> 、 <name6> 、 <name2> ) の組を返す	return ( <name3> , <name4> , <name6> , <name2> )	yield ( <name3> , <name4> , <name6> , <name2> )
<val1> が <name6> より小さくかつ <name3> が <name5> より小さくかつ <name2> の <name6> から <val4> を引いた値番目の <name3> 番目が <val1> に含まれるとき、	if <val1> < <name6> and <name3> < <name5> and <name2> [ <name6> - <val4> ] [ <name3> ] in <val1> :	isinstance ( <val1> < <name6> and <name3> < <name5> and <name2> [ <name6> - <val4> ] [ <name3> ] in <val1> :
( 、つまり未定値 ) からなる列の <name5> の <name6> 回分の列を <name4> とする	<name4> = [ None ] * <name5> . <name6>	<name4> = [ None ] * <name5> . <name6>
<name5> を <name4> の <name2> 番目の <name6> 番目にする	<name4> [ <name2> ] [ <name6> ] = <name5>	( <name4> [ <name2> ] [ <name6> ] = <name5> )
<name1> の <val6> 乗に <name4> の <val6> 乗を加えた値を <name5> とする	<name5> = ( <name1> ** <val6> + <name4> ** <val6> )	<name5> = <name1> ** <val6> + <name4> ** <val6>
<name2> の <name3> 番目から <name1> 番目までの部分列を出力する	print ( <name2> [ <name3> : <name1> ] )	print ( <name2> [ <name3> : <name1> ] )
<name1> を <name3> の <val6> 番目だけ増加させる	<name1> += <name3> [ <val6> ]	( <name1> += <name3> [ <val6> ] )
<name4> の <name5> 番目を <name6> の <name5> 番目だけ増加させる	<name4> [ <name5> ] += <name6> [ <name5> ]	<name2> [ <name5> ] += <name6> [ <name5> ]
<name1> に <name5> を加えた値を <name3> とする <name6> に <name2> を加えた値を <name4> とする	<name3> = <name1> + <name5> <name4> = <name6> + <name2>	<name2> = <name1> + <name5> <name4> = <name6> + <name2>
<val4> が <name2> の整数値以下かどうかが <val5> 以下かどうかを返す	return <val4> <= int ( <name2> ) <= <val5>	x return <val4> <= int ( <name2> ) <= <val5>
空列を <name3> の <name4> の先頭番目にする	<name3> [ <name4> [ 0 ] ] = [ ]	<name3> [ <name4> [ 0 ] ] = [ ]
<name5> 、 <name6> に <val4> を加えた値、 <name2> に <val1> を加えた値、 <name3> において正規表現 <name3> が最初にマッチする位置のとき、	if search ( <name3> , <name5> , <name6> + <val4> , <name2> + <val1> , <name3> ) :	re . search ( <name3> , <name5> , <name6> + <val4> , <name2> + <val1> , <name3> ) :
0 から <name1> の <name5> の長さから <val2> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( len ( <name1> . <name5> ) - <val2> ) :	for <name4> in range ( len ( <name1> . <name5> ) - <val2> ) :
<name1> が <name5> に含まれないとき、	if <name1> not in <name5> :	while <name1> not in <name5> :
<name5> と <name1> と <name2> の最小公倍数の最小公倍数を出力する	print ( lcm ( <name5> , lcm ( <name1> , <name2> ) ) )	<name5> print ( lcm ( <name5> , lcm ( <name1> , <name2> ) ) )
<name6> が <val3> 以下のとき、	if <name6> <= <val3> :	list ( <name6> <= <val3> ) :
<val4> が <name5> に <name3> を加えた値以下かどうかが <val6> 以下のとき、	if <val4> <= <name5> + <name3> <= <val6> :	re . <= ( <val4> <= <name5> + <name3> ) <= <val6> :
<name2> に番号付した組の列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in enumerate ( <name2> ) :	for <name6> , <name3> in enumerate ( <name2> ) :
<name3> の末尾に入力された文字列の文字列を追加する	<name3> . append ( str ( input ( ) ) )	<name3> . append ( str ( input ( ) ) )
<name6> ( <val2> ) を <name1> とする	<name1> = <name6> ( <val2> )	<name1> = <name6> ( <val2> )
<name4> の <name6> 番目の末尾に <name1> を追加する	<name4> [ <name6> ] . append ( <name1> )	<name2> [ <name6> ] . append ( <name1> )
改行せずに <val6> を <name1> で割った余りを出力する	print ( <val6> % <name1> , end = '' )	print ( <val6> % <name1> , end = '' )
<name5> . <name6> ( <name3> . <name1> ) を <name2> とする	<name2> = <name5> . <name6> ( <name3> . <name1> )	<name2> = <name5> . <name6> ( <name3> . <name1> )
- <name1> を <name5> で割った値に <name3> から <name4> を <val2> で割った値を引いた値を掛けた値に <name6> に <name1> を加えた値を <val2> で割った値を加えた値を <name6> とする	<name6> = - ( <name1> / <name5> ) * ( <name3> - <name4> / <val2> ) + ( <name6> + <name1> ) / <val2>	<name6> = - <name1> / <name5> * ( <name3> - <name4> / <val2> ) + ( <name6> + <name1> ) / <val2>
<name4> ( <name5> ) の <name1> を <name2> とする	<name2> = <name4> ( <name5> ) . <name1>	<name2> = <name4> ( <name5> ) . <name1>
<name3> をパラメータとして ( - <name3> の先頭、 <name3> の <val6> 番目、 <name3> の <val4> 番目 ) の組を返す関数をキーとして <name2> をソートした列を <name1> とする	<name1> = sorted ( <name2> , key = lambda <name3> : ( - <name3> [ 0 ] , <name3> [ <val6> ] , <name3> [ <val4> ] ) )	<name1> = sorted ( <name2> , key = lambda <name3> : ( - <name3> [ 0 ] , <name3> [ <val6> ] , <name3> [ <val4> ] ) )
<val4> を <name1> の <val3> 番目にする	<name1> [ <val3> ] = <val4>	( <name1> [ <val3> ] = <val4> )
<name2> の <name1> が、つまり未定値と等しくかつ <name2> の <name4> が、つまり未定値と等しいかどうかを返す	return ( <name2> . <name1> is not None ) and ( <name2> . <name4> is not None )	x return <name2> . <name1> is not None and <name2> . <name4> == None
<name1> の -1 番目を <name5> だけ減少させる	<name1> [ - 1 ] -= <name5>	<name1> [ - 1 ] -= <name5>
<name2> が <val4> と等しいとき、 <blk> <val1> を <name5> とする </blk>	if <name2> == <val4> : <blk> <name5> = <val1> </blk>	for <name5> in <name2> == <val4> : <blk> <name5> = <val1> </blk>
<name6> の <name3> 番目の <name4> 番目を展開し、それぞれ <name3> 、 <name4> 、 <name1> とする	<name3> , <name4> , <name1> = <name6> [ <name3> ] [ <name4> ]	<name3> , <name4> , <name1> = <name6> [ <name3> ] [ <name4> ]
<name4> を <name5> で割った商を <name3> とする	<name3> = <name4> // <name5>	( <name3> = <name4> // <name5> )
<name2> かつ <name1> に <name5> を加えた値が <val3> より小さいとき <name1> に <name5> を加えた値、そうでなければ、つまり未定値、 <name5> 、 <name6> 、 <name2> でないにおいて正規表現 <name4> が最初にマッチする位置を <name2> とする	<name2> = <name2> and search ( <name4> , <name1> + <name5> if <name1> + <name5> < <val3> else None , <name5> , <name6> , not <name2> )	<name2> = <name2> and search ( <name4> , <name1> + <name5> if <name1> + <name5> < <val3> else None , <name5> , <name6> , not <name2> )
<val4> を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <val4>	( <name5> [ <val1> ] = <val4> )
<name6> の <name3> の <name4> が <name6> と等しいとき、	if <name6> . <name3> . <name4> == <name6> :	: if <name6> . <name3> . <name4> == <name6> :
<name1> の逆順を展開しての要素をそれぞれ組にした列のリストを <name1> とする	<name1> = list ( zip ( * <name1> [ : : - 1 ] ) )	<name1> = list ( zip ( * <name1> [ : : - 1 ] ) )
<name3> のうち <val6> 個までの順列を順に <name4> 、 <name5> 、 <name2> 、 <name1> として、繰り返す	for <name4> , <name5> , <name2> , <name1> in permutations ( <name3> , <val6> ) :	. for <name4> , <name5> , <name2> , <name1> in permutations ( <name3> , <val6> ) :
<name6> の <name1> 番目の末尾に ( <name3> 、 <name2> ) の組を追加する	<name6> [ <name1> ] . append ( ( <name3> , <name2> ) )	<name2> [ <name1> ] . append ( ( <name3> , <name2> ) )
<name4> の <name1> 番目を <name4> の <name1> に <val3> を加えた値番目にする	<name4> [ <name1> + <val3> ] = <name4> [ <name1> ]	<name2> [ <name4> [ <name1> + <val3> ] ] = <name4> [ <name1> ]
<name2> の <val4> 番目が <name2> の <val3> 番目より小さいとき、	if <name2> [ <val4> ] < <name2> [ <val3> ] :	if <name2> [ <val4> ] < <name2> [ <val3> ] :
<name2> の <name6> に <val4> を加えた値番目を <name2> の <name6> 番目にする	<name2> [ <name6> ] = <name2> [ <name6> + <val4> ]	( <name2> [ <name6> ] = <name2> [ <name6> + <val4> ] )
ソートされた順序を保ったまま <name2> を <name6> に挿入できる位置を出力する	print ( bisect_left ( <name6> , <name2> ) )	print ( bisect . bisect_left ( <name6> , <name2> ) )
<name2> の <name3> に <val1> を掛けた値に <name4> を加えた値番目を <name6> とする	<name6> = <name2> [ <name3> * <val1> + <name4> ]	<name6> = <name2> [ <name3> * <val1> + <name4> ]
<name2> の末尾に ( <name1> 、 <name6> ) の組を追加する	<name2> . append ( ( <name1> , <name6> ) )	not <name2> . append ( ( <name1> , <name6> ) )
<name2> が <name6> の <name4> の <name2> 番目と等しくない間、次を繰り返す	while <name2> != <name6> . <name4> [ <name2> ] :	for <name2> != <name6> . <name4> [ <name2> ] :
<name3> を <val4> だけ増加させる	<name3> += <val4>	( <name3> += <val4> )
<name4> の <name6> の <val2> 番目、 <name4> の <name6> の先頭、 <name4> の <name6> の <val5> 番目、 <name4> の <name6> の <val1> 番目を <name4> の <name6> の先頭、 <name4> の <name6> の <val1> 番目、 <name4> の <name6> の <val2> 番目、 <name4> の <name6> の <val5> 番目とする	<name4> . <name6> [ 0 ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val2> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val2> ] , <name4> . <name6> [ 0 ] , <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val1> ]	<name4> . <name6> [ 0 ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val2> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val2> ] , <name4> . <name6> [ 0 ] , <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val1> ]
<val3> が <name4> と等しくないとき、	if <val3> != <name4> :	: if <val3> != <name4> :
0 から <val1> に <name2> を掛けた値から <val3> を引いた値未満までの数列の各要素を <name6> とし、 <name4> の列を <name5> とする	<name5> = [ <name4> for <name6> in range ( <val1> * <name2> - <val3> ) ]	<name4> = [ <name4> for <name6> in range ( <val1> * <name2> - <val3> ) ]
<name1> の <val4> 番目に <name5> の <val3> 番目を掛けた値から <name1> の <val3> 番目に <name5> の先頭を掛けた値を引いた値を返す	return <name1> [ <val4> ] * <name5> [ <val3> ] - <name1> [ <val3> ] * <name5> [ <val4> ]	yield <name1> [ <val4> ] * <name5> [ <val3> ] - <name1> [ <val3> ] * <name5> [ <val4> ]
<name4> の長さが <val1> 以上かつ <name4> の長さが <val5> 以下のとき、	if len ( <name4> ) >= <val1> and len ( <name4> ) <= <val5> :	list ( len ( <name4> ) >= <val1> and len ( <name4> ) <= <val5> ) :
<name1> の <name3> 番目の <val6> 番目が -1 と等しくないとき、	if <name1> [ <name3> ] [ <val6> ] != - 1 :	while <name1> [ <name3> ] [ <val6> ] != - <val6> :
<val4> に <name2> を掛けた値に <val6> に <name3> を掛けた値を加えた値に <name1> を加えた値を <name5> とする	<name5> = <val4> * <name2> + <val6> * <name3> + <name1>	<name5> = <val4> * <name2> + <val6> * <name3> + <name1>
<name6> の長さから <val3> を引いた値を <name4> とする	<name4> = len ( <name6> ) - <val3>	<name4> = len ( <name6> ) - <val3>
<name4> が <name5> の長さから <val6> を引いた値と等しいとき、	if <name4> == len ( <name5> ) - <val6> :	\ <name4> == len ( <name5> ) - <val6> :
<name6> の <name1> 番目が <name5> より小さいとき <name6> の <name1> 番目、そうでなければ <val3> を出力する	print ( <name6> [ <name1> ] if <name6> [ <name1> ] < <name5> else <val3> )	print ( <name6> [ <name1> ] if <name6> [ <name1> ] < <name5> else <val3> )
<name3> ( <name5> * <name2> . <name6> , <name5> * <name2> . <name4> ) を返す	return <name3> ( <name5> * <name2> . <name6> , <name5> * <name2> . <name4> )	x return <name3> ( <name5> * <name2> . <name6> , <name5> * <name2> . <name4> )
<name1> に対応する値、もし存在しなければ <val2> 、 <val2> を <name4> とする	<name4> = <name1> . get ( <val2> , <val2> )	<name4> = <name1> . get ( <val2> , <val2> )
<name2> ( <val3> , <name1> ) を <name1> とする	<name1> = <name2> ( <val3> , <name1> )	<name1> = <name2> ( <val3> , <name1> )
<name1> が <val5> 以上のとき、	if <name1> >= <val5> :	if <name1> >= <val5> :
<val4> の <name6> から <val1> を引いた値のビット長乗を <name3> とする	<name3> = <val4> ** ( ( <name6> - <val1> ) . bit_length ( ) )	<name3> = <val4> ** ( <name6> - <val1> ) . bit_length ( )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name2> 、 <name6> とする	<name5> , <name1> , <name2> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name1> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name4> の集合を返す	return set ( <name4> )	yield set ( <name4> )
<name3> の x 座標から <name5> の x 座標を引いた値の絶対値が <name1> の <name2> より小さくかつ <name3> の y 座標から <name5> の y 座標を引いた値の絶対値が <name1> の <name2> より小さいとき、	if fabs ( <name3> . x - <name5> . x ) < <name1> . <name2> and fabs ( <name3> . y - <name5> . y ) < <name1> . <name2> :	[ if abs ( <name3> . x - <name5> . x ) < <name1> . <name2> and fabs ( <name3> . <name5> . y ) < <name1> . <name2> :
<name2> を <name5> 、 <name1> をパラメータとして <name5> に <name1> を掛けた値を <name5> と <name1> の最大公約数で割った商を返す関数で集約した列を出力する	print ( functools . reduce ( lambda <name5> , <name1> : <name5> * <name1> // math . gcd ( <name5> , <name1> ) , <name2> ) )	print ( reduce ( lambda <name5> , <name1> : <name5> * <name1> // math . gcd ( <name5> , <name1> ) , <name2> ) )
NA を出力する	print ( 'NA' )	n print ( 'NA' )
light welter を返す	return 'light welter'	self = 'light 'light 'light 'light ] , 'light )
<name2> を <name4> に <name3> を掛けた値だけ増加させる	<name2> += <name4> * <name3>	pow ( <name2> , <name4> * <name3> )
<name4> ( <name3> , <name2> + <val5> )	<name4> ( <name3> , <name2> + <val5> )	<name4> ( <name3> , <name2> + <val5> )
<val1> を書式として <val5> を間に入れて <name2> の各要素に整数を適用した列を連結した文字列、 <name4> 、 <val5> を間に入れて <name3> の各要素に整数を適用した列を連結した文字列で整形した文字列を出力する	print ( <val1> . format ( <val5> . join ( map ( str , <name2> ) ) , <name4> , <val5> . join ( map ( str , <name3> ) ) ) )	( <val1> . format ( <val5> . join ( map ( str , <name2> ) ) , <name4> , <val5> . join ( map ( str , <name3> ) ) ) )
<name1> に <name2> を掛けた値を <name6> とする	<name6> = <name1> * <name2>	( <name6> = <name1> * <name2> )
\ <name6> ( <val1> % ( <name3> , <name2> , <name4> , <name5> ) ) \	\ <name6> ( <val1> % ( <name3> , <name2> , <name4> , <name5> ) ) \	\ <name6> ( <val1> % ( <name3> , <name2> , <name4> , <name5> ) ) \
<name5> を <name4> で割った余りが <val3> と等しいとき、 <blk> <name2> を <val6> だけ増加させる </blk>	if <name5> % <name4> == <val3> : <blk> <name2> += <val6> </blk>	if ( <name5> % <name4> == <val3> ) : <blk> <name2> += <val6> </blk>
<name1> と <name4> の論理積でないとき、 <blk> 最初からもう一度、繰り返す </blk>	if not ( <name1> & <name4> ) : <blk> continue </blk>	while not ( <name1> & <name4> ) : <blk> continue </blk>
<name1> の <val2> 番目が <name4> の <val2> 番目、 <name6> の <val2> 番目の最大値以下かつ <name1> の <val2> 番目が <name4> の <val2> 番目、 <name6> の <val2> 番目の最小値以上かどうか	<name1> [ <val2> ] <= max ( <name4> [ <val2> ] , <name6> [ <val2> ] ) and <name1> [ <val2> ] >= min ( <name4> [ <val2> ] , <name6> [ <val2> ] )	not <name1> [ <val2> ] <= max ( <name4> [ <val2> ] , <name6> [ <val2> ] ) and min ( <name1> [ <val2> ] >= <name4> [ <val2> ] , <name6> [ <val2> ] )
<name5> の <name6> が <name5> の <name1> 以上かどうかを返す	return <name5> . <name6> >= <name5> . <name1>	assert <name5> . <name6> >= <name5> . <name1>
\ <name6> ( <val3> % ( <name5> , <val4> . <name1> ( <name2> ( <name6> , <name3> ) ) ) ) \	\ <name6> ( <val3> % ( <name5> , <val4> . <name1> ( <name2> ( <name6> , <name3> ) ) ) ) \	for <name6> ( <val3> % ( <name5> , <val4> . <name1> ( <name2> ( <name6> , <name3> ) ) ) ) \
0 から <name4> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name5> in range ( <name4> ) ]	<name6> = [ int ( input ( ) ) for <name5> in range ( <name4> ) ]
<name2> の <name4> から読み込んだ一行を <name5> とする	<name5> = <name2> . <name4> . <name5>	<name4> . <name5> = <name2> . <name4> . <name5>
<name2> の各要素を <name6> とし、 ( <name6> の先頭の順序数から <val3> の順序数を引いた値、 <name6> の末尾の順序数から <val3> の順序数を引いた値 ) の組の列を <name2> とする	<name2> = [ ( ord ( <name6> [ 0 ] ) - ord ( <val3> ) , ord ( <name6> [ - 1 ] ) - ord ( <val3> ) ) for <name6> in <name2> ]	<name6> = [ ( ord ( <name6> [ 0 ] ) - ord ( <val3> ) , ord ( <name6> [ - ord ( <val3> ) ) - ord ( <val3> ) for <name6> in <name2> ] )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name6> 、 <name1> とする	<name2> , <name6> , <name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	[ <name2> , <name6> , <name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name1> の末尾に <name5> の <name2> を追加する	<name1> . append ( <name5> . <name2> )	<name1> . append ( <name5> . <name2> )
<val1> を間に入れて <name4> の <name2> 番目の <name3> 番目の各要素に整数を適用した列を連結した文字列を出力する	print ( <val1> . join ( map ( str , <name4> [ <name2> ] [ <name3> ] ) ) )	print ( <val1> . join ( map ( str , <name4> [ <name2> ] [ <name3> ] ) ) )
<name3> の <name6> から <val1> を引いた値番目を <val1> だけ増加させる	<name3> [ <name6> - <val1> ] += <val1>	<name1> [ <name6> - <val1> ] += <val1>
<name5> ( * [ <name3> ( <name2> ) foriininput ( ) . <name4> ( ) ] ) を <name6> とする	<name6> = <name5> ( * [ <name3> ( <name2> ) for <name2> in input ( ) . <name4> ( ) ] )	<name6> = <name5> ( * [ <name3> ( <name2> ) for <name2> in input ( ) . <name4> ( ) ] )
0 から <name3> 、 <name1> の最小値に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( min ( <name3> , <name1> ) + <val5> ) :	for <name2> in range ( min ( <name3> , <name1> ) + <val5> ) :
<name4> が <val6> より小さくかつ <name1> が <val6> 以上のとき、	if <name4> < <val6> and <name1> >= <val6> :	continue <name4> < <val6> and <name1> >= <val6> :
<name5> の先頭の <name3> 番目の末尾に ( <name1> 、 <name2> ) の組を追加する	<name5> [ 0 ] [ <name3> ] . append ( ( <name1> , <name2> ) )	<name2> [ 0 ] [ <name3> ] . append ( ( <name1> , <name2> ) )
<name1> を <name3> の <name2> 番目の <name4> 番目にする	<name3> [ <name2> ] [ <name4> ] = <name1>	( <name3> [ <name2> ] [ <name4> ] = <name1> )
<name6> ( <name5> - <name3> . <name1> ) を <name2> とする	<name2> = <name6> ( <name5> - <name3> . <name1> )	<name2> = <name6> ( <name5> - <name3> . <name1> )
<name5> の <name6> 番目の <name3> 番目を <name6> とする <name3> を <val2> だけ減少させる	<name6> = <name5> [ <name6> ] [ <name3> ] <name3> -= <val2>	else = <name5> [ <name6> ] [ <name3> ] <name3> -= <val2>
<name2> の先頭を取り出した値を <name3> とする	<name3> = <name2> . pop ( )	<name3> = <name2> . pop ( )
( ( -3 、 <val1> ) からなる列、 ( -2 、 <val1> ) からなる列、 ( -1 、 <val1> ) からなる列、 ( <val4> 、 <val1> ) からなる列、 ( <val2> 、 <val1> ) からなる列、 ( <val5> 、 <val1> ) からなる列、 ( <val1> 、 -3 ) からなる列、 ( <val1> 、 -2 ) からなる列、 ( <val1> 、 -1 ) からなる列、 ( <val1> 、 <val4> ) からなる列、 ( <val1> 、 <val2> ) からなる列、 ( <val1> 、 <val5> ) からなる列 ) からなる列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in [ [ - <val5> , <val1> ] , [ - <val2> , <val1> ] , [ - <val4> , <val1> ] , [ <val4> , <val1> ] , [ <val2> , <val1> ] , [ <val5> , <val1> ] , [ <val1> , - <val5> ] , [ <val1> , - <val2> ] , [ <val1> , - <val4> ] , [ <val1> , <val4> ] , [ <val1> , <val2> ] , [ <val1> , <val5> ] ] :	for <name6> , <name3> in [ [ - <val1> , <val1> ] , [ - <val4> , <val1> ] , [ <val4> , <val1> ] , [ <val2> , <val1> ] , [ <val2> ] , [ <val5> , <val1> ] , [ <val5> , <val1> ] , [ <val1> ] , [ <val1> ] , [ <val1> ] , [ <val1> ] , [ <val1> ] , [ <val1> , <val1> , <val1> , <val1> , <val1> , [ <val4> , <val1> , <val1> , <val1> , <val1> ] ] ] , [ <val1>
<val4> から <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val4> , <name3> ) :	) : for <name5> in range ( <val4> , <name3> ) :
<val6> を間に入れて ( <name4> 、 <name5> 、 <name2> 、 <name3> 、 <name1> ) からなる列の各要素に整数を適用した列を連結した文字列を出力する	print ( <val6> . join ( map ( str , [ <name4> , <name5> , <name2> , <name3> , <name1> ] ) ) )	print ( <val6> . join ( map ( str , [ <name4> , <name5> , <name2> , <name3> , <name1> ] ) ) )
<name6> の <name3> 番目の先頭を <name2> とする	<name2> = <name6> [ <name3> ] [ 0 ]	( <name2> = <name6> [ <name3> ] [ 0 ] )
<val4> に <name3> に <name5> を <val1> で割った値を加えた値を掛けた値を <name6> とする	<name6> = <val4> * ( <name3> + ( <name5> / <val1> ) )	<name6> = <val4> * ( <name3> + <name5> / <val1> )
( <name5> 、 <name1> ) の組を <name1> の <name4> ( <val6> ) に <name4> ( <val3> ) を加えた値に <name4> ( <val2> ) を加えた値に <name4> ( <val6> ) を加えた値番目にする	<name1> [ <name4> ( <val6> ) + <name4> ( <val3> ) + <name4> ( <val2> ) + <name4> ( <val6> ) ] = ( <name5> , <name1> )	<name1> [ <name4> ( <val6> ) + <name4> ( <val3> ) + <name4> ( <val2> ) + <name4> ( <val6> ) ] = ( <name5> , <name1> )
( <val1> ) からなる列の <name4> の <name3> 回分の列を <name4> の <name5> にする	<name4> . <name5> = [ <val1> ] * <name4> . <name3>	<name3> . <name5> = [ <val1> ] * <name4> . <name3>
<name5> の <name1> を出力する	print ( <name5> . <name1> )	print ( <name5> . <name1> )
<name3> の長さを <name5> の <name4> にする	<name5> . <name4> = len ( <name3> )	( <name5> . <name4> = len ( <name3> ) )
<name1> に ( <name2> 、 <name3> 、 <name4> ) の組を追加した集まり	<name1> . add ( ( <name2> , <name3> , <name4> ) )	<name1> . add ( ( <name2> , <name3> , <name4> ) )
<name2> ( <name6> , <name1> + <val3> , <name5> )	<name2> ( <name6> , <name1> + <val3> , <name5> )	( <name2> ( <name6> , <name1> + <val3> , <name5> ) )
<name3> ( <name1> . <name4> [ <val2> : ] )	<name3> ( <name1> . <name4> [ <val2> : ] )	<name3> ( <name1> . <name4> [ <val2> : ] )
<name4> かつ <name2> の <name6> 番目が <name2> の <name1> 番目より小さくかつ <name5> . <name3> ( <name1> , <name4> ) のとき、	if <name4> and <name2> [ <name6> ] < <name2> [ <name1> ] and <name5> . <name3> ( <name1> , <name4> ) :	for <name4> and <name2> [ <name6> ] < <name2> [ <name1> ] and <name5> . <name3> ( <name1> , <name4> ) :
( <name6> の先頭から <val1> を引いた値、 <name5> から <name6> の <name3> から <val1> を引いた値番目を引いた値 ) からなる列を <name2> とする	<name2> = [ <name6> [ 0 ] - <val1> , <name5> - <name6> [ <name3> - <val1> ] ]	<name6> = [ <name6> [ 0 ] - <val1> , <name5> - <name6> [ <name3> - <val1> ] ]
( 、つまり偽 ) からなる列の <name1> の <name2> 回分の列を <name5> とする	<name5> = [ False ] * <name1> . <name2>	<name5> = [ False ] * <name1> . <name2>
<name6> に <val1> を加えた値から <name5> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> + <val1> , <name5> ) :	range for <name4> in range ( <name6> + <val1> , <name5> ) :
整数のリストの各要素を <name5> とし、 <name5> の整数値の列を <name6> とする	<name6> = [ int ( <name5> ) for <name5> in list ( str ) ]	<name6> = [ int ( <name5> ) for <name5> in list ( str ( ) ) ]
<name3> の <name3> の <name1> 番目の <name2> 番目の絶対値が <name3> の <name3> の <name4> 番目の <name2> 番目の絶対値より大きいとき、	if abs ( <name3> . <name3> [ <name1> ] [ <name2> ] ) > abs ( <name3> . <name3> [ <name4> ] [ <name2> ] ) :	isinstance ( abs ( <name3> . <name3> [ <name1> ] [ <name2> ] ) > abs ( <name3> . <name3> [ <name4> ] [ <name2> ] ) ) :
<name3> を <name5> ( <name4> , <name6> | ( <val2> << <name4> ) , <name1> , <name3> , <name5> ) だけ増加させる	<name3> += <name5> ( <name4> , <name6> | ( <val2> << <name4> ) , <name1> , <name3> , <name5> )	<name5> += <name3> += <name5> ( <name4> , <name6> | ( <val2> << <name4> ) , <name1> , <name3> , <name5> )
<name3> の整数値から <name5> の整数値を引いた値の文字列を長さ <val1> になるように '0' 左詰めした文字列を <name4> とする	<name4> = str ( int ( <name3> ) - int ( <name5> ) ) . zfill ( <val1> )	<name4> = str ( int ( <name3> ) - int ( <name5> ) ) . zfill ( <val1> )
<name6> ( ) . <name5> ( <name1> , <name3> )	<name6> ( ) . <name5> ( <name1> , <name3> )	set ( <name6> ( ) . <name5> ( <name1> , <name3> ) )
<name1> . <name6> ( <val3> , <name5> -1 , <name2> -1 ) を出力する	print ( <name1> . <name6> ( <val3> , <name5> - 1 , <name2> - 1 ) )	print ( <name1> . <name6> ( <val3> , <name5> - 1 , <name2> - 1 ) )
<val6> から <name5> に <val6> を加えた値未満までの <val2> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name5> + <val6> , <val2> ) :	continue for <name1> in range ( <val6> , <name5> + <val6> , <val2> ) :
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = map ( int , <name5> ( ) . split ( ) )	<name3> , <name1> , <name2> = map ( int , <name5> ( ) . split ( ) )
% s = % d ( mod % d ) を ( <name1> 、 <name2> 、 <name5> ) の組で割った余りを出力する	print ( '%s = %d (mod %d)' % ( <name1> , <name2> , <name5> ) )	end = '%dx%d=%d' % ( <name1> , <name2> , <name5> ) )
( 、つまり未定値 ) からなる列の <name3> 回分の列を <name1> とする	<name1> = [ None ] * <name3>	<name1> = [ None ] * <name3>
<name2> を <name3> の <name1> 番目だけ減少させる	<name2> -= <name3> [ <name1> ]	not <name2> -= <name3> [ <name1> ]
( <val2> 、 <val6> 、 <val1> 、 <val2> 、 <val5> 、 <val4> 、 <val2> 、 <val6> 、 <val3> 、 <val2> 、 <val1> 、 <val3> ) からなる列を <name3> とする	<name3> = [ <val2> , <val6> , <val1> , <val2> , <val5> , <val4> , <val2> , <val6> , <val3> , <val2> , <val1> , <val3> ]	<name3> = [ <val2> , <val6> , <val1> , <val2> , <val5> , <val4> , <val2> , <val6> , <val3> , <val2> , <val1> , <val3> ]
<name5> 、 <name2> の最大値、 <name4> の最小値を <name3> とする	<name3> = min ( max ( <name5> , <name2> ) , <name4> )	<name3> = min ( <name5> , max ( <name2> ) , <name4> )
<name1> の総和を <name6> で割った商、 <name1> の最小値の最大値を <name4> とする	<name4> = max ( sum ( <name1> ) // <name6> , min ( <name1> ) )	<name4> = max ( sum ( <name1> ) // <name6> , min ( <name1> ) )
<name5> の x 座標に <name5> の x 座標を掛けた値に <name5> の y 座標に <name5> の y 座標を掛けた値を加えた値を返す	return ( <name5> . x * <name5> . x + <name5> . y * <name5> . y )	x return <name5> . x * <name5> . x + <name5> . y * <name5> . y
<name6> ( <name2> , <name3> , <name5> ) が <name1> と等しくない間、次を繰り返す	while <name6> ( <name2> , <name3> , <name5> ) != <name1> :	del ( <name6> ( <name2> , <name3> , <name5> ) != <name1> ) :
<name5> ( <name4> * <name1> . <name2> , <name4> * <name1> . <name3> ) を返す	return <name5> ( <name4> * <name1> . <name2> , <name4> * <name1> . <name3> )	yield <name5> ( <name4> * <name1> . <name2> , <name4> * <name1> . <name3> )
( <val4> に <name2> [ <val6> ] を掛けた値に <name1> の先頭を加えた値を <val5> で割った値、 <val3> を四捨五入した整数値、 <val4> に <name2> [ <val4> ] を掛けた値に <name1> の <val4> 番目を加えた値を <val5> で割った値、 <val3> を四捨五入した整数値 ) の組を <name3> とする	<name3> = ( round ( ( <val4> * <name2> [ <val6> ] + <name1> [ <val6> ] ) / <val5> , <val3> ) , round ( ( <val4> * <name2> [ <val4> ] + <name1> [ <val4> ] ) / <val5> , <val3> ) )	else = ( int ( <val4> * <name2> [ <val6> ] + <name1> [ 0 ] ) / <val5> , round ( <val4> , <name2> [ <val4> ] + <name1> [ <val4> ] ) / <val5> / <val3> )
<val1> に <name4> の文字列を加えた値に <val5> を加えた値に <name6> を加えた値を出力する	print ( <val1> + str ( <name4> ) + <val5> + <name6> )	print ( <val1> + str ( <name4> ) + <val5> + <name6> )
<name6> が -1 と等しいとき、	if <name6> == - 1 :	for <name6> == - 1 :
<name1> の <name3> を返す	return <name1> . <name3>	yield <name1> . <name3>
<name4> の <name6> から <val5> を引いた値番目の <name1> 番目、 <name4> の <name6> から <val5> を引いた値番目の <name1> から <val5> を引いた値番目の最大値に <name4> の <name6> 番目の <name1> 番目を加えた値を <name4> の <name6> 番目の <name1> 番目にする	<name4> [ <name6> ] [ <name1> ] = max ( <name4> [ <name6> - <val5> ] [ <name1> ] , <name4> [ <name6> - <val5> ] [ <name1> - <val5> ] ) + <name4> [ <name6> ] [ <name1> ]	<name6> [ <name1> ] = max ( <name4> [ <name6> - <val5> ] [ <name1> ] , <name4> [ <name6> - <val5> ] [ <name1> - <val5> ] ) + <name4> [ <name6> ] [ <name1> ]
<name3> の <val4> 乗に <name1> の <val4> 乗に <name6> の <val4> 乗を加えた値から <name3> の <val4> 乗を引いた値を掛けた値を <name2> とする	<name2> = <name3> ** <val4> * ( <name1> ** <val4> + <name6> ** <val4> - <name3> ** <val4> )	<name6> = <name3> ** <val4> * ( <name1> ** <val4> + <name6> ** <val4> - <name3> ** <val4> )
<name1> を <name6> の <name3> の <name2> 番目にする	<name6> . <name3> [ <name2> ] = <name1>	<name2> . <name6> [ <name3> . <name2> ] = <name1>
無限の整数列が <val5> と等しいとき、	if count == <val5> :	list ( count ) == <val5> :
<name3> に <name4> を加えた値を <name1> とする	<name1> = <name3> + <name4>	<name4> = <name3> + <name4>
<name3> の <name2> 番目が <name5> と等しいとき、	if <name3> [ <name2> ] == <name5> :	if <name3> [ <name2> ] == <name5> :
<name6> を <name4> に <name1> を掛けた値だけ増加させる	<name6> += <name4> * <name1>	( <name6> += <name4> * <name1> )
<name3> の <name5> が <val2> より大きくかつ <name6> の <name1> 番目から <name4> の <name3> の <name3> 番目を引いた値が <name6> の <name3> . <name3> 番目から <name3> の <name5> を引いた値から <name4> の <name1> 番目を引いた値より小さいとき、	if <name3> . <name5> > <val2> and <name6> [ <name1> ] - <name4> [ <name3> . <name3> ] < <name6> [ <name3> . <name3> ] - <name3> . <name5> - <name4> [ <name1> ] :	isinstance ( <name3> . <name5> > <val2> and <name6> [ <name1> ] - <name4> [ <name3> ] ) < <name6> [ <name3> . <name3> ] - <name3> . <name5> - <name4> [ <name1> ] :
<name4> を <val1> に <name3> を掛けた値だけ増加させる	<name4> += <val1> * <name3>	<name4> += <val1> * <name3>
<val5> に <name6> を掛けた値から <val5> に <name1> を掛けた値を引いた値を <name3> とする	<name3> = <val5> * <name6> - <val5> * <name1>	( <name3> = <val5> * <name6> - <val5> * <name1> )
<name6> を <name4> の <val1> 番目にする	<name4> [ <val1> ] = <name6>	( <name4> [ <val1> ] = <name6> )
<name6> が、つまり空列と等しくまたは <name4> が、つまり空列と等しいとき、	if <name6> == [ ] or <name4> == [ ] :	list ( <name6> == [ ] or <name4> == [ ] ) :
( <name5> ) からなる列の <name1> の <name3> 回分の列を <name2> とする	<name2> = [ <name5> ] * <name1> . <name3>	<name2> = [ <name5> ] * <name1> . <name3>
( <name1> 、 <val4> 、 <name2> ) からなる列を <name5> とするを <name2> の <val3> 番目にする	<name2> [ <val3> ] = <name5> = [ <name1> , <val4> , <name2> ]	<name2> [ <val3> ] = <name5> = [ <name1> , <val4> , <name2> ]
<name1> . <name3> ( ( <name4> -1 ) // <val6> , <name5> , <name2> ) を返す	return <name1> . <name3> ( ( <name4> - 1 ) // <val6> , <name5> , <name2> )	assert <name1> . <name3> ( ( ( <name4> - 1 ) // <val6> , <name5> , <name2> ) )
<name2> ( <name1> , <val5> , <name6> ( <name1> ) )	<name2> ( <name1> , <val5> , <name6> ( <name1> ) )	<name2> ( <name1> , <val5> , <name6> ( <name1> ) )
<name1> に ( <name3> 、 <name2> ) の組を追加した集まり	<name1> . add ( ( <name3> , <name2> ) )	not <name1> . add ( ( <name3> , <name2> ) )
 を間に入れて <name3> の各要素を <name1> とし、 <name1> の <val4> 番目の列の各要素に整数を適用した列を連結した文字列を出力する	print ( ' ' . join ( map ( str , [ <name1> [ <val4> ] for <name1> in <name3> ] ) ) )	print ( '' . join ( map ( str , [ <name1> [ <val4> ] for <name1> in <name3> ] ) ) )
- <name1> を <name4> として <name3> 、 <name5> の要素をそれぞれ組にした列の各要素を <name1> 、 <name2> とし、 <name1> が <val6> 以上かつ <name2> が <val6> 以上のときの <name1> に <name2> を加えた値の列の最大値を <name4> とするを <name3> の <name5> 番目の <name6> 番目にする	<name3> [ <name5> ] [ <name6> ] = <name4> = max ( ( [ <name1> + <name2> for <name1> , <name2> in zip ( <name3> , <name5> ) if <name1> >= <val6> and <name2> >= <val6> ] ) , <name4> = - <name1> )	<name3> [ <name5> ] [ <name6> ] = <name4> = max ( [ <name1> + <name2> for <name1> , <name2> in zip ( <name3> , <name5> ) if <name1> >= <val6> and <name2> >= <val6> ] ) , <name4> = - <name1> )
<name2> を <name4> で割った値の平方根を <name1> とする	<name1> = math . sqrt ( <name2> / <name4> )	<name1> = math . sqrt ( <name2> / <name4> )
<name1> から <name6> に <name3> を掛けた値を引いた値を <name5> で割った値を <name4> とする	<name4> = ( <name1> - ( <name6> * <name3> ) ) / <name5>	<name4> = ( <name1> - <name6> * <name3> ) / <name5>
<name5> ( <name1> , <name3> ( <name4> , <name6> ) ) を <name2> とする	<name2> = <name5> ( <name1> , <name3> ( <name4> , <name6> ) )	<name2> = <name5> ( <name1> , <name3> ( <name4> , <name6> ) )
0 から <name4> 未満までの数列の各要素を <name6> とし、 <name3> の <name6> に <val1> を加えた値番目から <name3> の <name6> 番目を引いた値の列を <name2> とする	<name2> = [ <name3> [ <name6> + <val1> ] - <name3> [ <name6> ] for <name6> in range ( <name4> ) ]	<name2> = [ <name3> [ <name6> + <val1> ] - <name3> [ <name6> ] for <name6> in range ( <name4> ) ]
<name4> ( ) を空白で分割した字句列を展開し、それぞれ <name2> 、 <name3> とする <name3> の整数値を <name3> とする	<name2> , <name3> = <name4> ( ) . split ( ) <name3> = int ( <name3> )	<name1> , <name3> = <name4> ( ) . split ( ) <name3> = int ( <name3> )
<name4> ( <name5> [ <val6> ] )	<name4> ( <name5> [ <val6> ] )	<name4> ( <name5> [ <val6> ] )
<name3> を <name1> の <name1> の <name4> と等しい要素の最初の位置に <name5> を掛けた値に <name6> を加えた値を <val2> で割った余り番目だけ増加させる	<name3> += <name1> [ ( <name1> . index ( <name4> ) * <name5> + <name6> ) % <val2> ]	<name1> += <name3> += <name1> [ ( <name1> . index ( <name4> ) ) * <name5> + <name6> ) % <val2> ]
<val4> から <name5> に <val3> を加えた値未満までの数列の各要素を <name1> とし、 <val4> の列を <name6> とする	<name6> = [ <val4> for <name1> in range ( <name5> + <val3> ) ]	<name6> = [ <val4> for <name1> in range ( <name5> + <val3> ) ]
( <name2> 、 <name1> ) の組を順に <name3> として、繰り返す	for <name3> in ( <name2> , <name1> ) :	for <name3> in ( <name2> , <name1> ) :
\ <name2> ( <val6> % ( <name5> + <name3> ) ) \	\ <name2> ( <val6> % ( <name5> + <name3> ) ) \	for <name2> ( <val6> % ( <name5> + <name3> ) ) \
<name4> の <name3> の <name5> 番目を順に <name2> として、繰り返す	for <name2> in <name4> . <name3> [ <name5> ] :	continue . <name3> [ <name5> ] :
<name2> の <name3> から <name1> を引いた値番目に <name5> を加えた値、 <name2> の <name3> 番目の最大値を <name2> の <name3> 番目にする	<name2> [ <name3> ] = max ( <name2> [ <name3> - <name1> ] + <name5> , <name2> [ <name3> ] )	<name2> [ <name3> ] = max ( <name2> [ <name3> - <name1> ] + <name5> , <name2> [ <name3> ] )
( <name4> 、 <name1> 、 <name6> ) からなる列の <name2> を <name5> とする	<name5> = [ <name4> , <name1> , <name6> ] . <name2>	<name5> = [ <name4> , <name1> , <name6> ] . <name2>
<val2> 、 <val2> を <name3> 、 <name4> とする	<name3> , <name4> = <val2> , <val2>	( <name3> , <name4> = <val2> , <val2> )
( <val4> ) からなる列の <name5> に <val3> を加えた値回分の列を <name2> とする	<name2> = [ <val4> ] * ( <name5> + <val3> )	<name2> = [ <val4> ] * ( <name5> + <val3> )
<name4> 内の [ MASK ] の出現回数を返す	return <name4> . count	yield <name4> . count
<name3> を <name4> の <name6> にする	<name4> . <name6> = <name3>	<name4> . <name6> = <name3>
<name2> の末尾に <name3> . <name6> ( <name5> , <name1> ) のとき <name3> . <name4> ( <name5> , <name1> ) 、そうでなければ <val2> を追加する	<name2> . append ( <name3> . <name4> ( <name5> , <name1> ) if <name3> . <name6> ( <name5> , <name1> ) else <val2> )	<name4> . append ( <name3> . <name4> ( <name5> , <name1> ) if <name3> . <name6> ( <name5> , <name1> ) else <val2> )
<name2> の <name6> 番目を返す	return <name2> [ <name6> ]	yield <name2> [ <name6> ]
<val3> から <name2> に <val3> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , <name2> + <val3> ) :	continue for <name6> in range ( <val3> , <name2> + <val3> ) :
<name2> が <name1> に含まれるとき、	if <name2> in <name1> :	if <name2> in <name1> :
<name2> の <name1> 番目の <name3> 番目を <val4> だけ増加させる	<name2> [ <name1> ] [ <name3> ] += <val4>	[ <name2> [ <name1> ] [ <name3> ] += <val4>
<name2> を <name4> の <name6> から <val1> を引いた値番目で割った商を出力する	print ( <name2> // <name4> [ <name6> - <val1> ] )	print ( <name2> // <name4> [ <name6> - <val1> ] )
<name3> 内の <val6> を <val1> で置き換えた文字列を <val1> で分割した字句列を <name2> とする	<name2> = <name3> . replace ( <val6> , <val1> ) . split ( <val1> )	<name2> = <name3> . replace ( <val6> , <val1> ) . split ( <val1> )
( ( <name2> 、 <name1> ) の組 ) からなる列の集合を <name6> とする	<name6> = set ( [ ( <name2> , <name1> ) ] )	} <name6> = set ( [ ( <name2> , <name1> ) ] )
( <name3> ) からなる列を <name4> の <name6> の <name5> 番目にする	<name4> . <name6> [ <name5> ] = [ <name3> ]	<name4> . <name6> [ <name5> ] = [ <name3> ]
<name2> を深くコピーした結果を <name5> とする	<name5> = copy . deepcopy ( <name2> )	<name3> = deepcopy ( <name2> )
<val4> を <name3> の <val4> 番目とするを <name5> の先頭の <val4> 番目にする	<name5> [ <val4> ] [ <val4> ] = <name3> [ <val4> ] = <val4>	else [ <val4> ] [ <val4> ] = <name3> [ <val4> ] = <val4>
<name6> ( [ <name1> ( <name3> ) forxininput ( ) . <name4> ( <val2> ) ] ) を <name5> とする	<name5> = <name6> ( [ <name1> ( <name3> ) for <name3> in input ( ) . <name4> ( <val2> ) ] )	<name6> = <name6> ( [ <name1> ( <name3> ) for <name3> in input ( ) . <name4> ( <val2> ) ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name6> 、 <name5> とする	<name3> , <name2> , <name6> , <name5> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name5> = map ( int , input ( ) . split ( ) )
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = list ( map ( int , input ( ) . split ( <val4> ) ) )	<name1> , <name5> = list ( map ( int , input ( ) . split ( <val4> ) ) )
<name4> . <name1> ( <name6> , <name3> ) を出力する	print ( <name4> . <name1> ( <name6> , <name3> ) )	print ( <name4> . <name1> ( <name6> , <name3> ) )
<name2> ( <name5> . <name1> [ <val4> : ] )	<name2> ( <name5> . <name1> [ <val4> : ] )	<name2> ( <name5> . <name1> [ <val4> : ] )
<name4> の絶対値が <val6> <name5> <val3> より小さくかつ <name2> が <val6> <name5> <val3> より小さいとき、	if abs ( <name4> ) < <val6> <name5> <val3> and <name2> < <val6> <name5> <val3> :	for <name4> in abs ( <name4> ) < <val6> <name5> <val3> and <name2> < <val6> <name5> <val3> :
( <val3> 、 <val5> 、 <val4> ) の組を返す	return ( <val3> , <val5> , <val4> )	yield ( <val3> , <val5> , <val4> )
<name1> の <val2> に <val2> を挿入する	<name1> . insert ( <val2> , <val2> )	<name1> . insert ( <val2> , <val2> )
<name4> ( <name3> , <name1> ) を <name6> とする	<name6> = <name4> ( <name3> , <name1> )	<name6> = <name4> ( <name3> , <name1> )
<name1> を展開し、それぞれ <name2> 、 <name3> 、 <name5> とする	<name2> , <name3> , <name5> = <name1>	( <name2> , <name3> , <name5> = <name1> )
<name5> の <name2> を <name6> で割った商番目を <val1> だけ増加させる	<name5> [ <name2> // <name6> ] += <val1>	<name2> [ <name2> // <name6> ] += <val1>
<name3> に <name2> を掛けた値から <name5> に <name1> を掛けた値を引いた値を <name4> に <name2> を掛けた値から <name6> に <name5> を掛けた値を引いた値で割った値を <name6> とする	<name6> = ( <name3> * <name2> - <name5> * <name1> ) / ( <name4> * <name2> - <name6> * <name5> )	<name6> = ( <name3> * <name2> - <name5> * <name1> ) / ( <name4> * <name2> - <name6> * <name5> )
0 から <name1> の <name6> の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name1> . <name6> ) ) :	) for <name5> in range ( len ( <name1> . <name6> ) ) :
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name1> 、 <name3> 、 <name2> とする	<name1> , <name3> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name1> , <name3> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name4> の <name2> 番目の <name5> 番目が <val3> と等しくないとき、	if <name4> [ <name2> ] [ <name5> ] != <val3> :	for if <name4> [ <name2> ] [ <name5> ] != <val3> :
<name1> に <name6> を加えた値が <name4> ( <name3> ^ <name2> , <val5> ) より小さいとき、 <blk> <name1> に <name6> を加えた値を <name1> の <name3> と <name2> の排他論理和番目にする <sep> <name6> の <name1> に <name6> を加えた値番目の末尾に <name3> と <name2> の排他論理和を追加する </blk>	if <name1> + <name6> < <name4> ( <name3> ^ <name2> , <val5> ) : <blk> <name1> [ <name3> ^ <name2> ] = <name1> + <name6> <sep> <name6> [ <name1> + <name6> ] . append ( <name3> ^ <name2> ) </blk>	try < <name6> < <name4> ( <name3> ^ <name2> , <val5> ) : <blk> <name1> [ <name3> ^ <name2> ] = <name1> + <name6> <sep> <name6> [ <name1> + <name6> ] . append ( <name3> ^ <name2> ) </blk>
<name5> を <name4> の <name1> 番目とするを <name3> とする	<name3> = <name4> [ <name1> ] = <name5>	<name4> [ <name3> ] = <name4> [ <name1> ] = <name5>
<name5> に <val6> を加えた値、 <name3> から <val6> を引いた値を <name5> 、 <name3> とする	<name5> , <name3> = <name5> + <val6> , <name3> - <val6>	<name5> , <name3> = <name5> + <val6> , <name3> - <val6>
<name6> ( <name5> ) が <name6> ( <name3> ) と等しいとき、	if <name6> ( <name5> ) == <name6> ( <name3> ) :	list ( <name6> ( <name5> ) == <name6> ( <name3> ) ) :
<name4> が <name1> から <val3> を引いた値以上のとき、	if <name4> >= <name1> - <val3> :	list ( <name4> >= <name1> - <val3> ) :
<name3> を <name6> の余弦だけ増加させる	<name3> += math . cos ( <name6> )	<name1> += <name3> . cos ( <name6> )
0 から <name4> を <val6> で割った商に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> // <val6> + <val2> ) :	) for <name3> in range ( <name4> // <val6> + <val2> ) :
( ( <val1> ) からなる列の <val1> から <val6> * <name2> に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <val4> を <val3> に <name2> を掛けた値だけ左シフトした値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val1> ] * [ ( <val4> << ( <val3> * <name2> ) ) for <name5> in range ( <val6> * <name2> + <val4> ) ] ]	<name6> = [ [ <val1> ] * [ ( <val4> << ( <val3> * <name2> ) ) for <name5> in range ( <val6> * <name2> + <val4> ) ] ]
<name4> の末尾に <name5> の先頭を取り出した値を追加する	<name4> . append ( <name5> . pop ( ) )	<name3> . append ( <name5> . pop ( ) )
0 から <name4> から <val6> を引いた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> - <val6> ) :	) for <name5> in range ( <name4> - <val6> ) :
<name5> . <name2> ( <name1> . <name4> ( <val3> , <val6> ) ) を <name5> とする	<name5> = <name5> . <name2> ( <name1> . <name4> ( <val3> , <val6> ) )	else = <name5> . <name2> ( <name1> . <name4> ( <val3> , <val6> ) )
<name1> . <name4> ( <name5> )	<name1> . <name4> ( <name5> )	not <name1> . <name4> ( <name5> )
<name2> の ( <name4> 、 <name3> 、 <name5> 、 <name6> ) からなる列の総和番目を <val1> だけ増加させる	<name2> [ sum ( [ <name4> , <name3> , <name5> , <name6> ] ) ] += <val1>	<name1> [ sum ( <name2> [ <name4> . <name3> , <name5> , <name6> ] ) ] += <val1>
<name6> を <val4> 分の一にする	<name6> /= <val4>	( <name6> // = <val4> )
<val3> を書式として <name6> の先頭内の <val1> を <val4> で置き換えた文字列、 <name6> の <val5> 番目で整形した文字列を出力する	print ( <val3> . format ( <name6> [ <val4> ] . replace ( <val1> , <val4> ) , <name6> [ <val5> ] ) )	print ( <val3> . format ( <name6> [ 0 ] . replace ( <val1> , <val4> ) , <name6> [ <val5> ] ) )
<name3> から <name4> の総和を引いた値を出力する	print ( <name3> - sum ( <name4> ) )	print ( <name3> - sum ( <name4> ) )
未定値を <name3> とする	<name3> = None	( <name3> = None )
<name5> が -0 と等しいとき、	if <name5> == - 0 :	: if <name5> == - 0 :
<name3> の <name4> 番目の末尾に <name1> を追加する	<name3> [ <name4> ] . append ( <name1> )	<name1> [ <name4> ] . append ( <name1> )
<name3> の先頭を除いた部分列を順に <name2> 、 <name1> 、 <name5> 、 <name4> として、繰り返す	for <name2> , <name1> , <name5> , <name4> in <name3> [ 1 : ] :	. for <name2> , <name1> , <name5> , <name4> in <name3> [ 1 : ] :
-1 を <name6> の 0 から <name2> 未満までの数列の組番目にする	<name6> [ tuple ( range ( <name2> ) ) ] = - 1	<name4> [ tuple ( range ( <name2> ) ) ] = - 1
<name4> の <name1> を <name4> とする	<name4> = <name4> . <name1>	<name6> = <name4> . <name1>
<name5> の先頭から <val4> を探して見つかった位置を <name1> とする	<name1> = <name5> . find ( <val4> )	<name1> = <name5> . find ( <val4> )
<name6> ( <name5> )	<name6> ( <name5> )	( <name6> ( <name5> ) )
\ <val2> を間に入れて <name1> を連結した文字列を出力する\	\ print ( <val2> . join ( <name1> ) ) \	from print ( <val2> . join ( <name1> ) ) \
<name1> が <name5> と等しいとき、 <blk> <val6> を出力する </blk>	if <name1> == <name5> : <blk> print ( <val6> ) </blk>	while <name1> == <name5> : <blk> print ( <val6> ) </blk>
( <name6> に <name4> に ( <name3> + <val5> ) から <name2> を引いた値を掛けた値を <name1> で割った値を加えた値、 <name6> に <name4> * ( <name3> - <name2> ) に <name1> を加えた値から <val5> を引いた値を <name1> で割った商を加えた値 ) の組を返す	return ( <name6> + <name4> * ( ( <name3> + <val5> ) - <name2> ) / <name1> , <name6> + ( <name4> * ( <name3> - <name2> ) + <name1> - <val5> ) // <name1> )	assert ( <name6> + <name4> * ( <name3> + <val5> ) - <name2> ) / <name1> , <name6> + <name4> * ( <name3> - <name2> ) + <name1> - <val5> ) // <name1> )
<name3> を <name2> に <val6> を加えた値だけ増加させる	<name3> += ( <name2> + <val6> )	<val2> += ( <name2> + <val6> )
<name5> を <name4> の、つまり先頭から <name3> 番目までの部分列の総和だけ増加させる	<name5> += sum ( <name4> [ 0 : <name3> ] )	<name2> += sum ( <name4> [ : <name3> ] )
<name5> の <name3> 番目を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name5> [ <name3> ]	( <name4> , <name1> = <name5> [ <name3> ] )
<name5> が <name1> の長さと等しいとき、	if <name5> == len ( <name1> ) :	for <name5> == len ( <name1> ) :
( に入力された文字列を加えた値に <val5> を加えた値を <name6> とする	<name6> = '(' + input ( ) + <val5>	<name6> = [ ' + input ( ) + <val5>
( -1 ) からなる列の <name3> に <name2> を掛けた値に <val1> を加えた値回分の列を <name4> とする	<name4> = [ - <val1> ] * ( <name3> * <name2> + <val1> )	<name4> = [ - <val1> ] * ( <name3> * <name2> + <val1> )
<val3> を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <val3>	not <name1> [ <name4> ] = <val3>
<name5> 、 <name2> 、 <name4> 、 <name3> を出力する	print ( <name5> , <name2> , <name4> , <name3> )	print ( <name5> , <name2> , <name4> , <name3> )
<name4> が <name6> 以下のとき ( <name1> 、 <name2> ) の組、そうでなければ ( <name6> 、 <name5> ) の組を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = ( <name1> , <name2> ) if <name4> <= <name6> else ( <name6> , <name5> )	<name5> , <name3> = ( <name1> , <name2> ) if <name4> <= <name6> else ( <name6> , <name5> )
<val2> を <name3> の先頭の <val6> 番目にする	<name3> [ <val6> ] [ <val6> ] = <val2>	( <name3> [ <val6> ] [ <val6> ] = <val2> )
<name1> の <name4> 番目の <name5> 番目が <val2> と等しいとき、	if <name1> [ <name4> ] [ <name5> ] == <val2> :	while <name1> [ <name4> ] [ <name5> ] == <val2> :
<name4> に <name3> を加えた値に <name1> を加えた値に <name6> を加えた値が <name5> と等しいとき、 <blk> <name2> を <val4> だけ増加させる </blk>	if <name4> + <name3> + <name1> + <name6> == <name5> : <blk> <name2> += <val4> </blk>	<blk> if <name4> + <name3> + <name1> + <name6> == <name5> : <blk> <name2> += <val4> </blk>
<name2> の <name5> から <name6> の <name5> を引いた値を返す	return <name2> . <name5> - <name6> . <name5>	x return <name2> . <name5> - <name6> . <name5>
<name3> を <name2> を <name1> で割った商の文字列だけ増加させる	<name3> += str ( <name2> // <name1> )	<name3> += str ( <name2> // <name1> )
<name3> ( <name6> , <name2> ) を <name1> とする	<name1> = <name3> ( <name6> , <name2> )	<name1> = <name3> ( <name6> , <name2> )
<name2> ( <name1> ( <name6> ( ) ) )	<name2> ( <name1> ( <name6> ( ) ) )	set ( <name2> ( <name1> ( <name6> ( ) ) ) )
<name2> が <name6> より小さいとき、 <blk> <name2> を <name6> とする </blk>	if <name2> < <name6> : <blk> <name6> = <name2> </blk>	for <name6> in <name2> < <name6> : <blk> <name6> = <name2> </blk>
<name2> の <name5> 番目から <name2> の <name5> から <val6> を引いた値番目を引いた値が <name1> より小さいとき、 <blk> <name4> を <name2> の <name5> 番目から <name2> の <name5> から <val6> を引いた値番目を引いた値だけ増加させる </blk>	if <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] < <name1> : <blk> <name4> += <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] </blk>	if <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] < <name1> : <blk> <name4> += <name2> [ <name5> ] - <name2> [ <name5> - <val6> ] </blk>
<name4> の <name2> が -1 と等しくかつ <name4> の <name5> が -1 と等しいとき、	if <name4> . <name2> == - 1 and <name4> . <name5> == - 1 :	list ( <name4> . <name2> == - 1 and <name4> . <name5> == - 1 ) :
<val5> に <name1> に <name3> の <val5> 番目を掛けた値を <val4> で割った値を加えた値を <name2> とする	<name2> = <val5> + <name1> * <name3> [ <val5> ] / <val4>	<name2> = <val5> + <name1> * <name3> [ <val5> ] / <val4>
<name1> の末尾に ( <name3> から <name5> を引いた値、 <name2> から <name4> の . <val6> 乗を引いた値 ) の組を追加する	<name1> . append ( ( <name3> - <name5> , <name2> - <name4> ** . <val6> ) )	<name1> . append ( ( <name3> - <name5> , <name2> - <name4> ** . <val6> ) )
<name4> ( <name2> * <val1> + <val6> , <name5> , <name3> , <name4> ) を返す	return <name4> ( <name2> * <val1> + <val6> , <name5> , <name3> , <name4> )	yield <name4> ( <name2> * <val1> + <val6> , <name5> , <name3> , <name4> )
<name6> の <name1> 番目から <name5> の <name1> 番目を引いた値の絶対値が <name2> より大きいとき、	if abs ( <name6> [ <name1> ] - <name5> [ <name1> ] ) > <name2> :	> abs ( <name6> [ <name1> ] - <name5> [ <name1> ] ) > <name2> :
<name2> ( <name3> , <name5> , <name6> ) を無限の整数列とする	count = <name2> ( <name3> , <name5> , <name6> )	count = <name2> ( <name3> , <name5> , <name6> )
<name4> の <name6> 番目の <name2> 番目でないとき、	if not <name4> [ <name6> ] [ <name2> ] :	for <name4> in not <name4> [ <name6> ] [ <name2> ] :
<name3> が <name5> より小さくまたは <name1> が <name6> より小さいとき、	if <name3> < <name5> or <name1> < <name6> :	if <name3> < <name5> or <name1> < <name6> :
<name3> が <val2> より小さいとき、 <blk> <val2> を <name3> とする </blk>	if <name3> < <val2> : <blk> <name3> = <val2> </blk>	\ <name3> = <name3> < <val2> : <blk> <name3> = <val2> </blk>
<name1> に <name2> を加えた値から <val6> を引いた値に <val3> を掛けた値に <name5> を加えた値を <name1> とする	<name1> = ( <name1> + <name2> - <val6> ) * <val3> + <name5>	<name4> = ( <name1> + <name2> - <val6> ) * <val3> + <name5>
q 、 <name4> からの配列を <name1> の <name5> にする	<name1> . <name5> = array ( 'q' , <name4> )	not <name1> . <name5> = array . datetime ( <name4> , <name4> )
<name1> の末尾に <name5> の <name4> から <val6> を引いた値番目を追加する	<name1> . append ( <name5> [ <name4> - <val6> ] )	<name1> . append ( <name5> [ <name4> - <val6> ] )
<name3> の末尾に ( <name6> 、 <name4> 、 <name1> に <val2> を加えた値、 <name5> 、 <name3> ) の組を追加する	<name3> . append ( ( <name6> , <name4> , <name1> + <val2> , <name5> , <name3> ) )	<name4> . append ( ( <name6> , <name4> , <name1> + <val2> , <name5> , <name3> ) )
<name3> から <val5> を引いた値から <name3> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> - <val5> , <name3> + <val6> ) :	. for <name1> in range ( <name3> - <val5> , <name3> + <val6> ) :
<name5> の <name6> と <val1> を <name4> だけ左シフトした値の論理積が <val2> と等しくないかどうかを返す	return <name5> . <name6> & ( <val1> << <name4> ) != <val2>	self = <name5> . <name6> & ( <val1> << <name4> ) != <val2>
0 から <name2> に <val3> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> + <val3> ) :	for <name4> in range ( <name2> + <val3> ) :
<name4> ( <name6> , <name3> ) を <name5> とする	<name5> = <name4> ( <name6> , <name3> )	<name5> = <name4> ( <name6> , <name3> )
<name1> の <name6> に <val3> を加えた値番目から <name1> の <name6> 番目を引いた値が <val3> と等しくないとき、	if <name1> [ <name6> + <val3> ] - <name1> [ <name6> ] != <val3> :	raise ( <name1> [ <name6> + <val3> ] - <name1> [ <name6> ] ) != <val3> :
<name2> の <name4> に <val1> を掛けた値番目の <name3> から <val6> を引いた値番目が <val5> と等しいとき、つまり真、そうでなければ、つまり偽を返す	return True if <name2> [ <name4> * <val1> ] [ <name3> - <val6> ] == <val5> else False	False return True if <name2> [ <name4> * <val1> ] [ <name3> - <val6> ] == <val5> else False
<name6> が <name4> の <name5> 以下の間、次を繰り返す	while <name6> <= <name4> . <name5> :	del <name6> <= <name4> . <name5> :
( <name1> 、 os . <name5> の逆順 ) の組を返す	return ( <name1> , <name5> [ : : - 1 ] )	yield ( <name1> , <name5> [ : : - 1 ] )
( ( <val3> , <val2> ) 、 ( <val5> , <val6> ) 、 ( <val1> , <val4> ) 、 ( <val3> , <val2> ) ) からなる辞書を <name4> とする	<name4> = { <val3> : <val2> , <val5> : <val6> , <val1> : <val4> , <val3> : <val2> }	<name4> = { <val3> : <val2> , <val5> : <val6> , <val1> : <val4> , <val3> : <val2> }
<name3> に <name3> を掛けた値から <val4> 未満までの <name3> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> * <name3> , <val4> , <name3> ) :	) for <name6> in range ( <name3> * <name3> , <val4> , <name3> ) :
空列を <name6> の <name4> 番目から <name1> 番目までの部分列にする	<name6> [ <name4> : <name1> ] = [ ]	<name4> [ <name4> : <name1> ] = [ ]
<name4> を <val5> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = map ( float , <name4> . split ( <val5> ) )	<name3> , <name1> = map ( float , <name4> . split ( <val5> ) )
<val3> を <name1> とするを <name6> とする	<name6> = <name1> = <val3>	else = <name1> = <val3>
<name1> を <val2> 倍にする	<name1> *= <val2>	not <name1> *= <val2>
<name6> ( <name3> . <name2> ) 改行せずに <val5> 、 <name3> の <name4> を出力する <name6> ( <name3> . <name1> )	<name6> ( <name3> . <name2> ) print ( <val5> , <name3> . <name4> , end = <val5> ) <name6> ( <name3> . <name1> )	set ( <name6> ( <name3> . <name2> ) , <val5> , <name3> . <name4> , end = <val5> ) <name6> ( <name3> . <name1> )
<name5> の <name4> と等しい要素の最初の位置を <name3> とする	<name3> = <name5> . index ( <name4> )	<name4> = <name5> . index ( <name4> )
0 から <name4> 未満までの数列の各要素を <name2> とし、 <val3> の列を <name5> とする	<name5> = [ <val3> for <name2> in range ( <name4> ) ]	<name5> = [ <val3> for <name2> in range ( <name4> ) ]
<val1> から <name6> の <val3> 乗の整数値に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , int ( <name6> ** <val3> ) + <val5> ) :	. for <name2> in range ( <val1> , int ( <name6> ** <val3> ) + <val5> ) :
<name3> ( <val1> , [ <val5> , <val2> , <val4> ] ) を <name6> とする	<name6> = <name3> ( <val1> , [ <val5> , <val2> , <val4> ] )	<name6> = <name3> ( <val1> , [ <val5> , <val2> , <val4> ] )
<name3> が ( <val5> ) からなる列と等しいとき、	if <name3> == [ <val5> ] :	list if <name3> == [ <val5> ] :
<val2> を書式として <name6> の x 座標で整形した文字列に <val3> を加えた値に <val2> を書式として <name6> の y 座標で整形した文字列を加えた値を返す	return <val2> . format ( <name6> . x ) + <val3> + <val2> . format ( <name6> . y )	return <val2> . format ( <name6> . x ) + <val3> + <val2> . format ( <name6> . y )
( <name5> ) からなる列の <name6> の <name4> 回分の列を <name1> とする	<name1> = [ <name5> ] * <name6> . <name4>	<name1> = [ <name5> ] * <name6> . <name4>
<name4> に <name6> を掛けた値が <name2> より大きいとき、	if <name4> * <name6> > <name2> :	for <name4> * <name6> > <name2> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> 、 <name5> とする	<name4> , <name2> , <name5> = map ( int , input ( ) . split ( ) )	<name3> , <name2> , <name5> = map ( int , input ( ) . split ( ) )
<name6> ( <name4> , <val5> ) を <name3> とする	<name3> = <name6> ( <name4> , <val5> )	else = <name6> ( <name4> , <val5> )
<val6> の <val3> 乗に <val5> を加えた値を <name1> とする	<name1> = <val6> ** <val3> + <val5>	<name1> = <val6> ** <val3> + <val5>
<name5> の最小値、 <name5> の最大値、 <name5> の総和を出力する	print ( min ( <name5> ) , max ( <name5> ) , sum ( <name5> ) )	[ min ( <name5> ) , max ( <name5> ) , sum ( <name5> ) )
<name6> の -1 番目を <name1> の、つまり現在の日時番目だけ減少させる	<name6> [ - 1 ] -= <name1> [ now ]	<name1> [ - 1 ] -= <name1> [ now ]
<name4> . <name1> ( <name3> ) のとき、	if <name4> . <name1> ( <name3> ) :	list <name4> . <name1> ( <name3> ) :
<name1> の先頭が <name5> の <val4> 番目と等しいとき、	if <name1> [ 0 ] == <name5> [ <val4> ] :	>= <name1> [ 0 ] == <name5> [ <val4> ] :
<name3> ( <name5> , <name2> )	<name3> ( <name5> , <name2> )	<name2> ( <name5> , <name2> )
<name5> が <val1> より大きくかつ <name5> を <val1> で割った余りが <val2> と等しいとき、	if <name5> > <val1> and <name5> % <val1> == <val2> :	continue <name5> > <val1> and <name5> % <val1> == <val2> :
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> とする <name4> を <val3> だけ減少させる <name1> を <val3> だけ減少させる	<name4> , <name1> = map ( int , <name6> ( ) . split ( ) ) <name4> -= <val3> <name1> -= <val3>	<name5> , <name4> , <name1> = map ( int , <name6> ( ) . split ( ) ) <name4> -= <val3> <name1> -= <val3>
<name6> に番号付した組の列を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in enumerate ( <name6> ) :	for <name3> , <name5> in enumerate ( <name6> ) :
( - <name3> 、 <name3> ) からなる列を <name4> とする ( - <name3> 、 <name3> ) からなる列を <name6> とする	<name4> = [ - <name3> , <name3> ] <name6> = [ - <name3> , <name3> ]	else = [ - <name3> , <name3> ] <name6> = [ - <name3> , <name3> ]
<name6> 、 <name4> を <name3> で割った商の最大値を <name6> とする	<name6> = max ( <name6> , <name4> // <name3> )	<name6> = max ( <name6> , <name4> // <name3> )
<name4> の <name3> 番目を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name4> [ <name3> ]	<name1> [ <name2> ] = <name4> [ <name3> ]
<name1> を <name4> に <name2> を加えた値だけ増加させる	<name1> += <name4> + <name2>	( <name1> += <name4> + <name2> )
<name6> の <name1> 番目から <val4> に <name3> を掛けた値までの部分列を <name5> とする	<name5> = <name6> [ <name1> : <val4> * <name3> ]	<name5> = <name6> [ <name1> : <val4> * <name3> ]
<name2> の <val3> 番目の <val4> 番目から <name2> の先頭の <val4> 番目を引いた値を <name2> の <val3> 番目の <val1> 番目から <name2> の先頭の先頭を引いた値で割った値を <name6> とする	<name6> = ( <name2> [ <val3> ] [ <val4> ] - <name2> [ <val1> ] [ <val4> ] ) / ( <name2> [ <val3> ] [ <val1> ] - <name2> [ <val1> ] [ <val1> ] )	<name6> = ( <name2> [ <val3> ] [ <val4> ] - <name2> [ <val4> ] [ <val4> ] ) / ( <name2> [ <val3> ] [ <val1> ] - <name2> [ <val4> ] [ <val4> ] )
<val1> 、 <name6> から <val3> を引いた値の最大値をそうでなければ、とする	else = max ( <val1> , <name6> - <val3> )	else = max ( <val1> , <name6> - <val3> )
<name4> を <name6> で割った値を <name2> とする	<name2> = <name4> / <name6>	<name2> = <name4> / <name6>
0 から <name1> の <name2> 番目未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> [ <name2> ] ) :	: for <name6> in range ( <name1> [ <name2> ] ) :
#を <name3> の <val5> に <name6> を掛けた値に <val4> を加えた値番目の <val1> 番目にする	<name3> [ <val5> * <name6> + <val4> ] [ <val1> ] = '#'	<name1> [ <val5> * <name6> + <val4> ] [ <val1> ] = '#'
<name1> を <name3> の <name3> の長さから <name6> を引いた値から <val5> を引いた値番目だけ増加させる	<name1> += <name3> [ len ( <name3> ) - <name6> - <val5> ]	<name1> += <name3> [ len ( <name3> ) - <name6> - <val5> ]
<name4> の <name5> 番目が <name3> の <name6> 番目と等しいとき、	if <name4> [ <name5> ] == <name3> [ <name6> ] :	or <name4> [ <name5> ] == <name3> [ <name6> ] :
<name1> ( [ <name6> ( <name4> ) , <name3> ] )	<name1> ( [ <name6> ( <name4> ) , <name3> ] )	<name1> ( [ <name6> ( <name4> ) , <name3> ] )
<name1> の <name4> に <val3> を加えた値番目を <name5> を <val2> で割った商だけ増加させる	<name1> [ <name4> + <val3> ] += <name5> // <val2>	<name2> [ <name1> [ <name4> + <val3> ] ] += <name5> // <val2>
<name3> の <val6> 番目から <val2> 番目までの部分列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> とする <name4> を <val6> だけ増加させる	<name5> , <name4> = map ( int , <name3> [ <val6> : <val2> ] ) <name4> += <val6>	else , <name4> = map ( int , <name3> [ <val6> : <val2> ] ) <name4> += <val6>
<name4> の <name6> 番目が <val3> と等しいとき、 <blk> <name2> を <val1> だけ減少させる </blk>	if <name4> [ <name6> ] == <val3> : <blk> <name2> -= <val1> </blk>	\ if <name4> [ <name6> ] == <val3> : <blk> <name2> -= <val1> </blk>
<name3> ( [ <name5> ( <name1> ( ) ) for_inrange ( <val6> ) ] )	<name3> ( [ <name5> ( <name1> ( ) ) for _ in range ( <val6> ) ] )	<name5> <name3> ( [ <name5> ( <name1> ( ) ) ] + [ ( <val6> ) ] ) )
を間に入れて <name1> を連結した文字列を返す	return '' . join ( <name1> )	x return '' . join ( <name1> )
改行せずに <name5> の <name4> の <name2> 番目番目を出力する	print ( <name5> [ <name4> [ <name2> ] ] , end = '' )	print ( <name5> [ <name4> [ <name2> ] ] , end = '' )
<name4> の <name1> に <name3> の <name5> を掛けた値から <name4> の <name5> に <name3> の <name1> を掛けた値を引いた値を返す	return <name4> . <name1> * <name3> . <name5> - <name4> . <name5> * <name3> . <name1>	x return <name4> . <name1> * <name3> . <name5> - <name4> . <name5> * <name3> . <name1>
入力された文字列を <val3> で分割した字句列を展開し、それぞれ <name1> 、 <name4> 、 <name2> とする	<name1> , <name4> , <name2> = input ( ) . split ( <val3> )	dict , <name2> = input ( ) . split ( <val3> )
<name5> の <name4> 番目の順序数に <name6> を加えた値を <name2> とする	<name2> = ord ( <name5> [ <name4> ] ) + <name6>	<name2> = ord ( <name5> [ <name4> ] ) + <name6>
( ( <val6> , <val1> ) 、 ( <val4> , <val3> ) 、 ( <val2> , <val5> ) ) からなる辞書	{ <val6> : <val1> , <val4> : <val3> , <val2> : <val5> }	def <val6> : <val1> , <val4> : <val3> , <val2> : <val5> }
<name4> に <name6> を掛けた値に <name5> を加えた値を <name1> で割った余りを <name6> とする	<name6> = ( <name4> * <name6> + <name5> ) % <name1>	<name6> = ( <name4> * <name6> + <name5> ) % <name1>
<name2> を <val4> だけ減少させる <name2> の文字列を <name1> とする <name1> の長さを <name6> とする	<name2> -= <val4> <name1> = str ( <name2> ) <name6> = len ( <name1> )	<name6> = <name2> -= <val4> <name1> = str ( <name2> ) <name6> = len ( <name1> )
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を <name4> とする	<name4> = map ( int , <name1> . readline ( ) . split ( ) )	<name4> = map ( int , <name1> . readline ( ) . split ( ) )
<name6> から <val1> を引いた値、 <name2> から <name6> を引いた値から <val1> を引いた値の最小値を <name5> とする	<name5> = min ( <name6> - <val1> , <name2> - <name6> - <val1> )	else = min ( <name6> - <val1> , <name2> - <name6> - <val1> )
<name1> を <name5> の <name4> で集約した列を <name6> とする	<name6> = reduce ( <name5> . <name4> , <name1> )	<name6> = reduce ( <name5> . <name4> , <name1> )
入力された文字列を <name1> とする	<name1> = input ( )	<name1> = input ( )
<name1> を <name4> に <val6> を掛けた値に <name5> を加えた値だけ増加させる	<name1> += <name4> * <val6> + <name5>	( <name1> += <name4> * <val6> + <name5> )
<name4> の <name2> が <name3> と等しいとき、	if <name4> . <name2> == <name3> :	: if <name4> . <name2> == <name3> :
偽を <name1> の <val4> に <name3> から <name6> を引いた値を加えた値番目にする	<name1> [ <val4> + ( <name3> - <name6> ) ] = False	else [ <name1> [ <val4> + ( <name3> - <name6> ) ] = False
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name2> 、 <name6> とする	<name3> , <name5> , <name2> , <name6> = map ( int , input ( ) . split ( ) )	<name5> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name6> が、つまり未定値と等しくかつ <name2> が、つまり未定値と等しいとき、	if <name6> is not None and <name2> is not None :	enumerate if <name6> == None and <name2> is not None :
<name2> の各要素を <name5> とし、 <name5> を空白で分割した字句列の列を <name1> とする	<name1> = [ <name5> . split ( ) for <name5> in <name2> ]	<name1> = [ <name5> . split ( ) for <name5> in <name2> ]
( 、つまり未定値 ) からなる列の <val4> に <name6> を掛けた値回分の列を <name2> とする	<name2> = [ None ] * ( <val4> * <name6> )	<name2> = [ None ] * ( <val4> * <name6> )
<name3> 、 <name5> ( <name4> , <name2> ) に <val1> を加えた値の最大値を <name3> とする	<name3> = max ( <name3> , <name5> ( <name4> , <name2> ) + <val1> )	<name3> = max ( <name3> , <name5> ( <name4> , <name2> ) + <val1> )
<val2> 、 <val6> を <name4> 、 <name3> とする	<name4> , <name3> = <val2> , <val6>	<name2> , <name4> , <name3> = <val2> , <val6>
( <val2> 、 <val2> ) からなる列に ( <val1> ) からなる列の <val3> 回分の列を加えた値を <name5> とする	<name5> = [ <val2> , <val2> ] + [ <val1> ] * <val3>	<name5> = [ <val2> , <val2> ] + [ <val1> ] * <val3>
<name5> の <name4> を <name3> で割った余り番目を <name1> とする	<name1> = <name5> [ <name4> % <name3> ]	<name1> = <name5> [ <name4> % <name3> ]
<name2> の <name1> と <name4> の排他論理和のビット長番目の末尾に <name3> を追加する	<name2> [ ( <name1> ^ <name4> ) . bit_length ( ) ] . append ( <name3> )	<name1> [ ( <name1> ^ <name4> ) . bit_length ( ) ] . append ( <name3> )
0 から <val5> 未満までの数列の各要素を <name6> とし、 0 から <val2> 未満までの数列の各要素を <name3> とし、 <val4> の列の列を <name1> とする	<name1> = [ [ <val4> for <name3> in range ( <val2> ) ] for <name6> in range ( <val5> ) ]	<name1> = [ [ <val4> for <name3> in range ( <val2> ) ] for <name6> in range ( <val5> ) ]
<name3> が ( <val6> 、 <val1> 、 <val1> 、 <val1> ) からなる列と等しいとき、	if <name3> == [ <val6> , <val1> , <val1> , <val1> ] :	for <name3> in [ <val6> , <val1> , <val1> , <val1> ] :
<name4> から <val3> を引いた値から <name5> から <val3> を引いた値未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> - <val3> , <name5> - <val3> , - <val3> ) :	. for <name2> in range ( <name4> - <val3> , <name5> - <val3> , - <val3> ) :
<name3> が <val5> と等しくかつ <name4> が <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name3> == <val5> and <name4> == <val5> : <blk> break </blk>	enumerate ( <name3> == <val5> and <name4> == <val5> ) : <blk> break </blk>
<val3> を <name1> の <name4> 番目の <name4> 番目にする	<name1> [ <name4> ] [ <name4> ] = <val3>	( <name1> [ <name4> ] [ <name4> ] = <val3> )
<name6> [ <name4> [ <val5> ] ] . <name3> ( )	<name6> [ <name4> [ <val5> ] ] . <name3> ( )	<name5> [ <name4> [ <val5> ] ] . <name3> ( )
<name4> の <name3> 番目が <name4> の <name6> 番目に <name1> を加えた値より大きいとき、	if <name4> [ <name3> ] > <name4> [ <name6> ] + <name1> :	if <name4> [ <name3> ] > <name4> [ <name6> ] + <name1> :
<name1> 内の <name3> の出現回数を出力する	print ( <name1> . count ( <name3> ) )	print ( <name1> . count ( <name3> ) )
<name4> ( [ <name6> , <name5> ] )	<name4> ( [ <name6> , <name5> ] )	<name4> ( [ <name6> , <name5> ] )
<name3> の <name6> 番目と <val1> の論理積のとき、	if <name3> [ <name6> ] & <val1> :	for <name3> in <name3> [ <name6> ] & <val1> :
<val1> を代わりの行末として <val2> を書式として <name5> の <name4> 番目で整形した文字列を出力する	print ( <val2> . format ( <name5> [ <name4> ] ) , end = <val1> )	all = <val2> . format ( <name5> [ <name4> ] ) , end = <val1> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name5> 、 <name6> とする	<name1> , <name4> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name4> , <name5> , <name6> = map ( int , input ( ) . split ( ) )
<name2> . <name2> の <name1> 番目の <name3> 番目を <name6> で割った余りに <name4> を掛けた値を <name6> で割った余り	<name2> . <name2> [ <name1> ] [ <name3> ] % <name6> * <name4> % <name6>	pow ( <name2> . <name2> [ <name1> ] [ <name3> ] % <name6> * <name4> % <name6> )
<name6> の <name2> 番目が -1 と等しくないとき、	if <name6> [ <name2> ] != - 1 :	for <name6> [ <name2> ] != - 1 :
<name2> に <name1> に <name3> を掛けた値を加えた値を <name6> とする	<name6> = <name2> + <name1> * <name3>	<name6> = <name2> + <name1> * <name3>
<name4> の x 座標に <name1> の x 座標を掛けた値に <name4> の y 座標に <name1> の y 座標を掛けた値を加えた値を <name2> とする	<name2> = <name4> . x * <name1> . x + <name4> . y * <name1> . y	<name2> = <name4> . x * <name1> . x + <name4> . y * <name1> . y
<name3> を <name5> の <val6> 番目にする	<name5> [ <val6> ] = <name3>	( <name5> [ <val6> ] = <name3> )
<name6> の <name5> 番目の <name1> 番目が <val4> と等しいとき、	if <name6> [ <name5> ] [ <name1> ] == <val4> :	if <name6> [ <name5> ] [ <name1> ] == <val4> :
0 から <name3> 未満までの数列を順に <name2> として、繰り返す <blk> 文字コード <name2> に <name6> を加えた値の文字を <name4> の <name1> ( <name5> ( <name2> + <name6> ) ) 番目にする </blk>	for <name2> in range ( <name3> ) : <blk> <name4> [ <name1> ( <name5> ( <name2> + <name6> ) ) ] = <name5> ( <name2> + <name6> ) </blk>	try : <blk> <name4> [ <name1> ( <name5> ( <name2> + <name6> ) ] = chr ( <name2> + <name6> ) ) </blk>
<name5> の両端から空白改行を取り除いた文字列を <val2> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = [ int ( <name1> ) for <name1> in <name5> . strip ( ) . split ( <val2> ) ]	<name4> = [ int ( <name1> ) for <name1> in <name5> . strip ( ) . split ( <val2> ) ]
<name2> の末尾に <name4> を追加する	<name2> . append ( <name4> )	<name4> . append ( <name4> )
<name2> に <name5> を掛けた値から <name3> に <name1> を掛けた値を引いた値に <name4> に <name6> を掛けた値を加えた値に <name2> に <name5> を掛けた値を加えた値を <name6> とする	<name6> = <name2> * <name5> - <name3> * <name1> + <name4> * <name6> + <name2> * <name5>	<name6> = <name2> * <name5> - <name3> * <name1> + <name4> * <name6> + <name2> * <name5>
<name4> の先頭を取り出した値を展開し、それぞれ <name6> 、 <name3> 、 <name1> とする	<name6> , <name3> , <name1> = <name4> . pop ( )	<name2> , <name6> , <name3> , <name1> = <name4> . pop ( )
<name2> に <val5> を加えた値を返す	return <name2> + <val5>	yield <name2> + <val5>
<name5> の <name3> 番目から <name3> に <val1> を加えた値までの部分列を削除する	del <name5> [ <name3> : <name3> + <val1> ]	| = <name5> [ <name3> : <name3> + <val1> ]
<name4> の <name2> 番目から <name1> に <val5> を加えた値までの部分列を出力する	print ( <name4> [ <name2> : <name1> + <val5> ] )	print ( <name4> [ <name2> : <name1> + <val5> ] )
<name6> の <name1> 番目の <name3> 番目、 <name6> の <name1> に <val5> を加えた値番目の <name3> から <val5> を引いた値番目の最大値を <name6> の <name1> に <val5> を加えた値番目の <name3> 番目にする	<name6> [ <name1> + <val5> ] [ <name3> ] = max ( <name6> [ <name1> ] [ <name3> ] , <name6> [ <name1> + <val5> ] [ <name3> - <val5> ] )	<name5> [ <name1> + <val5> ] [ <name3> ] = max ( <name6> [ <name1> ] [ <name3> ] , <name6> [ <name1> + <val5> ] [ <name3> - <val5> ] )
<name6> が <name1> から <val4> を引いた値と等しいとき、	if <name6> == <name1> - <val4> :	: if <name6> == <name1> - <val4> :
<name3> . <name2> ( <name1> , <name5> , <name6> * <val4> + <val4> , ( <name3> + <name2> ) // <val4> , <name2> ) を <name4> とする	<name4> = <name3> . <name2> ( <name1> , <name5> , <name6> * <val4> + <val4> , ( <name3> + <name2> ) // <val4> , <name2> )	<name4> = <name3> . <name2> ( <name1> , <name5> , <name6> * <val4> + <val4> , ( <name3> + <name2> ) // <val4> , <name2> )
<name1> の末尾に <val2> を ( <name6> から <val5> を引いた値、 <name3> 、 <name4> ) の組で割った余りを追加する	<name1> . append ( ( <val2> ) % ( <name6> - <val5> , <name3> , <name4> ) )	<name1> . append ( <val2> % ( <name6> - <val5> , <name3> , <name4> ) )
<name2> が <name6> 以上のとき、	if <name2> >= <name6> :	if <name2> >= <name6> :
TLE を出力する	print ( 'TLE' )	dict print ( 'Data ' )
<name4> を <name6> の <name5> 番目にする	<name6> [ <name5> ] = <name4>	( <name6> [ <name5> ] = <name4> )
<name2> に <name1> を掛けた値が <val5> 以下かつ <name4> に <name3> を掛けた値が <val5> 以下のとき、	if <name2> * <name1> <= <val5> and <name4> * <name3> <= <val5> :	list ( <name2> * <name1> <= <val5> and <name4> * <name3> <= <val5> ) :
<name6> の <name3> の <name1> 番目に <val5> を加えた値を <name6> の <name3> の <name2> 番目にする	<name6> . <name3> [ <name2> ] = <name6> . <name3> [ <name1> ] + <val5>	<name2> . <name3> [ <name2> ] = <name6> . <name3> [ <name1> ] + <val5>
<val2> の <val5> 乗、 <val6> を <name3> 、 <name1> とする	<name3> , <name1> = <val2> ** <val5> , <val6>	<name3> , <name1> = <val2> ** <val5> , <val6>
<val6> の <name3> と等しい要素の最初の位置を出力する	print ( <val6> . index ( <name3> ) )	print ( <val6> . index ( <name3> ) )
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name5> と <name6> ( ) の整数値のユークリッド距離の列の総和を出力する	print ( sum ( [ dist ( <name5> , int ( <name6> ( ) ) ) for <name4> in range ( <name3> ) ] ) )	sum ( [ dist ( <name5> , int ( <name6> ( ) ) ) for <name4> in range ( <name3> ) ] ) )
<name5> の <name3> 番目の <name4> 番目を <val2> だけ減少させる	<name5> [ <name3> ] [ <name4> ] -= <val2>	<name1> [ <name3> ] [ <name4> ] -= <val2>
<name5> ( ) の両端から空白改行を取り除いた文字列を空白で分割した字句列を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = <name5> ( ) . strip ( ) . split ( )	input , <name6> = <name5> ( ) . strip ( ) . split ( )
\ <val4> を間に入れて <name1> を連結した文字列を出力する\	\ print ( <val4> . join ( <name1> ) ) \	\ print ( <val4> . join ( <name1> ) ) \
<name6> が ( <val2> 、 <val5> 、 <val3> 、 <val1> ) からなる列と等しくない間、次を繰り返す	while <name6> != [ <val2> , <val5> , <val3> , <val1> ] :	try != [ <val2> , <val5> , <val3> , <val1> ] :
<name4> を <name2> の、つまりソートされた順序を保ったまま <name4> を <name2> に挿入できる位置番目にする	<name2> [ bisect . bisect_left ( <name2> , <name4> ) ] = <name4>	<name2> [ bisect . bisect_left ( <name2> , <name4> ) ] = <name4>
<name6> の <name3> 番目を展開し、それぞれ <name1> 、 <name5> 、 <name2> とする	<name1> , <name5> , <name2> = <name6> [ <name3> ]	( <name1> , <name5> , <name2> = <name6> [ <name3> ] )
<name4> から <val2> を引いた値、 <name6> 、 <name3> において正規表現 <name1> が最初にマッチする位置を <name5> とする	<name5> = search ( <name1> , <name4> - <val2> , <name6> , <name3> )	<name5> = search ( <name1> , <name4> - <val2> , <name6> , <name3> )
<name3> を <name4> とする <name5> を <name2> とする	<name4> = <name3> <name2> = <name5>	<name6> = <name3> <name2> = <name5>
os . <name5> の末尾に <name1> を追加する	<name5> . append ( <name1> )	<name1> . append ( <name1> )
<name3> に <name1> の <name4> 番目から <name6> の <name4> 番目を引いた値の <val5> 乗を加えた値を <name3> とする	<name3> = <name3> + ( ( <name1> [ <name4> ] - <name6> [ <name4> ] ) ** <val5> )	<name3> = <name3> + ( <name1> [ <name4> ] - <name6> [ <name4> ] ) ** <val5>
<name1> が <val3> と等しいとき、 <blk> <name5> ( <name4> , <name6> [ <val3> ] ) </blk>	if <name1> == <val3> : <blk> <name5> ( <name4> , <name6> [ <val3> ] ) </blk>	\ <name1> == <val3> : <blk> <name5> ( <name4> , <name6> [ <val3> ] ) </blk>
<name2> が <name1> の長さ以上のとき、	if <name2> >= len ( <name1> ) :	for <name2> >= len ( <name1> ) :
<name3> に <name5> を加えた値を <name6> とする	<name6> = <name3> + <name5>	<name6> = <name3> + <name5>
入力された文字列を空白で分割した字句列を展開し、それぞれ <name6> 、 <name4> 、 <name2> とする	<name6> , <name4> , <name2> = input ( ) . split ( )	<name4> , <name2> = input ( ) . split ( )
<name1> の <val2> 番目が <val3> と等しいとき、	if <name1> [ <val2> ] == <val3> :	: if <name1> [ <val2> ] == <val3> :
<name4> の <name5> 番目が <val1> と等しいとき、	if <name4> [ <name5> ] == <val1> :	: if <name4> [ <name5> ] == <val1> :
<name4> の -3 番目から、つまり末尾までの -1 間隔による部分列を順に <name1> として、繰り返す	for <name1> in <name4> [ - 3 : : - 1 ] :	: for <name1> in <name4> [ - 3 : : - 1 ] :
<val5> を <name4> の <val6> 番目にする	<name4> [ <val6> ] = <val5>	( <name4> [ <val6> ] = <val5> )
真を <name1> の <val3> 番目にする	<name1> [ <val3> ] = True	( <name1> [ <val3> ] = True )
<name2> の <name4> 番目を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in <name2> [ <name4> ] :	for <name1> , <name5> in <name2> [ <name4> ] :
<name4> の <name2> の <name1> 番目を <name5> とする	<name5> = <name4> . <name2> [ <name1> ]	<name5> = <name4> . <name2> [ <name1> ]
<name5> . <name1> ( <name3> , <name4> , <name6> ( <name2> , <name5> ) , <name1> )	<name5> . <name1> ( <name3> , <name4> , <name6> ( <name2> , <name5> ) , <name1> )	<name1> . <name1> ( <name3> , <name4> , <name6> ( <name2> , <name5> ) , <name1> )
<name1> ( <name5> [ <val4> ] , <name5> [ <val3> ] ) を <name2> の <name5> にする	<name2> . <name5> = <name1> ( <name5> [ <val4> ] , <name5> [ <val3> ] )	dict . <name5> = <name1> ( <name5> [ <val4> ] , <name5> [ <val3> ] )
<name4> の <name6> の <name1> + <name5> から <val3> を引いた値番目に <name4> の <name2> の <name1> 番目を掛けた値に <name4> の <name2> の <name5> から <val3> を引いた値番目を掛けた値を <name4> の <name4> で割った余りを返す	return <name4> . <name6> [ <name1> + <name5> - <val3> ] * <name4> . <name2> [ <name1> ] * <name4> . <name2> [ <name5> - <val3> ] % <name4> . <name4>	x return <name4> . <name6> [ <name1> + <name5> - <val3> ] * <name4> . <name2> [ <name1> ] * <name4> . <name2> [ <name5> - <val3> ] % <name4> . <name4>
0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組の列を <name4> とする	<name4> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name6> ) ]	<name4> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name6> ) ]
<name4> ( <name6> , <name3> , <name1> , <name2> )	<name4> ( <name6> , <name3> , <name1> , <name2> )	<name5> ( <name4> ( <name6> , <name3> , <name1> , <name2> ) )
改行せずに <val2> を書式として <name6> で整形した文字列を出力する	print ( <val2> . format ( <name6> ) , end = '' )	, print ( <val2> . format ( <name6> ) , end = <val2> )
<name1> ( <name2> , <name3> ) を <name6> とする	<name6> = <name1> ( <name2> , <name3> )	<name6> = <name1> ( <name2> , <name3> )
<name4> の <val2> 番目から <name1> を引いた値から <val5> を引いた値を <name3> とするを <name4> の <val2> 番目にする	<name4> [ <val2> ] = <name3> = <name4> [ <val2> ] - <name1> - <val5>	bit_length [ <val2> ] = <name3> = <name4> [ <val2> ] - <name1> - <val5>
<name4> の <name1> 番目を <val3> で割った余りのとき、	if <name4> [ <name1> ] % <val3> :	list if <name4> [ <name1> ] % <val3> :
改行せずに <val6> を書式として <name1> で整形した文字列を出力する	print ( <val6> . format ( <name1> ) , end = '' )	end = <val6> . format ( <name1> ) , end = '' )
<name2> に <val5> を加えた値から <name1> の <name4> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> + <val5> , len ( <name1> . <name4> ) ) :	. for <name3> in range ( <name2> + <val5> , len ( <name1> . <name4> ) ) :
<name3> に <name3> を掛けた値に <name5> に <name5> を掛けた値を加えた値の <val2> 乗を <name6> とする	<name6> = ( <name3> * <name3> + <name5> * <name5> ) ** <val2>	<name6> = ( <name3> * <name3> + <name5> * <name5> ) ** <val2>
0 から <name5> に <val3> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> + <val3> ) :	for <name1> in range ( <name5> + <val3> ) :
真を <name2> の <name5> 番目の <val3> 番目にする	<name2> [ <name5> ] [ <val3> ] = True	( <name2> [ <name5> ] [ <val3> ] = True )
<name3> ( <name4> -1 ) を <name1> とする	<name1> = <name3> ( <name4> - 1 )	<name1> = <name3> ( <name4> - 1 )
<name5> の <name2> 番目が <val1> と等しいとき、 <blk> <name6> を <name3> とする </blk>	if <name5> [ <name2> ] == <val1> : <blk> <name3> = <name6> </blk>	\ <name3> = <name5> [ <name2> ] == <val1> : <blk> <name3> = <name6> </blk>
<name6> の <name1> の <name4> 番目の末尾に <name2> を追加する	<name6> . <name1> [ <name4> ] . append ( <name2> )	<name1> . <name1> [ <name4> ] . append ( <name2> )
<val2> から <name4> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 <name1> の列を <name5> とする	<name5> = [ <name1> for <name1> in range ( <val2> , <name4> + <val6> ) ]	<name4> = [ <name1> for <name1> in range ( <val2> , <name4> + <val6> ) ]
<name6> が <name2> の <name1> 番目の <val3> 番目以下かどうかが <name4> 以下のとき、	if <name6> <= <name2> [ <name1> ] [ <val3> ] <= <name4> :	if <name6> <= <name2> [ <name1> ] [ <val3> ] <= <name4> :
<val6> を <name1> を <name2> を <name5> とするとするとするを <name4> とする	<name4> = <name5> = <name2> = <name1> = <val6>	<name4> = <name5> = <name2> = <name1> = <val6>
<name2> が <val1> より大きいとき、 <blk> <name4> を <name3> から <name2> を引いた値だけ増加させる </blk>	if <name2> > <val1> : <blk> <name4> += <name3> - <name2> </blk>	<blk> if <name2> > <val1> : <blk> <name4> += <name3> - <name2> </blk>
<val3> を開始番号として <name2> の <val3> 番目から、つまり末尾までの部分列に番号付した組の列を順に <name4> 、 <name6> として、繰り返す	for <name4> , <name6> in enumerate ( <name2> [ <val3> : ] , start = <val3> ) :	. for <name4> , <name6> in enumerate ( <name2> [ <val3> : ] , start = <val3> ) :
<name3> を <val6> で分割した字句列を <name5> とする	<name5> = <name3> . split ( <val6> )	else = <name3> . split ( <val6> )
<name2> に <name6> から <name1> を引いた値を掛けた値に <name4> を掛けた値を <val3> に <name5> を掛けた値で割った値を <name5> とする	<name5> = <name2> * ( <name6> - <name1> ) * <name4> / ( <val3> * <name5> )	else = <name2> * ( <name6> - <name1> ) * <name4> / ( <val3> * <name5> )
<val6> から <name4> 未満までの数列の各要素を <name5> とし、 <val6> の列を <name2> とする	<name2> = [ <val6> for <name5> in range ( <name4> ) ]	<name6> = [ <val6> for <name5> in range ( <name4> ) ]
<name1> の <name3> の <name4> の <name2> 番目に <name5> の <name6> を加えた値が <name1> の <name3> の <name5> の <name1> 番目より小さいとき、	if <name1> . <name3> [ <name4> . <name2> ] + <name5> . <name6> < <name1> . <name3> [ <name5> . <name1> ] :	for <name1> . <name3> [ <name4> . <name2> ] + <name5> . <name6> < <name1> . <name3> [ <name5> . <name1> ] :
<name3> を <name5> の <name6> の <name4> 番目にする	<name5> . <name6> [ <name4> ] = <name3>	( <name5> [ <name6> . <name4> ] = <name3> )
<val5> を <name4> の <name2> の先頭の <name1> 番目にする	<name4> . <name2> [ 0 ] [ <name1> ] = <val5>	( <name4> . <name2> [ 0 ] [ <name1> ] = <val5> )
<name4> から <val1> を引いた値から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> - <val1> , - <val1> , - <val1> ) :	for <name2> in range ( <name4> - <val1> , - <val1> , - <val1> ) :
<val2> を書式として <name4> の <name6> 、 <name4> の <name3> 、 <name4> の <name1> 、 <name4> の <name5> 、 <name4> の <name2> 、 <name4> の <name4> で整形した文字列を出力する	print ( <val2> . format ( <name4> . <name6> , <name4> . <name3> , <name4> . <name1> , <name4> . <name5> , <name4> . <name2> , <name4> . <name4> ) )	end . format ( <name4> . <name6> , <name4> . <name3> , <name4> . <name1> , <name4> . <name5> , <name4> . <name2> , <name4> . <name4> ) )
<name1> から <val6> を引いた値を <name3> とする	<name3> = <name1> - <val6>	<name3> = <name1> - <val6>
<name4> の <name1> 番目の末尾に <val2> を追加する	<name4> [ <name1> ] . append ( <val2> )	<name2> [ <name1> ] . append ( <val2> )
<name6> の末尾に <name2> の整数値に <val5> を加えた値を追加する	<name6> . append ( int ( <name2> ) + <val5> )	<name4> . append ( int ( <name2> ) + <val5> )
<name6> の <val2> 番目の整数値、 <name6> の <val5> 番目の整数値を <name4> 、 <name3> とする	<name4> , <name3> = int ( <name6> [ <val2> ] ) , int ( <name6> [ <val5> ] )	<name6> , <name3> = int ( <name6> [ <val2> ] ) , int ( <name6> [ <val5> ] )
<val2> から <val4> に <name3> を掛けた値から <val1> を引いた値未満までの数列の各要素を <name6> とし、 <val2> の列を <name5> とする	<name5> = [ <val2> for <name6> in range ( <val4> * <name3> - <val1> ) ]	<name5> = [ <val2> for <name6> in range ( <val4> * <name3> - <val1> ) ]
<name3> が <name6> に含まれるとき <val2> 、そうでなければ <val5> を出力する	print ( <val2> if <name3> in <name6> else <val5> )	print ( <val2> if <name3> in <name6> else <val5> )
逆順に入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を <name3> とする	<name3> = sorted ( map ( int , input ( ) . split ( ) ) , reverse = True )	<name3> = sorted ( map ( int , input ( ) . split ( ) ) , reverse = True )
<name6> ( <name5> , <name3> -1 ) を返す	return <name6> ( <name5> , <name3> - 1 )	yield <name6> ( <name5> , <name3> - 1 )
<name4> の <name6> の <val1> 番目番目を <name4> の <name6> の先頭番目にする	<name4> [ <name6> [ 0 ] ] = <name4> [ <name6> [ <val1> ] ]	<name4> [ <name6> [ 0 ] ] = <name4> [ <name6> [ <val1> ] ]
<name5> の <name6> から <val1> を引いた値番目の末尾に <name2> を追加する	<name5> [ <name6> - <val1> ] . append ( <name2> )	<name1> [ <name6> - <val1> ] . append ( <name2> )
<name5> の <name1> の末尾番目を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = <name5> [ <name1> [ - 1 ] ]	<name4> , <name6> = <name5> [ <name1> [ - 1 ] ]
<name4> の <name1> に <val6> を加えた値から、つまり末尾までの部分列を <name2> とする	<name2> = <name4> [ <name1> + <val6> : ]	<name2> = <name4> [ <name1> + <val6> : ]
<val1> を <name2> の <name6> 番目にする	<name2> [ <name6> ] = <val1>	( <name2> [ <name6> ] = <val1> )
<name4> が <val1> より小さいとき、 <blk> - <name4> 、 - <name3> を <name4> 、 <name3> とする </blk>	if <name4> < <val1> : <blk> <name4> , <name3> = - <name4> , - <name3> </blk>	\ <name4> , <name3> = <name4> < <val1> : <blk> <name4> , <name3> = - <name4> , - <name3> </blk>
<name4> が <name6> より小さくかつ <name1> の <name5> 番目が <name1> の <name4> 番目より小さいかどうかを <name2> とする	<name2> = <name4> < <name6> and <name1> [ <name5> ] < <name1> [ <name4> ]	<name2> = <name4> < <name6> and <name1> [ <name5> ] < <name1> [ <name4> ]
<name3> の <name1> に <val4> を加えた値番目の <name6> に <val4> を加えた値番目、 <name3> の <name1> 番目の <name6> 番目に <name2> の <name1> 番目に <name5> の <name6> 番目を掛けた値を加えた値の最小値を <name3> の <name1> に <val4> を加えた値番目の <name6> に <val4> を加えた値番目にする	<name3> [ <name1> + <val4> ] [ <name6> + <val4> ] = min ( <name3> [ <name1> + <val4> ] [ <name6> + <val4> ] , <name3> [ <name1> ] [ <name6> ] + <name2> [ <name1> ] * <name5> [ <name6> ] )	<name2> [ <name1> + <val4> ] [ <name6> + <val4> ] = min ( <name3> [ <name1> + <val4> ] [ <name6> + <val4> ] , <name3> [ <name1> ] [ <name6> ] + <name2> [ <name1> ] * <name5> [ <name6> ] )
<name3> から <name1> に <name2> を掛けた値を引いた値を <name4> で割った値を <name6> とする	<name6> = ( <name3> - ( <name1> * <name2> ) ) / <name4>	<name6> = ( <name3> - <name1> * <name2> ) / <name4>
\ <val3> を書式として <name5> 、 <name4> で整形した文字列を出力する\	\ print ( <val3> . format ( <name5> , <name4> ) ) \	for print ( <val3> . format ( <name5> , <name4> ) ) \
<name5> を <name4> を <name6> で割った商だけ増加させる	<name5> += <name4> // <name6>	( <name5> += <name4> // <name6> )
<name1> ( <name5> ) を <name6> とする <name1> ( <name2> ) を <name3> とする	<name6> = <name1> ( <name5> ) <name3> = <name1> ( <name2> )	<name2> = <name1> ( <name5> ) <name3> = <name1> ( <name2> )
<name1> ( <name4> . <name5> )	<name1> ( <name4> . <name5> )	not <name1> ( <name4> . <name5> )
<name5> の末尾に ( <name1> 、 <name6> 、 <name2> 、 <name3> ) の組を追加する	<name5> . append ( ( <name1> , <name6> , <name2> , <name3> ) )	<name5> . append ( ( <name1> , <name6> , <name2> , <name3> ) )
<name2> が <name5> と等しくなくかつ <name3> . <name6> ( <name5> , <name2> ) のとき、	if <name2> != <name5> and <name3> . <name6> ( <name5> , <name2> ) :	for <name2> != <name5> and <name3> . <name6> ( <name5> , <name2> ) :
B を <name6> とする	<name6> = 'B'	<name1> = 'B'
<name4> 、 <name6> の要素をそれぞれ組にした列の各要素を <name2> 、 <name3> とし、 <name2> に <name3> を掛けた値の列を返す	return [ <name2> * <name3> for <name2> , <name3> in zip ( <name4> , <name6> ) ]	return [ <name2> * <name3> for <name2> , <name3> in zip ( <name4> , <name6> ) ]
<name2> . <name6> ( <name3> , <name1> ) でないとき、	if not <name2> . <name6> ( <name3> , <name1> ) :	isinstance ( <name2> . <name6> ( <name3> , <name1> ) ) :
<name1> が <name3> と等しいとき、	if <name1> == <name3> :	: if <name1> == <name3> :
<name2> の <name3> 番目を <name2> の <name5> 番目に <val6> を加えた値だけ増加させる	<name2> [ <name3> ] += <name2> [ <name5> ] + <val6>	( <name2> [ <name3> ] += <name2> [ <name5> ] + <val6> )
<name5> から <name6> に <val2> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <name6> + <val2> ) :	. for <name1> in range ( <name5> , <name6> + <val2> ) :
<val2> から <name1> に <val4> を加えた値未満までの数列の各要素を <name6> とし、 <name5> の、つまり先頭から <name1> 番目までの部分列の <name6> 個までのコンビネーションの各要素に <name3> を適用した列のリストの列を <name4> とする	<name4> = [ list ( map ( <name3> , combinations ( <name5> [ : <name1> ] , <name6> ) ) ) for <name6> in range ( <val2> , <name1> + <val4> ) ]	<name4> = [ list ( map ( <name3> , itertools . combinations ( <name5> [ : <name1> ] , <name6> ) ) ) for <name6> in range ( <val2> , <name1> + <val4> ) ]
<name2> の最大値を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = max ( <name2> )	( <name3> , <name5> = max ( <name2> ) )
( <val1> 、 <val5> ) の組を返す	return ( <val1> , <val5> )	yield ( <val1> , <val5> )
<name5> が <name4> の <name3> より小さくかつ <name4> の <name6> の <name5> 番目が <name4> の <name6> の <name1> 番目より大きいとき、	if <name5> < <name4> . <name3> and <name4> . <name6> [ <name5> ] > <name4> . <name6> [ <name1> ] :	for <name5> < <name4> . <name3> and <name4> . <name6> [ <name5> ] > <name4> . <name6> [ <name1> ] :
<name6> 、無限の整数列の最大値を <name6> とする	<name6> = max ( <name6> , count )	count = max ( <name6> , count )
0 から <val4> 未満までの数列の各要素を <name1> とし、 <name1> の <val5> 乗の列を <name3> とする	<name3> = [ <name1> ** <val5> for <name1> in range ( <val4> ) ]	<name3> = [ <name1> ** <val5> for <name1> in range ( <val4> ) ]
<val3> を <name2> の <name1> にする	<name2> . <name1> = <val3>	( <name2> . <name1> = <val3> )
<name1> 、 <name3> の最小値を <name6> の <name5> 番目にする	<name6> [ <name5> ] = min ( <name1> , <name3> )	dict [ <name5> ] = min ( <name1> , <name3> )
<val6> 〜 <name5> から <val6> を引いた値の整数乱数を <name3> とする	<name3> = random . randint ( <val6> , <name5> - <val6> )	<name3> = random . randint ( <val6> , <name5> - <val6> )
<name5> が <name1> 以下かつ <name6> が <name2> 以下のとき、	if <name5> <= <name1> and <name6> <= <name2> :	for <name5> <= <name1> and <name6> <= <name2> :
<name1> ( <name6> , <name6> [ <val2> ] , <name3> )	<name1> ( <name6> , <name6> [ <val2> ] , <name3> )	<name1> ( <name6> , <name6> [ <val2> ] , <name3> )
<name1> に <name2> の <name5> 番目を加えた値が <name4> 以下のとき、	if <name1> + <name2> [ <name5> ] <= <name4> :	. if <name1> + <name2> [ <name5> ] <= <name4> :
<name1> が <name4> の <name6> と等しいとき、	if <name1> == <name4> . <name6> :	list ( <name1> == <name4> . <name6> ) :
( ( <val3> ) からなる列の <val3> から <name4> 未満までの数列の各要素を <name5> とし、 <name1> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val3> ] * [ <name1> for <name5> in range ( <name4> ) ] ]	<name2> = [ [ <val3> ] * [ <name1> for <name5> in range ( <name4> ) ] ]
<name2> を <name3> に <name3> から <name6> を引いた値を掛けた値に <name3> から <name4> を引いた値を掛けた値に <name3> から <name1> を引いた値を掛けた値の平方根だけ増加させる	<name2> += math . sqrt ( <name3> * ( <name3> - <name6> ) * ( <name3> - <name4> ) * ( <name3> - <name1> ) )	<name1> += math . sqrt ( <name3> * ( <name3> - <name6> ) * ( <name3> - <name4> ) * ( <name3> - <name1> ) )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name1> 、 <name5> とする	<name2> , <name3> , <name1> , <name5> = map ( float , input ( ) . split ( ) )	<name3> , <name1> , <name5> = map ( float , input ( ) . split ( ) )
<name6> の <name3> 番目が <name5> 以下のとき、	if <name6> [ <name3> ] <= <name5> :	if <name6> [ <name3> ] <= <name5> :
<name3> が <name1> から <val2> を引いた値と等しいとき、	if <name3> == <name1> - <val2> :	if <name3> == <name1> - <val2> :
<name3> を展開してと [ MASK ] の最小公倍数を出力する	print ( lcm ( * <name3> ) )	str . print ( lcm ( * <name3> ) )
<name3> から <val5> 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> , <val5> , - 1 ) :	for <name6> in range ( <name3> , <val5> , - 1 ) :
<name6> 、 <name5> の <name4> の <name2> の <name3> 番目番目の <name1> の <name3> 番目番目の <name6> の最小値を <name6> とする	<name6> = min ( <name6> , <name5> . <name4> [ <name2> [ <name3> ] ] [ <name1> [ <name3> ] ] . <name6> )	<name6> = min ( <name6> , <name5> . <name4> [ <name2> [ <name3> ] ] [ <name1> [ <name3> ] ] . <name6> )
( <val5> 、 <val3> 、 <val6> 、 <val4> 、 <val2> 、 <val1> 、 <val5> 、 <val3> 、 <val6> 、 <val4> ) からなる列を <name1> とする	<name1> = [ <val5> , <val3> , <val6> , <val4> , <val2> , <val1> , <val5> , <val3> , <val6> , <val4> ]	<name1> = [ <val5> , <val3> , <val6> , <val4> , <val2> , <val1> , <val5> , <val3> , <val6> , <val4> ]
<name4> の <name3> 番目の <name5> 番目でないとき、	if not <name4> [ <name3> ] [ <name5> ] :	while not <name4> [ <name3> ] [ <name5> ] :
<name3> から <name1> を <val5> で割った商を引いた値が <val6> 以上のとき、	if <name3> - <name1> // <val5> >= <val6> :	continue <name3> - <name1> // <val5> >= <val6> :
<name4> の末尾に ( <name5> 、 - <name6> ) の組を追加する	<name4> . append ( ( <name5> , - <name6> ) )	<name4> . append ( ( <name5> , - <name6> ) )
<name5> ( ) . <name2> ( ) の各要素に <name3> を適用した列のリストの集合のリストをソートした列を <name1> とする	<name1> = sorted ( list ( set ( list ( map ( <name3> , <name5> ( ) . <name2> ( ) ) ) ) ) )	<name2> = sorted ( list ( map ( <name3> , list ( map ( <name3> ) ) ) ) )
0 から <name3> に <val1> を加えた値未満までの数列の各要素を <name6> とし、、つまり空列の列を <name2> とする	<name2> = [ [ ] for <name6> in range ( <name3> + <val1> ) ]	<name2> = [ [ ] for <name6> in range ( <name3> + <val1> ) ]
<name5> を <val6> との排他的論理和にする	<name5> ^ = <val6>	( <name5> ^ = <val6> )
( <name1> の先頭、 <name1> の <val5> 番目 ) の組が <name2> に含まれるとき、	if ( ( <name1> [ 0 ] , <name1> [ <val5> ] ) in <name2> ) :	list ( ( <name1> [ 0 ] , <name1> [ <val5> ] ) in <name2> :
<name1> の集合から <name3> の集合を引いた値のリストをソートした列を <name5> とする	<name5> = sorted ( list ( set ( <name1> ) - set ( <name3> ) ) )	<name5> = sorted ( list ( set ( <name1> ) - set ( <name3> ) ) )
<name4> に <name6> を加えた値から <name2> を引いた値を <name3> とする	<name3> = <name4> + <name6> - <name2>	( <name3> = <name4> + <name6> - <name2> )
ソートされた順序を保ったまま <name3> の <val2> 番目を <name6> に挿入できる最後の位置から <val1> を引いた値を <name5> とする	<name5> = bisect . bisect ( <name6> , <name3> [ <val2> ] ) - <val1>	<name1> <name5> = bisect_right ( <name6> , <name3> [ <val2> ] ) - <val1>
<name4> が <name6> と等しいかどうかが <name1> と等しいかどうかが <val5> と等しいとき、	if <name4> == <name6> == <name1> == <val5> :	> if <name4> == <name6> == <name1> == <val5> :
<name1> . <name3> ( <name5> >> <name2> )	<name1> . <name3> ( <name5> >> <name2> )	( <name1> . <name3> ( <name5> >> <name2> ) )
<name1> が <name4> より大きいとき、	if <name1> > <name4> :	for <name1> > <name4> :
<name4> ( <name1> , <name5> ) を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = <name4> ( <name1> , <name5> )	<name2> , <name5> = <name4> ( <name1> , <name5> )
<name1> の各要素を <name4> 、 <name3> とし、 <name3> の列の総和を <name2> で割った値を <name5> とする	<name5> = sum ( [ <name3> for <name4> , <name3> in <name1> ] ) / <name2>	<name5> = sum ( [ <name3> for <name4> , <name3> in <name1> ] ) / <name2>
<name2> ( <name1> - <name6> ) を <name3> とする	<name3> = <name2> ( <name1> - <name6> )	<name3> = <name2> ( <name1> - <name6> )
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = list ( map ( int , input ( ) . split ( <val1> ) ) )	<name4> , <name3> = list ( map ( int , input ( ) . split ( <val1> ) ) )
<name6> が <val4> 以上のとき、	if <name6> >= <val4> :	: if <name6> >= <val4> :
( ( <val3> ) からなる列の <val3> から <name1> に <val2> を加えた値未満までの数列の各要素を <name5> とし、 <name6> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val3> ] * [ <name6> for <name5> in range ( <name1> + <val2> ) ] ]	<name4> = [ [ <val3> ] * [ <name6> for <name5> in range ( <name1> + <val2> ) ] ]
<name2> の <name3> 番目の各要素を <name5> 、 <name1> とし、 <name6> の <name5> 番目が <val4> と等しくないときの ( <name5> 、 <name1> ) の組の列を <name4> とする	<name4> = [ ( <name5> , <name1> ) for <name5> , <name1> in <name2> [ <name3> ] if <name6> [ <name5> ] != <val4> ]	<name4> = [ ( <name5> , <name1> ) for <name5> , <name1> in <name2> [ <name3> ] if <name6> [ <name5> ] != <val4> ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name3> とする	<name3> = list ( map ( str , input ( ) . split ( ) ) )	<name3> = list ( map ( int , input ( ) . split ( ) ) )
<name1> ( <name3> ) を展開し、それぞれ <name2> 、 <name4> 、 <name5> とする	<name2> , <name4> , <name5> = <name1> ( <name3> )	<name1> , <name2> , <name4> , <name5> = <name1> ( <name3> )
<name4> を <val5> で割った余りが <val1> と等しいとき、	if <name4> % <val5> == <val1> :	list ( <name4> % <val5> == <val1> :
<name1> の <name2> から <val4> を引いた値番目から <name6> に ( <name3> - <name5> [ <name2> -1 ] [ <val1> ] ) を掛けた値に <val2> を掛けた値を引いた値の絶対値が <name4> より小さいとき、	if abs ( <name1> [ <name2> - <val4> ] - <name6> * ( <name3> - <name5> [ <name2> - <val4> ] [ <val1> ] ) * <val2> ) < <name4> :	isinstance ( <name1> [ <name2> - <val4> ] - <name6> * ( <name3> - <name5> [ <name2> - <val4> ] [ <val1> ] ) * <val2> ) < <name4> :
<val3> 、 <val3> を <name2> 、 <name5> とする	<name2> , <name5> = <val3> , <val3>	( <name2> , <name5> = <val3> , <val3> )
<name6> から <val3> を引いた値を <val1> で割った商を <name6> とする	<name6> = ( <name6> - <val3> ) // <val1>	<name6> = ( <name6> - <val3> ) // <val1>
<name6> の <name3> の <name1> の <name4> 番目に <name5> の <name6> を加えた値を <name6> の <name3> の <name5> の <name2> 番目にする	<name6> . <name3> [ <name5> . <name2> ] = <name6> . <name3> [ <name1> . <name4> ] + <name5> . <name6>	<name6> . <name3> [ <name5> . <name2> ] = <name6> . <name3> [ <name1> . <name4> ] + <name5> . <name6>
<name2> の末尾に ( <name5> 、 <name1> に <name6> を加えた値 ) の組を追加する	<name2> . append ( ( <name5> , <name1> + <name6> ) )	<name2> . append ( ( <name5> , <name1> + <name6> ) )
\改行せずに <val6> に <val4> を掛けた値を出力する\	\ print ( <val6> * <val4> , end = '' ) \	bit_length ( <val6> * <val4> , end = '' ) \
<name4> を <name6> とする	<name6> = <name4> ( B , a )	( <name6> = <name4> )
<name3> を <val4> に <name2> を掛けた値に <name2> に <val6> を加えた値を掛けた値に <name2> に <val4> を加えた値を掛けた値を <val1> で割った商だけ減少させる	<name3> -= <val4> * <name2> * ( <name2> + <val6> ) * ( <name2> + <val4> ) // <val1>	<name3> -= <val4> * <name2> * ( <name2> + <val6> ) * ( <name2> + <val4> ) // <val1>
<name5> の <name1> の <name6> 番目が、つまり未定値と等しくないとき、	if <name5> . <name1> [ <name6> ] is None :	if <name5> . <name1> [ <name6> ] != None :
<name5> を <val4> に <name6> を加えた値倍にする	<name5> *= <val4> + <name6>	( <name5> *= <val4> + <name6> )
<name5> の <name1> 番目から <name4> 番目までの部分列に ( <val3> <name6> ) からなる列を加えた値を <name2> とする	<name2> = <name5> [ <name1> : <name4> ] + [ <val3> <name6> ]	<name4> = <name5> [ <name1> : <name4> ] + [ <val3> <name6> ]
<name6> を <name1> の <val5> 番目にする	<name1> [ <val5> ] = <name6>	( <name1> [ <val5> ] = <name6> )
<name3> ( <name1> - <name6> [ <val4> ] , <name2> ) を <name5> ( <name2> ) で割った値を <name5> とする	<name5> = <name3> ( <name1> - <name6> [ <val4> ] , <name2> ) / <name5> ( <name2> )	<name5> = <name3> ( <name1> - <name6> [ <val4> ] , <name2> ) / <name5> ( <name2> )
<val6> を <name2> の <name4> の先頭番目の <name4> の <val1> 番目番目にする	<name2> [ <name4> [ 0 ] ] [ <name4> [ <val1> ] ] = <val6>	<name2> [ <name4> [ <val6> ] ] [ <name4> [ <val1> ] ] = <val6>
<name5> . <name4> ( <name1> ) のとき、	if <name5> . <name4> ( <name1> ) :	if <name5> . <name4> ( <name1> ) :
<name5> の <name4> の <name1> 番目が <name5> の <name4> の <name2> 番目より小さいとき、	if <name5> . <name4> [ <name1> ] < <name5> . <name4> [ <name2> ] :	while <name5> . <name4> [ <name1> ] < <name5> . <name4> [ <name2> ] :
0 が <name6> の <name5> 番目以下かどうかが <val4> 以下の間、次を繰り返す	while '0' <= <name6> [ <name5> ] <= <val4> :	del '0' <= <name6> [ <name5> ] <= <val4> :
<val1> から <val2> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , <val2> ) :	continue for <name3> in range ( <val1> , <val2> ) :
<name4> を <name6> の <val3> 番目にする <name1> を <name6> の <val5> 番目にする	<name6> [ <val3> ] = <name4> <name6> [ <val5> ] = <name1>	<name2> [ <val3> ] = <name4> <name6> [ <val5> ] = <name1>
<val5> 、真を <name3> 、 <name2> とする	<name3> , <name2> = <val5> , True	( <name3> , <name2> = <val5> , True )
<name2> を <name5> から <name6> を引いた値に <name4> を加えた値だけ増加させる	<name2> += <name5> - <name6> + <name4>	<name1> += ( <name5> - <name6> + <name4> )
<name1> の <name2> 番目の <name5> から <val4> を引いた値番目に <val3> を加えた値を <name1> の <name2> 番目の <name5> から <val4> を引いた値番目にする	<name1> [ <name2> ] [ <name5> - <val4> ] = <name1> [ <name2> ] [ <name5> - <val4> ] + <val3>	<name1> [ <name2> ] [ <name5> - <val4> ] = <name1> [ <name2> ] [ <name5> - <val4> ] + <val3>
<name4> から <val1> を引いた値のビット長を <name6> とする	<name6> = ( <name4> - <val1> ) . bit_length ( )	<name6> = ( <name4> - <val1> ) . bit_length ( )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを反転した列を <name6> とする	<name6> = reversed ( list ( map ( int , input ( ) . split ( ) ) ) )	<name6> = reversed ( list ( map ( int , input ( ) . split ( ) ) ) )
<val4> を <name1> の <name3> 番目の <name5> に <name2> を加えた値番目にする	<name1> [ <name3> ] [ <name5> + <name2> ] = <val4>	<name2> [ <name1> [ <name3> ] [ <name5> + <name2> ] = <val4>
<name3> ( <name2> -1 , ( <name6> , <name1> ) , ( <name4> , <name5> ) )	<name3> ( <name2> - 1 , ( <name6> , <name1> ) , ( <name4> , <name5> ) )	<name5> <name3> ( <name2> - 1 , ( <name6> , <name1> ) , ( <name4> , <name5> ) )
( <name6> 、 ( <name1> 、 <name2> ) の組 ) の組を <name3> とする	<name3> = ( <name6> , ( <name1> , <name2> ) )	else = ( <name6> , ( <name1> , <name2> ) )
<val1> . を <name2> とする	<name2> = <val1> .	<name1> = <val1> .
<name5> モジュールを用いる	from <name5> import Optional , List	from <name5> , Counter
<name3> ( <name6> . <name2> + <name1> . <name2> , <name6> . <name4> + <name1> . <name4> ) を返す	return <name3> ( <name6> . <name2> + <name1> . <name2> , <name6> . <name4> + <name1> . <name4> )	x return <name3> ( <name6> . <name2> + <name1> . <name2> , <name6> . <name4> + <name1> . <name4> )
<name6> に <name2> を加えた値に <val4> を掛けた値を <name5> とする	<name5> = ( <name6> + <name2> ) * <val4>	else = ( <name6> + <name2> ) * <val4>
<name2> に <name3> を加えた値を <name1> とする	<name1> = <name2> + <name3>	<name4> = <name2> + <name3>
<val4> を間に入れて <name2> を連結した文字列を出力する	print ( <val4> . join ( <name2> ) )	print ( <val4> . join ( <name2> ) )
<name4> に <name6> の <name3> 番目を加えた値が <name2> 以下のとき、	if <name4> + <name6> [ <name3> ] <= <name2> :	list ( <name4> + <name6> [ <name3> ] <= <name2> ) :
<name3> の <name5> の <name4> 番目が <val1> より小さいとき、	if <name3> . <name5> [ <name4> ] < <val1> :	while <name3> . <name5> [ <name4> ] < <val1> :
<name2> の <name3> 番目を <name2> の <name3> から <val4> を引いた値番目だけ増加させる	<name2> [ <name3> ] += <name2> [ <name3> - <val4> ]	<name2> [ <name3> ] += <name2> [ <name3> - <val4> ]
<name3> の末尾に ( <name5> 、 <name2> の <name5> 番目 ) の組を追加する	<name3> . append ( ( <name5> , <name2> [ <name5> ] ) )	<name3> . append ( ( <name5> , <name2> [ <name5> ] ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name2> の <name6> 番目にする	<name2> [ <name6> ] = list ( map ( int , input ( ) . split ( ) ) )	<name2> [ <name6> ] = list ( map ( int , input ( ) . split ( ) ) )
<name6> の末尾に ( <name1> 、 <val4> の <name2> から <val4> を引いた値から <name3> を引いた値乗、 <name3> 、 <name5> ) の組を追加する	<name6> . append ( ( <name1> , <val4> ** ( <name2> - <val4> - <name3> ) , <name3> , <name5> ) )	<name5> . append ( ( <name1> , <val4> ** ( <name2> - <val4> ) - <name3> , <name3> , <name5> ) )
<name4> の <name5> を <val6> で割った余りのとき <name5> を <val6> で割った商、そうでなければ <name5> を <val6> で割った商から <val2> を引いた値番目を <name1> とする	<name1> = <name4> [ <name5> // <val6> if <name5> % <val6> else <name5> // <val6> - <val2> ]	<name6> = <name4> [ <name5> // <val6> if <name5> % <val6> else <name5> // <val6> - <val2> ]
<name2> ( <name6> [ <val4> ] , <name6> [ <val3> ] ) を <name1> の <name6> にする	<name1> . <name6> = <name2> ( <name6> [ <val4> ] , <name6> [ <val3> ] )	<name1> . <name6> = <name2> ( <name6> [ <val4> ] , <name6> [ <val3> ] )
<name1> が <name5> より小さくないとき、	if not <name1> < <name5> :	while not <name1> < <name5> :
<name1> ( <name6> , <name5> , <name2> , <name3> ) を <name4> とする	<name4> = <name1> ( <name6> , <name5> , <name2> , <name3> )	<name4> = <name1> ( <name6> , <name5> , <name2> , <name3> )
<val6> から <name2> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <name2> + <val6> ) :	continue range ( <val6> , <name2> + <val6> ) :
<name6> ( ) の両端から空白改行を取り除いた文字列を <name1> とする	<name1> = <name6> ( ) . strip ( )	<name1> = <name6> ( ) . strip ( )
<name5> モジュールを用いる	from <name5> import itemgetter	from <name5> , Counter
<name2> から <name1> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> , <name1> + <val6> ) :	. for <name5> in range ( <name2> , <name1> + <val6> ) :
<name6> をソートした列を展開してを出力する	print ( * sorted ( <name6> ) )	<name6> print ( * sorted ( sorted ( <name6> ) ) )
<name6> から <name3> の <name5> 番目の <name4> 番目を引いた値に <name3> の <name5> 番目の <name1> 番目を加えた値を <name2> とする	<name2> = <name6> - <name3> [ <name5> ] [ <name4> ] + <name3> [ <name5> ] [ <name1> ]	<name2> = <name6> - <name3> [ <name5> ] [ <name4> ] + <name3> [ <name5> ] [ <name1> ]
<name1> が <name3> の <name5> と等しいとき、	if <name1> == <name3> . <name5> :	list ( <name1> == <name3> . <name5> ) :
<name1> 、 <name4> 、 <name3> 、 <name6> 、 <name5> はグローバル変数とする	global <name1> , <name4> , <name3> , <name6> , <name5>	print ( <name1> , <name4> , <name3> , <name6> , <name5> )
<name2> の <name4> 番目の <name6> 番目が <val3> に含まれるとき、	if <name2> [ <name4> ] [ <name6> ] in <val3> :	if <name2> [ <name4> ] [ <name6> ] in <val3> :
<name6> ( <name4> . <name2> - <name1> . <name2> , <name4> . <name5> - <name1> . <name5> ) を返す	return <name6> ( <name4> . <name2> - <name1> . <name2> , <name4> . <name5> - <name1> . <name5> )	return <name6> ( <name4> . <name2> - <name1> . <name2> , <name4> . <name5> - <name1> . <name5> )
<name2> の <name4> 番目を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name2> [ <name4> ]	<name3> , <name1> = <name2> [ <name4> ]
\ <val2> を出力する <name6> ( <name4> ) \	\ print ( <val2> ) <name6> ( <name4> ) \	\ print ( <val2> ) <name6> ( <name4> ) \
<name6> 、 <name1> 、 <name5> はグローバル変数とする	global <name6> , <name1> , <name5>	>> = <name6> , <name1> , <name5>
<name5> に <name4> を加えた値を返す	return <name5> + <name4>	yield <name5> + <name4>
<val2> に <val6> に <name4> を掛けた値を加えた値を <name5> とする	<name5> = <val2> + <val6> * <name4>	else = <val2> + <val6> * <name4>
<val4> を <name6> の ( <val4> 、 <name5> 、 <name2> ) の組番目にする	<name6> [ ( <val4> , <name5> , <name2> ) ] = <val4>	<name2> [ ( <val4> , <name5> , <name2> ) ] = <val4>
<val3> から <name5> に <val4> を加えた値未満までの数列の各要素を <name1> とし、 <val3> から <name5> に <val4> を加えた値未満までの数列の各要素を <name2> とし、 <val3> の列の列を <name6> とする	<name6> = [ [ <val3> for <name2> in range ( <name5> + <val4> ) ] for <name1> in range ( <name5> + <val4> ) ]	count = [ [ <val3> for <name2> in range ( <name5> + <val4> ) ] for <name1> in range ( <name5> + <val4> ) ]
0 から - <name4> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( - <name4> ) :	) for <name5> in range ( - <name4> ) :
0 から <name5> 未満までの数列の各要素を <name1> とし、 <name6> ( <name2> . <name3> ( ) ) の列を <name4> とする	<name4> = [ <name6> ( <name2> . <name3> ( ) ) for <name1> in range ( <name5> ) ]	<name4> = [ <name6> ( <name2> . <name3> ( ) ) for <name1> in range ( <name5> ) ]
<name1> ( <name6> [ <name3> ] [ <val5> ] ) を返す	return <name1> ( <name6> [ <name3> ] [ <val5> ] )	yield <name1> ( <name6> [ <name3> ] [ <val5> ] )
<name5> に <name6> を加えた値を <val4> だけ右シフトした値を <name1> とする <name3> に <name6> を加えた値を <val4> だけ右シフトした値を <name2> とする	<name1> = ( <name5> + <name6> ) >> <val4> <name2> = ( <name3> + <name6> ) >> <val4>	<name2> = ( <name5> + <name6> ) >> <val4> <name2> = ( <name3> + <name6> ) >> <val4>
<name4> ( <name2> . <name6> - <name2> . <name5> ) を <name1> とする	<name1> = <name4> ( <name2> . <name6> - <name2> . <name5> )	<name1> = <name4> ( <name2> . <name6> - <name2> . <name5> )
<name4> ( ) を返す	return <name4> ( )	yield <name4> ( )
<name5> を <name6> だけ減少させる <name1> を <name2> だけ減少させる	<name5> -= <name6> <name1> -= <name2>	<name2> -= <name6> <name1> -= <name2>
<name2> の <val4> 乗が <name5> 以上のとき、	if <name2> ** <val4> >= <name5> :	>= <name2> ** <val4> >= <name5> :
<name2> ( <name4> , <name5> , <name6> ) を <name1> とする	<name1> = <name2> ( <name4> , <name5> , <name6> )	<name1> = <name2> ( <name4> , <name5> , <name6> )
<name4> の <name2> から <val3> を引いた値番目、 <name4> の <name1> に <val3> を加えた値番目を <name4> の <name1> に <val3> を加えた値番目、 <name4> の <name2> から <val3> を引いた値番目とする	<name4> [ <name1> + <val3> ] , <name4> [ <name2> - <val3> ] = <name4> [ <name2> - <val3> ] , <name4> [ <name1> + <val3> ]	[ <name4> [ <name1> + <val3> ] , <name4> [ <name2> - <val3> ] = <name4> [ <name2> - <val3> ] , <name4> [ <name1> + <val3> ]
<name6> 、 <name4> の先頭、 <name4> の <val3> 番目、 <name4> の <val1> 番目の日付を <name2> とする	<name2> = <name6> . date ( <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val1> ] )	<name4> = <name6> . date ( <name4> [ 0 ] , <name4> [ <val3> ] , <name4> [ <val1> ] )
<name3> と <name6> の排他論理和が <name5> に含まれないとき、 <blk> <val4> を <name5> の <name3> と <name6> の排他論理和番目にする </blk>	if <name3> ^ <name6> not in <name5> : <blk> <name5> [ <name3> ^ <name6> ] = <val4> </blk>	for <name5> in <name3> ^ <name6> not in <name5> : <blk> <name5> [ <name3> ^ <name6> ] = <val4> </blk>
<name5> ( [ ] , <name6> , <name6> )	<name5> ( [ ] , <name6> , <name6> )	<name5> ( [ ] , <name6> , <name6> )
<name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name2> とする	<name1> , <name6> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )	<name1> , <name6> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )
<name2> の <name5> 番目が <name4> の <name1> 番目より小さいとき、	if <name2> [ <name5> ] < <name4> [ <name1> ] :	or <name2> [ <name5> ] < <name4> [ <name1> ] :
<name5> . <name1> ( <name6> * -1 , <name2> ) が <val4> 以下のとき、	if <name5> . <name1> ( <name6> * - 1 , <name2> ) <= <val4> :	list ( <name5> . <name1> ( <name6> * - 1 , <name2> ) <= <val4> :
<name2> の <val5> 番目から <name2> の <val4> 番目を引いた値を <name3> とする	<name3> = <name2> [ <val5> ] - <name2> [ <val4> ]	<name3> = <name2> [ <val5> ] - <name2> [ <val4> ]
<name6> から <val5> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> , <val5> ) :	'?' for <name4> in range ( <name6> , <val5> ) :
<name3> ( <name2> , <name1> ( <name4> [ <val6> ] ) )	<name3> ( <name2> , <name1> ( <name4> [ <val6> ] ) )	<name1> ( <name2> , <name1> ( <name4> [ <val6> ] ) )
<name6> ( <name5> , ( <name1> [ <name4> ] , <name4> ) )	<name6> ( <name5> , ( <name1> [ <name4> ] , <name4> ) )	set ( <name6> ( <name5> , ( <name1> [ <name4> ] , <name4> ) ) )
真を <name3> の ( <name2> 、 <name4> 、 <name5> 、 <name1> ) の組番目にする	<name3> [ ( <name2> , <name4> , <name5> , <name1> ) ] = True	( <name3> [ ( <name2> , <name4> , <name5> , <name1> ) ] = True )
<name6> の <name3> の <name4> 番目を順に <name2> 、 <name1> として、繰り返す	for <name2> , <name1> in <name6> . <name3> [ <name4> ] :	. for <name2> , <name1> in <name6> . <name3> [ <name4> ] :
<name3> の <name4> 番目に <name1> を加えた値を <name2> とする	<name2> = <name3> [ <name4> ] + <name1>	<name2> = <name3> [ <name4> ] + <name1>
辞書を <name1> とする	<name1> = dict ( sorted ( <name1> . items ( ) ) )	( <name1> = dict . dict ( ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name4> 、 <name1> とする	<name3> , <name5> , <name4> , <name1> = map ( int , input ( ) . split ( ) )	<name5> , <name4> , <name1> = map ( int , input ( ) . split ( ) )
<name6> が <name1> と等しいとき、	if <name6> == <name1> :	: if <name6> == <name1> :
( ( <name1> 、未定値 ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name1> , None ) ]	<name6> = [ ( <name1> , None ) ]
( <name3> の <name6> ) からなる列を <name4> とする	<name4> = [ <name3> . <name6> ]	<name4> = [ <name3> . <name6> ]
<name4> を文字コード <name3> の順序数から <val1> を引いた値の文字だけ増加させる	<name4> += chr ( ord ( <name3> ) - <val1> )	<name6> += chr ( ord ( <name3> ) - <val1> )
<name2> に <name5> を加えた値に <name3> を加えた値に <name4> を加えた値が <name6> と等しいとき、	if <name2> + <name5> + <name3> + <name4> == <name6> :	if ( <name2> + <name5> + <name3> + <name4> == <name6> :
<name4> を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name4>	( <name3> [ <name2> ] = <name4> )
<name1> [ <val3> ] に <name1> [ <val2> ] を加えた値に <name1> の <val4> 番目を加えた値に <name1> の <val6> 番目を加えた値の整数値から <name5> [ <val3> ] に <name5> [ <val2> ] を加えた値に <name5> の <val4> 番目を加えた値に <name5> の <val6> 番目を加えた値の整数値を引いた値を <name5> とする	<name5> = int ( <name1> [ <val3> ] + <name1> [ <val2> ] + <name1> [ <val4> ] + <name1> [ <val6> ] ) - int ( <name5> [ <val3> ] + <name5> [ <val2> ] + <name5> [ <val4> ] + <name5> [ <val6> ] )	<name5> = int ( <name1> [ <val3> ] + <name1> [ <val2> ] + <name1> [ <val4> ] + <name1> [ <val6> ] ) - int ( <name5> [ <val3> ] + <name5> [ <val2> ] + <name5> [ <val4> ] + <name5> [ <val6> ] )
<name6> の <name3> に <name5> を加えた値に <val4> を加えた値番目の末尾に <name3> に <name5> を加えた値を追加する	<name6> [ <name3> + <name5> + <val4> ] . append ( <name3> + <name5> )	<name1> [ <name3> + <name5> + <val4> ] . append ( <name3> + <name5> )
<name6> を <name3> とするを <name4> とする	<name4> = <name3> = <name6>	<name2> = <name3> = <name6>
( <val4> 、 -1 、 <val2> ) からなる列を <name3> とする	<name3> = [ <val4> , - <val2> , <val2> ]	<name3> = [ <val4> , - <val4> , <val2> ]
<name5> の <name2> 番目が <name1> と等しくないとき、	if <name5> [ <name2> ] != <name1> :	for if <name5> [ <name2> ] != <name1> :
<name3> の先頭から <name3> の <name5> の <name1> 番目を探して見つかった位置を <name4> とする	<name4> = <name3> . find ( <name3> . <name5> [ <name1> ] )	<name4> = <name3> . find ( <name3> . <name5> [ <name1> ] )
<name4> ( <name6> , <name1> ) を <val5> で割った値を <name3> とする	<name3> = <name4> ( <name6> , <name1> ) / <val5>	<name3> = <name4> ( <name6> , <name1> ) / <val5>
<name1> の <val2> 番目を実部、 <name1> の <val6> 番目を虚部とした複素数を <name5> とする	<name5> = complex ( <name1> [ <val2> ] , <name1> [ <val6> ] )	<name5> = complex ( <name1> [ <val2> ] , <name1> [ <val6> ] )
<val3> を <name2> の <name1> から <val3> を引いた値番目にする	<name2> [ <name1> - <val3> ] = <val3>	<name4> [ <name2> [ <name1> - <val3> ] ] = <val3>
<name5> の <val6> 番目から、つまり末尾までの部分列の整数値を <name4> とする	<name4> = int ( <name5> [ <val6> : ] )	<name4> = int ( <name5> [ <val6> : ] )
0 から <val2> 未満までの数列の各要素を <name1> とし、 <name1> に <val5> を加えた値の列を <name3> とする	<name3> = [ <name1> + <val5> for <name1> in range ( <val2> ) ]	<name3> = [ <name1> + <val5> for <name1> in range ( <val2> ) ]
入力された文字列を空白で分割した字句列をソートした列を <name1> とする	<name1> = sorted ( input ( ) . split ( ) )	<name1> = sorted ( input ( ) . split ( ) )
<val5> を <name2> の <name1> 番目の <name3> 番目にする	<name2> [ <name1> ] [ <name3> ] = <val5>	( <name2> [ <name1> ] [ <name3> ] = <val5> )
<name3> を <name5> . <name2> ( ) 分の一にする	<name3> /= <name5> . <name2> ( )	( <name3> // = <name5> . <name2> ( ) )
<name5> ( <name3> , <name2> ) を返す	return <name5> ( <name3> , <name2> )	self return <name5> ( <name3> , <name2> )
( <name4> ) からなる列の <name5> 回分の列を <name1> とする	<name1> = [ <name4> ] * <name5>	<name1> = [ <name4> ] * <name5>
<val2> を <name5> の <val6> 番目の <val2> 番目にする	<name5> [ <val6> ] [ <val2> ] = <val2>	<name4> [ <val6> ] [ <val2> ] = <val2>
0 から <name2> の <val6> 番目未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> [ <val6> ] ) :	str for <name4> in range ( <name2> [ <val6> ] ) :
<name1> ( <name5> . <name4> . <name6> - <name2> . <name4> . <name6> , <name5> . <name4> . <name3> - <name2> . <name4> . <name3> ) を <name3> とする	<name3> = <name1> ( <name5> . <name4> . <name6> - <name2> . <name4> . <name6> , <name5> . <name4> . <name3> - <name2> . <name4> . <name3> )	<name6> = <name1> ( <name5> . <name4> . <name6> - <name2> . <name4> . <name6> , <name5> . <name4> . <name3> - <name2> . <name4> . <name3> )
<val4> に <name2> を掛けた値を <name1> とする	<name1> = <val4> * <name2>	<name2> = <val4> * <name2>
<val3> 進表記、つまり入力された文字列の整数値の <val5> 進数文字列の文字列の <val5> 番目から、つまり末尾までの部分列を <name1> とする	<name1> = str ( bin ( int ( input ( ) , <val3> ) ) ) [ <val5> : ]	<name2> = str ( bin ( int ( input ( ) ) ) [ <val5> : ] )
( <val1> ) からなる列の <name2> 回分の列を <name6> とする	<name6> = [ <val1> ] * <name2>	<name6> = [ <val1> ] * <name2>
<val4> から <name6> 未満までの数列の各要素を <name2> とし、 <val4> の列を <name5> とする	<name5> = [ <val4> for <name2> in range ( <name6> ) ]	<name5> = [ <val4> for <name2> in range ( <name6> ) ]
<name1> の平方根の整数値を <name5> とする	<name5> = int ( math . sqrt ( <name1> ) )	<name5> = int ( math . sqrt ( <name1> ) )
<name4> に <name6> ( <name3> , <name1> ) を追加した集まり	<name4> . add ( <name6> ( <name3> , <name1> ) )	<name4> . add ( <name6> ( <name3> , <name1> ) )
<name1> が <name4> ( <name6> ) に含まれるかどうか	<name1> in <name4> ( <name6> )	( <name1> in <name4> ( <name6> ) )
<name2> ( <name6> , ( <name1> , <name4> ) )	<name2> ( <name6> , ( <name1> , <name4> ) )	set ( <name2> ( <name6> , ( <name1> , <name4> ) ) )
<name3> を <val6> だけ減少させる <name5> を <val6> だけ減少させる	<name3> -= <val6> <name5> -= <val6>	<name3> -= <val6> <name5> -= <val6>
www を <name6> とする	<name6> = 'www'	( <name6> . = dict ( ) )
<name5> のキーの集まりを順に <name1> として、繰り返す	for <name1> in <name5> . keys ( ) :	: for <name1> in <name5> . keys ( ) :
<name6> が <name1> より小さいとき、	if ( <name6> < <name1> ) :	: if <name6> < <name1> :
<name5> に <name1> を加えた値を <name3> とする <name4> に <name6> を加えた値を <name2> とする	<name3> = <name5> + <name1> <name2> = <name4> + <name6>	else = <name5> + <name1> <name2> = <name4> + <name6>
<val6> から <name2> 未満までの数列の各要素を <name3> とし、 <val6> の列を <name1> とする	<name1> = [ <val6> for <name3> in range ( <name2> ) ]	<name4> = [ <val6> for <name3> in range ( <name2> ) ]
( <name5> 、 <name2> 、 <name1> ) の組を返す	return ( <name5> , <name2> , <name1> )	yield ( <name5> , <name2> , <name1> )
プログラムを状態 <val6> で終了する	exit ( <val6> )	Counter . exit ( <val6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を <name5> とする	<name5> = map ( int , input ( ) . split ( ) )	<name5> = map ( int , input ( ) . split ( ) )
( <val5> ) からなる列の <name2> の長さ回分の列を <name6> とする	<name6> = [ <val5> ] * len ( <name2> )	<name6> = [ <val5> ] * len ( <name2> )
<name3> . <name2> ( <name4> ) の <val6> 番目を <name5> とする	<name5> = <name3> . <name2> ( <name4> ) [ <val6> ]	else = <name3> . <name2> ( <name4> ) [ <val6> ]
<name6> ( <name2> + <val1> ) を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name6> ( <name2> + <val1> )	<name2> , <name2> = <name6> ( <name2> + <val1> )
<name6> . <name5> ( ) を <name4> とする	<name4> = <name6> . <name5> ( )	<name4> = <name6> . <name5> ( )
<name5> ( <name3> ) を出力する	print ( <name5> ( <name3> ) )	print ( <name5> ( <name3> ) )
<name2> の <name3> の <name1> 番目の <name4> 番目の末尾に <val6> を追加する	<name2> . <name3> [ <name1> ] [ <name4> ] . append ( <val6> )	<name1> [ <name3> ] [ <name1> ] . <name4> ] . append ( <val6> )
( <name1> ) からなる列の <name1> 回分の列を <name5> とする	<name5> = [ <name1> ] * <name1>	else = [ <name1> ] * <name1>
<name5> の <name6> 番目を <name4> とする <name5> の <name2> 番目を <name1> とする	<name4> = <name5> [ <name6> ] <name1> = <name5> [ <name2> ]	<name2> = <name5> [ <name6> ] <name1> = <name5> [ <name2> ]
<name5> の先頭の <val2> 番目に <name5> の <val2> 番目の <val2> 番目を加えた値を <val6> で割った値を <name1> とする	<name1> = ( <name5> [ 0 ] [ <val2> ] + <name5> [ <val2> ] [ <val2> ] ) / <val6>	<name1> = ( <name5> [ <val2> ] [ <val2> ] + <name5> [ <val2> ] [ <val2> ] ) / <val6>
<name1> ( <name5> , <name2> , <name3> ) を <name4> とする	<name4> = <name1> ( <name5> , <name2> , <name3> )	<name6> = <name1> ( <name5> , <name2> , <name3> )
<name1> と <name3> を割ったときの ( 商を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = divmod ( <name1> , <name3> )	<name2> , <name6> = divmod ( <name1> , <name3> )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = input ( ) . split ( )	<name2> , <name5> = input ( ) . split ( )
<val2> から <name6> 未満までの <name3> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , <name6> , <name3> ) :	: for <name1> in range ( <val2> , <name6> , <name3> ) :
<name4> の <name5> 番目を <name1> の整数値だけ増加させる	<name4> [ <name5> ] += int ( <name1> )	<name2> [ <name5> ] += int ( <name1> )
<name4> が <name2> と等しくない間、次を繰り返す	while <name4> != <name2> :	del <name4> != <name2> :
<name3> ( <name4> , ( <name1> , <name5> , <val2> ) )	<name3> ( <name4> , ( <name1> , <name5> , <val2> ) )	<name3> ( <name4> , ( <name1> , <name5> , <val2> ) )
<val3> を <name6> とするを <name4> とする	<name4> = <name6> = <val3>	<name2> = <name6> = <val3>
<name1> を <name6> 分の一にする	<name1> // = <name6>	( <name1> // = <name6> )
<name3> の先頭が <name3> の <val5> 番目と等しくない間、次を繰り返す	while <name3> [ 0 ] != <name3> [ <val5> ] :	del <name3> [ 0 ] != <name3> [ <val5> ] :
<name5> 、 <name6> の <name2> 番目に <name3> の <name1> から <name2> を引いた値、 <name4> の最小値番目を加えた値の最大値を <name5> とする	<name5> = max ( <name5> , <name6> [ <name2> ] + <name3> [ min ( <name1> - <name2> , <name4> ) ] )	else = max ( <name5> , <name6> [ <name2> ] + <name3> [ <name1> - <name2> , min ( <name4> ) ] )
<name5> の <name2> の <name4> 番目を返す	return <name5> . <name2> [ <name4> ]	yield <name5> . <name2> [ <name4> ]
<name3> に <val2> を掛けた値に <name4> に <val6> を掛けた値を加えた値に <name5> に <val1> を掛けた値を加えた値が <name3> と等しいとき、	if <name3> * <val2> + <name4> * <val6> + <name5> * <val1> == <name3> :	== ( <name3> * <val2> + <name4> * <val6> + <name5> * <val1> == <name3> :
<name4> . <name6> ( <val5> ** <val2> )	<name4> . <name6> ( <val5> ** <val2> )	print <name4> . <name6> ( <val5> ** <val2> )
<name4> の末尾に <name5> から <val1> を引いた値を追加する	<name4> . append ( <name5> - <val1> )	<name4> . append ( <name5> - <val1> )
<name6> モジュールを用いる	from <name6> import gcd	sqrt ( <name6> ) import sqrt
<name5> の長さが <val2> と等しくかつ <name5> の <val1> 番目が <val1> 以下のとき、 <blk> <name4> の最大値を出力する </blk>	if len ( <name5> ) == <val2> and <name5> [ <val1> ] <= <val1> : <blk> print ( max ( <name4> ) ) </blk>	if len ( <name5> ) == <val2> and <name5> [ <val1> ] <= <val1> : <blk> print ( max ( <name4> ) ) </blk>
<val6> を <name3> の <name5> にする	<name3> . <name5> = <val6>	<name5> = <name3> . <val6>
( <val6> 、 <val3> 、 <val4> 、 <val2> 、 <val5> 、 <val1> 、 <val6> 、 <val3> 、 <val4> 、 <val2> 、 <val5> 、 <val1> ) からなる列を <name1> とする	<name1> = [ <val6> , <val3> , <val4> , <val2> , <val5> , <val1> , <val6> , <val3> , <val4> , <val2> , <val5> , <val1> ]	<name3> = [ <val6> , <val3> , <val4> , <val2> , <val5> , <val1> , <val6> , <val3> , <val4> , <val2> , <val5> , <val1> ]
<val6> を <name4> の <name5> 番目の <name2> 番目にする	<name4> [ <name5> ] [ <name2> ] = <val6>	<name1> [ <name5> ] [ <name2> ] = <val6>
<name6> と <name5> の最大公約数、 <name6> と <name5> の最小公倍数を出力する	print ( math . gcd ( <name6> , <name5> ) , lcm ( <name6> , <name5> ) )	print ( math . gcd ( <name6> , <name5> ) , lcm ( <name6> , <name5> ) )
<name3> . <name5> . <name6> ( ) かつ <name3> . <name1> . <name6> ( ) のとき、	if <name3> . <name5> . <name6> ( ) and <name3> . <name1> . <name6> ( ) :	for <name3> . <name5> . <name6> ( ) and <name3> . <name1> . <name6> ( ) :
<name1> の <name4> 番目が <val5> と等しいとき、 <blk> <name2> の <name4> を <name6> で割った余り番目を <val3> だけ増加させる </blk>	if <name1> [ <name4> ] == <val5> : <blk> <name2> [ <name4> % <name6> ] += <val3> </blk>	\ <name1> [ <name4> ] == <val5> : <blk> <name2> [ <name4> % <name6> ] += <val3> </blk>
<name4> の <name1> 番目に <name6> の <name2> を加えた値に <name5> の <name1> 番目を加えた値から <name5> の <name6> の <name3> 番目を引いた値を <name4> の <name6> の <name3> 番目にする	<name4> [ <name6> . <name3> ] = <name4> [ <name1> ] + <name6> . <name2> + <name5> [ <name1> ] - <name5> [ <name6> . <name3> ]	( <name4> [ <name6> . <name3> ] = <name4> [ <name1> ] + <name6> [ <name2> + <name5> [ <name1> ] - <name5> [ <name6> . <name3> ] )
<name3> の <name5> の <name6> 番目が <val1> 以上の間、次を繰り返す	while <name3> . <name5> [ <name6> ] >= <val1> :	for <name3> in <name3> . <name5> [ <name6> ] >= <val1> :
<name2> 、 <name1> 、 <name4> の要素をそれぞれ組にした列を順に <name3> 、 <name5> 、 <name6> として、繰り返す	for <name3> , <name5> , <name6> in zip ( <name2> , <name1> , <name4> ) :	for <name3> , <name5> , <name6> in zip ( <name2> , <name1> , <name4> ) :
( <val3> 、 <val6> 、 <val4> 、 <val1> 、 <val2> 、 <val5> 、 <val3> 、 <val6> 、 <val4> 、 <val1> 、 <val2> ) からなる列を <name5> とする	<name5> = [ <val3> , <val6> , <val4> , <val1> , <val2> , <val5> , <val3> , <val6> , <val4> , <val1> , <val2> ]	<name5> = [ <val3> , <val6> , <val4> , <val1> , <val2> , <val5> , <val3> , <val6> , <val4> , <val1> , <val2> ]
<name5> 、 <name6> - <name4> の絶対値に <name2> - <name3> の絶対値を加えた値に <name1> から <name5> を引いた値の絶対値を加えた値に <name6> から <name4> を引いた値の絶対値を加えた値の最小値を <name5> とする	<name5> = min ( <name5> , abs ( <name6> - <name4> ) + abs ( <name2> - <name3> ) + abs ( <name1> - <name5> ) + abs ( <name6> - <name4> ) )	else = min ( <name5> , abs ( <name6> - <name4> ) + abs ( <name2> - <name3> ) + abs ( <name1> - <name5> ) + abs ( <name6> - <name4> ) )
<name3> の <name6> 番目の <name2> 番目が <val5> に含まれるとき、	if <name3> [ <name6> ] [ <name2> ] in <val5> :	for <name3> in <name3> [ <name6> ] [ <name2> ] in <val5> :
真を <name2> の <name4> 番目にする	<name2> [ <name4> ] = True	( <name2> [ <name4> ] = True )
<name1> ( <name4> ( <name2> - <name5> ) * <name3> . <name6> , <name1> ( <name2> - <name5> ) * <name3> . <name6> ) を <name6> とする	<name6> = <name1> ( <name4> ( <name2> - <name5> ) * <name3> . <name6> , <name1> ( <name2> - <name5> ) * <name3> . <name6> )	<name6> = <name1> ( <name4> ( <name2> - <name5> ) * <name3> . <name6> , <name1> ( <name2> - <name5> ) * <name3> . <name6> )
<name5> の <name1> 番目を展開し、それぞれ <name3> 、 <name4> 、 <name2> とする	<name3> , <name4> , <name2> = <name5> [ <name1> ]	<name1> , <name3> , <name4> , <name2> = <name5> [ <name1> ]
<name6> の <name3> 番目が <name1> より大きいとき、	if <name6> [ <name3> ] > <name1> :	: if <name6> [ <name3> ] > <name1> :
( <val5> 、 <val4> ) からなる列の <name2> が <name6> より小さいかどうかが <name1> より小さいかどうか番目を出力する	print ( [ <val5> , <val4> ] [ <name2> < <name6> < <name1> ] )	print ( [ <val5> , <val4> ] [ <name2> < <name6> < <name1> ] )
<name5> の末尾に入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を追加する	<name5> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )	<name1> . append ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )
<name2> の <name6> が <name3> の <name6> より小さいかどうかを返す	return <name2> . <name6> < <name3> . <name6>	x return <name2> . <name6> < <name3> . <name6>
( ( <val4> ) からなる列の <val4> から <name3> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <name1> に <val2> を加えた値の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val4> ] * [ ( <name1> + <val2> ) for <name6> in range ( <name3> + <val2> ) ] ]	<name5> = [ [ <val4> ] * [ ( <name1> + <val2> ) for <name6> in range ( <name3> + <val2> ) ] ]
( <name6> 、 <name2> 、 <name3> ) からなる列をソートした列の <val1> 番目を <name5> とする	<name5> = sorted ( [ <name6> , <name2> , <name3> ] ) [ <val1> ]	<name5> = sorted ( [ <name6> , <name2> , <name3> ] ) [ <val1> ]
<name1> の先頭の <val3> 乗に <name1> の <val2> 番目の <val3> 乗を加えた値が <name1> の <val3> 番目の <val3> 乗と等しいとき、	if <name1> [ 0 ] ** <val3> + <name1> [ <val2> ] ** <val3> == <name1> [ <val3> ] ** <val3> :	list ( <name1> [ 0 ] ** <val3> + <name1> [ <val2> ] ** <val3> == <name1> [ <val3> ] ** <val3> :
<name3> 、 <name5> から <name2> を引いた値に <name6> を掛けた値の最大値を <name3> とする	<name3> = max ( <name3> , ( <name5> - <name2> ) * <name6> )	<name3> = max ( <name3> , ( <name5> - <name2> ) * <name6> )
<val4> を <name2> とする <val5> の <val3> 乗に <val3> を加えた値を <name1> とする	<name2> = <val4> <name1> = <val5> ** <val3> + <val3>	<name6> = <val4> <name1> = <val5> ** <val3> + <val3>
<name3> の先頭に <name1> の <val6> 番目を追加する	<name3> . appendleft ( <name1> [ <val6> ] )	<name1> . appendleft ( <name1> [ <val6> ] )
<val6> 年 <val1> 月 <val4> 日 <name3> 時 <name5> 分 <name2> 秒の日時を <name2> とする	<name2> = datetime . datetime ( <val6> , <val1> , <val4> , <name3> , <name5> , <name2> )	<name2> = datetime . datetime ( <val6> , <val1> , <val4> , <name3> < <name5> , <name2> )
<name5> の <name3> に対応する値、もし存在しなければ <val1> を <name4> とする	<name4> = <name5> . <name3> . get ( <val1> )	<name4> = <name5> . <name3> . get ( <val1> )
<name4> ( <val5> , [ <val2> , <val1> ] ) を <name3> とする	<name3> = <name4> ( <val5> , [ <val2> , <val1> ] )	else = <name4> ( <val5> , [ <val2> , <val1> ] )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を <name1> とする	<name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name2> の <val3> 番目が <name4> の <val3> 番目と等しいかどうかが <val3> と等しいとき、	if <name2> [ <val3> ] == <name4> [ <val3> ] == <val3> :	list if <name2> [ <val3> ] == <name4> [ <val3> ] == <val3> :
<name6> を <name4> で割った商を出力する	print ( <name6> // <name4> )	print ( <name6> // <name4> )
( <name3> 、 <name4> 、 <name5> ) からなる列を <name2> とするを <name5> の <val6> 番目にする	<name5> [ <val6> ] = <name2> = [ <name3> , <name4> , <name5> ]	<name2> [ <val6> ] = <name2> = [ <name3> , <name4> , <name5> ]
<name6> の <name4> 番目の <name5> 番目を <name3> だけ減少させる	<name6> [ <name4> ] [ <name5> ] -= <name3>	<name3> [ <name4> ] [ <name5> ] -= <name3>
\ <name5> ( <val2> % <name6> ( <name1> [ <name3> -1 ] ) ) \	\ <name5> ( <val2> % <name6> ( <name1> [ <name3> - 1 ] ) ) \	for <name5> in <name5> ( <val2> % <name6> ( <name1> [ <name3> - 1 ] ) ) \
<name5> に <name6> から <name5> を引いた値を <val4> で割った商を加えた値の整数値を <name1> とする	<name1> = int ( <name5> + ( <name6> - <name5> ) // <val4> )	<name1> = int ( <name5> + ( <name6> - <name5> ) // <val4> )
<name6> から <name5> を引いた値が <val4> より小さいとき、 <blk> <val4> を返す </blk>	if <name6> - <name5> < <val4> : <blk> return <val4> </blk>	\ return <name6> - <name5> < <val4> : <blk> return <val4> </blk>
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列の集合を <name2> とする	<name2> = set ( [ int ( <name4> ) for <name4> in input ( ) . split ( ) ] )	input = set ( [ int ( <name4> ) for <name4> in input ( ) . split ( ) ] )
<name5> の末尾に <name2> から <val4> を引いた値に <name1> を掛けた値に <name6> を加えた値を追加する	<name5> . append ( ( <name2> - <val4> ) * <name1> + <name6> )	<name5> . append ( ( <name2> - <val4> ) * <name1> + <name6> )
<name3> の <name5> 番目の <name4> 番目を <name6> とする	<name6> = <name3> [ <name5> ] [ <name4> ]	else = <name3> [ <name5> ] [ <name4> ]
<name2> の <val3> 番目に <name5> を追加した集まり	<name2> [ <val3> ] . add ( <name5> )	<name2> [ <val3> ] . add ( <name5> )
<name5> をパラメータとして <name5> の <name4> を返す関数をキーとして逆順に <name3> をソートした列を <name3> とする	<name3> = sorted ( <name3> , key = lambda <name5> : <name5> . <name4> , reverse = True )	<name2> = sorted ( <name3> , key = lambda <name5> : <name5> . <name4> , reverse = True )
<name6> の <name4> の <name1> と <name6> の <name5> の排他論理和のビット長番目の末尾に ( <name1> 、 <name3> ) の組を追加する	<name6> . <name4> [ ( <name1> ^ <name6> . <name5> ) . bit_length ( ) ] . append ( ( <name1> , <name3> ) )	<name1> . <name4> [ ( <name1> ^ ( <name6> . <name5> ) . bit_length ( ) ] . append ( ( <name1> , <name3> ) )
<val1> の <val4> 乗を <name3> とする	<name3> = <val1> ** <val4>	<name3> = <val1> ** <val4>
<val5> から <name3> の <name4> 番目の <name6> 番目を引いた値を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = <val5> - <name3> [ <name4> ] [ <name6> ]	( <name3> [ <name4> ] [ <name6> ] = <val5> - <name3> [ <name4> ] [ <name6> ] )
<val3> に <name4> を掛けた値から <val5> 未満までの <name4> 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val3> * <name4> , <val5> , <name4> ) :	range for <name1> in range ( <val3> * <name4> , <val5> , <name4> ) :
0 から、つまり入力された文字列の整数値未満までの数列を順に <name4> として、繰り返す <blk> <name6> の末尾に入力された文字列を追加する </blk>	for <name4> in range ( int ( input ( ) ) ) : <blk> <name6> . append ( input ( ) ) </blk>	for <name4> in range ( int ( input ( ) ) ) : <blk> <name6> . append ( input ( ) ) </blk>
<name3> の末尾に入力された文字列の両端から空白改行を取り除いた文字列のリストを追加する	<name3> . append ( list ( input ( ) . strip ( ) ) )	<name4> . append ( list ( input ( ) . strip ( ) ) )
( 、つまり未定値 ) からなる列の <name3> の <name2> 回分の列を <name3> の <name1> にする	<name3> . <name1> = [ None ] * <name3> . <name2>	<name1> . <name3> . <name1> = [ None ] * <name3> . <name2>
( <name5> 、 <name2> ) の組が <name1> に含まれるとき、	if ( <name5> , <name2> ) in <name1> :	for <name1> in ( <name5> , <name2> ) in <name1> :
( 、つまり真 ) からなる列の <name2> 回分の列を <name5> とする	<name5> = [ True ] * <name2>	<name5> = [ True ] * <name2>
<name6> の <name5> 番目が <val3> と等しいとき、	if <name6> [ <name5> ] == <val3> :	> <name6> [ <name5> ] == <val3> :
that が <name2> に含まれまたは <val1> が <name2> に含まれるとき、	if 'that' in <name2> or <val1> in <name2> :	for <name2> import <name2> or <val1> in <name2> :
<name5> の <name6> 番目に <name3> を加えた値を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name5> [ <name6> ] + <name3>	) <name5> [ <name4> ] = <name5> [ <name6> ] + <name3>
<name6> ( <name4> / <name3> . <name1> , <name4> / <name3> . <name2> ) を返す	return <name6> ( <name4> / <name3> . <name1> , <name4> / <name3> . <name2> )	return <name6> ( <name4> / <name3> . <name1> , <name4> / <name3> . <name2> )
<name5> に <name1> に <name4> を掛けた値を加えた値を <name6> で割った余りを <name5> とする	<name5> = ( <name5> + <name1> * <name4> ) % <name6>	: <name5> = ( <name5> + <name1> * <name4> ) % <name6>
未定値を <name6> の <name4> にする	<name6> . <name4> = None	<name1> . <name4> = None
<name5> ( <name6> , <name3> ) を <name4> とする	<name4> = <name5> ( <name6> , <name3> )	<name4> = <name5> ( <name6> , <name3> )
<name1> を <name5> の <name4> から <val3> を引いた値番目にする	<name5> [ <name4> - <val3> ] = <name1>	( <name5> [ <name4> - <val3> ] = <name1> )
( <name5> 、 <name2> をソートした列 ) の組を返す	return ( <name5> , sorted ( <name2> ) )	yield ( <name5> , sorted ( <name2> ) )
<name2> の <name5> をソートする	<name2> . <name5> . sort ( )	sorted . sort ( <name2> . <name5> )
<name6> 、 <name1> を <name6> で割った余りを <name1> 、 <name6> とする	<name1> , <name6> = <name6> , <name1> % <name6>	<name1> , <name6> = <name6> , <name1> % <name6>
未定値、 <name6> を <name3> 、 <name2> とする	<name3> , <name2> = None , <name6>	<name1> , <name2> = None , <name6>
<name1> の <name2> から読み込んだ行の列を <name6> とする	<name6> = <name1> . <name2> . readlines ( )	<name6> = <name1> . <name2> . readlines ( )
<name3> の <val4> 番目を <name5> とする	<name5> = <name3> [ <val4> ]	else = <name3> [ <val4> ]
<name2> が <name4> の <name2> より小さいとき、 <blk> <name3> を <name4> の <name5> にする </blk>	if <name2> < <name4> . <name2> : <blk> <name4> . <name5> = <name3> </blk>	\ <name4> . <name5> = <name2> < <name4> . <name2> : <blk> <name4> . <name5> = <name3> </blk>
<name4> の <name1> 番目の <name6> 番目を <name5> とする	<name5> = <name4> [ <name1> ] [ <name6> ]	<name5> = <name4> [ <name1> ] [ <name6> ]
<name5> ( <name2> -1 , <name4> - ( <name1> * <name2> ) , <name6> )	<name5> ( <name2> - 1 , <name4> - ( <name1> * <name2> ) , <name6> )	<name3> ( <name5> ( <name2> - 1 , <name4> - ( <name1> * <name2> ) , <name6> ) )
0 から <name3> から <name6> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> - <name6> ) :	) : for <name4> in range ( <name3> - <name6> ) :
<name4> 内の <name3> を <val5> で置き換えた文字列を <name4> とする	<name4> = <name4> . replace ( <name3> , <val5> )	<name4> = <name4> . replace ( <name3> , <val5> )
( <name2> ) からなる列の <name5> に <val4> を加えた値回分の列を <name6> とする	<name6> = [ <name2> ] * ( <name5> + <val4> )	<name6> = [ <name2> ] * ( <name5> + <val4> )
0 から <name6> を <val5> で割った商未満までの数列の各要素を <name2> とし、、つまり入力された文字列の整数値の列の総和を出力する	print ( sum ( [ int ( input ( ) ) for <name2> in range ( <name6> // <val5> ) ] ) )	print ( sum ( [ int ( input ( ) ) for <name2> in range ( <name6> // <val5> ) ] ) )
Mon に <name2> が <val3> と等しいかどうかに <val5> に ( <name2> == <val6> ) に <val1> * ( <name2> == <val4> ) + <val2> * ( <name2> == <val3> ) + <val5> * ( <name2> == <val6> ) + <val1> * ( <name2> == <val4> ) + <val2> * ( <name2> == <val3> ) + <val5> を加えた値を掛けた値を加えた値を掛けた値を出力する	print ( 'Mon' * ( <name2> == <val3> ) + <val5> * ( <name2> == <val6> ) + <val1> * ( <name2> == <val4> ) + <val2> * ( <name2> == <val3> ) + <val5> * ( <name2> == <val6> ) + <val1> * ( <name2> == <val4> ) + <val2> * ( <name2> == <val3> ) + <val5> )	[ print ( <val1> * ( <name2> == <val3> ) + <val5> * ( <name2> == <val6> ) + <val1> * ( <name2> == <val4> ) + <val2> * ( <name2> == <val3> ) + <val5> * ( <name2> == <val6> ) + <val1> * ( <name2> == <val2> ) + ( <name2> == <val4> ) + <val2> ) ) )
( <val5> ) からなる列の <name1> 回分の列を <name6> とする	<name6> = [ <val5> ] * <name1>	<name6> = [ <val5> ] * <name1>
<name2> の各要素を <name1> とし、 <name1> に <name6> を加えた値の列を返す	return [ <name1> + <name6> for <name1> in <name2> ]	return [ <name1> + <name6> for <name1> in <name2> ]
<name6> ( <name4> [ <val1> ] , <name4> [ <val2> ] ) を <name5> とする	<name5> = <name6> ( <name4> [ <val1> ] , <name4> [ <val2> ] )	else = <name6> ( <name4> [ <val1> ] , <name4> [ <val2> ] )
( <name1> の整数値、 <val6> ) の組を返す	return ( int ( <name1> ) , <val6> )	x return ( int ( <name1> ) , <val6> )
( -1 ) からなる列の <name6> 回分の列を <name2> とする	<name2> = [ - 1 ] * <name6>	<name2> = [ - 1 ] * <name6>
<name6> の <val1> 番目、 <name6> の <val3> 番目を <name4> 、 <name5> とする	<name4> , <name5> = <name6> [ <val1> ] , <name6> [ <val3> ]	<name6> , <name5> = <name6> [ <val1> ] , <name6> [ <val3> ]
<name3> ( <name1> , <name2> ) に <name6> を加えた値が <name4> より大きいとき、	if <name3> ( <name1> , <name2> ) + <name6> > <name4> :	continue <name3> ( <name1> , <name2> ) + <name6> > <name4> :
<name3> の <name2> 番目に <name6> を掛けた値を <name4> で割った余りを <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name3> [ <name2> ] * <name6> % <name4>	<name1> [ <name2> ] = <name3> [ <name2> ] * <name6> % <name4>
<name5> を <val4> だけ減少させる	<name5> -= <val4>	<name5> -= <val4>
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name3> 、 <name2> 、 <name5> 、 <name6> 、 <name1> 、 <name4> 、 <name3> とする	<name4> , <name3> , <name2> , <name5> , <name6> , <name1> , <name4> , <name3> = map ( float , input ( ) . split ( ) )	<name3> , <name2> , <name5> , <name6> , <name1> , <name4> , <name3> = map ( float , input ( ) . split ( ) )
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = map ( int , <name1> . readline ( ) . split ( ) )	<name2> , <name4> = map ( int , <name1> . readline ( ) . split ( ) )
<name2> の <name6> 番目から <name1> 番目までの部分列を <name4> とする	<name4> = <name2> [ <name6> : <name1> ]	<name4> = <name2> [ <name6> : <name1> ]
<name6> の <name5> 番目を <name2> だけ増加させる	<name6> [ <name5> ] += <name2>	( <name6> [ <name5> ] += <name2> )
<name6> から <name1> を引いた値の絶対値が <val3> <name4> <val2> より小さいとき、	if abs ( <name6> - <name1> ) < <val3> <name4> <val2> :	for <name6> in abs ( <name6> - <name1> ) < <val3> <name4> <val2> :
<name4> と <name4> に <val5> を加えた値の論理積から <val5> を引いた値を <name4> とする	<name4> = ( <name4> & ( <name4> + <val5> ) ) - <val5>	<name4> = <name4> & ( <name4> + <val5> ) - <val5>
<name5> の <name1> から読み込んだ一行を <name3> とする	<name3> = <name5> . <name1> . <name3>	<name1> . <name3> = <name5> . <name1> . <name3>
<val5> から <val3> に <name4> を掛けた値に <val5> を加えた値未満までの数列のリストを <name6> とする	<name6> = list ( range ( <val5> , <val3> * <name4> + <val5> ) )	<name6> = list ( range ( <val5> , <val3> * <name4> + <val5> ) )
<name4> の <name3> をソートした列を返す	return sorted ( <name4> . <name3> )	yield sorted ( <name4> . <name3> )
<name4> の <name6> を <val5> だけ増加させる	<name4> . <name6> += <val5>	( <name4> . <name6> += <val5> )
<name4> の <name1> 番目に <name2> の <name3> 番目を加えた値を <name5> とする	<name5> = <name4> [ <name1> ] + <name2> [ <name3> ]	<name5> = <name4> [ <name1> ] + <name2> [ <name3> ]
0 から <name1> 未満までの数列の各要素を <name5> とし、 <name3> の <name5> 番目の整数値の列を <name4> とする	<name4> = [ int ( <name3> [ <name5> ] ) for <name5> in range ( <name1> ) ]	<name4> = [ int ( <name3> [ <name5> ] ) for <name5> in range ( <name1> ) ]
<name2> の先頭に <name2> の <val3> 番目を掛けた値から <name2> の <val4> 番目に <name2> の <val5> 番目を掛けた値を引いた値を <name6> とする	<name6> = <name2> [ 0 ] * <name2> [ <val3> ] - <name2> [ <val4> ] * <name2> [ <val5> ]	else = <name2> [ 0 ] * <name2> [ <val3> ] - <name2> [ <val4> ] * <name2> [ <val5> ]
<name3> の末尾に <name4> ( <name1> , <name1> [ <name5> ] . <name2> ) を追加する	<name3> . append ( <name4> ( <name1> , <name1> [ <name5> ] . <name2> ) )	<name2> . append ( <name4> ( <name1> , <name1> [ <name5> ] . <name2> ) )
<name5> の <name4> の <name1> 番目の <name3> 番目の <name6> 番目を <name2> だけ増加させる	<name5> . <name4> [ <name1> ] [ <name3> ] [ <name6> ] += <name2>	( <name5> . <name4> [ <name1> ] [ <name3> ] [ <name6> ] += <name2> )
<name5> の <name4> の x 座標に <name1> の <name4> の x 座標を掛けた値に <name5> の <name4> の y 座標に <name1> の <name4> の y 座標を掛けた値を加えた値を返す	return <name5> . <name4> . x * <name1> . <name4> . x + <name5> . <name4> . y * <name1> . <name4> . y	x return <name5> . <name4> . x * <name1> . <name4> . x + <name5> . <name4> . y
<name4> の <name1> の <name2> 番目の <name5> の末尾に <name5> を追加する	<name4> . <name1> [ <name2> ] . <name5> . append ( <name5> )	<name5> . <name4> [ <name1> . <name2> ] . <name5> . append ( <name5> )
<val1> から <name6> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <name6> ) :	for <name2> in range ( <val1> , <name6> ) :
{} {}を書式として <name4> 、 <name1> で整形した文字列を出力する	print ( '{} {}' . format ( <name4> , <name1> ) )	print ( '{} {}' . format ( <name4> , <name1> ) )
<name5> が <val4> から <name6> の長さ未満までの数列に含まれなくまたは <name2> が <val4> から <name6> の先頭の長さ未満までの数列に含まれないとき、	if <name5> not in range ( len ( <name6> ) ) or <name2> not in range ( len ( <name6> [ <val4> ] ) ) :	for <name2> in range ( <name5> not in range ( <val4> , len ( <name6> ) ) ) or <name2> not in range ( len ( <name6> [ <val4> ] ) ) :
<name6> が、つまり未定値と等しくないとき、 <blk> <name5> を返す </blk>	if <name6> is None : <blk> return <name5> </blk>	\ return <name6> is None : <blk> return <name5> </blk>
0 から <name6> を <val1> で割った商未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> // <val1> ) :	for <name5> ) in range ( <name6> // <val1> ) :
<name1> を <name6> の <name4> だけ増加させる	<name1> += <name6> . <name4>	<name1> += <name6> [ <name4> ]
<name4> の <name3> から読み込んだ行の列を順に <name1> として、繰り返す	for <name1> in <name4> . <name3> . readlines ( ) :	. for <name1> in <name4> . <name3> . readlines ( ) :
<name6> が <name1> と等しくかつ <name4> が <name5> と等しいとき、	if <name6> == <name1> and <name4> == <name5> :	or <name6> == <name1> and <name4> == <name5> :
<name5> の <name1> 番目の <name6> が -1 と等しくなくまたは <name5> の <name1> 番目の <name4> が -1 と等しくないとき、	if <name5> [ <name1> ] . <name6> != - 1 or <name5> [ <name1> ] . <name4> != - 1 :	if <name5> [ <name1> ] . <name6> != - 1 or <name5> [ <name1> ] . <name4> != - 1 :
( <val1> ) からなる列の <name3> の <name5> 回分の列を <name3> の <name6> にする	<name3> . <name6> = [ <val1> ] * <name3> . <name5>	<name3> . <name6> = [ <val1> ] * <name3> . <name5>
<name3> の <name2> の末尾に <val5> を追加する	<name3> . <name2> . append ( <val5> )	<name3> . <name2> . append ( <val5> )
<name6> 、 <name4> を <name6> で割った余りを <name4> 、 <name6> とする	<name4> , <name6> = <name6> , <name4> % <name6>	str , <name6> = <name6> , <name4> % <name6>
<val4> を書式として <name1> の、つまり先頭から <val6> 番目までの部分列の総和、 <name2> の、つまり先頭から <val6> 番目までの部分列の総和で整形した文字列を出力する	print ( <val4> . format ( sum ( <name1> [ 0 : <val6> ] ) , sum ( <name2> [ 0 : <val6> ] ) ) )	print ( <val4> . format ( sum ( <name1> [ : <val6> ] ) , sum ( <name2> [ : <val6> ] ) ) )
<name2> から <val4> を引いた値、 <name5> から <val4> を引いた値、 <name3> から <val4> を引いた値を <name2> 、 <name5> 、 <name3> とする	<name2> , <name5> , <name3> = <name2> - <val4> , <name5> - <val4> , <name3> - <val4>	<name2> , <name5> , <name3> = <name2> - <val4> , <name5> - <val4> , <name3> - <val4>
<name2> ( <name3> , <name1> , <name5> , <name4> )	<name2> ( <name3> , <name1> , <name5> , <name4> )	( <name2> ( <name3> , <name1> , <name5> , <name4> ) )
<name2> . <name5> ( <name1> [ <name3> ] )	<name2> . <name5> ( <name1> [ <name3> ] )	<name4> . <name5> ( <name1> [ <name3> ] )
<name6> 内の <val2> を <name3> で置き換えた文字列を <name4> とする	<name4> = <name6> . replace ( <val2> , <name3> )	<name4> = <name6> . replace ( <val2> , <name3> )
<name2> の <name5> を順に <name1> として、繰り返す	for <name1> in <name2> . <name5> :	: for <name1> in <name2> . <name5> :
<val4> を <name3> の <name1> 番目の <name2> 番目にする	<name3> [ <name1> ] [ <name2> ] = <val4>	( <name3> [ <name1> ] [ <name2> ] = <val4> )
<name6> が、つまり空列と等しくまたは <name2> が、つまり空列と等しいとき、	if <name6> == [ ] or <name2> == [ ] :	list ( <name6> == [ ] or <name2> == [ ] ) :
<name6> の <name3> 番目が <name2> より大きいとき、	if <name6> [ <name3> ] > <name2> :	if <name6> [ <name3> ] > <name2> :
<name6> . <name1> ( <name4> , <name5> , <name3> )	<name6> . <name1> ( <name4> , <name5> , <name3> )	set ( <name6> . <name1> ( <name4> , <name5> , <name3> ) )
<name4> . <name6> ( <val5> )	<name4> . <name6> ( <val5> )	<name4> . <name6> ( <val5> )
<name5> の <name3> 番目の <name4> 番目を <name2> とする	<name2> = <name5> [ <name3> ] [ <name4> ]	<name2> = <name5> [ <name3> ] [ <name4> ]
<name6> ( <name5> , <name1> + <val2> )	<name6> ( <name5> , <name1> + <val2> )	set ( <name6> ( <name5> , <name1> + <val2> ) )
0 から <name6> の <name5> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( len ( <name6> . <name5> ) ) :	. for <name3> in range ( len ( <name6> . <name5> ) ) :
<name2> の末尾に <name6> を実部、 <name3> を虚部とした複素数を追加する	<name2> . append ( complex ( <name6> , <name3> ) )	<name2> . append ( complex ( <name6> , <name3> ) )
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = map ( int , <name6> ( ) . split ( ) )	input , <name5> = map ( int , <name6> ( ) . split ( ) )
<name3> を <name4> の末尾の <val1> 番目だけ増加させる	<name3> += <name4> [ - <val1> ] [ <val1> ]	<name3> += <name4> [ - <val1> ] [ <val1> ]
<name3> の <name6> から <val5> を引いた値から、つまり末尾までの部分列を展開してを出力する	print ( * <name3> [ <name6> - <val5> : ] )	print ( * <name3> [ <name6> - <val5> : ] )
( <name2> 、 <name1> ) の組を <name5> の <val6> 番目にする	<name5> [ <val6> ] = ( <name2> , <name1> )	) <name5> [ <val6> ] = ( <name2> , <name1> )
<name1> ( <name2> [ <name4> ] , <name5> + <val6> )	<name1> ( <name2> [ <name4> ] , <name5> + <val6> )	<name1> ( <name2> [ <name4> ] , <name5> + <val6> )
<name4> の末尾に ( <val2> 、 <name5> ) の組を追加する	<name4> . append ( ( <val2> , <name5> ) )	<name4> . append ( ( <val2> , <name5> ) )
ソートされた順序を保ったまま <name1> を <name5> に挿入できる最後の位置を <name2> とする	<name2> = bisect . bisect_right ( <name5> , <name1> )	<name2> = bisect_right ( <name5> , <name1> )
<name3> ( <name4> , <name5> , <val6> , <val6> , <name1> // <val2> ) を返す	return <name3> ( <name4> , <name5> , <val6> , <val6> , <name1> // <val2> )	yield <name3> ( <name4> , <name5> , <val6> , <val6> , <val6> , <name1> // <val2> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> 、 <name6> 、 <name4> とする	<name5> , <name2> , <name6> , <name4> = map ( int , input ( ) . split ( ) )	<name2> , <name6> , <name4> = map ( int , input ( ) . split ( ) )
<name3> の <name5> 番目の <name2> 番目が <name1> と等しくかつ <name4> の <name6> 番目が <val3> と等しいとき、	if <name3> [ <name5> ] [ <name2> ] == <name1> and <name4> [ <name6> ] == <val3> :	list if <name3> [ <name5> ] [ <name2> ] == <name1> and <name4> [ <name6> ] == <val3> :
<name4> の各要素を <name5> 、 <name3> 、 <name2> 、 <name6> とし、 ( <name5> を <name3> で割った値、 <name2> を <name6> で割った値 ) の組の列を <name1> とする	<name1> = [ ( <name5> / <name3> , <name2> / <name6> ) for <name5> , <name3> , <name2> , <name6> in <name4> ]	<name1> = [ ( <name5> / <name3> , <name2> / <name6> ) for <name5> , <name3> , <name2> , <name6> in <name4> ]
<name2> に <name3> を掛けた値を <name2> と <name3> の最大公約数で割った商を返す	return <name2> * <name3> // gcd ( <name2> , <name3> )	gcd ( <name2> * <name3> ) // gcd ( <name2> , <name3> )
<name6> モジュールを用いる	from <name6> import lru_cache	sqrt ( <name6> ) import sqrt
<name5> の <name3> の <val6> 番目の整数値番目の末尾に <name3> の <val4> 番目を追加する	<name5> [ int ( <name3> [ <val6> ] ) ] . append ( <name3> [ <val4> ] )	<name1> [ int ( <name3> [ <val6> ] ) ] . append ( <name3> [ <val4> ] )
<name6> の <name1> が <name5> の <name1> より大きいかどうかを返す	return <name6> . <name1> > <name5> . <name1>	x return <name6> . <name1> > <name5> . <name1>
改行せずに ' {}' を出力する	print ( { list_3d [ k ] [ j ] [ i ] } , end = '' )	end = '' , end = '' )
<name3> に <name3> から <name4> を引いた値を掛けた値に <name3> から <name5> を引いた値を掛けた値に <name3> から <name2> を引いた値を掛けた値の平方根を返す	return sqrt ( <name3> * ( <name3> - <name4> ) * ( <name3> - <name5> ) * ( <name3> - <name2> ) )	assert sqrt ( <name3> * ( <name3> - <name4> ) * ( <name3> - <name5> ) * ( <name3> - <name2> ) )
( -1 ) からなる列の <val4> に <val4> を掛けた値回分の列を <name6> とする	<name6> = [ - 1 ] * ( <val4> * <val4> )	<name6> = [ - <val4> ] * ( <val4> * <val4> )
<name6> . <name2> ( <name3> + <val1> , <name5> )	<name6> . <name2> ( <name3> + <val1> , <name5> )	set ( <name6> . <name2> ( <name3> + <val1> , <name5> ) )
<name4> を <name5> で割った余りと <name5> の最大公約数を返す	return gcd ( <name4> % <name5> , <name5> )	return gcd ( <name4> % <name5> , <name5> )
( ( <val1> ) からなる列の <val1> から <name4> 未満までの数列の各要素を <name2> とし、 <name3> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val1> ] * [ <name3> for <name2> in range ( <name4> ) ] ]	<name6> = [ [ <val1> ] * [ <name3> for <name2> in range ( <name4> ) ] ]
<name5> の <name3> 番目の <name2> と <name4> の論理積番目を <name6> だけ増加させる	<name5> [ <name3> ] [ <name2> & <name4> ] += <name6>	<name3> [ <name3> ] [ <name2> & <name4> ] += <name6>
<name6> を順に <name3> 、 <name4> 、 <name5> 、 <name1> として、繰り返す	for <name3> , <name4> , <name5> , <name1> in <name6> :	in for <name3> , <name4> , <name5> , <name1> in <name6> :
0 から <name3> から <val6> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> - <val6> ) :	for <name2> in range ( <name3> - <val6> ) :
<name6> の各要素に整数を適用した列を順に <name2> として、繰り返す	for <name2> in map ( int , <name6> ) :	\ <name2> in map ( int , <name6> ) :
<name4> . <name1> ( <name6> , <name2> + <name5> , <val3> , - ( <name4> [ <name6> ] [ <val1> ] * <name4> [ <name6> ] [ <val3> ] * <name4> [ <name6> ] [ <val6> ] ) )	<name4> . <name1> ( <name6> , <name2> + <name5> , <val3> , - ( <name4> [ <name6> ] [ <val1> ] * <name4> [ <name6> ] [ <val3> ] * <name4> [ <name6> ] [ <val6> ] ) )	<name5> . <name1> ( <name6> , <name2> + <name5> , <val3> , - <name4> [ <name6> ] [ <val1> ] * <name4> [ <name6> ] [ <val3> ] * <name4> [ <name6> ] [ <val6> ] )
<name6> を <val2> に <name4> の <name3> 番目を加えた値だけ増加させる	<name6> += <val2> + <name4> [ <name3> ]	<name1> += <val2> + <name4> [ <name3> ]
ソートされた順序を保ったまま <name5> を <name1> に挿入できる位置、ソートされた順序を保ったまま <name5> を <name1> に挿入できる最後の位置を出力する	print ( bisect . bisect_left ( <name1> , <name5> ) , bisect . bisect_right ( <name1> , <name5> ) )	print ( bisect . bisect_right ( <name1> , <name5> ) , bisect_right ( <name1> , <name5> ) )
<name1> から <val5> を引いた値、 <name6> から <val5> を引いた値を <name1> 、 <name6> とする	<name1> , <name6> = <name1> - <val5> , <name6> - <val5>	<name1> , <name6> = <name1> - <val5> , <name6> - <val5>
<name4> を <name4> の <name2> にする	<name4> . <name2> = <name4>	( <name4> . <name2> = <name4> )
<name5> の <val2> 番目に <val1> を掛けた値に <name5> の <val6> 番目を加えた値	<name5> [ <val2> ] * <val1> + <name5> [ <val6> ]	( <name5> [ <val2> ] * <val1> + <name5> [ <val6> ] )
<name3> を順に <name2> 、 <name4> として、繰り返す <blk> <name4> 、 <name1> の <name4> 番目を出力する </blk>	for <name2> , <name4> in <name3> : <blk> print ( <name4> , <name1> [ <name4> ] ) </blk>	for <name2> , <name4> in <name3> : <blk> print ( <name4> , <name1> [ <name4> ] ) </blk>
( <name5> 、 <name2> ) の組を <name4> とする	<name4> = ( <name5> , <name2> )	<name4> = ( <name5> , <name2> )
<name2> 、 <name5> を <name5> の <name2> 、 <name2> の <name2> とする	<name5> . <name2> , <name2> . <name2> = <name2> , <name5>	[ <name5> . <name2> , <name2> . <name2> = <name2> , <name5>
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name5> とする	<name2> , <name3> , <name5> = map ( int , input ( ) . split ( <val1> ) )	<name3> , <name5> = map ( int , input ( ) . split ( <val1> ) )
<name6> ( <name2> , <name5> , <name4> [ <name1> ] )	<name6> ( <name2> , <name5> , <name4> [ <name1> ] )	<name6> ( <name2> , <name5> , <name4> [ <name1> ] )
<name4> の <name6> に <val1> を加えた値番目の <name2> 番目を <name5> [ <name6> ] の <name2> -1 番目に <name5> [ <name6> ] [ <name2> ] に ( <name3> -3 ) を掛けた値を加えた値に <name5> の <name6> 番目の <name2> に <val1> を加えた値番目を加えた値を <name3> から <val1> を引いた値で割った値に <name4> を掛けた値だけ増加させる	<name4> [ <name6> + <val1> ] [ <name2> ] += ( <name5> [ <name6> ] [ <name2> - <val1> ] + <name5> [ <name6> ] [ <name2> ] * ( <name3> - 3 ) + <name5> [ <name6> ] [ <name2> + <val1> ] ) / ( <name3> - <val1> ) * <name4>	[ <name4> [ <name6> + <val1> ] [ <name2> ] += ( <name5> [ <name6> ] [ <name2> - <val1> ] + <name5> [ <name6> ] [ <name2> ] * ( <name3> - <val1> ) ) * ( <name5> [ <name6> ] [ <name2> + <val1> ] ) / ( <val1> - <name3> ) * <val1>
<val3> + <val4> + <val3> + <val6> + <val3> + <val6> + <val3> に <val3> を加えた値に <val6> を加えた値に <val3> を加えた値に <val6> を加えた値に <name2> を加えた値を <name5> とする	<name5> = <val3> + <val4> + <val3> + <val6> + <val3> + <val6> + <val3> + <val3> + <val6> + <val3> + <val6> + <name2>	<name5> = <val3> + <val4> + <val3> + <val6> + <val3> + <val6> + <val3> + <val6> + <val3> + <val6> + <name2>
<name2> の末尾に <name1> に <name3> を加えた値を追加する	<name2> . append ( <name1> + <name3> )	<name1> . append ( <name1> + <name3> )
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name2> 、 <name1> 、 <name4> とする	<name2> , <name1> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	[ <name2> , <name1> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name1> . <name3> ( <name4> ) を <name4> とする	<name4> = <name1> . <name3> ( <name4> )	<name4> = <name1> . <name3> ( <name4> )
<name4> に <val3> を加えた値が <name5> から <val2> を引いた値より大きいとき、	if <name4> + <val3> > <name5> - <val2> :	continue <name4> + <val3> > <name5> - <val2> :
<name3> を <name1> で割った商を <name5> とする	<name5> = <name3> // <name1>	( <name5> = <name3> // <name1> )
<name4> が <name1> に <val6> を掛けた値に含まれるとき、	if <name4> in <name1> * <val6> :	or <name4> in <name1> * <val6> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name6> 、 <name2> とする	<name4> , <name6> , <name2> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name2> = map ( int , input ( ) . split ( ) )
<name6> の間、次を繰り返す <blk> <name6> 、 <name2> を <name6> で割った余りを <name2> 、 <name6> とする </blk>	while <name6> : <blk> <name2> , <name6> = <name6> , <name2> % <name6> </blk>	: while <name6> : <blk> <name2> , <name6> = <name6> , <name2> % <name6> </blk>
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name3> とする	<name1> , <name5> , <name3> = map ( int , input ( ) . split ( <val2> ) )	<name1> , <name5> , <name3> = map ( int , input ( ) . split ( <val2> ) )
<name1> に <name5> を加えた値に <name4> を加えた値を <val2> で割った値を <name6> とする	<name6> = ( <name1> + <name5> + <name4> ) / <val2>	<name6> = ( <name1> + <name5> + <name4> ) / <val2>
<name2> . <name1> . <name5> . <name4> ( ) でなくかつ <name2> . <name1> . <name6> . <name4> ( ) でないとき、	if not <name2> . <name1> . <name5> . <name4> ( ) and not <name2> . <name1> . <name6> . <name4> ( ) :	list ( not <name2> . <name1> . <name5> . <name4> ( ) ) and not <name2> . <name1> . <name6> . <name4> ( ) :
<name5> の <name4> 、 <name5> の <name2> 、 <name5> の <name6> 、 <name5> の <name1> を <name5> の <name1> 、 <name5> の <name4> 、 <name5> の <name2> 、 <name5> の <name6> とする	<name5> . <name1> , <name5> . <name4> , <name5> . <name2> , <name5> . <name6> = <name5> . <name4> , <name5> . <name2> , <name5> . <name6> , <name5> . <name1>	<name1> . <name5> , <name4> . <name5> , <name2> . <name5> , <name6> = <name5> . <name4> , <name5> . <name2> , <name5> . <name6> , <name5> . <name1>
<name5> に <name3> の <name6> から <val4> を引いた値番目を加えた値に <name2> の <name6> から <val4> を引いた値番目に <name3> の <name6> から <val4> を引いた値番目を加えた値を加えた値を出力する	print ( ( <name5> + <name3> [ <name6> - <val4> ] ) + ( <name2> [ <name6> - <val4> ] + <name3> [ <name6> - <val4> ] ) )	end = <name5> + <name3> [ <name6> - <val4> ] + <name2> [ <name6> - <val4> ] + <name3> [ <name6> - <val4> ] )
<name1> . <name6> ( <name4> )	<name1> . <name6> ( <name4> )	not <name1> . <name6> ( <name4> )
os . <name5> の <name2> 番目を <name3> だけ増加させる	<name5> [ <name2> ] += <name3>	( <name5> [ <name2> ] += <name3> )
空列を <name4> とする	<name4> = [ ]	<name2> <name4> = [ ]
<name3> モジュールを用いる	from <name3> import radians , cos , sin	from <name3> import combinations
<name1> の末尾に ( <name4> の先頭、 <name4> の <val5> 番目 ) からなる列を追加する	<name1> . append ( [ <name4> [ 0 ] , <name4> [ <val5> ] ] )	<name1> . append ( [ <name4> [ 0 ] , <name4> [ <val5> ] ] )
<name3> の末尾に ( <name1> の先頭から <val6> を引いた値、 <name1> の <val6> 番目 ) の組を追加する	<name3> . append ( ( <name1> [ 0 ] - <val6> , <name1> [ <val6> ] ) )	<name4> . append ( ( <name1> [ 0 ] - <val6> , <name1> [ <val6> ] ) )
<name3> と <val2> の <name6> 乗の論理積のとき、	if <name3> & ( <val2> ** <name6> ) :	continue if <name3> & <val2> ** <name6> :
<name2> ( <name4> , <name3> ) を <name1> とするを <name3> の <name5> 番目にする	<name3> [ <name5> ] = <name1> = <name2> ( <name4> , <name3> )	<name3> [ <name5> ] = <name1> = <name2> ( <name4> , <name3> )
0 から <name1> 未満までの数列の各要素を <name5> とし、 <name6> から読み込んだ一行の整数値の列を <name4> とする	<name4> = ( [ int ( <name6> . readline ( ) ) for <name5> in range ( <name1> ) ] )	<name6> = [ int ( <name6> . readline ( ) ) for <name5> in range ( <name1> ) ]
<name6> と <val2> の論理積が <val3> と等しいとき、	if <name6> & <val2> == <val3> :	: if <name6> & <val2> == <val3> :
<name6> を <name1> を <val4> で割った余りだけ増加させる	<name6> += <name1> % <val4>	<name6> += ( <name1> % <val4> )
<name2> の <name3> が <name1> の <name3> より大きいとき ( <name2> の <name3> 、 <name1> の <name3> ) の組、そうでなければ ( <name1> の <name3> 、 <name2> の <name3> ) の組を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = ( <name2> . <name3> , <name1> . <name3> ) if <name2> . <name3> > <name1> . <name3> else ( <name1> . <name3> , <name2> . <name3> )	<name6> , <name5> = ( <name2> . <name3> , <name1> . <name3> ) if <name2> . <name3> > <name1> . <name3> else ( <name1> . <name3> , <name2> . <name3> )
<name3> の <name1> に対応する値、もし存在しなければ <val2> を <name4> とする	<name4> = <name3> . <name1> . get ( <val2> )	<name4> = <name3> . <name1> . get ( <val2> )
ソートされた順序を保ったまま <name3> の <name4> 番目を <name5> に挿入できる位置を <name6> とする	<name6> = bisect_left ( <name5> , <name3> [ <name4> ] )	<name6> = bisect . bisect_left ( <name5> , <name3> [ <name4> ] )
<name6> が <name5> に含まれなくまたは <name1> が <name4> に含まれないとき、	if <name6> not in <name5> or <name1> not in <name4> :	while <name6> not not in <name5> or <name1> not in <name4> :
( <val3> ) からなる列の <name6> 回分の列を <name4> の <name1> にする	<name4> . <name1> = [ <val3> ] * <name6>	) . <name1> = [ <val3> ] * <name6>
<name5> の <name2> に <val3> を加えた値から、つまり末尾までの部分列を <name6> とする	<name6> = <name5> [ <name2> + <val3> : ]	<name6> = <name5> [ <name2> + <val3> : ]
0 から <name1> 未満までの数列の各要素を <name5> とし、 <name4> ( ) の両端から空白改行を取り除いた文字列の列を <name3> とする	<name3> = [ <name4> ( ) . strip ( ) for <name5> in range ( <name1> ) ]	<name3> = [ <name4> ( ) . strip ( ) for <name5> in range ( <name1> ) ]
( <name6> ) からなる列の <name2> の <name3> 回分の列を <name4> とする	<name4> = [ <name6> ] * <name2> . <name3>	<name4> = [ <name6> ] * <name2> . <name3>
<val2> から <name6> の平方根の整数値に <val1> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , int ( math . sqrt ( <name6> ) ) + <val1> ) :	. for <name4> in range ( <val2> , int ( math . sqrt ( <name6> ) ) + <val1> ) :
( <name2> 、 <name6> ) の組が <name5> に含まれるとき、	if ( <name2> , <name6> ) in <name5> :	for <name5> in ( <name2> , <name6> ) in <name5> :
( 、つまり未定値 ) からなる列の <name1> の <name2> 回分の列を <name4> とする	<name4> = [ None ] * <name1> . <name2>	<name4> = [ None ] * <name1> . <name2>
<name1> を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name1>	( <name3> [ <name1> ] = <name1> )
<name1> の <val2> 番目が <val5> と等しいとき、 <blk> <name1> の先頭、 <name6> を出力する </blk>	if <name1> [ <val2> ] == <val5> : <blk> print ( <name1> [ <val5> ] , <name6> ) </blk>	for if <name1> [ <val2> ] == <val5> : <blk> print ( <name1> [ 0 ] , <name6> ) </blk>
<name3> が <val5> と等しくかつ <name4> が <val5> と等しいとき、	if <name3> == <val5> and <name4> == <val5> :	or <name3> == <val5> and <name4> == <val5> :
<name4> が <name6> の <name2> 番目と等しいとき、	if <name4> == <name6> [ <name2> ] :	list if <name4> == <name6> [ <name2> ] :
<name4> から <name5> を引いた値が <name6> 以下のとき、	if <name4> - <name5> <= <name6> :	or <name4> - <name5> <= <name6> :
<name2> の -2 番目から <name2> の末尾を引いた値を <name2> の -2 番目にする	<name2> [ - 2 ] = <name2> [ - 2 ] - <name2> [ - 1 ]	( <name2> [ - 2 ] = <name2> [ - 2 ] - <name2> [ - 1 ] )
<name3> . <name1> ( ) を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name3> . <name1> ( )	<name2> , <name5> , <name4> = <name3> . <name1> ( )
<name3> の <name5> を <name1> とする	<name1> = <name3> . <name5>	<name1> = <name3> . <name5>
o を出力する	print ( 'o' )	'?' print ( 'ON' )
<name5> が <name2> の最大値より小さいとき、	if <name5> < max ( <name2> ) :	: if <name5> < max ( <name2> ) :
<name3> ( <name4> [ <val5> ] , <name4> [ <val1> ] ) を <name6> の <name4> にする	<name6> . <name4> = <name3> ( <name4> [ <val5> ] , <name4> [ <val1> ] )	<name6> . <name4> = <name3> ( <name4> [ <val5> ] , <name4> [ <val1> ] )
<name1> の、つまり先頭から -2 番目までの部分列を <name3> とする	<name3> = <name1> [ : - 2 ]	<name2> = <name1> [ : - 2 ]
<name3> . <name1> ( ( <name3> . <name4> [ <val5> * <name6> ] , <name3> . <name4> [ <val5> * <name6> + <val2> ] ) ) を <name3> の <name4> の <name6> 番目にする	<name3> . <name4> [ <name6> ] = <name3> . <name1> ( ( <name3> . <name4> [ <val5> * <name6> ] , <name3> . <name4> [ <val5> * <name6> + <val2> ] ) )	<name3> . <name4> [ <name6> ] = <name3> . <name1> ( ( <name3> . <name4> [ <val5> * <name6> ] , <name3> . <name4> [ <val5> * <name6> + <val2> ] ) )
<name6> から <name5> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name6> , <name5> ) :	. for <name1> in range ( <name6> , <name5> ) :
<name3> の末尾に ( <name5> 、 <name2> ) の組を追加する	<name3> . append ( ( <name5> , <name2> ) )	<name4> . append ( ( <name5> , <name2> ) )
<name1> の <name4> から <val6> を引いた値番目の <name3> から <val6> を引いた値番目、 <name1> の <name4> から <val6> を引いた値番目の <name3> 番目、 <name1> の <name4> 番目の <name3> から <val6> を引いた値番目の最小値に <val6> を加えた値を <name1> の <name4> 番目の <name3> 番目にする	<name1> [ <name4> ] [ <name3> ] = min ( <name1> [ <name4> - <val6> ] [ <name3> - <val6> ] , <name1> [ <name4> - <val6> ] [ <name3> ] , <name1> [ <name4> ] [ <name3> - <val6> ] ) + <val6>	<name1> [ <name4> ] [ <name3> ] = min ( <name1> [ <name4> - <val6> ] [ <name3> - <val6> ] , <name1> [ <name4> - <val6> ] [ <name3> ] , <name1> [ <name4> ] [ <name3> - <val6> ] ) + <val6>
<name5> の末尾に ( <name4> に <name2> の <name6> 番目を加えた値、 <name1> に <name3> の <name6> 番目を加えた値 ) からなる列を追加する	<name5> . append ( [ <name4> + <name2> [ <name6> ] , <name1> + <name3> [ <name6> ] ] )	<name1> . append ( [ <name4> + <name2> [ <name6> ] , <name1> + <name3> [ <name6> ] ] )
<name5> の先頭から <name5> の <name2> の <name4> 番目を探して見つかった位置を <name1> とする	<name1> = <name5> . find ( <name5> . <name2> [ <name4> ] )	<name1> = <name5> . find ( <name5> . <name2> [ <name4> ] )
<val1> の順序数を <name3> とする	<name3> = ord ( <val1> )	<name3> = ord ( <val1> )
<name3> の <name1> 番目が <name3> の <name6> 番目に <name5> を加えた値より大きいとき、	if <name3> [ <name1> ] > <name3> [ <name6> ] + <name5> :	while <name3> [ <name1> ] > <name3> [ <name6> ] + <name5> :
( ( <name3> 、 <val1> 、 <name5> 、 <name4> 、 <name2> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name3> , <val1> , <name5> , <name4> , <name2> ) ]	<name6> = [ ( <name3> , <val1> , <name5> , <name4> , <name2> ) ]
<name6> 、 <name1> 、 <name3> を出力する	print ( <name6> , <name1> , <name3> )	print ( <name6> , <name1> , <name3> )
<name2> ( <name6> , <name5> - <name4> ) を <name1> とする	<name1> = <name2> ( <name6> , <name5> - <name4> )	<name1> = <name2> ( <name6> , <name5> - <name4> )
<name6> . <name4> ( <name3> , ( <val5> , <name1> , -1 , <val5> ) )	<name6> . <name4> ( <name3> , ( <val5> , <name1> , - 1 , <val5> ) )	<name4> . <name4> ( <name3> , ( <val5> , <name1> , - 1 , <val5> ) )
<name3> を順に <name2> 、 <name1> として、繰り返す	for <name2> , <name1> in <name3> :	. for <name2> , <name1> in <name3> :
改行せずに <val3> を書式として <name4> で整形した文字列を出力する	print ( <val3> . format ( <name4> ) , end = '' )	end = <val3> . format ( <name4> ) , end = '' )
<name6> の長さを <name2> とする	<name2> = len ( <name6> )	dict = len ( <name6> )
<name1> の <name3> 番目、 <name4> の <name3> 番目を出力する	print ( <name1> [ <name3> ] , <name4> [ <name3> ] )	print ( <name1> [ <name3> ] , <name4> [ <name3> ] )
<name3> から <name2> を引いた値が <val5> より小さい間、次を繰り返す	while <name3> - <name2> < <val5> :	del ( <name3> - <name2> < <val5> ) :
<val1> を <name5> の先頭の <val3> 番目にする	<name5> [ <val3> ] [ <val3> ] = <val1>	( <name5> [ <val1> ] [ <val3> ] = <val1> )
改行せずに <name1> の <name5> 番目を出力する	print ( <name1> [ <name5> ] , end = '' )	print ( <name1> [ <name5> ] , end = '' )
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開してを出力する	print ( * sorted ( map ( int , <name3> ( ) . split ( ) ) ) )	print ( * sorted ( map ( int , <name3> ( ) . split ( ) ) ) )
<name5> 、 <name6> に <val3> を加えた値において正規表現 <name2> が最初にマッチする位置の最小値を <name5> とする	<name5> = min ( <name5> , search ( <name2> , <name6> + <val3> ) )	<name5> = min ( <name5> , search ( <name2> , <name6> + <val3> ) )
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = map ( int , <name3> . readline ( ) . split ( ) )	<name4> = map ( int , <name3> . readline ( ) . split ( ) )
<name2> から <name1> を引いた値に <name5> を掛けた値から <name4> から <name6> を引いた値に <name3> を掛けた値を引いた値を <name3> とする	<name3> = ( <name2> - <name1> ) * <name5> - ( <name4> - <name6> ) * <name3>	\ <name3> = ( <name2> - <name1> ) * <name5> - ( <name4> - <name6> ) * <name3>
0 から <name4> から <val1> を引いた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> - <val1> ) :	) for <name5> ) in range ( <name4> - <val1> ) :
<name3> から <val6> を引いた値から -1 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> - <val6> , - <val6> , - <val6> ) :	) for <name1> in range ( <name3> - <val6> , - <val6> , - <val6> ) :
( <val6> 、 <val4> 、 <val3> 、 <val1> 、 <val2> 、 <val5> 、 <val6> 、 <val4> 、 <val3> ) の組を <name5> とする	<name5> = ( <val6> , <val4> , <val3> , <val1> , <val2> , <val5> , <val6> , <val4> , <val3> )	<name5> = ( <val6> , <val4> , <val3> , <val1> , <val2> , <val5> , <val6> , <val4> , <val3> )
<name6> が <name1> と等しいとき、 <blk> <val5> を返す </blk>	if <name6> == <name1> : <blk> return <val5> </blk>	for if <name6> == <name1> : <blk> return <val5> </blk>
0 から <name5> 未満までの数列の各要素を <name1> とし、 <name6> の <name4> の列を <name2> とする	<name2> = [ <name6> . <name4> for <name1> in range ( <name5> ) ]	<name6> = [ <name6> . <name4> for <name1> in range ( <name5> ) ]
<name1> から <name2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> , <name2> ) :	) : for <name5> in range ( <name1> , <name2> ) :
<name2> 、 <name4> 、 <name5> 、 <name3> の日付を <name1> とする	<name1> = <name2> . date ( <name4> , <name5> , <name3> )	<name1> = <name2> . date ( <name4> , <name5> , <name3> )
<name5> から <name3> の長さを引いた値を出力する	print ( <name5> - len ( <name3> ) )	<name2> = <name5> - len ( <name3> ) )
<name5> と <name2> の最大公約数を <name6> とする	<name6> = math . gcd ( <name5> , <name2> )	<name6> = gcd ( <name5> , <name2> )
<name4> が <name1> より小さいかどうかが <name6> より小さいとき、	if <name4> < <name1> < <name6> :	while <name4> < <name1> < <name6> :
<name6> を <name3> に <name5> を掛けた値に <name1> を加えた値だけ増加させる	<name6> += <name3> * <name5> + <name1>	<name5> += <name6> += <name3> * <name5> + <name1>
<name4> ( <name1> . <name2> + <name6> . <name2> , <name1> . <name5> + <name6> . <name5> ) を返す	return <name4> ( <name1> . <name2> + <name6> . <name2> , <name1> . <name5> + <name6> . <name5> )	return <name4> ( <name1> . <name2> + <name6> . <name2> , <name1> . <name5> + <name6> . <name5> )
<name1> をパラメータとして <name1> の先頭を返す関数を <name5> として <name3> をソートする	<name3> . sort ( <name5> = lambda <name1> : <name1> [ 0 ] )	<name3> . sort ( <name5> = lambda <name1> : <name1> [ 0 ] )
<name2> が <val4> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <val4> : <blk> break </blk>	list ( <name2> == <val4> ) : <blk> break </blk>
( ( <name5> の <name3> の先頭、 <name5> の <name3> の <val1> 番目 ) からなる列、 <name5> の <name3> の <val2> 番目 ) の組が <name5> の <name6> に含まれないとき、	if ( ( [ <name5> . <name3> [ 0 ] , <name5> . <name3> [ <val1> ] ] , <name5> . <name3> [ <val2> ] ) ) not in <name5> . <name6> :	for <name5> , <name6> in [ ( <name5> . <name3> [ 0 ] , <name5> . <name3> [ <val1> ] ] , <name5> . <name3> [ <val2> ] ) not in <name5> . <name6> :
<name5> ( <name2> , <name3> , <name4> ) を <name6> とする	<name6> = <name5> ( <name2> , <name3> , <name4> )	<name6> = <name5> ( <name2> , <name3> , <name4> )
<name2> を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name2>	( <name5> [ <name1> ] = <name2> )
( <name6> ) からなる列を <name2> とする	<name2> = [ <name6> ]	<name2> = [ <name6> ]
<name6> の順序数を <name1> とする	<name1> = ord ( <name6> )	<name1> = ord ( <name6> )
os . <name6> の <name4> 番目を <name5> だけ増加させる	<name6> [ <name4> ] += <name5>	( <name6> [ <name4> ] += <name5> )
<name1> に <val2> を掛けた値が <name5> の先頭の <val2> 乗に <name5> の <val6> 番目の <val2> 乗を加えた値の <val3> 乗より大きいとき、 <blk> <val4> を出力する </blk>	if <name1> * <val2> > ( <name5> [ 0 ] ** <val2> + <name5> [ <val6> ] ** <val2> ) ** <val3> : <blk> print ( <val4> ) </blk>	if <name1> * <val2> > ( <name5> [ 0 ] ** <val2> + <name5> [ <val6> ] ** <val2> ) ** <val3> : <blk> print ( <val4> ) </blk>
<val5> を <name3> の <name6> 番目の <name2> 番目にする	<name3> [ <name6> ] [ <name2> ] = <val5>	<name4> [ <name6> ] [ <name2> ] = <val5>
( <val5> ) からなる列の <name2> の <name6> に <val3> を掛けた値から、つまり末尾までの <name6> 間隔による部分列の長さ回分の列を <name2> の <name6> に <val3> を掛けた値から、つまり末尾までの <name6> 間隔による部分列にする	<name2> [ <name6> * <val3> : : <name6> ] = [ <val5> ] * len ( <name2> [ <name6> * <val3> : : <name6> ] )	<name2> [ <name6> * <val3> : : <name6> ] = [ <val5> ] * len ( <name2> [ <name6> * <val3> : : <name6> ] )
<name6> から <name2> を引いた値を返す	return <name6> - <name2>	yield <name6> - <name2>
<name2> . <name1> ( <name3> , <name4> + <val6> , <val5> , <val5> , <name2> . <name2> ) を返す	return <name2> . <name1> ( <name3> , <name4> + <val6> , <val5> , <val5> , <name2> . <name2> )	yield <name2> . <name1> ( <name3> , <name4> + <val6> , <val5> , <val5> , <name2> . <name2> )
<name1> の <name3> 番目の <name3> 番目を <name1> の <name2> 番目の <name3> 番目だけ増加させる	<name1> [ <name3> ] [ <name3> ] += <name1> [ <name2> ] [ <name3> ]	<name2> [ <name3> ] [ <name3> ] += <name1> [ <name2> ] [ <name3> ]
<name2> の総和、 <val3> の最小値を <name5> とする	<name5> = min ( sum ( <name2> ) , <val3> )	) <name5> = min ( sum ( <name2> ) , <val3> )
-1 を <name2> とする <val4> を <name6> を <name3> とするとするを <name1> とする	<name2> = - 1 <name1> = <name3> = <name6> = <val4>	( <name2> = - 1 ) <name3> = <name6> = <val4> = <name1> = <val4>
<name5> に <name3> に <val1> を掛けた値に <val4> を加えた値、 <name2> に <val4> を加えた値、 <name6> 、 <name5> 、 <name3> 、 <name1> を追加した集まり	<name5> . add ( <name3> * <val1> + <val4> , <name2> + <val4> , <name6> , <name5> , <name3> , <name1> )	<name1> . add ( <name3> * <val1> + <val4> , <name2> + <val4> , <name6> , <name5> , <name3> , <name1> )
<name2> を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = <name2>	( <name3> , <name5> = <name2> )
-1 <name6> を <name2> とする	<name2> = - 1 <name6>	<name6> <name2> = - 1 <name6>
<name3> ( <name1> , <name5> ( <name1> ) -1 )	<name3> ( <name1> , <name5> ( <name1> ) - 1 )	<name3> ( <name1> , <name5> ( <name1> ) - 1 )
<name5> の <name1> と <name5> の <name2> の論理積が <name5> の <name3> と等しくないかどうかを返す	return <name5> . <name1> & <name5> . <name2> != <name5> . <name3>	x return <name5> . <name1> & <name5> . <name2> != <name5> . <name3>
<name3> の <name4> 番目の <name1> の <val5> 番目番目の <val6> 番目を <name2> だけ増加させる	<name3> [ <name4> ] [ <name1> [ <val5> ] ] [ <val6> ] += <name2>	( <name3> [ <name4> ] [ <name1> [ <val5> ] ] [ <val6> ] += <name2> )
<name3> のとき <name6> ( <name3> . <name1> ) に <val5> を加えた値に <name3> の <name2> の文字列を加えた値に <name6> ( <name3> . <name4> ) を加えた値、そうでなければ <val6> を返す	return <name6> ( <name3> . <name1> ) + <val5> + str ( <name3> . <name2> ) + <name6> ( <name3> . <name4> ) if <name3> else <val6>	x return <name6> ( <name3> . <name1> ) + <val5> + str ( <name3> . <name2> ) + <name6> ( <name3> . <name4> ) if <name3> else <val6>
<name3> の <name1> 、 <name6> の <name1> を <name6> の <name1> 、 <name3> の <name1> とする	<name6> . <name1> , <name3> . <name1> = <name3> . <name1> , <name6> . <name1>	<name4> . <name6> . <name1> , <name3> . <name1> = <name3> . <name1> , <name6> . <name1>
<name6> に <name1> を掛けた値、 <name6> に <val2> を掛けた値に <name1> に <val2> を掛けた値を加えた値を出力する	print ( <name6> * <name1> , ( <name6> * <val2> + <name1> * <val2> ) )	end = <name6> * <name1> , <name6> * <val2> + <name1> * <val2> )
<name2> が、つまり未定値と等しいとき、	if ( <name2> is not None ) :	while <name2> is not None :
<val1> が <name2> 以下かどうかが <val6> より小さくかつ <val1> が <name5> 以下かどうかが <val6> より小さいとき、 <blk> <name3> の <name5> 番目の <name2> 番目を <val4> だけ増加させる </blk>	if <val1> <= <name2> < <val6> and <val1> <= <name5> < <val6> : <blk> <name3> [ <name5> ] [ <name2> ] += <val4> </blk>	> if <val1> <= <name2> < <val6> and <val1> <= <name5> < <val6> : <blk> <name3> [ <name5> ] [ <name2> ] += <val4> </blk>
<name1> ( <name5> [ <name6> ] ) を <name2> とするを <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name2> = <name1> ( <name5> [ <name6> ] )	[ <name5> . <name6> ] = <name2> = <name1> ( <name5> [ <name6> ] )
<name2> を <val1> で割った商を <name4> とする	<name4> = <name2> // <val1>	<name4> = <name2> // <val1>
M に <name3> から <val6> を引いた値に <val4> を加えた値の文字列を加えた値を <name1> とする	<name1> = 'M' + str ( <name3> - <val6> + <val4> )	<name1> = <val2> + str ( <name3> - <val6> + <val4> )
<name1> の <name4> を <name3> の <name6> の <name5> にする	<name3> . <name6> . <name5> = <name1> . <name4>	<name4> . <name6> . <name5> = <name1> . <name4>
( 、つまり真、 <name2> 、 <name6> ) の組を返す	return ( True , <name2> , <name6> )	yield ( True , <name2> , <name6> )
<name6> の <name3> の <name4> 番目が <name2> と等しくなくかつ <name6> の <name3> の <name4> 番目が -1 と等しくないとき、	if <name6> [ <name3> . <name4> ] != <name2> and <name6> [ <name3> . <name4> ] != - 1 :	!= <name6> . <name3> [ <name4> ] != <name2> and <name6> . <name3> [ <name4> ] != - 1 :
<name2> が <name4> の部分集合のとき <val5> 、そうでなければ <val6> を出力する	print ( <val5> if <name2> . issubset ( <name4> ) else <val6> )	print ( <val5> if <name2> . issubset ( <name4> ) else <val6> )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name2> 、 <name4> 、 <name3> 、 <name5> 、 <name1> 、 <name6> 、 <name2> とする	<name6> , <name2> , <name4> , <name3> , <name5> , <name1> , <name6> , <name2> = map ( float , input ( ) . split ( ) )	<name2> , <name4> , <name3> , <name5> , <name1> , <name6> , <name2> = map ( float , input ( ) . split ( ) )
<name6> の逆順を展開しての要素をそれぞれ組にした列のリストを <name6> とする	<name6> = list ( zip ( * <name6> [ : : - 1 ] ) )	set = list ( zip ( * <name6> [ : : - 1 ] ) )
<val2> から <name5> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 <val2> の列を <name6> とする	<name6> = [ <val2> for <name4> in range ( <name5> + <val3> ) ]	<name6> = [ <val2> for <name4> in range ( <name5> + <val3> ) ]
<name2> から <val6> を引いた値から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> - <val6> , - <val6> , - <val6> ) :	) for <name4> in range ( <name2> - <val6> , - <val6> , - <val6> ) :
<name6> ( <name4> ) に <name1> を掛けた値を出力する	print ( <name6> ( <name4> ) * <name1> )	print ( <name6> ( <name4> ) * <name1> )
<name4> を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in <name4> :	. for <name6> , <name5> in <name4> :
<name4> かつ <name6> が <name3> より小さいとき、	if <name4> and <name6> < <name3> :	isinstance ( <name4> and <name6> < <name3> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name6> 、 <name2> 、 <name3> 、 <name1> 、 <name5> 、 <name4> とする	<name5> , <name4> , <name6> , <name2> , <name3> , <name1> , <name5> , <name4> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name2> , <name3> , <name1> , <name5> , <name4> = map ( int , input ( ) . split ( ) )
<name6> の <name3> の <val1> 番目から、つまり末尾までの部分列に [ MASK ] を挿入する	<name6> . insert ( <name3> [ <val1> : ] )	<name6> . insert ( <name3> [ <val1> : ] )
<name5> の <name1> 番目を <val3> だけ減少させる	<name5> [ <name1> ] -= <val3>	<name1> [ <name1> ] -= <val3>
<name6> に番号付した組の列の各要素を <name3> 、 <name2> とし、 <name2> が <name5> の先頭と等しいときの <name3> の列を順に <name4> として、繰り返す	for <name4> in [ <name3> for <name3> , <name2> in enumerate ( <name6> ) if <name2> == <name5> [ 0 ] ] :	( for <name4> in [ <name3> for <name3> , <name2> in enumerate ( <name6> ) if <name2> == <name5> [ 0 ] ] :
<name1> の <name4> 番目の <val3> 番目が <name1> の <name4> に <val3> を加えた値番目の <val3> 番目と等しくかつ <name1> の <name4> 番目の <val2> 番目が <name1> の <name4> に <val3> を加えた値番目の <val2> 番目より大きいとき、	if <name1> [ <name4> ] [ <val3> ] == <name1> [ <name4> + <val3> ] [ <val3> ] and <name1> [ <name4> ] [ <val2> ] > <name1> [ <name4> + <val3> ] [ <val2> ] :	> <name1> [ <name4> ] [ <val3> ] == <name1> [ <name4> + <val3> ] [ <val3> ] and <name1> [ <name4> ] [ <val2> ] > <name1> [ <name4> + <val3> ] [ <val2> ] :
<name2> を深くコピーした結果を <name1> とする	<name1> = copy . deepcopy ( <name2> )	<name1> = copy . deepcopy ( <name2> )
<name6> ( <name3> , ( <val1> , <name2> ) )	<name6> ( <name3> , ( <val1> , <name2> ) )	<name6> ( <name3> , ( <val1> , <name2> ) )
<name2> . <name3> ( <name6> ) を順に <name4> として、繰り返す	for <name4> in <name2> . <name3> ( <name6> ) :	. for <name4> in <name2> . <name3> ( <name6> ) :
<val1> から <val3> の <name5> 乗未満までの数列の各要素を <name4> とし、 <val1> の列を <name2> とする	<name2> = [ <val1> for <name4> in range ( <val3> ** <name5> ) ]	<name6> = [ <val1> for <name4> in range ( <val3> ** <name5> ) ]
<name1> の <name2> から <name3> の <name2> を引いた値の絶対値を <name6> とする	<name6> = abs ( <name1> . <name2> - <name3> . <name2> )	else = abs ( <name1> . <name2> - <name3> . <name2> )
<name2> から <name1> を引いた値のとき、	if <name2> - <name1> :	list ( <name2> - <name1> ) :
入力された文字列の各要素を <name6> とし、 <name6> の整数値の列を <name3> とする	<name3> = [ int ( <name6> ) for <name6> in input ( ) ]	<name3> = [ int ( <name6> ) for <name6> in input ( ) ]
( <name6> ) からなる列を <name5> の <name2> 番目にする	<name5> [ <name2> ] = [ <name6> ]	( <name5> [ <name2> ] = [ <name6> ] )
入力された文字列の両端から空白改行を取り除いた文字列を <val5> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を <name2> とする	<name2> = [ int ( <name4> ) for <name4> in input ( ) . strip ( ) . split ( <val5> ) ]	<name2> = [ int ( <name4> ) for <name4> in input ( ) . strip ( ) . split ( <val5> ) ]
( <val1> ) からなる列の <name6> 回分の列を順に <name4> として、繰り返す <blk> 入力された文字列 </blk>	for <name4> in [ <val1> ] * <name6> : <blk> input ( ) </blk>	for <name4> in [ <val1> ] * <name6> : <blk> input ( ) </blk>
<val4> を <name2> の <name1> から <val4> を引いた値番目の <name5> から <val4> を引いた値番目にする	<name2> [ <name1> - <val4> ] [ <name5> - <val4> ] = <val4>	<name4> [ <name1> - <val4> ] [ <name5> - <val4> ] = <val4>
<name4> の <name6> から <name1> を引いた値番目の <name1> 番目に <name4> の <name6> から <val2> を引いた値番目の <name1> から <val2> を引いた値番目を加えた値を <name3> で割った余りを <name4> の <name6> 番目の <name1> 番目にする	<name4> [ <name6> ] [ <name1> ] = ( <name4> [ <name6> - <name1> ] [ <name1> ] + <name4> [ <name6> - <val2> ] [ <name1> - <val2> ] ) % <name3>	<name5> [ <name6> ] [ <name1> ] = ( <name4> [ <name6> - <name1> ] [ <name1> ] + <name4> [ <name6> - <val2> ] [ <name1> - <val2> ] ) % <name3>
<name5> の x 座標から <name1> の x 座標を引いた値の絶対値が <name6> の <name3> より小さくかつ <name5> の y 座標から <name1> の y 座標を引いた値の絶対値が <name6> の <name3> より小さいとき、	if fabs ( <name5> . x - <name1> . x ) < <name6> . <name3> and fabs ( <name5> . y - <name1> . y ) < <name6> . <name3> :	for <name6> . x in fabs ( <name5> . x - <name1> . x ) < <name6> . <name3> and fabs ( <name5> . y ) < <name6> . <name3> :
<name5> の <name1> 番目を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = <name5> [ <name1> ]	<name6> , <name2> , <name3> = <name5> [ <name1> ]
<name1> ( <name4> [ <name2> [ <val3> ] ] )	<name1> ( <name4> [ <name2> [ <val3> ] ] )	<name1> ( <name4> [ <name2> [ <val3> ] ] )
<name2> の長さから <val3> を引いた値を出力する	print ( len ( <name2> ) - <val3> )	print ( len ( <name2> ) - <val3> )
<name2> と <name1> の論理和を <name2> とする	<name2> = <name2> | <name1>	( <name2> = <name2> | <name1> )
<name5> の <val6> 番目を <val3> だけ増加させる	<name5> [ <val6> ] += <val3>	<name2> [ <val6> ] += <val3>
<val4> から <name1> の <name2> の先頭の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name1> . <name2> [ <val4> ] ) ) :	for <name5> in range ( len ( <name1> . <name2> [ <val4> ] ) ) :
<name1> の末尾に ( -1 ) からなる列の <name2> に <val4> を加えた値回分の列を追加する	<name1> . append ( [ - 1 ] * ( <name2> + <val4> ) )	<name1> . append ( [ - <val4> ] * ( <name2> + <val4> ) )
<name4> . <name6> ( <name3> -1 , <name2> -1 , <name5> , <name1> )	<name4> . <name6> ( <name3> - 1 , <name2> - 1 , <name5> , <name1> )	( <name4> . <name6> ( <name3> - 1 , <name2> - 1 , <name5> , <name1> ) )
<name6> の <name3> の <name5> 番目の末尾に <name4> を追加する	<name6> . <name3> [ <name5> ] . append ( <name4> )	<name4> . <name3> [ <name5> ] . append ( <name4> )
<name4> 、 <name5> の <name2> 番目の最小値を <name4> とする	<name4> = min ( <name4> , <name5> [ <name2> ] )	<name4> = min ( <name4> , <name5> [ <name2> ] )
<name6> ( <name4> . <name1> ) を返す	return <name6> ( <name4> . <name1> )	yield <name6> ( <name4> . <name1> )
<name1> 、 <name5> の各要素に <name3> を適用した列を <name1> の、つまり先頭から、つまり末尾までの部分列にする	<name1> [ : ] = map ( <name3> , <name1> , <name5> )	( <name1> [ : ] = map ( <name3> , <name1> , <name5> )
<val4> を書式として <name6> で整形した文字列を出力する	print ( <val4> . format ( <name6> ) )	print ( <val4> . format ( <name6> ) )
<name3> の <name6> 番目が <val2> と等しいとき、	if <name3> [ <name6> ] == <val2> :	: if <name3> [ <name6> ] == <val2> :
<val5> を <name2> の <name1> の <val4> に <name6> を加えた値番目から <val5> を引いた値番目にする	<name2> [ <name1> [ <val4> + <name6> ] - <val5> ] = <val5>	<name4> [ <name1> [ <val4> + <name6> ] - <val5> ] = <val5>
<name2> が <val4> 以上かつ <name6> が <name3> の <name1> 番目に <name3> の <name2> 番目を加えた値より小さい間、次を繰り返す	while <name2> >= <val4> and <name6> < <name3> [ <name1> ] + <name3> [ <name2> ] :	for <name6> in <name2> >= <val4> and <name6> < <name3> [ <name1> ] + <name3> [ <name2> ] :
<name6> の <name3> 番目の <val2> 番目を <val4> だけ増加させる	<name6> [ <name3> ] [ <val2> ] += <val4>	<name3> [ <name3> ] [ <val2> ] += <val4>
<name1> と <name5> の最大公約数を <name3> とする	<name3> = gcd ( <name1> , <name5> )	<name3> = gcd ( <name1> , <name5> )
<val4> から <name5> から <name6> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val4> , <name5> - <name6> ) :	. for <name3> in range ( <val4> , <name5> - <name6> ) :
<name5> の <name3> 番目が <val4> と等しいとき、 <blk> <name2> の末尾に <name5> の <name3> 番目を追加する </blk>	if <name5> [ <name3> ] == <val4> : <blk> <name2> . append ( <name5> [ <name3> ] ) </blk>	\ if <name5> [ <name3> ] == <val4> : <blk> <name2> . append ( <name5> [ <name3> ] ) </blk>
<name1> が <name4> の <name6> 番目の <val2> 番目以下かどうかが <name5> 以下のとき、	if <name1> <= <name4> [ <name6> ] [ <val2> ] <= <name5> :	if <name1> <= <name4> [ <name6> ] [ <val2> ] <= <name5> :
真を <name6> の <name4> 番目の <name2> 番目にする	<name6> [ <name4> ] [ <name2> ] = True	( <name6> [ <name4> ] [ <name2> ] = True )
<name4> の <name1> に <val6> を加えた値番目を <val6> だけ増加させる	<name4> [ <name1> + <val6> ] += <val6>	<name2> <name4> [ <name1> + <val6> ] += <val6>
<val6> を <name4> の <name1> から <val6> を引いた値番目の <name2> の <name5> に <val3> を加えた値番目から <val6> を引いた値番目にする	<name4> [ <name1> - <val6> ] [ <name2> [ <name5> + <val3> ] - <val6> ] = <val6>	<name4> [ <name1> - <val6> ] [ <name2> [ <name5> + <val3> ] - <val6> ] = <val6>
<name5> かつ <name2> が <name5> の末尾の先頭以下の間、次を繰り返す	while <name5> and <name2> <= <name5> [ - 1 ] [ 0 ] :	del <name5> and <name2> <= <name5> [ - 1 ] [ 0 ] :
<name3> の <val6> を取り出した値を <name1> とする	<name1> = <name3> . pop ( <val6> )	<name1> = <name3> . pop ( <val6> )
<name4> の <name3> 番目の <name1> 番目を <name4> の <name6> 番目の <name5> 番目を <name2> で割った商だけ増加させる	<name4> [ <name3> ] [ <name1> ] += <name4> [ <name6> ] [ <name5> ] // <name2>	( <name4> [ <name3> ] [ <name1> ] += <name4> [ <name6> ] [ <name5> ] // <name2> )
<name6> の <name3> が <val5> より大きいかどうかが <name2> の <name1> の <name6> の <name4> 番目より大きいとき、	if <name6> . <name3> > <val5> > <name2> . <name1> [ <name6> . <name4> ] :	isinstance ( <name6> . <name3> > <val5> > <name2> . <name1> [ <name6> . <name4> ] ) :
<name6> の <name3> 番目、 <name1> の最大値を <name6> の <name3> 番目にする	<name6> [ <name3> ] = max ( <name6> [ <name3> ] , <name1> )	else [ <name3> ] = max ( <name6> [ <name3> ] , <name1> )
<val4> を <name1> の <name6> にする	<name1> . <name6> = <val4>	not <name1> . <name6> = <val4>
<name2> の <val6> 番目から <val3> 番目までの部分列を <name5> とする	<name5> = <name2> [ <val6> : <val3> ]	<name5> = <name2> [ <val6> : <val3> ]
<name5> ( <name3> , <name1> , <name6> )	<name5> ( <name3> , <name1> , <name6> )	( <name5> ( <name3> , <name1> , <name6> ) )
<name2> に <name5> を加えた値を <val4> で割った余りを <name1> の <val6> 番目にする	<name1> [ <val6> ] = ( <name2> + <name5> ) % <val4>	dict [ <name1> [ <val6> ] = ( <name2> + <name5> ) % <val4>
入力された文字列を空白で分割した字句列の各要素に <name4> をパラメータとして <name4> の浮動小数点数を返す関数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name6> とする	<name2> , <name5> , <name6> = map ( lambda <name4> : float ( <name4> ) , input ( ) . split ( ) )	<name4> , <name6> = map ( lambda <name4> : float ( <name4> ) , input ( ) . split ( ) )
( <val5> ) からなる列の <name4> に <val6> を加えた値回分の列を <name3> とする	<name3> = [ <val5> ] * ( <name4> + <val6> )	<name3> = [ <val5> ] * ( <name4> + <val6> )
0 から <name3> 未満までの数列の各要素を <name6> とし、 <val5> を <name6> だけ左シフトした値の列を <name1> とする	<name1> = [ <val5> << <name6> for <name6> in range ( <name3> ) ]	<name6> = [ <val5> << <name6> for <name6> in range ( <name3> ) ]
<name3> の先頭を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name3> [ 0 ]	( <name4> , <name1> = <name3> [ 0 ] )
0 から <val2> を <name4> だけ左シフトした値未満までの数列の各要素を <name3> とし、 0 から <name4> 未満までの数列の各要素を <name3> とし、 -1 の列の列を <name6> とする	<name6> = [ [ - <val2> for <name3> in range ( <name4> ) ] for <name3> in range ( <val2> << <name4> ) ]	<name4> = [ [ - 1 for <name3> in range ( <name4> ) ] for <name3> in range ( <val2> << <name4> ) ]
<name2> の <name4> から <val6> を引いた値番目の <name5> 番目に <name2> の <name4> 番目の <name5> から <val6> を引いた値番目を加えた値を <name2> の <name4> 番目の <name5> 番目にする	<name2> [ <name4> ] [ <name5> ] = <name2> [ <name4> - <val6> ] [ <name5> ] + <name2> [ <name4> ] [ <name5> - <val6> ]	( <name2> [ <name4> ] [ <name5> ] = <name2> [ <name4> - <val6> ] [ <name5> ] + <name2> [ <name4> ] [ <name5> - <val6> ] )
<name1> の先頭を <name3> とする	<name3> = <name1> [ 0 ]	<name3> = <name1> [ 0 ]
<name5> を <val3> で割った余りが <val1> と等しいとき、	if <name5> % <val3> == <val1> :	list ( <name5> % <val3> == <val1> :
<name3> を展開し、それぞれ <name4> 、 <name5> 、 <name2> 、 <name1> とする	<name4> , <name5> , <name2> , <name1> = <name3>	<name1> , <name5> , <name2> , <name1> = <name3>
<name2> を <name6> で割った商に <val5> を加えた値を <name4> とする	<name4> = <name2> // <name6> + <val5>	<name4> = <name2> // <name6> + <val5>
<name2> の先頭、 <name2> の <val1> 番目を <name6> 、 <name5> とする	<name6> , <name5> = <name2> [ 0 ] , <name2> [ <val1> ]	<name6> , <name5> = <name2> [ 0 ] , <name2> [ <val1> ]
<name5> の <val3> 番目が <val3> と等しくかつ <name5> の <val2> 番目が <val3> と等しくかつ <name5> の <val6> 番目が <val3> と等しくかつ <name5> の <val1> 番目が <val3> と等しいとき、	if <name5> [ <val3> ] == <val3> and <name5> [ <val2> ] == <val3> and <name5> [ <val6> ] == <val3> and <name5> [ <val1> ] == <val3> :	if <name5> [ <val3> ] == <val3> and <name5> [ <val2> ] == <val3> and <name5> [ <val6> ] == <val3> and <name5> [ <val1> ] == <val3> :
\\\ n を間に入れて ( <name2> 、 <name3> ) からなる列の各要素に整数を適用した列を連結した文字列を出力する\	\ print ( '\\n' . join ( map ( str , [ <name2> , <name3> ] ) ) ) \	print ( '\\n' . join ( map ( str , [ <name2> , <name3> ] ) ) ) \
<name2> に <name1> を掛けた値に <name4> の <name6> 番目を加えた値と <name3> の論理積を <name2> とする	<name2> = ( <name2> * <name1> + <name4> [ <name6> ] ) & <name3>	input = ( <name2> * <name1> + <name4> [ <name6> ] ) & <name3>
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり無限大の列を <name5> とする	<name5> = [ inf for <name6> in range ( <name3> ) ]	<name5> = [ inf for <name6> in range ( <name3> ) ]
<name2> ( <name6> , <name4> , <name3> ) を <name1> とする	<name1> = <name2> ( <name6> , <name4> , <name3> )	<name1> = <name2> ( <name6> , <name4> , <name3> )
- <name6> ( ) を返す	return - <name6> ( )	yield - <name6> ( )
<name3> ( <name6> , <name2> ) を <name5> とする	<name5> = <name3> ( <name6> , <name2> )	else = <name3> ( <name6> , <name2> )
<name5> と <val4> の論理積かつ <name3> の -2 番目が <name6> と等しくないとき、 <blk> <name3> を ( <name6> ) からなる列に ( <val4> ) からなる列を加えた値だけ増加させる </blk>	if <name5> & <val4> and <name3> [ - 2 ] != <name6> : <blk> <name3> += [ <name6> ] + [ <val4> ] </blk>	if ( <name5> & <val4> and <name3> [ - <val4> ] != <name6> ) : <blk> <name3> += [ <name6> ] + [ <val4> ] </blk>
<name5> 、 <name5> の <name2> 番目を出力する	print ( 'C' , <name5> [ <name2> ] )	print ( <name5> , <name5> [ <name2> ] )
<name1> 、 <name3> の最小値を返す	return min ( <name1> , <name3> )	self return min ( <name1> , <name3> )
<name4> から <val2> を引いた値から <val6> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> - <val2> , <val6> , - <val2> ) :	. for <name1> in range ( <name4> - <val2> , <val6> , - <val2> ) :
<name4> の <name2> 番目を <val6> だけ増加させる	<name4> [ <name2> ] += <val6>	( <name4> [ <name2> ] += <val6> )
<name6> を <val3> に <name2> を掛けた値に <val5> を加えた値で割った商を <name6> とする	<name6> = <name6> // ( <val3> * <name2> + <val5> )	<name6> = <name6> // ( <val3> * <name2> + <val5> )
<name3> の <name4> に対応する値、もし存在しなければ <val2> を <name1> とする	<name1> = <name3> . <name4> . get ( <val2> )	<name1> = <name3> . <name4> . get ( <val2> )
<name3> の各要素を <name4> とし、 <name2> の列の各要素を <name3> とし、 <name4> の列の最大値を出力する	print ( max ( [ <name4> for <name3> in [ <name2> for <name4> in <name3> ] ] ) )	print ( max ( [ <name4> for <name3> in [ <name2> for <name4> in <name3> ] ] ) )
<val1> から <name5> の <val6> を <val1> で割った値乗の整数値に <val6> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , int ( <name5> ** ( <val6> / <val1> ) ) + <val6> ) :	. for <name2> in range ( <val1> , int ( <name5> ** ( <val6> / <val1> ) ) + <val6> ) :
<name1> の先頭を <val6> で割った商が <name5> より小さいかどうかが <name4> の先頭を <val6> で割った商以下のとき、	if <name1> [ 0 ] // <val6> < <name5> <= <name4> [ 0 ] // <val6> :	gcd ( <name1> [ 0 ] // <val6> < <name5> <= <name4> [ 0 ] // <val6> ) :
<name5> が <name1> の値の集まりに含まれなくまたは <name2> が <name1> の値の集まりに含まれないとき、	if <name5> not in <name1> . values or <name2> not in <name1> . values :	while <name5> not in <name1> . values or <name2> not in <name1> . values :
<name2> の、つまり先頭から <name6> に <val5> を加えた値までの部分列に <name2> の <name6> に <val5> を加えた値から、つまり末尾までの部分列を反転した列のリストを加えた値を <name2> とする	<name2> = <name2> [ : <name6> + <val5> ] + list ( reversed ( <name2> [ <name6> + <val5> : ] ) )	<name2> = <name2> [ : <name6> + <val5> ] + list ( reversed ( <name2> [ <name6> + <val5> : ] ) )
<name1> が <val3> より小さくかつ <name5> が <val3> より小さくかつ <name4> が <val3> より小さいとき、	if <name1> < <val3> and <name5> < <val3> and <name4> < <val3> :	and ( <name1> < <val3> and <name5> < <val3> and <name4> < <val3> ) :
改行せずに <val3> を書式として <name1> の <name4> を <val2> で割った商から <val5> を引いた値番目で整形した文字列を出力する	print ( <val3> . format ( <name1> [ <name4> // <val2> - <val5> ] ) , end = '' )	[ <val3> . format ( <name1> [ <name4> // <val2> - <val5> ] ) , end = '' )
( <name2> ) からなる列を <name5> の <name4> 番目にする	<name5> [ <name4> ] = [ <name2> ]	( <name5> [ <name4> ] = [ <name2> ] )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , input ( ) . split ( <val2> ) )	<name5> , <name3> = map ( int , input ( ) . split ( <val2> ) )
<name5> ( <name6> [ <val3> ] ) が <val1> 以上の間、次を繰り返す	while <name5> ( <name6> [ <val3> ] ) >= <val1> :	del <name5> ( <name6> [ <val3> ] ) >= <val1> :
<name3> の、つまり先頭から <name5> に <val2> を加えた値までの部分列、 <name3> の <val2> 番目から <name5> に <val6> を加えた値までの部分列の要素をそれぞれ組にした列を <name1> とする	<name1> = zip ( <name3> [ 0 : <name5> + <val2> ] , <name3> [ <val2> : <name5> + <val6> ] )	<name1> = zip ( <name3> [ 0 : <name5> + <val2> ] , <name3> [ <val2> : <name5> + <val6> ] )
<name2> の <name4> 番目を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name2> [ <name4> ]	<name4> [ <name1> . <name6> ] = <name2> [ <name4> ]
<val2> の <name1> 乗、 <val2> の <name1> から <val4> を引いた値乗を <name5> 、 <name3> とする	<name5> , <name3> = <val2> ** <name1> , <val2> ** ( <name1> - <val4> )	<name2> , <name3> = <val2> ** <name1> , <val2> ** ( <name1> - <val4> )
<name1> . <name6> ( <name5> . <name4> ) を返す	return <name1> . <name6> ( <name5> . <name4> )	self return <name1> . <name6> ( <name5> . <name4> )
<name5> が <val4> と等しいかどうかを返す	return <name5> == <val4>	yield <name5> == <val4>
<name4> のとき <val3> 、そうでなければ <val2> を返す	return <val3> if <name4> else <val2>	def <name4> else = <val3> if <name4> else <val2>
<name1> の <name5> 番目が <name4> と等しいとき、	if <name1> [ <name5> ] == <name4> :	continue <name1> [ <name5> ] == <name4> :
<name5> の <val6> 乗から <name4> から <name1> を引いた値の絶対値の <val6> 乗を引いた値の <val2> 乗を <name3> とする	<name3> = ( <name5> ** <val6> - abs ( <name4> - <name1> ) ** <val6> ) ** <val2>	<name3> = ( <name5> ** <val6> - abs ( <name4> - <name1> ) ** <val6> ) ** <val2>
<name3> の x 座標に <name2> の y 座標を掛けた値から <name3> の y 座標に <name2> の x 座標を掛けた値を引いた値が <val4> と等しいとき、	if <name3> . x * <name2> . y - <name3> . y * <name2> . x == <val4> :	> ( <name3> . x * <name2> . y - <name3> . y * <name2> . x ) == <val4> :
<name4> の <name6> の <name3> 番目を <name3> とする	<name3> = <name4> . <name6> [ <name3> ]	<name3> = <name4> . <name6> [ <name3> ]
<val2> から <name3> の <val1> 乗の整数値に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , int ( <name3> ** <val1> ) + <val6> ) :	. for <name5> in range ( <val2> , int ( <name3> ** <val1> ) + <val6> ) :
<name4> ( <name2> ) または <name4> ( <name6> ) かつ <name3> が <val5> 以下のとき、	if ( <name4> ( <name2> ) or <name4> ( <name6> ) ) and <name3> <= <val5> :	or ( <name4> ( <name2> ) or <name4> ( <name6> ) and <name3> <= <val5> ) :
未定値を <name3> の <name4> の <name5> にする	<name3> . <name4> . <name5> = None	( <name3> . <name4> . <name5> = None )
<name3> ( <name5> , <name6> , <name2> [ <name1> ] )	<name3> ( <name5> , <name6> , <name2> [ <name1> ] )	<name3> ( <name5> , <name6> , <name2> [ <name1> ] )
<val4> が <name3> 以下かどうかが <name1> より小さくかつ <val4> が <name2> 以下かどうかが <name6> より小さくかつ <name5> の <name2> 番目の <name3> 番目が、つまり未定値と等しいとき、	if <val4> <= <name3> < <name1> and <val4> <= <name2> < <name6> and <name5> [ <name2> ] [ <name3> ] == None :	re if <val4> <= <name3> < <name1> and <val4> <= <name2> < <name6> and <name5> [ <name2> ] [ <name3> ] == None :
( ( <val2> 、 -1 ) からなる列、 ( -1 、 <val2> ) からなる列、 ( <val2> 、 <val6> ) からなる列、 ( <val6> 、 <val2> ) からなる列 ) からなる列を <name5> とする	<name5> = [ [ <val2> , - <val6> ] , [ - <val6> , <val2> ] , [ <val2> , <val6> ] , [ <val6> , <val2> ] ]	<name5> = [ [ <val2> , - <val2> ] , [ - <val2> , <val2> ] , [ <val2> , <val6> ] , [ <val6> , <val2> ] ]
<name6> の <name5> に [ MASK ] を書き込むを <name3> とする	<name3> = <name6> . <name5> . <name3>	<name6> . <name3> = <name6> . <name5> . <name3>
<val1> を <name2> の <name4> 番目の <name5> 番目にする	<name2> [ <name4> ] [ <name5> ] = <val1>	( <name2> [ <name4> ] [ <name5> ] = <val1> )
<name4> を英大文字に変換した文字列が <name5> に含まれるとき、	if <name4> . upper ( ) in <name5> :	isinstance ( <name4> . upper ( ) ) in <name5> :
<name1> の整数値から <name2> を引いた値、 <val4> の最大値を <name6> とする	<name6> = max ( int ( <name1> ) - <name2> , <val4> )	else = max ( int ( <name1> ) - <name2> , <val4> )
<name4> の末尾に ( <name3> から <val1> を引いた値、 <name6> ) からなる列を追加する	<name4> . append ( [ <name3> - <val1> , <name6> ] )	<name4> . append ( [ <name3> - <val1> , <name6> ] )
<name1> . <name2> ( <name1> . <name4> [ <name3> ] ) を <name1> の <name4> の <name3> 番目にする	<name1> . <name4> [ <name3> ] = <name1> . <name2> ( <name1> . <name4> [ <name3> ] )	<name1> . <name4> [ <name3> ] = <name1> . <name2> ( <name1> . <name4> [ <name3> ] )
<name1> の <name6> 番目の <name3> 番目が ( <name5> 、 <name4> ) の組と等しいとき、	if <name1> [ <name6> ] [ <name3> ] == ( <name5> , <name4> ) :	while <name1> [ <name6> ] [ <name3> ] == ( <name5> , <name4> ) :
0 から <name1> を <val5> で割った商未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> // <val5> ) :	for <name2> in range ( <name1> // <val5> ) :
<name6> の <name4> の <name6> の <name4> の <name1> 番目番目を <name6> の <name4> の <name1> 番目にする	<name6> . <name4> [ <name1> ] = <name6> . <name4> [ <name6> . <name4> [ <name1> ] ]	( <name6> . <name4> [ <name1> ] = <name6> . <name4> [ <name6> . <name4> [ <name1> ] ] )
入力された文字列を <val4> で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val4> ) ]	<name2> , <name5> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val4> ) ]
<name1> の <name2> 番目を順に <name4> 、 <name5> 、 <name6> として、繰り返す	for <name4> , <name5> , <name6> in <name1> [ <name2> ] :	. for <name4> , <name5> , <name6> in <name1> [ <name2> ] :
<name2> . <name1> ( <name5> [ <name3> ] )	<name2> . <name1> ( <name5> [ <name3> ] )	set ( <name2> . <name1> ( <name5> [ <name3> ] ) )
<name1> の <name2> から <val3> を引いた値番目の <val4> 番目を <val6> だけ増加させる	<name1> [ <name2> - <val3> ] [ <val4> ] += <val6>	[ <name1> [ <name2> - <val3> ] [ <val4> ] += <val6>
<name1> ( <name5> , <name2> , <name4> -1 )	<name1> ( <name5> , <name2> , <name4> - 1 )	<name1> ( <name5> , <name2> , <name4> - 1 )
( <name2> ( <name3> , <name1> , <name5> ) 、 <name6> に <val4> を加えた値 ) の組を返す	return ( <name2> ( <name3> , <name1> , <name5> ) , <name6> + <val4> )	yield ( <name2> ( <name3> , <name1> , <name5> ) , <name6> + <val4> )
0 から <name4> 未満までの数列の各要素を <name5> とし、 <name2> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , <name2> ( ) . split ( ) ) ) for <name5> in range ( <name4> ) ]	<name1> = [ list ( map ( int , <name2> ( ) . split ( ) ) ) for <name5> in range ( <name4> ) ]
<name6> が <val5> と等しくないとき、 <blk> <name2> の末尾に <name6> を追加する </blk>	if <name6> != <val5> : <blk> <name2> . append ( <name6> ) </blk>	for <name6> in <val5> : <blk> <name2> . append ( <name6> ) </blk>
<name4> に <name6> を加えた値を <val1> で割った余りが <val2> と等しいとき、	if ( <name4> + <name6> ) % <val1> == <val2> :	[ ( <name4> + <name6> ) % <val1> == <val2> :
<val2> を書式として <name5> の <name3> で整形した文字列を <name3> とする	<name3> = <val2> . format ( <name5> . <name3> )	else = <val2> . format ( <name5> . <name3> )
<name5> の <val2> 番目が <name1> 以下のとき、	if <name5> [ <val2> ] <= <name1> :	list if <name5> [ <val2> ] <= <name1> :
<name4> の <name5> 番目が <name6> の <name3> と等しくないとき、	if <name4> [ <name5> ] != <name6> . <name3> :	!= <name4> [ <name5> ] != <name6> . <name3> :
<name4> ( <name5> ( <name2> , <name6> ) , <name5> ( <name2> , <name3> ) ) が <val1> 以上のとき、	if <name4> ( <name5> ( <name2> , <name6> ) , <name5> ( <name2> , <name3> ) ) >= <val1> :	isinstance ( <name4> ( <name5> ( <name2> , <name6> ) , <name5> ( <name2> , <name3> ) ) >= <val1> :
<name6> の <name1> 番目から <name6> の <name1> - <name3> 番目を引いた値から <name6> [ <name2> + <name3> ] から <name6> [ <name2> ] を引いた値に <name4> の <name5> - <name3> 番目を掛けた値を引いた値を <name6> で割った余りが <val1> と等しいとき、	if ( ( <name6> [ <name1> ] - <name6> [ <name1> - <name3> ] ) - ( <name6> [ <name2> + <name3> ] - <name6> [ <name2> ] ) * <name4> [ <name5> - <name3> ] ) % <name6> == <val1> :	for <name6> [ <name1> ] - ( <name6> [ <name1> - <name3> ] ) - ( <name6> [ <name2> + <name3> ] - <name6> [ <name2> ] ) * <name4> [ <name5> - <name3> ] ) % <name6> == <val1> :
<name3> に <name4> を掛けた値から <name6> に <name2> を掛けた値を引いた値の <val5> 乗に <name2> に <name1> を掛けた値から <name4> に <name3> を掛けた値を引いた値の <val5> 乗を加えた値に <name3> に <name6> を掛けた値から <name1> に <name3> を掛けた値を引いた値の <val5> 乗を加えた値を返す	return ( <name3> * <name4> - <name6> * <name2> ) ** <val5> + ( <name2> * <name1> - <name4> * <name3> ) ** <val5> + ( <name3> * <name6> - <name1> * <name3> ) ** <val5>	from return ( <name3> * <name4> - <name6> * <name2> ) ** <val5> + ( <name2> * <name1> - <name4> * <name3> ) ** <val5> + ( <name3> * <name6> - <name1> * <name3> ) ** <val5>
( 、つまり無限大 ) からなる列の <name6> に <val3> を加えた値回分の列を <name1> とする	<name1> = [ inf ] * ( <name6> + <val3> )	<name1> = [ inf ] * ( <name6> + <val3> )
<name3> の <name6> 番目が、つまり真と等しくないとき、	if <name3> [ <name6> ] is True :	for <name3> [ <name6> ] == True :
<name4> の <name6> 番目に <val3> を加えた値が <name4> の <name2> 番目より小さいとき、	if <name4> [ <name6> ] + <val3> < <name4> [ <name2> ] :	for <name4> [ <name6> ] + <val3> < <name4> [ <name2> ] :
( <val5> ) からなる列の <name6> 回分の列を <name1> とする ( <val5> ) からなる列の <name6> 回分の列を <name2> とする	<name1> = [ <val5> ] * <name6> <name2> = [ <val5> ] * <name6>	else = [ <val5> ] * <name6> <name2> = [ <val5> ] * <name6>
<name4> の <name6> 番目の <name2> 番目の <name3> 番目が <name1> より小さいとき、	if <name4> [ <name6> ] [ <name2> ] [ <name3> ] < <name1> :	list ( <name4> [ <name6> ] [ <name2> ] [ <name3> ] < <name1> ) :
<name6> を <name5> で割った余りにする	<name6> % = <name5>	<name1> % = <name6> % = <name5>
<name1> 内の <name1> の先頭の出現回数が <val3> と等しいとき、	if <name1> . count ( <name1> [ 0 ] ) == <val3> :	for <name1> . count ( <name1> [ 0 ] ) == <val3> :
<name1> を <val3> で割った商を <name2> とする <name1> を <val3> で割った余りにする	<name2> = <name1> // <val3> <name1> % = <val3>	<name2> = <name1> // <val3> <name1> % = <val3>
<name3> の <val2> 番目から <name4> の先頭を引いた値に <name1> の <val5> 番目から <name4> の <val5> 番目を引いた値を掛けた値から <name3> の <val5> 番目から <name4> の <val5> 番目を引いた値に <name1> の <val2> 番目から <name4> の先頭を引いた値を掛けた値を引いた値を返す	return ( <name3> [ <val2> ] - <name4> [ <val2> ] ) * ( <name1> [ <val5> ] - <name4> [ <val5> ] ) - ( <name3> [ <val5> ] - <name4> [ <val5> ] ) * ( <name1> [ <val2> ] - <name4> [ <val2> ] )	return ( <name3> [ <val2> ] - <name4> [ <val2> ] ) * ( <name1> [ <val5> ] - <name4> [ <val5> ] ) - ( <name3> [ <val5> ] - <name4> [ <val5> ] ) * ( <name1> [ <val2> ] - <name4> [ <val2> ] )
<val2> に <name3> を掛けた値を出力する	print ( <val2> * <name3> )	print ( <val2> * <name3> )
<name5> の <val4> 番目が <name3> より大きくかつ <name5> の <val6> 番目が <name1> より小さいとき、	if <name5> [ <val4> ] > <name3> and <name5> [ <val6> ] < <name1> :	continue <name5> [ <val4> ] > <name3> and <name5> [ <val6> ] < <name1> :
<name3> の <name6> 番目が <val1> と等しいとき、	if <name3> [ <name6> ] == <val1> :	for <name3> [ <name6> ] == <val1> :
<name1> が <name4> に含まれるとき、	if <name1> in <name4> :	if <name1> in <name4> :
<name3> の <val5> 番目に <name1> のとき <name1> の <val6> 番目、そうでなければ <val2> を加えた値に <name4> のとき <name4> の <val6> 番目、そうでなければ <val2> を加えた値を <name3> の <val6> 番目にする	<name3> [ <val6> ] = <name3> [ <val5> ] + ( <name1> [ <val6> ] if <name1> else <val2> ) + ( <name4> [ <val6> ] if <name4> else <val2> )	<name5> [ <val6> ] = <name3> [ <val5> ] + ( <name1> [ <val6> ] if <name1> else <val2> ) + ( <name4> [ <val6> ] if <name4> else <val2> )
<name4> と <name5> を割ったときの ( 商を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = divmod ( <name4> , <name5> )	<name3> , <name1> = divmod ( <name4> , <name5> )
<name4> の <val6> 番目を <name5> だけ増加させる	<name4> [ <val6> ] += <name5>	<name5> [ <val6> ] += <name5>
<name4> ( <name3> , <name5> )	<name4> ( <name3> , <name5> )	<name2> <name4> ( <name3> , <name5> )
<name2> ( <name5> , ( <name1> . <name4> [ <name3> ] , <name3> ) )	<name2> ( <name5> , ( <name1> . <name4> [ <name3> ] , <name3> ) )	<name2> ( <name5> , ( <name1> . <name4> [ <name3> ] , <name3> ) )
<name2> の <name3> 番目の末尾に <name5> を追加する	<name2> [ <name3> ] . append ( <name5> )	<name4> [ <name3> ] . append ( <name5> )
( ( <val6> 、 -1 、 <val6> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <val6> , - 1 , <val6> ) ]	<name5> = [ ( <val6> , - <val6> , <val6> ) ]
<name5> の <name3> に <name6> を加えた値番目、 <name5> の <name3> 番目に <name2> を加えた値の最大値を <name5> の <name3> に <name6> を加えた値番目にする	<name5> [ <name3> + <name6> ] = max ( <name5> [ <name3> + <name6> ] , <name5> [ <name3> ] + <name2> )	<name2> [ <name3> + <name6> ] = max ( <name5> [ <name3> + <name6> ] , <name5> [ <name3> ] + <name2> )
入力された文字列の整数値、入力された文字列の整数値、入力された文字列の整数値を <name6> 、 <name3> 、 <name5> とする	<name6> , <name3> , <name5> = int ( input ( ) ) , int ( input ( ) ) , int ( input ( ) )	<name2> , <name3> , <name5> = int ( input ( ) ) , int ( input ( ) ) , int ( input ( ) )
<name3> の <val5> 番目を <name2> の <name3> の <val6> 番目番目にソート順で挿入する	bisect . insort_left ( <name2> [ <name3> [ <val6> ] ] , <name3> [ <val5> ] )	insort ( <name2> [ <name3> [ <val6> ] ] , <name3> [ <val5> ] )
<name2> の <name5> 番目が <name1> の <name3> 番目以下のとき、	if <name2> [ <name5> ] <= <name1> [ <name3> ] :	list if <name2> [ <name5> ] <= <name1> [ <name3> ] :
<name3> の <name6> 番目の <name4> を <val2> で割った商に <val5> を加えた値番目を <val1> との論理和にする	<name3> [ <name6> ] [ <name4> // <val2> + <val5> ] | = <val1>	<name4> [ <name6> ] [ <name4> // <val2> + <val5> ] | = <val1>
<name4> の <name1> 番目の <name6> 番目が <name3> と等しくまたは <name5> が <name2> の <name6> 番目より小さいとき、	if <name4> [ <name1> ] [ <name6> ] == <name3> or <name5> < <name2> [ <name6> ] :	list ( <name4> [ <name1> ] [ <name6> ] == <name3> or <name5> < <name2> [ <name6> ] ) :
( <name3> の <val6> 番目、 <name3> の <val1> 番目、 <name3> の先頭、 <name3> の <val2> 番目 ) からなる列を <name4> とする	<name4> = [ <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ 0 ] , <name3> [ <val2> ] ]	<name6> = [ <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ 0 ] , <name3> [ <val2> ] ]
<name2> を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in <name2> :	. for <name1> , <name5> in <name2> :
<name3> に <name1> を掛けた値から <name6> に <name4> を掛けた値を引いた値を <name5> とする <name5> に <name4> を掛けた値から <name3> に <name1> を掛けた値を引いた値を <name2> とする	<name5> = <name3> * <name1> - <name6> * <name4> <name2> = <name5> * <name4> - <name3> * <name1>	else = ( <name3> * <name1> - <name6> * <name4> ) <name2> = ( <name5> * <name4> - <name3> * <name1> )
<name5> が <name1> より小さい間、次を繰り返す	while <name5> < <name1> :	del ( <name5> < <name1> ) :
<name4> の <name3> に <val1> を掛けた値に <val2> を加えた値番目を <name6> とする	<name6> = <name4> [ <name3> * <val1> + <val2> ]	<name6> = <name4> [ <name3> * <val1> + <val2> ]
<name1> の <name4> 番目が <name1> の <name6> 番目より大きいとき、	if <name1> [ <name4> ] > <name1> [ <name6> ] :	continue <name1> [ <name4> ] > <name1> [ <name6> ] :
<name3> の先頭の整数値、 <name3> の <val1> 番目の整数値を <name4> 、 <name6> とする	<name4> , <name6> = int ( <name3> [ 0 ] ) , int ( <name3> [ <val1> ] )	<name4> , <name6> = int ( <name3> [ 0 ] ) , int ( <name3> [ <val1> ] )
<name1> の <name4> の x 座標から <name1> の <name5> の x 座標を引いた値に <name2> の <name5> の y 座標から <name1> の <name4> の y 座標を引いた値を掛けた値に <name1> の <name4> の y 座標から <name1> の <name5> の y 座標を引いた値に <name1> の <name4> の x 座標から <name2> の <name5> の x 座標を引いた値を掛けた値を加えた値を <name3> とする	<name3> = ( <name1> . <name4> . x - <name1> . <name5> . x ) * ( <name2> . <name5> . y - <name1> . <name4> . y ) + ( <name1> . <name4> . y - <name1> . <name5> . y ) * ( <name1> . <name4> . x - <name2> . <name5> . x )	<name3> = ( <name1> . <name4> . x - <name1> . <name5> . x ) * ( <name2> . <name5> . <name4> . <name4> . <name5> . <name1> . <name4> . <name2> . <name5> . <name5> . <name5> . <name5> . x )
<name4> を <name6> とする <name1> を <name3> とする	<name6> = <name4> <name3> = <name1>	<name2> = <name4> <name3> = <name1>
<name5> を <name5> として <name3> のキーと値の集まりからサンプル選出した列を順に <name6> 、 <name4> として、繰り返す	for <name6> , <name4> in random . sample ( <name3> . items ( ) , <name5> = <name5> ) :	. for <name6> , <name4> in zip ( <name3> . items ( ) , <name5> = <name5> ) :
0 から <val3> 未満までの数列の各要素を <name2> とし、 <name4> から読み込んだ一行の両端から空白改行を取り除いた文字列の各要素を <name6> とし、 <name6> の整数値の列の列を <name5> とする	<name5> = [ [ int ( <name6> ) for <name6> in <name4> . readline ( ) . strip ( ) ] for <name2> in range ( <val3> ) ]	<name5> = [ [ int ( <name6> ) for <name6> in <name4> . readline ( ) . strip ( ) ] for <name2> in range ( <val3> ) ]
<name3> ( <name5> ) を展開し、それぞれ <name1> 、 <name4> 、 <name2> とする	<name1> , <name4> , <name2> = <name3> ( <name5> )	dict , <name1> , <name4> , <name2> = <name3> ( <name5> )
<name4> の先頭を除いた部分列の総和に <name6> の <val5> 番目を加えた値を <name2> とする	<name2> = sum ( <name4> [ <val5> : ] ) + <name6> [ <val5> ]	<name3> = sum ( <name4> [ 1 : ] ) + <name6> [ <val5> ]
( 、つまり偽 ) からなる列の <name1> 回分の列を <name6> とする	<name6> = [ False ] * <name1>	<name6> = [ False ] * <name1>
( 、つまり未定値 ) からなる列に ( -1 ) からなる列の <name1> 回分の列を加えた値を <name5> とする	<name5> = [ None ] + [ - 1 ] * <name1>	<name5> = [ None ] + [ - 1 ] * <name1>
<name6> の -1 番目に <name5> を掛けた値を <name6> の -1 番目にする	<name6> [ - 1 ] = <name6> [ - 1 ] * <name5>	<name2> [ - 1 ] = <name6> [ - 1 ] * <name5>
<name3> の末尾に <name5> の文字列を追加する	<name3> . append ( str ( <name5> ) )	<name1> . append ( str ( <name5> ) )
<name6> を <name2> の <name1> から <val5> を引いた値番目の <name3> から <val5> を引いた値番目にする	<name2> [ <name1> - <val5> ] [ <name3> - <val5> ] = <name6>	<name6> [ <name1> - <val5> ] [ <name3> - <val5> ] = <name6>
<name3> . <name1> ( <name5> , <name4> ) のとき、	if <name3> . <name1> ( <name5> , <name4> ) :	for <name3> . <name1> ( <name5> , <name4> ) :
<name4> が <val3> より大きい間、次を繰り返す	while ( <name4> > <val3> ) :	del <name4> > <val3> :
<name2> の <name1> 番目の <name4> が <name5> と等しいとき、	if <name2> [ <name1> ] . <name4> == <name5> :	continue [ <name1> ] . <name4> == <name5> :
<name1> から <name6> を引いた値の <val5> 乗に <name2> から <name3> を引いた値の <val5> 乗を加えた値の <val4> 乗を出力する	print ( ( ( <name1> - <name6> ) ** <val5> + ( <name2> - <name3> ) ** <val5> ) ** <val4> )	print ( ( ( <name1> - <name6> ) ** <val5> + ( <name2> - <name3> ) ** <val5> ) ** <val4> )
<val6> から <name4> の <name5> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name4> . <name5> + <val6> ) :	continue range ( <val6> , <name4> [ <name5> + <val6> ] ) :
<name3> の <name1> の <name5> 番目が <name5> と等しいとき、	if <name3> . <name1> [ <name5> ] == <name5> :	[ if <name3> . <name1> [ <name5> ] == <name5> :
無限大の <name4> 番目が -1 と等しくないとき、 <blk> <name3> の <name1> 番目の末尾に ( <name4> 、無限大の <name4> 番目 ) からなる列を追加する </blk>	if inf [ <name4> ] != - 1 : <blk> <name3> [ <name1> ] . append ( [ <name4> , inf [ <name4> ] ] ) </blk>	for <name3> if inf [ <name4> ] != - 1 : <blk> <name3> [ <name1> ] . append ( [ <name4> ] , inf [ <name4> ] ] ) </blk>
<name1> の <name6> が <name5> の <name6> より小さいかどうかを返す	return <name1> . <name6> < <name5> . <name6>	x return <name1> . <name6> < <name5> . <name6>
<name5> 、 <name4> の最大値を返す	return max ( <name5> , <name4> )	yield max ( <name5> , <name4> )
0 から <name5> の <name4> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> . <name4> ) :	. for <name1> in range ( <name5> . <name4> ) :
<name6> と <name1> の最小公倍数を <name6> とする	<name6> = lcm ( <name6> , <name1> )	<name6> = lcm ( <name6> , <name1> )
<name1> が <name6> の長さ以上のとき、	if <name1> >= len ( <name6> ) :	>= len ( <name1> >= len ( <name6> ) ) :
<val3> が <name5> 以下かどうかが <name6> 以下かどうかが <name2> より小さくなくまたは <val3> が <name1> 以下かどうかが <name4> 以下かどうかが <name3> より小さくないとき、	if not <val3> <= <name5> <= <name6> < <name2> or not <val3> <= <name1> <= <name4> < <name3> :	re . not <val3> <= <name5> < <name6> < <name2> or not <val3> <= <name1> < <name4> < <name3> :
<name2> をパラメータとして <name3> に <val4> に <name1> を掛けた値を加えた値に <name5> を加えた値に <name2> を加えた値を返す関数を <name6> とする	<name6> = lambda <name2> : <name3> + <val4> * <name1> + <name5> + <name2>	<name5> = lambda <name2> : <name3> + <val4> * <name1> + <name5> + <name2>
/ を <name5> の <name6> 番目の <name4> 番目にする	<name5> [ <name6> ] [ <name4> ] = '/'	( <name5> [ <name6> ] [ <name4> ] = '/' )
<val6> を <name5> の <name4> 番目の <name4> 番目にする	<name5> [ <name4> ] [ <name4> ] = <val6>	<name1> [ <name4> ] [ <name4> ] = <val6>
<name1> . <name6> ( <name1> . <name5> ) を返す	return <name1> . <name6> ( <name1> . <name5> )	yield <name1> . <name6> ( <name1> . <name5> )
<name6> を <val2> で割った商に <val1> を加えた値、 <name6> を <val2> で割った商を <name4> 、 <name5> とする	<name4> , <name5> = <name6> // <val2> + <val1> , <name6> // <val2>	<name2> , <name4> , <name5> = <name6> // <val2> + <val1> , <name6> // <val2>
<name6> の <name5> 番目が <name3> 以上かつ <name1> が <val2> より大きいとき、	if ( <name6> [ <name5> ] >= <name3> ) and ( <name1> > <val2> ) :	for <name6> [ <name5> ] >= <name3> and <name1> > <val2> :
( <name6> 、 <name1> 、 <name3> ) の組が <name2> に含まれないとき、	if ( <name6> , <name1> , <name3> ) not in <name2> :	list ( ( <name6> , <name1> , <name3> ) not in <name2> :
<name6> の <name1> 番目が <val3> 以上のとき、	if <name6> [ <name1> ] >= <val3> :	for <name6> [ <name1> ] >= <val3> :
<name1> を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in <name1> :	. for <name5> , <name3> in <name1> :
<name1> の <val2> 乗の整数値に <val5> を加えた値を <name4> とする	<name4> = int ( <name1> ** <val2> ) + <val5>	<name4> = int ( <name1> ** <val2> ) + <val5>
0 から <name6> から <name1> を引いた値に <val3> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> - <name1> + <val3> ) :	for <name5> in range ( <name6> - <name1> + <val3> ) :
<name5> ( <name4> , <name3> , <name2> + <val6> )	<name5> ( <name4> , <name3> , <name2> + <val6> )	<name2> ( <name4> , <name3> , <name2> + <val6> )
( <val6> ) からなる列の <name3> 回分の列を <name2> とする	<name2> = [ <val6> ] * <name3>	<name2> = [ <val6> ] * <name3>
<name6> の各要素を <name3> とし、 <name3> が <name5> と等しいときの <name3> の列の長さを出力する	print ( len ( [ <name3> for <name3> in <name6> if <name3> == <name5> ] ) )	print ( len ( [ <name3> for <name3> in <name6> if <name3> == <name5> ] ) )
( ( <val1> 、 <name2> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val1> , <name2> ) ]	else = [ ( <val1> , <name2> ) ]
<name1> を <name2> の <name6> から <val4> を引いた値番目の <name5> 番目だけ増加させる	<name1> += <name2> [ <name6> - <val4> ] [ <name5> ]	( <name1> += <name2> [ <name6> - <val4> ] [ <name5> ] )
( <name5> 、 <name4> 、 <name1> ) の組を返す	return ( <name5> , <name4> , <name1> )	yield ( <name5> , <name4> , <name1> )
<val3> を <name5> の先頭の <val3> 番目にする	<name5> [ <val3> ] [ <val3> ] = <val3>	( <name5> [ <val3> ] [ <val3> ] = <val3> )
<name6> の <name3> 番目の <name4> 番目の <name2> 番目から <val5> を引いた値を出力する	print ( <name6> [ <name3> ] [ <name4> ] [ <name2> ] - <val5> )	print ( <name6> [ <name3> ] [ <name4> ] [ <name2> ] - <val5> )
<name4> を <name3> の <name2> にする	<name3> . <name2> = <name4>	( <name3> . <name2> = <name4> )
<val3> から <name6> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <val3> から <name6> に <val2> を加えた値未満までの数列の各要素を <name5> とし、 <val3> の列の列を <name4> の <name1> にする	<name4> . <name1> = [ [ <val3> for <name5> in range ( <name6> + <val2> ) ] for <name4> in range ( <name6> + <val2> ) ]	<name4> . <name1> = [ [ <val3> for <name5> in range ( <name6> + <val2> ) ] for <name4> in range ( <name6> + <val2> ) ]
<name4> の <name1> 番目から、つまり末尾までの部分列を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <name4> [ <name1> : ]	<name2> [ <name5> ] = <name4> [ <name1> : ]
<name6> を <val5> で割った余りが <val2> より大きいとき、	if <name6> % <val5> > <val2> :	> <name6> % <val5> > <val2> :
<val2> に <val1> を掛けた値に <val5> に <val1> を掛けた値を加えた値を <name6> とする	<name6> = <val2> * <val1> + <val5> * <val1>	<name6> = <val2> * <val1> + <val5> * <val1>
<name1> ( <name3> ) を os . <name6> とする	<name6> = <name1> ( <name3> )	<name6> = <name1> ( <name3> )
<name6> の位置 <name5> の <name3> 番目から <name1> を探して見つかった位置に <val4> を加えた値を <name2> とする	<name2> = <name6> . find ( <name1> , <name5> [ <name3> ] ) + <val4>	<name2> = <name6> . find ( <name1> , <name5> [ <name3> ] ) + <val4>
<name4> の <name3> 番目の末尾に ( <name6> 、 <name1> 、 <name5> ) の組を追加する	<name4> [ <name3> ] . append ( ( <name6> , <name1> , <name5> ) )	<name3> [ <name3> ] . append ( ( <name6> , <name1> , <name5> ) )
<val1> の <val5> 乗を <name6> とする	<name6> = <val1> ** <val5>	<name6> = <val1> ** <val5>
<name1> を <name4> で割った余りを <name6> とする	<name6> = <name1> % <name4>	( <name6> = <name1> % <name4> )
<name3> が <name1> と等しいかどうかが <name6> と等しいかどうかが <val4> と等しいとき、	if <name3> == <name1> == <name6> == <val4> :	if <name3> == <name1> == <name6> == <val4> :
<name1> の整数値が <name3> の整数値と等しいとき、	if int ( <name1> ) == int ( <name3> ) :	continue int ( <name1> ) == int ( <name3> ) :
<name2> と <name3> の最小公倍数と <name6> の最小公倍数を出力する	print ( lcm ( lcm ( <name2> , <name3> ) , <name6> ) )	print ( lcm ( <name2> , <name3> ) , lcm ( <name6> ) )
<name1> の <val2> 番目から <name3> を引いた値を <name1> の <val2> 番目にする	<name1> [ <val2> ] = <name1> [ <val2> ] - <name3>	( <name1> [ <val2> ] = <name1> [ <val2> ] - <name3> )
<name4> ( <name6> , <name3> , <name2> ) が <name5> に <name1> を加えた値の <val4> 乗に <name6> を加えた値より小さいとき、	if <name4> ( <name6> , <name3> , <name2> ) < ( <name5> + <name1> ) ** <val4> + <name6> :	list ( <name4> ( <name6> , <name3> , <name2> ) < ( <name5> + <name1> ) ** <val4> + <name6> :
( <name4> 、 <name1> ) の組を <name6> の <val5> 番目にする	<name6> [ <val5> ] = ( <name4> , <name1> )	dict [ <val5> ] = ( <name4> , <name1> )
何も返さない	return	assert pass
<name3> . <name4> ( ) を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name3> . <name4> ( )	<name1> , <name2> = <name3> . <name4> ( )
( ( <val3> 、 <name5> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val3> , <name5> ) ]	<name4> = [ ( <val3> , <name5> ) ]
<name3> の末尾に ( <name1> 、 <name4> の整数値、 <name2> の整数値 ) からなる列を追加する	<name3> . append ( [ <name1> , int ( <name4> ) , int ( <name2> ) ] )	<name4> . append ( [ <name1> , int ( <name4> ) , int ( <name2> ) ] )
<name4> が正規表現 <val3> にマッチした箇所を <val1> に置き換えた文字列を <name4> とする	<name4> = re . sub ( <val3> , <val1> , <name4> )	<name4> = re . sub ( <val3> , <val1> , <name4> )
<name3> の <name4> の <val6> 番目番目の末尾に <name4> の <val1> 番目を追加する	<name3> [ <name4> [ <val6> ] ] . append ( <name4> [ <val1> ] )	<name2> [ <name4> [ <val6> ] ] . append ( <name4> [ <val1> ] )
3 C { : 02 d }を書式として <name2> を <val3> で割った余りのとき <name2> を <val3> で割った余り、そうでなければ <val3> で整形した文字列を出力する	print ( '3C{:02d}' . format ( <name2> % <val3> if <name2> % <val3> else <val3> ) )	range ( heavy' . join ( ( <name2> % <val3> ) if <name2> % <val3> else <val3> ) )
<name6> の <val4> 番目の <val4> を <val5> で割った値乗を <name6> の <val4> 番目にする	<name6> [ <val4> ] = <name6> [ <val4> ] ** ( <val4> / <val5> )	<val6> [ <val4> ] = <name6> [ <val4> ] ** ( <val4> / <val5> )
<name6> の <name4> の <name6> の <name3> 番目を <name1> とする	<name1> = <name6> . <name4> [ <name6> . <name3> ]	<name1> = <name6> . <name4> [ <name6> . <name3> ]
{ 0 } , { 1 }を書式として <name4> を展開してで整形した文字列を出力する	print ( '{0},{1}' . format ( * <name4> ) )	n print ( '{0} . format ( * <name4> ) )
OFF を <name3> とする	<name3> = 'OFF'	( <name3> = 'OFF' )
<name2> を <name6> に <name1> を掛けた値だけ増加させる	<name2> += <name6> * <name1>	<name1> += <name2> / <name6> * <name1>
<name4> を順に <name1> 、 <name3> 、 <name6> 、 <name5> として、繰り返す	for <name1> , <name3> , <name6> , <name5> in <name4> :	. for <name1> , <name3> , <name6> , <name5> in <name4> :
<name4> ( <name2> ) を <name1> の <name5> にする	<name1> . <name5> = <name4> ( <name2> )	not <name1> . <name5> = <name4> ( <name2> )
<name1> に <val2> を加えた値から <name5> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> + <val2> , <name5> ) :	. for <name3> in range ( <name1> + <val2> , <name5> ) :
<name2> の <val6> 番目を <name3> の <name4> にする	<name3> . <name4> = <name2> [ <val6> ]	<name3> . <name4> = <name2> [ <val6> ]
<name4> の <name6> の <name1> と <name4> の <name2> の排他論理和のビット長番目の末尾に ( <name1> 、 <name3> ) の組を追加する	<name4> . <name6> [ ( <name1> ^ <name4> . <name2> ) . bit_length ( ) ] . append ( ( <name1> , <name3> ) )	<name5> . <name6> [ ( <name1> ^ ( <name4> ^ <name2> ) . bit_length ( ) ] . append ( ( <name1> , <name3> ) )
( <name2> 、 <name5> ) の組を <name1> とする	<name1> = ( <name2> , <name5> )	( <name2> , <name5> ) = ( <name2> , <name5> )
<name1> の <val6> 番目を <name5> とする	<name5> = <name1> [ <val6> ]	<name5> = <name1> [ <val6> ]
<name6> の各要素を <name1> とし、 <name1> を <val2> で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , <name1> . split ( <val2> ) ) ) for <name1> in <name6> ]	<name6> = [ list ( map ( int , <name1> . split ( <val2> ) ) ) for <name1> in <name6> ]
<name1> の <name4> 番目が、つまり未定値と等しくないとき、	if <name1> [ <name4> ] is None :	for <name1> [ <name4> ] != None :
<name6> が <name4> より小さいとき、	if <name6> < <name4> :	list if <name6> < <name4> :
<name2> の先頭を <name1> とする	<name1> = <name2> [ 0 ]	( <name1> = <name2> [ 0 ] )
<name3> の <name5> が、つまり未定値と等しくなければならない	assert <name3> . <name5> is not None	find = <name3> . <name5> is not None
<name3> の先頭から <name5> を探して見つかった位置が <name3> の先頭から <name1> を探して見つかった位置と等しいかどうかを返す	return <name3> . find ( <name5> ) == <name3> . find ( <name1> )	x return <name3> . find ( <name5> ) == <name3> . find ( <name1> )
( <name6> 、 <val2> から <name4> を引いた値、 <name1> ) の組を返す	return ( <name6> , <val2> - <name4> , <name1> )	self return ( <name6> , <val2> - <name4> , <name1> )
<name6> が、つまり未定値と等しくないとき、 <blk> 何も返さない </blk>	if <name6> is None : <blk> return </blk>	if <name6> is None : <blk> return </blk>
<name6> と <name2> の最小公倍数を <name6> とする	<name6> = lcm ( <name6> , <name2> )	<name6> = lcm ( <name6> , <name2> )
<name5> の <name2> 番目の末尾に ( <name3> 、 <name6> ) の組を追加する	<name5> [ <name2> ] . append ( ( <name3> , <name6> ) )	<name3> [ <name2> ] . append ( ( <name3> , <name6> ) )
<name6> ( <name5> ) の両端から空白改行を取り除いた文字列を返す	return <name6> ( <name5> ) . strip ( )	x return <name6> ( <name5> ) . strip ( )
<name3> の <name4> 乗に対する <name5> の <name1> の剰余を返す	return pow ( <name3> , <name4> , <name5> . <name1> )	self return pow ( <name3> , <name4> , <name5> . <name1> )
<name5> 、 <name6> の最小値から <val4> を引いた値を <val1> で割った余りに <val4> を加えた値を出力する	print ( ( min ( <name5> , <name6> ) - <val4> ) % <val1> + <val4> )	print ( min ( <name5> , <name6> ) - <val4> ) % <val1> + <val4> )
<name3> を <name6> の <name4> から <val2> を引いた値番目にする	<name6> [ <name4> - <val2> ] = <name3>	<name4> [ <name4> - <val2> ] = <name3>
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name2> 、 <name3> 、 <name1> とする	<name2> , <name3> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	[ <name2> , <name3> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name4> に <name2> ( <name4> -1 ) を掛けた値を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <name4> * <name2> ( <name4> - 1 )	( <name1> [ <name4> ] = <name4> * <name2> ( <name4> - 1 ) )
0 から <val1> の <name3> から <name3> を <val1> で割った商を引いた値乗未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> ** ( <name3> - <name3> // <val1> ) ) :	for <name5> in range ( <val1> ** ( <name3> - <name3> // <val1> ) ) :
<name6> の <name5> に <val1> を加えた値番目を <name6> の <name5> 番目に <name3> を加えた値だけ増加させる	<name6> [ <name5> + <val1> ] += <name6> [ <name5> ] + <name3>	( <name6> [ <name5> + <val1> ] += <name6> [ <name5> ] + <name3> )
<val6> を ( <name5> 、 <name3> ) の組で割った余りを出力する	print ( <val6> % ( <name5> , <name3> ) )	<val1> print ( <val6> % ( <name5> , <name3> ) )
<val5> から <val2> 未満までの数列の各要素を <name3> とし、 ( ( <val5> ) からなる列の <val5> から <name4> 未満までの数列の各要素を <name1> とし、 <name4> の列回分の列 ) からなる列の列を <name6> とする	<name6> = [ [ [ <val5> ] * [ <name4> for <name1> in range ( <name4> ) ] ] for <name3> in range ( <val2> ) ]	<name6> = [ [ [ <val5> ] * [ <name4> for <name1> in range ( <name4> ) ] ] for <name3> in range ( <val2> ) ]
<name6> . <name4> ( )	<name6> . <name4> ( )	( <name6> . <name4> ( ) )
<name1> が <name4> 以下のとき、 <blk> 繰り返しを中断する </blk>	if <name1> <= <name4> : <blk> break </blk>	enumerate if <name1> <= <name4> : <blk> break </blk>
<name4> ( <name6> , <name3> , <name1> ) が <val5> より小さいとき、	if <name4> ( <name6> , <name3> , <name1> ) < <val5> :	list ( <name4> ( <name6> , <name3> , <name1> ) < <val5> :
<name6> が - <name2> より小さいとき、	if <name6> < - <name2> :	list ( <name6> < - <name2> ) :
<name6> の末尾に <val3> を書式として <name1> 、 <name2> で整形した文字列を追加する	<name6> . append ( <val3> . format ( <name1> , <name2> ) )	<name4> . append ( <val3> . format ( <name1> , <name2> ) )
<name2> の長さに <name1> の長さを加えた値を <name4> とする	<name4> = len ( <name2> ) + len ( <name1> )	<name4> = len ( <name2> ) + len ( <name1> )
<name2> に <val5> を加えた値を <val6> で割った商に <val6> を掛けた値を <name2> とする	<name2> = ( <name2> + <val5> ) // <val6> * <val6>	<name2> = ( <name2> + <val5> ) // <val6> * <val6>
( <name6> ) からなる列を <name3> とする	<name3> = [ <name6> ]	<name3> = [ <name6> ]
>' = + # = + ~$を <name6> とする	<name6> = '>' = + # = + ~$'	( <name6> = right ' + <val2> = node ' )
<name6> ( <name2> , ( <val1> , <name3> ) )	<name6> ( <name2> , ( <val1> , <name3> ) )	<name6> ( <name2> , ( <val1> , <name3> ) )
<name1> の <name4> 番目のとき、 <blk> <name5> ( <name1> [ <name4> ] ) </blk>	if <name1> [ <name4> ] : <blk> <name5> ( <name1> [ <name4> ] ) </blk>	for if <name1> [ <name4> ] : <blk> <name5> ( <name1> [ <name4> ] ) </blk>
<name2> ( <name1> . <name6> [ <val3> : ] )	<name2> ( <name1> . <name6> [ <val3> : ] )	<name2> ( <name1> . <name6> [ <val3> : ] )
<name1> の <name2> を <val5> だけ増加させる	<name1> . <name2> += <val5>	( <name1> . <name2> += <val5> )
<name1> の <val5> 番目が <name4> に含まれかつ <name4> の <name1> [ <val5> ] 番目が <val5> と等しくないとき <name4> の <name1> の先頭番目、そうでなければ <val5> を出力する	print ( <name4> [ <name1> [ <val5> ] ] if <name1> [ <val5> ] in <name4> and <name4> [ <name1> [ <val5> ] ] != <val5> else <val5> )	assert <name4> [ <name1> [ <val5> ] ] if <name1> [ <val5> ] not in <name4> and <name4> [ <name1> [ <val5> ] ] != <val5> else <val5> )
<name2> の <name4> 番目の <name6> 番目が <val3> と等しいとき、	if <name2> [ <name4> ] [ <name6> ] == <val3> :	continue <name2> [ <name4> ] [ <name6> ] == <val3> :
<val3> 、 ( <name4> ) からなる列の両端キューを <name1> 、 <name2> とする	<name1> , <name2> = <val3> , deque ( [ <name4> ] )	<name1> , <name2> = deque ( [ <name4> ] )
<name4> の <name3> かつ <name5> の <name2> が、つまり未定値と等しくないとき、	if <name4> . <name3> and <name5> . <name2> is None :	. if <name4> . <name3> and <name5> . <name2> != None :
<name1> を <name6> にソート順で最後に挿入する	bisect . insort ( <name6> , <name1> )	insort_left ( <name6> , <name1> )
<name2> の <name6> 番目を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name2> [ <name6> ]	<name4> [ <name6> ] = <name2> [ <name6> ]
<name6> の <name5> の末尾に ( <name4> 、 <name4> ) の組を追加する	<name6> . <name5> . append ( ( <name4> , <name4> ) )	<name4> . <name5> . append ( ( <name4> , <name4> ) )
<name1> を <name3> とする	<name3> = <name1>	else = <name1> ( A , k - 1 )
<name5> を <name1> の <name6> 番目にする <name5> を <name1> の <name4> 番目にする	<name1> [ <name6> ] = <name5> <name1> [ <name4> ] = <name5>	<name2> [ <name1> . <name6> ] = <name5> <name1> [ <name4> ] = <name5>
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列の各要素を <name3> とし、 <name3> から <val4> を引いた値の列を <name5> とする	<name5> = [ <name3> - <val4> for <name3> in map ( int , <name6> ( ) . split ( ) ) ]	<name5> = [ <name3> - <val4> for <name3> in map ( int , <name6> ( ) . split ( ) ) ]
<name6> ( <name1> . <name5> * <name3> , <name1> . <name4> * <name3> ) を返す	return <name6> ( <name1> . <name5> * <name3> , <name1> . <name4> * <name3> )	yield <name6> ( <name1> . <name5> * <name3> , <name1> . <name4> * <name3> )
空列を <name2> の <name6> にする	<name2> . <name6> = [ ]	<name4> . <name2> . <name6> = [ ]
0 から <name6> に <name3> を掛けた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> * <name3> ) :	) : for <name5> in range ( <name6> * <name3> ) :
<name1> の両端から空白改行を取り除いた文字列を <val6> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name5> 、 <name3> とする	<name2> , <name5> , <name3> = [ int ( <name4> ) for <name4> in <name1> . strip ( ) . split ( <val6> ) ]	<name5> , <name3> = [ int ( <name4> ) for <name4> in <name1> . strip ( ) . split ( <val6> ) ]
<name4> の <name5> に <val6> を加えた値番目の <name2> 番目を <val6> だけ増加させる	<name4> [ <name5> + <val6> ] [ <name2> ] += <val6>	[ <name4> [ <name5> + <val6> ] [ <name2> ] += <val6>
<name6> を <name3> だけ右シフトした値と <val5> の論理積のとき、	if ( <name6> >> <name3> ) & <val5> :	: if ( <name6> >> <name3> ) & <val5> :
<name3> を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name3>	( <name5> [ <name1> ] = <name3> )
<name4> に <name3> を加えた値を <val5> で割った商を <name1> とする	<name1> = ( <name4> + <name3> ) // <val5>	<name1> = ( <name4> + <name3> ) // <val5>
<name2> から <name6> を引いた値から <name4> を引いた値から <name1> を引いた値を <name3> とする	<name3> = <name2> - <name6> - <name4> - <name1>	( <name3> = <name2> - <name6> - <name4> - <name1> )
<name5> かつ <name6> が <name4> の <name1> 番目より大きいかどうかが <name2> より小さいとき、	if <name5> and <name6> > <name4> [ <name1> ] < <name2> :	while <name5> and <name6> > <name4> [ <name1> ] < <name2> :
<name5> 内の <val2> の出現回数が <val2> と等しいとき、	if <name5> . count ( <val2> ) == <val2> :	for <name5> . count ( <val2> ) == <val2> :
<name1> ( <name2> , <name3> ) を <name5> とする	<name5> = <name1> ( <name2> , <name3> )	else = <name1> ( <name2> , <name3> )
( <val3> 、 <name4> の <val3> 番目、 <name4> の <val6> 番目、 <name2> の <val3> 番目、 <name2> の <val6> 番目 ) の組を <name4> とする	<name4> = ( <val3> , <name4> [ <val3> ] , <name4> [ <val6> ] , <name2> [ <val3> ] , <name2> [ <val6> ] )	<name4> = ( <val3> , <name4> [ <val3> ] , <name4> [ <val6> ] , <name2> [ <val3> ] , <name2> [ <val6> ] )
<name1> と <name6> 、 <name4> の和集合	<name1> . union ( <name6> , <name4> )	<name1> . union ( <name6> , <name4> )
<name3> から <name6> を引いた値の絶対値と <name2> の最大公約数を <name4> とする	<name4> = gcd ( abs ( <name3> - <name6> ) , <name2> )	<name4> = gcd ( abs ( <name3> - <name6> ) , <name2> )
<name2> が <name1> 以下または <name4> が <name3> 以下のとき、 <blk> 何も返さない </blk>	if <name2> <= <name1> or <name4> <= <name3> : <blk> return </blk>	list ( <name2> <= <name1> or <name4> <= <name3> ) : <blk> return </blk>
<name6> ( <name2> / <name5> . <name4> , <name2> / <name5> . <name3> ) を返す	return <name6> ( <name2> / <name5> . <name4> , <name2> / <name5> . <name3> )	yield <name6> ( <name2> / <name5> . <name4> , <name2> / <name5> . <name3> )
<name2> ( ) . <name5> ( <name6> , <name4> )	<name2> ( ) . <name5> ( <name6> , <name4> )	<name1> . <name5> ( <name6> , <name4> )
<name2> が <val6> と等しいとき、 <blk> <val6> を <name3> だけ左シフトした値を <name5> で割った余りを出力する </blk>	if <name2> == <val6> : <blk> print ( ( <val6> << <name3> ) % <name5> ) </blk>	<blk> if <name2> == <val6> : <blk> print ( ( <val6> << <name3> ) % <name5> ) </blk>
<name5> ( <name6> , <name2> ) を出力する	print ( <name5> ( <name6> , <name2> ) )	print ( <name5> ( <name6> , <name2> ) )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , input ( ) . split ( <val2> ) ) )	<name1> = list ( map ( int , input ( ) . split ( <val2> ) ) )
- <name4> 、 <name5> を <name5> 、 <name4> とする	<name5> , <name4> = - <name4> , <name5>	<name2> , <name4> = - <name4> , <name5>
<name2> の <val3> 番目から、つまり末尾までの部分列を <name4> とする	<name4> = <name2> [ <val3> : ]	<name4> = <name2> [ <val3> : ]
<name5> 、 <name5> の <name3> 番目を出力する	print ( 'C' , <name5> [ <name3> ] )	print ( <name5> , <name5> [ <name3> ] )
<name6> に <name5> を掛けた値を <name3> で割った余りを <name6> とする	<name6> = <name6> * <name5> % <name3>	<name6> = ( <name6> * <name5> ) % <name3>
<name6> の <val2> を取り出した値を <name5> とする	<name5> = <name6> . pop ( <val2> )	else = <name6> . pop ( <val2> )
<name6> [ <name4> ] ( <name3> , <name1> ) を返す	return <name6> [ <name4> ] ( <name3> , <name1> )	assert <name6> [ <name4> ] ( <name3> , <name1> )
<name2> を <name3> の <name5> 番目だけ減少させる	<name2> -= <name3> [ <name5> ]	not <name2> -= <name3> [ <name5> ]
<name4> を <val2> との排他的論理和にする	<name4> ^ = <val2>	<name2> ^ = <name4> ^ <val2>
<name1> . <name3> ( <name1> . <name5> ( <name6> , <name4> ) ) を返す	return <name1> . <name3> ( <name1> . <name5> ( <name6> , <name4> ) )	yield <name1> . <name3> ( <name1> . <name5> ( <name6> , <name4> ) )
<name4> . <name3> と <val1> の論理積を <name6> の整数値だけ左シフトした値の論理値の整数値を出力する	print ( int ( bool ( <name4> . <name3> & <val1> << int ( <name6> ) ) ) )	<name4> . int ( int ( ( <name3> & <val1> ) << int ( <name6> ) ) )
<name1> が <name5> と等しくなくかつ <name6> が <name4> と等しくないとき、	if <name1> != <name5> and <name6> != <name4> :	if <name1> != <name5> and <name6> != <name4> :
<name3> ( <name6> , <name5> , <name1> , <name4> )	<name3> ( <name6> , <name5> , <name1> , <name4> )	min ( <name3> ( <name6> , <name5> , <name1> , <name4> ) )
<name6> ( <val4> . <name1> ( <name3> ) )	<name6> ( <val4> . <name1> ( <name3> ) )	<name6> ( <val4> . <name1> ( <name3> ) )
<name4> ( <name1> ) をそうでなければ、とする	else = <name4> ( <name1> )	else = <name4> ( <name1> )
<name3> の末尾に <name2> の <name6> 番目を英大文字に変換した文字列を追加する	<name3> . append ( <name2> [ <name6> ] . upper ( ) )	<name3> . append ( <name2> [ <name6> ] . upper ( ) )
<name6> の <name4> 番目の <name1> 番目が <name5> と等しくないとき、	if <name6> [ <name4> ] [ <name1> ] != <name5> :	raise <name6> [ <name4> ] [ <name1> ] != <name5> :
<val3> から <name5> 未満までの数列の各要素を <name2> とし、 <val3> から <name4> 未満までの数列の各要素を <name6> とし、 <val3> の列の列を <name1> とする	<name1> = [ [ <val3> for <name6> in range ( <name4> ) ] for <name2> in range ( <name5> ) ]	<name1> = [ [ <val3> for <name6> in range ( <name4> ) ] for <name2> in range ( <name5> ) ]
<name4> または <name1> ( <name6> , <name3> , <name2> ) を <name4> とする	<name4> = <name4> or <name1> ( <name6> , <name3> , <name2> )	<name2> = <name4> or <name1> ( <name6> , <name3> , <name2> )
<name2> の <name6> から <val3> を引いた値番目の <name4> 番目に <val3> を加えた値、 <name2> の <name6> 番目の <name4> から <val3> を引いた値番目に <val3> を加えた値、 <name2> の <name6> から <val3> を引いた値番目の <name4> から <val3> を引いた値番目に <name5> を加えた値の最小値を <name2> の <name6> 番目の <name4> 番目にする	<name2> [ <name6> ] [ <name4> ] = min ( <name2> [ <name6> - <val3> ] [ <name4> ] + <val3> , <name2> [ <name6> ] [ <name4> - <val3> ] + <val3> , <name2> [ <name6> - <val3> ] [ <name4> - <val3> ] + <name5> )	<name6> [ <name4> ] = min ( <name2> [ <name6> - <val3> ] [ <name4> ] + <val3> , <name2> [ <name6> ] [ <name4> - <val3> ] + <val3> , <name2> [ <name6> - <val3> ] [ <name4> - <val3> ] + <name5> )
<name5> の <name4> に <val2> を加えた値を <val1> で割った余り番目を出力する	print ( <name5> [ ( <name4> + <val2> ) % <val1> ] )	print ( <name5> [ ( <name4> + <val2> ) % <val1> ] )
<name4> ( <name1> , <name3> , <name2> , <name5> )	<name4> ( <name1> , <name3> , <name2> , <name5> )	( <name4> ( <name1> , <name3> , <name2> , <name5> ) )
<name1> が <name2> と等しいとき、	if <name1> == <name2> :	for <name1> == <name2> :
<name6> を順に <name3> 、 <name2> 、 <name5> として、繰り返す	for <name3> , <name2> , <name5> in <name6> :	. for <name3> , <name2> , <name5> in <name6> :
<name3> の ( <name4> 、 <name5> 、 <val1> ) の組番目を <name3> の ( <name4> から <val6> を引いた値、 <name5> 、 <val2> ) の組番目だけ増加させる	<name3> [ ( <name4> , <name5> , <val1> ) ] += <name3> [ ( <name4> - <val6> , <name5> , <val2> ) ]	<name1> [ ( <name4> , <name5> , <val1> ) ] += <name3> [ ( <name4> - <val6> , <name5> , <val2> ) ]
( ( <val6> ) からなる列の <val6> から <name3> 未満までの数列の各要素を <name4> とし、 <name3> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val6> ] * [ <name3> for <name4> in range ( <name3> ) ] ]	<name2> = [ [ <val6> ] * [ <name3> for <name4> in range ( <name3> ) ] ]
<name4> に <name3> を加えた値、 <name2> に <name1> を加えた値を <name6> 、 <name5> とする	<name6> , <name5> = <name4> + <name3> , <name2> + <name1>	<name6> , <name5> = <name4> + <name3> , <name2> + <name1>
<name2> ( <name3> , <name5> ) 、 <name2> ( <name6> , <name5> ) を <name1> 、 <name4> とする	<name1> , <name4> = <name2> ( <name3> , <name5> ) , <name2> ( <name6> , <name5> )	<name1> , <name4> = <name2> ( <name3> , <name5> ) , <name2> ( <name6> , <name5> )
<name3> . <name5> ( ) を返す	return <name3> . <name5> ( )	self return <name3> . <name5> ( )
<name5> に <val4> を加えた値が <name1> より小さい間、次を繰り返す	while <name5> + <val4> < <name1> :	del ( <name5> + <val4> < <name1> ) :
<name1> の先頭の先頭を <name6> とする	<name6> = <name1> [ 0 ] [ 0 ]	<name5> = <name1> [ 0 ] [ 0 ]
入力された文字列を空白で分割した字句列の先頭を除いた部分列の各要素に整数を適用した列を順に <name5> として、繰り返す	for <name5> in map ( int , input ( ) . split ( ) [ 1 : ] ) :	. for <name5> in map ( int , input ( ) . split ( ) [ 1 : ] ) :
<name1> の ( <name5> 、 <name2> 、 <name6> ) の組番目を返す	return <name1> [ ( <name5> , <name2> , <name6> ) ]	yield <name1> [ ( <name5> , <name2> , <name6> ) ]
<name5> が <name3> の <name6> 番目に含まれるとき、	if <name5> in <name3> [ <name6> ] :	for <name5> in <name3> [ <name6> ] :
( ( <name2> , <val1> ) 、 ( <name4> , <val1> ) 、 ( <name3> , <val1> ) 、 ( <name5> , <val1> ) 、 ( <name6> , <val1> ) 、 ( <name6> , <val1> ) 、 ( <val2> , <val1> ) ) からなる辞書を <name6> とする	<name6> = { <name2> : <val1> , <name4> : <val1> , <name3> : <val1> , <name5> : <val1> , <name6> : <val1> , <name6> : <val1> , <val2> : <val1> }	<name4> = { <name2> : <val1> , <name4> : <val1> , <name3> : <val1> , <name6> : <val1> , <name6> : <val1> , <val2> : <val1> }
<name5> を <name1> とするを <name6> の <val3> 番目にする	<name6> [ <val3> ] = <name1> = <name5>	<name3> [ <val3> ] = <name1> = <name5>
<name2> の <name4> 番目が <name5> より大きいとき、 <blk> <name2> の <name4> 番目を <name5> とする </blk>	if <name2> [ <name4> ] > <name5> : <blk> <name5> = <name2> [ <name4> ] </blk>	for <name5> in <name2> [ <name4> ] > <name5> : <blk> <name5> = <name2> [ <name4> ] </blk>
<name2> の <name6> 番目を <name5> とする	<name5> = <name2> [ <name6> ]	else = <name2> [ <name6> ]
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name2> とする	<name3> , <name4> , <name2> = map ( int , <name1> ( ) . split ( ) )	<name3> , <name4> , <name2> = map ( int , <name1> ( ) . split ( ) )
<name6> に <name6> を掛けた値に <name6> を加えた値に <val5> を加えた値を <val5> で割った商を出力する	print ( ( <name6> * <name6> + <name6> + <val5> ) // <val5> )	print ( ( <name6> * <name6> + <name6> + <val5> ) // <val5> )
<name6> の <name1> の <name5> 番目番目を <name4> とする	<name4> = <name6> [ <name1> [ <name5> ] ]	<name4> = <name6> [ <name1> [ <name5> ] ]
<name1> を <name4> の <name2> 番目から <name4> の <name6> 番目を引いた値に <name3> の <name6> 番目を掛けた値だけ増加させる	<name1> += ( <name4> [ <name2> ] - <name4> [ <name6> ] ) * <name3> [ <name6> ]	<name1> += ( <name4> [ <name2> ] - <name4> [ <name6> ] ) * <name3> [ <name6> ]
<name4> の <name6> が <name5> の <name3> と等しくないとき、	if <name4> . <name6> != <name5> . <name3> :	!= <name4> . <name6> != <name5> . <name3> :
<name5> に <name4> に <val3> を掛けた値に <val6> を加えた値、 <name1> に <val6> を加えた値、 <name2> 、 <name1> に <val6> を加えた値、 <name5> 、 <name4> を追加した集まり	<name5> . add ( <name4> * <val3> + <val6> , <name1> + <val6> , <name2> , <name1> + <val6> , <name5> , <name4> )	<name5> . add ( <name4> * <val3> + <val6> , <name1> + <val6> , <name2> , <name1> + <val6> , <name5> , <name4> )
( <name5> から <name4> を <name2> で割った商に <name6> を掛けた値を引いた値、 <name6> ) の組を返す	return ( <name5> - ( <name4> // <name2> ) * <name6> , <name6> )	insort ( <name5> , <name4> // <name2> * <name6> , <name6> )
<name3> を <name6> から <val5> を引いた値に <val2> を掛けた値に <val4> を加えた値だけ増加させる	<name3> += ( <name6> - <val5> ) * <val2> + <val4>	<name3> += ( <name6> - <val5> ) * <val2> + <val4>
<name5> に <name6> の <name2> 番目を加えた値を <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name5> + <name6> [ <name2> ]	( <name4> [ <name2> ] = <name5> + <name6> [ <name2> ] )
<name5> の <name2> 番目が <name2> と等しいとき、 <blk> <name2> を返す </blk>	if <name5> [ <name2> ] == <name2> : <blk> return <name2> </blk>	while <name5> [ <name2> ] == <name2> : <blk> return <name2> </blk>
真を <name5> の <name3> 番目の <name1> 番目にする	<name5> [ <name3> ] [ <name1> ] = True	( <name5> [ <name3> ] [ <name1> ] = True )
<name4> ( ) . <name6> ( <name2> . <name5> - <name1> . <name5> , <name2> . <name3> - <name1> . <name3> )	<name4> ( ) . <name6> ( <name2> . <name5> - <name1> . <name5> , <name2> . <name3> - <name1> . <name3> )	set ( <name4> ( ) . <name6> ( <name2> . <name5> - <name1> . <name5> , <name2> . <name3> - <name1> . <name3> ) )
<val5> 、 <val5> を <name6> 、 <name4> とする	<name6> , <name4> = <val5> , <val5>	( <name6> , <name4> = <val5> , <val5> )
<name6> から <name6> に <val2> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> , <name6> + <val2> ) :	continue for <name3> in range ( <name6> , <name6> + <val2> ) :
<val6> を間に入れて <name3> を連結した文字列を出力する	print ( <val6> . join ( <name3> ) )	print ( <val6> . join ( <name3> ) )
<name2> から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> , - 1 , - 1 ) :	) for <name4> in range ( <name2> , - 1 , - 1 ) :
<name3> の <name2> 番目の <name1> に <val4> を加えた値番目の <name5> 番目の <name6> から <val4> を引いた値番目に <val4> を加えた値を <name6> とする	<name6> = <name3> [ <name2> ] [ <name1> + <val4> ] [ <name5> ] [ <name6> - <val4> ] + <val4>	<name6> = <name3> [ <name2> ] [ <name1> + <val4> ] [ <name5> ] [ <name6> - <val4> ] + <val4>
( ( <name1> 、 <name5> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <name1> , <name5> ) ]	<name4> = [ ( <name1> , <name5> ) ]
<name5> を <name4> で割った余りにする	<name5> % = <name4>	<name4> = <name5> % = <name4>
<val3> を <name6> とする <name1> ( ) を <name5> とする <val3> を <name4> とする	<name6> = <val3> <name5> = <name1> ( ) <name4> = <val3>	<name2> = <val3> <name5> = <name1> ( ) <name4> = <val3>
<name3> の <name2> を <name4> の <name2> にする	<name4> . <name2> = <name3> . <name2>	<name3> . <name2> = <name3> . <name2>
<name6> の <val4> 番目から、つまり末尾までの部分列の総和を出力する	print ( sum ( <name6> [ <val4> : ] ) )	print ( sum ( <name6> [ <val4> : ] ) )
<name5> が <val6> より大きくかつ <name1> の <name4> 番目が <name1> [ <name2> ] に <name3> を加えた値に <name5> の <name2> 番目を加えた値から <name5> の <name4> 番目を引いた値より大きいとき、	if <name5> > <val6> and <name1> [ <name4> ] > <name1> [ <name2> ] + <name3> + <name5> [ <name2> ] - <name5> [ <name4> ] :	isinstance ( <name5> > <val6> and <name1> [ <name4> ] > <name1> [ <name2> ] + <name3> + <name5> [ <name2> ] - <name5> [ <name4> ] ) :
<name4> を <name2> の <name4> にする	<name2> . <name4> = <name4>	<name6> . <name2> . <name4> = <name4>
( <val5> ) からなる列の <name4> に <val1> を加えた値回分の列を <name6> とする	<name6> = [ <val5> ] * ( <name4> + <val1> )	<name6> = [ <val5> ] * ( <name4> + <val1> )
<name3> ( <name1> . <name6> - <name1> . <name2> ) を <name5> とする	<name5> = <name3> ( <name1> . <name6> - <name1> . <name2> )	<name6> = <name3> ( <name1> . <name6> - <name1> . <name2> )
<name4> ( <name1> ) に <val6> を加えた値を <name3> とする	<name3> = <name4> ( <name1> ) + <val6>	<name3> = <name4> ( <name1> ) + <val6>
( <val4> ) からなる列の <name1> 回分の列を <name3> の <name2> にする	<name3> . <name2> = [ <val4> ] * <name1>	<name3> . <name2> = [ <val4> ] * <name1>
<name5> . <name3> ( <name4> ) を展開し、それぞれ <name6> 、 <name1> 、 <name2> とする	<name6> , <name1> , <name2> = <name5> . <name3> ( <name4> )	<name3> , <name1> , <name2> = <name5> . <name3> ( <name4> )
( ( <val2> 、 -1 ) の組、 ( <val2> 、 <val2> ) の組、 ( -1 、 <val2> ) の組、 ( -1 、 -1 ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val2> , - <val2> ) , ( <val2> , <val2> ) , ( - <val2> , <val2> ) , ( - <val2> , - <val2> ) ]	<name3> = [ ( <val2> , - <val2> ) , ( <val2> , <val2> ) , ( - <val2> , <val2> ) , ( - <val2> , - <val2> ) ]
<name5> の <name1> 番目の <name3> 番目を <name2> とする	<name2> = <name5> [ <name1> ] [ <name3> ]	<name2> = <name5> [ <name1> ] [ <name3> ]
<name4> から <name5> を引いた値を <name3> とする	<name3> = ( <name4> - <name5> )	<name3> = <name4> - <name5>
入力された文字列に <val6> を加えた値を空白で分割した字句列の、つまり先頭から <val4> 番目までの部分列を展開し、それぞれ <name2> 、 <name3> 、 <name1> とする	<name2> , <name3> , <name1> = ( input ( ) + <val6> ) . split ( ) [ : <val4> ]	<name2> , <name3> , <name1> = ( input ( ) + <val6> ) . split ( ) [ : <val4> ]
<val2> を <name1> の <val3> 番目にする	<name1> [ <val3> ] = <val2>	( <name1> [ <val3> ] = <val2> )
<name3> の <name4> 番目の <name6> 番目を <val1> だけ減少させる	<name3> [ <name4> ] [ <name6> ] -= <val1>	<name1> [ <name4> ] [ <name6> ] -= <val1>
<name1> の <val3> 番目の整数値を <name5> とする	<name5> = int ( <name1> [ <val3> ] )	else = int ( <name1> [ <val3> ] )
<name4> の <name1> から <val5> を引いた値を取り出した値	<name4> . pop ( <name1> - <val5> )	<name1> . pop ( <name1> - <val5> )
<name4> の <name6> が、つまり未定値と等しくないとき、	if <name4> . <name6> is None :	for <name4> . <name6> != None :
<name3> を <name4> の <val6> を取り出した値を英大文字に変換した文字列だけ増加させる	<name3> += <name4> . pop ( <val6> ) . upper ( )	<name3> += <name4> . pop ( <val6> ) . upper ( )
<name6> 、 <name5> の絶対値を <val2> で割った値を出力する入力された文字列	print ( <name6> , abs ( <name5> ) / <val2> ) input ( )	else ( <name6> , abs ( <name5> ) / <val2> ) input ( )
<name6> の <val2> 番目から <name1> の先頭を引いた値を <name5> とする	<name5> = <name6> [ <val2> ] - <name1> [ <val2> ]	<name5> = <name6> [ <val2> ] - <name1> [ <val2> ]
( <val3> 、 <name2> の <name5> の <val4> 番目番目、 <name2> の <name5> の <val6> 番目番目、 <name5> の <val1> 番目の整数値 ) からなる列を返す	return [ <val3> , <name2> [ <name5> [ <val4> ] ] , <name2> [ <name5> [ <val6> ] ] , int ( <name5> [ <val1> ] ) ]	[ return [ <val3> ] , <name2> [ <name5> [ <val4> ] ] , <name2> [ <name5> [ <val6> ] ] , int ( <name5> [ <val1> ] ) ]
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )	<name5> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )
<name2> ( <name3> ) を ( <name4> 、 <name6> ) の組とする	( <name4> , <name6> ) = <name2> ( <name3> )	<name5> , <name4> , <name6> ) = <name2> ( <name3> )
<name6> が <name1> 以下の間、次を繰り返す	while <name6> <= <name1> :	del <name6> <= <name1> :
<val6> に <name2> + <val3> の文字列を加えた値に <val5> を加えた値に <name1> の文字列を加えた値を出力する	print ( <val6> + str ( <name2> + <val3> ) + <val5> + str ( <name1> ) )	<val6> + str ( <name2> + <val3> ) + <val5> + str ( <name1> ) )
<name6> の <name4> に <val3> を加えた値番目が <name1> 以下の間、次を繰り返す <blk> <name4> を <val3> だけ増加させる </blk>	while <name6> [ <name4> + <val3> ] <= <name1> : <blk> <name4> += <val3> </blk>	while <name6> [ <name4> + <val3> ] <= <name1> : <blk> <name4> += <val3> </blk>
( <val5> ) からなる列の <name6> に <val4> を加えた値回分の列を <name2> とする	<name2> = [ <val5> ] * ( <name6> + <val4> )	<name2> = [ <val5> ] * ( <name6> + <val4> )
<name2> を <name1> の <name4> 番目だけ減少させる	<name2> -= <name1> [ <name4> ]	not <name2> -= <name1> [ <name4> ]
<name6> から <name1> の <name5> 番目の <name3> 番目を引いた値から <name1> の <name4> 番目の <name2> 番目を引いた値に <name1> の <name5> 番目の <name2> 番目を加えた値を <name2> とする	<name2> = <name6> - <name1> [ <name5> ] [ <name3> ] - <name1> [ <name4> ] [ <name2> ] + <name1> [ <name5> ] [ <name2> ]	<name2> = <name6> - <name1> [ <name5> ] [ <name3> ] - <name1> [ <name4> ] [ <name2> ] + <name1> [ <name5> ] [ <name2> ]
<val4> が <name3> 以下でないとき、	if not <val4> <= <name3> :	if not <val4> <= <name3> :
<val2> から <name5> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , <name5> ) :	. for <name4> in range ( <val2> , <name5> ) :
( <name1> の <val6> 番目、 <name1> の <val5> 番目、 <name1> の先頭、 <name1> の <val3> 番目 ) からなる列を <name2> の <name4> にする	<name2> . <name4> = [ <name1> [ <val6> ] , <name1> [ <val5> ] , <name1> [ 0 ] , <name1> [ <val3> ] ]	<name2> . <name4> = [ <name1> [ <val6> ] , <name1> [ <val5> ] , <name1> [ 0 ] , <name1> [ <val3> ] ]
( <val1> ) からなる列の <name6> に <val3> を加えた値回分の列を <name4> とする	<name4> = [ <val1> ] * ( <name6> + <val3> )	<name4> = [ <val1> ] * ( <name6> + <val3> )
入力された文字列に <val4> を加えた値を空白で分割した字句列の、つまり先頭から <val1> 番目までの部分列を展開し、それぞれ <name6> 、 <name2> 、 <name3> とする	<name6> , <name2> , <name3> = ( input ( ) + <val4> ) . split ( ) [ : <val1> ]	<name2> , <name3> = ( input ( ) + <val4> ) . split ( ) [ : <val1> ]
<name6> に <name5> の <val4> 番目に <name1> を掛けた値を加えた値、 <name3> に <name5> の <val2> 番目に <name1> を掛けた値を加えた値を出力する	print ( <name6> + <name5> [ <val4> ] * <name1> , <name3> + <name5> [ <val2> ] * <name1> )	end = <name6> + <name5> [ <val4> ] * <name1> , <name3> + <name5> [ <val2> ] * <name1> )
<name5> ( <name2> , <name6> ) を返す	return <name5> ( <name2> , <name6> )	yield <name5> ( <name2> , <name6> )
<name5> を <name6> の <name1> 番目の <name2> 番目にする	<name6> [ <name1> ] [ <name2> ] = <name5>	<name4> [ <name1> ] [ <name2> ] = <name5>
<name5> の <name4> に [ MASK ] を書き込むを <name1> とする	<name1> = <name5> . <name4> . <name1>	<name1> = <name5> . <name4> . <name1>
<name5> . <name3> ( <name4> , <name6> ) を返す	return <name5> . <name3> ( <name4> , <name6> )	yield <name5> . <name3> ( <name4> , <name6> )
<name4> から <name4> に <val2> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> , <name4> + <val2> ) :	. for <name1> in range ( <name4> , <name4> + <val2> ) :
<name1> を順に <name4> 、 <name6> 、 <name5> 、 <name2> として、繰り返す	for <name4> , <name6> , <name5> , <name2> in <name1> :	for <name4> , <name6> , <name5> , <name2> in <name1> :
<val5> から <name1> 未満までの数列の各要素を <name4> とし、 <val5> の列を <name2> とする	<name2> = [ <val5> for <name4> in range ( <name1> ) ]	<name6> = [ <val5> for <name4> in range ( <name1> ) ]
<name2> を <name3> の <name4> の <name6> 番目にする	<name3> . <name4> [ <name6> ] = <name2>	<name4> . <name6> = <name2>
<name4> ( <name2> , <name6> ) を <name3> とする	<name3> = <name4> ( <name2> , <name6> )	<name3> = <name4> ( <name2> , <name6> )
0 から <name1> から <name4> を引いた値に <val3> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> - <name4> + <val3> ) :	range for <name5> in range ( <name1> - <name4> + <val3> ) :
<name5> が - <name6> 以上かつ <name3> が <name6> 以下のとき、	if <name5> >= - <name6> and <name3> <= <name6> :	or <name5> >= - <name6> and <name3> <= <name6> :
<name6> の <val5> 番目を <name3> だけ増加させる	<name6> [ <val5> ] += <name3>	<name3> [ <val5> ] += <name3>
<name3> の <val6> 番目を <val6> だけ増加させる	<name3> [ <val6> ] += <val6>	( <name3> [ <val6> ] += <val6> )
<name5> を <name6> で割った商を <name1> とする	<name1> = <name5> // <name6>	( <name1> = <name5> // <name6> )
<name5> の <name2> 番目に - <name6> の <name2> 番目を追加した集まり	<name5> [ <name2> ] . add ( - <name6> [ <name2> ] )	<name2> [ <name2> ] . add ( - <name6> [ <name2> ] )
<name4> の先頭が <val1> より大きい間、次を繰り返す <blk> <name3> を <val2> に <val6> を掛けた値に <val5> を加えた値だけ増加させる <sep> <name4> の先頭を <val6> だけ減少させる </blk>	while <name4> [ 0 ] > <val1> : <blk> <name3> += <val2> * <val6> + <val5> <sep> <name4> [ 0 ] -= <val6> </blk>	\ <name4> [ <val1> ] > <val1> : <blk> <name3> += <val2> * <val6> + <val5> <sep> <name4> [ 0 ] -= <val6> </blk>
<name4> 、 <name1> 、 <name4> に <name6> を加えた値、 <name1> に <name2> を加えた値を <name6> 、 <name2> 、 <name5> 、 <name3> とする	<name6> , <name2> , <name5> , <name3> = <name4> , <name1> , <name4> + <name6> , <name1> + <name2>	<name4> , <name2> , <name5> , <name3> = <name4> , <name1> , <name4> + <name6> , <name1> + <name2>
<name3> . <name5> ( <name4> , <name2> , <name3> . <name6> ) を <name1> とする	<name1> = <name3> . <name5> ( <name4> , <name2> , <name3> . <name6> )	<name1> = <name3> . <name5> ( <name4> , <name2> , <name3> . <name6> )
<name4> が <val5> と等しいかどうかに [ MASK ] を加えた値を <name2> の <name3> に <name6> を掛けた値番目にする	<name2> [ <name3> * <name6> ] = + ( <name4> == <val5> )	<name2> [ <name3> * <name6> ] = + ( <name4> == <val5> )
<name3> を <name6> の ( <name1> 、 <name2> ) の組番目にする	<name6> [ ( <name1> , <name2> ) ] = <name3>	<name3> [ ( <name1> , <name2> ) ] = <name3>
<name6> ( <val5> , <val4> )	<name6> ( <val5> , <val4> )	<name2> ( <val5> , <val4> )
<name2> の <name5> 番目が <name6> に <name4> を加えた値より大きいとき、	if <name2> [ <name5> ] > <name6> + <name4> :	continue <name2> [ <name5> ] > <name6> + <name4> :
<name1> の <name4> から <val5> を引いた値番目の <name2> に <val5> を加えた値番目に <val5> を加えた値を <name1> の <name4> から <val5> を引いた値番目の <name2> に <val5> を加えた値番目にする	<name1> [ <name4> - <val5> ] [ <name2> + <val5> ] = <name1> [ <name4> - <val5> ] [ <name2> + <val5> ] + <val5>	<name1> [ <name4> - <val5> ] [ <name2> + <val5> ] = <name1> [ <name4> - <val5> ] [ <name2> + <val5> ] + <val5>
<name1> を <name3> に <name4> を掛けた値に -1 の <name5> 乗を掛けた値だけ増加させる	<name1> += <name3> * <name4> * ( - 1 ) ** <name5>	<name2> += <name3> * <name4> * ( - 1 ) ** <name5>
<name6> ( <name5> , <name5> [ <val3> ] , <name2> )	<name6> ( <name5> , <name5> [ <val3> ] , <name2> )	<name6> ( <name5> , <name5> [ <val3> ] , <name2> )
<name2> の <val5> 番目、 <name2> の <val4> 番目、 <name2> の <val1> 番目、 <name2> の <val6> 番目を <name4> 、 <name1> 、 <name6> 、 <name3> とする	<name4> , <name1> , <name6> , <name3> = <name2> [ <val5> ] , <name2> [ <val4> ] , <name2> [ <val1> ] , <name2> [ <val6> ]	<name4> , <name1> , <name6> , <name3> = <name2> [ <val5> ] , <name2> [ <val4> ] , <name2> [ <val1> ] , <name2> [ <val6> ]
<name6> ( <name4> ) を展開し、それぞれ <name5> 、 os . <name3> とする	<name5> , <name3> = <name6> ( <name4> )	<name2> , <name5> , <name3> = <name6> ( <name4> )
<name6> 内の <name5> に <val3> を加えた値の出現回数が <val4> 以上のとき、	if <name6> . count ( <name5> + <val3> ) >= <val4> :	list ( <name6> . count ( <name5> + <val3> ) >= <val4> :
<name6> の <val4> 番目を <name3> だけ増加させる	<name6> [ <val4> ] += <name3>	<name3> [ <val4> ] += <name3>
<name3> を <name2> の長さだけ増加させる	<name3> += len ( <name2> )	<name2> += len ( <name2> )
改行せずに <val6> を出力する	print ( <val6> , end = '' )	print ( <val6> , end = <val6> )
<name1> に <val2> を加えた値が <name6> 以下のとき、	if <name1> + <val2> <= <name6> :	list ( <name1> + <val2> <= <name6> ) :
0 から <name5> に <val2> を加えた値未満までの数列の各要素を <name3> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name3> in range ( <name5> + <val2> ) ]	<name4> = [ [ ] for <name3> in range ( <name5> + <val2> ) ]
<name5> の <name1> 番目を出力する	print ( <name5> [ <name1> ] )	print ( <name5> [ <name1> ] )
<name3> の各要素を <name4> 、 <name6> とし、 0 から <name4> の長さに <val2> を加えた値未満までの数列の各要素を <name5> とし、、つまり集合の列の列を <name1> とする	<name1> = [ [ set ( ) for <name5> in range ( len ( <name4> ) + <val2> ) ] for <name4> , <name6> in <name3> ]	<name1> = [ [ set ( ) for <name5> in range ( len ( <name4> ) + <val2> ) ] for <name4> , <name6> in <name3> ]
<val6> の <name2> 乗が <name4> より大きいとき、 <blk> 繰り返しを中断する </blk>	if <val6> ** <name2> > <name4> : <blk> break </blk>	list ( <val6> ** <name2> > <name4> ) : <blk> break </blk>
0 から、つまり無限の整数列未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( count ) :	continue in range ( count ) :
<name6> . <name3> ( <name4> + <val2> , <name5> )	<name6> . <name3> ( <name4> + <val2> , <name5> )	set ( <name6> . <name3> ( <name4> + <val2> , <name5> ) )
<val2> を <name6> とする <val4> を <name1> とする	<name6> = <val2> <name1> = <val4>	<name6> = <val2> <name1> = <val4>
<name6> を <name5> の先頭に <val3> を掛けた値だけ減少させる	<name6> -= <name5> [ 0 ] * <val3>	<name6> -= <name5> [ <val3> ] * <val3>
<name4> が <name5> と等しいかどうかが <val1> と等しいとき、	if <name4> == <name5> == <val1> :	\ if <name4> == <name5> == <val1> :
<name4> の各要素を <name5> とし、 <name2> の <name5> 番目の列を返す	return [ <name2> [ <name5> ] for <name5> in <name4> ]	return [ <name2> [ <name5> ] for <name5> in <name4> ]
改行せずに <name2> の <name1> 番目の <name4> 番目を出力する	print ( <name2> [ <name1> ] [ <name4> ] , end = '' )	print ( <name2> [ <name1> ] [ <name4> ] , end = '' )
<name3> をパラメータとして <name3> の浮動小数点数に <val5> を掛けた値の整数値を返す関数を <name6> とする	<name6> = lambda <name3> : int ( float ( <name3> ) * <val5> )	<name6> = lambda <name3> : int ( <name3> ) * <val5> )
<name1> の <name5> を <name4> の <name5> にする	<name4> . <name5> = <name1> . <name5>	<name4> . <name5> = <name1> . <name5>
<name3> を <name1> を <val2> で割った値だけ増加させる <name5> を <name1> を <val2> で割った値だけ増加させる	<name3> += <name1> / <val2> <name5> += <name1> / <val2>	<name4> += <name1> / <val2> <name5> += <name1> / <val2>
<name2> から読み込んだ一行の整数値を <name3> とする	<name3> = int ( <name2> . readline ( ) )	<name3> = int ( <name2> . readline ( ) )
Case に <name1> の文字列を加えた値に <val2> を加えた値を出力する	print ( 'Case ' + str ( <name1> ) + <val2> )	end = 'Case ' + str ( <name1> ) + <val2> )
<val1> から <name4> に <val1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <name4> + <val1> ) :	for <name2> in range ( <val1> , <name4> + <val1> ) :
<val6> を開始番号として <name5> の先頭を除いた部分列に番号付した組の列を順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in enumerate ( <name5> [ <val6> : ] , start = <val6> ) :	. for <name4> , <name3> in enumerate ( <name5> [ <val6> : ] , start = <val6> ) :
<name4> から <name1> を引いた値に <name2> を掛けた値を出力する	print ( ( <name4> - <name1> ) * <name2> )	print ( ( <name4> - <name1> ) * <name2> )
<name1> . <name5> ( <name2> ) を <name2> とする	<name2> = <name1> . <name5> ( <name2> )	dict = <name1> . <name5> ( <name2> )
<val5> から <name1> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val5> , <name1> + <val5> ) :	continue for <name4> in range ( <val5> , <name1> + <val5> ) :
( <val2> 、 <val5> 、 <val4> ) からなる列の <name3> 個までの重複コンビネーションのリストを <name1> とする	<name1> = list ( combinations_with_replacement ( [ <val2> , <val5> , <val4> ] , <name3> ) )	<name1> = list ( itertools . combinations ( [ <val2> , <val5> , <val4> ] , <name3> ) )
<name4> ( <name2> , <name3> , <name2> [ <val6> ] )	<name4> ( <name2> , <name3> , <name2> [ <val6> ] )	<name4> ( <name2> , <name3> , <name2> [ <val6> ] )
未定値を <name3> の <name5> にする	<name3> . <name5> = None	<name2> . <name3> . <name5> = None
<name3> の <name1> から読み込んだ行の列を順に <name2> として、繰り返す	for <name2> in <name3> . <name1> . readlines ( ) :	. for <name2> in <name3> . <name1> . readlines ( ) :
<name1> かつ <name5> が <name2> の <name6> に <val3> を加えた値番目の <name4> 番目以下のとき、	if <name1> and <name5> <= <name2> [ <name6> + <val3> ] [ <name4> ] :	if <name1> and <name5> <= <name2> [ <name6> + <val3> ] [ <name4> ] :
<name3> ( <name4> , <val6> , <val6> , <val1> , <val6> )	<name3> ( <name4> , <val6> , <val6> , <val1> , <val6> )	<name1> ( <name3> ( <name4> , <val6> , <val6> , <val6> , <val6> , <val1> , <val6> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列の両端キューを <name6> とする	<name6> = deque ( sorted ( map ( int , input ( ) . split ( ) ) ) )	<name6> = deque ( sorted ( map ( int , input ( ) . split ( ) ) ) )
<name1> と <name2> のユークリッド距離が <val4> より大きいとき、	if dist ( <name1> , <name2> ) > <val4> :	for <name1> , <name2> in dist ( <name1> , <name2> ) > <val4> :
<name2> に <val6> を加えた値が <name5> と等しいとき、	if <name2> + <val6> == <name5> :	continue + <val6> == <name5> :
<name6> が <name4> より小さくかつ <name5> の <name6> 番目が <name5> の <name1> 番目より小さくないとき、	if <name6> < <name4> and not <name5> [ <name6> ] < <name5> [ <name1> ] :	> <name6> < <name4> and not <name5> [ <name6> ] < <name5> [ <name1> ] :
<name2> の末尾に <name4> . <name6> ( ) を追加する	<name2> . append ( <name4> . <name6> ( ) )	<name2> . append ( <name4> . <name6> ( ) )
<name1> を空白で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , <name1> . split ( ) ) )	<name1> = list ( map ( int , <name1> . split ( ) ) )
<name4> を <name1> の <name6> から <val2> を引いた値番目の <name5> 番目だけ増加させる	<name4> += <name1> [ <name6> - <val2> ] [ <name5> ]	( <name4> += <name1> [ <name6> - <val2> ] [ <name5> ] )
入力された文字列を <val3> で分割した字句列の各要素を <name4> とし、 <name4> の浮動小数点数の列を展開し、それぞれ <name6> 、 <name2> 、 <name1> とする	<name6> , <name2> , <name1> = [ float ( <name4> ) for <name4> in input ( ) . split ( <val3> ) ]	<name2> , <name1> = [ float ( <name4> ) for <name4> in input ( ) . split ( <val3> ) ]
<name6> から、つまり無限の整数列を引いた値を出力する	print ( <name6> - count )	print ( <name6> - count )
<name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> 、 <name2> とする	<name6> , <name5> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )	<name5> , <name2> = map ( int , <name4> . readline ( ) . split ( ) )
<name2> の <val5> 乗が <name4> 以下の間、次を繰り返す	while <name2> ** <val5> <= <name4> :	del <name2> ** <val5> <= <name4> :
{}を出力する	print ( { total_sum } )	print ( { ( x & 2 ) } )
<val5> から <name1> に <val6> を加えた値未満までの数列の各要素を <name4> とし、 <val5> の列を <name3> とする	<name3> = [ <val5> for <name4> in range ( <name1> + <val6> ) ]	<name3> = [ <val5> for <name4> in range ( <name1> + <val6> ) ]
( <val4> 、 <val5> 、 <val3> 、 <val2> 、 <val6> 、 <val1> ) からなる列を <name1> とする	<name1> = [ <val4> , <val5> , <val3> , <val2> , <val6> , <val1> ]	<name1> = [ <val4> , <val5> , <val3> , <val2> , <val6> , <val1> ]
heisei 、 <name2> から <val3> を引いた値に <val4> を加えた値、 <name1> 、 <name5> を出力する	print ( 'heisei' , <name2> - <val3> + <val4> , <name1> , <name5> )	end = 'meiji' , <name2> - <val3> + <val4> , <name1> , <name5> )
<name1> が少なくともひとつは真かどうかが、つまり真と等しいとき、	if any ( <name1> ) == True :	list == any ( <name1> ) == True :
<name1> ( <name5> , ( <name3> + <name2> , <val6> , <name4> ) )	<name1> ( <name5> , ( <name3> + <name2> , <val6> , <name4> ) )	<name1> ( <name5> , ( <name3> + <name2> , <val6> , <name4> ) )
<name1> に <name5> を掛けた値を <name3> とする	<name3> = <name1> * <name5>	else = <name1> * <name5>
<name4> の <name2> の <name5> から <val1> を引いた値番目の <name3> 番目を <name4> の <name2> の <name5> 番目の <name3> 番目にする	<name4> . <name2> [ <name5> ] [ <name3> ] = <name4> . <name2> [ <name5> - <val1> ] [ <name3> ]	<name4> . <name2> [ <name5> ] [ <name3> ] = <name4> . <name2> [ <name5> - <val1> ] [ <name3> ]
無限の整数列の総和を返す	return sum ( count )	self return sum ( count )
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name4> とする </blk>	try : <blk> <name4> = list ( map ( int , input ( ) . split ( ) ) ) </blk>	try : <blk> <name4> = list ( map ( int , input ( ) . split ( ) ) ) </blk>
<name4> を <name3> の <name1> の <name5> 番目にする	<name3> . <name1> [ <name5> ] = <name4>	<name3> . <name1> [ <name5> ] = <name4>
<val6> に <name1> を掛けた値に <val3> を加えた値を <name1> とする	<name1> = <val6> * <name1> + <val3>	<name1> = <val6> * <name1> + <val3>
<name3> が <name4> と等しいかどうかが <val1> と等しいとき、	if <name3> == <name4> == <val1> :	\ if <name3> == <name4> == <val1> :
0 から <val6> に <name2> を掛けた値未満までの数列の各要素を <name3> とし、、つまり空列の列を <name1> とする	<name1> = [ [ ] for <name3> in range ( <val6> * <name2> ) ]	<name6> = [ [ ] for <name3> in range ( <val6> * <name2> ) ]
<name5> の <name6> 番目の整数値を <name4> とする	<name4> = int ( <name5> [ <name6> ] )	<name4> = int ( <name5> [ <name6> ] )
<name4> に <name3> の <name6> に <val5> を加えた値番目の <val5> 番目を加えた値から <name2> を引いた値を <name1> とする	<name1> = <name4> + <name3> [ <name6> + <val5> ] [ <val5> ] - <name2>	<name1> = <name4> + <name3> [ <name6> + <val5> ] [ <val5> ] - <name2>
<name6> と <name2> の論理積の長さを出力する	print ( len ( <name6> & <name2> ) )	print ( len ( <name6> & <name2> ) )
<name4> を <val2> で割った余りにする	<name4> % = <val2>	<name3> % = <name4> % = <val2>
<name2> を <name4> で割った余りが <val6> と等しい間、次を繰り返す	while <name2> % <name4> == <val6> :	del <name2> % <name4> == <val6> :
{}を出力する	print ( { sum ( map ( lambda x : S [ x ] , T ) ) } )	print ( { ( x & 2 ) } )
<name1> ( <name4> , <name5> , <name6> , <name3> )	<name1> ( <name4> , <name5> , <name6> , <name3> )	( <name1> ( <name4> , <name5> , <name6> , <name3> ) )
<val5> を区切りとして <name6> を <val2> で割った商、 <name6> を <val4> で割った商を <val4> で割った余り、 <name6> を <val4> で割った余りを出力する	print ( <name6> // <val2> , <name6> // <val4> % <val4> , <name6> % <val4> , sep = <val5> )	print ( <name6> // <val2> , <name6> // <val4> % <val4> , <name6> % <val4> , sep = <val5> )
W を <name6> とする	<name6> = 'W'	<name6> = '+-*' ' '
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストをソートした列を展開し、それぞれ <name1> 、 <name5> 、 <name4> とする	<name1> , <name5> , <name4> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )	<name1> , <name5> , <name4> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )
( ( <name1> ) からなる列の 0 から <name3> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <val5> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <name1> ] * [ <val5> for <name6> in range ( <name3> + <val2> ) ] ]	<name4> = [ [ <name1> ] * [ <val5> for <name6> in range ( <name3> + <val2> ) ] ]
<val3> から <name5> 未満までの数列の各要素を <name6> とし、 <val3> の列を <name2> とする	<name2> = [ <val3> for <name6> in range ( <name5> ) ]	<name6> = [ <val3> for <name6> in range ( <name5> ) ]
<val1> を <name4> とするを <name3> とする	<name3> = <name4> = <val1>	<name4> = <name3> = <val1>
<name1> が <name4> と等しいかどうかが <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <name4> == <val2> : <blk> break </blk>	\ if <name1> == <name4> == <val2> : <blk> break </blk>
<name2> の <name6> から <val3> を引いた値番目の <name5> 番目が <val3> と等しいとき、	if <name2> [ <name6> - <val3> ] [ <name5> ] == <val3> :	continue <name2> [ <name6> - <val3> ] [ <name5> ] == <val3> :
<name2> ( <name5> - <name1> ) を <name4> とする	<name4> = <name2> ( <name5> - <name1> )	<name4> = <name2> ( <name5> - <name1> )
<name1> ( <name5> ( <name4> ( ) ) ) に番号付した組の列を順に <name6> 、 <name3> として、繰り返す	for <name6> , <name3> in enumerate ( <name1> ( <name5> ( <name4> ( ) ) ) ) :	. for <name6> , <name3> in enumerate ( <name1> ( <name5> ( <name4> ( ) ) ) ) :
<name4> から <val1> 未満までの <val2> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> , <val1> , <val2> ) :	continue for <name3> in range ( <name4> , <val1> , <val2> ) :
<name3> の長さが <val5> と等しくない間、次を繰り返す	while len ( <name3> ) != <val5> :	try != len ( <name3> ) != <val5> :
<name4> の <name6> を <name5> の <name1> の <name3> にする	<name5> . <name1> . <name3> = <name4> . <name6>	<name2> . <name1> . <name3> = <name4> . <name6>
<name1> の <name6> を <name5> の <name6> にする	<name5> . <name6> = <name1> . <name6>	<name1> . <name6> = <name1> . <name6>
<name5> モジュールを用いる	from <name5> import Queue	from <name5> , Counter
0 から <name1> に <name4> を掛けた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> * <name4> ) :	) : for <name5> in range ( <name1> * <name4> ) :
<name3> の <val1> 番目を <name4> とする	<name4> = <name3> [ <val1> ]	str = <name3> [ <val1> ]
<name1> の末尾に ( <name3> の先頭、 <name6> ) からなる列を追加する	<name1> . append ( [ <name3> [ 0 ] , <name6> ] )	<name1> . append ( [ <name3> [ 0 ] , <name6> ] )
<name4> の <name2> 番目から <name3> を <val5> で割った商を引いた値が <name1> に含まれるとき、	if <name4> [ <name2> ] - <name3> // <val5> in <name1> :	for <name4> in <name4> [ <name2> ] - ( <name3> // <val5> ) in <name1> :
<name4> の <name2> 番目が <name6> の <name3> 番目以下のとき、	if <name4> [ <name2> ] <= <name6> [ <name3> ] :	[ if <name4> [ <name2> ] <= <name6> [ <name3> ] :
<name5> を <name6> とする <name3> を <name1> とする	<name6> = <name5> <name1> = <name3>	<name1> = <name5> <name1> = <name3>
<name3> の、つまり入力された文字列の整数値から <val1> を引いた値番目を <val1> だけ増加させる	<name3> [ int ( input ( ) ) - <val1> ] += <val1>	<name3> [ int ( input ( ) ) - <val1> ] += <val1>
0 から <name3> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の浮動小数点数の列の列を <name5> とする	<name5> = [ [ float ( <name4> ) for <name4> in input ( ) . split ( ) ] for <name6> in range ( <name3> ) ]	<name5> = [ [ float ( <name4> ) for <name4> in input ( ) . split ( ) ] for <name6> in range ( <name3> ) ]
<name6> の <val2> 番目の長さが <val1> と等しくないとき <val5> を書式として <name6> の先頭、 <val4> を間に入れて <name6> [ <val2> ] の各要素に <name3> を適用した列を連結した文字列で整形した文字列を出力する、そうでなければ '{}:' を出力する	print ( <val5> . format ( <name6> [ <val1> ] , <val4> . join ( map ( <name3> , <name6> [ <val2> ] ) ) ) ) if len ( <name6> [ <val2> ] ) != <val1> else print ( { <name6> [ <val1> ] } : )	[ print ( <val5> . format ( <name6> [ <val2> ] , <val4> . join ( map ( <name3> , <name6> [ <val2> ] ) ) ) ) for <name3> in len ( <name6> [ <val2> ] ) != <val1> else end = '' )
<name2> の <name5> の x 座標から <name2> の <name6> の x 座標を引いた値に <name1> の <name6> の y 座標から <name2> の <name5> の y 座標を引いた値を掛けた値に <name2> の <name5> の y 座標から <name2> の <name6> の y 座標を引いた値に <name2> の <name5> の x 座標から <name1> の <name6> の x 座標を引いた値を掛けた値を加えた値を <name4> とする	<name4> = ( <name2> . <name5> . x - <name2> . <name6> . x ) * ( <name1> . <name6> . y - <name2> . <name5> . y ) + ( <name2> . <name5> . y - <name2> . <name6> . y ) * ( <name2> . <name5> . x - <name1> . <name6> . x )	<name4> = ( <name2> . <name5> . x - <name2> . <name6> . x ) * ( <name1> . <name6> . x - <name2> . <name5> . <name5> . <name2> . <name6> . x ) + ( <name2> . <name5> . x ) * ( <name1> . <name6> . x )
( ( <name5> , <name6> , <name4> -1 ) が <name2> に含まれるとき <name2> の ( <name5> , <name6> , <name4> -1 ) 番目、そうでなければ [ <name2> ( <name5> + <val1> ) forhtinrange ( <name5> + <val1> ) ] の各要素を <name5> とし、 <name3> の列 ) からなる列の最小値を出力する	print ( min ( [ <name2> [ ( <name5> , <name6> , <name4> - <val1> ) ] if ( <name5> , <name6> , <name4> - <val1> ) in <name2> else [ <name3> for <name5> in [ <name2> ( <name5> + <val1> ) for <name6> in <name2> ( <name5> + <val1> ) ] ] ] ) )	end = min ( [ <name5> , <name6> , ( <name5> , <name6> , <name4> - <val1> ) ] if <name2> else [ <name2> ( <name5> + <val1> ) for <name5> in [ <name5> + <val1> ] for <name5> , <name3> ] ] ) )
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開してと [ MASK ] の最大公約数を出力する	print ( gcd ( * map ( int , <name3> ( ) . split ( ) ) ) )	gcd . gcd ( * map ( int , <name3> ( ) . split ( ) ) )
<name1> の <name4> に [ MASK ] を書き込むを <name3> とする	<name3> = <name1> . <name4> . <name3>	<name1> . <name3> = <name1> . <name4> . <name3>
<name3> の <name2> の <name5> 番目に <name3> の <name4> の <name5> から <name1> を引いた値番目を掛けた値を <name3> の <name6> で割った余りを返す	return <name3> . <name2> [ <name5> ] * <name3> . <name4> [ <name5> - <name1> ] % <name3> . <name6>	x return <name3> . <name2> [ <name5> ] * <name3> . <name4> [ <name5> - <name1> ] % <name3> . <name6>
<name3> の <name6> の <name2> が <name3> と等しいとき、	if <name3> . <name6> . <name2> == <name3> :	for <name3> in <name3> . <name6> . <name2> == <name3> :
<name6> の <name2> 番目の <name4> 番目が <val3> と等しいとき、 <blk> <val5> を <name1> とする </blk>	if <name6> [ <name2> ] [ <name4> ] == <val3> : <blk> <name1> = <val5> </blk>	\ <name1> = <name6> [ <name2> ] [ <name4> ] == <val3> : <blk> <name1> = <val5> </blk>
<name5> に <name4> の <name3> の <val1> 番目番目、 <name3> の <val6> 番目を追加した集まり	<name5> . add ( <name4> [ <name3> [ <val1> ] ] , <name3> [ <val6> ] )	<name1> . add ( <name4> [ <name3> [ <val1> ] ] , <name3> [ <val6> ] )
<name3> . <name5> ( ( <name4> , <name1> ) , ( <name4> , <name1> + <val2> ) ) を一旦、返す	yield <name3> . <name5> ( ( <name4> , <name1> ) , ( <name4> , <name1> + <val2> ) )	dict , yield <name3> . <name5> ( ( <name4> , <name1> ) , ( <name4> , <name1> + <val2> ) )
<name1> の <name5> が <name2> の <name3> と等しくないとき、	if <name1> . <name5> != <name2> . <name3> :	while <name1> . <name5> != <name2> . <name3> :
<val6> が - <name4> 以下かどうかが <name5> 以下のとき、	if <val6> <= - <name4> <= <name5> :	while <val6> <= - <name4> <= <name5> :
<name5> の <name4> に <name2> の <name3> を掛けた値から <name5> の <name3> に <name2> の <name4> を掛けた値を引いた値を返す	return <name5> . <name4> * <name2> . <name3> - <name5> . <name3> * <name2> . <name4>	x return <name5> . <name4> * <name2> . <name3> - <name5> . <name3> * <name2> . <name4>
<name2> の <name2> の長さから <val5> を引いた値を取り出した値	<name2> . pop ( len ( <name2> ) - <val5> )	<name1> . pop ( len ( <name2> ) - <val5> )
<name5> が <val1> と等しくない間、次を繰り返す	while <name5> != <val1> :	del ( <name5> != <val1> ) :
( <name6> 、 <name1> 、未定値 ) からなる列を <name5> とする	<name5> = [ <name6> , <name1> , None ]	else = [ <name6> , <name1> , None ]
<name6> が <name3> より小さくかつ <name1> が <name4> より小さいとき、	if <name6> < <name3> and <name1> < <name4> :	for <name6> < <name3> and <name1> < <name4> :
<name5> の末尾に <name4> から <name6> を引いた値を追加する	<name5> . append ( <name4> - <name6> )	<name5> . append ( <name4> - <name6> )
<name6> かつ <name4> に <name5> の <name3> 番目を加えた値が <name6> の先頭より小さいとき、	if <name6> and <name4> + <name5> [ <name3> ] < <name6> [ 0 ] :	list ( <name6> and <name4> + <name5> [ <name3> ] < <name6> [ 0 ] ) :
<val4> を <name1> の <name5> 番目の <name6> 番目とするを <name2> の <name6> 番目の <name5> 番目にする	<name2> [ <name6> ] [ <name5> ] = <name1> [ <name5> ] [ <name6> ] = <val4>	else [ <name2> ] [ <name5> ] = <name1> [ <name5> ] [ <name6> ] = <val4>
<name1> を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in <name1> :	. for <name2> , <name5> in <name1> :
<name6> を <name3> の <name1> 番目の <name4> 番目に <name2> の <name4> 番目を掛けた値だけ増加させる	<name6> += <name3> [ <name1> ] [ <name4> ] * <name2> [ <name4> ]	<name1> += <name6> / <name3> [ <name1> ] [ <name4> ] * <name2> [ <name4> ]
os . <name2> の <name5> 番目でないとき、	if not <name2> [ <name5> ] :	'%d not <name2> [ <name5> ] : , continue [ <name5> ] :
<name3> の <name1> 番目の <name2> 番目が <val5> と等しいとき、	if <name3> [ <name1> ] [ <name2> ] == <val5> :	continue [ <name1> ] [ <name2> ] == <val5> :
<val6> が <name1> 以下かどうかが <name4> 以下のとき、	if <val6> <= <name1> <= <name4> :	list ( <val6> <= <name1> <= <name4> ) :
full house を出力する	print ( 'full house' )	& print ( 'ON' )
<name4> の <name2> 番目の <name5> 番目の <val3> 番目を <name1> だけ増加させる	<name4> [ <name2> ] [ <name5> ] [ <val3> ] += <name1>	( <name4> [ <name2> ] [ <name5> ] [ <val3> ] += <name1> )
0 から <name6> の <val5> 番目未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> [ <val5> ] ) :	continue in range ( <name6> [ <val5> ] ) :
<name6> ( <name3> [ <name4> ] ) を <name1> とするを <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name1> = <name6> ( <name3> [ <name4> ] )	<name3> [ <name4> ] = <name1> = <name6> ( <name3> [ <name4> ] )
<name6> の <name3> の先頭番目の末尾に <name4> の先頭を追加する	<name6> [ <name3> [ 0 ] ] . append ( <name4> [ 0 ] )	<name3> [ 0 ] ] . append ( <name4> [ 0 ] )
<name2> から <val4> を引いた値、 <name5> から <val4> を引いた値を <name2> 、 <name5> とする	<name2> , <name5> = <name2> - <val4> , <name5> - <val4>	input , <name5> = <name2> - <val4> , <name5> - <val4>
<name1> の <name2> の <name5> の <name6> から <val4> を引いた値番目の <name3> から <val4> を引いた値番目番目番目を <val4> だけ増加させる	<name1> [ <name2> [ <name5> [ <name6> - <val4> ] [ <name3> - <val4> ] ] ] += <val4>	<name1> [ <name2> [ <name5> [ <name6> - <val4> ] [ <name3> - <val4> ] ] ] += <val4>
gray を <name5> の <name4> 番目にする	<name5> [ <name4> ] = 'gray'	( <name5> [ <name4> ] = 'gray' )
0 から <name6> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列を <name4> とする	<name4> = [ int ( input ( ) ) for <name3> in range ( <name6> ) ]	<name4> = [ int ( input ( ) ) for <name3> in range ( <name6> ) ]
<name6> の <val5> 番目から、つまり末尾までの部分列を順に <name2> として、繰り返す	for <name2> in <name6> [ <val5> : ] :	: for <name2> in <name6> [ <val5> : ] :
<name6> . <name2> ( <name6> . <name1> [ <val3> ] , <name6> . <name1> [ <val5> ] , <name6> . <name1> [ <val4> ] , <name6> . <name1> [ <val6> ] , <name6> . <name1> [ <val2> ] , <name6> . <name1> [ <val1> ] )	<name6> . <name2> ( <name6> . <name1> [ <val3> ] , <name6> . <name1> [ <val5> ] , <name6> . <name1> [ <val4> ] , <name6> . <name1> [ <val6> ] , <name6> . <name1> [ <val2> ] , <name6> . <name1> [ <val1> ] )	( <name6> . <name2> ( <name6> . <name1> [ <val3> ] , <name6> . <name1> [ <val5> ] , <name6> . <name1> [ <val4> ] , <name6> . <name1> [ <val6> ] , <name6> . <name1> [ <val2> ] , <name6> . <name1> [ <val1> ] ) )
<name5> に <name3> を加えた値が <name6> に <name4> を加えた値を <val1> で割った値より小さいとき、	if <name5> + <name3> < ( <name6> + <name4> ) / <val1> :	for <name5> + <name3> < ( <name6> + <name4> ) / <val1> :
<name3> を <val4> だけ右シフトする <name6> を <val4> だけ右シフトする	<name3> >> = <val4> <name6> >> = <val4>	<val4> <name3> >> = <val4> <name6> >> = <val4>
<name2> に <name2> を掛けた値が <name6> の <val5> 番目に <name6> の <val5> 番目を掛けた値に <name6> の <val1> 番目に <name6> の <val1> 番目を掛けた値を加えた値と等しいとき、	if <name2> * <name2> == <name6> [ <val5> ] * <name6> [ <val5> ] + <name6> [ <val1> ] * <name6> [ <val1> ] :	list ( <name2> * <name2> == <name6> [ <val5> ] * <name6> [ <val5> ] + <name6> [ <val1> ] * <name6> [ <val1> ] ) :
<name4> が <name1> に含まれないとき、 <blk> <val2> を出力する </blk>	if <name4> not in <name1> : <blk> print ( <val2> ) </blk>	try : if <name4> not in <name1> : <blk> print ( <val2> ) </blk>
( <val5> 、 <val1> 、 <val2> 、 <val3> ) からなる列を <name6> とする	<name6> = [ <val5> , <val1> , <val2> , <val3> ]	<name6> = [ <val5> , <val1> , <val2> , <val3> ]
<name3> の長さが <val6> より小さいとき、	if len ( <name3> ) < <val6> :	for <name3> in len ( <name3> ) < <val6> :
<name2> が -1 と等しくまたは <name6> が -1 と等しくまたは <name2> に <name6> を加えた値が <val5> より小さいとき、	if <name2> == - 1 or <name6> == - 1 or <name2> + <name6> < <val5> :	for <name2> == - 1 or <name6> == - 1 or <name2> + <name6> < <val5> :
<name1> の <name5> 番目が <name2> に含まれるとき、	if <name1> [ <name5> ] in <name2> :	if <name1> [ <name5> ] in <name2> :
<name3> が <name2> から <val4> を引いた値と等しくかつ <name2> を <val6> で割った余りが <val5> と等しいとき、	if <name3> == <name2> - <val4> and <name2> % <val6> == <val5> :	list ( <name3> == <name2> - <val4> and <name2> % <val6> == <val5> ) :
<name4> の <name2> 番目、 <name1> の <name2> 番目を出力する	print ( <name4> [ <name2> ] , <name1> [ <name2> ] )	print ( <name4> [ <name2> ] , <name1> [ <name2> ] )
<name3> ( <name1> . <name4> + <name2> . <name4> , <name1> . <name6> + <name2> . <name6> ) を返す	return <name3> ( <name1> . <name4> + <name2> . <name4> , <name1> . <name6> + <name2> . <name6> )	x return <name3> ( <name1> . <name4> + <name2> . <name4> , <name1> . <name6> + <name2> . <name6> )
0 から <name5> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name5> ) ]	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name5> ) ]
<name4> に <name3> 、 <name2> 、 <name5> を追加した集まり	<name4> . add ( <name3> , <name2> , <name5> )	<name2> . add ( <name3> , <name2> , <name5> )
( <name1> の <val3> 乗に <name5> の <val3> 乗を加えた値の平方根、 <name4> . <name2> ( <name5> , <name1> ) ) の組を返す	return ( <name4> . sqrt ( <name1> ** <val3> + <name5> ** <val3> ) , <name4> . <name2> ( <name5> , <name1> ) )	def sqrt ( <name1> ** <val3> + <name5> ** <val3> ) , <name4> . <name2> ( <name5> , <name1> ) )
( <val1> ) からなる列の <name2> 回分の列を <name4> とする	<name4> = [ <val1> ] * <name2>	<name4> = [ <val1> ] * <name2>
<name5> の <name4> 番目に <name5> の <name2> 番目を加えた値を一旦、返す	yield <name5> [ <name4> ] + <name5> [ <name2> ]	global <name5> [ <name4> ] + <name5> [ <name2> ]
( <name5> ) からなる列を追加して <name4> を拡張する	<name4> . extend ( [ <name5> ] )	<name4> . extend ( [ <name5> ] )
<name1> の <name5> から <val6> を引いた値番目の末尾に ( <name4> 、 <name2> から <val6> を引いた値 ) の組を追加する	<name1> [ <name5> - <val6> ] . append ( ( <name4> , <name2> - <val6> ) )	<name5> [ <name5> - <val6> ] . append ( ( <name4> , <name2> - <val6> ) )
<name1> の先頭が <name2> の <val6> 番目と等しいとき、	if <name1> [ 0 ] == <name2> [ <val6> ] :	if <name1> [ 0 ] == <name2> [ <val6> ] :
<name3> の <name5> 番目に <name1> を追加した集まり <name3> の <name1> 番目に <name5> を追加した集まり	<name3> [ <name5> ] . add ( <name1> ) <name3> [ <name1> ] . add ( <name5> )	<name1> [ <name5> ] . add ( <name1> ) <name3> [ <name1> ] . add ( <name5> )
<val5> を <name3> を <name1> とするとするを <name2> とする	<name2> = <name1> = <name3> = <val5>	<name2> = <name1> = <name3> = <val5>
<name1> から <val4> に <name2> を掛けた値を引いた値を <val3> で割った商を <name5> とする	<name5> = ( <name1> - <val4> * <name2> ) // <val3>	<name5> = ( <name1> - <val4> * <name2> ) // <val3>
偽を <name1> の <name6> 番目にする	<name1> [ <name6> ] = False	( <name1> [ <name6> ] = False )
<name2> を <name1> の <name3> の <name2> 番目にする	<name1> . <name3> [ <name2> ] = <name2>	( <name1> [ <name3> . <name2> ] = <name2> )
<name1> が <name4> 以下または <name5> が <name2> 以下のとき、	if ( <name1> <= <name4> or <name5> <= <name2> ) :	list if <name1> <= <name4> or <name5> <= <name2> :
<name3> の最小値を <name2> とする	<name2> = min ( <name3> )	dict = min ( <name3> )
<val5> から <val1> に <name2> を掛けた値に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , <val1> * <name2> + <val5> ) :	continue for <name6> in range ( <val5> , <val1> * <name2> + <val5> ) :
<name6> の <name4> 番目の <name2> に <val1> を加えた値番目の <name5> 番目を <val1> だけ減少させる	<name6> [ <name4> ] [ <name2> + <val1> ] [ <name5> ] -= <val1>	<name5> [ <name4> ] [ <name2> + <val1> ] [ <name5> ] -= <val1>
<name6> から <name1> に <name2> を掛けた値を引いた値を <name4> とする	<name4> = <name6> - <name1> * <name2>	<name4> = <name6> - <name1> * <name2>
<name4> の <name3> から <name2> を引いた値番目を <name5> とする	<name5> = <name4> [ <name3> - <name2> ]	<name5> = <name4> [ <name3> - <name2> ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを反転した列を <name5> とする	<name5> = reversed ( list ( map ( int , input ( ) . split ( ) ) ) )	<name2> <name5> = reversed ( list ( map ( int , input ( ) . split ( ) ) ) )
<name1> の <name6> 番目が -1 と等しくないとき、	if <name1> [ <name6> ] != - 1 :	while <name1> [ <name6> ] != - 1 :
<name4> の <name6> 番目を <name4> の <name6> に <val1> を加えた値番目にする	<name4> [ <name6> + <val1> ] = <name4> [ <name6> ]	<name1> [ <name6> + <val1> ] = <name4> [ <name6> ]
<val2> を <name1> の <name6> 番目の <name4> 番目にする	<name1> [ <name6> ] [ <name4> ] = <val2>	not <name1> [ <name6> ] [ <name4> ] = <val2>
<name1> から <name5> を引いた値に <name6> から <name5> を引いた値を掛けた値に <name3> から <name4> を引いた値に <name2> から <name4> を引いた値を掛けた値を加えた値を返す	return ( <name1> - <name5> ) * ( <name6> - <name5> ) + ( <name3> - <name4> ) * ( <name2> - <name4> )	= ( <name1> - <name5> ) * ( <name6> - <name5> ) + ( <name3> - <name4> ) * ( <name2> - <name4> )
<name4> の <name2> の <name5> 番目に <name1> を加えた値を <name4> の <name2> の <name6> 番目にする	<name4> . <name2> [ <name6> ] = <name4> . <name2> [ <name5> ] + <name1>	<name2> . <name2> [ <name6> ] = <name4> . <name2> [ <name5> ] + <name1>
<name2> が <name3> から <val4> を引いた値と等しいとき、	if <name2> == <name3> - <val4> :	if <name2> == <name3> - <val4> :
<name1> の <name4> を <name6> の <name3> にする	<name6> . <name3> = <name1> . <name4>	<name1> . <name3> = <name1> . <name4>
<name3> の <val6> に <name2> を加えた値から、つまり末尾までの部分列を <name3> とする	<name3> = <name3> [ <val6> + <name2> : ]	<name3> = <name3> [ <val6> + <name2> : ]
<name3> が <val1> と等しくまたは <name2> が <name5> と等しいとき、	if <name3> == <val1> or <name2> == <name5> :	or <name3> == <val1> or <name2> == <name5> :
<name2> の <name1> 番目の末尾に <name6> に <name3> を加えた値から <val4> を引いた値を追加する	<name2> [ <name1> ] . append ( <name6> + <name3> - <val4> )	<name2> [ <name1> ] . append ( <name6> + <name3> - <val4> )
( 、つまり偽 ) からなる列の <name4> の <name1> 回分の列を <name6> とする	<name6> = [ False ] * <name4> . <name1>	<name6> = [ False ] * <name4> . <name1>
<name5> の <name1> の <name3> 番目の末尾に <name2> を追加する	<name5> . <name1> [ <name3> ] . append ( <name2> )	<name2> . <name1> [ <name3> ] . append ( <name2> )
0 から <name5> に <val4> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> + <val4> ) :	in range ( <name5> + <val4> ) :
<name4> から <name4> の <val6> 乗から <name1> を引いた値を <val6> に <name4> の <val3> 乗を掛けた値で割った値を引いた値を <name4> とする	<name4> = <name4> - ( pow ( <name4> , <val6> ) - <name1> ) / ( <val6> * pow ( <name4> , <val3> ) )	<name4> = <name4> - ( <name4> ** <val6> - <name1> ) / ( <val6> * <name4> ** <val3> )
<name4> を <name2> の <name3> に <val1> を加えた値番目だけ増加させる	<name4> += <name2> [ <name3> + <val1> ]	( <name4> += <name2> [ <name3> + <val1> ] )
0 から <name3> の <name6> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> . <name6> ) :	: for <name2> in range ( <name3> . <name6> ) :
<name5> を <name2> を <name1> とするとするを <name6> とする <val4> を <name3> とする <val4> を <name6> とする	<name6> = <name1> = <name2> = <name5> <name3> = <val4> <name6> = <val4>	else = <name1> = <name2> = <name5> <name6> = <val4>
<name6> から <name4> を引いた値が <name5> と等しいとき、 <blk> 真を <name2> とする </blk>	if <name6> - <name4> == <name5> : <blk> <name2> = True </blk>	if <name6> - <name4> == <name5> : <blk> <name2> = True </blk>
<name1> ( <name6> , <name4> , <name3> , <name5> ) のとき、	if <name1> ( <name6> , <name4> , <name3> , <name5> ) :	isinstance ( <name1> ( <name6> , <name4> , <name3> , <name5> ) ) :
( ( <val6> 、 <val6> ) の組 ) からなる列の両端キューを <name5> とする	<name5> = deque ( [ ( <val6> , <val6> ) ] )	<name5> = deque ( [ ( <val6> , <val6> ) ] )
無限の整数列が <val3> と等しいとき、	if count == <val3> :	for count in count == <val3> :
<name1> の末尾に ( <name5> 、 <name3> に <name6> の <name5> 番目を加えた値 ) の組を追加する	<name1> . append ( ( <name5> , <name3> + <name6> [ <name5> ] ) )	<name1> . append ( ( <name5> , <name3> + <name6> [ <name5> ] ) )
<name6> が <name4> より大きくまたは <name6> が <val1> 以下のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name6> > <name4> or <name6> <= <val1> : <blk> continue </blk>	\ if <name6> > <name4> or <name6> <= <val1> : <blk> continue </blk>
<name1> の末尾に <name4> の先頭の整数値を追加する	<name1> . append ( int ( <name4> [ 0 ] ) )	<name1> . append ( int ( <name4> [ 0 ] ) )
<name1> ( <name6> , <name4> ) を <name2> とする	<name2> = <name1> ( <name6> , <name4> )	dict = <name1> ( <name6> , <name4> )
<name4> が <val1> と等しくかつ <name3> が <val6> と等しいとき、	if <name4> == <val1> and <name3> == <val6> :	[ if <name4> == <val1> and <name3> == <val6> :
<name3> ( <name6> , <name2> ) を <name6> の <name1> で割った値を <name5> とする	<name5> = <name3> ( <name6> , <name2> ) / <name6> . <name1>	<name5> = <name3> ( <name6> , <name2> ) / <name6> . <name1>
<name4> を返す	return <name4>	yield <name4>
<name2> を <name1> の文字列だけ増加させる	<name2> += str ( <name1> )	<name2> += str ( <name1> )
<name4> が <val6> 以下かつ <name3> が <val6> 以下のとき、 <blk> <name4> 、 <name3> 、 <name5> の最大値を <name2> とする </blk>	if <name4> <= <val6> and <name3> <= <val6> : <blk> <name2> = max ( <name4> , <name3> , <name5> ) </blk>	\ <name2> = max ( <name4> <= <val6> and <name3> <= <val6> ) : <blk> <name2> = max ( <name4> , <name3> , <name5> ) </blk>
<name2> ( <name6> , <name1> , <name6> [ <val4> ] )	<name2> ( <name6> , <name1> , <name6> [ <val4> ] )	set ( <name2> ( <name6> , <name1> , <name6> [ <val4> ] ) )
<name2> の <name6> の <val3> 番目から <name6> の <val4> 番目までの部分列の最大値を出力する	print ( max ( <name2> [ <name6> [ <val3> ] : <name6> [ <val4> ] ] ) )	print ( max ( <name2> [ <name6> [ <val3> ] : <name6> [ <val4> ] ] ) )
<name6> の <name2> の <name4> 番目の <name5> 番目、 <name6> の <name2> の <name4> 番目の <name3> 番目に <name6> の <name2> の <name3> 番目の <name5> 番目を加えた値の最小値を <name6> の <name2> の <name4> 番目の <name5> 番目にする	<name6> . <name2> [ <name4> ] [ <name5> ] = min ( <name6> . <name2> [ <name4> ] [ <name5> ] , <name6> . <name2> [ <name4> ] [ <name3> ] + <name6> . <name2> [ <name3> ] [ <name5> ] )	<name6> . <name2> [ <name4> ] [ <name5> ] = min ( <name6> . <name2> [ <name4> ] [ <name5> ] , <name6> . <name2> [ <name4> ] [ <name3> ] + <name6> . <name2> [ <name3> ] [ <name5> ] )
<name6> の <name3> 番目に <name5> を追加した集まり	<name6> [ <name3> ] . add ( <name5> )	<name3> [ <name3> ] . add ( <name5> )
<name1> の <name2> から <val3> を引いた値番目の末尾に ( <name6> 、 <name4> 、 <name5> 、 <name1> ) の組を追加する	<name1> [ <name2> - <val3> ] . append ( ( <name6> , <name4> , <name5> , <name1> ) )	<name1> [ <name2> - <val3> ] . append ( ( <name6> , <name4> , <name5> , <name1> ) )
<name4> から読み込んだ一行の整数値を <name1> とする	<name1> = int ( <name4> . readline ( ) )	<name1> = int ( <name4> . readline ( ) )
<val4> から <name6> 未満までの数列の各要素を <name3> とし、 <name5> の <name2> から <name1> [ <name3> ] を引いた値番目が <val4> より大きいかどうかの列が全てが真のとき、	if all ( [ <name5> [ <name2> - <name1> [ <name3> ] ] > <val4> for <name3> in range ( <name6> ) ] ) :	for <name3> in all ( [ <name5> [ <name2> - <name1> [ <name3> ] ] > <val4> for <name3> in range ( <name6> ) ] ) :
( <val4> ) からなる列の <val3> に <name6> を掛けた値回分の列を <name5> とする	<name5> = [ <val4> ] * ( <val3> * <name6> )	<name5> = [ <val4> ] * ( <val3> * <name6> )
<name5> ( <name1> ( <name2> [ <name6> -1 ] ) , <name1> ( <name2> [ <name6> + <val4> ] ) ) の文字列を <name2> の <name6> から <val4> を引いた値番目にする	<name2> [ <name6> - <val4> ] = str ( <name5> ( <name1> ( <name2> [ <name6> - <val4> ] ) , <name1> ( <name2> [ <name6> + <val4> ] ) ) )	( <name2> [ <name6> - <val4> ] ) = str ( <name5> ( <name1> ( <name2> [ <name6> - <val4> ] ) , <name1> ( <name2> [ <name6> + <val4> ] ) )
<name2> が <name6> 以上のとき <name2> から <name6> を引いた値、そうでなければ <name6> から <name2> を引いた値を <name5> とする	<name5> = <name2> - <name6> if <name2> >= <name6> else <name6> - <name2>	else = <name2> - <name6> if <name2> >= <name6> else <name6> - <name2>
<name4> の <name1> の <name6> 番目番目を <name2> の <name6> 番目にする	<name2> [ <name6> ] = <name4> [ <name1> [ <name6> ] ]	<name2> [ <name6> ] = <name4> [ <name1> [ <name6> ] ]
<name3> を <val4> 分の一にする	<name3> // = <val4>	( <name3> // = <val4> )
<name4> ( <name5> . <name6> - <name5> . <name1> ) を <name3> とする	<name3> = <name4> ( <name5> . <name6> - <name5> . <name1> )	else = <name4> ( <name5> . <name6> - <name5> . <name1> )
<name6> から <name2> に <val4> を加えた値未満までの <name1> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> , <name2> + <val4> , <name1> ) :	continue for <name3> in range ( <name6> , <name2> + <val4> , <name1> ) :
<name6> の <name4> 番目でないとき、	if not <name6> [ <name4> ] :	while not <name6> [ <name4> ] :
<name6> に <name3> を加えた値を <val4> で割った値を <name2> とする	<name2> = ( <name6> + <name3> ) / <val4>	input = ( <name6> + <name3> ) / <val4>
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name3> 、 <name2> 、 <name5> とする	<name1> , <name3> , <name2> , <name5> = map ( int , <name4> ( ) . split ( ) )	<name3> , <name2> , <name5> = map ( int , <name4> ( ) . split ( ) )
<name6> の <name1> の <name3> を <val4> で割った余り番目を <name1> とする	<name1> = <name6> . <name1> [ <name3> % <val4> ]	<name1> = <name6> [ <name1> [ <name3> % <val4> ] ]
<name2> 、 <name5> を <name6> 、 <name3> とする	<name6> , <name3> = <name2> , <name5>	<name2> , <name6> , <name3> = <name2> , <name5>
<name6> の <name3> 番目が <val1> と等しくかつ <name2> の <name3> 番目でないとき、	if <name6> [ <name3> ] == <val1> and not <name2> [ <name3> ] :	if <name6> [ <name3> ] == <val1> and not <name2> [ <name3> ] :
<name5> を <name2> で割った余りが <val1> と等しいとき、	if <name5> % <name2> == <val1> :	list ( <name5> % <name2> == <val1> ) :
- <name2> 、 <val6> の最小値を <name5> とする	<name5> = min ( - <name2> , <val6> )	<name5> = min ( - <name2> , <val6> )
<name1> が <name5> の <name1> と等しいとき、	if <name1> == <name5> . <name1> :	list ( <name1> == <name5> . <name1> ) :
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列の組を <name1> とする	<name1> = tuple ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )	<name4> = tuple ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )
<name2> の末尾に <name2> の <name6> 番目を追加する	<name2> . append ( <name2> [ <name6> ] )	<name1> . append ( <name2> [ <name6> ] )
3 C0 % d を <name2> で割った余りを出力する	print ( '3C0%d' % ( <name2> ) )	print ( '3C' % <name2> )
<name4> を <val5> だけ右シフトする <name2> を <val5> だけ右シフトする	<name4> >> = <val5> <name2> >> = <val5>	not <name4> >> = <val5> <name2> >> = <val5>
<name2> が <val4> より大きいとき <name2> 、そうでなければ <val6> を出力する	print ( <name2> if <name2> > <val4> else <val6> )	print ( <name2> if <name2> > <val4> else <val6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> 、 <name2> とする	<name4> , <name5> , <name2> = map ( int , input ( ) . split ( ) )	<name4> , <name5> , <name2> = map ( int , input ( ) . split ( ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name6> とする	<name3> , <name2> , <name6> = map ( str , input ( ) . split ( ) )	<name3> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name5> を <name6> に <val1> を掛けた値に <name2> を加えた値だけ増加させる	<name5> += <name6> * <val1> + <name2>	( <name5> += <name6> * <val1> + <name2> )
<name4> を <val6> 分の一にする	<name4> // = <val6>	( <name4> // = <val6> )
<name3> が、つまり未定値と等しくかつ <name6> が <name3> と等しくない間、次を繰り返す	while <name3> is not None and <name6> != <name3> :	for <name3> in <name3> is not None and <name6> != <name3> :
<name5> の -1 を取り出した値を <name3> とする	<name3> = <name5> . pop ( - 1 )	<name3> = <name5> . pop ( - 1 )
<name2> の <name6> の <val1> 番目、 <name2> の <name6> の <val5> 番目、 <name2> の <name6> の <val4> 番目、 <name2> の <name6> の <val3> 番目を <name2> の <name6> の <val3> 番目、 <name2> の <name6> の <val1> 番目、 <name2> の <name6> の <val5> 番目、 <name2> の <name6> の <val4> 番目とする	<name2> . <name6> [ <val3> ] , <name2> . <name6> [ <val1> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val4> ] = <name2> . <name6> [ <val1> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val4> ] , <name2> . <name6> [ <val3> ]	<name5> . <name2> [ <val3> ] . <name2> [ <name6> . <name2> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val4> ] = <name2> . <name6> [ <val1> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val4> ] , <name2> . <name6> [ <val3> ]
<name6> ( <val3> + <name1> + <val3> * ( <name5> + <name2> ) + <val3> * ( <name4> + <name6> ) + ( <name3> + <name1> ) ) を <name4> とする	<name4> = <name6> ( <val3> + <name1> + <val3> * ( <name5> + <name2> ) + <val3> * ( <name4> + <name6> ) + ( <name3> + <name1> ) )	<name4> = <name6> ( <val3> + <name1> + <val3> * ( <name5> + <name2> ) + <val3> * ( <name4> + <name6> ) + ( <name3> + <name1> ) )
<name2> ( <val3> . <name4> ( <name1> ) )	<name2> ( <val3> . <name4> ( <name1> ) )	<name2> ( <val3> . <name4> ( <name1> ) )
[ <name6> ( <name3> , <name4> , <val1> , [ ] ) foriinrange ( <name2> ) ] の最小値の <val5> 番目の各要素を <name4> とし、 <name5> の <name4> 番目の列を展開してを出力する	print ( * [ <name5> [ <name4> ] for <name4> in min ( [ <name6> ( <name3> , <name4> , <val1> , [ ] ) for <name4> in range ( <name2> ) ] ) [ <val5> ] ] )	end = * [ <name5> [ <name4> ] for <name4> in min ( [ min ( <name6> ( <name3> , <name4> , <val1> , [ ] ) for <name4> in range ( <name2> ) ] ) [ <val5> ] ] )
<name1> の <name6> かつ <name2> の <name4> が、つまり未定値と等しくないとき、	if <name1> . <name6> and <name2> . <name4> is None :	if <name1> . <name6> and <name2> . <name4> != None :
<name4> から <name3> を引いた値の <val2> 乗に <name5> から <name6> を引いた値の <val2> 乗を加えた値の . <val1> 乗を <name6> の <name1> 番目にする	<name6> [ <name1> ] = ( ( <name4> - <name3> ) ** <val2> + ( <name5> - <name6> ) ** <val2> ) ** . <val1>	( <name6> [ <name1> ] = ( <name4> - <name3> ) ** <val2> + ( <name5> - <name6> ) ** <val2> ) ** . <val1>
<name3> 、 <name2> 、 <name2> と <name5> の排他論理和の最小値を <name3> とする	<name3> = min ( <name3> , <name2> , <name2> ^ <name5> )	<name3> = min ( <name3> , <name2> , <name2> ^ <name5> )
<name6> の <name2> の <name3> を返す	return <name6> . <name2> . <name3>	yield <name6> . <name2> . <name3>
<name2> の <name5> 番目の <name1> を <val4> で割った商番目を <val4> との論理和にする	<name2> [ <name5> ] [ <name1> // <val4> ] | = <val4>	( <name2> [ <name5> ] [ <name1> // <val4> ] | = <val4> )
<name2> の <name3> 番目に <val1> を加えた値を <name2> の <name3> 番目にする	<name2> [ <name3> ] = <name2> [ <name3> ] + <val1>	<name2> [ <name3> ] = <name2> [ <name3> ] + <val1>
<name2> ( <name6> -1 ) に <name2> ( <name6> -2 ) を加えた値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name2> ( <name6> - 1 ) + <name2> ( <name6> - 2 )	) <name5> [ <name6> ] = <name2> ( <name6> - 1 ) + <name2> ( <name6> - 2 )
( -1 ) からなる列の <name1> の <name4> 回分の列を <name1> の <name6> にする	<name1> . <name6> = [ - 1 ] * <name1> . <name4>	<name1> . <name6> = [ - 1 ] * <name1> . <name4>
空辞書、空列を <name1> 、 <name5> とする	<name1> , <name5> = { } , [ ]	<name1> , <name5> = { } , [ ]
<name6> が <name4> の <name3> と等しくないとき <name6> 、そうでなければ <val5> を <name6> とする	<name6> = <name6> if <name6> != <name4> . <name3> else <val5>	<name6> = <name6> if <name6> != <name4> . <name3> else <val5>
<name1> ( <name3> - <name4> , <name6> - <name4> ) を <name2> とする	<name2> = <name1> ( <name3> - <name4> , <name6> - <name4> )	<name2> = <name1> ( <name3> - <name4> , <name6> - <name4> )
<name4> の <name6> 番目が <name3> より小さいとき、	if <name4> [ <name6> ] < <name3> :	while <name4> [ <name6> ] < <name3> :
<name3> の <name4> 番目の <name6> から <val2> を引いた値番目を <val1> だけ増加させる	<name3> [ <name4> ] [ <name6> - <val2> ] += <val1>	[ <name3> [ <name4> ] [ <name6> - <val2> ] += <val1>
<name4> に <name6> を掛けた値から <name2> に <name3> を掛けた値を引いた値を返す	return <name4> * <name6> - <name2> * <name3>	yield <name4> * <name6> - <name2> * <name3>
<name6> の末尾に <name5> の <name1> 番目の文字列を追加する	<name6> . append ( str ( <name5> [ <name1> ] ) )	<name4> . append ( str ( <name5> [ <name1> ] ) )
<name3> の末尾に <name4> に <val2> を掛けた値を追加する	<name3> . append ( <name4> * <val2> )	<name3> . append ( <name4> * <val2> )
<name4> の <name6> の <name5> 番目を順に <name3> として、繰り返す	for <name3> in <name4> . <name6> [ <name5> ] :	continue <name4> . <name6> [ <name5> ] :
<name1> が <name5> の長さより小さい間、次を繰り返す	while <name1> < len ( <name5> ) :	try while <name1> < len ( <name5> ) :
<name2> が <name6> と等しいかどうかが <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name6> == <val1> : <blk> break </blk>	list ( <name2> == <name6> == <val1> : <blk> break </blk>
<name2> の <name6> の <name5> 番目を <val3> だけ増加させる	<name2> . <name6> [ <name5> ] += <val3>	( <name2> . <name6> [ <name5> ] += <val3> )
<name6> の <val1> に ( <name5> ) からなる列の <name2> に <val3> を加えた値回分の列を挿入する	<name6> . insert ( <val1> , [ <name5> ] * ( <name2> + <val3> ) )	<name5> . insert ( <val1> , [ <name5> ] * ( <name2> + <val3> ) )
<val5> から <name3> に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , <name3> + <val5> ) :	continue for <name6> in range ( <val5> , <name3> + <val5> ) :
<name1> の先頭の <val5> 乗に <name1> の <val2> 番目の <val5> 乗を加えた値を返す	return <name1> [ 0 ] ** <val5> + <name1> [ <val2> ] ** <val5>	return <name1> [ 0 ] ** <val5> + <name1> [ <val2> ] ** <val5>
文字列 <name6> の先頭に <val1> を加えた値に <name6> の <val5> 番目を加えた値を評価した値が、つまり文字列 <name6> の <val4> 番目を評価した値と等しいとき、	if eval ( <name6> [ 0 ] + <val1> + <name6> [ <val5> ] ) == eval ( <name6> [ <val4> ] ) :	list ( eval ( <name6> [ <val1> ] + <val1> + <name6> [ <val5> ] ) == eval ( <name6> [ <val4> ] ) :
<name5> の <name3> 、 <name1> に <val4> を加えた値の総和に <name1> に <val4> を加えた値に <name5> の <name6> 、 <name1> に <val4> を加えた値の総和を掛けた値を加えた値を <name2> とする	<name2> = <name5> . <name3> . sum ( <name1> + <val4> ) + ( <name1> + <val4> ) * <name5> . <name6> . sum ( <name1> + <val4> )	input = <name5> . <name3> . sum ( <name1> + <val4> ) + ( <name1> + <val4> ) * ( <name5> . <name6> . sum ( <name1> + <val4> ) )
<name2> の <name5> に [ MASK ] を書き込むを <name6> とする	<name6> = <name2> . <name5> . <name6>	<name6> = <name2> . <name5> . <name6>
0 から <name3> 未満までの数列の各要素を <name4> とし、、つまり集合の列を <name6> とする	<name6> = [ set ( ) for <name4> in range ( <name3> ) ]	<name6> = [ set ( ) for <name4> in range ( <name3> ) ]
<name5> から <name5> を <name3> で割った余りを引いた値を <name3> で割った値を <name2> とする	<name2> = ( <name5> - ( <name5> % <name3> ) ) / <name3>	<name2> = ( <name5> - <name5> % <name3> ) / <name3>
<name2> の <name4> が <name5> の <name6> と等しくないとき、	if <name2> . <name4> != <name5> . <name6> :	or <name2> . <name4> != <name5> . <name6> :
無限の整数列が <val5> と等しくない間、次を繰り返す	while count != <val5> :	del count != <val5> :
<name3> から読み込んだ一行の整数値を <name6> とする	<name6> = int ( <name3> . readline ( ) )	<name6> = int ( <name3> . readline ( ) )
<name4> 、 <name2> の最大値を返す	return max ( <name4> , <name2> )	yield max ( <name4> , <name2> )
<name2> かつ <name2> の先頭の <val3> 番目が <name6> 以下の間、次を繰り返す	while <name2> and <name2> [ <val3> ] [ <val3> ] <= <name6> :	for <name2> in <name2> and <name2> [ <val3> ] [ <val3> ] <= <name6> :
<name1> を <name5> から <val3> を引いた値を <val3> で割った商だけ増加させる	<name1> += ( <name5> - <val3> ) // <val3>	<name1> += ( <name5> - <val3> ) // <val3>
<name5> の <name2> を <name3> とする	<name3> = <name5> . <name2>	else = <name5> . <name2>
<name5> が <val1> 以上かどうかを返す	return <name5> >= <val1>	yield <name5> >= <val1>
<name5> の長さが <name3> の長さより小さいとき、 <blk> <name3> を <name5> とする </blk>	if len ( <name5> ) < len ( <name3> ) : <blk> <name5> = <name3> </blk>	while ( len ( <name5> ) < len ( <name3> ) ) : <blk> <name5> = <name3> </blk>
<name3> に <name1> を掛けた値から <name5> に <name4> を掛けた値を引いた値を <name2> とする	<name2> = <name3> * <name1> - <name5> * <name4>	( <name2> = <name3> * <name1> - <name5> * <name4> )
<name3> の先頭を取り出した値を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = <name3> . pop ( )	<name2> , <name4> , <name6> = <name3> . pop ( )
<name2> . <name4> ( <name3> , <name6> ) を返す	return <name2> . <name4> ( <name3> , <name6> )	yield <name2> . <name4> ( <name3> , <name6> )
<name3> の <name1> の <name6> 番目に <name6> に <val5> を加えた値を掛けた値を <name4> で割った余りを <name3> の <name1> の <name6> に <val5> を加えた値番目にする	<name3> . <name1> [ <name6> + <val5> ] = <name3> . <name1> [ <name6> ] * ( <name6> + <val5> ) % <name4>	<name1> [ <name6> + <val5> ] = <name3> . <name1> [ <name6> ] * ( <name6> + <val5> ) % <name4>
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )	<name5> , <name1> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )
入力された文字列の逆順の各要素を <name4> とし、 <name4> の列を <name5> とする	<name5> = [ <name4> for <name4> in input ( ) [ : : - 1 ] ]	<name4> = [ <name4> for <name4> in input ( ) [ : : - 1 ] ]
<name1> の <val2> 番目の整数値から <name6> を引いた値を <name3> とする	<name3> = int ( <name1> [ <val2> ] ) - <name6>	<name3> = int ( <name1> [ <val2> ] ) - <name6>
<name6> から <name1> を引いた値を <name5> とする	<name5> = <name6> - <name1>	<name2> <name5> = <name6> - <name1>
<name5> の末尾に <name4> を <name6> で割った値の整数値の文字列を追加する	<name5> . append ( str ( int ( <name4> / <name6> ) ) )	<name3> . append ( str ( int ( <name4> / <name6> ) ) )
を間に入れて <name4> をソートした列を連結した文字列の整数値を <name2> とする	<name2> = int ( '' . join ( sorted ( <name4> ) ) )	<name2> = int ( '' . join ( sorted ( <name4> ) ) )
\ <val5> を間に入れて <name2> の各要素に整数を適用した列を連結した文字列を出力する\	\ print ( <val5> . join ( map ( str , <name2> ) ) ) \	print ( <val5> . join ( map ( str , <name2> ) ) ) \
<name2> が <name3> 以下の間、次を繰り返す	while <name2> <= <name3> :	del <name2> <= <name3> :
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = map ( float , input ( ) . split ( ) )	<name4> , <name3> = map ( float , input ( ) . split ( ) )
<name2> の <val1> 個までのコンビネーションを順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in combinations ( <name2> , <val1> ) :	( <name4> , <name3> in combinations ( <name2> , <val1> ) :
<name2> の <name5> の <name4> 番目番目のとき、 <blk> <name2> の <name5> の <name4> 番目番目を <val6> だけ減少させる </blk>	if <name2> [ <name5> [ <name4> ] ] : <blk> <name2> [ <name5> [ <name4> ] ] -= <val6> </blk>	for if <name2> [ <name5> [ <name4> ] ] : <blk> <name2> [ <name5> [ <name4> ] ] -= <val6> </blk>
<name3> の <name4> を <name2> の、つまり先頭から、つまり末尾までの部分列にする	<name2> [ : ] = <name3> . <name4>	<name1> [ : ] = <name3> . <name4>
<name2> の <name6> に <name5> 、 <name4> 、 <name1> を追加した集まり	<name2> . <name6> . add ( <name5> , <name4> , <name1> )	<name2> . <name6> . add ( <name5> , <name4> , <name1> )
<name5> の <name3> から読み込んだ行の列を順に <name4> として、繰り返す	for <name4> in <name5> . <name3> . readlines ( ) :	: for <name4> in <name5> . <name3> . readlines ( ) :
<name4> 、 <name5> 、 <name2> の最小値に <name6> 、 <name3> の最小値を加えた値から <val1> を引いた値を出力する	print ( min ( <name4> , <name5> , <name2> ) + min ( <name6> , <name3> ) - <val1> )	print ( min ( <name4> , <name5> , <name2> ) + min ( <name6> , <name3> ) - <val1> )
<name2> の <name1> から <val3> を引いた値番目、 <name2> の <name1> 番目を <name2> の <name1> 番目、 <name2> の <name1> から <val3> を引いた値番目とする	<name2> [ <name1> ] , <name2> [ <name1> - <val3> ] = <name2> [ <name1> - <val3> ] , <name2> [ <name1> ]	<name2> [ <name1> ] , <name2> [ <name1> - <val3> ] = <name2> [ <name1> - <val3> ] , <name2> [ <name1> ]
( <val6> 、 <val4> ) からなる列の ( <name1> - <name3> ) * ( <name2> - <name5> ) から ( <name6> - <name4> ) * ( <name1> - <name3> ) を引いた値の絶対値が <val2> <name5> <val6> より小さいかどうか番目を出力する	print ( [ <val6> , <val4> ] [ abs ( ( <name1> - <name3> ) * ( <name2> - <name5> ) - ( <name6> - <name4> ) * ( <name1> - <name3> ) ) < <val2> <name5> <val6> ] )	print ( [ <val6> , <val4> ] [ abs ( <name1> - <name3> ) * ( <name2> - <name5> ) - ( <name6> - <name4> ) * ( <name1> - <name3> ) ) < <val2> <name5> <val6> ] )
<name2> のうち <val5> 個までの順列を順に <name3> 、 <name4> 、 <name1> 、 <name6> として、繰り返す	for <name3> , <name4> , <name1> , <name6> in permutations ( <name2> , <val5> ) :	. for <name3> , <name4> , <name1> , <name6> in permutations ( <name2> , <val5> ) :
{}を出力する	print ( { dp [ 0 ] [ num_matrix - 1 ] } )	print ( { ( x & 2 ) } )
<val5> の <val2> 乗から <val3> を引いた値を <name1> とする	<name1> = <val5> ** <val2> - <val3>	<name1> = <val5> ** <val2> - <val3>
<name3> のコピーされた列を <name6> の <name3> にする	<name6> . <name3> = <name3> [ : ]	<name1> . <name3> = <name3> [ : ]
<name2> を <name3> ( <name6> ) だけ増加させる	<name2> += <name3> ( <name6> )	<name2> += <name3> ( <name6> )
<val4> が <name3> 以下または <val5> が <name3> 以下かつ <val6> が <name1> 以下または <val6> が <name2> 以下のとき、	if <val4> <= <name3> or <val5> <= <name3> and ( <val6> <= <name1> or <val6> <= <name2> ) :	list ( <val4> <= <name3> or <val5> <= <name3> and <val6> <= <name1> ) or <val6> <= <name2> :
<name4> の <name5> 番目の末尾に <name2> を追加する	<name4> [ <name5> ] . append ( <name2> )	<name3> [ <name5> ] . append ( <name2> )
<name4> の <name2> の <name5> 番目を <name6> の <name1> 番目から <name6> の <name5> 番目を引いた値だけ減少させる	<name4> . <name2> [ <name5> ] -= <name6> [ <name1> ] - <name6> [ <name5> ]	<name6> . <name2> [ <name5> ] -= <name6> [ <name1> ] - <name6> [ <name5> ]
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列の集合を <name1> とする	<name1> = set ( map ( int , input ( ) . strip ( ) . split ( ) ) )	<name1> = set ( map ( int , input ( ) . strip ( ) . split ( ) ) )
0 から <name2> の <name4> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> . <name4> ) :	: for <name5> in range ( <name2> . <name4> ) :
<name3> に <name4> を掛けた値を <val2> で割った値を出力する	print ( <name3> * <name4> / <val2> )	print ( <name3> * <name4> / <val2> )
<name3> が、つまり空列と等しいとき、	if ( <name3> == [ ] ) :	> if <name3> == [ ] :
<name3> の逆順、 <name1> の逆順を <name6> 、 <name5> とする	<name6> , <name5> = <name3> [ : : - 1 ] , <name1> [ : : - 1 ]	<name2> , <name5> = <name3> [ : : - 1 ] , <name1> [ : : - 1 ]
<name4> の <name2> から <val3> を引いた値番目の <name5> の <name1> 番目を <val6> だけ増加させる	<name4> [ <name2> - <val3> ] . <name5> [ <name1> ] += <val6>	<name2> [ <name2> - <val3> ] [ <name5> [ <name1> ] += <val6>
<name4> の <val2> 乗が <name6> 以下の間、次を繰り返す	while <name4> ** <val2> <= <name6> :	del ( <name4> ** <val2> <= <name6> ) :
( <name4> が <name3> と等しくないとき <name4> 、そうでなければ <name6> の各要素を <name4> とし、 <val1> の列 ) からなる列を <name5> とする	<name5> = [ <name4> if <name4> != <name3> else [ <val1> for <name4> in <name6> ] ]	<name5> = [ <name4> if <name4> != <name3> else [ <val1> for <name4> in <name6> ] ]
( ( <val1> 、 <name5> ) の組 ) からなる列の両端キューを <name4> とする	<name4> = deque ( [ ( <val1> , <name5> ) ] )	<name4> = deque ( [ ( <val1> , <name5> ) ] )
<name2> に <val1> を加えた値から <name3> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> + <val1> , <name3> ) :	. for <name4> in range ( <name2> + <val1> , <name3> ) :
<name1> の末尾に <name6> の、つまり先頭から <name4> 番目までの部分列を追加する	<name1> . append ( <name6> [ : <name4> ] )	<name1> . append ( <name6> [ : <name4> ] )
<name3> の <name6> 番目の <name4> に <name5> を加えた値番目が <val1> と等しいとき、	if <name3> [ <name6> ] [ <name4> + <name5> ] == <val1> :	for <name3> in <name3> [ <name6> ] [ <name4> + <name5> ] == <val1> :
<name2> の、つまり先頭から <name3> 番目までの部分列を <name4> とする	<name4> = <name2> [ : <name3> ]	<name3> = <name2> [ : <name3> ]
<name2> のキーと値の集まりを順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name2> . items ( ) :	. for <name3> , <name6> in <name2> . items ( ) :
入力された文字列の整数値、入力された文字列の整数値を <name4> 、 <name3> とする	<name4> , <name3> = int ( input ( ) ) , int ( input ( ) )	<name4> , <name3> = int ( input ( ) ) , int ( input ( ) )
<name2> ( <name5> -1 , <name6> - <name1> ) を <name3> とする	<name3> = <name2> ( <name5> - 1 , <name6> - <name1> )	<name6> = <name2> ( <name5> - 1 , <name6> - <name1> )
<name1> を <name2> の <name3> の <name6> にする	<name2> . <name3> . <name6> = <name1>	( <name2> . <name3> . <name6> = <name1> )
<name3> の <val1> 番目の整数値を <name6> とする	<name6> = int ( <name3> [ <val1> ] )	<name6> = int ( <name3> [ <val1> ] )
<val4> に <name1> を掛けた値に <name6> を掛けた値を <name2> とする	<name2> = <val4> * <name1> * <name6>	<name2> = <val4> * <name1> * <name6>
<name3> を ( <name3> の各要素を <name2> とし、 <name2> に <name5> を加えた値の列 ) の集合との論理和にする	<name3> | = { [ <name2> + <name5> for <name2> in <name3> ] }	<name2> | = <name3> | { [ <name2> + <name5> for <name2> in <name3> ] }
<name2> の <name4> の <name3> 番目が <name2> の <name4> の <name6> 番目より小さいとき、	if <name2> . <name4> [ <name3> ] < <name2> . <name4> [ <name6> ] :	sum ( <name2> . <name4> [ <name3> ] < <name2> . <name4> [ <name6> ] ) :
<name3> の末尾に <name6> の文字列を追加する	<name3> . append ( str ( <name6> ) )	<name3> . append ( str ( <name6> ) )
<name4> を <name6> に <name3> を加えた値で割った余りにする	<name4> % = <name6> + <name3>	( <name4> % = <name6> + <name3> )
<name5> の末尾に ( <name2> 、 <name4> 、 <name3> の <name4> 番目の <name2> 番目 ) の組を追加する	<name5> . append ( ( <name2> , <name4> , <name3> [ <name4> ] [ <name2> ] ) )	<name5> . append ( ( <name2> , <name4> , <name3> [ <name4> ] [ <name2> ] ) )
( 、つまり未定値 ) からなる列の <name5> 回分の列を <name3> の <name4> にする	<name3> . <name4> = [ None ] * <name5>	<name3> . <name4> = [ None ] * <name5>
入力された文字列を空白で分割した字句列の各要素に <name6> をパラメータとして <name6> の整数値から <val3> を引いた値を返す関数を適用した列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = map ( lambda <name6> : int ( <name6> ) - <val3> , input ( ) . split ( ) )	<name4> = map ( lambda <name6> : int ( <name6> ) - <val3> , input ( ) . split ( ) )
<name1> モジュールを用いる	from <name1> import heappop , heappush	return from <name1> import combinations
( <val5> ) からなる列の <name2> に <val3> を加えた値回分の列を <name6> とする	<name6> = [ <val5> ] * ( <name2> + <val3> )	<name6> = [ <val5> ] * ( <name2> + <val3> )
<name2> の <name3> 番目が <name6> の <name5> 番目の <name4> 番目に含まれるとき、	if <name2> [ <name3> ] in <name6> [ <name5> ] [ <name4> ] :	for <name2> [ <name3> ] in <name6> [ <name5> ] [ <name4> ] :
<name4> を展開し、それぞれ <name2> 、 <name3> 、 <name1> とする	<name2> , <name3> , <name1> = <name4>	<name6> , <name3> , <name1> = <name4>
( ( <val6> 、 <val3> ) の組、 ( <val3> 、 -1 ) の組、 ( -1 、 <val3> ) の組、 ( <val3> 、 <val6> ) の組 ) の組を <name5> とする	<name5> = ( ( <val6> , <val3> ) , ( <val3> , - <val6> ) , ( - <val6> , <val3> ) , ( <val3> , <val6> ) )	<name5> = ( ( <val6> , <val3> ) , ( <val3> , - <val6> ) , ( - <val6> , <val3> ) , ( <val3> , <val6> ) )
<name6> が <name5> に含まれなくまたは <name5> の <name6> 番目が <name1> より小さいとき、	if <name6> not in <name5> or <name5> [ <name6> ] < <name1> :	list ( <name6> not in <name5> or <name5> [ <name6> ] < <name1> ) :
<name5> に <name1> を加えた値に <name2> を加えた値が <val4> より小さいとき <val3> 、そうでなければ <val6> を <name2> とする	<name2> = <val3> if <name5> + <name1> + <name2> < <val4> else <val6>	<name2> = <val3> if <name5> + <name1> + <name2> < <val4> else <val6>
<name5> を順に <name3> 、 <name2> として、繰り返す	for <name3> , <name2> in <name5> :	. for <name3> , <name2> in <name5> :
<name3> を <name4> の <name2> の <name1> 番目にする	<name4> . <name2> [ <name1> ] = <name3>	( <name4> . <name2> [ <name1> ] = <name3> )
<name2> ( <name4> , <name6> , <name3> ) を <name4> とする	<name4> = <name2> ( <name4> , <name6> , <name3> )	<name4> = <name2> ( <name4> , <name6> , <name3> )
<name4> の末尾に <name1> から <name6> を引いた値を追加する	<name4> . append ( <name1> - <name6> )	<name5> . append ( <name1> - <name6> )
<name2> の <name5> を <name1> だけ減少させる	<name2> . <name5> -= <name1>	pow ( <name2> . <name5> -= <name1> )
<name2> を <val3> に <name4> を加えた値に <name4> を掛けた値を <val6> で割った商だけ減少させる	<name2> -= ( <val3> + <name4> ) * <name4> // <val6>	<name2> -= ( <val3> + <name4> ) * <name4> // <val6>
<val2> から <val3> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , <val3> ) :	continue for <name6> in range ( <val2> , <val3> ) :
\\\ n を間に入れて <name1> の各要素に <name5> を適用した列の各要素に <name4> をパラメータとして <name3> ( <name4> ) の文字列を返す関数を適用した列を連結した文字列を出力する\	\ print ( '\\n' . join ( map ( ( lambda <name4> : str ( <name3> ( <name4> ) ) ) , map ( <name5> , <name1> ) ) ) ) \	for print ( '\\n' . join ( map ( lambda <name4> : str ( <name3> ( <name4> ) ) , <name1> ) ) ) \
<name5> の末尾に <name6> . <name2> ( ) の先頭を追加する	<name5> . append ( <name6> . <name2> ( ) [ 0 ] )	<name1> . append ( <name6> . <name2> ( ) [ 0 ] )
<val2> から <val6> 未満までの数列の各要素を <name3> とし、 <val2> から <val6> 未満までの数列の各要素を <name1> とし、 <val2> の列の列を <name4> とする	<name4> = [ [ <val2> for <name1> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]	<name4> = [ [ <val2> for <name1> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]
<name5> . <name3> ( ) を出力する	print ( <name5> . <name3> ( ) )	print ( <name5> . <name3> ( ) )
<val6> から <name5> 未満までの数列の各要素を <name1> とし、 ( <val6> ) からなる列の列を <name3> とする	<name3> = [ [ <val6> ] for <name1> in range ( <name5> ) ]	<name3> = [ [ <val6> ] for <name1> in range ( <name5> ) ]
<val4> から <val2> 未満までの数列の各要素を <name6> とし、 <val4> から <val2> 未満までの数列の各要素を <name1> とし、 <val4> の列の列を <name3> とする	<name3> = [ [ <val4> for <name1> in range ( <val2> ) ] for <name6> in range ( <val2> ) ]	<name3> = [ [ <val4> for <name1> in range ( <val2> ) ] for <name6> in range ( <val2> ) ]
<name3> を <name6> との排他的論理和にする	<name3> ^ = <name6>	( <name3> ^ = <name6> )
<val4> を間に入れて <name3> を連結した文字列を <name1> とする	<name1> = <val4> . join ( <name3> )	<name1> = <val4> . join ( <name3> )
<name3> の <val4> 番目かつ <name5> ( <name3> )	<name3> [ <val4> ] and <name5> ( <name3> )	<name3> [ <val4> ] and <name5> ( <name3> )
<name1> から <name6> を引いた値を <name2> とする	<name2> = ( <name1> - <name6> )	dict = <name1> - <name6>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name6> 、 <name2> 、 <name1> 、 <name3> とする	<name5> , <name4> , <name6> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )
<name4> の <name6> 、 <name4> の <name1> 、 <name4> の <name5> 、 <name4> の <name3> を <name4> の <name5> 、 <name4> の <name3> 、 <name4> の <name1> 、 <name4> の <name6> とする	<name4> . <name5> , <name4> . <name3> , <name4> . <name1> , <name4> . <name6> = <name4> . <name6> , <name4> . <name1> , <name4> . <name5> , <name4> . <name3>	<name4> . <name5> , <name4> . <name3> , <name4> . <name1> , <name4> . <name6> = <name4> . <name6> , <name4> . <name1> , <name4> . <name5> , <name4> . <name3>
<name4> に <name5> の <name6> 番目を加えた値が <name3> 以下の間、次を繰り返す	while <name4> + <name5> [ <name6> ] <= <name3> :	del <name4> + <name5> [ <name6> ] <= <name3> :
<name4> の x 座標が <name2> の x 座標より大きくまたは <name4> の x 座標が <name2> の x 座標と等しくかつ <name4> の y 座標が <name2> の y 座標より大きいとき、	if <name4> . x > <name2> . x or ( <name4> . x == <name2> . x and <name4> . y > <name2> . y ) :	list ( <name4> . x > <name2> . x or <name4> . x == <name2> . x and <name4> . <name2> . y ) :
<name1> の <name5> 番目を <name3> だけ増加させる	<name1> [ <name5> ] += <name3>	not <name1> [ <name5> ] += <name3>
<name6> を <name3> で割った商を <name6> とする	<name6> = <name6> // <name3>	( <name6> = <name6> // <name3> )
<name2> の <name4> 番目の長さを <val6> で割った余りが <val5> と等しいとき、	if len ( <name2> [ <name4> ] ) % <val6> == <val5> :	continue len ( <name2> [ <name4> ] ) % <val6> == <val5> :
<name6> を <name3> の <name2> に <name1> を加えた値番目にする	<name3> [ <name2> + <name1> ] = <name6>	( <name3> [ <name2> + <name1> ] = <name6> )
0 から <name3> 未満までの数列の各要素を <name1> とし、 <name4> の <name1> 番目から <name5> の <name1> 番目を引いた値の絶対値の列の総和を <name2> とする	<name2> = sum ( [ math . fabs ( <name4> [ <name1> ] - <name5> [ <name1> ] ) for <name1> in range ( <name3> ) ] )	<name6> = sum ( [ abs ( <name4> [ <name1> ] - <name5> [ <name1> ] ) for <name1> in range ( <name3> ) ] )
<name1> の ( <name3> の <name6> 番目、 <name3> の <name2> 番目 ) の組番目を <val4> だけ増加させる	<name1> [ ( <name3> [ <name6> ] , <name3> [ <name2> ] ) ] += <val4>	<name2> [ ( <name3> [ <name6> ] , <name3> [ <name2> ] ) ] += <val4>
<name1> をパラメータとして <name1> の先頭を返す関数を <name4> として <name3> をソートする	<name3> . sort ( <name4> = lambda <name1> : <name1> [ 0 ] )	<name3> . sort ( <name4> = lambda <name1> : <name1> [ 0 ] )
<name4> かつ <name3> の <name6> 番目が、つまり未定値と等しくないとき、	if <name4> and <name3> [ <name6> ] is None :	for <name4> and <name3> [ <name6> ] is None :
<name1> ( <name5> , <name6> ) を展開し、それぞれ <name3> 、 <name6> とする	<name3> , <name6> = <name1> ( <name5> , <name6> )	<name2> , <name3> , <name6> = <name1> ( <name5> , <name6> )
<name2> のコピーを <name4> とする	<name4> = <name2> . copy ( )	<name2> . <name4> = <name2> . copy ( )
<name3> ( <name4> * <name5> . <name6> , <name4> * <name5> . <name1> ) を返す	return <name3> ( <name4> * <name5> . <name6> , <name4> * <name5> . <name1> )	x return <name3> ( <name4> * <name5> . <name6> , <name4> * <name5> . <name1> )
<name5> ( <name6> , <name1> , <name4> ) を <name3> とする	<name3> = <name5> ( <name6> , <name1> , <name4> )	else = <name5> ( <name6> , <name1> , <name4> )
<name1> の長さから <val3> を引いた値から -1 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( len ( <name1> ) - <val3> , - <val3> , - <val3> ) :	for <name4> in range ( len ( <name1> ) - <val3> , - <val3> , - <val3> ) :
<name2> の <name6> 番目を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = <name2> [ <name6> ]	<name1> , <name3> = <name2> [ <name6> ]
0 から <name6> 未満までの数列の各要素を <name5> とし、 0 から <name6> 未満までの数列の各要素を <name5> とし、、つまり無限大の列の列を <name4> とする	<name4> = [ [ inf for <name5> in range ( <name6> ) ] for <name5> in range ( <name6> ) ]	<name4> = [ [ inf for <name5> in range ( <name6> ) ] for <name5> in range ( <name6> ) ]
<name6> . <name1> ( <name3> ) を返す	return <name6> . <name1> ( <name3> )	yield <name6> . <name1> ( <name3> )
<name1> の <name6> を <name5> の <name4> にする	<name5> . <name4> = <name1> . <name6>	<name1> . <name4> = <name1> . <name6>
<val3> を間に入れて、つまり逆順に <name6> のリストをソートした列を連結した文字列の整数値を <name1> とする	<name1> = int ( <val3> . join ( sorted ( list ( <name6> ) , reverse = True ) ) )	<name1> = int ( <val3> . join ( sorted ( list ( <name6> ) , reverse = True ) ) )
<name6> の <name3> 番目を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name6> [ <name3> ]	( <name4> , <name2> = <name6> [ <name3> ] )
<name2> 、 <name3> の <name6> から <val5> を引いた値番目の最小値を <name2> とする	<name2> = min ( <name2> , <name3> [ <name6> - <val5> ] )	<name2> = min ( <name2> , <name3> [ <name6> - <val5> ] )
<name5> の末尾に ( <name3> 、 <val4> ) からなる列を追加する	<name5> . append ( [ <name3> , <val4> ] )	<name1> . append ( [ <name3> , <val4> ] )
<name6> の <name4> から <val2> を引いた値番目の整数値を <name6> の <name4> に <val2> を加えた値番目の整数値で割った商の文字列を <name6> の <name4> から <val2> を引いた値番目にする	<name6> [ <name4> - <val2> ] = str ( int ( <name6> [ <name4> - <val2> ] ) // int ( <name6> [ <name4> + <val2> ] ) )	<name2> [ <name4> - <val2> ] = str ( int ( <name6> [ <name4> - <val2> ] ) // int ( <name6> [ <name4> + <val2> ] ) )
<name5> が <name2> より小さくかつ <name3> の <name5> 番目の <name1> 番目から <name3> の <name5> 番目の <name4> 番目を引いた値が <name6> より小さい間、次を繰り返す	while <name5> < <name2> and <name3> [ <name5> ] [ <name1> ] - <name3> [ <name5> ] [ <name4> ] < <name6> :	yield ( <name5> < <name2> and <name3> [ <name5> ] [ <name1> ] - <name3> [ <name5> ] [ <name4> ] < <name6> ) :
<name2> の <name6> の <name4> の <val1> 番目番目の末尾に ( <name4> の先頭、 <name4> の <val3> 番目 ) の組を追加する	<name2> . <name6> [ <name4> [ <val1> ] ] . append ( ( <name4> [ 0 ] , <name4> [ <val3> ] ) )	input . <name6> [ <name4> [ <val1> ] ] . append ( ( <name4> [ 0 ] , <name4> [ <val3> ] ) )
-1 を <name6> の <name4> 番目の <name1> 番目にする	<name6> [ <name4> ] [ <name1> ] = - 1	<name6> [ <name4> ] [ <name1> ] = - 1
<val4> に <name3> を掛けた値に <val5> を加えた値を <name3> とする	<name3> = <val4> * <name3> + <val5>	<name3> = <val4> * <name3> + <val5>
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name1> 、 <name5> とする	<name6> , <name4> , <name1> , <name5> = map ( int , <name2> . readline ( ) . split ( ) )	<name4> , <name1> , <name5> = map ( int , <name2> . readline ( ) . split ( ) )
<name1> の <name5> 番目の <name6> 番目が <val4> と等しいとき、	if <name1> [ <name5> ] [ <name6> ] == <val4> :	: if <name1> [ <name5> ] [ <name6> ] == <val4> :
<name4> を <name5> で割った余りが <val2> と等しい間、次を繰り返す	while <name4> % <name5> == <val2> :	while ( <name4> % <name5> ) == <val2> :
<val3> から <val1> 未満までの数列のリストを <name5> とする	<name5> = list ( range ( <val3> , <val1> ) )	<name5> = list ( range ( <val3> , <val1> ) )
<name5> の <val1> 番目を返す	return <name5> [ <val1> ]	yield <name5> [ <val1> ]
<name3> の <name6> の <name4> 番目を一旦、返す	yield <name3> . <name6> [ <name4> ]	global <name3> . <name6> [ <name4> ]
<val5> に <val4> を掛けた値を出力する	print ( <val5> * <val4> )	print ( <val5> * <val4> )
<name6> . <name1> ( <name4> , <name3> ) が <val5> と等しいかどうかを返す	return <name6> . <name1> ( <name4> , <name3> ) == <val5>	x return <name6> . <name1> ( <name4> , <name3> ) == <val5>
<name6> 、 <name2> の要素をそれぞれ組にした列を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in zip ( <name6> , <name2> ) :	( <name4> , <name5> in zip ( <name6> , <name2> ) :
<name2> を <name5> の <name3> 番目だけ増加させる	<name2> += <name5> [ <name3> ]	( <name2> += <name5> [ <name3> ] )
<name6> . <name1> [ <name2> ] . <name3> ( )	<name6> . <name1> [ <name2> ] . <name3> ( )	<name3> . <name1> [ <name2> ] . <name3> ( )
<name2> . <name4> ( <name6> ) を <name6> とする	<name6> = <name2> . <name4> ( <name6> )	<name6> = <name2> . <name4> ( <name6> )
( <name1> 、 <name3> 、 <name6> 、 <name2> ) からなる列を <name4> の <val5> 番目にする	<name4> [ <val5> ] = [ <name1> , <name3> , <name6> , <name2> ]	<name4> [ <val5> ] = [ <name1> , <name3> , <name6> , <name2> ]
<name5> に <val3> を加えた値が <name4> より大きいとき、 <blk> -1 を <name6> とする <sep> 繰り返しを中断する </blk>	if <name5> + <val3> > <name4> : <blk> <name6> = - <val3> <sep> break </blk>	if <name5> + <val3> > <name4> : <blk> <name6> = - 1 <sep> break </blk>
<name6> を <name4> . <name2> ( <name5> , <name3> , <name1> , <name6> ) だけ増加させる	<name6> += <name4> . <name2> ( <name5> , <name3> , <name1> , <name6> )	<name6> += <name4> . <name2> ( <name5> , <name3> , <name1> , <name6> )
<name2> の <name6> の末尾に <name3> を追加する	<name2> . <name6> . append ( <name3> )	<name1> . <name6> . append ( <name3> )
<name2> ( <name5> , ( <name6> . <name3> [ <name4> ] , <name4> ) )	<name2> ( <name5> , ( <name6> . <name3> [ <name4> ] , <name4> ) )	<name4> ( <name5> , ( <name6> . <name3> [ <name4> ] , <name4> ) )
<name2> の <name6> 番目を <name1> だけ増加させる	<name2> [ <name6> ] += <name1>	( <name2> [ <name6> ] += <name1> )
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = map ( int , <name2> ( ) . split ( ) )	<name3> , <name1> = map ( int , <name2> ( ) . split ( ) )
<name1> 、 <name1> の先頭を除いた部分列の要素をそれぞれ組にした列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in zip ( <name1> , <name1> [ 1 : ] ) :	. for <name5> , <name2> in zip ( <name1> , <name1> [ 1 : ] ) :
空辞書を <name1> の <name4> にする	<name1> . <name4> = { }	( <name1> . <name4> = { } )
<name5> . <name6> ( <name1> ) の各要素を <name4> とし、 <name4> の <name3> が <name1> と等しいときの <name4> の <name2> の列の総和を返す	return sum ( [ <name4> . <name2> for <name4> in <name5> . <name6> ( <name1> ) if <name4> . <name3> == <name1> ] )	return sum ( [ <name4> . <name2> for <name4> in <name5> . <name6> ( <name1> ) if <name4> . <name3> == <name1> ] )
<name5> を <name6> の <name3> の <name1> 番目にする	<name6> . <name3> [ <name1> ] = <name5>	<name6> . <name3> [ <name1> ] = <name5>
<name3> に番号付した組の列を順に <name4> 、 <name6> として、繰り返す	for <name4> , <name6> in enumerate ( <name3> ) :	for <name4> , <name6> in enumerate ( <name3> ) :
<name1> の末尾に ( <name3> の <name2> 番目の <name4> 番目、 <name5> に <val6> を加えた値 ) からなる列を追加する	<name1> . append ( [ <name3> [ <name2> ] [ <name4> ] , <name5> + <val6> ] )	<name1> . append ( [ <name3> [ <name2> ] [ <name4> ] , <name5> + <val6> ] )
<name2> に <name4> を加えた値が <name5> の <name1> 番目より小さいとき、	if <name2> + <name4> < <name5> [ <name1> ] :	raise <name2> + <name4> < <name5> [ <name1> ] :
( <name6> ) からなる列の <name1> に <val2> を加えた値回分の列を <name4> とする	<name4> = [ <name6> ] * ( <name1> + <val2> )	<name4> = [ <name6> ] * ( <name1> + <val2> )
<val5> を開始番号として <name4> の先頭を除いた部分列に番号付した組の列の各要素を <name1> 、 <name2> とし、 <name2> の <name1> 番目の各要素を <name1> とし、 <name2> + <name1> [ <val5> ] に <name4> [ <name1> [ <val3> ] ] を加えた値を <val6> で割った値の列の最大値の列を <name6> とする	<name6> = [ max ( [ ( <name2> + <name1> [ <val5> ] + <name4> [ <name1> [ <val3> ] ] ) / <val6> for <name1> in <name2> [ <name1> ] ] ) for <name1> , <name2> in enumerate ( <name4> [ <val5> : ] , start = <val5> ) ]	<name6> = max ( [ ( ( <name2> + <name1> [ <val5> ] + <name4> [ <name1> [ <val3> ] ) / <val6> for <name1> , <name2> in enumerate ( <name2> [ <name1> ] ) ] ) for <name1> in enumerate ( <name4> [ <val5> : ] ) ] , start = <val5> )
<name4> の <name6> 番目を <name1> の <name6> 番目だけ増加させる	<name4> [ <name6> ] += <name1> [ <name6> ]	<name2> [ <name6> ] += <name1> [ <name6> ]
<name1> が <val2> より大きいとき <name4> に <val5> に <name1> から <val3> を引いた値を掛けた値に <name1> から <val2> を引いた値を掛けた値を加えた値、そうでなければ <val6> を <name4> とする	<name4> = <name4> + <val5> * ( <name1> - <val3> ) * ( <name1> - <val2> ) if <name1> > <val2> else <val6>	<name4> = <name4> + <val5> * ( <name1> - <val3> ) * ( <name1> - <val2> ) if <name1> > <val2> else <val6>
<name6> <name2> <name5> <name4> <name1>	<name6> <name2> <name5> <name4> <name1>	( <name6> <name2> <name5> <name4> <name1> )
<name4> の y 座標が <name3> の y 座標より大きいとき、	if <name4> . y > <name3> . y :	if <name4> . y > <name3> . y :
<val4> から <name2> に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <name5> の列を <name3> とする	<name3> = [ <name5> for <name5> in range ( <val4> , <name2> + <val4> ) ]	<name3> = [ <name5> for <name5> in range ( <val4> , <name2> + <val4> ) ]
<name4> ( <val2> ) を <name4> ( <val6> ) で割った値に <name5> の x 座標を掛けた値に <name4> ( <val3> ) を <name4> ( <val6> ) で割った値に <name1> の x 座標を掛けた値を加えた値を <name1> とする	<name1> = <name4> ( <val2> ) / <name4> ( <val6> ) * <name5> . x + <name4> ( <val3> ) / <name4> ( <val6> ) * <name1> . x	<name5> = <name4> ( <val2> ) / <name4> ( <val6> ) * <name5> . x + <name4> ( <val3> ) / <name4> ( <val6> ) * <name1> . x
<name3> ( <name6> , <name2> , <name1> , <name4> )	<name3> ( <name6> , <name2> , <name1> , <name4> )	min ( <name3> ( <name6> , <name2> , <name1> , <name4> ) )
<name2> に <name1> の <name6> 番目を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name2> + <name1> [ <name6> ]	( <name4> [ <name3> ] = <name2> + <name1> [ <name6> ] )
\ <name4> に <name3> に <val2> を加えた値を書き込む\	\ <name4> . write ( <name3> + <val2> ) \	while <name4> . <name3> + <val2> \
<name5> の <name6> 番目に <name1> の <name3> を加えた値に <name4> の <name6> 番目を加えた値から <name4> の <name1> の <name2> 番目を引いた値を <name5> の <name1> の <name2> 番目にする	<name5> [ <name1> . <name2> ] = <name5> [ <name6> ] + <name1> . <name3> + <name4> [ <name6> ] - <name4> [ <name1> . <name2> ]	( <name5> [ <name1> . <name2> ] = <name5> [ <name6> ] + <name1> [ <name3> ] + <name4> [ <name6> ] - <name4> [ <name1> . <name2> ] )
<name3> . <name1> ( <name2> ) のとき、	if <name3> . <name1> ( <name2> ) :	continue <name3> . <name1> ( <name2> ) :
<name1> の各要素を <name2> とし、 <name3> に <name2> を掛けた値の列を <name5> とする	<name5> = [ <name3> * <name2> for <name2> in <name1> ]	<name5> = [ <name3> * <name2> for <name2> in <name1> ]
<name6> から <name2> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> , <name2> ) :	for <name4> in range ( <name6> , <name2> ) :
<name2> の <name3> 番目を <name5> とする <name2> の <name6> 番目を <name4> とする	<name5> = <name2> [ <name3> ] <name4> = <name2> [ <name6> ]	<name1> = <name2> [ <name3> ] <name4> = <name2> [ <name6> ]
<name4> の <name2> 番目が <name1> 以下かどうかが <name6> の <name2> 番目以下でないとき、	if not ( <name4> [ <name2> ] <= <name1> <= <name6> [ <name2> ] ) :	while not <name4> [ <name2> ] <= <name1> <= <name6> [ <name2> ] :
E869120 を <name5> とする	<name5> = 'E869120'	<name6> = 'Q' ( in count )
<name1> を順に <name4> 、 <name5> 、 <name2> として、繰り返す	for <name4> , <name5> , <name2> in <name1> :	for <name4> , <name5> , <name2> in <name1> :
0 から <name3> を <val2> で割った商未満までの数列の各要素を <name1> とし、、つまり入力された文字列の整数値の列の総和を出力する	print ( sum ( [ int ( input ( ) ) for <name1> in range ( <name3> // <val2> ) ] ) )	print ( sum ( [ int ( input ( ) ) for <name1> in range ( <name3> // <val2> ) ] ) )
<name2> と <name3> 、 <name6> の和集合	<name2> . union ( <name3> , <name6> )	<name2> . union ( <name3> , <name6> )
( 、つまり未定値 ) からなる列の <name6> 回分の列を <name5> の <name1> にする	<name5> . <name1> = [ None ] * <name6>	<name5> . <name1> = [ None ] * <name6>
<name6> が <name5> の <name2> の <name6> 番目と等しくない間、次を繰り返す	while <name6> != <name5> . <name2> [ <name6> ] :	del <name6> != <name5> . <name2> [ <name6> ] :
<name1> を ( <name2> ) からなる列だけ増加させる	<name1> += [ <name2> ]	( <name1> += [ <name2> ] )
<name1> を <name5> から <name6> を引いた値倍にする	<name1> *= <name5> - <name6>	<name2> *= <name1> *= ( <name5> - <name6> )
<name4> の <name1> 番目の <name2> 番目が ( <val3> 、 <val6> ) からなる列に含まれかつ <name5> の <name1> 番目の <name2> 番目のとき、	if <name4> [ <name1> ] [ <name2> ] in [ <val3> , <val6> ] and <name5> [ <name1> ] [ <name2> ] :	for <name4> in [ <name1> ] [ <name2> ] in [ <val3> , <val6> ] and <name5> [ <name1> ] [ <name2> ] :
insert が <name6> と等しいとき、	if 'insert' == <name6> :	list ( 'insert' == <name6> :
<name3> の <val5> 番目に <name2> に <name6> を掛けた値を加えた値を返す	return <name3> [ <val5> ] + <name2> * <name6>	x return <name3> [ <val5> ] + <name2> * <name6>
<name6> から <val2> 未満までの -1 間隔の数列、 <name1> の要素をそれぞれ組にした列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in zip ( range ( <name6> , <val2> , - 1 ) , <name1> ) :	. for <name5> , <name3> in zip ( range ( <name6> , <val2> , - 1 ) , <name1> ) :
<name5> . <name6> ( <name4> , <name1> )	<name5> . <name6> ( <name4> , <name1> )	<name5> . <name6> ( <name4> , <name1> )
<name2> と <val6> の論理積のとき <val3> 、そうでなければ <name4> と - <name4> の論理積のビット長を <name5> とする	<name5> = <val3> if <name2> & <val6> else ( <name4> & - <name4> ) . bit_length ( )	<name4> = <val3> if <name2> & <val6> else ( <name4> & - <name4> ) . bit_length ( )
<name2> を順に <name3> 、 <name5> 、 <name6> として、繰り返す	for <name3> , <name5> , <name6> in <name2> :	for <name3> , <name5> , <name6> in <name2> :
<name3> の <name4> 乗を出力する	print ( pow ( <name3> , <name4> ) )	print ( <name3> ** <name4> )
<name3> の <name5> 番目が <name6> より小さいとき、	if <name3> [ <name5> ] < <name6> :	continue <name3> [ <name5> ] < <name6> :
( <val4> ) からなる列に ( <val1> ) からなる列の <name2> 回分の列を加えた値を <name3> とする	<name3> = [ <val4> ] + [ <val1> ] * <name2>	<name3> = [ <val4> ] + [ <val1> ] * <name2>
0 から <name3> 未満までの数列の各要素を <name2> とし、 <name1> ( ) の整数値の列の総和を <name3> で割った商を出力する	print ( sum ( [ int ( <name1> ( ) ) for <name2> in range ( <name3> ) ] ) // <name3> )	return sum ( [ int ( <name1> ( ) ) for <name2> in range ( <name3> ) ] ) // <name3> )
<val5> から <val6> 未満までの数列の各要素を <name1> とし、 <val5> から <name3> 未満までの数列の各要素を <name1> とし、 <val5> の列の列を <name4> とする	<name4> = [ [ <val5> for <name1> in range ( <name3> ) ] for <name1> in range ( <val6> ) ]	<name4> = [ [ <val5> for <name1> in range ( <name3> ) ] for <name1> in range ( <val6> ) ]
0 から <name4> の <name1> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> . <name1> ) :	) for <name5> in range ( <name4> . <name1> ) :
<name4> から <name3> を引いた値が <val5> より小さいとき、	if <name4> - <name3> < <val5> :	if <name4> - <name3> < <val5> :
<name2> を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = <name2>	( <name1> , <name3> = <name2> )
<name2> ( <name4> ( <name6> , <name3> ) , <name4> ( <name1> , <name5> ) , <name4> ( <name2> , <name4> ) ) を <name5> とする	<name5> = <name2> ( <name4> ( <name6> , <name3> ) , <name4> ( <name1> , <name5> ) , <name4> ( <name2> , <name4> ) )	<name4> = <name2> ( <name4> ( <name6> , <name3> ) , <name4> ( <name1> , <name5> ) , <name4> ( <name2> , <name4> ) )
<name3> の <name1> 番目を <val2> を <name5> だけ左シフトした値との論理和にする	<name3> [ <name1> ] | = ( <val2> << <name5> )	<name1> [ <name1> ] | = ( <val2> << <name5> )
<name5> が <name3> と等しいかどうかが <val4> と等しいとき、	if <name5> == <name3> == <val4> :	: if <name5> == <name3> == <val4> :
<name2> かつ <name5> の <name2> 番目が <name6> の <name3> 番目以下のとき、	if <name2> and <name5> [ <name2> ] <= <name6> [ <name3> ] :	list if <name2> and <name5> [ <name2> ] <= <name6> [ <name3> ] :
<name1> ( ) の先頭を取り出した値を <name2> とする	<name2> = <name1> ( ) . pop ( )	<name2> = <name1> ( ) . pop ( )
<name6> を <name1> の <name3> 番目だけ増加させる	<name6> += <name1> [ <name3> ]	<name1> [ <name3> ] += <name1> [ <name3> ]
<val3> から <name6> に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val3> , <name6> + <val2> ) :	. for <name5> in range ( <val3> , <name6> + <val2> ) :
<name6> の長さが <name3> の長さより小さいとき、	if len ( <name6> ) < len ( <name3> ) :	list ( len ( <name6> ) < len ( <name3> ) ) :
<name2> の <name6> の <name4> 番目の <name5> 番目を <name1> とする	<name1> = <name2> . <name6> [ <name4> ] [ <name5> ]	<name1> = <name2> . <name6> [ <name4> ] [ <name5> ]
<val6> 、 <val6> 、 <val6> を <name3> 、 <name1> 、 <name4> とする	<name3> , <name1> , <name4> = <val6> , <val6> , <val6>	else , <name3> , <name1> , <name4> = <val6> , <val6> , <val6>
<val5> を <name2> の <name6> 番目の <name3> 番目の <val5> 番目にする	<name2> [ <name6> ] [ <name3> ] [ <val5> ] = <val5>	<name4> [ <name2> ] [ <name3> ] [ <val5> ] = <val5>
ai1333 を <name2> とする	<name2> = 'ai1333'	<name2> = '?' ( in z )
<name6> ( <name2> . <name3> , <name5> )	<name6> ( <name2> . <name3> , <name5> )	set ( <name6> ( <name2> . <name3> , <name5> ) )
( ( -1 、 <val6> ) からなる列、 ( <val6> 、 <val5> ) からなる列、 ( <val5> 、 <val6> ) からなる列、 ( <val6> 、 -1 ) からなる列 ) からなる列を <name3> とする	<name3> = [ [ - <val5> , <val6> ] , [ <val6> , <val5> ] , [ <val5> , <val6> ] , [ <val6> , - <val5> ] ]	else = [ [ - <val6> , <val6> ] , [ <val6> , <val5> ] , [ <val5> , <val6> ] , [ <val6> , - <val6> ] ]
<name6> に <name4> を加えた値を <val3> で割った商を <name2> とする	<name2> = ( <name6> + <name4> ) // <val3>	input = ( <name6> + <name4> ) // <val3>
<name3> の <name1> 番目の最小値を <name2> の <name1> 番目にする	<name2> [ <name1> ] = min ( <name3> [ <name1> ] )	<name2> [ <name1> ] = min ( <name3> [ <name1> ] )
<name1> ( <name5> ) の先頭を除いた部分列を <name4> とする	<name4> = <name1> ( <name5> ) [ 1 : ]	input = <name1> ( <name5> ) [ 1 : ]
<name3> ( <name1> , <name4> , <name6> , <name5> ) を <name2> とする	<name2> = <name3> ( <name1> , <name4> , <name6> , <name5> )	<name2> = <name3> ( <name1> , <name4> , <name6> , <name5> )
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , <name2> . split ( ) )	<name2> , <name3> = map ( int , <name2> . split ( ) )
<name6> に <name6> を掛けた値に <name3> に <name3> を掛けた値を加えた値から <name1> に <name1> を掛けた値を引いた値を <name2> とする	<name2> = <name6> * <name6> + <name3> * <name3> - <name1> * <name1>	<name2> = <name6> * <name6> + <name3> * <name3> - <name1> * <name1>
<name3> の <name4> 番目から <name5> を引いた値が <name2> に含まれるとき、	if ( <name3> [ <name4> ] - <name5> ) in <name2> :	for <name3> in <name3> [ <name4> ] - <name5> in <name2> :
<val3> が <name4> の <val3> 番目以下かどうかが <val5> より小さくかつ <val3> が <name4> の <val6> 番目以下かどうかが <val5> より小さいとき、	if <val3> <= <name4> [ <val3> ] < <val5> and <val3> <= <name4> [ <val6> ] < <val5> :	list ( <val3> <= <name4> [ <val3> ] < <val5> and <val3> <= <name4> [ <val6> ] < <val5> :
<name4> が <name6> の <name3> に含まれるとき、	if <name4> in <name6> . <name3> :	list ( <name4> in <name6> . <name3> ) :
<name4> を ( ( <name5> 、 <name2> ) の組 ) からなる列だけ増加させる	<name4> += [ ( <name5> , <name2> ) ]	<name6> += [ [ ( <name5> , <name2> ) ] ]
<name3> . <name6> ( <name1> , ( <name4> [ <name5> ] , <name5> ) )	<name3> . <name6> ( <name1> , ( <name4> [ <name5> ] , <name5> ) )	<name5> . <name6> ( <name1> , ( <name4> [ <name5> ] , <name5> ) )
<name5> の <name4> 番目から <name1> 番目までの部分列の総和が <name2> の <name6> 番目と等しいとき、	if sum ( <name5> [ <name4> : <name1> ] ) == <name2> [ <name6> ] :	for <name5> in sum ( <name5> [ <name4> : <name1> ] ) == <name2> [ <name6> ] :
{ 0 : . 6 f }を書式として <name1> に <name1> を掛けた値に円周率を掛けた値で整形した文字列、 <val4> を書式として <val5> に <name1> を掛けた値に円周率を掛けた値で整形した文字列を出力する	print ( <val4> . format ( <name1> * <name1> * math . pi ) , <val4> . format ( <val5> * <name1> * math . pi ) )	[ print . format ( <name1> * <name1> * math . pi ) , <val4> . format ( <val5> * <name1> * math . pi ) )
<name5> ( <name6> ) を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name5> ( <name6> )	<name3> , <name2> = <name5> ( <name6> )
<name4> 内の <val1> を <val6> で置き換えた文字列を出力する	print ( <name4> . replace ( <val1> , <val6> ) )	print ( <name4> . replace ( <val1> , <val6> ) )
<name3> ( <name6> , <name4> )	<name3> ( <name6> , <name4> )	<name4> ( <name6> , <name4> )
<name4> に <name6> を掛けた値を出力する	print ( <name4> * <name6> )	print ( <name4> * <name6> )
<val2> から <val3> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , <val3> ) :	: for <name1> in range ( <val2> , <val3> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name6> 、 <name2> 、 <name5> とする	<name4> , <name1> , <name6> , <name2> , <name5> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name6> , <name2> , <name5> = map ( int , input ( ) . split ( ) )
<name3> が <val2> と等しくかつ <name1> が <val2> と等しいとき、	if <name3> == <val2> and <name1> == <val2> :	if <name3> == <val2> and <name1> == <val2> :
<name3> の <val5> 番目を <name3> の <val4> 番目にする	<name3> [ <val4> ] = <name3> [ <val5> ]	<name2> [ <val4> ] = <name3> [ <val5> ]
<name6> の <name5> を <name2> の <name5> の <name1> にする	<name2> . <name5> . <name1> = <name6> . <name5>	<name2> . <name5> . <name1> = <name6> . <name5>
<name4> から読み込んだ一行の末尾から空白改行を取り除いた文字列を <name1> とする	<name1> = <name4> . readline ( ) . rstrip ( )	<name1> = <name4> . readline ( ) . rstrip ( )
<name4> から <name5> を引いた値が <val6> より小さいとき、 <blk> <val6> を返す </blk>	if <name4> - <name5> < <val6> : <blk> return <val6> </blk>	\ return <name4> - <name5> < <val6> : <blk> return <val6> </blk>
<name5> の先頭の長さを <val6> で割った余りが <val4> と等しくかつ <name5> の <val2> 番目の長さを <val6> で割った余りが <val4> と等しいとき、	if len ( <name5> [ <val4> ] ) % <val6> == <val4> and len ( <name5> [ <val2> ] ) % <val6> == <val4> :	if len ( <name5> [ 0 ] ) % <val6> == <val4> and len ( <name5> [ <val2> ] ) % <val6> == <val4> :
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = map ( int , <name3> ( ) . split ( ) )	input , <name5> = map ( int , <name3> ( ) . split ( ) )
\ <name6> ( <val5> . <name4> ( <name1> ) ) \	\ <name6> ( <val5> . <name4> ( <name1> ) ) \	% <name6> ( <val5> . <name4> ( <name1> ) ) \
<name4> に <name2> を加えた値を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name4> + <name2>	( <name3> [ <name1> ] = <name4> + <name2> )
<name4> から <name3> の <name5> の <name6> 番目を引いた値に <name3> の <name5> の <name2> 番目を加えた値を <name3> の <name5> の <name1> 番目にする	<name3> . <name5> [ <name1> ] = <name4> - <name3> . <name5> [ <name6> ] + <name3> . <name5> [ <name2> ]	<name2> . <name5> [ <name1> ] = <name4> - <name3> . <name5> [ <name6> ] + <name3> . <name5> [ <name2> ]
<name2> の <name1> に <val6> を加えた値番目、 <name2> の <name1> 番目を <name2> の <name1> 番目、 <name2> の <name1> に <val6> を加えた値番目とする	<name2> [ <name1> ] , <name2> [ <name1> + <val6> ] = <name2> [ <name1> + <val6> ] , <name2> [ <name1> ]	<name2> [ <name1> ] , <name2> [ <name1> + <val6> ] = <name2> [ <name1> + <val6> ] , <name2> [ <name1> ]
( ( <name3> , <name6> に番号付した組の列の各要素を <name5> 、 <name3> とし、 <name5> の列 ) ) からなる辞書を <name4> とする	<name4> = { <name3> : [ <name5> for <name5> , <name3> in enumerate ( <name6> ) ] }	<name4> = { <name3> : [ <name5> for <name5> , <name3> in enumerate ( <name6> ) ] }
<name1> の <name6> 番目の <name3> 番目が <val5> と等しいとき、	if <name1> [ <name6> ] [ <name3> ] == <val5> :	: if <name1> [ <name6> ] [ <name3> ] == <val5> :
( <val2> 、 <val3> 、 <val6> 、 <val1> 、 <val5> 、 <val4> ) からなる列を <name4> とする	<name4> = [ <val2> , <val3> , <val6> , <val1> , <val5> , <val4> ]	<name4> = [ <val2> , <val3> , <val6> , <val1> , <val5> , <val4> ]
<name2> の <name4> に <name1> を加えた値番目の末尾に <name4> に <name1> を加えた値から <name6> を引いた値を追加する	<name2> [ <name4> + <name1> ] . append ( <name4> + <name1> - <name6> )	<name6> [ <name4> + <name1> ] . append ( <name4> + <name1> - <name6> )
入力された文字列を英大文字に変換した文字列を出力する	print ( input ( ) . upper ( ) )	print ( input ( ) . upper ( ) )
<name1> ( <val3> , <val2> , <val6> ) を <name4> とする	<name4> = <name1> ( <val3> , <val2> , <val6> )	<name4> = <name1> ( <val3> , <val2> , <val6> )
<name4> . <name2> ( <name1> ) のリストを <name3> とする	<name3> = list ( <name4> . <name2> ( <name1> ) )	<name3> = list ( <name4> . <name2> ( <name1> ) )
<name4> の <name6> の <name3> 番目でないとき、	if not <name4> . <name6> [ <name3> ] :	while not <name4> . <name6> [ <name3> ] :
<name3> の <name2> 番目の <name1> 番目のとき、	if <name3> [ <name2> ] [ <name1> ] :	continue if <name3> [ <name2> ] [ <name1> ] :
<name6> を <name5> の <name1> の <name4> 番目にする	<name5> . <name1> [ <name4> ] = <name6>	( <name5> [ <name1> . <name4> ] = <name6> )
<name3> の <name1> 番目、 <name3> の <name5> 番目、 <name3> の <name4> 番目を <name4> 、 <name2> 、 <name6> とする	<name4> , <name2> , <name6> = <name3> [ <name1> ] , <name3> [ <name5> ] , <name3> [ <name4> ]	<name4> , <name2> , <name6> = <name3> [ <name1> ] , <name3> [ <name5> ] , <name3> [ <name4> ]
<name5> に <name3> を加えた値を <val1> だけ右シフトした値を <name2> とする	<name2> = ( <name5> + <name3> ) >> <val1>	<name2> = ( <name5> + <name3> ) >> <val1>
<name4> 内の <name2> と等しい要素を取り除く	<name4> . remove ( <name2> )	not <name4> . remove ( <name2> )
<name5> の <name6> の <name2> 番目番目を <name4> の <name1> 番目の <name2> 番目にする	<name4> [ <name1> ] [ <name2> ] = <name5> [ <name6> [ <name2> ] ]	<name4> [ <name1> ] [ <name2> ] = <name5> [ <name6> [ <name2> ] ]
<name3> の <name4> から <val5> を <val1> を底とする <name3> . <name4> の対数の切り上げ整数値の整数値だけ左シフトした値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> . <name4> , <val5> << int ( math . ceil ( math . log ( <name3> . <name4> , <val1> ) ) ) ) :	. for <name2> in range ( <name3> . <name4> , <val5> << int ( math . log ( <name3> . <name4> , <val5> ) ) ) :
<name5> ( <name4> , <name3> ) を <name6> の <name2> の <name1> 番目にする	<name6> . <name2> [ <name1> ] = <name5> ( <name4> , <name3> )	<name1> . <name2> [ <name1> ] = <name5> ( <name4> , <name3> )
<name4> の <val2> に <name1> を挿入する	<name4> . insert ( <val2> , <name1> )	<name2> . insert ( <val2> , <name1> )
<name5> の <name4> 番目のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name4> ] : <blk> continue </blk>	for if <name5> [ <name4> ] : <blk> continue </blk>
<name6> ( [ <name1> , <name5> ] )	<name6> ( [ <name1> , <name5> ] )	set ( <name6> ( [ <name1> , <name5> ] ) )
<name6> に <name3> を掛けた値に <name5> に <name1> を掛けた値を加えた値を返す	return <name6> * <name3> + <name5> * <name1>	yield <name6> * <name3> + <name5> * <name1>
Preorder を出力する	print ( 'Preorder' )	dict print ( 'Data ' )
<name5> の <name2> 番目の <name1> 番目が <name4> と等しいとき、 <blk> <name3> の <name2> 番目の <name1> 番目を <val6> との論理和にする </blk>	if <name5> [ <name2> ] [ <name1> ] == <name4> : <blk> <name3> [ <name2> ] [ <name1> ] | = <val6> </blk>	\ if <name5> [ <name2> ] [ <name1> ] == <name4> : <blk> <name3> [ <name2> ] [ <name1> ] | = <val6> </blk>
<name2> モジュールを用いる	from <name2> import stdin	from <name2> , deque
<name5> ( <name3> , <name4> ) を <name3> とする	<name3> = <name5> ( <name3> , <name4> )	<name3> = <name5> ( <name3> , <name4> )
<name3> をパラメータとして <name3> の <val4> 番目を返す関数をキーとして <name5> をソートした列を <name1> とする	<name1> = sorted ( <name5> , key = lambda <name3> : <name3> [ <val4> ] )	<name2> = sorted ( <name5> , key = lambda <name3> : <name3> [ <val4> ] )
<val4> 、 <name2> を <name5> 、 <name3> とする	<name5> , <name3> = <val4> , <name2>	( <name5> , <name3> = <val4> , <name2> )
<name6> の <name3> を順に <name1> として、繰り返す	for <name1> in <name6> . <name3> :	: for <name1> in <name6> . <name3> :
<name4> の総和を <name5> で割った値を <name6> とする	<name6> = sum ( <name4> ) / <name5>	<name6> = sum ( <name4> ) / <name5>
<val2> から <name1> を引いた値から <name4> を引いた値を <name3> とする	<name3> = <val2> - <name1> - <name4>	<name3> = <val2> - <name1> - <name4>
( <name1> 、 <name2> ) からなる列を <name5> の <name4> 番目の <val6> 番目にする	<name5> [ <name4> ] [ <val6> ] = [ <name1> , <name2> ]	<name1> [ <name4> ] [ <val6> ] = [ <name1> , <name2> ]
<name3> の <name4> を順に <name2> 、 <name6> として、繰り返す	for <name2> , <name6> in <name3> . <name4> :	. <name2> , <name6> in <name3> . <name4> :
- <name1> を <name5> で割った値に <name2> から <name6> を <val4> で割った値を引いた値を掛けた値に <name3> に <name1> を加えた値を <val4> で割った値を加えた値を <name3> とする	<name3> = - ( <name1> / <name5> ) * ( <name2> - <name6> / <val4> ) + ( <name3> + <name1> ) / <val4>	<name3> = - ( <name1> / <name5> ) * ( <name2> - <name6> / <val4> ) + ( <name3> + <name1> ) / <val4>
<name4> の、つまり先頭から <name5> 番目までの部分列に <name4> の <name5> 番目から <name1> 番目までの部分列の、つまり先頭から、つまり末尾までの -1 間隔による部分列を加えた値に <name4> の <name1> 番目から、つまり末尾までの部分列を加えた値を <name4> とする	<name4> = <name4> [ : <name5> ] + <name4> [ <name5> : <name1> ] [ : : - 1 ] + <name4> [ <name1> : ]	<name3> = <name4> [ : <name5> ] + <name4> [ <name5> : <name1> ] [ : : - 1 ] + <name4> [ <name1> : ]
<name2> 、 <name5> から <name3> を引いた値の絶対値に <name1> から <name4> を引いた値の絶対値を加えた値の最大値を <name2> とする	<name2> = max ( <name2> , abs ( <name5> - <name3> ) + abs ( <name1> - <name4> ) )	<name2> = max ( <name2> , abs ( <name5> - <name3> ) + abs ( <name1> - <name4> ) )
<name1> の <name6> 番目の <name5> 番目を <name4> だけ減少させる	<name1> [ <name6> ] [ <name5> ] -= <name4>	not <name1> [ <name6> ] [ <name5> ] -= <name4>
<name2> が <name5> に含まれるとき、	if <name2> in <name5> :	tuple in <name2> in <name5> :
<name1> ( <name5> -1 ) に <val4> を掛けた値の切り上げ整数値の整数値を返す	return int ( ceil ( <name1> ( <name5> - 1 ) * <val4> ) )	0 return int ( math . ceil ( <name1> ( <name5> - 1 ) * <val4> ) )
<name3> を空白で分割した字句列を順に <name1> として、繰り返す	for <name1> in <name3> . split ( ) :	. for <name1> in <name3> . split ( ) :
<name1> が <name2> 以下のとき ( <name1> 、 <name2> ) の組、そうでなければ ( <name2> 、 <name1> ) の組を <name3> とする	<name3> = ( <name1> , <name2> ) if <name1> <= <name2> else ( <name2> , <name1> )	<name3> = ( <name1> , <name2> ) if <name1> <= <name2> else ( <name2> , <name1> )
<name6> ( <name2> , <name1> , <name3> ) のとき、 <blk> <name5> を <val4> だけ増加させる </blk>	if <name6> ( <name2> , <name1> , <name3> ) : <blk> <name5> += <val4> </blk>	\ <name6> ( <name2> , <name1> , <name3> ) : <blk> <name5> += <val4> </blk>
<val3> に <name1> から <val4> を引いた値を掛けた値を <name2> とする	<name2> = <val3> * ( <name1> - <val4> )	<name2> = <val3> * ( <name1> - <val4> )
<name6> に <val2> を加えた値が <name5> より小さいとき、	if <name6> + <val2> < <name5> :	> <name6> + <val2> < <name5> :
<name1> の x 座標から <name2> の x 座標を引いた値の絶対値が <name4> の <name6> より小さくかつ <name1> の y 座標から <name2> の y 座標を引いた値の絶対値が <name4> の <name6> より小さいとき、	if fabs ( <name1> . x - <name2> . x ) < <name4> . <name6> and fabs ( <name1> . y - <name2> . y ) < <name4> . <name6> :	. if fabs ( <name1> . x - <name2> . x ) < <name4> . <name6> and fabs ( <name1> [ y ] - <name2> . y ) < <name4> . <name6> :
<name1> の長さが <val4> と等しいとき、 <blk> <val6> を返す </blk>	if len ( <name1> ) == <val4> : <blk> return ( <val6> ) </blk>	try len ( <name1> ) == <val4> : <blk> return <val6> </blk>
<name6> . <name1> ( <name2> , ( <name5> , <name4> ) )	<name6> . <name1> ( <name2> , ( <name5> , <name4> ) )	set ( <name6> . <name1> ( <name2> , ( <name5> , <name4> ) ) )
<val6> から <name2> の <name3> に <val6> を加えた値番目の <name5> 番目を引いた値を <name2> の <name3> に <val6> を加えた値番目の <name5> 番目にする	<name2> [ <name3> + <val6> ] [ <name5> ] = <val6> - <name2> [ <name3> + <val6> ] [ <name5> ]	<name3> [ <name3> + <val6> ] [ <name5> ] = <val6> - <name2> [ <name3> + <val6> ] [ <name5> ]
<name2> ( <name4> , <name6> , <name5> ) を <name5> とする	<name5> = <name2> ( <name4> , <name6> , <name5> )	else = <name2> ( <name4> , <name6> , <name5> )
<name5> をパラメータとして ( <name5> の <val2> 番目、 <name5> の先頭 ) の組を返す関数を <name6> として <name3> をソートする	<name3> . sort ( <name6> = lambda <name5> : ( <name5> [ <val2> ] , <name5> [ 0 ] ) )	<name3> . sort ( <name6> = lambda <name5> : ( <name5> [ <val2> ] , <name5> [ 0 ] ) )
<name1> 、 <name3> ( <name5> , <name6> , <name4> + <val2> ) の最小値を <name1> とする	<name1> = min ( <name1> , <name3> ( <name5> , <name6> , <name4> + <val2> ) )	<name1> = min ( <name1> , <name3> ( <name5> , <name6> , <name4> + <val2> ) )
<name5> ( <name4> , <name3> ) を展開し、それぞれ <name3> 、 <name1> 、 <name2> 、 <name6> とする	<name3> , <name1> , <name2> , <name6> = <name5> ( <name4> , <name3> )	<name4> , <name3> , <name1> , <name2> , <name6> = <name5> ( <name4> , <name3> )
<name3> の末尾に <name5> を英小文字に変換した文字列を追加する	<name3> . append ( <name5> . lower ( ) )	<name1> . append ( <name5> . lower ( ) )
文字コード <name5> ( <name6> ) から <name5> ( <val4> ) を引いた値に <name3> を加えた値を <val1> で割った余りに <val4> の順序数を加えた値の文字を <name2> とする	<name2> = chr ( ( <name5> ( <name6> ) - <name5> ( <val4> ) + <name3> ) % <val1> + <name5> ( <val4> ) )	( <name2> = chr ( ( <name5> ( <name6> ) - <name5> ( <val4> ) + <name3> ) % <val1> ) + ord ( <val4> ) )
<name5> が <name6> 以上かつ <name4> の <name5> 番目が <name4> の <name5> から <name6> を引いた値番目と等しくないとき、 <blk> 繰り返しを中断する </blk>	if <name5> >= <name6> and <name4> [ <name5> ] != <name4> [ <name5> - <name6> ] : <blk> break </blk>	try and <name4> [ <name5> ] != <name4> [ <name5> - <name6> ] : <blk> break </blk>
0 から <name5> から <name1> を引いた値に <val4> を加えた値未満までの数列を反転した列を順に <name3> として、繰り返す	for <name3> in reversed ( range ( <name5> - <name1> + <val4> ) ) :	in reversed ( range ( <name5> - <name1> + <val4> ) ) :
<name1> の <val6> 番目を <name1> の <val2> 番目で割った余りが <val3> と等しいとき、	if <name1> [ <val6> ] % <name1> [ <val2> ] == <val3> :	for <name1> in <name1> [ <val6> ] % <name1> [ <val2> ] == <val3> :
<val5> 、 <val4> を間に入れて <name1> . <name2> . <name6> ( ) の各要素に整数を適用した列を連結した文字列を出力する	print ( <val5> , <val4> . join ( map ( str , <name1> . <name2> . <name6> ( ) ) ) )	( <val5> , <val4> . join ( map ( str , <name1> . <name2> . <name6> ( ) ) ) )
<name4> ( <name5> , ( <name3> + <val6> , <name1> , <name2> ) )	<name4> ( <name5> , ( <name3> + <val6> , <name1> , <name2> ) )	<name4> ( <name5> , ( <name3> + <val6> , <name1> , <name2> ) )
<name2> の <name4> に <name1> を加えた値番目を <name5> とする	<name5> = <name2> [ <name4> + <name1> ]	<name5> = <name2> [ <name4> + <name1> ]
<name5> から <val3> を引いた値から <name4> を引いた値を <name4> とする <name5> から <val3> を引いた値から <name6> を引いた値を <name6> とする	<name4> = <name5> - <val3> - <name4> <name6> = <name5> - <val3> - <name6>	<name6> = <name5> - <val3> - <name4> <name6> = <name5> - <val3> - <name6>
<name3> に <val6> を加えた値を <name5> の <name2> 番目の <name4> 番目の <name1> 番目にする	<name5> [ <name2> ] [ <name4> ] [ <name1> ] = <name3> + <val6>	<name1> [ <name2> ] [ <name4> ] [ <name1> ] = <name3> + <val6>
<name5> に <name1> を掛けた値を <name6> で割った余りを <name5> とするを <name3> の <name2> に <val4> を加えた値番目にする	<name3> [ <name2> + <val4> ] = <name5> = <name5> * <name1> % <name6>	<name4> [ <name2> + <val4> ] = <name5> = <name5> * <name1> % <name6>
空列を os . <name4> とする	<name4> = [ ]	( <name4> = [ ] )
<name6> の <name1> の <name2> 番目の <name4> 番目が <name5> と等しくなくかつ <name6> の <name1> の <name4> 番目の <name3> 番目が <name5> と等しくないとき、	if <name6> . <name1> [ <name2> ] [ <name4> ] != <name5> and <name6> . <name1> [ <name4> ] [ <name3> ] != <name5> :	!= <name6> . <name1> [ <name2> ] [ <name4> ] != <name5> and <name6> . <name1> [ <name4> ] [ <name3> ] != <name5> :
<name3> ( <name6> , <name1> , <name4> + <val2> )	<name3> ( <name6> , <name1> , <name4> + <val2> )	<name4> ( <name6> , <name1> , <name4> + <val2> )
( ( <name4> 、未定値 ) の組 ) からなる列を <name6> とする	<name6> = [ ( <name4> , None ) ]	<name6> = [ ( <name4> , None ) ]
: を区切りとして <name1> 、 <name4> 、 <name2> を出力する	print ( <name1> , <name4> , <name2> , sep = ':' )	print ( <name1> , <name4> , <name2> , sep = ':' )
<name4> の <name2> 番目を <val5> だけ増加させる	<name4> [ <name2> ] += <val5>	( <name4> [ <name2> ] += <val5> )
逆順に <name6> をソートした列を <name5> とする	<name5> = sorted ( <name6> , reverse = True )	<name2> = sorted ( <name6> , reverse = True )
入力された文字列を空白で分割した字句列の先頭を除いた部分列の各要素に整数を適用した列を順に <name4> として、繰り返す	for <name4> in map ( int , input ( ) . split ( ) [ 1 : ] ) :	. for <name4> in map ( int , input ( ) . split ( ) [ 1 : ] ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = map ( int , input ( ) . split ( ) )	<name4> , <name1> = map ( int , input ( ) . split ( ) )
<name3> に <name2> に <val4> を加えた値を <name5> で割った余りを加えた値を <name1> の <name3> に <name2> を加えた値番目にする	<name1> [ <name3> + <name2> ] = <name3> + ( ( <name2> + <val4> ) % <name5> )	<name1> [ <name3> + <name2> ] = <name3> + ( <name2> + <val4> ) % <name5>
( 、つまり未定値 ) からなる列の <name4> の <name5> 回分の列を <name4> の <name2> にする	<name4> . <name2> = [ None ] * <name4> . <name5>	<name3> . <name2> = [ None ] * <name4> . <name5>
<name5> の <name1> の <name6> 番目の <name4> 番目番目を <name2> とする	<name2> = <name5> [ <name1> [ <name6> ] [ <name4> ] ]	<name4> = <name5> [ <name1> [ <name6> ] [ <name4> ] ]
<name4> ( <name1> ) を <name3> とする <name4> ( <name5> ) を <name2> とする	<name3> = <name4> ( <name1> ) <name2> = <name4> ( <name5> )	<name2> = <name4> ( <name1> ) <name2> = <name4> ( <name5> )
( 、つまり偽 ) からなる列の <name3> の <name4> 回分の列を <name3> の <name5> にする	<name3> . <name5> = [ False ] * <name3> . <name4>	<name1> . <name5> = [ False ] * <name3> . <name4>
<val5> から <name3> の先頭未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> [ <val5> ] ) :	. for <name2> in range ( <name3> [ <val5> ] ) :
( <name6> ) からなる列を <name2> の <name4> の整数値番目にする	<name2> [ int ( <name4> ) ] = [ <name6> ]	<name4> [ int ( <name4> ) ] = [ <name6> ]
<name6> が <val4> と等しいかどうか	<name6> == <val4>	( <name6> == <val4> )
0 から <name1> 未満までの数列の各要素を <name2> とし、 <name4> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , <name4> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]	<name6> = [ list ( map ( int , <name4> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]
<val6> が <name1> 以下かどうかが <name3> の <name5> より小さくなければならない	assert <val6> <= <name1> < <name3> . <name5>	sep = <val6> <= <name1> < <name3> . <name5>
<name5> ( <name4> . <name6> , <name3> ) を <name2> とする	<name2> = <name5> ( <name4> . <name6> , <name3> )	<name2> = <name5> ( <name4> . <name6> , <name3> )
<name4> の <name1> を <val6> だけ増加させる	<name4> . <name1> += <val6>	( <name4> . <name1> += <val6> )
os . <name2> の末尾を <name6> とする	<name6> = <name2> [ - 1 ]	( <name6> = <name2> [ - 1 ] )
<name4> [ <name6> ] の先頭の文字列に <val5> を加えた値に <name4> の <name6> 番目の <val1> 番目の文字列を加えた値を出力する	print ( str ( <name4> [ <name6> ] [ 0 ] ) + <val5> + str ( <name4> [ <name6> ] [ <val1> ] ) )	print ( str ( <name4> [ <name6> ] [ 0 ] ) + <val5> + str ( <name4> [ <name6> ] [ <val1> ] ) )
<name1> ( <name4> , <name6> ) を <name2> とする	<name2> = <name1> ( <name4> , <name6> )	dict = <name1> ( <name4> , <name6> )
<name1> の <name2> の先頭番目を出力する	print ( <name1> [ <name2> [ 0 ] ] )	print ( <name1> [ <name2> [ 0 ] ] )
<name4> から <name1> 未満までの数列の各要素を <name2> とし、 <name5> の <name2> 番目の列を <name3> とする	<name3> = [ <name5> [ <name2> ] for <name2> in range ( <name4> , <name1> ) ]	<name4> = [ <name5> [ <name2> ] for <name2> in range ( <name4> , <name1> ) ]
<name6> が <name4> より大きいとき、 <blk> <name6> を <name4> とする </blk>	if <name6> > <name4> : <blk> <name4> = <name6> </blk>	\ <name4> = <name6> > <name4> : <blk> <name4> = <name6> </blk>
<val4> 、 <name3> に <val2> を加えた値を <name6> 、 <name3> とする	<name6> , <name3> = <val4> , <name3> + <val2>	<name2> , <name3> = <val4> , <name3> + <val2>
<name1> ( <name3> . <name6> ) を <name4> とする	<name4> = <name1> ( <name3> . <name6> )	<name4> = <name1> ( <name3> . <name6> )
<name3> の <val5> 番目から <name2> の先頭を引いた値を <name1> とする	<name1> = <name3> [ <val5> ] - <name2> [ <val5> ]	<name1> = <name3> [ <val5> ] - <name2> [ <val5> ]
<name2> の <name6> 番目を順に <name5> 、 <name4> 、 <name3> として、繰り返す	for <name5> , <name4> , <name3> in <name2> [ <name6> ] :	for <name5> , <name4> , <name3> in <name2> [ <name6> ] :
( 、つまり未定値 ) からなる列を <name1> とする	<name1> = [ None ]	<name1> = [ None ]
<name2> . <name3> ( <name5> , <name1> )	<name2> . <name3> ( <name5> , <name1> )	( <name2> . <name3> ( <name5> , <name1> ) )
[ MASK ] の両端キューを <name4> とする	<name4> = collections . deque ( )	<name4> = deque ( )
<name6> から <name4> を引いた値を <name1> とする	<name1> = <name6> - <name4>	<name6> = <name6> - <name4>
<name1> の <name6> の <name5> の <val4> 番目と等しい要素の最初の位置番目を <name3> とする	<name3> = <name1> [ <name6> . index ( <name5> [ <val4> ] ) ]	<name4> = <name1> [ <name6> . index ( <name5> [ <val4> ] ) ]
<name4> に <name3> を追加した集まり <name2> に <name1> を追加した集まり	<name4> . add ( <name3> ) <name2> . add ( <name1> )	<name2> . add ( <name3> ) <name2> . add ( <name1> )
<name5> の <name2> の <name4> 番目を <val6> だけ増加させる	<name5> . <name2> [ <name4> ] += <val6>	<name3> . <name2> [ <name4> ] += <val6>
<name1> の末尾に [ MASK ] を追加するを <name6> とする	<name6> = <name1> . <name6>	<name2> = <name1> . append
入力された文字列を <val1> で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を <name4> とする	<name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val1> ) ]	<name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val1> ) ]
<name5> を <val1> で割った余りが <val6> と等しい間、次を繰り返す	while <name5> % <val1> == <val6> :	del <name5> % <val1> == <val6> :
<name3> の <name2> から <val1> を引いた値番目を <name4> とする	<name4> = <name3> [ <name2> - <val1> ]	<name4> = <name3> [ <name2> - <val1> ]
<name6> が <name3> より大きいとき <name3> 、そうでなければ <name6> を <name6> とする	<name6> = <name3> if <name6> > <name3> else <name6>	<name6> = <name3> if <name6> > <name3> else <name6>
<name3> の <name1> 番目を <val5> だけ増加させる	<name3> [ <name1> ] += <val5>	( <name3> [ <name1> ] += <val5> )
<val2> が <name3> 以下かどうかが <val6> より小さいとき、	if <val2> <= <name3> < <val6> :	list if <val2> <= <name3> < <val6> :
<name1> の <name2> 番目を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name1> [ <name2> ]	( <name3> [ <name4> ] = <name1> [ <name2> ] )
<name4> の長さを <name2> とする <name1> の長さを <name6> とする	<name2> = len ( <name4> ) <name6> = len ( <name1> )	<name2> = len ( <name4> ) <name6> = len ( <name1> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = sorted ( map ( int , input ( ) . split ( ) ) )	<name5> , <name3> = sorted ( map ( int , input ( ) . split ( ) ) )
<name2> を <name4> だけ左シフトする	<name2> << = <name4>	pow ( <name2> << = <name4> )
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の浮動小数点数の列を展開し、それぞれ <name4> 、 <name3> 、 <name6> とする	<name4> , <name3> , <name6> = [ float ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name2> , <name4> , <name3> , <name6> = [ float ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name5> の <name2> の <name6> 番目が <name4> の <name1> の <name3> と等しくなくかつ <name5> の <name5> の <name2> 番目の <name6> 番目が <val6> の浮動小数点数と等しくないとき、	if <name5> . <name2> [ <name6> ] != <name4> . <name1> . <name3> and <name5> . <name5> [ <name2> ] [ <name6> ] != float ( <val6> ) :	if <name5> . <name2> [ <name6> ] != <name4> . <name1> [ <name3> ] and <name5> . <name5> [ <name2> ] [ <name6> ] != float ( <val6> ) :
<name3> のラジアンを <name1> とする	<name1> = radians ( <name3> )	( <name1> = math . radians ( <name3> ) )
<name2> の <name1> の <name3> 番目が <name6> の <name1> の <name5> 番目と等しくないとき、	if <name2> . <name1> [ <name3> ] != <name6> . <name1> [ <name5> ] :	!= <name2> . <name1> [ <name3> ] != <name6> . <name1> [ <name5> ] :
<name1> と <val5> の論理積が <val2> と等しいかどうかが <name3> と等しくないとき、	if ( ( <name1> & <val5> ) == <val2> ) != <name3> :	!= ( ( <name1> & <val5> ) == <val2> ) != <name3> :
<name5> に <val6> を掛けた値と <name1> を割ったときの ( 商を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = divmod ( <name5> * <val6> , <name1> )	<name2> , <name5> = divmod ( <name5> * <val6> , <name1> )
<name1> から <name2> を引いた値の <val4> 乗に <name5> から <name3> を引いた値の <val4> 乗を加えた値を返す	return ( <name1> - <name2> ) ** <val4> + ( <name5> - <name3> ) ** <val4>	self = ( <name1> - <name2> ) ** <val4> + ( <name5> - <name3> ) ** <val4>
<name4> の <name1> 番目が <name6> より小さいとき、	if <name4> [ <name1> ] < <name6> :	while <name4> [ <name1> ] < <name6> :
( <val2> ) からなる列の <name5> に <val4> を加えた値回分の列を <name3> とする	<name3> = [ <val2> ] * ( <name5> + <val4> )	else = [ <val2> ] * ( <name5> + <val4> )
<name5> の <name3> 番目の <name2> 番目が <name1> に含まれるとき、	if <name5> [ <name3> ] [ <name2> ] in <name1> :	[ if <name5> [ <name3> ] [ <name2> ] in <name1> :
<name2> の <name1> 番目に <name4> の <name1> 番目を加えた値を <name6> とする	<name6> = <name2> [ <name1> ] + <name4> [ <name1> ]	<name6> = <name2> [ <name1> ] + <name4> [ <name1> ]
<name6> . <name4> ( <name1> , <name5> , <name2> , <val3> )	<name6> . <name4> ( <name1> , <name5> , <name2> , <val3> )	<name4> . <name4> ( <name1> , <name5> , <name2> , <val3> )
<name5> の <name3> に <val4> を加えた値番目の <name2> 番目を <name5> の <name3> 番目の <name2> 番目にする	<name5> [ <name3> ] [ <name2> ] = <name5> [ <name3> + <val4> ] [ <name2> ]	<name2> [ <name3> ] [ <name2> ] = <name5> [ <name3> + <val4> ] [ <name2> ]
<name5> ( <name4> [ <name1> ] ) を <name3> とするを <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name3> = <name5> ( <name4> [ <name1> ] )	<name4> [ <name1> ] = <name3> = <name5> ( <name4> [ <name1> ] )
<name2> の <name6> から <val1> を引いた値番目の <name4> から <val1> を引いた値番目に <name4> に <name2> の <name6> -1 番目の <name4> 番目を掛けた値を加えた値を <name3> で割った余りを <name2> の <name6> 番目の <name4> 番目にする	<name2> [ <name6> ] [ <name4> ] = ( <name2> [ <name6> - <val1> ] [ <name4> - <val1> ] + <name4> * <name2> [ <name6> - <val1> ] [ <name4> ] ) % <name3>	<name4> [ <name6> ] [ <name4> ] = ( <name2> [ <name6> - <val1> ] [ <name4> - <val1> ] + <name4> * <name2> [ <name6> - <val1> ] [ <name4> ] ) % <name3>
<name3> の末尾に ( <name4> 、 <name2> から <val5> を引いた値、 <name6> から <val5> を引いた値 ) の組を追加する	<name3> . append ( ( <name4> , <name2> - <val5> , <name6> - <val5> ) )	<name5> . append ( ( <name4> , <name2> - <val5> , <name6> - <val5> ) )
<val1> を <name2> の <name6> から <val1> を引いた値番目の <name4> から <val1> を引いた値番目にする	<name2> [ <name6> - <val1> ] [ <name4> - <val1> ] = <val1>	<name2> [ <name6> - <val1> ] [ <name4> - <val1> ] = <val1>
<name4> の <name5> から <val2> を引いた値番目の <name1> 番目を <name4> の <name5> 番目の <name1> 番目にする	<name4> [ <name5> ] [ <name1> ] = <name4> [ <name5> - <val2> ] [ <name1> ]	<name4> [ <name5> ] [ <name1> ] = <name4> [ <name5> - <val2> ] [ <name1> ]
- <name2> が <name3> 以下かどうかが <name2> 以下のとき、 <blk> <val5> を返す </blk>	if - <name2> <= <name3> <= <name2> : <blk> return <val5> </blk>	\ if - <name2> <= <name3> <= <name2> : <blk> return <val5> </blk>
( <name3> 、 <name2> に <val1> を加えた値 ) の組を返す	return ( <name3> , <name2> + <val1> )	insort ( <name3> , <name2> + <val1> )
<name6> ( <name2> + <val3> , -1 )	<name6> ( <name2> + <val3> , - <val3> )	<name6> ( <name2> + <val3> , - <val3> )
<name3> が全て数字のとき、	if <name3> . isdigit ( ) :	if <name3> . isdigit ( ) :
<name6> 、 <name2> の最小値を <name2> とする	<name2> = min ( <name6> , <name2> )	<name2> = min ( <name6> , <name2> )
<name3> . <name2> ( <name3> . <name5> [ -1 ] [ <val6> ] , <name1> ) を <name4> とする	<name4> = <name3> . <name2> ( <name3> . <name5> [ - <val6> ] [ <val6> ] , <name1> )	<name4> = <name3> . <name2> ( <name3> . <name5> [ - <val6> ] [ <val6> ] , <name1> )
<name4> の <name6> 番目の <name5> 番目のとき、	if <name4> [ <name6> ] [ <name5> ] :	[ if <name4> [ <name6> ] [ <name5> ] :
<name1> から <name2> を引いた値の絶対値に <name4> を加えた値を <name6> とする <name1> に <name2> を加えた値から <name4> を引いた値を <name5> とする	<name6> = abs ( <name1> - <name2> ) + <name4> <name5> = <name1> + <name2> - <name4>	<name6> = abs ( <name1> - <name2> ) + <name4> <name5> = <name1> + <name2> - <name4>
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列の組の列を <name5> とする	<name5> = [ tuple ( map ( int , <name1> . readline ( ) . split ( ) ) ) for <name4> in range ( <name3> ) ]	<name5> = [ tuple ( map ( int , <name1> . readline ( ) . split ( ) ) ) for <name4> in range ( <name3> ) ]
( <name3> 、 <val4> ) の組を <name6> とする	<name6> = ( <name3> , <val4> )	( <name3> , <val4> ) = ( <name3> , <val4> )
<name6> . <name1> ( <name3> ) を一旦、返す	yield <name6> . <name1> ( <name3> )	global <name6> . <name1> ( <name3> )
<name4> を <name1> . <name3> ( <name5> , <name6> ) だけ増加させる	<name4> += <name1> . <name3> ( <name5> , <name6> )	<name3> += <name1> . <name3> ( <name5> , <name6> )
0 から <name1> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( len ( <name1> ) ) :	) for <name3> in range ( len ( <name1> ) ) :
0 から <name1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の各要素に整数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( int , input ( ) ) ) for <name3> in range ( <name1> ) ]	<name5> = [ list ( map ( int , input ( ) ) ) for <name3> in range ( <name1> ) ]
<name6> を書式として <name4> の x 座標、 <name4> の y 座標で整形した文字列を出力する	print ( <name6> . format ( <name4> . x , <name4> . y ) )	print ( <name6> . format ( <name4> . x , <name4> . y ) )
<name4> 、 <name5> の総和から <name4> 、 <name3> の総和を引いた値を返す	return <name4> . sum ( <name5> ) - <name4> . sum ( <name3> )	x return <name4> . sum ( <name5> ) - <name4> . sum ( <name3> )
<name3> を <name5> で割った商を出力する	print ( <name3> // <name5> )	print ( <name3> // <name5> )
<name3> の <name2> を <name3> の <name6> にする	<name3> . <name6> = <name3> . <name2>	<name3> . <name6> = <name3> . <name2>
<name6> が <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <val1> : <blk> break </blk>	: if <name6> == <val1> : <blk> break </blk>
<name6> に <name2> を加えた値が <name4> 以下のとき、	if <name6> + <name2> <= <name4> :	list ( <name6> + <name2> <= <name4> ) :
<name1> 、 <name2> の最大値の最大値を <name1> とする	<name1> = max ( <name1> , max ( <name2> ) )	<name1> = max ( <name1> , max ( <name2> ) )
<name2> の <name4> から読み込んだ一行の末尾を除いた部分列を <name3> とする	<name3> = <name2> . <name4> . readline ( ) [ : - 1 ]	<name3> = <name2> . <name4> . readline ( ) [ : - 1 ]
<val2> が <name6> より小さいとき、 <blk> <name5> の末尾に ( <name1> 、 <name6> から <val4> を引いた値 ) の組を追加する </blk>	if <val2> < <name6> : <blk> <name5> . append ( ( <name1> , <name6> - <val4> ) ) </blk>	try : <blk> <name5> . append ( ( <name1> , <name6> - <val4> ) ) </blk>
<name6> に <name5> の文字列を加えた値を <name4> とする	<name4> = <name6> + str ( <name5> )	<name4> = <name6> + str ( <name5> )
<name3> の <val2> 乗に <name4> の <val2> 乗を加えた値に <name6> の <val2> 乗を加えた値から <name5> の <val2> 乗を引いた値を <name1> とする	<name1> = <name3> ** <val2> + <name4> ** <val2> + <name6> ** <val2> - <name5> ** <val2>	<name1> = <name3> ** <val2> + <name4> ** <val2> + <name6> ** <val2> - <name5> ** <val2>
<name6> に <name4> を加えた値から <name6> と <name4> の最大公約数を引いた値に <val3> を加えた値を出力する	print ( <name6> + <name4> - ( math . gcd ( <name6> , <name4> ) ) + <val3> )	end = <name6> + <name4> - gcd ( <name6> , <name4> ) + <val3> )
<name4> の末尾に [ MASK ] を追加するを <name6> とする	<name6> = <name4> . append	<name2> = <name4> . append
<val1> が <name5> が <val3> より小さいかどうかと等しいかどうかが <name6> が <val3> より小さいかどうかと等しいかどうかが <name4> が <val3> より小さいかどうかと等しくまたは <val1> が <name5> が <val3> より大きいかどうかと等しいかどうかが <name6> が <val3> より大きいかどうかと等しいかどうかが <name4> が <val3> より大きいかどうかと等しいとき、	if <val1> == ( <name5> < <val3> ) == ( <name6> < <val3> ) == ( <name4> < <val3> ) or <val1> == ( <name5> > <val3> ) == ( <name6> > <val3> ) == ( <name4> > <val3> ) :	for <name4> in <val1> == <name5> < <val3> < <name6> < <val3> < <name4> < <val3> or <val1> == <name5> > <val3> or <name6> > <val3> > <name4> > <val3> :
<name1> の長さが <val4> より大きくかつ <name1> の <val3> 番目が <val2> と等しくまたは <name5> の長さが <val4> より大きくかつ <name5> の <val3> 番目が <val2> と等しくまたは <name6> の長さが <val4> より大きくかつ <name6> の <val3> 番目が <val2> と等しいとき、	if ( len ( <name1> ) > <val4> and <name1> [ <val3> ] == <val2> ) or ( len ( <name5> ) > <val4> and <name5> [ <val3> ] == <val2> ) or ( len ( <name6> ) > <val4> and <name6> [ <val3> ] == <val2> ) :	[ len ( <name1> ) > <val4> and ( <name1> [ <val3> ] == <val2> ) or ( len ( <name5> ) > <val2> and len ( <name6> ) > <val4> ) and len ( <name6> [ <val3> ] == <val2> ) :
入力された文字列の整数値、入力された文字列の整数値を <name4> 、 <name2> とする	<name4> , <name2> = int ( input ( ) ) , int ( input ( ) )	<name4> , <name2> = int ( input ( ) ) , int ( input ( ) )
<name6> . <name5> ( <name3> ) が <val4> 以上のとき、	if <name6> . <name5> ( <name3> ) >= <val4> :	: if <name6> . <name5> ( <name3> ) >= <val4> :
<name4> を <name2> の <name1> の <name6> 番目にする	<name2> . <name1> [ <name6> ] = <name4>	( <name2> . <name1> [ <name6> ] = <name4> )
<name3> の末尾に ( <name5> の整数値、 <name1> の整数値 ) からなる列を追加する	<name3> . append ( [ int ( <name5> ) , int ( <name1> ) ] )	<name1> . append ( [ int ( <name5> ) , int ( <name1> ) ] )
0 から <name4> の <name2> の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( len ( <name4> . <name2> ) ) :	for <name1> in range ( len ( <name4> . <name2> ) ) :
<name1> から <name1> に <val6> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> , <name1> + <val6> ) :	. for <name4> in range ( <name1> , <name1> + <val6> ) :
<name6> を <name2> の末尾の -1 番目にする	<name2> [ - 1 ] [ - 1 ] = <name6>	<name6> [ <name2> [ - 1 ] [ - 1 ] = <name6>
<name5> の各要素を <name3> とし、 <name3> の <name6> の列を <name1> とする	<name1> = [ <name3> . <name6> for <name3> in <name5> ]	<name6> = [ <name3> . <name6> for <name3> in <name5> ]
<name4> の <name5> に <val2> を加えた値番目、 <name4> の <name5> 番目を <name4> の <name5> 番目、 <name4> の <name5> に <val2> を加えた値番目とする	<name4> [ <name5> ] , <name4> [ <name5> + <val2> ] = <name4> [ <name5> + <val2> ] , <name4> [ <name5> ]	<name4> [ <name5> ] , <name4> [ <name5> + <val2> ] = <name4> [ <name5> + <val2> ] , <name4> [ <name5> ]
<name2> の間、次を繰り返す	while ( <name2> ) :	yield ( <name2> ) :
<name3> の順列を順に <name5> として、繰り返す	for <name5> in itertools . permutations ( <name3> ) :	( <name5> in permutations ( <name3> ) :
<name4> ( <name2> , <name5> , <name1> -1 )	<name4> ( <name2> , <name5> , <name1> - 1 )	<name4> ( <name2> , <name5> , <name1> - 1 )
<name2> の <name5> 番目の末尾に <name3> を追加する	<name2> [ <name5> ] . append ( <name3> )	<name1> [ <name5> ] . append ( <name3> )
<name1> ( ) の両端から空白改行を取り除いた文字列を <name5> とする	<name5> = <name1> ( ) . strip ( )	<name5> = <name1> ( ) . strip ( )
<name4> モジュールを用いる	from <name4> import heappush , heappop , heapify	return from <name4> import deque
<name4> の末尾に <name2> を追加する	<name4> . append ( <name2> )	<name3> . append ( <name2> )
<name3> に <val4> * <name5> を加えた値に <val1> に <name2> を掛けた値を加えた値に <val6> に <name3> を掛けた値を加えた値に <val4> に <name5> を掛けた値を加えた値に <val1> に <name2> を掛けた値を加えた値を <name6> とする	<name6> = <name3> + <val4> * <name5> + <val1> * <name2> + <val6> * <name3> + <val4> * <name5> + <val1> * <name2>	<name6> = <name3> + <val4> * <name5> + <val1> * <name2> + <val6> * <name3> + <val4> * <name5> + <val1> * <name2>
<name4> ( <name2> , <name1> ) を <name3> とする	<name3> = <name4> ( <name2> , <name1> )	<name3> = <name4> ( <name2> , <name1> )
<name4> を展開し、それぞれ <name1> 、 <name5> とする <name2> を展開し、それぞれ <name3> 、 <name6> とする <name4> を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name4> <name3> , <name6> = <name2> <name1> , <name5> = <name4>	<name2> , <name1> , <name5> = <name4> <name3> , <name6> = <name2> <name1> , <name5> = <name4>
<name1> の <name5> 番目を <val2> だけ減少させる	<name1> [ <name5> ] -= <val2>	<name1> [ <name5> ] -= <val2>
<name5> に <name1> の <name3> 番目を加えた値を返す	return <name5> + <name1> [ <name3> ]	yield <name5> + <name1> [ <name3> ]
<name5> の <val2> 番目から <name5> の <val1> 番目を引いた値の絶対値を <name4> とする	<name4> = abs ( <name5> [ <val2> ] - <name5> [ <val1> ] )	<name4> = abs ( <name5> [ <val2> ] - <name5> [ <val1> ] )
<name1> が <name2> の <name6> 番目と等しいとき、 <blk> <name6> を <val5> だけ増加させる </blk>	if <name1> == <name2> [ <name6> ] : <blk> <name6> += <val5> </blk>	if <name1> == <name2> [ <name6> ] : <blk> <name6> += <val5> </blk>
<val4> を <name2> として <name5> をソートする	<name5> . sort ( <name2> = <val4> )	<name3> . sort ( <name2> = <val4> )
<name3> 、 <name5> 、 <name2> 、 <name1> を <name5> の <val2> 番目、 <name5> の <val1> 番目、 <name5> の <val6> 番目、 <name5> の <val4> 番目とする	<name5> [ <val2> ] , <name5> [ <val1> ] , <name5> [ <val6> ] , <name5> [ <val4> ] = <name3> , <name5> , <name2> , <name1>	<name5> [ <val2> ] , <name5> [ <val1> ] , <name5> [ <val6> ] , <name5> [ <val4> ] = <name3> , <name5> , <name2> , <name1>
<name2> の <name3> が <name6> の <name3> より小さいかどうかを返す	return <name2> . <name3> < <name6> . <name3>	x return <name2> . <name3> < <name6> . <name3>
<name2> を <name5> で割った商を <name3> とする	<name3> = <name2> // <name5>	( <name3> = <name2> // <name5> )
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name5> 、 <name4> 、 <name6> 、 <name1> 、 <name3> 、 <name2> とする	<name5> , <name4> , <name6> , <name1> , <name3> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name4> , <name6> , <name1> , <name3> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name3> ( ( <name5> , <name2> ) , ( <name4> , <name1> ) ) を一旦、返す	yield <name3> ( ( <name5> , <name2> ) , ( <name4> , <name1> ) )	yield <name3> ( ( <name5> , <name2> ) , ( <name4> , <name1> ) )
<name5> に <name1> から <name2> に <name6> を掛けた値を引いた値を加えた値を <name3> とする	<name3> = <name5> + ( <name1> - <name2> * <name6> )	else = <name5> + ( <name1> - <name2> * <name6> )
0 から <name4> の <name3> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name4> の <name2> にする	<name4> . <name2> = [ [ ] for <name1> in range ( <name4> . <name3> ) ]	) . <name2> = [ [ ] for <name1> in range ( <name4> . <name3> ) ]
<name4> 、 <name1> を <name3> 、 <name6> とする	<name3> , <name6> = <name4> , <name1>	( <name3> , <name6> = <name4> , <name1> )
<name4> が <name1> を <val5> だけ右シフトした値より大きいとき <name2> 、そうでなければ <val6> を出力する	print ( <name2> if <name4> > ( <name1> >> <val5> ) else <val6> )	print ( <name2> if <name4> > <name1> >> <val5> else <val6> )
0 から <name1> 未満までの数列の集合から <name2> を引いた値を <name6> とする	<name6> = set ( range ( <name1> ) ) - <name2>	<name6> = set ( range ( <name1> ) ) - <name2>
<name1> を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = <name1>	( <name3> , <name4> = <name1> )
<name4> が <name1> の <name4> から <val6> を引いた値から、つまり末尾までの部分列に含まれないとき、	if <name4> not in <name1> [ <name4> - <val6> : ] :	while <name4> not in <name1> [ <name4> - <val6> : ] :
<name5> が <name1> と等しいとき、 <blk> <name4> の <name3> 番目を出力する </blk>	if <name5> == <name1> : <blk> print ( <name4> [ <name3> ] ) </blk>	if <name5> == <name1> : <blk> print ( <name4> [ <name3> ] ) </blk>
<name3> の <val5> 番目かつ <name2> ( <name3> )	<name3> [ <val5> ] and <name2> ( <name3> )	( <name3> [ <val5> ] and <name2> ( <name3> ) )
<name1> を追加して <name3> を拡張する	<name3> . extend ( <name1> )	<name3> . extend ( <name1> )
<name4> を <name3> の <name6> の <name2> 番目にする	<name3> . <name6> [ <name2> ] = <name4>	( <name3> . <name6> [ <name2> ] = <name4> )
( <name4> の <val2> 番目に <name1> の先頭を加えた値を <val3> で割った値、 <name4> の <val5> 番目に <name1> の <val5> 番目を加えた値を <val3> で割った値 ) からなる列、 ( 、つまり未定値、未定値 ) からなる列を <name5> 、 <name6> とする	<name5> , <name6> = [ ( <name4> [ <val2> ] + <name1> [ <val2> ] ) / <val3> , ( <name4> [ <val5> ] + <name1> [ <val5> ] ) / <val3> ] , [ None , None ]	<name4> , <name5> , <name6> = [ ( <name4> [ <val2> ] + <name1> [ <val2> ] ) / <val3> , ( <name4> [ <val5> ] + <name1> [ <val5> ] ) / <val3> , [ None ] , [ None , None ]
<name5> と - <name5> の論理積を <name1> とする	<name1> = <name5> & - <name5>	<name1> = <name5> & - <name5>
<name3> モジュールを用いる	from <name3> import pi	from <name3> import combinations
<name3> の <name6> 番目の末尾に ( <name4> 、 <name1> ) の組を追加する	<name3> [ <name6> ] . append ( ( <name4> , <name1> ) )	<name2> [ <name6> ] . append ( ( <name4> , <name1> ) )
( <name5> ) からなる列の <name5> 回分の列を <name4> の <name6> にする	<name4> . <name6> = [ <name5> ] * <name5>	<name4> . <name6> = [ <name5> ] * <name5>
<name2> を <name1> に <name3> を加えた値だけ増加させる	<name2> += <name1> + <name3>	( <name2> += <name1> + <name3> )
ソートされた順序を保ったまま <name3> の先頭を <name4> に挿入できる最後の位置を <name1> とする	<name1> = bisect_right ( <name4> , <name3> [ 0 ] )	<name4> = bisect_right ( <name4> , <name3> [ 0 ] )
<val6> に <name4> を掛けた値に <name2> を加えた値を <name3> とする	<name3> = <val6> * <name4> + <name2>	<name3> = <val6> * <name4> + <name2>
<name6> の <name1> の <name4> を <name6> の <name1> にする	<name6> . <name1> = <name6> . <name1> . <name4>	<name2> . <name1> = <name6> . <name1> . <name4>
<name4> の <name3> を返す	return <name4> . <name3>	yield <name4> . <name3>
<name2> 、 <name4> を <name6> 、入力された文字列とする	<name6> , input = <name2> , <name4>	<name2> , <name6> , input = <name2> , <name4>
文字コード <name3> に <name4> を加えた値から <val2> を引いた値の文字を返す	return chr ( <name3> + <name4> - <val2> )	yield chr ( <name3> + <name4> - <val2> )
<name3> の <name4> の末尾の <val1> 番目を返す	return <name3> . <name4> [ - <val1> ] [ <val1> ]	x return <name3> . <name4> [ - <val1> ] [ <val1> ]
<name6> を <val5> で割った値を <name1> とする	<name1> = <name6> / <val5>	<name1> = <name6> / <val5>
<name6> に <name4> の <name2> に <val1> を加えた値番目の <val5> 番目を加えた値から <name3> を引いた値を <name3> とする	<name3> = <name6> + <name4> [ <name2> + <val1> ] [ <val5> ] - <name3>	<name3> = <name6> + <name4> [ <name2> + <val1> ] [ <val5> ] - <name3>
<name6> の <name1> 番目の末尾に ( <name2> 、 <name4> ) の組を追加する	<name6> [ <name1> ] . append ( ( <name2> , <name4> ) )	<name2> [ <name1> ] . append ( ( <name2> , <name4> ) )
<name6> から <name4> から <name6> を引いた値の絶対値を引いた値を <name4> とする	<name4> = <name6> - abs ( <name4> - <name6> )	<name4> = <name6> - abs ( <name4> - <name6> )
<name6> の <name2> 番目が <name6> の <name2> から <val5> を引いた値番目より小さいとき、	if <name6> [ <name2> ] < <name6> [ <name2> - <val5> ] :	list ( <name6> [ <name2> ] < <name6> [ <name2> - <val5> ] ) :
<name4> に <name5> の <name6> 番目を加えた値を一旦、返す	yield <name4> + <name5> [ <name6> ]	global <name4> + <name5> [ <name6> ]
<name1> ( <name3> , <name2> )	<name1> ( <name3> , <name2> )	not <name1> ( <name3> , <name2> )
ソートされた順序を保ったまま <name2> から <name3> を引いた値を <name6> の <name5> から <name4> を引いた値番目に挿入できる位置を <name1> とする	<name1> = bisect_left ( <name6> [ <name5> - <name4> ] , <name2> - <name3> )	<name6> = bisect . bisect_left ( <name6> [ <name5> - <name4> ] , <name2> - <name3> )
<val4> を <name6> の <name5> 番目の <name3> 番目にする	<name6> [ <name5> ] [ <name3> ] = <val4>	( <name6> [ <name5> ] [ <name3> ] = <val4> )
<name2> の <val1> に <name4> を掛けた値から <val1> に <name4> を掛けた値に <val1> を加えた値までの部分列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name2> [ <val1> * <name4> : <val1> * <name4> + <val1> ]	<name5> , <name6> = <name2> [ <val1> * <name4> : <val1> * <name4> + <val1> ]
<name1> 、 <val2> を出力する	print ( <name1> , <val2> )	print ( <name1> , <val2> )
<name5> の <name4> 番目の <name3> 番目が <val6> と等しいとき、	if <name5> [ <name4> ] [ <name3> ] == <val6> :	continue <name5> [ <name4> ] [ <name3> ] == <val6> :
<name2> が <name5> の <name1> と等しいとき、	if <name2> == <name5> . <name1> :	list ( <name2> == <name5> . <name1> ) :
<name3> が、つまり辞書に含まれないとき、	if <name3> not in dict :	while <name3> not in dict :
<name3> ( <name2> -1 , <name6> ) を <name5> とする	<name5> = <name3> ( <name2> - 1 , <name6> )	<name5> = <name3> ( <name2> - 1 , <name6> )
<val4> 〜 <name5> から <val4> を引いた値の整数乱数を <name2> とする	<name2> = random . randint ( <val4> , <name5> - <val4> )	<name6> . <name2> = random . randint ( <val4> , <name5> - <val4> )
<name1> [ <name3> ] ( <name4> , <name6> ) を返す	return <name1> [ <name3> ] ( <name4> , <name6> )	assert <name1> [ <name3> ] ( <name4> , <name6> )
<name2> . <name6> ( <name4> )	<name2> . <name6> ( <name4> )	set ( <name2> . <name6> ( <name4> ) )
<name5> の <name3> の <name2> 番目の <name1> 番目を <name4> とする	<name4> = <name5> . <name3> [ <name2> ] [ <name1> ]	<name4> = <name5> . <name3> [ <name2> ] [ <name1> ]
<name3> に <name2> を加えた値が <name6> の <name5> 番目の <name4> に <val1> を加えた値番目より小さいとき、	if <name3> + <name2> < <name6> [ <name5> ] [ <name4> + <val1> ] :	for <name3> + <name2> < <name6> [ <name5> ] [ <name4> + <val1> ] :
<name4> 、 <name4> の先頭を除いた部分列の要素をそれぞれ組にした列を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in zip ( <name4> , <name4> [ 1 : ] ) :	for <name3> , <name6> in zip ( <name4> , <name4> [ 1 : ] ) :
<name4> が <val3> と等しくかつ <name1> の長さが <name5> の長さより小さくまたは <name4> が <val2> と等しいとき、	if ( <name4> == <val3> and len ( <name1> ) < len ( <name5> ) ) or <name4> == <val2> :	or <name4> == <val3> and len ( <name1> ) < len ( <name5> ) or <name4> == <val2> :
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = map ( float , input ( ) . split ( ) )	<name3> , <name2> = map ( float , input ( ) . split ( ) )
<name6> ( <name2> , ( <name3> , <name5> , <name4> , <name1> , <name6> ) )	<name6> ( <name2> , ( <name3> , <name5> , <name4> , <name1> , <name6> ) )	set ( <name6> ( <name2> , ( <name3> , <name5> , <name4> , <name1> , <name6> ) ) )
<name5> ( <name4> , <name2> , <name3> + <val6> , <name1> )	<name5> ( <name4> , <name2> , <name3> + <val6> , <name1> )	( <name5> ( <name4> , <name2> , <name3> + <val6> , <name1> ) )
( <val6> ) からなる列の <val1> 回分の列を <name5> とする	<name5> = [ <val6> ] * <val1>	<name5> = [ <val6> ] * <val1>
<name1> が <name5> の <name2> 番目の <name3> 番目の <name4> 番目より小さいとき、	if <name1> < <name5> [ <name2> ] [ <name3> ] [ <name4> ] :	[ if <name1> < <name5> [ <name2> ] [ <name3> ] [ <name4> ] :
<val5> に <val1> を掛けた値を <name6> とする	<name6> = <val5> * <val1>	<name6> = <val5> * <val1>
<name4> . <name6> ( <name2> ) を <name4> の <name3> に <name2> の <name3> を掛けた値で割った値を <name1> とする	<name1> = <name4> . <name6> ( <name2> ) / ( <name4> . <name3> * <name2> . <name3> )	<name6> = <name4> . <name6> ( <name2> ) / ( <name4> . <name3> * <name2> . <name3> )
<name4> の <name2> 番目を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name4> [ <name2> ]	<name2> , <name1> , <name5> = <name4> [ <name2> ]
<name2> ( <name1> , <name6> , <name1> [ <val4> ] )	<name2> ( <name1> , <name6> , <name1> [ <val4> ] )	set ( <name2> ( <name1> , <name6> , <name1> [ <val4> ] ) )
<name2> の末尾に <name4> の <val6> 番目の整数値を追加する	<name2> . append ( int ( <name4> [ <val6> ] ) )	<name2> . append ( int ( <name4> [ <val6> ] ) )
<val4> に <name3> の <val2> 番目を掛けた値に <val5> に <name6> の先頭を掛けた値を加えた値を <val1> で割った値を <name1> の <val2> 番目にする	<name1> [ <val2> ] = ( <val4> * <name3> [ <val2> ] + <val5> * <name6> [ <val2> ] ) / <val1>	<val5> <name1> [ <val2> ] = ( <val4> * <name3> [ <val2> ] + <val5> * <name6> [ <val2> ] ) / <val1>
偽を <name1> の <name4> から <name6> を引いた値に <val3> を加えた値番目にする	<name1> [ <name4> - <name6> + <val3> ] = False	<name5> [ <name1> - <name4> - <name6> + <val3> ] = False
<name2> のキーと値の集まりの先頭を取り出した値を返す	return <name2> . items . pop ( )	yield <name2> . items . pop ( )
<name1> を <name5> ( <name4> ) だけ増加させる	<name1> += <name5> ( <name4> )	( <name1> += <name5> ( <name4> ) )
<name5> の <name3> 番目を <name4> に <val1> に <name3> を掛けた値を加えた値だけ増加させる	<name5> [ <name3> ] += <name4> + <val1> * <name3>	<name2> [ <name3> ] += <name4> + <val1> * <name3>
-1 から <val2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( - 1 , <val2> ) :	for <name5> in range ( - 1 , <val2> ) :
0 から <name1> 未満までの数列の各要素を <name2> とし、 0 から <name6> に <val5> を加えた値未満までの数列の各要素を <name2> とし、 0 から <name1> 未満までの数列の各要素を <name2> とし、 <name3> の列の列の列を <name4> とする	<name4> = [ [ [ <name3> for <name2> in range ( <name1> ) ] for <name2> in range ( <name6> + <val5> ) ] for <name2> in range ( <name1> ) ]	<name4> = [ [ [ <name3> for <name2> in range ( <name1> ) ] for <name2> in range ( <name6> + <val5> ) ] for <name2> in range ( <name1> ) ]
<val2> 、 <val2> 、 <val2> を <name3> 、 <name4> 、 <name5> とする	<name3> , <name4> , <name5> = <val2> , <val2> , <val2>	( <name3> , <name4> , <name5> = <val2> , <val2> , <val2> )
ソートされた順序を保ったまま <name6> の <val5> 番目を <name1> に挿入できる位置を <name4> とする	<name4> = bisect_left ( <name1> , <name6> [ <val5> ] )	<name4> = bisect . bisect_left ( <name1> , <name6> [ <val5> ] )
<name5> の <name6> 番目から <name2> 番目までの部分列を <name3> とする	<name3> = <name5> [ <name6> : <name2> ]	<name3> = <name5> [ <name6> : <name2> ]
<name1> の <val6> 番目が <val6> と等しくかつ <name1> の <val3> 番目が <val6> と等しくかつ <name1> の <val4> 番目が <val6> と等しくかつ <name1> の <val2> 番目が <val6> と等しいとき、	if <name1> [ <val6> ] == <val6> and <name1> [ <val3> ] == <val6> and <name1> [ <val4> ] == <val6> and <name1> [ <val2> ] == <val6> :	> if <name1> [ <val6> ] == <val6> and <name1> [ <val3> ] == <val6> and <name1> [ <val4> ] == <val6> and <name1> [ <val2> ] == <val6> :
<name2> の <val1> 番目を <name6> の <name3> にする	<name6> . <name3> = <name2> [ <val1> ]	<name1> . <name3> = <name2> [ <val1> ]
<name2> ( <name5> , <name4> , <name1> , <name3> ) を <name6> とする	<name6> = <name2> ( <name5> , <name4> , <name1> , <name3> )	<name6> = <name2> ( <name5> , <name4> , <name1> , <name3> )
<name5> の <name2> 乗に対する <val6> の剰余を <name3> とする	<name3> = pow ( <name5> , <name2> , <val6> )	<name3> = pow ( <name5> , <name2> , <val6> )
<name5> の <name3> 番目が -1 と等しくないとき、	if <name5> [ <name3> ] != - 1 :	for <name5> [ <name3> ] != - 1 :
<name2> 、 <name4> の要素をそれぞれ組にした列を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in zip ( <name2> , <name4> ) :	( <name5> , <name6> in zip ( <name2> , <name4> ) :
改行せずに <val5> を書式として <name2> の <name6> から <val4> を引いた値番目で整形した文字列を出力する	print ( <val5> . format ( <name2> [ <name6> - <val4> ] ) , end = '' )	dict . format ( <name2> [ <name6> - <val4> ] ) , end = '' )
<name2> に番号付した組の列を順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in enumerate ( <name2> ) :	for <name4> , <name3> in enumerate ( <name2> ) :
<name2> と <name6> の最大公約数を出力する	print ( gcd ( <name2> , <name6> ) )	print ( gcd ( <name2> , <name6> ) )
<name6> から <name5> を引いた値を <name2> で割った値が <val1> より小さいとき、	if ( <name6> - <name5> ) / <name2> < <val1> :	list ( ( <name6> - <name5> ) / <name2> < <val1> :
<name4> の末尾に ( <val5> に [ MASK ] を加えた値、 -1 ) の組を追加する	<name4> . append ( ( + <val5> , - 1 ) )	<name4> . append ( ( + <val5> , - 1 ) )
\ <name5> ( <val3> % <name4> ) \	\ <name5> ( <val3> % <name4> ) \	) <name5> ( <val3> % <name4> ) \
<name6> . <name3> ( <name5> , <name4> , <name1> ) を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <name6> . <name3> ( <name5> , <name4> , <name1> )	<name2> [ <name5> ] = <name6> . <name3> ( <name5> , <name4> , <name1> )
<val6> から <name5> に <val3> を加えた値未満までの数列の各要素を <name2> とし、 <val6> から <name4> に <val3> を加えた値未満までの数列の各要素を <name1> とし、 <val6> の列の列を <name5> とする	<name5> = [ [ <val6> for <name1> in range ( <name4> + <val3> ) ] for <name2> in range ( <name5> + <val3> ) ]	<name5> = [ [ <val6> for <name1> in range ( <name4> + <val3> ) ] for <name2> in range ( <name5> + <val3> ) ]
<name2> ( * <name4> ( <name3> , <name6> ) )	<name2> ( * <name4> ( <name3> , <name6> ) )	<name6> ( <name2> * <name4> ( <name3> , <name6> ) )
<name4> ( <name3> , ( <name2> , <name6> ) ) を <name1> とする	<name1> = <name4> ( <name3> , ( <name2> , <name6> ) )	<name1> = <name4> ( <name3> , ( <name2> , <name6> ) )
<name4> の辞書カウンタを <name1> とする	<name1> = Counter ( <name4> )	( <name1> = Counter ( <name4> ) )
( -1 ) からなる列の <name4> に <val5> を加えた値回分の列を <name2> とする	<name2> = [ - <val5> ] * ( <name4> + <val5> )	<name2> = [ - <val5> ] * ( <name4> + <val5> )
0 から <name5> 未満までの数列の集合から <name6> の集合を引いた値から <name4> の集合を引いた値の先頭を取り出した値を <name1> とする	<name1> = ( set ( range ( <name5> ) ) - set ( <name6> ) - set ( <name4> ) ) . pop ( )	<name1> = ( set ( range ( <name5> ) ) - set ( <name6> ) - set ( <name4> ) ) . pop ( )
<name6> が <val4> と等しくない間、次を繰り返す	while <name6> != <val4> :	del ( <name6> != <val4> ) :
<name2> に番号付した組の列の各要素を <name3> 、 <name1> とし、 <name1> が <val5> と等しいときの <name3> の列を <name6> とする	<name6> = [ <name3> for <name3> , <name1> in enumerate ( <name2> ) if <name1> == <val5> ]	<name6> = [ <name3> for <name3> , <name1> in enumerate ( <name2> ) if <name1> == <val5> ]
<name5> の <val6> 番目の整数値、 <name5> の <val3> 番目の整数値、 <name5> の <val2> 番目の整数値を <name2> 、 <name1> 、 <name4> とする	<name2> , <name1> , <name4> = int ( <name5> [ <val6> ] ) , int ( <name5> [ <val3> ] ) , int ( <name5> [ <val2> ] )	<name2> , <name1> , <name4> = int ( <name5> [ <val6> ] ) , int ( <name5> [ <val3> ] ) , int ( <name5> [ <val2> ] )
<name3> を <name5> の <val2> 番目にする	<name5> [ <val2> ] = <name3>	( <name5> [ <val2> ] = <name3> )
0 から <val3> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name1> in range ( <val3> ) ]	<name4> = [ [ ] for <name1> in range ( <val3> ) ]
% . 2 f を <name4> の <name3> から <val6> を引いた値番目の最大値で割った余りを出力する	print ( '%.2f' % max ( <name4> [ <name3> - <val6> ] ) )	assert 2 << max ( <name4> [ <name3> - <val6> ] ) )
<val3> を <name1> とするを <name2> とする	<name2> = <name1> = <val3>	<name4> = <name1> = <val3>
<name5> ( ( <name3> , <name1> ) , ( <name2> , <name6> ) ) を <name4> とする	<name4> = <name5> ( ( <name3> , <name1> ) , ( <name2> , <name6> ) )	<name4> = <name5> ( ( <name3> , <name1> ) , ( <name2> , <name6> ) )
<name2> 、 <name3> 、 <name5> 、 <name6> を <name3> の <val5> 番目、 <name3> の <val6> 番目、 <name3> の <val1> 番目、 <name3> の <val4> 番目とする	<name3> [ <val5> ] , <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ <val4> ] = <name2> , <name3> , <name5> , <name6>	<name3> [ <val5> ] , <name3> [ <val6> ] , <name3> [ <val1> ] , <name3> [ <val4> ] = <name2> , <name3> , <name5> , <name6>
辞書のキーと値の集まりを <name1> とする	<name1> = dict ( Counter ( s ) ) . items ( )	<name1> = dict . items ( )
<name3> を <name1> の <name2> 番目の <name6> 番目にする	<name1> [ <name2> ] [ <name6> ] = <name3>	( <name1> [ <name2> ] [ <name6> ] = <name3> )
<name2> ( <name5> / <name1> . <name6> , <name5> / <name1> . <name3> ) を返す	return <name2> ( <name5> / <name1> . <name6> , <name5> / <name1> . <name3> )	yield <name2> ( <name5> / <name1> . <name6> , <name5> / <name1> . <name3> )
<name4> 年 <name6> 月 <name2> 日の日時を <name3> とする	<name3> = datetime . datetime ( <name4> , <name6> , <name2> )	<name3> = datetime . datetime ( <name4> , <name6> , <name2> )
改行せずに 'node {}: parent = {}, depth = {}, {}, [' を出力する	print ( node { i } : parent = { P [ i ] } , depth = { D [ i ] } , { T [ i ] } , [ , end = '' )	, print ( node key key = '' , key = '' , key = '' ) , end = '' )
<name1> の <name5> の <name6> 番目の末尾に <name1> . <name4> ( <name3> , <name2> , <name1> ( <name1> . <name5> [ <name3> ] ) ) を追加する	<name1> . <name5> [ <name6> ] . append ( <name1> . <name4> ( <name3> , <name2> , <name1> ( <name1> . <name5> [ <name3> ] ) ) )	<name5> . <name5> [ <name6> ] . append ( <name1> . <name4> ( <name3> , <name2> , <name1> ( <name1> . <name5> [ <name3> ] ) ) )
<name4> 内の <val3> を <name1> の文字列で置き換えた文字列の整数値を <name6> とする	<name6> = int ( <name4> . replace ( <val3> , str ( <name1> ) ) )	<name6> = int ( <name4> . replace ( <val3> , str ( <name1> ) ) )
<name1> . <name5> ( <name3> )	<name1> . <name5> ( <name3> )	not <name1> . <name5> ( <name3> )
<name4> ( <name1> ( <name2> [ <val6> : ] ) )	<name4> ( <name1> ( <name2> [ <val6> : ] ) )	<name4> ( <name1> ( <name2> [ <val6> : ] ) )
<name4> を <name4> の <val2> 乗から <name5> を引いた値を <val2> に <name4> の <val3> 乗を掛けた値で割った値だけ減少させる	<name4> -= ( ( <name4> ** <val2> - <name5> ) / ( <val2> * <name4> ** <val3> ) )	<name2> -= ( <name4> ** <val2> - <name5> ) / ( <val2> * <name4> ** <val3> )
<name2> の <name5> 番目の末尾に <name4> を追加する	<name2> [ <name5> ] . append ( <name4> )	<name4> [ <name5> ] . append ( <name4> )
<name6> ( <name2> , <name1> , <name5> ) を <name3> とする	<name3> = <name6> ( <name2> , <name1> , <name5> )	else = <name6> ( <name2> , <name1> , <name5> )
<name5> を <val4> だけ左シフトする	<name5> << = <val4>	( <name5> << = <val4> )
os . <name2> の <name4> 番目の <val5> 番目の、つまり先頭から <name2> の <name4> 番目の <val5> 番目の <name3> と等しい要素の最初の位置に <val5> を加えた値までの部分列を <name6> とする	<name6> = <name2> [ <name4> ] [ <val5> ] [ : <name2> [ <name4> ] [ <val5> ] . index ( <name3> ) + <val5> ]	<name4> = <name2> [ <name4> ] [ <val5> ] [ : <name2> [ <name4> ] [ <val5> ] . index ( <name3> ) + <val5> ]
<name4> を <name2> の <name4> 番目にする	<name2> [ <name4> ] = <name4>	( <name2> [ <name4> ] = <name4> )
<name5> の <val2> 番目から、つまり末尾までの部分列の各要素を <name4> とし、 <name4> の整数値でないときの <val2> の列の総和を <name3> とする	<name3> = sum ( [ <val2> for <name4> in <name5> [ <val2> : ] if not int ( <name4> ) ] )	<name6> = sum ( [ <val2> for <name4> in <name5> [ <val2> : ] if not int ( <name4> ) ] )
<name3> を <name2> の <name4> 番目から <name2> の <name1> 番目を引いた値の絶対値だけ増加させる	<name3> += abs ( <name2> [ <name4> ] - <name2> [ <name1> ] )	<name3> += abs ( <name2> [ <name4> ] - <name2> [ <name1> ] )
<name6> の <name3> 番目を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in <name6> [ <name3> ] :	for <name2> , <name5> in <name6> [ <name3> ] :
( <val2> 、 <val4> 、 <val6> 、 <val3> ) からなる列を <name1> とする	<name1> = [ <val2> , <val4> , <val6> , <val3> ]	<name4> = [ <val2> , <val4> , <val6> , <val3> ]
<name6> が <name4> に含まれかつ <name6> が <name5> に含まれなくまたは <name6> が <name1> に含まれるとき、	if <name6> in <name4> and ( ( not <name6> in <name5> ) or <name6> in <name1> ) :	or <name6> in <name4> and <name6> not in <name5> or <name6> not in <name1> :
<name1> を順に <name6> 、 <name2> として、繰り返す	for <name6> , <name2> in <name1> :	. for <name6> , <name2> in <name1> :
<name5> の先頭、 <name5> の <val4> 番目、 <name5> の <val2> 番目、 <name5> の <val6> 番目、 <name5> の <val3> 番目、 <name5> の <val1> 番目を <name5> の先頭、 <name5> の <val6> 番目、 <name5> の <val4> 番目、 <name5> の <val3> 番目、 <name5> の <val2> 番目、 <name5> の <val1> 番目とする	<name5> [ 0 ] , <name5> [ <val6> ] , <name5> [ <val4> ] , <name5> [ <val3> ] , <name5> [ <val2> ] , <name5> [ <val1> ] = <name5> [ 0 ] , <name5> [ <val4> ] , <name5> [ <val2> ] , <name5> [ <val6> ] , <name5> [ <val3> ] , <name5> [ <val1> ]	<name4> [ 0 ] , <name5> [ <val6> ] , <name5> [ <val4> ] , <name5> [ <val3> ] , <name5> [ <val2> ] , <name5> [ <val1> ] = <name5> [ 0 ] , <name5> [ <val4> ] , <name5> [ <val2> ] , <name5> [ <val6> ] , <name5> [ <val3> ] , <name5> [ <val1> ]
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の各要素を <name6> とし、 <name6> から <val3> を引いた値の列を <name5> とする	<name5> = [ <name6> - <val3> for <name6> in map ( int , <name1> ( ) . split ( ) ) ]	<name5> = [ <name6> - <val3> for <name6> in map ( int , <name1> ( ) . split ( ) ) ]
<name2> の <name3> から <val4> を引いた値番目の <name1> 番目のとき、	if <name2> [ <name3> - <val4> ] [ <name1> ] :	if <name2> [ <name3> - <val4> ] [ <name1> ] :
<name5> の <name6> に <name1> を加えた値番目の <name3> に <name4> を加えた値番目が <val2> と等しいとき、	if <name5> [ <name6> + <name1> ] [ <name3> + <name4> ] == <val2> :	for <name5> [ <name6> + <name1> ] [ <name3> + <name4> ] == <val2> :
<name4> が <name5> より大きくまたは <name4> が <name5> と等しくかつ <name6> が <name1> より小さいとき、	if <name4> > <name5> or ( <name4> == <name5> and <name6> < <name1> ) :	if <name4> > <name5> or <name4> == <name5> and <name6> < <name1> :
<name2> の <name5> を <name2> の <name6> にする	<name2> . <name6> = <name2> . <name5>	<name1> . <name6> = <name2> . <name5>
Z を <name4> とする	<name4> = 'Z'	<name2> <name4> . = dict ( )
0 から <name5> の <name1> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( len ( <name5> . <name1> ) ) :	. for <name3> in range ( len ( <name5> . <name1> ) ) :
<name4> の集合と <name5> ( ) を空白で分割した字句列の集合の論理積の長さを出力する	print ( len ( set ( <name4> ) & set ( <name5> ( ) . split ( ) ) ) )	print ( len ( set ( <name4> ) & set ( <name5> ( ) . split ( ) ) ) )
<name4> と <name3> の論理和と <val1> <name5> の論理積を <name2> とする	<name2> = ( <name4> | <name3> ) & <val1> <name5>	input = <name4> | <name3> & <val1> <name5>
ソートされた順序を保ったまま <name3> を <name6> に挿入できる最後の位置を <name4> とする	<name4> = bisect_right ( <name6> , <name3> )	<name4> = bisect_right ( <name6> , <name3> )
<name5> を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name5> :	: for <name2> , <name4> in <name5> :
<name4> の先頭を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = <name4> [ 0 ]	( <name5> , <name3> = <name4> [ 0 ] )
<name2> の <name3> 番目の <name1> 番目を <val5> だけ増加させる	<name2> [ <name3> ] [ <name1> ] += <val5>	<name1> [ <name3> ] [ <name1> ] += <val5>
0 から <name5> を <val6> で割った商に <val4> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> // <val6> + <val4> ) :	) for <name1> in range ( <name5> // <val6> + <val4> ) :
<val1> から <name5> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 <val1> から <name5> に <val3> を加えた値未満までの数列の各要素を <name6> とし、 <val1> の列の列を <name4> の <name2> にする	<name4> . <name2> = [ [ <val1> for <name6> in range ( <name5> + <val3> ) ] for <name4> in range ( <name5> + <val3> ) ]	<name3> . <name2> = [ [ <val1> for <name6> in range ( <name5> + <val3> ) ] for <name4> in range ( <name5> + <val3> ) ]
<name6> . <name2> ( ( <name3> -1 ) >> <name5> )	<name6> . <name2> ( ( <name3> - 1 ) >> <name5> )	set ( <name6> . <name2> ( <name3> - 1 ) >> <name5> )
<name4> の先頭から <name4> の <name6> + <val2> 番目を引いた値の <val2> 乗に <name1> の先頭から <name1> の <name6> + <val2> 番目を引いた値の <val2> 乗を加えた値の <val5> 乗を <name3> とする	<name3> = ( ( <name4> [ 0 ] - <name4> [ <name6> + <val2> ] ) ** <val2> + ( <name1> [ 0 ] - <name1> [ <name6> + <val2> ] ) ** <val2> ) ** <val5>	<name3> = ( ( <name4> [ 0 ] - <name4> [ <name6> + <val2> ] ) ** <val2> + ( <name1> [ 0 ] - <name1> [ <name6> + <val2> ] ) ** <val2> ) ** <val5>
0 から <name5> 未満までの数列の各要素を <name1> とし、 <name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , <name4> . readline ( ) . split ( ) ) ) for <name1> in range ( <name5> ) ]	<name2> = [ list ( map ( int , <name4> . readline ( ) . split ( ) ) ) for <name1> in range ( <name5> ) ]
<name6> を <name2> として <val1> を <name3> として <name5> をソートする	<name5> . sort ( <name2> = <name6> , <name3> = <val1> )	<name3> . sort ( <name2> = <name6> , <name2> = <val1> )
<name3> . <name1> ( <name2> ) を <name6> とする	<name6> = <name3> . <name1> ( <name2> )	<name6> = <name3> . <name1> ( <name2> )
<name5> の末尾に <name6> の <name3> 番目の <name1> 番目を追加する	<name5> . append ( <name6> [ <name3> ] [ <name1> ] )	<name1> . append ( <name6> [ <name3> ] [ <name1> ] )
<name2> の末尾に <name4> の両端から空白改行を取り除いた文字列の整数値を追加する	<name2> . append ( int ( <name4> . strip ( ) ) )	<name2> . append ( int ( <name4> . strip ( ) ) )
<name3> が <val1> に <name4> を掛けた値に <name4> を掛けた値から <name2> を引いた値より大きいとき、	if <name3> > <val1> * <name4> * <name4> - <name2> :	isinstance ( <name3> > <val1> * <name4> * <name4> - <name2> ) :
<name2> の <val1> 番目を <name3> だけ減少させる	<name2> [ <val1> ] -= <name3>	<name1> [ <val1> ] -= <name3>
<name2> の <name6> 番目が <name5> 以下のとき、	if <name2> [ <name6> ] <= <name5> :	or <name2> [ <name6> ] <= <name5> :
<name4> [ <name6> ] . <name5> ( <name4> [ <name3> ] ) のとき、	if <name4> [ <name6> ] . <name5> ( <name4> [ <name3> ] ) :	for <name4> in <name4> [ <name6> ] . <name5> ( <name4> [ <name3> ] ) :
0 から <name5> 未満までの数列の各要素を <name4> とし、 <name6> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列をソートした列を <name3> とする	<name3> = sorted ( [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name4> in range ( <name5> ) ] )	<name3> = sorted ( [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name4> in range ( <name5> ) ] )
<name3> が <val1> と等しくないとき、	if not <name3> == <val1> :	: if <name3> != <val1> :
<name6> ( <name5> , <name2> , <name1> , <val4> ) を <name3> とする	<name3> = <name6> ( <name5> , <name2> , <name1> , <val4> )	else = <name6> ( <name5> , <name2> , <name1> , <val4> )
<name4> の <name3> から <val2> を引いた値番目が <val1> と等しい間、次を繰り返す	while <name4> [ <name3> - <val2> ] == <val1> :	del <name4> [ <name3> - <val2> ] == <val1> :
123456789 を <name4> とする	<name4> = '123456789'	<name2> <name4> . = dict ( )
<name6> を <name2> で割った余りが <val3> と等しいとき、	if <name6> % <name2> == <val3> :	> ( <name6> % <name2> == <val3> ) :
<name2> から <name6> を引いた値が <val1> より大きい間、次を繰り返す	while <name2> - <name6> > <val1> :	for <name2> in <name2> - <name6> > <val1> :
<name5> が <val6> 以上かつ <name2> が <val3> 以下のとき、	if <name5> >= <val6> and <name2> <= <val3> :	if <name5> >= <val6> and <name2> <= <val3> :
<val1> を <name6> の <name4> の <name2> 番目にする	<name6> . <name4> [ <name2> ] = <val1>	<name1> . <name4> [ <name2> ] = <val1>
<name3> と - <name3> の論理積を <name6> とする <name3> に <name6> を加えた値を <name2> とする	<name6> = <name3> & - <name3> <name2> = <name3> + <name6>	<name1> = <name3> & - <name3> <name2> = <name3> + <name6>
<name5> ( <name2> , <name6> , <name3> + <val4> )	<name5> ( <name2> , <name6> , <name3> + <val4> )	<name4> ( <name2> , <name6> , <name3> + <val4> )
入力された文字列を <val1> で分割した字句列のリストを展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = list ( input ( ) . split ( <val1> ) )	<name3> , <name4> = list ( input ( ) . split ( <val1> ) )
<name2> のとき、 <blk> <name1> . <name2> ( ) </blk>	if <name2> : <blk> <name1> . <name2> ( ) </blk>	: if <name2> ( ) : <blk> <name1> . <name2> ( ) </blk>
( <val3> ) からなる列の <name2> から <val4> を引いた値回分の列を順に <name5> として、繰り返す	for <name5> in [ <val3> ] * ( <name2> - <val4> ) :	for <name5> in [ <val3> ] * ( <name2> - <val4> ) :
<name1> ( <name4> ( <name5> ) , <name5> , <name2> , <name3> ( <name6> , <name1> = <val4> ) , <name6> ) を <name6> とする	<name6> = <name1> ( <name4> ( <name5> ) , <name5> , <name2> , <name3> ( <name6> , <name1> = <val4> ) , <name6> )	<name6> = <name1> ( <name4> ( <name5> ) , <name5> , <name2> , <name3> ( <name6> , <name1> = <val4> ) , <name6> )
<name1> ( <val4> , <name6> [ <val4> ] ) を出力する	print ( <name1> ( <val4> , <name6> [ <val4> ] ) )	print ( <name1> ( <val4> , <name6> [ <val4> ] ) )
<name1> に <name4> ( <name3> , <name6> , <name5> ) を追加した集まり	<name1> . add ( <name4> ( <name3> , <name6> , <name5> ) )	<name4> . add ( <name4> ( <name3> , <name6> , <name5> ) )
<name2> に <val1> を掛けた値を <name4> とする	<name4> = <name2> * <val1>	( <name4> = <name2> * <val1> )
<name3> を現在の日時とする	now = <name3>	<name3> = <name3>
<name1> から <name2> を引いた値をセパレータで割った商を返す	return ( <name1> - <name2> ) // sep	yield ( <name1> - <name2> ) // sep
<name2> が <val3> と等しいとき、	if <name2> == <val3> :	list == <val3> :
<name1> 内の <name4> と等しい要素を取り除く	<name1> . remove ( <name4> )	not <name1> . remove ( <name4> )
<name2> に <name2> を掛けた値が <name1> に <name1> を掛けた値に <name4> に <name4> を掛けた値を加えた値と等しくまたは <name1> に <name1> を掛けた値が <name2> に <name2> を掛けた値に <name4> に <name4> を掛けた値を加えた値と等しくまたは <name4> に <name4> を掛けた値が <name1> に <name1> を掛けた値に <name2> に <name2> を掛けた値を加えた値と等しいとき、	if <name2> * <name2> == <name1> * <name1> + <name4> * <name4> or <name1> * <name1> == <name2> * <name2> + <name4> * <name4> or <name4> * <name4> == <name1> * <name1> + <name2> * <name2> :	print ( <name2> * <name2> == <name1> * <name1> + <name1> * <name1> + <name4> * <name4> or <name1> == <name2> * <name2> + <name4> * <name4> or <name4> * <name1> + <name1> * <name2> ) :
<name6> が、つまり未定値と等しいとき、	if <name6> is not None :	while <name6> == None :
<val5> から <name4> の <val5> 乗に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , <name4> ** <val5> + <val2> ) :	( for <name6> in range ( <val5> , <name4> ** <val5> + <val2> ) :
<name2> ( ) を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = map ( int , <name2> ( ) . split ( <val1> ) )	<name3> = map ( int , <name2> ( ) . split ( <val1> ) )
- <name5> の <name3> を返す	return - <name5> . <name3>	x return - <name5> . <name3>
<name2> の <val1> 番目の各要素を <name3> とし、 <name2> の <val6> 番目の列の各要素を <name5> とし、 <name5> に <name3> を加えた値の列を <name4> とする	<name4> = [ <name5> + <name3> for <name5> in [ <name2> [ <val6> ] for <name3> in <name2> [ <val1> ] ] ]	<name6> = [ [ <name5> + <name3> for <name5> in [ <name2> [ <val6> ] for <name3> in <name2> [ <val1> ] ] ]
<name2> を <name6> とするを <name1> の <val4> 番目にする	<name1> [ <val4> ] = <name6> = <name2>	<name1> [ <val4> ] = <name6> = <name2>
<name5> が <name2> から <val3> を引いた値より小さくかつ <name6> の <name5> 番目の <val1> 番目が <name6> の <name5> に <val3> を加えた値番目の <val1> 番目と等しい間、次を繰り返す	while <name5> < <name2> - <val3> and <name6> [ <name5> ] [ <val1> ] == <name6> [ <name5> + <val3> ] [ <val1> ] :	for <name5> in <name5> < <name2> - <val3> and <name6> [ <name5> ] [ <val1> ] == <name6> [ <name5> + <val3> ] [ <val1> ] :
<name6> の <name4> から読み込んだ一行の整数値を <name1> とする	<name1> = int ( <name6> . <name4> . readline ( ) )	<name1> = int ( <name6> . <name4> . readline ( ) )
<name1> の <name5> 番目を順に <name2> 、 <name4> 、 <name6> として、繰り返す	for <name2> , <name4> , <name6> in <name1> [ <name5> ] :	for <name2> , <name4> , <name6> in <name1> [ <name5> ] :
<name1> に <name3> から <name5> を引いた値を加えた値を <name4> とする	<name4> = <name1> + ( <name3> - <name5> )	<name4> = <name1> + ( <name3> - <name5> )
<name1> を <name5> の <name3> の <name2> 番目の <name6> にする	<name5> [ <name3> . <name2> ] . <name6> = <name1>	( <name5> [ <name3> . <name2> ] . <name6> = <name1> )
<val2> を <name5> として <name1> をソートする	<name1> . sort ( <name5> = <val2> )	<name3> . sort ( <name5> = <val2> )
<name2> ( <name6> , <name5> )	<name2> ( <name6> , <name5> )	<name2> ( <name6> , <name5> )
<name2> に <name6> 、 <val5> を追加した集まり	<name2> . add ( <name6> , <val5> )	<name6> . add ( <name6> , <val5> )
<name5> ( <name3> , <name2> + <val1> , <val6> , <val6> , <name4> ) を <name4> とする	<name4> = <name5> ( <name3> , <name2> + <val1> , <val6> , <val6> , <name4> )	<name4> = <name5> ( <name3> , <name2> + <val1> , <val6> , <val6> , <name4> )
<name1> の <name5> に <val2> を加えた値番目を <name6> とする	<name6> = <name1> [ <name5> + <val2> ]	else = <name1> [ <name5> + <val2> ]
<name2> . <name5> ( ) を <name3> とする	<name3> = <name2> . <name5> ( )	<name3> = <name2> . <name5> ( )
<name5> の <name3> 番目に <name4> の <name1> 番目を加えた値、 <name5> の <name1> 番目に <name4> の <name3> 番目を加えた値の最小値に <val6> を加えた値を <name2> とする	<name2> = min ( <name5> [ <name3> ] + <name4> [ <name1> ] , <name5> [ <name1> ] + <name4> [ <name3> ] ) + <val6>	input = min ( <name5> [ <name3> ] + <name4> [ <name1> ] , <name5> [ <name1> ] + <name4> [ <name3> ] ) + <val6>
0 から <name5> 未満までの数列の各要素を <name2> とし、 0 から <val6> 未満までの数列の各要素を <name3> とし、、つまり空列の列の列を <name1> とする	<name1> = [ [ [ ] for <name3> in range ( <val6> ) ] for <name2> in range ( <name5> ) ]	<name6> = [ [ [ ] for <name3> in range ( <val6> ) ] for <name2> in range ( <name5> ) ]
0 から <name4> から <name5> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> - <name5> ) :	for <name2> in range ( <name4> - <name5> ) :
<name2> に <val3> * <name6> を加えた値に <val4> に <name5> を掛けた値を加えた値に <val1> に <name2> を掛けた値を加えた値に <val3> に <name6> を掛けた値を加えた値に <val4> に <name5> を掛けた値を加えた値を <name1> とする	<name1> = <name2> + <val3> * <name6> + <val4> * <name5> + <val1> * <name2> + <val3> * <name6> + <val4> * <name5>	<name1> = <name2> + <val3> * <name6> + <val4> * <name5> + <val1> * <name2> + <val3> * <name6> + <val4> * <name5>
<name2> を <name6> で割った値の <val4> 乗を <name3> とする	<name3> = ( <name2> / <name6> ) ** <val4>	<name3> = ( <name2> / <name6> ) ** <val4>
{} {}を書式として <name6> の最大値、 <name6> の最小値で整形した文字列を出力する	print ( '{} {}' . format ( max ( <name6> ) , min ( <name6> ) ) )	print ( '{} {}' {}' . format ( max ( <name6> ) , min ( <name6> ) ) )
<name1> の <name2> の <name5> 番目の <name6> 番目を返す	return <name1> . <name2> [ <name5> ] [ <name6> ]	return <name1> . <name2> [ <name5> ] [ <name6> ]
<val3> から <val2> 未満までの数列の各要素を <name5> とし、 <val3> から <val6> 未満までの数列の各要素を <name1> とし、 <val3> の列の列を <name4> とする	<name4> = [ [ <val3> for <name1> in range ( <val6> ) ] for <name5> in range ( <val2> ) ]	<name4> = [ [ <val3> for <name1> in range ( <val6> ) ] for <name5> in range ( <val2> ) ]
<name2> の <val1> 番目から <name2> の <val4> 番目を引いた値を <name6> とする	<name6> = <name2> [ <val1> ] - <name2> [ <val4> ]	else = <name2> [ <val1> ] - <name2> [ <val4> ]
<name2> の <val5> 番目が <name2> の <name6> から <val3> を引いた値番目と等しいとき、	if <name2> [ <val5> ] == <name2> [ <name6> - <val3> ] :	continue <name2> [ <val5> ] == <name2> [ <name6> - <val3> ] :
<name5> の各要素を <name1> 、 <name6> とし、 <name1> の列を追加して <name4> を更新する	<name4> . update ( [ <name1> for <name1> , <name6> in <name5> ] )	<name4> . update ( [ <name1> for <name1> , <name6> in <name5> ] )
<name3> の先頭の整数値を <name4> とする	<name4> = int ( <name3> [ 0 ] )	<name4> = int ( <name3> [ 0 ] )
<name3> を <name2> の <name4> 番目の <name5> 番目にする	<name2> [ <name4> ] [ <name5> ] = <name3>	( <name2> [ <name4> ] [ <name5> ] = <name3> )
<name3> 、 <name5> を <name1> 、入力された文字列とする	<name1> , input = <name3> , <name5>	<name1> , input = <name3> , <name5>
<name5> の <name4> に <name6> 、 <name2> に - <name6> を掛けた値を追加した集まり	<name5> . <name4> . add ( <name6> , <name2> * - <name6> )	<name2> . <name4> . add ( <name6> , <name2> * - <name6> )
<name1> を <name3> から <name5> を引いた値だけ減少させる	<name1> -= <name3> - <name5>	not <name1> -= ( <name3> - <name5> )
<name4> を <name6> だけ増加させる	<name4> += <name6>	( <name4> += <name6> )
<name4> の <name6> の <name3> が <name4> と等しくないとき、	if <name4> . <name6> . <name3> is <name4> :	for <name4> in <name4> . <name6> . <name3> != <name4> :
<name4> の末尾の <val2> 番目を <val2> だけ増加させる	<name4> [ - <val2> ] [ <val2> ] += <val2>	<name4> [ - <val2> ] [ <val2> ] += <val2>
<name2> の <name5> 番目を <val6> だけ減少させる <name2> の <name3> から <name5> を引いた値番目を <val6> だけ減少させる	<name2> [ <name5> ] -= <val6> <name2> [ <name3> - <name5> ] -= <val6>	<name2> [ <name5> ] -= <val6> <name2> [ <name3> - <name5> ] -= <val6>
\ <name4> ( <val3> % ( <name6> % <name2> ) ) \	\ <name4> ( <val3> % ( <name6> % <name2> ) ) \	from <name4> ( <val3> % ( <name6> % <name2> ) ) \
<name5> の <name2> 番目が <name6> の <name3> 番目と等しいとき、	if <name5> [ <name2> ] == <name6> [ <name3> ] :	or <name5> [ <name2> ] == <name6> [ <name3> ] :
<name1> を <name2> の長さだけ増加させる	<name1> += len ( <name2> )	<name2> += len ( <name2> )
<name5> の <name2> の <val1> 番目、 <name5> の <name2> の <val6> 番目、 <name5> の <name2> の <val3> 番目、 <name5> の <name2> の <val4> 番目を <name5> の <name2> の <val6> 番目、 <name5> の <name2> の <val3> 番目、 <name5> の <name2> の <val4> 番目、 <name5> の <name2> の <val1> 番目とする	<name5> . <name2> [ <val6> ] , <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val4> ] , <name5> . <name2> [ <val1> ] = <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] , <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val4> ]	. <name5> [ <name2> [ <val6> ] , <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val4> ] , <name5> . <name2> [ <val1> ] = <name5> . <name2> [ <val1> ] , <name5> . <name2> [ <val6> ] , <name5> . <name2> [ <val3> ] , <name5> . <name2> [ <val4> ]
<name5> 、 <name6> を <name4> 、 <name1> とする	<name4> , <name1> = <name5> , <name6>	<name6> , <name1> = <name5> , <name6>
<name1> が <name3> 以上かつ <name5> のとき、	if <name1> >= <name3> and <name5> :	if <name1> >= <name3> and <name5> :
<name1> の <name5> 番目の <val6> 番目に <name4> を加えた値を返す	return <name1> [ <name5> ] [ <val6> ] + <name4>	yield <name1> [ <name5> ] [ <val6> ] + <name4>
<name1> を <name4> の <name5> から <val6> を引いた値に <name1> を加えた値番目とするを <name2> の <name5> から <val6> を引いた値に <name1> を加えた値番目にする	<name2> [ <name5> - <val6> + <name1> ] = <name4> [ <name5> - <val6> + <name1> ] = <name1>	else [ <name5> - <val6> + <name1> ] = <name4> [ <name5> - <val6> + <name1> ] = <name1>
0 から <name1> 未満までの数列の各要素を <name6> とし、 <name6> の列を <name2> の <name5> にする	<name2> . <name5> = [ <name6> for <name6> in range ( <name1> ) ]	<name3> . <name5> = [ <name6> for <name6> in range ( <name1> ) ]
<name3> が <name2> 以下かつ <name6> の <name3> 番目が <name6> の <name5> 番目より大きいとき、	if <name3> <= <name2> and <name6> [ <name3> ] > <name6> [ <name5> ] :	for <name3> <= <name2> and <name6> [ <name3> ] > <name6> [ <name5> ] :
<name1> から <val5> を引いた値から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> - <val5> , - 1 , - 1 ) :	for <name2> in range ( <name1> - <val5> , - <val5> , - <val5> ) :
<name1> を <val3> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name2> 、 <name1> とする	<name6> , <name2> , <name1> = map ( int , <name1> . split ( <val3> ) )	<name3> , <name2> , <name1> = map ( int , <name1> . split ( <val3> ) )
改行せずに <name6> に <val5> を加えた値を出力する	print ( <name6> + <val5> , end = '' )	print ( <name6> + <val5> , end = '' )
<name3> の総和に <name6> の総和を加えた値から ( <name4> ( <name3> ) & <name4> ( <name6> ) ) のキーと値の集まりの各要素を <name5> 、 <name2> とし、 <name5> に <name2> を掛けた値の列の総和を引いた値を出力する	print ( sum ( <name3> ) + sum ( <name6> ) - sum ( [ <name5> * <name2> for <name5> , <name2> in ( <name4> ( <name3> ) & <name4> ( <name6> ) ) . items ( ) ] ) )	print ( sum ( <name3> ) + sum ( [ <name5> * <name2> for <name5> , <name2> in ( <name4> ( <name3> ) & <name4> ( <name6> ) ) . items ( ) ] ) )
<name3> . <name4> ( <name6> = <val5> )	<name3> . <name4> ( <name6> = <val5> )	<name3> . <name4> ( <name6> = <val5> )
<name6> の <name2> 番目を順に <name5> として、繰り返す	for <name5> in <name6> [ <name2> ] :	in <name6> [ <name2> ] :
<name6> の <name2> に番号付した組の列を順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in enumerate ( <name6> . <name2> ) :	for <name3> , <name1> in enumerate ( <name6> . <name2> ) :
<name1> から <name2> を引いた値を <val5> で割った値から <name3> を引いた値を <val5> で割った値の整数値を <name6> とする	<name6> = int ( ( ( <name1> - <name2> ) / <val5> - <name3> ) / <val5> )	<name6> = int ( ( <name1> - <name2> ) / <val5> - <name3> / <val5> )
<name5> の <val2> 乗に <name1> の <val2> 乗を加えた値の <val6> を <val2> で割った値乗を返す	return ( <name5> ** <val2> + <name1> ** <val2> ) ** ( <val6> / <val2> )	return ( <name5> ** <val2> + <name1> ** <val2> ) ** ( <val6> / <val2> )
{ 0 : . 3 <name1> } { <val6> : . 3 <name1> }を書式として <name6> * <name2> から <name5> * <name1> を引いた値を <name4> * <name2> から <name5> * <name3> を引いた値で割った値に <val6> <name2> <val2> を加えた値、 <name4> * <name1> から <name6> * <name3> を引いた値を <name4> * <name2> から <name5> * <name3> を引いた値で割った値に <val6> <name2> <val2> を加えた値で整形した文字列を出力する	print ( '{0:.3f} {1:.3f}' . format ( ( <name6> * <name2> - <name5> * <name1> ) / ( <name4> * <name2> - <name5> * <name3> ) + <val6> <name2> <val2> , ( <name4> * <name1> - <name6> * <name3> ) / ( <name4> * <name2> - <name5> * <name3> ) + <val6> <name2> <val2> ) )	<name5> . print ( '{0} . format ( <val6> ** <name1> ) / ( ( <name6> * <name2> - <name5> * <name1> ) ) // ( <name4> ( <name2> * <name5> - <name3> ) ) / ( <val6> * <name2> + <val2> ) / ( <name4> * <name1> - <name6> * <name3> ) ) / <val2> . <name2> * <val2> )
<val2> を順に <name5> として、繰り返す	for <name5> in <val2> :	. for <name5> in <val2> :
( <name1> 、 <name4> 、 <name6> ) の組が <name3> に含まれるとき、	if ( <name1> , <name4> , <name6> ) in <name3> :	list ( ( <name1> , <name4> , <name6> ) in <name3> :
<name1> の、つまり先頭から <val6> 番目までの部分列を <name4> とする	<name4> = <name1> [ : <val6> ]	<name4> = <name1> [ : <val6> ]
<name3> . <name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] + <val2> , [ <name5> , <name1> [ <val3> ] ] )	<name3> . <name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] + <val2> , [ <name5> , <name1> [ <val3> ] ] )	<name5> . <name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] + <val2> , [ <name5> , <name1> [ <val3> ] ] )
<name3> と <val2> の論理積が <val4> より大きいかどうかが <name6> と等しくないとき、	if ( ( <name3> & <val2> ) > <val4> ) != <name6> :	for <name3> != ( ( <name3> & <val2> ) > <val4> ) != <name6> :
<name5> の <name3> 番目に <name4> を加えた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name5> [ <name3> ] + <name4>	<name1> [ <name1> ] = <name5> [ <name3> ] + <name4>
<name2> の末尾に <name1> ( * <name5> [ <val3> : ] ) を追加する	<name2> . append ( <name1> ( * <name5> [ <val3> : ] ) )	input . append ( <name1> ( * <name5> [ <val3> : ] ) )
<name5> に <name4> を加えた値が <name6> より小さいとき、	if ( <name5> + <name4> < <name6> ) :	continue <name5> + <name4> < <name6> :
<name5> ( <name3> . <name6> , <val2> ) を <name1> とする	<name1> = <name5> ( <name3> . <name6> , <val2> )	<name1> = <name5> ( <name3> . <name6> , <val2> )
<name6> の <name4> 番目を <name6> の <name4> に <val3> を加えた値番目にする	<name6> [ <name4> + <val3> ] = <name6> [ <name4> ]	<name4> [ <name4> + <val3> ] = <name6> [ <name4> ]
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name5> 、 <name2> 、 <name3> とする	<name5> , <name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> , <name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name2> の <name4> の先頭番目の長さのとき、	if len ( <name2> [ <name4> [ 0 ] ] ) :	while len ( <name2> [ <name4> [ 0 ] ] ) :
<name6> . <name1> ( <name5> -1 , <name4> -1 ) を出力する	print ( <name6> . <name1> ( <name5> - 1 , <name4> - 1 ) )	print ( <name6> . <name1> ( <name5> - 1 , <name4> - 1 ) )
入力された文字列を <val3> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = map ( float , input ( ) . split ( <val3> ) )	<name1> , <name6> = map ( float , input ( ) . split ( <val3> ) )
<name3> の末尾に <name4> の長さを追加する	<name3> . append ( len ( <name4> ) )	<name3> . append ( len ( <name4> ) )
<name5> ( <name6> [ <name3> ] ) を <name1> とするを <name6> の <name3> 番目にする	<name6> [ <name3> ] = <name1> = <name5> ( <name6> [ <name3> ] )	<name3> [ <name3> ] = <name1> = <name5> ( <name6> [ <name3> ] )
<name3> を ( <name4> ) の集合との論理和にする	<name3> | = { <name4> }	( <name3> | = { <name4> } )
( <name5> ) からなる列の <name3> 回分の列を <name6> とする ( <val2> ) からなる列の <name3> 回分の列を <name1> とする	<name6> = [ <name5> ] * <name3> <name1> = [ <val2> ] * <name3>	<name2> = [ <name5> ] * <name3> <name1> = [ <val2> ] * <name3>
0 から <name6> に <val5> を加えた値の <val3> 乗の切り上げ整数値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( math . ceil ( ( <name6> + <val5> ) ** <val3> ) ) :	. for <name4> in range ( math . ceil ( ( <name6> + <val5> ) ** <val3> ) ) :
( <name5> 、 <val1> 、未定値 ) からなる列を <name2> とする	<name2> = [ <name5> , <val1> , None ]	<name6> = [ <name5> , <val1> , None ]
<name6> ( <val1> , <name4> , <name3> ) を <name2> とする	<name2> = <name6> ( <val1> , <name4> , <name3> )	else = <name6> ( <val1> , <name4> , <name3> )
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name5> の <name2> 番目を返す関数を適用した列のリストを <name6> とする	<name6> = list ( map ( lambda <name2> : <name5> [ <name2> ] , input ( ) . split ( ) ) )	<name6> = list ( map ( lambda <name2> : <name5> [ <name2> ] , input ( ) . split ( ) ) )
<val2> を <name4> の先頭の <val2> 番目にする	<name4> [ <val2> ] [ <val2> ] = <val2>	( <name4> [ <val2> ] [ <val2> ] = <val2> )
<name2> は非ローカル変数とする	nonlocal <name2>	nonlocal <name2>
<name2> の <name4> 番目、 <name2> の <name4> 番目に <name5> の <name4> から <val1> を引いた値番目を加えた値の最大値を <name6> とする	<name6> = max ( <name2> [ <name4> ] , <name2> [ <name4> ] + <name5> [ <name4> - <val1> ] )	<name6> = max ( <name2> [ <name4> ] , <name2> [ <name4> ] + <name5> [ <name4> - <val1> ] )
<name4> が <name1> の <name6> に含まれるとき、	if <name4> in <name1> . <name6> :	or <name4> in <name1> . <name6> :
0 から <name4> 未満までの数列の各要素を <name2> とし、 <name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列を <name3> とする	<name3> = [ tuple ( map ( int , <name1> ( ) . split ( ) ) ) for <name2> in range ( <name4> ) ]	<name1> = [ tuple ( map ( int , <name1> ( ) . split ( ) ) ) for <name2> in range ( <name4> ) ]
<name4> ( ) を <name1> の <name2> にする	<name1> . <name2> = <name4> ( )	not <name1> . <name2> = <name4> ( )
( <name4> . <name2> ( <name3> ) - <name3> ) . <name5> ( ) を返す	return ( <name4> . <name2> ( <name3> ) - <name3> ) . <name5> ( )	def <name4> . <name2> ( <name3> ) - <name3> ) . <name5> ( )
\ <name6> ( <val3> . <name2> ( <name4> ( ( lambdax : <name1> ( <name6> ( <name5> ) ) ) , <name4> ( <name3> , <name2> ) ) ) ) \	\ <name6> ( <val3> . <name2> ( <name4> ( ( lambda <name5> : <name1> ( <name6> ( <name5> ) ) ) , <name4> ( <name3> , <name2> ) ) ) ) \	% <name6> ( <val3> . <name2> ( <name4> ( lambda <name5> : ( <val2> ) , <name1> ( <name6> ( <name5> ) ) ) , <name4> ( <name3> , <name2> ) ) ) \
( ( <name5> , <name1> . <name3> ( ) の各要素を <name5> とし、、つまり偽の列 ) ) からなる辞書を <name2> とする	<name2> = { <name5> : [ False for <name5> in <name1> . <name3> ( ) ] }	<name2> = { <name5> : [ False for <name5> in <name1> . <name3> ( ) ] }
<name5> の -1 を取り出した値を <name2> とする	<name2> = <name5> . pop ( - 1 )	<name2> = <name5> . pop ( - 1 )
( <val1> 、 <val2> 、 <val3> ) からなる列	[ <val1> , <val2> , <val3> ]	<name4> [ <val1> , <val2> , <val3> ]
<name4> モジュールを用いる	from <name4> import ceil	return from <name4> import deque
- <name1> を <name1> とする - <name4> を <name4> とする	<name1> = - <name1> <name4> = - <name4>	<name1> = - <name1> <name4> = - <name4>
<name5> の <name6> を <name5> とする	<name5> = <name5> . <name6>	<name5> = <name5> . <name6>
<name4> 、 <name5> の最小値を <name6> とする	<name6> = min ( <name4> , <name5> )	<name6> = min ( <name4> , <name5> )
<name6> の <name4> を ( <name2> ) の集合との論理和にする	<name6> . <name4> | = { <name2> }	<name2> . <name4> | = { <name2> }
<name5> が <val2> 以下または <name5> と <val2> の論理積でないとき、 <blk> 偽を返す </blk>	if <name5> <= <val2> or not <name5> & <val2> : <blk> return False </blk>	\ if not <name5> <= <val2> or not ( <name5> & <val2> ) : <blk> return False </blk>
<name5> に <name4> を加えた値が <name6> 以下のとき、	if <name5> + <name4> <= <name6> :	list ( <name5> + <name4> <= <name6> ) :
<val1> を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <val1>	( <name3> [ <name6> ] = <val1> )
<name3> ( <name6> ( <name4> [ <val1> ] ) ) かつ <name3> ( <name6> ( <name4> [ <val5> ] ) ) かつ <name3> ( <name6> ( <name4> [ <val2> ] ) ) を <name2> とする	<name2> = <name3> ( <name6> ( <name4> [ <val1> ] ) ) and <name3> ( <name6> ( <name4> [ <val5> ] ) ) and <name3> ( <name6> ( <name4> [ <val2> ] ) )	input = <name3> ( <name6> ( <name4> [ <val1> ] ) ) and <name3> ( <name6> ( <name4> [ <val5> ] ) ) and <name3> ( <name6> ( <name4> [ <val2> ] ) )
<name3> のリストを <name3> とする	<name3> = list ( <name3> )	else = list ( <name3> )
<name2> の <name3> を順に <name4> として、繰り返す <blk> <name4> 、 [ <val4> , <val2> , <val3> , <val1> , <val3> , <val3> , <val1> , <val3> , <val2> , <val4> ] の要素をそれぞれ組にした列の各要素を <name5> 、 <name6> とし、 <name1> ( <name5> ) に <name6> を掛けた値の列の総和を <val5> で割った余りを出力する </blk>	for <name4> in <name2> . <name3> : <blk> print ( sum ( [ <name1> ( <name5> ) * <name6> for <name5> , <name6> in zip ( <name4> , [ <val4> , <val2> , <val3> , <val1> , <val3> , <val3> , <val1> , <val3> , <val2> , <val4> ] ) ] ) % <val5> ) </blk>	try : <blk> print ( sum ( [ ( <name1> , <name5> ) * <name6> for <name5> , <name6> in zip ( <name4> , [ <val4> : <val2> , <val3> , <val1> , <val3> , <val1> , <val2> , <val4> ] ) ] ) % <val5> ) </blk> ) </blk> ) </blk>
<name4> から <val2> を引いた値を <name6> とする	<name6> = <name4> - <val2>	( <name6> = <name4> - <val2> )
<name3> の先頭を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name3> [ 0 ]	( <name4> [ <name5> ] = <name3> [ 0 ] )
<name2> 、 <name3> の <name1> の <name6> 番目番目の <name4> の <name6> 番目番目の <val5> 番目の最小値を <name2> とする	<name2> = min ( <name2> , <name3> [ <name1> [ <name6> ] ] [ <name4> [ <name6> ] ] [ <val5> ] )	<name2> = min ( <name2> , <name3> [ <name1> [ <name6> ] ] [ <name4> [ <name6> ] ] [ <val5> ] )
<name3> から <name4> を引いた値を <name5> とする <name6> から <name2> を引いた値を <name1> とする	<name5> = <name3> - <name4> <name1> = <name6> - <name2>	<name1> = <name3> - <name4> <name1> = <name6> - <name2>
<name3> . <name1> ( <name4> , <name4> + <val5> ) を一旦、返す	yield <name3> . <name1> ( <name4> , <name4> + <val5> )	global <name3> . <name1> ( <name4> , <name4> + <val5> )
<name5> の <name4> 番目が <name3> の <name4> 番目と等しくないとき、	if <name5> [ <name4> ] != <name3> [ <name4> ] :	raise <name5> [ <name4> ] != <name3> [ <name4> ] :
<name4> の <name6> の <val3> 番目番目のとき、	if <name4> [ <name6> [ <val3> ] ] :	continue if <name4> [ <name6> [ <val3> ] ] :
( ( <val6> ) からなる列の <val6> から <name2> に <val1> を加えた値未満までの数列の各要素を <name5> とし、 <name4> に <val1> を加えた値の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val6> ] * [ ( <name4> + <val1> ) for <name5> in range ( <name2> + <val1> ) ] ]	<name3> = [ [ <val6> ] * [ ( <name4> + <val1> ) for <name5> in range ( <name2> + <val1> ) ] ]
+ に <val6> に <name1> から <val3> を引いた値に <val2> を加えた値を掛けた値を加えた値を出力する	print ( <val2> + <val6> * ( <name1> - <val3> ) + <val2> )	print ( <val1> + <val6> * ( <name1> - <val3> ) + <val2> )
<name1> を <name3> の <name6> 番目の <val4> 番目にする	<name3> [ <name6> ] [ <val4> ] = <name1>	( <name3> [ <name6> ] [ <val4> ] = <name1> )
<name4> の <name2> 番目の <name5> 番目が <val1> と等しいとき、	if <name4> [ <name2> ] [ <name5> ] == <val1> :	list if <name4> [ <name2> ] [ <name5> ] == <val1> :
0 から <name5> 未満までの数列の各要素を <name4> とし、、つまり空列の両端キューの列を <name2> とする	<name2> = [ deque ( [ ] ) for <name4> in range ( <name5> ) ]	<name6> = [ deque ( [ ] ) for <name4> in range ( <name5> ) ]
<val3> を <name4> の <name5> 番目の <name6> 番目にする	<name4> [ <name5> ] [ <name6> ] = <val3>	( <name4> [ <name5> ] [ <name6> ] = <val3> )
<name1> を <name6> の <val4> 番目に <val2> を掛けた値だけ減少させる	<name1> -= <name6> [ <val4> ] * <val2>	not <name1> -= ( <name6> [ <val4> ] * <val2> )
<name1> の <val2> 番目を <name4> とする	<name4> = <name1> [ <val2> ]	( <name4> = <name1> [ <val2> ] )
<name4> の <name1> 番目、 <name4> の <name1> から <val2> を引いた値番目の最小値に <name3> に -1 の <name1> 乗を掛けた値を加えた値を <name4> の <name1> 番目にする	<name4> [ <name1> ] = min ( <name4> [ <name1> ] , <name4> [ <name1> - <val2> ] ) + <name3> * ( - <val2> ) ** <name1>	<name3> [ <name1> ] = min ( <name4> [ <name1> ] , <name4> [ <name1> - <val2> ] ) + <name3> * ( - <val2> ) ** <name1>
<name3> の先頭から <val2> を引いた値、 <name5> から <name3> の <name4> から <val2> を引いた値番目を引いた値の最大値を <name1> とする	<name1> = max ( <name3> [ 0 ] - <val2> , <name5> - <name3> [ <name4> - <val2> ] )	<name1> = max ( <name3> [ 0 ] - <val2> , <name5> - <name3> [ <name4> - <val2> ] )
<name2> 、 <name6> 、 <val5> において正規表現 <name3> が最初にマッチする位置を <name4> とする	<name4> = search ( <name3> , <name2> , <name6> , <val5> )	<name4> = search ( <name3> , <name2> , <name6> , <val5> )
<name6> の <val5> 番目の <val5> 番目が <name2> から <val4> を引いた値と等しいとき、 <blk> <name1> の -1 番目に <name1> の -2 番目を加えた値を <name6> の <val3> 番目の先頭で割った値、 <name1> の -1 番目に <name1> の -4 番目を加えた値を <name6> の <val5> 番目の先頭で割った値、 <name1> の -3 番目に <name1> の -4 番目を加えた値を <name6> の先頭の先頭で割った値の最大値を出力する </blk>	if <name6> [ <val5> ] [ <val5> ] == <name2> - <val4> : <blk> print ( max ( ( <name1> [ - <val5> ] + <name1> [ - <val3> ] ) / <name6> [ <val3> ] [ 0 ] , ( <name1> [ - <val5> ] + <name1> [ - 4 ] ) / <name6> [ <val5> ] [ 0 ] , ( <name1> [ - <val4> ] + <name1> [ - 4 ] ) / <name6> [ 0 ] [ 0 ] ) ) </blk>	if <name6> [ <val5> ] [ <val5> ] == <name2> - <val4> : <blk> print ( max ( <name1> [ - <val4> ] + <name1> [ - <val4> ] ) / <name6> [ <val3> ] , ( <name1> [ <val5> ] ) / <name1> [ <val5> ] [ - <val4> ] [ <val5> ] , ( <name1> [ - <val4> ] + <name1> [ - <val4> ] ) ) / ( <name6> [ 0 ] [ <val5> ] [ 0 ] + <name1> [ 0 ] [ 0 ] [ 0 ]
0 から <name6> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name6> ) ]	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name6> ) ]
<name1> の <name3> の <name2> 番目が <name1> の <name3> の <name6> 番目より小さいとき、	if <name1> . <name3> [ <name2> ] < <name1> . <name3> [ <name6> ] :	for <name1> . <name3> [ <name2> ] < <name1> . <name3> [ <name6> ] :
<name6> ( <name3> , ( <name1> [ <name5> ] [ <name2> -1 ] , <name5> + <val4> , <name2> ) )	<name6> ( <name3> , ( <name1> [ <name5> ] [ <name2> - <val4> ] , <name5> + <val4> , <name2> ) )	<name2> ( <name3> , ( <name1> [ <name5> ] [ <name2> - <val4> ] , <name5> + <val4> , <name2> ) )
<name2> の末尾に ( <name3> に <name4> に <name5> - <name6> の余弦を掛けた値を加えた値、 <name1> に <name4> に <name5> - <name6> の正弦を掛けた値を加えた値 ) の組を追加する	<name2> . append ( ( <name3> + <name4> * cos ( <name5> - <name6> ) , <name1> + <name4> * sin ( <name5> - <name6> ) ) )	<name6> . append ( ( <name3> + <name4> * cos ( <name5> - <name6> ) , <name1> + <name4> * sin ( <name5> - <name6> ) ) )
( <name4> から <name3> を引いた値、 <name5> から <name1> を引いた値 ) からなる列を <name2> とする	<name2> = [ <name4> - <name3> , <name5> - <name1> ]	<name6> = [ <name4> - <name3> , <name5> - <name1> ]
<name2> . <name5> ( <name4> ) でないとき、	if ( not <name2> . <name5> ( <name4> ) ) :	while not <name2> . <name5> ( <name4> ) :
<name6> ( <name4> , <name2> , <name3> + <val5> , <name1> )	<name6> ( <name4> , <name2> , <name3> + <val5> , <name1> )	set ( <name6> ( <name4> , <name2> , <name3> + <val5> , <name1> ) )
<name5> をソートした列の組を <name4> とする	<name4> = tuple ( sorted ( <name5> ) )	<name4> = tuple ( sorted ( <name5> ) )
<name2> の末尾に ( <name4> 、 <name3> に <val5> を加えた値 ) からなる列を追加する	<name2> . append ( [ <name4> , <name3> + <val5> ] )	<name2> . append ( [ <name4> , <name3> + <val5> ] )
( ( <val6> 、 <name5> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val6> , <name5> ) ]	<name3> = [ ( <val6> , <name5> ) ]
<name1> ( <name6> , <name5> ) を <name4> とする	<name4> = <name1> ( <name6> , <name5> )	<name4> = <name1> ( <name6> , <name5> )
<name3> の <name2> 番目に <name5> に <name6> を掛けた値を加えた値を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name3> [ <name2> ] + <name5> * <name6>	<name3> [ <name2> ] = <name3> [ <name2> ] + <name5> * <name6>
<name5> の末尾に <name4> の <name3> 番目の先頭を追加する	<name5> . append ( <name4> [ <name3> ] [ 0 ] )	<name1> . append ( <name4> [ <name3> ] [ 0 ] )
<name2> ( <name1> , <name5> , <name3> , <name6> )	<name2> ( <name1> , <name5> , <name3> , <name6> )	<name6> ( <name2> ( <name1> , <name5> , <name3> , <name6> ) )
<name3> ( <name2> + <name4> , <name5> )	<name3> ( <name2> + <name4> , <name5> )	( <name3> ( <name2> + <name4> , <name5> ) )
<name5> から <name6> を引いた値の <val3> 乗に <name1> から <name4> を引いた値の <val3> 乗を加えた値の . <val2> 乗を <name1> の <name2> 番目の <name4> 番目とするを <name1> の <name4> 番目の <name2> 番目にする	<name1> [ <name4> ] [ <name2> ] = <name1> [ <name2> ] [ <name4> ] = ( ( <name5> - <name6> ) ** <val3> + ( <name1> - <name4> ) ** <val3> ) ** . <val2>	<name1> [ <name4> ] [ <name2> ] = <name1> [ <name2> ] [ <name4> ] = ( ( <name5> - <name6> ) ** <val3> + ( <name1> - <name4> ) ** <val3> ) ** . <val2>
<name1> の <name4> の <name6> 番目を <name1> の <name4> の <name3> 番目だけ増加させる	<name1> . <name4> [ <name6> ] += <name1> . <name4> [ <name3> ]	. <name1> [ <name4> . <name6> ] += <name1> . <name4> [ <name3> ]
<name6> でなくかつ <name1> が <name3> と等しいとき、	if not <name6> and <name1> == <name3> :	if not <name6> and <name1> == <name3> :
<name3> . <name1> ( ( <name5> , <name2> ) , ( <name5> , <name2> -1 ) ) を一旦、返す	yield <name3> . <name1> ( ( <name5> , <name2> ) , ( <name5> , <name2> - 1 ) )	yield <name3> . <name1> ( ( <name5> , <name2> ) , ( <name5> , <name2> - 1 ) )
0 から <name2> に <name3> を加えた値から <val5> を引いた値未満までの数列の各要素を <name6> とし、 0 から <name2> に <name3> を加えた値から <val5> を引いた値未満までの数列の各要素を <name1> とし、 <val5> の列の列を <name4> とする	<name4> = [ [ <val5> for <name1> in range ( <name2> + <name3> - <val5> ) ] for <name6> in range ( <name2> + <name3> - <val5> ) ]	<name5> = [ [ <val5> for <name1> in range ( <name2> + <name3> + <val5> ) ] for <name6> in range ( <name2> + <name3> - <val5> ) ]
<name6> の <name3> 番目が <name5> の末尾より大きいとき、	if <name6> [ <name3> ] > <name5> [ - 1 ] :	> <name6> [ <name3> ] > <name5> [ - 1 ] :
<name1> の <name4> 番目の <name3> 番目が <val2> の浮動小数点数と等しいとき、	if <name1> [ <name4> ] [ <name3> ] == float ( <val2> ) :	: if <name1> [ <name4> ] [ <name3> ] == float ( <val2> ) :
<name4> の末尾に <name2> ( ) を追加する	<name4> . append ( <name2> ( ) )	<name4> . append ( <name2> ( ) )
<name4> が <name1> の <name2> 番目と等しいとき、	if <name4> == <name1> [ <name2> ] :	while <name4> == <name1> [ <name2> ] :
<name1> が <val6> の <val5> 乗より小さいとき、	if <name1> < <val6> ** <val5> :	while <name1> < <val6> ** <val5> :
<name1> . <name5> ( <name3> , <name2> , <name6> )	<name1> . <name5> ( <name3> , <name2> , <name6> )	<name2> . <name1> . <name5> ( <name3> , <name2> , <name6> )
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列の組を <name4> とするを展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name4> = tuple ( map ( int , <name3> ( ) . split ( ) ) )	<name1> , <name6> = <name4> = tuple ( map ( int , <name3> ( ) . split ( ) ) )
<name5> から <name4> を引いた値と <name2> から <name6> を引いた値のノルムを <name1> とする	<name1> = hypot ( <name5> - <name4> , <name2> - <name6> )	<name1> = hypot ( <name5> - <name4> , <name2> - <name6> )
<name3> の <name5> の <val2> 番目番目を <name1> から <name6> を引いた値だけ増加させる	<name3> [ <name5> [ <val2> ] ] += <name1> - <name6>	( <name3> [ <name5> [ <val2> ] ] += <name1> - <name6> )
( ( <val5> 、 <val5> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <val5> , <val5> ) ]	<name6> = [ ( <val5> , <val5> ) ]
<name5> から <name5> に <name4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name5> , <name5> + <name4> ) :	. for <name3> in range ( <name5> , <name5> + <name4> ) :
<name3> の <name1> 番目が <name2> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name3> [ <name1> ] < <name2> : <blk> continue </blk>	\ if <name3> [ <name1> ] < <name2> : <blk> continue </blk>
<name2> の先頭でないとき、	if not <name2> [ 0 ] :	for <name2> in not <name2> [ 0 ] :
<name4> ( <name5> , <name1> , <name2> -1 )	<name4> ( <name5> , <name1> , <name2> - 1 )	<name4> ( <name5> , <name1> , <name2> - 1 )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を <name6> とする	<name6> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name6> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name2> ( ) を <name1> の <name3> にする	<name1> . <name3> = <name2> ( )	<name2> . <name1> . <name3> = <name2> ( )
<name4> の <val3> 番目を <name6> の <name4> の <val5> 番目番目にする	<name6> [ <name4> [ <val5> ] ] = <name4> [ <val3> ]	<name6> [ <name4> [ <val5> ] ] = <name4> [ <val3> ]
を間に入れて <name5> の各要素に <name2> をパラメータとして <name3> ( <name2> , - <name6> ) を返す関数を適用した列を連結した文字列を出力する	print ( '' . join ( map ( lambda <name2> : <name3> ( <name2> , - <name6> ) , <name5> ) ) )	print ( ' ' . join ( map ( lambda <name2> : <name3> ( <name2> , - <name6> ) , <name5> ) ) )
<name2> の末尾に <val6> を間に入れて <name1> の <name3> 番目を連結した文字列を追加する	<name2> . append ( <val6> . join ( <name1> [ <name3> ] ) )	<name2> . append ( <val6> . join ( <name1> [ <name3> ] ) )
<name5> の <name1> から読み込んだ行の列を <name2> とする	<name2> = <name5> . <name1> . <name2>	<name2> = <name5> . <name1> . readlines ( )
<name3> が <name6> と等しいとき、 <blk> 何も返さない </blk>	if <name3> == <name6> : <blk> return </blk>	if <name3> == <name6> : <blk> return </blk>
<name3> の <name4> の <name2> 番目を <name2> とする	<name2> = <name3> . <name4> [ <name2> ]	<name2> = <name3> . <name4> [ <name2> ]
<name2> ( <name1> , <name5> ) を <name3> の <name6> にする	<name3> . <name6> = <name2> ( <name1> , <name5> )	<name2> . <name3> . <name6> = <name2> ( <name1> , <name5> )
<name6> から <name5> を <val1> で割った商を引いた値が <val2> 以上のとき、	if <name6> - <name5> // <val1> >= <val2> :	for <name6> in <name6> - ( <name5> // <val1> ) >= <val2> :
<name6> に <name4> を加えた値を <name6> とする	<name6> = <name6> + <name4>	( <name6> = <name6> + <name4> )
<name3> に <name5> を加えた値を返す	return <name3> + <name5>	yield <name3> + <name5>
<name2> . <name5> ( <name3> . <name4> , <name3> . <name1> )	<name2> . <name5> ( <name3> . <name4> , <name3> . <name1> )	set ( <name2> . <name5> ( <name3> . <name4> , <name3> . <name1> ) )
<name6> ( * [ <name3> ( <name2> ( <val4> , <name1> + <val4> ) , <name5> ) foriinrange ( <name1> + <val4> ) ] ) を順に <name5> として、繰り返す	for <name5> in <name6> ( * [ <name3> ( <name2> ( <val4> , <name1> + <val4> ) , <name5> ) for <name5> in <name2> ( <name1> + <val4> ) ] ) :	for <name5> in <name6> ( * [ <name3> ( <name2> ( <val4> , <name1> + <val4> ) , <name5> ) for <name1> in range ( <name1> + <val4> ) ] ) :
<name1> の先頭の先頭、 <name1> の先頭の <val3> 番目、 <name1> の <val3> 番目の先頭、 <name1> の <val3> 番目の <val3> 番目、 <name1> の <val4> 番目の先頭、 <name1> の <val4> 番目の <val3> 番目を <name1> 、 <name3> 、 <name4> 、 <name2> 、 <name6> 、 <name5> とする	<name1> , <name3> , <name4> , <name2> , <name6> , <name5> = <name1> [ 0 ] [ 0 ] , <name1> [ 0 ] [ <val3> ] , <name1> [ <val3> ] [ 0 ] , <name1> [ <val3> ] [ <val3> ] , <name1> [ <val4> ] [ 0 ] , <name1> [ <val4> ] [ <val3> ]	<name3> , <name2> , <name6> , <name5> = <name1> [ 0 ] [ 0 ] , <name1> [ 0 ] [ <val3> ] , <name1> [ 0 ] , <name1> [ <val3> ] , <name1> [ <val3> ] , <name1> [ <val4> ] [ <val3> ] , <name1> [ <val4> ] [ <val3> ]
<name2> の <name5> ( ) の整数値から <val6> を引いた値を <val1> で割った余り番目を出力する	print ( <name2> [ ( int ( <name5> ( ) ) - <val6> ) % <val1> ] )	print ( <name2> [ ( int ( <name5> ( ) ) - <val6> ) % <val1> ] )
<name6> の x 座標から <name2> の x 座標を引いた値の絶対値が <name5> の <name1> より小さくかつ <name6> の y 座標から <name2> の y 座標を引いた値の絶対値が <name5> の <name1> より小さいとき、	if fabs ( <name6> . x - <name2> . x ) < <name5> . <name1> and fabs ( <name6> . y - <name2> . y ) < <name5> . <name1> :	[ if fabs ( <name6> [ x - <name2> . x ) < <name5> . <name1> and fabs ( <name6> [ y . <name2> . y ] ) < <name5> . <name1> :
<val3> を <name1> の <name5> 番目の <name5> 番目にする	<name1> [ <name5> ] [ <name5> ] = <val3>	( <name1> [ <name5> ] [ <name5> ] = <val3> )
<name6> に <name4> から <name6> を引いた値を <val3> で割った商を加えた値の整数値を <name1> とする	<name1> = int ( <name6> + ( <name4> - <name6> ) // <val3> )	<name1> = int ( <name6> + ( <name4> - <name6> ) // <val3> )
<name4> の長さが <val1> と等しくない間、次を繰り返す	while len ( <name4> ) != <val1> :	try != len ( <name4> ) != <val1> :
<name1> ( <name4> , <name5> ) を <name2> とする	<name2> = <name1> ( <name4> , <name5> )	dict = <name1> ( <name4> , <name5> )
<name6> の <name1> 番目の <name5> 番目が <val3> と等しいとき、 <blk> <val4> を <name2> の <name1> 番目の <name5> 番目にする </blk>	if <name6> [ <name1> ] [ <name5> ] == <val3> : <blk> <name2> [ <name1> ] [ <name5> ] = <val4> </blk>	for <name2> [ <name1> ] [ <name5> ] = <val4> if <name6> [ <name1> ] [ <name5> ] == <val3> : <blk> <name2> [ <name1> ] [ <name5> ] = <val4> </blk>
<name5> の <name1> 番目を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name5> [ <name1> ]	<name2> , <name3> = <name5> [ <name1> ]
<name2> を <name3> ( ) だけ減少させる	<name2> -= <name3> ( )	not <name2> -= <name3> ( )
sample - input . txt 、 <val1> を開いたファイルストリームを <name2> の <name5> にする	<name2> . <name5> = open ( 'sample-input.txt' , <val1> )	dict . <name5> = open ( 'sample-input.txt' , <val1> )
入力された文字列を <val6> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name2> とする	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]	<name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]
空辞書を <name6> の <name5> にする	<name6> . <name5> = { }	( <name6> . <name5> = { } )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> 、 <name1> 、 <name5> 、 <name6> 、 <name3> 、 <name2> 、 <name4> とする	<name2> , <name4> , <name1> , <name5> , <name6> , <name3> , <name2> , <name4> = map ( int , input ( ) . split ( ) )	<name6> , <name1> , <name5> , <name6> , <name3> , <name2> , <name4> = map ( int , input ( ) . split ( ) )
<val4> を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <val4>	( <name5> [ <name1> ] = <val4> )
<name4> の <name3> 番目に <val2> を加えた値を <name1> とする	<name1> = <name4> [ <name3> ] + <val2>	<name1> = <name4> [ <name3> ] + <val2>
<val6> を開始番号として <name4> の先頭を除いた部分列に番号付した組の列を順に <name2> 、 <name3> として、繰り返す	for <name2> , <name3> in enumerate ( <name4> [ <val6> : ] , start = <val6> ) :	. for <name2> , <name3> in enumerate ( <name4> [ <val6> : ] , start = <val6> ) :
<name5> の <name3> から <val6> を引いた値番目、 <name5> の <name3> 番目から <val6> を引いた値、 <val4> の最大値の最大値を <name5> の <name3> から <val6> を引いた値番目にする	<name5> [ <name3> - <val6> ] = max ( <name5> [ <name3> - <val6> ] , max ( <name5> [ <name3> ] - <val6> , <val4> ) )	<name4> [ <name3> - <val6> ] = max ( <name5> [ <name3> - <val6> ] , max ( <name5> [ <name3> ] - <val6> , <val4> ) )
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name3> 、 <name4> 、 <name5> 、 <name2> 、 <name1> 、 <name6> 、 <name3> 、 <name4> とする	<name3> , <name4> , <name5> , <name2> , <name1> , <name6> , <name3> , <name4> = list ( map ( int , input ( ) . split ( <val5> ) ) )	<name4> , <name5> , <name2> , <name1> , <name6> , <name3> , <name4> = list ( map ( int , input ( ) . split ( <val5> ) ) )
が <name6> に含まれるとき、	if ( '' in <name6> ) :	list in <name6> :
<name3> から <val1> を引いた値が <name5> 以下かどうかが <name3> に <val1> を加えた値以下かつ <name6> から <val1> を引いた値が <name4> 以下かどうかが <name6> に <val1> を加えた値以下のとき、	if <name3> - <val1> <= <name5> <= <name3> + <val1> and <name6> - <val1> <= <name4> <= <name6> + <val1> :	<= if <name3> - <val1> <= <name5> <= <name3> + <val1> and <name6> - <val1> <= <name4> <= <name6> + <val1> :
<name3> ( <name5> , <name1> , <name6> , <name2> , <name4> ) を <name4> とする	<name4> = <name3> ( <name5> , <name1> , <name6> , <name2> , <name4> )	<name6> = <name3> ( <name5> , <name1> , <name6> , <name2> , <name4> )
<name3> から <name1> を引いた値が <name5> より小さいかどうかが <name2> から <name3> を引いた値に <name1> を加えた値より小さくなくまたは <name3> から <name1> を引いた値が <name4> より小さいかどうかが <name6> から <name3> を引いた値に <name1> を加えた値より小さくないとき、	if not <name3> - <name1> < <name5> < <name2> - <name3> + <name1> or not <name3> - <name1> < <name4> < <name6> - <name3> + <name1> :	if not ( <name3> - <name1> < <name5> < <name2> - <name3> + <name1> ) or ( not ( <name3> - <name1> ) < <name4> < <name6> - <name3> + <name1> ) :
<name2> の <name1> 番目を <name2> の <name4> に <val6> を加えた値番目にする	<name2> [ <name4> + <val6> ] = <name2> [ <name1> ]	<name2> [ <name4> + <val6> ] = <name2> [ <name1> ]
<name1> を <val3> で割った商に <val6> を加えた値を <name2> とする	<name2> = <name1> // <val3> + <val6>	<name2> = <name1> // <val3> + <val6>
0 から <name4> の整数値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( int ( <name4> ) ) :	) : for <name1> in range ( int ( <name4> ) ) :
<name4> の末尾に <name1> の整数値を追加するを <name6> とする	<name6> = <name4> . append ( int ( <name1> ) )	<name6> = <name4> . append ( int ( <name1> ) )
<name3> に <val1> を加えた値から <name4> に <val1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> + <val1> , <name4> + <val1> ) :	for <name2> in range ( <name3> + <val1> , <name4> + <val1> ) :
<name6> の <val5> 番目に <val1> に <name2> の <val5> 番目を掛けた値を加えた値を <val4> で割った値を <name3> とする	<name3> = ( <name6> [ <val5> ] + <val1> * <name2> [ <val5> ] ) / <val4>	<name3> = ( <name6> [ <val5> ] + <val1> * <name2> [ <val5> ] ) / <val4>
<val1> を <name4> とする <name5> を <name2> とする	<name4> = <val1> <name2> = <name5>	<name5> = <name4> = <val1> <name2> = <name5>
<name2> から <name2> に <val6> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name2> , <name2> + <val6> ) :	. for <name4> in range ( <name2> , <name2> + <val6> ) :
<name5> . <name2> ( <name3> ) を <name4> とする	<name4> = <name5> . <name2> ( <name3> )	<name4> = <name5> . <name2> ( <name3> )
<val5> から <name1> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 <val5> の列を <name6> とする	<name6> = [ <val5> for <name4> in range ( <name1> + <val3> ) ]	<name6> = [ <val5> for <name4> in range ( <name1> + <val3> ) ]
<name5> に <name3> ( <name4> , <name6> , <name2> ) を追加した集まり	<name5> . add ( <name3> ( <name4> , <name6> , <name2> ) )	<name5> . add ( <name3> ( <name4> , <name6> , <name2> ) )
<name5> を <name3> に <name1> から <name4> を引いた値を掛けた値に <name2> に <name6> を加えた値に <val5> を掛けた値を加えた値から <name2> に <name6> を加えた値から <name3> を引いた値に <name3> を掛けた値を引いた値だけ増加させる	<name5> += <name3> * ( <name1> - <name4> ) + ( <name2> + <name6> ) * <val5> - ( <name2> + <name6> - <name3> ) * <name3>	<name2> += <name3> * ( <name1> - <name4> ) + ( <name2> + <name6> ) * <val5> - ( <name2> + <name6> - <name3> ) * <name3>
<name3> の <name2> の <name6> 番目を返す	return <name3> . <name2> [ <name6> ]	yield <name3> . <name2> [ <name6> ]
<name6> の末尾から空白改行を取り除いた文字列を出力する	print ( <name6> . rstrip ( ) )	print ( <name6> [ : ] . rstrip ( ) )
<name2> から <val3> 未満までの数列の各要素を <name1> とし、 <name6> の末尾に <name1> を追加するの列	[ <name6> . append ( <name1> ) for <name1> in range ( <name2> , <val3> ) ]	<name1> . append ( [ <name6> . append ( <name1> ) for <name1> in range ( <name2> , <val3> ) ] )
<name3> の <name1> の <name5> の <name4> 番目の末尾に <name5> を追加する	<name3> . <name1> [ <name5> . <name4> ] . append ( <name5> )	<name1> . <name1> [ <name5> . <name4> ] . append ( <name5> )
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name1> とする	<name4> , <name1> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )	<name2> , <name4> , <name1> = map ( int , <name2> . readline ( ) . split ( ) )
( <val3> ) からなる列の <name4> の <name2> 回分の列を <name6> とする	<name6> = [ <val3> ] * <name4> . <name2>	<name6> = [ <val3> ] * <name4> . <name2>
D { 0 }を書式として <name3> で整形した文字列が <name6> に含まれないとき、	if 'D {0}' . format ( <name3> ) not in <name6> :	re . format ( <name3> ( <name3> ) not in <name6> :
<name3> の <name1> 番目を <name2> とする <name6> の <name1> 番目を <name4> とする	<name2> = <name3> [ <name1> ] <name4> = <name6> [ <name1> ]	<name4> = <name2> = <name3> [ <name1> ] <name4> = <name6> [ <name1> ]
<name5> を <name2> の <val4> 乗で割った値が <val3> 以上のとき、	if <name5> / pow ( <name2> , <val4> ) >= <val3> :	continue <name5> / <name2> ** <val4> >= <val3> :
<name4> に <name3> を加えた値に <name6> を加えた値を出力する	print ( <name4> + <name3> + <name6> )	print ( <name4> + <name3> + <name6> )
<name4> の <name5> 番目の末尾に [ MASK ] を追加するを <name3> とする	<name3> = <name4> [ <name5> ] . append	<name3> = <name4> [ <name5> ] . append
<name6> の末尾に ( <name3> に <val4> を加えた値、 <name2> 、 <name1> に <val4> を加えた値 ) の組を追加する	<name6> . append ( ( <name3> + <val4> , <name2> , <name1> + <val4> ) )	<name2> . append ( ( <name3> + <val4> , <name2> , <name1> + <val4> ) )
<name6> の <name3> の <name5> 番目番目を <val2> だけ増加させる	<name6> [ <name3> [ <name5> ] ] += <val2>	<name3> [ <name3> [ <name5> ] ] += <val2>
ソートされた順序を保ったまま <name5> を <name1> に挿入できる最後の位置から <name2> を引いた値から <val3> を引いた値を <name4> とする	<name4> = bisect . bisect_right ( <name1> , <name5> ) - <name2> - <val3>	<name3> <name4> = bisect . bisect_right ( <name1> , <name5> ) - <name2> - <val3>
<name1> の末尾に ( <name2> 、 <name5> 、 <name4> の <name5> 番目の <name2> 番目 ) からなる列を追加する	<name1> . append ( [ <name2> , <name5> , <name4> [ <name5> ] [ <name2> ] ] )	<name1> . append ( [ <name2> , <name5> , <name4> [ <name5> ] [ <name2> ] ] )
<val5> を <name4> を <name6> を <name1> とするとするとするを <name3> とする	<name3> = <name1> = <name6> = <name4> = <val5>	<name3> = <name1> = <name6> = <name4> = <val5>
<name6> に <name3> を追加した集まり	<name6> . add ( <name3> )	<name6> . add ( <name3> )
<name1> ( <name2> , ( <name4> + <name5> , <name6> + <name3> ) )	<name1> ( <name2> , ( <name4> + <name5> , <name6> + <name3> ) )	<name1> ( <name2> , ( <name4> + <name5> , <name6> + <name3> ) )
<val4> を <val5> で割った値の <name2> 乗を <name6> の <val3> 番目にする	<name6> [ <val3> ] = ( <val4> / <val5> ) ** <name2>	<name2> [ <val3> ] = <val4> / <val5> ** <name2>
<name6> ( ) を <name3> とする	<name3> = <name6> ( )	<name3> = <name6> ( )
ソートされた順序を保ったまま <name4> の <name6> 番目を <name5> に挿入できる位置を <name2> とする	<name2> = bisect . bisect_left ( <name5> , <name4> [ <name6> ] )	<name2> = bisect . bisect_left ( <name5> , <name4> [ <name6> ] )
<name1> ( ) を <name5> とする	<name5> = <name1> ( )	<name2> <name5> = <name1> ( )
( <val4> 、 <val6> 、 <val2> 、 <val3> 、 <val5> 、 <val1> 、 <val4> 、 <val6> 、 <val2> 、 <val3> ) からなる列のうち <name5> 個までの順列を順に <name1> として、繰り返す	for <name1> in permutations ( [ <val4> , <val6> , <val2> , <val3> , <val5> , <val1> , <val4> , <val6> , <val2> , <val3> ] , <name5> ) :	. for <name1> in permutations ( [ <val4> , <val6> , <val2> , <val3> , <val5> , <val1> , <val4> , <val6> , <val2> , <val3> ] , <name5> ) :
<name6> を <name2> ( <name1> + <val4> , <name3> -1 , <name5> -1 ) に <name3> を掛けた値に <name5> を掛けた値を <name6> で割った余りだけ増加させる	<name6> += <name2> ( <name1> + <val4> , <name3> - <val4> , <name5> - <val4> ) * <name3> * <name5> % <name6>	<name1> += <name2> ( <name1> + <val4> , <name3> - <val4> , <name5> - <val4> ) * <name3> * <name5> % <name6>
<name5> を <name2> で割った余りが <val3> と等しい間、次を繰り返す	while <name5> % <name2> == <val3> :	del <name5> % <name2> == <val3> :
<name1> の <name3> から <val4> を引いた値番目を <name6> とする	<name6> = <name1> [ <name3> - <val4> ]	else = <name1> [ <name3> - <val4> ]
<name3> を <name2> を <val4> だけ右シフトした値だけ増加させる	<name3> += <name2> >> <val4>	<name1> += ( <name2> >> <val4> )
( <name5> ) からなる列の集合が <name2> の部分集合のとき、	if set ( [ <name5> ] ) . issubset ( <name2> ) :	list ( set ( [ <name5> ] ) . issubset ( <name2> ) :
<name3> の先頭を展開してを出力する	print ( * <name3> [ 0 ] )	print ( * <name3> [ 0 ] )
<name2> が <name4> の <name6> 番目の長さと等しくないとき、	if <name2> != len ( <name4> [ <name6> ] ) :	raise <name2> != len ( <name4> [ <name6> ] ) :
<name2> に - <name1> に <name4> を加えた値を掛けた値に <name3> を掛けた値を <val6> に <name5> を掛けた値で割った値を <name5> とする	<name5> = <name2> * ( - <name1> + <name4> ) * <name3> / ( <val6> * <name5> )	else = <name2> * ( - <name1> + <name4> ) * <name3> / ( <val6> * <name5> )
\ <val2> を間に入れて <name4> を連結した文字列を出力する\	\ print ( <val2> . join ( <name4> ) ) \	for print ( <val2> . join ( <name4> ) ) \
<name3> 、 <name5> の <name4> 番目に <name2> ( <val6> ** <name4> , <name4> ) を加えた値の最小値を <name3> とする	<name3> = min ( <name3> , <name5> [ <name4> ] + <name2> ( <val6> ** <name4> , <name4> ) )	<name3> = min ( <name3> , <name5> [ <name4> ] + <name2> ( <val6> ** <name4> , <name4> ) )
<name2> ( <name5> . <name3> ) を <name5> の <name3> にする	<name5> . <name3> = <name2> ( <name5> . <name3> )	<name2> . <name3> = <name2> ( <name5> . <name3> )
<name4> の y 座標が <name5> の y 座標より大きいとき、	if <name4> . y > <name5> . y :	if <name4> . y > <name5> . y :
<name5> を <name3> の <name2> 番目の <name6> にする	<name3> [ <name2> ] . <name6> = <name5>	( <name3> [ <name2> ] . <name6> = <name5> )
<name2> に <name6> を掛けた値に <name2> を <val1> で割った商に <name5> を掛けた値を加えた値に <name3> に <name4> を掛けた値を加えた値に <name3> を <val2> で割った商に <name6> を掛けた値を加えた値を <name4> とする	<name4> = <name2> * <name6> + <name2> // <val1> * <name5> + <name3> * <name4> + <name3> // <val2> * <name6>	<name4> = <name2> * <name6> + <name2> // <val1> * <name5> + <name3> * <name4> + ( <name3> // <val2> ) * <name6>
<name6> のハッシュ値を <name4> とする	<name4> = hash ( <name6> )	<name4> = hash ( <name6> )
( ( <val3> 、 <val3> ) の組、 ( <name6> 、 <name4> から <val1> を引いた値 ) の組、 ( <name5> 、 <name2> ) の組、 ( <name6> から <val1> を引いた値、 <name4> ) の組 ) からなる列を <name2> とする	<name2> = [ ( <val3> , <val3> ) , ( <name6> , <name4> - <val1> ) , ( <name5> , <name2> ) , ( <name6> - <val1> , <name4> ) ]	<name2> = [ ( <val3> , <val3> ) , ( <name6> , <name4> - <val1> ) , ( <name5> , <name2> ) , ( <name6> - <val1> , <name4> ) ]
<name5> のとき <name5> の <val6> 番目、そうでなければ <val4> に <val3> を加えた値を <name2> とする	<name2> = ( <name5> [ <val6> ] if <name5> else <val4> ) + <val3>	( <name5> [ <val6> ] if <name5> else <val4> ) + <val3>
0 から <name1> 未満までの数列の各要素を <name3> とし、 0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり未定値の列の列を <name6> とする	<name6> = [ [ None for <name2> in range ( <name5> ) ] for <name3> in range ( <name1> ) ]	<name6> = [ [ None for <name2> in range ( <name5> ) ] for <name3> in range ( <name1> ) ]
( <name6> 、 <name3> ) の組が <name1> に含まれるとき、 <blk> 最初からもう一度、繰り返す </blk>	if ( <name6> , <name3> ) in <name1> : <blk> continue </blk>	list if ( <name6> , <name3> ) in <name1> : <blk> continue </blk>
<name3> に <name5> を加えた値を <name1> とする <name2> に <name6> を加えた値を <name4> とする	<name1> = <name3> + <name5> <name4> = <name2> + <name6>	<name1> = <name3> + <name5> <name4> = <name2> + <name6>
( ( <val4> ) からなる列の <val4> から <name1> 未満までの数列の各要素を <name6> とし、 <val2> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val4> ] * [ <val2> for <name6> in range ( <name1> ) ] ]	<name5> = [ [ <val4> ] * [ <val2> for <name6> in range ( <name1> ) ] ]
<name3> ( <name1> . <name2> [ <val4> : ] )	<name3> ( <name1> . <name2> [ <val4> : ] )	<name3> ( <name1> . <name2> [ <val4> : ] )
<name6> の <name5> 番目の末尾に ( <name3> 、 <name4> の <name5> 番目の <name3> 番目 ) の組を追加する	<name6> [ <name5> ] . append ( ( <name3> , <name4> [ <name5> ] [ <name3> ] ) )	<name3> [ <name5> ] . append ( ( <name3> , <name4> [ <name5> ] [ <name3> ] ) )
入力された文字列を空白で分割した字句列の各要素に <name5> をパラメータとして <name5> の整数値を返す関数を適用した列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = map ( lambda <name5> : int ( <name5> ) , input ( ) . split ( ) )	<name4> , <name3> = map ( lambda <name5> : int ( <name5> ) , input ( ) . split ( ) )
<name1> の <name6> が <name5> と等しいとき、	if <name1> . <name6> == <name5> :	[ if <name1> . <name6> == <name5> :
<name5> に <name3> を掛けた値に <name6> のラジアンの正弦を掛けた値を <val4> で割った値を <name2> とする	<name2> = <name5> * <name3> * math . sin ( math . radians ( <name6> ) ) / <val4>	<name2> = <name5> * <name3> * math . sin ( math . radians ( <name6> ) ) / <val4>
<name3> から読み込んだ一行の各要素に整数を適用した列を <name5> とする	<name5> = map ( int , <name3> . readline ( ) )	<name5> = map ( int , <name3> . readline ( ) )
<val1> から <name6> 未満までの数列を順に <name3> として、繰り返す <blk> <val1> を <name5> の <name3> 番目の <name3> 番目にする </blk>	for <name3> in range ( <name6> ) : <blk> <name5> [ <name3> ] [ <name3> ] = <val1> </blk>	) for <name3> in range ( <name6> ) : <blk> <name5> [ <name3> ] [ <name3> ] = <val1> </blk>
kyo を返す	return 'kyo'	return call ' '
<name2> を <name3> だけ増加させる <name1> を <name5> だけ増加させる	<name2> += <name3> <name1> += <name5>	<name2> += <name3> <name1> += <name5>
<name4> が ( <name1> 、 <name2> 、 <name3> ) からなる列に含まれないとき、	if <name4> not in [ <name1> , <name2> , <name3> ] :	list not in <name4> not in [ <name1> , <name2> , <name3> ] :
<name3> の <val1> 番目から <name3> の長さまでの部分列内の <val2> の出現回数を <name4> とする	<name4> = <name3> [ <val1> : len ( <name3> ) ] . count ( <val2> )	<name4> = <name3> [ <val1> : len ( <name3> ) ] . count ( <val2> )
<name1> が <val3> と等しくないとき、 <blk> <name5> を <name1> で割った商に <name1> から <val3> を引いた値を掛けた値を <name5> とする </blk>	if <name1> != <val3> : <blk> <name5> = <name5> // <name1> * ( <name1> - <val3> ) </blk>	if <name1> != <val3> : <blk> <name5> = <name5> // <name1> * ( <name1> - <val3> ) </blk>
<name3> を <name2> の <name6> 番目の <val4> 番目にする	<name2> [ <name6> ] [ <val4> ] = <name3>	( <name2> [ <name6> ] [ <val4> ] = <name3> )
<name6> の <val4> 番目から、つまり末尾までの部分列が <name1> に含まれるとき <val2> 、そうでなければ <val3> を出力する	print ( <val2> if <name6> [ <val4> : ] in <name1> else <val3> )	print ( <val2> if <name6> [ <val4> : ] in <name1> else <val3> )
<name2> ( <name6> ) を <name4> とする	<name4> = <name2> ( <name6> )	<name4> = <name2> ( <name6> )
<name1> が <name4> と <val6> の論理積が <val5> より大きいかどうかと等しくないとき、	if <name1> != ( ( <name4> & <val6> ) > <val5> ) :	!= <name1> != ( ( <name4> & <val6> ) > <val5> :
<name6> . <name5> ( <name1> , <name3> ) を返す	return <name6> . <name5> ( <name1> , <name3> )	yield <name6> . <name5> ( <name1> , <name3> )
<name2> の <name3> から読み込んだ行の列を <name4> とする	<name4> = <name2> . <name3> . readlines ( )	( <name4> = <name2> . <name3> . readlines ( ) )
<name1> の末尾に <name2> ( <name3> [ <name6> * <val5> ] , <name3> [ <name6> * <val5> + <val4> ] ) を追加する	<name1> . append ( <name2> ( <name3> [ <name6> * <val5> ] , <name3> [ <name6> * <val5> + <val4> ] ) )	<name1> . append ( <name2> ( <name3> [ <name6> * <val5> ] , <name3> [ <name6> * <val5> + <val4> ] ) )
<name4> の <name3> 番目の末尾に <val2> を追加する	<name4> [ <name3> ] . append ( <val2> )	<name3> [ <name3> ] . append ( <val2> )
<name4> ( <name1> * <name3> ) を <name1> とする	<name1> = <name4> ( <name1> * <name3> )	<name1> = <name4> ( <name1> * <name3> )
<name2> を <val5> を <name3> だけ左シフトした値との排他的論理和にする	<name2> ^ = <val5> << <name3>	( <name2> ^ = <val5> << <name3> )
<name5> ( <name2> , <val6> ) を <name2> とする	<name2> = <name5> ( <name2> , <val6> )	<name2> = <name5> ( <name2> , <val6> )
<name6> が <name3> の先頭の <val5> 番目より小さいとき、	if <name6> < <name3> [ <val5> ] [ <val5> ] :	if <name6> < <name3> [ 0 ] [ <val5> ] :
<name2> を <name6> の <name4> にする	<name6> . <name4> = <name2>	<name1> . <name4> = <name2>
<name1> 、入力された文字列を空白で分割した字句列の各要素に整数を適用した列の要素をそれぞれ組にした列の各要素を <name4> 、 <name5> とし、 <name4> に <name5> を加えた値の列を <name1> とする	<name1> = [ <name4> + <name5> for <name4> , <name5> in zip ( <name1> , map ( int , input ( ) . split ( ) ) ) ]	<name2> = [ <name4> + <name5> for <name4> , <name5> in zip ( <name1> , map ( int , input ( ) . split ( ) ) ) ]
<name6> . <name5> ( <name4> ) を <name4> とする	<name4> = <name6> . <name5> ( <name4> )	<name4> = <name6> . <name5> ( <name4> )
<name3> を <val2> で割った値に <val4> を掛けた値に円周率を掛けた値を <name3> とする	<name3> = ( <name3> / <val2> ) * <val4> * math . pi	else = <name3> / <val2> * <val4> * math . pi
<name3> . <name2> ( <val5> ** <val6> )	<name3> . <name2> ( <val5> ** <val6> )	<name1> . <name2> ( <val5> ** <val6> )
<name1> ( <name2> ( <name5> [ <val6> : -1 ] ) ) を <name4> とする	<name4> = <name1> ( <name2> ( <name5> [ <val6> : - 1 ] ) )	<name4> = <name1> ( <name2> ( <name5> [ <val6> : - <val6> ] ) )
<name6> をパラメータとして <name1> の <name6> 番目を返す関数を <name2> として 0 から <name4> 未満までの数列の最小値を <name3> とする	<name3> = min ( range ( <name4> ) , <name2> = lambda <name6> : <name1> [ <name6> ] )	<name6> = min ( range ( <name4> ) , <name2> = lambda <name6> : <name1> [ <name6> ] )
<name6> が <name3> 以下のとき ( <name4> 、 <name2> ) の組、そうでなければ ( <name3> 、 <name5> ) の組を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = ( <name4> , <name2> ) if <name6> <= <name3> else ( <name3> , <name5> )	<name5> , <name1> = ( <name4> , <name2> ) if <name6> <= <name3> else ( <name3> , <name5> )
<name4> を <name2> の <name1> から <val3> を引いた値番目の <name6> 番目だけ増加させる	<name4> += <name2> [ <name1> - <val3> ] [ <name6> ]	( <name4> += <name2> [ <name1> - <val3> ] [ <name6> ] )
<name6> ( <name2> [ <val3> ] , <name2> [ <val5> ] ) を <name1> の <name2> にする	<name1> . <name2> = <name6> ( <name2> [ <val3> ] , <name2> [ <val5> ] )	<name3> . <name1> . <name2> = <name6> ( <name2> [ <val3> ] , <name2> [ <val5> ] )
0 から <name3> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列を <name6> とする	<name6> = [ int ( input ( ) ) for <name5> in range ( <name3> ) ]	<name6> = [ int ( input ( ) ) for <name5> in range ( <name3> ) ]
<name1> が <name3> 以下の間、次を繰り返す	while <name1> <= <name3> :	del <name1> <= <name3> :
<name3> の <name1> 番目の各要素を <name6> とし、 <name6> が <name2> に含まれないときの ( <name6> 、 <name1> ) の組の列を追加して <name5> を拡張する	<name5> . extend ( [ ( <name6> , <name1> ) for <name6> in <name3> [ <name1> ] if <name6> not in <name2> ] )	<name5> . extend ( [ ( <name6> , <name1> ) for <name6> in <name3> [ <name1> ] if <name6> not in <name2> ] )
( ( <name4> 、 <val2> 、 <val2> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <name4> , <val2> , <val2> ) ]	<name5> = [ ( <name4> , <val2> , <val2> ) ]
<val1> から <name5> 未満までの数列の各要素を <name6> とし、 <val1> から <name5> 未満までの数列の各要素を <name4> とし、 <val1> の列の列を <name2> とする	<name2> = [ [ <val1> for <name4> in range ( <name5> ) ] for <name6> in range ( <name5> ) ]	<name6> = [ [ <val1> for <name4> in range ( <name5> ) ] for <name6> in range ( <name5> ) ]
<val4> から <name1> 未満までの数列の各要素を <name3> とし、 <val4> の列を <name5> とする	<name5> = [ <val4> for <name3> in range ( <name1> ) ]	<name5> = [ <val4> for <name3> in range ( <name1> ) ]
<name4> を <val1> で割った余りを <name4> とする	<name4> = <name4> % <val1>	( <name4> = <name4> % <val1> )
改行せずに <val5> 、 <name4> の <name6> を出力する <name1> ( <name4> . <name3> ) <name1> ( <name4> . <name2> )	print ( <val5> , <name4> . <name6> , end = <val5> ) <name1> ( <name4> . <name3> ) <name1> ( <name4> . <name2> )	[ print ( <val5> ) , <name4> . <name6> , end = <val5> ) <name1> ( <name4> . <name3> ) <name1> ( <name4> . <name2> )
<name1> の、つまり先頭から <val2> 番目までの部分列を <name1> の <val3> 番目から、つまり末尾までの部分列にする	<name1> [ <val3> : ] = <name1> [ : <val2> ]	<name1> [ <val3> : ] = <name1> [ : <val2> ]
( <name6> 、 <name5> から <name4> に <name6> を掛けた値を引いた値 ) の組を返す	return ( <name6> , ( <name5> - <name4> * <name6> ) )	yield ( <name6> , <name5> - <name4> * <name6> )
<name3> の <name1> に <val2> を加えた値番目の整数値を <name4> とする	<name4> = int ( <name3> [ <name1> + <val2> ] )	<name4> = int ( <name3> [ <name1> + <val2> ] )
{} {} { : . 8 f }を書式として <name5> を <name4> で割った値の整数値、 <name5> を <name4> で割った余り、 <name5> を <name4> で割った値で整形した文字列を出力する	print ( '{} {} {:.8f}' . format ( int ( <name5> / <name4> ) , <name5> % <name4> , <name5> / <name4> ) )	print ( '{} {}' . format ( int ( <name5> / <name4> ) , <name5> % <name4> , <name5> / <name4> ) )
<name6> に <name4> を加えた値を <val5> で割った商を <name1> とする	<name1> = ( <name6> + <name4> ) // <val5>	<name1> = ( <name6> + <name4> ) // <val5>
<val3> から <name2> 未満までの数列の各要素を <name5> とし、 <val3> から <name4> に <val6> を加えた値未満までの数列の各要素を <name1> とし、 <val3> の列の列を <name2> とする	<name2> = [ [ <val3> for <name1> in range ( <name4> + <val6> ) ] for <name5> in range ( <name2> ) ]	<name6> = [ [ <val3> for <name1> in range ( <name4> + <val6> ) ] for <name5> in range ( <name2> ) ]
<name4> ( <name2> , <name3> , <name6> )	<name4> ( <name2> , <name3> , <name6> )	<name4> ( <name2> , <name3> , <name6> )
<name3> {}を返す	return <name3> { Y -1867 }	from return ( ( <name3> > b ) )
<name3> に <val4> を加えた値、 <name5> を出力する	print ( <name3> + <val4> , <name5> )	print ( <name3> + <val4> , <name5> )
<name4> 、 <name6> をパラメータとして <name4> に <val1> に <name6> を加えた値を掛けた値を <val1> で割った値の整数値を返す関数を <name3> とする	<name3> = lambda <name4> , <name6> : int ( <name4> * ( <val1> + <name6> ) / <val1> )	<name3> = lambda <name4> , <name6> : int ( <name4> * ( <val1> + <name6> ) / <val1> )
<name2> . <name1> ( <name2> . <name3> [ <name6> ] [ <name5> ] ) を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name2> . <name1> ( <name2> . <name3> [ <name6> ] [ <name5> ] )	( <name5> , <name4> = <name2> . <name1> ( <name2> . <name3> [ <name6> ] [ <name5> ] ) )
<name3> から <name4> を引いた値から <name5> を引いた値を <name6> とする	<name6> = <name3> - <name4> - <name5>	( <name6> = <name3> - <name4> - <name5> )
ONLINE_FRONT を返す	return 'ONLINE_FRONT'	self = '{:.6f} '?'
<name5> から <name1> を引いた値が <val3> より大きいとき、	if <name5> - <name1> > <val3> :	> ( <name5> - <name1> ) > <val3> :
<name6> 、 <name1> の総和の最大値を <name6> とする	<name6> = max ( <name6> , sum ( <name1> ) )	<name6> = max ( <name6> , sum ( <name1> ) )
<val3> が <name4> 以下かどうかが <name1> に <val5> を掛けた値から <val2> を引いた値より小さくかつ <val3> が <name6> 以下かどうかが <name3> に <val5> を掛けた値から <val2> を引いた値より小さいとき、	if <val3> <= <name4> < <name1> * <val5> - <val2> and <val3> <= <name6> < <name3> * <val5> - <val2> :	[ <val3> <= <name4> < <name1> * <val5> - <val2> and <val3> <= <name6> < <name3> * <val5> - <val2> :
<name3> を展開し、それぞれ <name6> 、 <name1> とする <name5> を展開し、それぞれ <name4> 、 <name2> とする <name3> を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name3> <name4> , <name2> = <name5> <name6> , <name1> = <name3>	<name2> , <name1> = <name3> <name4> , <name2> = <name5> <name6> , <name1> = <name3>
( <name6> の <name5> ) からなる列の両端キューを <name4> とする	<name4> = deque ( [ <name6> . <name5> ] )	<name4> = deque ( [ <name6> . <name5> ] )
<name2> に <name1> を掛けた値を出力する	print ( <name2> * <name1> )	print ( <name2> * <name1> )
<val5> が <name1> の <name4> から <val5> を引いた値番目と等しいとき、	if ( <val5> == <name1> [ <name4> - <val5> ] ) :	while <val5> == <name1> [ <name4> - <val5> ] :
<name5> の <name1> に <val3> を加えた値番目に <name6> を追加した集まり	<name5> [ <name1> + <val3> ] . add ( <name6> )	<name1> [ <name1> + <val3> ] . add ( <name6> )
 を代わりの行末として無限の整数列を出力する	print ( count , end = ' ' )	print ( count , end = ' ' ' ' )
<name3> の <val4> 番目から <name3> の長さまでの部分列内の <val5> の出現回数を <name1> とする	<name1> = <name3> [ <val4> : len ( <name3> ) ] . count ( <val5> )	<name1> = <name3> [ <val4> : len ( <name3> ) ] . count ( <val5> )
<name6> の <name3> 番目を展開し、それぞれ <name4> 、 <name5> 、 <name1> 、 <name2> とする	<name4> , <name5> , <name1> , <name2> = <name6> [ <name3> ]	( <name4> , <name5> , <name1> , <name2> = <name6> [ <name3> ] )
<name3> . <name2> ( <name3> . <name6> )	<name3> . <name2> ( <name3> . <name6> )	<name1> . <name2> ( <name3> . <name6> )
\ <name6> ( <val2> ) \	\ <name6> ( <val2> ) \	<val1> <name6> ( <val2> ) \
<name6> を間に入れて <name3> の <name2> 番目、 <name3> の <name1> 番目を連結した文字列のとき、	if <name6> . join ( <name3> [ <name2> ] , <name3> [ <name1> ] ) :	for <name6> . join ( <name3> [ <name2> ] , <name3> [ <name1> ] ) :
改行せずに <name1> の <name2> 番目の <name3> の文字列を出力する	print ( str ( <name1> [ <name2> ] . <name3> ) , end = '' )	[ print ( <name1> [ <name2> ] . <name3> ) , end = '' )
<name5> ( ) のリストを <name4> とする	<name4> = list ( <name5> ( ) )	<name4> = list ( <name5> ( ) )
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> 、 <name4> 、 <name3> とする	<name5> , <name1> , <name4> , <name3> = map ( int , <name6> ( ) . split ( ) )	<name3> , <name1> , <name4> , <name3> = map ( int , <name6> ( ) . split ( ) )
<name1> から <name6> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> , <name6> ) :	: for <name5> in range ( <name1> , <name6> ) :
関数 <name5> を <name2> 、 <name6> をパラメータとして定義する <name2> の x 座標に <name6> の y 座標を掛けた値から <name2> の y 座標に <name6> の x 座標を掛けた値を引いた値を返す	def <name5> ( <name2> , <name6> ) : return ( <name2> . x * <name6> . y - <name2> . y * <name6> . x )	<name5> ( <name2> , <name6> ) : return <name5> ( <name2> . x * <name6> . y - <name2> . <name6> . x )
<name3> を <name1> で割った値を <name2> とする	<name2> = <name3> / <name1>	( <name2> = <name3> / <name1> )
<name1> ( <name5> , <name4> ) のとき、	if <name1> ( <name5> , <name4> ) :	for <name1> ( <name5> , <name4> ) :
<name5> の <name4> 番目が <name6> の <name4> 番目の長さより小さいとき、	if <name5> [ <name4> ] < len ( <name6> [ <name4> ] ) :	[ if <name5> [ <name4> ] < len ( <name6> [ <name4> ] ) :
<name6> の <name2> 番目、 <name5> の最大値を <name6> の <name2> 番目にする	<name6> [ <name2> ] = max ( <name6> [ <name2> ] , <name5> )	else [ <name2> ] = max ( <name6> [ <name2> ] , <name5> )
<name4> の末尾に ( <name6> 、 <name2> ) の組を追加する	<name4> . append ( ( <name6> , <name2> ) )	not <name4> . append ( ( <name6> , <name2> ) )
<val5> から <val4> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val5> , <val4> ) :	continue for <name2> in range ( <val5> , <val4> ) :
<name2> ( <name1> . <name6> / <name5> , - <name1> . <name4> / <name5> ) に <name3> を掛けた値を <name3> とする	<name3> = <name2> ( <name1> . <name6> / <name5> , - <name1> . <name4> / <name5> ) * <name3>	<name3> = <name2> ( <name1> . <name6> / <name5> , - <name1> . <name4> / <name5> ) * <name3>
<name5> に <name6> を加えた値を <val3> で割った余りが <val1> と等しいとき、	if ( <name5> + <name6> ) % <val3> == <val1> :	[ <val1> for <name5> in ( <name5> + <name6> ) % <val3> == <val1> :
<name5> の <val3> 番目を <name5> とする	<name5> = <name5> [ <val3> ]	else = <name5> [ <val3> ]
入力された文字列の先頭を <name3> とする	<name3> = input ( ) [ 0 ]	<name3> = input ( ) [ 0 ]
<name4> ( <name1> , - <name2> ( <name5> [ <val6> ] ) )	<name4> ( <name1> , - <name2> ( <name5> [ <val6> ] ) )	<name4> ( <name1> , - <name2> ( <name5> [ <val6> ] ) )
<name5> の値の集まりのリストを返す	return list ( <name5> . values ( ) )	self return list ( <name5> . values )
空列、空列を <name5> 、 <name1> とする	<name5> , <name1> = [ ] , [ ]	<name2> , <name1> = [ ] , [ ]
{ <val6> : . 3 f } { 1 : . 3 f }を書式として <name1> に <val6> を加えた値、 <name2> に <val6> を加えた値で整形した文字列を出力する	print ( '{0:.3f} {1:.3f}' . format ( <name1> + <val6> , <name2> + <val6> ) )	print ( {1:.5f}' . format ( <name1> + <val6> , <name2> + <val6> ) )
<name2> を <name6> から <name3> を引いた値に <name1> を加えた値だけ増加させる	<name2> += <name6> - <name3> + <name1>	<name2> += ( <name6> - <name3> + <name1> )
<name4> の <name5> に <name6> を挿入する	<name4> . insert ( <name5> , <name6> )	<name5> . insert ( <name5> , <name6> )
<name4> から <name6> を引いた値が <val1> より小さいとき、 <blk> <val1> を返す </blk>	if <name4> - <name6> < <val1> : <blk> return <val1> </blk>	while <name4> - <name6> < <val1> : <blk> return <val1> </blk>
<name1> を <name5> の <name3> にする	<name5> . <name3> = <name1>	( <name5> . <name3> = <name1> )
入力された文字列を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]	<name6> , <name2> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]
<name5> を <val4> で割った余りを出力する	print ( <name5> % <val4> )	print ( <name5> % <val4> )
<val3> 、 <name6> から <val4> を引いた値の最大値、 <name6> に <val5> を加えた値、 <name1> の長さの最小値を <name1> 、 <name2> とする	<name1> , <name2> = max ( <val3> , <name6> - <val4> ) , min ( <name6> + <val5> , len ( <name1> ) )	<name6> , <name2> = max ( <val3> , <name6> - <val4> ) , min ( <name6> + <val5> , len ( <name1> ) )
<name5> ( ( <name1> , <name4> ) )	<name5> ( ( <name1> , <name4> ) )	<name4> ( ( <name1> , <name4> ) )
<name4> ( <val2> ) を <name1> とする	<name1> = <name4> ( <val2> )	<name1> = <name4> ( <val2> )
<name1> ( <name4> ( <name2> , <name5> ( <name6> ) ) ) を返す	return <name1> ( <name4> ( <name2> , <name5> ( <name6> ) ) )	yield <name1> ( <name4> ( <name2> , <name5> ( <name6> ) ) )
<name5> の <name2> 番目から、つまり末尾までの部分列の <val1> と等しい要素の最初の位置を <name4> とする	<name4> = <name5> [ <name2> : ] . index ( <val1> )	<name4> = <name5> [ <name2> : ] . index ( <val1> )
<name5> を入力された文字列を英小文字に変換した文字列だけ増加させる	<name5> += input ( ) . lower ( )	( <name5> += input ( ) . lower ( ) )
0 から <name4> 未満までの数列の各要素を <name6> とし、 <name1> ( ) の両端から空白改行を取り除いた文字列の各要素に <name3> をパラメータとして <name5> ( <name3> ) から <name2> を引いた値を返す関数を適用した列のリストの列を <name4> とする	<name4> = [ list ( map ( lambda <name3> : ( <name5> ( <name3> ) - <name2> ) , <name1> ( ) . strip ( ) ) ) for <name6> in range ( <name4> ) ]	<name5> = [ list ( map ( lambda <name3> : <name5> ( <name3> ) - <name2> , <name1> ( ) . strip ( ) ) ) for <name6> in range ( <name4> ) ]
<name3> . <name4> ( ) が <val5> と等しくなくかつ <name3> の <name2> が <val6> と等しいとき、	if <name3> . <name4> ( ) != <val5> and <name3> . <name2> == <val6> :	raise <name3> . <name4> ( ) != <val5> and <name3> . <name2> == <val6> :
改行せずに <name4> [ <val5> ] の先頭の文字列に <val2> を加えた値に <name4> の先頭の <val3> 番目の文字列を加えた値を出力する	print ( str ( <name4> [ <val5> ] [ <val5> ] ) + <val2> + str ( <name4> [ <val5> ] [ <val3> ] ) , end = '' )	print ( str ( <name4> [ <val5> ] [ 0 ] ) + <val2> + str ( <name4> [ 0 ] [ <val3> ] ) , end = '' )
<name6> を <val3> だけ右シフトした値を <name6> とする	<name6> = <name6> >> <val3>	( <name6> = <name6> >> <val3> )
( <name3> の <val2> 番目、 <name3> の <val5> 番目、 <name3> の先頭、 <name3> の <val6> 番目 ) からなる列を <name4> の <name1> にする	<name4> . <name1> = [ <name3> [ <val2> ] , <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val6> ] ]	<name2> . <name1> = [ <name3> [ <val2> ] , <name3> [ <val5> ] , <name3> [ 0 ] , <name3> [ <val6> ] ]
<name3> の <name5> に <val1> を加えた値から <name5> に <name2> を加えた値から <val1> を引いた値までの部分列が <name6> の <val1> 番目から <name2> から <val1> を引いた値までの部分列と等しいとき、	if <name3> [ <name5> + <val1> : <name5> + <name2> - <val1> ] == <name6> [ <val1> : <name2> - <val1> ] :	for <name3> in <name3> [ <name5> + <val1> : <name5> + <name2> - <val1> ] == <name6> [ <val1> : <name2> - <val1> ] :
<name5> の <name2> に <name1> を加えた値番目、 <name5> の <name2> 番目に <name6> を加えた値の最大値を <name5> の <name2> に <name1> を加えた値番目にする	<name5> [ <name2> + <name1> ] = max ( <name5> [ <name2> + <name1> ] , <name5> [ <name2> ] + <name6> )	<name4> [ <name2> + <name1> ] = max ( <name5> [ <name2> + <name1> ] , <name5> [ <name2> ] + <name6> )
<name3> ( <name2> [ -1 ] , <name2> [ <val5> ] ) が <name1> より小さいとき、	if <name3> ( <name2> [ - 1 ] , <name2> [ <val5> ] ) < <name1> :	list ( <name3> ( <name2> [ - 1 ] , <name2> [ <val5> ] ) < <name1> :
入力された文字列を空白で分割した字句列の各要素に <name4> をパラメータとして <name4> の整数値を返す関数を適用した列のリストを <name3> とする	<name3> = list ( map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) ) )	<name6> = list ( map ( lambda <name4> : int ( <name4> ) , input ( ) . split ( ) ) )
<name1> の間、次を繰り返す <blk> <name1> 、 <name3> を <name1> で割った余りを <name3> 、 <name1> とする </blk>	while <name1> : <blk> <name3> , <name1> = <name1> , <name3> % <name1> </blk>	: while <name1> : <blk> <name3> , <name1> = <name1> , <name3> % <name1> </blk>
<name2> 、 <name5> の <name6> の <name3> の <name4> 番目番目の <name1> の <name4> 番目番目の <name2> の最小値を <name2> とする	<name2> = min ( <name2> , <name5> . <name6> [ <name3> [ <name4> ] ] [ <name1> [ <name4> ] ] . <name2> )	<name2> = min ( <name2> , <name5> . <name6> [ <name3> [ <name4> ] ] [ <name1> [ <name4> ] ] . <name2> )
<val3> から <name6> 未満までの数列を順に <name2> として、繰り返す <blk> <val3> を <name4> の <name5> の <name1> 番目の <name2> 番目番目にする </blk>	for <name2> in range ( <name6> ) : <blk> <name4> [ <name5> [ <name1> ] [ <name2> ] ] = <val3> </blk>	: for <name2> in range ( <name6> ) : <blk> <name4> [ <name5> [ <name1> ] [ <name2> ] ] = <val3> </blk>
<name2> が <name1> から <val5> を引いた値より大きいとき、 <blk> <val4> を <name2> とする </blk>	if <name2> > <name1> - <val5> : <blk> <name2> = <val4> </blk>	\ <name2> = <name2> > <name1> - <val5> : <blk> <name2> = <val4> </blk>
<name4> の <name5> 番目が <name2> に含まれまたは <name4> の <name5> 番目を英小文字に変換した文字列が <name2> に含まれるとき、	if <name4> [ <name5> ] in <name2> or <name4> [ <name5> ] . lower ( ) in <name2> :	isinstance ( <name4> [ <name5> ] in <name2> or <name4> [ <name5> ] . lower ( ) in <name2> :
<name3> の <val5> 乗を <name4> とする	<name4> = <name3> ** <val5>	<name4> = <name3> ** <val5>
<name3> が <name5> の <name4> に含まれるとき、	if <name3> in <name5> . <name4> :	if <name3> in <name5> . <name4> :
<name2> の <val5> 番目が <val3> と等しいとき、 <blk> <name4> の <name6> 番目の末尾に <name2> の <val1> 番目を追加する </blk>	if <name2> [ <val5> ] == <val3> : <blk> <name4> [ <name6> ] . append ( <name2> [ <val1> ] ) </blk>	<blk> if <name2> [ <val5> ] == <val3> : <blk> <name4> [ <name6> ] . append ( <name2> [ <val1> ] ) </blk>
<name4> . <name6> ( ) の平方根を返す	return sqrt ( <name4> . <name6> ( ) )	assert math . sqrt ( <name4> . <name6> ( ) )
<name3> の先頭を取り出した値を出力する	print ( <name3> . pop ( ) )	<name1> . print ( <name3> . pop ( ) )
<name3> ( <val1> )	<name3> ( <val1> )	( <name3> ( <val1> ) )
<name6> 、 <name5> の <name3> から <val2> を引いた値番目の最大値を <name6> とする	<name6> = max ( <name6> , <name5> [ <name3> - <val2> ] )	<name6> = max ( <name6> , <name5> [ <name3> - <val2> ] )
<name2> から <val1> を引いた値、 <name3> を追加して <name4> を更新する	<name4> . update ( <name2> - <val1> , <name3> )	<name4> . update ( <name2> - <val1> , <name3> )
( <val2> 、 <val2> ) の組を返す	return ( <val2> , <val2> )	yield ( <val2> , <val2> )
<val5> <name6> <val3> を <name2> とする	<name2> = <val5> <name6> <val3>	<name6> <name2> = <val5> <name6> <val3>
<name2> に <val1> を加えた値から <name5> に <val1> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> + <val1> , <name5> + <val1> ) :	. for <name6> in range ( <name2> + <val1> , <name5> + <val1> ) :
<name6> の <name4> 番目でなくかつ <name1> の <name4> 番目でないとき、	if not <name6> [ <name4> ] and not <name1> [ <name4> ] :	isinstance ( not <name6> [ <name4> ] ) and not <name1> [ <name4> ] :
( ( <val5> ) からなる列の <val5> から <name3> 未満までの数列の各要素を <name6> とし、 <name4> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val5> ] * [ <name4> for <name6> in range ( <name3> ) ] ]	<name2> = [ [ <val5> ] * [ <name4> for <name6> in range ( <name3> ) ] ]
<val1> を書式として <name3> の <name2> 、 <name3> の <name5> 、 <name6> で整形した文字列を出力する	print ( <val1> . format ( <name3> . <name2> , <name3> . <name5> , <name6> ) )	print ( <val1> . format ( <name3> . <name2> , <name3> . <name5> , <name6> ) )
<name5> 、 <name4> ( <val3> , <val1> , <name6> , <name2> , <name5> ) に <name4> を掛けた値から <name3> を引いた値の最小値を <name5> とする	<name5> = min ( <name5> , <name4> ( <val3> , <val1> , <name6> , <name2> , <name5> ) * <name4> - <name3> )	<name6> = min ( <name5> , <name4> ( <val3> , <val1> , <name6> , <name2> , <name5> ) * <name4> - <name3> )
<name3> ( <name2> -1 , <name5> ) を <name4> とする	<name4> = <name3> ( <name2> - 1 , <name5> )	<name4> = <name3> ( <name2> - 1 , <name5> )
( <name5> 、 <val6> ) の組を返す	return ( <name5> , <val6> )	yield ( <name5> , <val6> )
<name1> . <name2> ( <name4> >> <name5> )	<name1> . <name2> ( <name4> >> <name5> )	<name1> . <name2> ( <name4> >> <name5> )
<name5> の末尾に ( <name3> の <name4> 番目の先頭から <name1> を引いた値、 <name3> の <name4> 番目の <val2> 番目から <name6> を引いた値 ) からなる列を追加する	<name5> . append ( [ <name3> [ <name4> ] [ 0 ] - <name1> , <name3> [ <name4> ] [ <val2> ] - <name6> ] )	<name1> . append ( [ <name3> [ <name4> ] [ 0 ] - <name1> , <name3> [ <name4> ] [ <val2> ] - <name6> ] )
<name2> の各要素を <name3> 、 <name4> とし、 <val1> を書式として <name3> 、 <name4> で整形した文字列の列を <name2> とする	<name2> = [ <val1> . format ( <name3> , <name4> ) for <name3> , <name4> in <name2> ]	<name6> = [ <val1> . format ( <name3> , <name4> ) for <name3> , <name4> in <name2> ]
<name6> に <name2> を加えた値に <name6> の <val5> 乗に <name2> の <val5> 乗を加えた値から <val5> * <name6> に <name2> を掛けた値に <name4> . <name1> ( <name3> ) の余弦を掛けた値を引いた値の平方根を加えた値を <name3> とする	<name3> = <name6> + <name2> + <name4> . sqrt ( pow ( <name6> , <val5> ) + pow ( <name2> , <val5> ) - <val5> * <name6> * <name2> * <name4> . cos ( <name4> . <name1> ( <name3> ) ) )	<name4> = <name6> + <name2> + sqrt ( <name6> ** <val5> + <name2> ** <val5> - <val5> * <name6> * <name2> * math . cos ( <name4> . cos ( <name1> ( <name3> ) ) ) )
<val2> を書式として <name1> で整形した文字列を <name6> とする	<name6> = <val2> . format ( <name1> )	<name6> = <val2> . format ( <name1> )
<name3> の <name1> から <val2> を引いた値番目を出力する	print ( <name3> [ <name1> ( <name3> , N ) - <val2> ] )	<name3> [ <name1> - <val2> ] = <name3> [ <name1> - <val2> ] )
<name4> に <name3> を加えた値の文字列の長さを出力する	print ( len ( str ( <name4> + <name3> ) ) )	<name4> print ( len ( str ( <name4> + <name3> ) ) )
<name3> を <name2> で割った余りが <val4> と等しい間、次を繰り返す	while <name3> % <name2> == <val4> :	del <name3> % <name2> == <val4> :
<name4> ( <name6> . <name5> , <name3> , <name1> + <val2> ) を <name5> とする	<name5> = <name4> ( <name6> . <name5> , <name3> , <name1> + <val2> )	<name5> = <name4> ( <name6> . <name5> , <name3> , <name1> + <val2> )
<name3> が <val5> 以下のとき、	if <name3> <= <val5> :	list ( <name3> <= <val5> ) :
<name3> を <name2> で割った余りが <val1> と等しいとき、	if <name3> % <name2> == <val1> :	list ( <name3> % <name2> == <val1> ) :
<name4> の <name5> から <val2> を引いた値番目、 <name4> の <name5> 番目を <name4> の <name5> 番目、 <name4> の <name5> から <val2> を引いた値番目とする	<name4> [ <name5> ] , <name4> [ <name5> - <val2> ] = <name4> [ <name5> - <val2> ] , <name4> [ <name5> ]	<name4> [ <name5> ] , <name4> [ <name5> - <val2> ] = <name4> [ <name5> - <val2> ] , <name4> [ <name5> ]
<name1> の <val5> を取り出した値を <name3> とする	<name3> = <name1> . pop ( <val5> )	<name3> = <name1> . pop ( <val5> )
<name4> の、つまり先頭から <name2> 番目までの部分列に <name4> の <name2> 番目から <name1> 番目までの部分列の、つまり先頭から、つまり末尾までの -1 間隔による部分列を加えた値に <name4> の <name1> 番目から、つまり末尾までの部分列を加えた値を <name4> とする	<name4> = <name4> [ : <name2> ] + <name4> [ <name2> : <name1> ] [ : : - 1 ] + <name4> [ <name1> : ]	<name3> = <name4> [ : <name2> ] + <name4> [ <name2> : <name1> ] [ : : - 1 ] + <name4> [ <name1> : ]
<name4> が <name2> より小さい間、次を繰り返す	while <name4> < <name2> :	del <name4> < <name2> :
<name2> の <name3> 番目が <name4> より小さいとき、	if <name2> [ <name3> ] < <name4> :	: if <name2> [ <name3> ] < <name4> :
<name3> の <name2> 番目の <name1> 番目が -1 と等しくないとき、	if <name3> [ <name2> ] [ <name1> ] != - 1 :	if <name3> [ <name2> ] [ <name1> ] != - 1 :
<name4> に番号付した組の列の各要素を <name2> 、 <name6> とし、 <name6> のときの <name2> の列を <name5> とする	<name5> = [ <name2> for <name2> , <name6> in enumerate ( <name4> ) if <name6> ]	<name4> = [ <name2> for <name2> , <name6> in enumerate ( <name4> ) if <name6> ]
辞書を <name1> とする	<name1> = dict ( T )	( <name1> = dict . dict ( ) )
<name3> を <val5> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name2> とする	<name1> , <name4> , <name2> = map ( int , <name3> . split ( <val5> ) )	<name1> , <name4> , <name2> = map ( int , <name3> . split ( <val5> ) )
<name4> の <name5> 番目を展開し、それぞれ <name6> 、 <name2> 、 <name3> とする	<name6> , <name2> , <name3> = <name4> [ <name5> ]	<name3> , <name2> , <name3> = <name4> [ <name5> ]
<name3> . <name2> ( <name4> , <name6> )	<name3> . <name2> ( <name4> , <name6> )	<name2> . <name2> ( <name4> , <name6> )
<name5> 、 <name1> から <name2> を引いた値に <name3> を掛けた値の最大値を <name5> とする	<name5> = max ( <name5> , ( <name1> - <name2> ) * <name3> )	<name5> = max ( <name5> , ( <name1> - <name2> ) * <name3> )
0 から <name2> 未満までの数列の各要素を <name4> とし、 <name5> の <name4> 番目が <name6> より小さいときの <name5> の <name4> 番目の列の総和を <name3> とする	<name3> = sum ( [ <name5> [ <name4> ] for <name4> in range ( <name2> ) if <name5> [ <name4> ] < <name6> ] )	<name3> = sum ( [ <name5> [ <name4> ] for <name4> in range ( <name2> ) if <name5> [ <name4> ] < <name6> ] )
<name5> を <name3> の <name6> 番目の <name4> に <val1> を加えた値番目にする	<name3> [ <name6> ] [ <name4> + <val1> ] = <name5>	<name4> [ <name6> ] [ <name4> + <val1> ] = <name5>
<name1> の <name6> から <val3> を引いた値番目の <name2> 番目を出力する	print ( <name1> [ <name6> - <val3> ] [ <name2> ] )	print ( <name1> [ <name6> - <val3> ] [ <name2> ] )
<name4> 内の <name2> の出現回数を出力する	print ( <name4> . count ( <name2> ) )	print ( <name4> . count ( <name2> ) )
<name5> の <name3> の <name4> 番目の <name6> 番目を返す	return <name5> . <name3> [ <name4> ] [ <name6> ]	return <name5> . <name3> [ <name4> ] [ <name6> ]
<name5> に対応する値、もし存在しなければ <name3> の先頭の <val1> 番目を <name6> とする	<name6> = <name5> . get ( <name3> [ 0 ] [ <val1> ] )	<name6> = <name5> . get ( <name3> [ <val1> ] [ <val1> ] )
<name3> が <val1> と等しい間、次を繰り返す	while <name3> == <val1> :	del <name3> == <val1> :
<name2> をパラメータとして ( <name2> の <val3> 番目、 <name2> の先頭 ) の組を返す関数を <name1> として <name6> をソートする	<name6> . sort ( <name1> = lambda <name2> : ( <name2> [ <val3> ] , <name2> [ 0 ] ) )	<name1> . sort ( <name6> = lambda <name2> : ( <name2> [ <val3> ] , <name2> [ 0 ] ) )
<name4> を <name1> に <name3> を加えた値から <val5> を引いた値を <name3> で割った商だけ増加させる	<name4> += ( <name1> + <name3> - <val5> ) // <name3>	<name2> += ( <name1> + <name3> - <val5> ) // <name3>
os . <name4> の <name2> 番目を <name3> だけ増加させる	<name4> [ <name2> ] += <name3>	( <name4> [ <name2> ] += <name3> )
0 から <name2> ( ) の整数値未満までの数列の各要素を <name3> とし、 <name2> ( ) を空白で分割した字句列の各要素に整数を適用した列の列の各要素を <name6> 、 <name5> とし、 <name6> に <name5> を掛けた値の列の総和を <name1> とする	<name1> = sum ( [ <name6> * <name5> for <name6> , <name5> in [ map ( int , <name2> ( ) . split ( ) ) for <name3> in range ( int ( <name2> ( ) ) ) ] ] )	<name1> = sum ( [ <name6> * <name5> for <name6> , <name5> in [ map ( int , <name2> ( ) . split ( ) ) for <name3> in range ( int ( <name2> ( ) ) ) ] ] )
<val6> を <name3> だけ左シフトした値から <val6> を引いた値が <name1> と等しくかつ <name4> が <val5> と等しいとき、	if ( ( <val6> << <name3> ) - <val6> == <name1> and <name4> == <val5> ) :	continue ( <val6> << <name3> ) - <val6> == <name1> and <name4> == <val5> :
<name3> の <name5> 番目が <val2> より大きいとき、	if <name3> [ <name5> ] > <val2> :	continue <name3> [ <name5> ] > <val2> :
<name2> かつ <name4> が <name6> の <name1> 番目より大きいかどうかが <name3> より小さいとき、	if <name2> and <name4> > <name6> [ <name1> ] < <name3> :	isinstance ( <name2> and <name4> > <name6> [ <name1> ] < <name3> ) :
<name3> を <name5> で割った余りが <val4> と等しい間、次を繰り返す	while <name3> % <name5> == <val4> :	del <name3> % <name5> == <val4> :
<name2> を <name4> の <name3> 番目だけ増加させる	<name2> += <name4> [ <name3> ]	<name2> += <name4> [ <name3> ]
<name3> の <name6> 番目を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in <name3> [ <name6> ] :	for <name4> , <name5> in <name3> [ <name6> ] :
<name6> の <name5> に番号付した組の列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in enumerate ( <name6> . <name5> ) :	for <name1> , <name4> in enumerate ( <name6> . <name5> ) :
<name2> を <name3> から <val4> を引いた値で割った値の整数値を出力する	print ( int ( <name2> / ( <name3> - <val4> ) ) )	print ( int ( <name2> / ( <name3> - <val4> ) ) )
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列の整数値の列をソートした列を <name4> とする	<name4> = sorted ( [ int ( input ( ) ) for <name2> in range ( <name5> ) ] )	<name4> = sorted ( [ int ( input ( ) ) for <name2> in range ( <name5> ) ] )
<name3> に <name5> の <name2> 番目を加えた値を <name4> とする	<name4> = <name3> + <name5> [ <name2> ]	str = <name3> + <name5> [ <name2> ]
<name6> が <name3> に含まれるとき <val2> 、そうでなければ <val5> を <name4> とする	<name4> = <val2> if <name6> in <name3> else <val5>	<name4> = <val2> if <name6> in <name3> else <val5>
<name6> を <val4> で分割した字句列を順に <name2> として、繰り返す	for <name2> in <name6> . split ( <val4> ) :	( <name2> in <name6> . split ( <val4> ) :
<name6> から <val3> を引いた値を <name5> の <name6> に <val3> を加えた値番目にする	<name5> [ <name6> + <val3> ] = <name6> - <val3>	<name2> [ <name6> + <val3> ] = <name6> - <val3>
<name6> の <name2> を <name1> の <name4> にする	<name1> . <name4> = <name6> . <name2>	<name2> . <name1> . <name4> = <name6> . <name2>
未定値を <name5> の <name2> 番目にする	<name5> [ <name2> ] = None	( <name5> [ <name2> ] = None )
( -1 ) からなる列の <name3> の <name6> 回分の列を <name3> の <name5> にする	<name3> . <name5> = [ - 1 ] * <name3> . <name6>	<name3> . <name5> = [ - 1 ] * <name3> . <name6>
( <val4> 、 -1 、 <val1> ) からなる列を <name2> とする	<name2> = [ <val4> , - <val1> , <val1> ]	( <name2> = [ <val4> , - <val1> , <val1> ] )
<name4> . <name1> ( <name5> , <name3> )	<name4> . <name1> ( <name5> , <name3> )	<name5> . <name4> . <name1> ( <name5> , <name3> )
<name5> に <name3> を掛けた値を <name4> ( <name5> , <name3> ) で割った値を <name6> とする	<name6> = <name5> * <name3> / <name4> ( <name5> , <name3> )	<name6> = <name5> * <name3> / <name4> ( <name5> , <name3> )
<val6> が <name4> 以下かつ <name4> が <name2> より小さくかつ <val6> が <name1> 以下かつ <name1> が <name5> より小さくないとき、 <blk> 最初からもう一度、繰り返す </blk>	if not ( <val6> <= <name4> and <name4> < <name2> and <val6> <= <name1> and <name1> < <name5> ) : <blk> continue </blk>	for <name4> <= <val6> and <name4> < <name2> and not <val6> <= <name1> and not <name1> < <name5> : <blk> continue </blk>
<val1> を <name6> の <name4> にする	<name6> . <name4> = <val1>	<name1> . <name4> = <val1>
( <val6> ) からなる列の <val5> 回分の列を <name1> とする	<name1> = [ <val6> ] * <val5>	<name1> = [ <val6> ] * <val5>
<val1> に <name3> を掛けた値を <name4> とする	<name4> = <val1> * <name3>	<name4> = <val1> * <name3>
<name1> の <name2> の <name4> 番目を返す	return <name1> . <name2> [ <name4> ]	yield <name1> . <name2> [ <name4> ]
<val5> が <name2> 以下かどうかが <name3> より小さくなくまたは <val5> が <name1> 以下かどうかが <name4> より小さくなくまたは <name6> の <name5> 番目の <name2> 番目が <name6> の <name1> 番目の <name2> 番目と等しいとき、	if not <val5> <= <name2> < <name3> or not <val5> <= <name1> < <name4> or <name6> [ <name5> ] [ <name2> ] == <name6> [ <name1> ] [ <name2> ] :	global <val5> <= <name2> < <name3> or not <val5> <= <name1> < <name4> or not <name6> [ <name5> ] [ <name2> ] == <name6> [ <name1> ] [ <name2> ] :
<name6> ( <name2> [ -1 ] , <name2> [ <val5> ] , <name3> ) を <name1> とする	<name1> = <name6> ( <name2> [ - 1 ] , <name2> [ <val5> ] , <name3> )	<name1> = <name6> ( <name2> [ - 1 ] , <name2> [ <val5> ] , <name3> )
<name6> が <name1> に含まれるとき、	if <name6> in <name1> :	'taisho' in <name6> in <name1> :
<name2> . <name5> ( ) を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name2> . <name5> ( )	<name1> , <name6> = <name2> . <name5> ( )
<name4> から <val6> を引いた値、 <name5> から <val6> を引いた値を <name4> 、 <name5> とする	<name4> , <name5> = <name4> - <val6> , <name5> - <val6>	<name4> , <name5> = <name4> - <val6> , <name5> - <val6>
<name4> ( * <name3> )	<name4> ( * <name3> )	<name4> ( * <name3> )
<name1> のキーと値の集まりをソートした列を順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in sorted ( <name1> . items ( ) ) :	. for <name4> , <name3> in sorted ( <name1> . items ( ) ) :
<name5> ( <name3> // <name4> )	<name5> ( <name3> // <name4> )	<name2> ( <name3> // <name4> )
<name6> の <val1> を取り出した値を <name3> とする	<name3> = <name6> . pop ( <val1> )	<name3> = <name6> . pop ( <val1> )
<name1> の先頭の先頭、 <val5> を書式として <name1> の先頭の <val6> 番目で整形した文字列を出力する	print ( <name1> [ 0 ] [ 0 ] , <val5> . format ( <name1> [ 0 ] [ <val6> ] ) )	print ( <name1> [ 0 ] [ 0 ] , <val5> . format ( <name1> [ 0 ] [ <val6> ] ) )
入力された文字列を <val3> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val3> ) ]	<name1> , <name2> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val3> ) ]
<name4> を展開しての要素をそれぞれ組にした列の各要素を <name5> とし、 <name5> のリストの列を <name3> とする	<name3> = [ list ( <name5> ) for <name5> in zip ( * <name4> ) ]	<name6> = [ list ( <name5> ) for <name5> in zip ( * <name4> ) ]
<name1> が <name5> 以下かどうかが <name4> 以下のとき、	if <name1> <= <name5> <= <name4> :	list if <name1> <= <name5> <= <name4> :
<name3> が <name1> より小さくかつ <name4> の <name5> 番目の <name3> 番目が <val6> と等しい間、次を繰り返す	while <name3> < <name1> and <name4> [ <name5> ] [ <name3> ] == <val6> :	for <name3> in <name3> < <name1> and <name4> [ <name5> ] [ <name3> ] == <val6> :
<name6> の末尾に ( <name5> の <name2> 番目、 <name3> の <name2> 番目 ) の組を追加する	<name6> . append ( ( <name5> [ <name2> ] , <name3> [ <name2> ] ) )	<name4> . append ( ( <name5> [ <name2> ] , <name3> [ <name2> ] ) )
( <val1> 、 <val6> 、 <val4> 、 <val2> 、 <val3> 、 <val5> 、 <val1> ) からなる列の <name6> 、 <val4> 、 <name2> 、 <name3> の日付の週番目に <val5> を加えた値を出力する	print ( [ <val1> , <val6> , <val4> , <val2> , <val3> , <val5> , <val1> ] [ <name6> . date ( <val4> , <name2> , <name3> ) . weekday ( ) ] + <val5> )	print ( [ <val1> , <val6> , <val4> , <val2> , <val3> , <val5> , <val1> ] [ <name6> . date ( <val4> , <name2> , <name3> ) . weekday ( ) ] + <val5> )
<name4> ( <name5> + <val3> ) を <name6> とする	<name6> = <name4> ( <name5> + <val3> )	<name6> = <name4> ( <name5> + <val3> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> の <name3> 番目、 <name6> の <name3> 番目とする	<name4> [ <name3> ] , <name6> [ <name3> ] = map ( int , input ( ) . split ( ) )	[ <name4> [ <name3> ] , <name6> [ <name3> ] = map ( int , input ( ) . split ( ) )
<name1> が <name4> から <val3> を引いた値より小さい間、次を繰り返す	while <name1> < <name4> - <val3> :	del <name1> < <name4> - <val3> :
<val2> を <name3> とする	<name3> = <val2>	( <name3> = <val2> )
<name5> を <name6> で割った余りを <name4> とする	<name4> = <name5> % <name6>	( <name4> = <name5> % <name6> )
<name6> を <name1> の <name3> 番目の <name5> 番目だけ増加させる	<name6> += <name1> [ <name3> ] [ <name5> ]	( <name6> += <name1> [ <name3> ] [ <name5> ] )
<name2> . <name4> ( <name1> ) のとき、	if <name2> . <name4> ( <name1> ) :	list if <name2> . <name4> ( <name1> ) :
<name1> の <name4> 番目の <name5> 番目でないとき、	if not <name1> [ <name4> ] [ <name5> ] :	while not <name1> [ <name4> ] [ <name5> ] :
<name3> の <name6> を <name6> とする <name3> の <name1> を <name1> とする	<name6> = <name3> . <name6> <name1> = <name3> . <name1>	<name2> = <name3> . <name6> <name1> = <name3> . <name1>
0 から <name3> 未満までの数列の各要素を <name5> とし、 <val2> の列を <name6> とする	<name6> = [ <val2> for <name5> in range ( <name3> ) ]	<name4> = [ <val2> for <name5> in range ( <name3> ) ]
( <val3> 、 <val4> 、 <val5> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val3> , <val4> , <val5> , <val1> ]	<name6> = [ <val3> , <val4> , <val5> , <val1> ]
入力された文字列を <val3> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = list ( map ( int , input ( ) . split ( <val3> ) ) )	<name1> , <name6> = list ( map ( int , input ( ) . split ( <val3> ) ) )
<name5> の文字列のリストの各要素を <name4> とし、 <name4> の整数値の列を <name2> とする	<name2> = [ int ( <name4> ) for <name4> in list ( str ( <name5> ) ) ]	<name6> = [ int ( <name4> ) for <name4> in list ( str ( <name5> ) ) ]
<name6> の <name4> 番目を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name6> [ <name4> ]	( <name1> , <name2> = <name6> [ <name4> ] )
( <name6> ) の集合を <name3> の <name4> 番目にする	<name3> [ <name4> ] = { <name6> }	( <name3> [ <name4> ] = { <name6> } )
<name6> の <name4> 番目の <name2> 番目に <name6> の <name2> 番目の <name1> 番目を加えた値が <name6> の <name4> 番目の <name1> 番目より小さいとき、	if <name6> [ <name4> ] [ <name2> ] + <name6> [ <name2> ] [ <name1> ] < <name6> [ <name4> ] [ <name1> ] :	list ( <name6> [ <name4> ] [ <name2> ] + <name6> [ <name2> ] [ <name1> ] < <name6> [ <name4> ] [ <name1> ] ) :
<name6> の <name2> 番目から <val1> を引いた値を <name2> とする	<name2> = <name6> [ <name2> ] - <val1>	( <name2> = <name6> [ <name2> ] - <val1> )
<name3> に <name3> を掛けた値から <val1> 未満までの <name3> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> * <name3> , <val1> , <name3> ) :	) for <name5> in range ( <name3> * <name3> , <val1> , <name3> ) :
<name2> を <name1> 分の一にする	<name2> // = <name1>	( <name2> // = <name1> )
<name6> の <val2> 番目を <name3> の <val2> 番目にする	<name3> [ <val2> ] = <name6> [ <val2> ]	<name3> [ <val2> ] = <name6> [ <val2> ]
<name3> ( <name5> ) 空行を出力する	<name3> ( <name5> ) print ( )	<name1> ( <name5> ) print ( )
<name4> を <name3> の先頭の <val2> 番目だけ減少させる	<name4> -= <name3> [ 0 ] [ <val2> ]	<name4> -= <name3> [ 0 ] [ <val2> ]
<name6> の <val5> 番目を <name4> だけ減少させる	<name6> [ <val5> ] -= <name4>	<name6> [ <val5> ] -= <name4>
<val2> を <name6> の <name5> 番目の <name1> 番目にする	<name6> [ <name5> ] [ <name1> ] = <val2>	<name4> [ <name5> ] [ <name1> ] = <val2>
<name6> を <name2> で割った商を <name3> とする	<name3> = <name6> // <name2>	<name3> = <name6> // <name2>
未定値を <name1> の <name2> の <name3> 番目の <name5> にする	<name1> . <name2> [ <name3> ] . <name5> = None	( <name1> . <name2> [ <name3> ] . <name5> = None )
<name3> の先頭の末尾を出力する	print ( <name3> [ 0 ] [ - 1 ] )	print ( <name3> [ 0 ] [ - 1 ] )
<name2> ( <name4> . <name5> [ <val6> : ] )	<name2> ( <name4> . <name5> [ <val6> : ] )	<name2> ( <name4> . <name5> [ <val6> : ] )
<val1> を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <val1>	( <name3> [ <name2> ] = <val1> )
<name4> を <name2> で割った値を <name5> とする	<name5> = <name4> / <name2>	<name5> = <name4> / <name2>
<name4> に <name6> を加えた値が <name3> の <name5> 番目より小さいとき、	if <name4> + <name6> < <name3> [ <name5> ] :	raise <name4> + <name6> < <name3> [ <name5> ] :
<name3> の各要素を <name2> とし、 <name2> の <val1> 番目の列の最大値を <name4> とする	<name4> = max ( [ <name2> [ <val1> ] for <name2> in <name3> ] )	<name4> = max ( [ <name2> [ <val1> ] for <name2> in <name3> ] )
<name4> . <name1> ( <name6> ) に <val5> を掛けた値から <name6> を引いた値を返す	return <name4> . <name1> ( <name6> ) * <val5> - <name6>	x = <name4> . <name1> ( <name6> ) * <val5> - <name6>
<name5> の末尾に ( <name2> 、 <name1> 、 <name3> ) の組を追加する	<name5> . append ( ( <name2> , <name1> , <name3> ) )	) <name5> . append ( ( <name2> , <name1> , <name3> ) )
<name2> の <name3> 番目が <name1> より大きいとき、 <blk> <name2> の <name3> 番目を <name1> とする </blk>	if <name2> [ <name3> ] > <name1> : <blk> <name1> = <name2> [ <name3> ] </blk>	for <name1> in <name2> [ <name3> ] > <name1> : <blk> <name1> = <name2> [ <name3> ] </blk>
<name6> ( ( <name5> + <val2> , <name1> , <name4> ) )	<name6> ( ( <name5> + <val2> , <name1> , <name4> ) )	set <name6> ( ( <name5> + <val2> , <name1> , <name4> ) )
<val2> の <val5> 乗を <name3> とする	<name3> = <val2> ** <val5>	<name3> = <val2> ** <val5>
( <val3> 、 <val4> ) からなる列を <name6> とする	<name6> = [ <val3> , <val4> ]	else = [ <val3> , <val4> ]
<name5> を <name6> の <name2> 番目の <name3> 番目にする	<name6> [ <name2> ] [ <name3> ] = <name5>	( <name6> [ <name2> ] [ <name3> ] = <name5> )
<name5> に <name6> を加えた値を <name3> とする	<name3> = <name5> + <name6>	<name3> = <name5> + <name6>
( <val5> ) からなる列の <name6> 回分の列、 <val5> を <name4> 、 <name3> とする	<name4> , <name3> = [ <val5> ] * <name6> , <val5>	( <name4> , <name3> = [ <val5> ] * <name6> , <val5> )
<val2> を <name5> の <name1> から <val2> を引いた値番目にする	<name5> [ <name1> - <val2> ] = <val2>	<name4> [ <name1> - <val2> ] = <val2>
<name3> の <val6> 番目を <name2> の <name3> の <val5> 番目番目にする	<name2> [ <name3> [ <val5> ] ] = <name3> [ <val6> ]	<name2> [ <name3> [ <val5> ] ] = <name3> [ <val6> ]
<name6> を <val3> だけ減少させる	<name6> -= <val3>	<name2> -= <name6> -= <val3>
<name3> の <name5> 番目を一旦、返す	yield <name3> [ <name5> ]	global <name3> [ <name5> ]
<name1> 、 <name2> に <name5> から <name2> を引いた値を掛けた値を <val6> に <name4> を掛けた値で割った値の最小値を <name1> とする	<name1> = min ( <name1> , <name2> * ( <name5> - <name2> ) / ( <val6> * <name4> ) )	<name1> = min ( <name1> , <name2> * ( <name5> - <name2> ) / ( <val6> * <name4> ) )
<val1> を <name3> の ( <name4> 、 <val1> ) の組番目にする	<name3> [ ( <name4> , <val1> ) ] = <val1>	<name2> [ ( <name4> , <val1> ) ] = <val1>
<name6> が <val5> と等しくかつ <name3> が <val5> と等しいとき、	if <name6> == <val5> and <name3> == <val5> :	list ( <name6> == <val5> and <name3> == <val5> ) :
<name1> . <name6> ( <name5> , <name4> )	<name1> . <name6> ( <name5> , <name4> )	not <name1> . <name6> ( <name5> , <name4> )
<name2> ( <name6> , ( <name3> , <name5> ) )	<name2> ( <name6> , ( <name3> , <name5> ) )	<name2> ( <name6> , ( <name3> , <name5> ) )
0 から <name1> 未満までの数列の各要素を <name6> とし、 ( ( -1 ) からなる列の 0 から <name1> 未満までの数列の各要素を <name4> とし、 <name1> の列回分の列 ) からなる列の列を <name3> とする	<name3> = [ [ [ - 1 ] * [ <name1> for <name4> in range ( <name1> ) ] ] for <name6> in range ( <name1> ) ]	<name3> = [ [ [ - 1 ] * [ <name1> for <name4> in range ( <name1> ) ] ] for <name6> in range ( <name1> ) ]
<name4> を <name5> の <name6> 番目の <name1> 番目にする	<name5> [ <name6> ] [ <name1> ] = <name4>	( <name5> [ <name6> ] [ <name1> ] = <name4> )
空列を <name4> の <name1> にする	<name4> . <name1> = [ ]	<name1> . <name1> = [ ]
<name1> 、 <name5> の要素をそれぞれ組にした列を順に <name6> 、 <name3> 、 <name4> として、繰り返す	for <name6> , <name3> , <name4> in zip ( <name1> , <name5> ) :	( <name6> , <name3> , <name4> in zip ( <name1> , <name5> ) :
<name1> ( <name4> , <name5> -1 )	<name1> ( <name4> , <name5> - 1 )	<name1> ( <name4> , <name5> - 1 )
<name2> を <name6> を <name5> で割った商だけ増加させる	<name2> += <name6> // <name5>	( <name2> += <name6> // <name5> )
<name6> から <name1> を引いた値の <val2> 乗に <name5> から <name4> を引いた値の <val2> 乗を加えた値を返す	return ( <name6> - <name1> ) ** <val2> + ( <name5> - <name4> ) ** <val2>	<val2> = ( <name6> - <name1> ) ** <val2> + ( <name5> - <name4> ) ** <val2>
<name3> ( <name1> ) を展開し、それぞれ <name2> 、無限の整数列、 <name4> とする	<name2> , count , <name4> = <name3> ( <name1> )	<name2> , count , <name4> = <name3> ( <name1> )
<val3> 、 <val3> を <name5> 、 <name1> とする	<name5> , <name1> = <val3> , <val3>	<name1> , <name1> = <val3> , <val3>
<name3> を <name6> の <name5> に <val4> を加えた値番目の整数値に <name6> の <name5> に <val2> を加えた値番目を掛けた値だけ増加させる	<name3> += int ( <name6> [ <name5> + <val4> ] ) * <name6> [ <name5> + <val2> ]	<name3> += int ( <name6> [ <name5> + <val4> ] ) * <name6> [ <name5> + <val2> ]
<name1> の <name5> から <val4> を引いた値番目の <name2> 番目を <name1> の <name5> 番目の <name2> 番目にする	<name1> [ <name5> ] [ <name2> ] = <name1> [ <name5> - <val4> ] [ <name2> ]	<name1> [ <name5> ] [ <name2> ] = <name1> [ <name5> - <val4> ] [ <name2> ]
<name2> かつ <name2> の <val5> 番目が <name3> と等しくなくまたは <name2> の <val4> 番目が <name3> と等しくない間、次を繰り返す	while <name2> and ( <name2> [ <val5> ] is <name3> or <name2> [ <val4> ] is <name3> ) :	del <name2> and <name2> [ <val5> ] is <name3> or <name2> [ <val4> ] != <name3> :
<name6> が <name1> と等しくかつ <name5> が <name4> と等しいとき、	if <name6> == <name1> and <name5> == <name4> :	: if <name6> == <name1> and <name5> == <name4> :
<name2> を <val1> で割った余りが <val6> と等しいとき、	if <name2> % <val1> == <val6> :	for <name2> in <name2> % <val1> == <val6> :
<name3> の <name6> から <val2> を引いた値番目の <name5> 番目のとき、	if <name3> [ <name6> - <val2> ] [ <name5> ] :	continue <name3> [ <name6> - <val2> ] [ <name5> ] :
( <name4> の <name5> 番目の <val2> 番目に <name4> の <name3> 番目の先頭を加えた値の整数値、 <name4> の <name5> 番目の <val2> 番目に <name4> の <name3> 番目の <val1> 番目を加えた値の整数値、 <name4> の <name3> 番目の <val2> 番目に <name4> の <name5> 番目の先頭を加えた値の整数値、 <name4> の <name3> 番目の <val1> 番目に <name4> の <name5> 番目の先頭を加えた値の整数値 ) からなる列を <name6> とする	<name6> = [ int ( <name4> [ <name5> ] [ <val2> ] + <name4> [ <name3> ] [ <val2> ] ) , int ( <name4> [ <name5> ] [ <val2> ] + <name4> [ <name3> ] [ <val1> ] ) , int ( <name4> [ <name3> ] [ <val2> ] + <name4> [ <name5> ] [ <val2> ] ) , int ( <name4> [ <name3> ] [ <val1> ] + <name4> [ <name5> ] [ <val2> ] ) ]	<name6> = [ int ( <name4> [ <name5> ] [ <val2> ] + <name4> [ <name3> ] [ <val2> ] ) , int ( <name4> [ <name5> ] [ <val2> ] + <name4> [ <name3> ] [ <val1> ] ) , int ( <name4> [ <name3> ] [ <val2> ] + <name4> [ <name5> ] [ <val2> ] ) , int ( <name4> [ <name3> ] [ <val1> ] + <name5> [ <val1> ] ) ]
<name1> を <name3> だけ増加させる <name3> を <val4> だけ増加させる	<name1> += <name3> <name3> += <val4>	<name1> += <name3> <name3> += <val4>
<name1> に <name1> を掛けた値が <name6> 以下の間、次を繰り返す	while <name1> * <name1> <= <name6> :	del <name1> * <name1> <= <name6> :
<name4> の <name1> 番目を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name4> [ <name1> ]	<name1> [ <name6> ] = <name4> [ <name1> ]
<name3> ( <name1> ( <val6> ) . <name4> ( ) . <name2> ( ) ) を <name5> とする	<name5> = <name3> ( <name1> ( <val6> ) . <name4> ( ) . <name2> ( ) )	<name1> = <name3> ( <name1> ( <val6> ) . <name4> ( ) . <name2> ( ) )
<name4> の末尾に ( <name2> 、 <val6> 、 -1 ) の組を追加する	<name4> . append ( ( <name2> , <val6> , - 1 ) )	<name4> . append ( ( <name2> , <val6> , - <val6> ) )
( <name2> 、 <name5> ) の組を <name3> とする	<name3> = ( <name2> , <name5> )	<name3> = ( <name2> , <name5> )
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , input ( ) . strip ( ) . split ( ) )	<name3> = map ( int , input ( ) . strip ( ) . split ( ) )
0 から <name5> 未満までの数列の各要素を <name3> とし、 <name4> の <name3> 番目でないときの <name6> の <name3> 番目の列を <name6> とする	<name6> = [ <name6> [ <name3> ] for <name3> in range ( <name5> ) if not <name4> [ <name3> ] ]	count = [ <name6> [ <name3> ] for <name3> in range ( <name5> ) if not <name4> [ <name3> ] ]
<name3> を <val1> に入力された文字列が <val5> と等しいかどうかを掛けた値から <val2> を引いた値だけ増加させる	<name3> += <val1> * ( input ( ) == <val5> ) - <val2>	<name4> += <val1> * ( input ( ) == <val5> ) - <val2>
<name1> を <val5> で割った商を <name4> とする	<name4> = <name1> // <val5>	( <name4> = <name1> // <val5> )
<name6> 、 <name5> の集合と <name3> の集合の論理積の長さから <name6> を引いた値を出力する	print ( <name6> , len ( set ( <name5> ) & set ( <name3> ) ) - <name6> )	end = <name6> , len ( set ( <name5> ) & set ( <name3> ) ) - <name6> )
<name1> . <name5> ( ) を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name1> . <name5> ( )	<name2> , <name4> , <name3> = <name1> . <name5> ( )
<val2> を <name1> とする <val3> の <val4> 乗に <val4> を加えた値を <name5> とする	<name1> = <val2> <name5> = <val3> ** <val4> + <val4>	<name5> = <name1> = <val2> <name5> = <val3> ** <val4> + <val4>
<name4> の <name6> から <val5> を引いた値番目を <name3> とする	<name3> = <name4> [ <name6> - <val5> ]	<name3> = <name4> [ <name6> - <val5> ]
改行せずに文字コード <name6> の文字を出力する	print ( chr ( <name6> ) , end = '' )	print ( chr ( <name6> ) , end = '' )
<name2> の <name3> に <val1> を加えた値番目の <name6> 番目が <val4> と等しいとき、	if <name2> [ <name3> + <val1> ] [ <name6> ] == <val4> :	continue <name2> [ <name3> + <val1> ] [ <name6> ] == <val4> :
<name1> の <name3> を <name2> とする	<name2> = <name1> . <name3>	input = <name1> . <name3>
<name6> が <name4> の <name1> と等しいとき、	if <name6> == <name4> . <name1> :	list ( <name6> == <name4> . <name1> ) :
( <val1> 、 <val4> 、 <val5> ) の組を <name6> とする	<name6> = ( <val1> , <val4> , <val5> )	<name6> = ( <val1> , <val4> , <val5> )
<name3> を <name1> の <val6> 乗で割った値が <val5> 以上のとき、 <blk> <name2> の末尾に <name4> の整数値を追加する </blk>	if <name3> / <name1> ** <val6> >= <val5> : <blk> <name2> . append ( int ( <name4> ) ) </blk>	if <name3> / <name1> ** <val6> >= <val5> : <blk> <name2> . append ( int ( <name4> ) ) </blk>
<name4> の <val2> に ( <val1> ) からなる列の <name5> に <val6> を加えた値回分の列を挿入する	<name4> . insert ( <val2> , [ <val1> ] * ( <name5> + <val6> ) )	<name1> . insert ( <val2> , [ <val1> ] * ( <name5> + <val6> ) )
<name4> の <name1> から <val6> を引いた値番目の <name3> から <val6> を引いた値番目の <name2> から <val6> を引いた値番目を <name5> だけ増加させる	<name4> [ <name1> - <val6> ] [ <name3> - <val6> ] [ <name2> - <val6> ] += <name5>	[ <name4> [ <name1> - <val6> ] [ <name3> - <val6> ] [ <name2> - <val6> ] += <name5>
<val1> に <val6> の <val5> 乗を掛けた値に <val2> を加えた値を <name3> とする	<name3> = <val1> * <val6> ** <val5> + <val2>	<name3> = <val1> * <val6> ** <val5> + <val2>
0 から <val2> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name1> in range ( <val2> ) ]	<name6> = [ [ ] for <name1> in range ( <val2> ) ]
<name1> の先頭を除いた部分列を <name6> とする	<name6> = <name1> [ 1 : ]	set = <name1> [ 1 : ]
<name2> ( <name3> - <name6> , <name3> - <name5> ) を <name4> とする	<name4> = <name2> ( <name3> - <name6> , <name3> - <name5> )	<name4> = <name2> ( <name3> - <name6> , <name3> - <name5> )
0 から <name3> 未満までの数列の各要素を <name6> とし、 ( <name5> ) からなる列に <name1> ( ) . <name2> ( ) の各要素に <name4> を適用した列のリストを加えた値に ( <name5> ) からなる列を加えた値の列を <name3> とする	<name3> = [ [ <name5> ] + list ( map ( <name4> , <name1> ( ) . <name2> ( ) ) ) + [ <name5> ] for <name6> in range ( <name3> ) ]	<name3> = [ [ <name5> ] + list ( map ( <name4> , <name1> ( ) . <name2> ( ) ) ) + [ <name5> ] for <name6> in range ( <name3> ) ]
<name6> の <name1> 番目が <name2> 以下のとき、	if <name6> [ <name1> ] <= <name2> :	list if <name6> [ <name1> ] <= <name2> :
<name1> の <val6> 番目を <val2> との排他的論理和にする	<name1> [ <val6> ] ^ = <val2>	not = <name1> [ <val6> ] ^ = <val2>
<name4> から <name1> を引いた値に <name6> から <name3> を引いた値を掛けた値から <name5> から <name1> を引いた値に <name2> から <name3> を引いた値を掛けた値を引いた値を返す	return ( <name4> - <name1> ) * ( <name6> - <name3> ) - ( <name5> - <name1> ) * ( <name2> - <name3> )	return ( <name4> - <name1> ) * ( <name6> - <name3> ) - ( <name5> - <name1> ) * ( <name2> - <name3> )
<name6> が <name4> の <name6> と等しいとき、	if <name6> == <name4> . <name6> :	list ( <name6> == <name4> . <name6> ) :
<name2> を <val5> で割った商を <name1> とする	<name1> = <name2> // <val5>	( <name1> = <name2> // <val5> )
0 から <name3> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の整数値の列を <name5> とする	<name5> = [ int ( input ( ) ) for <name1> in range ( <name3> ) ]	<name5> = [ int ( input ( ) ) for <name1> in range ( <name3> ) ]
<name1> の各要素を <name3> 、 <name2> とし、 <name3> の列の最小値を <name5> とする <name1> の各要素を <name3> 、 <name2> とし、 <name3> の列の最大値を <name6> とする	<name5> = min ( [ <name3> for <name3> , <name2> in <name1> ] ) <name6> = max ( [ <name3> for <name3> , <name2> in <name1> ] )	<name6> = min ( [ <name3> for <name3> , <name2> in <name1> ] ) <name6> = max ( [ <name3> for <name3> , <name2> in <name1> ] )
<name5> . <name4> ( <name6> , <name2> ) が <val1> と等しいかどうかを返す	return <name5> . <name4> ( <name6> , <name2> ) == <val1>	x return <name5> . <name4> ( <name6> , <name2> ) == <val1>
<name6> でなくまたは <name6> の <val4> 番目が <name2> と等しくかつ <name6> の <val3> 番目が <name2> と等しいとき、	if not <name6> or ( <name6> [ <val4> ] is not <name2> and <name6> [ <val3> ] is not <name2> ) :	for <name6> in <name6> or ( <name6> [ <val4> ] == <name2> and <name6> [ <val3> ] == <name2> ) :
<name5> 内の ( <name4> 、 <name2> ) の組と等しい要素を取り除く	<name5> . remove ( ( <name4> , <name2> ) )	not <name5> . remove ( ( <name4> , <name2> ) )
<name6> の <name1> から <name5> を引いた値から、つまり末尾までの部分列を <name3> とする	<name3> = <name6> [ <name1> - <name5> : ]	<name3> = <name6> [ <name1> - <name5> : ]
<name3> モジュールを用いる	from <name3> import namedtuple , deque	from <name3> import combinations
<name4> が <name1> 以下かつ <name2> が <name3> 以下のとき、	if <name4> <= <name1> and <name2> <= <name3> :	list if <name4> <= <name1> and <name2> <= <name3> :
<name3> 、 <name2> を <name6> 、 <name1> とする	<name6> , <name1> = <name3> , <name2>	<name1> , <name6> , <name1> = <name3> , <name2>
改行せずに <name2> を英小文字に変換した文字列を出力する	print ( <name2> . lower ( ) , end = '' )	print ( <name2> . lower ( ) , end = ' '' )
<name5> を <name2> の <name3> にする	<name2> . <name3> = <name5>	( <name2> . <name3> = <name5> )
<name3> の <val4> 乗に円周率を掛けた値、 <name3> に <val4> を掛けた値に円周率を掛けた値を出力する	print ( <name3> ** <val4> * math . pi , <name3> * <val4> * math . pi )	print ( <name3> ** <val4> * math . pi , <name3> * <val4> * math . pi )
<name2> に <val6> を加えた値を <name3> とする	<name3> = <name2> + <val6>	<name3> = <name2> + <val6>
B を <name3> とする	<name3> = 'B'	( <name3> = 'B' )
<name2> から <name4> を引いた値の <val1> 乗に <name3> から <name6> を引いた値の <val1> 乗を加えた値を返す	return ( <name2> - <name4> ) ** <val1> + ( <name3> - <name6> ) ** <val1>	self return ( <name2> - <name4> ) ** <val1> + ( <name3> - <name6> ) ** <val1>
<name4> が -1 と等しくないとき、	if <name4> != - 1 :	for <name4> != - 1 :
( ( <name6> , <name2> のキーの集まりの各要素を <name6> とし、 <name3> の列 ) ) からなる辞書を <name4> とする	<name4> = { <name6> : [ <name3> for <name6> in <name2> . keys ( ) ] }	<name4> = { <name6> : [ <name3> for <name6> in <name2> . keys ( ) ] }
<name6> の <name2> 番目の <val3> 番目から <name4> の - <name1> から <val5> を引いた値番目の先頭を引いた値を <name5> とする	<name5> = <name6> [ <name2> ] [ <val3> ] - <name4> [ - <name1> - <val5> ] [ <val3> ]	<name5> = <name6> [ <name2> ] [ <val3> ] - <name4> [ - <name1> - <val5> ] [ <val3> ]
<val1> を <name4> の <name5> とするを <name4> の <name3> にする	<name4> . <name3> = <name4> . <name5> = <val1>	<name2> . <name4> . <name3> = <name4> . <name5> = <val1>
( ( <val4> ) からなる列の <val4> から <name3> に <val5> を加えた値未満までの数列の各要素を <name2> とし、 <name1> に <val5> を加えた値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val4> ] * [ ( <name1> + <val5> ) for <name2> in range ( <name3> + <val5> ) ] ]	<name6> = [ [ <val4> ] * [ ( <name1> + <val5> ) for <name2> in range ( <name3> + <val5> ) ] ]
<name3> の <val4> 番目から <name5> の先頭を引いた値に <name2> の <val1> 番目から <name5> の <val1> 番目を引いた値を掛けた値から <name3> の <val1> 番目から <name5> の <val1> 番目を引いた値に <name2> の <val4> 番目から <name5> の先頭を引いた値を掛けた値を引いた値を返す	return ( <name3> [ <val4> ] - <name5> [ <val4> ] ) * ( <name2> [ <val1> ] - <name5> [ <val1> ] ) - ( <name3> [ <val1> ] - <name5> [ <val1> ] ) * ( <name2> [ <val4> ] - <name5> [ <val4> ] )	return ( <name3> [ <val4> ] - <name5> [ <val4> ] ) * ( <name2> [ <val1> ] - <name5> [ <val1> ] ) - ( <name3> [ <val1> ] - <name5> [ <val1> ] ) * ( <name2> [ <val4> ] - <name5> [ <val4> ] )
<name2> を <name5> の <name6> 乗から <name5> の <name6> から <val4> を引いた値乗を引いた値倍にする	<name2> *= pow ( <name5> , <name6> ) - pow ( <name5> , <name6> - <val4> )	<name1> *= ( <name5> ** <name6> ) - ( <name5> ** ( <name6> - <val4> ) )
<name3> ( <name5> . <name4> , ( <name2> . <name6> ( ) , <name1> ) ) を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name3> ( <name5> . <name4> , ( <name2> . <name6> ( ) , <name1> ) )	<name6> , <name1> = <name3> ( <name5> . <name4> , ( <name2> . <name6> ( ) , <name1> ) )
<name3> ( <val1> ) が <name5> に含まれまたは <name3> ( <val2> ) が <name5> に含まれまたは <name3> ( <val4> ) が <name5> に含まれるとき、	if <name3> ( <val1> ) in <name5> or <name3> ( <val2> ) in <name5> or <name3> ( <val4> ) in <name5> :	list ( <name3> ( <val1> ) in <name5> ) or ( <name3> ( <val2> ) in <name5> ) or ( <name3> ( <val4> ) in <name5> ) :
<name3> の <name5> 番目が <name1> より大きいとき、	if <name3> [ <name5> ] > <name1> :	list if <name3> [ <name5> ] > <name1> :
<name4> を <name5> の <name4> にする	<name5> . <name4> = <name4>	<name2> . <name5> . <name4> = <name4>
<name4> をパラメータとして <name4> の <val2> 番目を返す関数を <name6> として <name5> をソートする	<name5> . sort ( <name6> = lambda <name4> : <name4> [ <val2> ] )	<name5> . sort ( <name6> = lambda <name4> : <name4> [ <val2> ] )
<name3> ( <name6> , <name2> , <name5> , <name1> , <name4> , <name3> ) のとき、 <blk> 真を返す </blk>	if <name3> ( <name6> , <name2> , <name5> , <name1> , <name4> , <name3> ) : <blk> return True </blk>	\ if <name3> ( <name6> , <name2> , <name5> , <name1> , <name4> , <name3> ) : <blk> return True </blk>
<name1> から <name6> を引いた値の絶対値を <name5> とする	<name5> = abs ( <name1> - <name6> )	<name5> = abs ( <name1> - <name6> )
<name3> 内の <val2> の出現回数を出力する	print ( <name3> . count ( <val2> ) )	print ( <name3> . count ( <val2> ) )
0 から <name5> の長さを <val2> で割った商未満までの数列を順に <name6> として、繰り返す <blk> <name3> を <name1> の <val4> 進表記 <name5> の <name6> に <val2> を掛けた値から <name6> に <val2> を掛けた値に <val2> を加えた値までの部分列の整数値番目だけ増加させる </blk>	for <name6> in range ( len ( <name5> ) // <val2> ) : <blk> <name3> += <name1> [ int ( <name5> [ <name6> * <val2> : <name6> * <val2> + <val2> ] , <val4> ) ] </blk>	try : <blk> <name3> += <name1> [ <val4> : int ( <name5> [ <name6> * <val2> : <name6> * <val2> + <val2> ] , <val2> ) for <name6> in range ( len ( <name5> ) // <val2> ) ] </blk>
<val5> から <name3> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <val5> から <name3> に <val2> を加えた値未満までの数列の各要素を <name4> とし、 <val5> の列の列を <name6> の <name1> にする	<name6> . <name1> = [ [ <val5> for <name4> in range ( <name3> + <val2> ) ] for <name6> in range ( <name3> + <val2> ) ]	<name6> . <name1> = [ [ <val5> for <name4> in range ( <name3> + <val2> ) ] for <name6> in range ( <name3> + <val2> ) ]
<name5> かつ <name6> が <name4> の先頭より小さいとき、	if <name5> and <name6> < <name4> [ 0 ] :	if ( <name5> and <name6> < <name4> [ 0 ] ) :
<name1> が <val5> より小さいとき、 <blk> <val6> を <name3> とする </blk>	if <name1> < <val5> : <blk> <name3> = <val6> </blk>	\ <name3> = <name1> < <val5> : <blk> <name3> = <val6> </blk>
<name3> から <name5> を引いた値の <val2> 乗に <name1> から <name6> を引いた値の <val2> 乗を加えた値の平方根を <name4> とする	<name4> = math . sqrt ( ( <name3> - <name5> ) ** <val2> + ( <name1> - <name6> ) ** <val2> )	<name4> = math . sqrt ( ( <name3> - <name5> ) ** <val2> + ( <name1> - <name6> ) ** <val2> )
<name6> の <name4> かつ <name1> の <name5> が <name2> の <name5> より小さいとき、	if <name6> . <name4> and <name1> . <name5> < <name2> . <name5> :	list ( <name6> . <name4> and <name1> . <name5> < <name2> . <name5> :
<val4> の <name1> から <val5> を引いた値のビット長乗を <name6> とする	<name6> = <val4> ** ( ( <name1> - <val5> ) . bit_length ( ) )	<name6> = <val4> ** ( ( <name1> - <val5> ) . bit_length ( ) )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = map ( int , <name1> ( ) . split ( ) )	<name5> , <name2> = map ( int , <name1> ( ) . split ( ) )
<val5> の <val1> 乗に <val1> を加えた値を <name3> とする	<name3> = <val5> ** <val1> + <val1>	<name3> = <val5> ** <val1> + <val1>
<name2> に <name6> を加えた値が <name5> の <name1> 番目より小さいとき、	if <name2> + <name6> < <name5> [ <name1> ] :	raise <name2> + <name6> < <name5> [ <name1> ] :
<name2> が、つまり集合と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == set ( ) : <blk> break </blk>	list ( <name2> == set ( ) ) : <blk> break </blk>
<name5> 、 <name4> の要素をそれぞれ組にした列の各要素を <name2> 、 <name1> とし、 <name2> が <name1> と等しいときの <val6> の列の総和を <name3> とする	<name3> = sum ( [ <val6> for <name2> , <name1> in zip ( <name5> , <name4> ) if <name2> == <name1> ] )	<name3> = sum ( [ <val6> for <name2> , <name1> in zip ( <name5> , <name4> ) if <name2> == <name1> ] )
( 、つまり未定値 ) からなる列の <name5> に <val1> を加えた値回分の列を <name6> とする	<name6> = [ None ] * ( <name5> + <val1> )	<name6> = [ None ] * ( <name5> + <val1> )
<name3> モジュールを用いる	from <name3> import Tuple	from <name3> import combinations
( <val1> ) からなる列の <name3> に <val4> を加えた値回分の列を <name5> とする	<name5> = [ <val1> ] * ( <name3> + <val4> )	else = [ <val1> ] * ( <name3> + <val4> )
<name4> . <name6> ( <name1> ) を返す	return <name4> . <name6> ( <name1> )	yield <name4> . <name6> ( <name1> )
<name5> から <name2> を引いた値を <name6> から <name4> を引いた値で割った値に <name1> から <name4> を引いた値を掛けた値に <name2> を加えた値を <name3> とする	<name3> = ( <name5> - <name2> ) / ( <name6> - <name4> ) * ( <name1> - <name4> ) + <name2>	<name3> = ( <name5> - <name2> ) / ( <name6> - <name4> ) * ( <name1> - <name4> ) + <name2>
<name3> ( <name5> , <name4> + <val6> , <name2> , <name1> ) を <name1> とする	<name1> = <name3> ( <name5> , <name4> + <val6> , <name2> , <name1> )	<name1> = <name3> ( <name5> , <name4> + <val6> , <name2> , <name1> )
<name4> . <name1> ( <name6> . <name2> , <name6> . <name5> ) を <name3> とする	<name3> = <name4> . <name1> ( <name6> . <name2> , <name6> . <name5> )	<name3> = <name4> . <name1> ( <name6> . <name2> , <name6> . <name5> )
<name5> と <name2> 、 <name1> のユークリッド距離を <name3> とする	<name3> = dist ( <name5> , <name2> , <name1> )	<name3> = dist ( <name5> , <name2> , <name1> )
<name4> ( ( <name5> - <name6> ) / ( <name3> - <name6> ) ) を <name2> とする	<name2> = <name4> ( ( <name5> - <name6> ) / ( <name3> - <name6> ) )	<name2> = <name4> ( ( <name5> - <name6> ) / ( <name3> - <name6> ) )
<name4> に <name3> から <name4> を引いた値を <val6> で割った商を加えた値の整数値を <name5> とする	<name5> = int ( <name4> + ( <name3> - <name4> ) // <val6> )	<name5> = int ( <name4> + ( <name3> - <name4> ) // <val6> )
( <name1> の x 座標、 <val2> に <name3> の <name6> の y 座標を掛けた値から <name1> の y 座標を引いた値 ) の組を返す	return ( <name1> . x , <val2> * <name3> . <name6> . y - <name1> . y )	yield ( <name1> . x , <val2> * <name3> . <name6> . y - <name1> . y )
改行せずに <val3> を書式として <name6> の <name1> で整形した文字列を出力する	print ( <val3> . format ( <name6> . <name1> ) , end = '' )	end = <val3> . format ( <name6> . <name1> ) , end = '' )
<name3> に <name4> の <name2> 番目を加えた値を <name6> の長さで割った余りを <name3> とする	<name3> = ( <name3> + <name4> [ <name2> ] ) % len ( <name6> )	<name3> = ( <name3> + <name4> [ <name2> ] ) % len ( <name6> )
<name1> の <name6> 番目の <name4> 番目の <name3> に <val5> を加えた値番目を <val5> だけ増加させる	<name1> [ <name6> ] [ <name4> ] [ <name3> + <val5> ] += <val5>	<name2> [ <name6> ] [ <name4> ] [ <name3> + <val5> ] += <val5>
<name5> ( <name4> , <name6> -3 , <name2> ) を <name4> とする	<name4> = <name5> ( <name4> , <name6> - 3 , <name2> )	<name4> = <name5> ( <name4> , <name6> - 3 , <name2> )
\ <name1> ( <val2> % <name3> ) \	\ <name1> ( <val2> % <name3> ) \	for <name1> ( <val2> % <name3> ) \
0 から <name4> の長さから <val2> を引いた値未満までの数列の各要素を <name1> とし、 <name4> の <name1> 番目に <name4> の <name1> に <val2> を加えた値番目を加えた値を <val6> で割った余りの列を <name4> とする	<name4> = [ ( <name4> [ <name1> ] + <name4> [ <name1> + <val2> ] ) % <val6> for <name1> in range ( len ( <name4> ) - <val2> ) ]	<name4> = [ ( <name4> [ <name1> ] + <name4> [ <name1> + <val2> ] ) % <val6> for <name1> in range ( len ( <name4> ) - <val2> ) ]
<name1> の <val6> 番目、 <name1> の <val2> 番目を <name1> の <val2> 番目、 <name1> の <val6> 番目とする	<name1> [ <val2> ] , <name1> [ <val6> ] = <name1> [ <val6> ] , <name1> [ <val2> ]	[ <name1> [ <val2> ] , <name1> [ <val6> ] = <name1> [ <val6> ] , <name1> [ <val2> ]
<name5> の <name1> 番目から <name2> 番目までの部分列の最小値を出力する	print ( min ( <name5> [ <name1> : <name2> ] ) )	range ( min ( <name5> [ <name1> : <name2> ] ) )
( <name4> の <name3> から <val2> を引いた値番目 ) からなる列を <name5> とする	<name5> = [ <name4> [ <name3> - <val2> ] ]	<name5> = [ <name4> [ <name3> - <val2> ] ]
( 、つまり無限大 ) からなる列の <name3> に <val2> を加えた値回分の列を <name5> とする	<name5> = [ inf ] * ( <name3> + <val2> )	<name5> = [ inf ] * ( <name3> + <val2> )
<name3> の <name2> 番目の末尾に ( <name1> の <name2> 番目の <name4> 番目から <name1> の <name2> 番目の <name5> 番目を引いた値、 <name6> の <name2> 番目の <name4> 番目から <name6> の <name2> 番目の <name5> 番目を引いた値 ) の組を追加する	<name3> [ <name2> ] . append ( ( <name1> [ <name2> ] [ <name4> ] - <name1> [ <name2> ] [ <name5> ] , <name6> [ <name2> ] [ <name4> ] - <name6> [ <name2> ] [ <name5> ] ) )	<name3> [ <name2> ] . append ( ( <name1> [ <name2> ] [ <name4> ] - <name1> [ <name2> ] [ <name5> ] , <name6> [ <name2> ] [ <name4> ] - <name6> [ <name2> ] [ <name5> ] ) )
<name1> ( <name6> ) のとき、 <blk> <name6> を出力する <sep> 繰り返しを中断する </blk>	if <name1> ( <name6> ) : <blk> print ( <name6> ) <sep> break </blk>	\ if <name1> ( <name6> ) : <blk> print ( <name6> ) <sep> break </blk>
<name4> の <name3> の <name2> 番目を順に <name1> として、繰り返す	for <name1> in <name4> . <name3> [ <name2> ] :	. for <name1> in <name4> . <name3> [ <name2> ] :
<name4> の末尾に 'right key = {}, ' を追加する	<name4> . append ( right key = { a [ i * 2 + 1 ] } , )	<name4> . append ( { a [ i // 1 ] } , )
<name6> の <name5> 番目、 <name2> の <name4> 番目の最小値を <name6> の <name5> 番目にする	<name6> [ <name5> ] = min ( <name6> [ <name5> ] , <name2> [ <name4> ] )	dict [ <name5> ] = min ( <name6> [ <name5> ] , <name2> [ <name4> ] )
<name2> が <name6> 以下のとき、	if <name2> <= <name6> :	list ( <name2> <= <name6> ) :
<name6> の長さが <val5> より大きくかつ <name1> ( <name6> [ -2 ] , <name6> [ -1 ] , <name3> ) が <val4> より小さい間、次を繰り返す	while len ( <name6> ) > <val5> and <name1> ( <name6> [ - 2 ] , <name6> [ - <val5> ] , <name3> ) < <val4> :	while len ( <name6> ) > <val5> and <name1> ( <name6> [ - <val5> ] , <name6> [ - <val5> ] , <name3> ) < <val4> :
<name6> の先頭と <name6> の <val5> 番目を入れ替える	<name6> [ 0 ] , <name6> [ <val5> ] = <name6> [ <val5> ] , <name6> [ 0 ]	( <name6> [ 0 ] , <name6> [ <val5> ] ) = <name6> [ <val5> ] , <name6> [ 0 ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name5> 、 <name4> 、 <name3> とする	<name1> , <name6> , <name5> , <name4> , <name3> = map ( int , input ( ) . split ( ) )	<name6> , <name5> , <name4> , <name3> = map ( int , input ( ) . split ( ) )
入力された文字列を <val2> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を <name1> とする	<name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val2> ) ]	<name1> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val2> ) ]
<name1> が <name4> の <name2> 番目より小さい間、次を繰り返す <blk> <name2> を <val5> だけ減少させる </blk>	while <name1> < <name4> [ <name2> ] : <blk> <name2> -= <val5> </blk>	open ( <name1> < <name4> [ <name2> ] ) : <blk> <name2> -= <val5> </blk>
( <val1> 、 <name3> ) からなる列を <name2> とする	<name2> = [ <val1> , <name3> ]	( <name2> = [ <val1> , <name3> ] )
NA をそうでなければ、とする繰り返しを中断する	else = 'NA' break	<name3> = 'NA' break
<val2> を <name1> の <name4> の先頭番目にする	<name1> [ <name4> [ 0 ] ] = <val2>	not <name1> [ <name4> [ 0 ] ] = <val2>
<name2> の各要素を <name4> 、 <name6> とし、 <name6> の列を <name1> とする	<name1> = [ <name6> for <name4> , <name6> in <name2> ]	<name1> = [ <name6> for <name4> , <name6> in <name2> ]
0 から <name4> から <name1> を引いた値に <val6> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> - <name1> + <val6> ) :	for <name3> in range ( <name4> - <name1> + <val6> ) :
0 から <name5> 未満までの数列の各要素を <name1> とし、 <val3> を <name2> だけ左シフトした値から <val3> を引いた値の列を <name4> とする	<name4> = [ ( <val3> << <name2> ) - <val3> for <name1> in range ( <name5> ) ]	<name4> = [ ( <val3> << <name2> ) - <val3> for <name1> in range ( <name5> ) ]
<name6> の <val3> 番目を <name2> だけ減少させる	<name6> [ <val3> ] -= <name2>	<name2> [ <val3> ] -= <name2>
<name1> を追加して <name4> を拡張する	<name4> . extend ( <name1> )	<name4> . extend ( <name1> )
<name6> の <val2> 乗から <name3> 未満までの <name6> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> ** <val2> , <name3> , <name6> ) :	) for <name5> in range ( <name6> ** <val2> , <name3> , <name6> ) :
<name5> の値の集まりの最大値を <name2> とする	<name2> = max ( <name5> . values ( ) )	dict = max ( <name5> . values ( ) )
<name6> の各要素を <name4> とし、 <name4> を空白で分割した字句列の列を順に <name5> として、繰り返す	for <name5> in ( [ <name4> . split ( ) for <name4> in <name6> ] ) :	. for <name5> in [ <name4> . split ( ) for <name4> in <name6> ] :
<val5> の <val4> 乗を <name6> とする	<name6> = <val5> ** <val4>	( <name6> = <val5> ** <val4> )
<name6> から <name1> の先頭を引いた値を <name4> とする	<name4> = <name6> - <name1> [ 0 ]	<name4> = <name6> - <name1> [ 0 ]
<name1> を <name4> ( <name2> , <name6> ) だけ増加させる	<name1> += <name4> ( <name2> , <name6> )	<name6> += <name1> += <name4> ( <name2> , <name6> )
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり未定値の列を <name6> とする	<name6> = [ None for <name2> in range ( <name5> ) ]	<name6> = [ None for <name2> in range ( <name5> ) ]
<name2> の <val1> 番目が <val1> と等しくかつ <name2> の <val5> 番目が <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> [ <val1> ] == <val1> and <name2> [ <val5> ] == <val1> : <blk> break </blk>	\ if <name2> [ <val1> ] == <val1> and <name2> [ <val5> ] == <val1> : <blk> break </blk>
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> 、 <name6> とする	<name3> , <name2> , <name6> = map ( int , <name1> ( ) . split ( ) )	<name3> , <name2> , <name6> = map ( int , <name1> ( ) . split ( ) )
を間に入れて <name2> ( <name6> ) の逆順を連結した文字列の整数値から <val1> を間に入れて <name6> をソートした列を連結した文字列の整数値を引いた値を出力する	print ( int ( <val1> . join ( <name2> ( <name6> ) [ : : - <val1> ] ) ) - int ( <val1> . join ( <name2> ( <name6> ) ) ) )	<val3> print ( int ( <val1> . join ( <name2> ( <name6> ) [ : : - <val1> ] ) ) - int ( <val1> . join ( sorted ( <name6> ) ) ) )
<name2> . <name4> ( <name1> , <name5> ) の絶対値が <name2> の <name3> より小さいかどうかを返す	return abs ( <name2> . <name4> ( <name1> , <name5> ) ) < <name2> . <name3>	x return abs ( <name2> . <name4> ( <name1> , <name5> ) ) < <name2> . <name3>
<val2> から <name6> 未満までの数列の各要素を <name4> とし、 <val2> の列を <name3> とする	<name3> = [ <val2> for <name4> in range ( <name6> ) ]	<name3> = [ <val2> for <name4> in range ( <name6> ) ]
<name2> が <val4> より小さくまたは <name2> が <name3> 以上または <name6> が <val4> より小さくまたは <name6> が <name1> 以上または <name5> の <name2> 番目の <name6> 番目でないとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name2> < <val4> or <name2> >= <name3> or <name6> < <val4> or <name6> >= <name1> or not <name5> [ <name2> ] [ <name6> ] : <blk> continue </blk>	for <name2> in <val4> or ( <name2> >= <name3> ) or ( <name6> < <val4> ) or ( <name6> >= <name1> ) or ( <name5> [ <name2> ] [ <name6> ] ) : <blk> continue </blk>
<name6> を展開し、それぞれ <name3> 、 <name1> 、 <name2> とする	<name3> , <name1> , <name2> = <name6>	<name6> , <name3> , <name1> , <name2> = <name6>
<name6> . <name4> ( <name3> ) を出力する	print ( <name6> . <name4> ( <name3> ) )	print ( <name6> . <name4> ( <name3> ) )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name3> とする	<name6> , <name4> , <name3> = map ( float , input ( ) . split ( ) )	<name4> , <name3> = map ( float , input ( ) . split ( ) )
<name4> ( <name1> , <name5> , <name2> ) を <name3> とする	<name3> = <name4> ( <name1> , <name5> , <name2> )	<name3> = <name4> ( <name1> , <name5> , <name2> )
入力された文字列を空白で分割した字句列の <val5> 番目から、つまり末尾までの部分列の各要素に整数を適用した列のリストを <name2> とする	<name2> = list ( map ( int , input ( ) . split ( ) [ <val5> : ] ) )	<name2> = list ( map ( int , input ( ) . split ( ) [ <val5> : ] ) )
<name4> が <name6> の <name5> 番目より小さいとき、	if <name4> < <name6> [ <name5> ] :	for <name4> < <name6> [ <name5> ] :
<name3> ( <name4> + <val1> , <name6> , <name2> ) を <name5> とする	<name5> = <name3> ( <name4> + <val1> , <name6> , <name2> )	else = <name3> ( <name4> + <val1> , <name6> , <name2> )
<name2> の末尾に <name5> に <val6> を加えた値に <name3> の文字列を加えた値を追加する	<name2> . append ( <name5> + <val6> + str ( <name3> ) )	<name2> . append ( <name5> + <val6> + str ( <name3> ) )
0 から <name4> 未満までの数列の各要素を <name1> とし、 <name3> の <name1> 番目から <name5> の <name1> 番目を引いた値の絶対値の列の最大値を <name2> とする	<name2> = max ( [ math . fabs ( <name3> [ <name1> ] - <name5> [ <name1> ] ) for <name1> in range ( <name4> ) ] )	<name4> = max ( [ abs ( <name3> [ <name1> ] - <name5> [ <name1> ] ) for <name1> in range ( <name4> ) ] )
<name5> の浮動小数点数を <name4> とする	<name4> = float ( <name5> )	<name4> = float ( <name5> )
<val6> の <val3> 乗を一旦、返す	yield <val6> ** <val3>	global ( <val6> ** <val3> )
<name3> ( <name5> , <name4> , <name1> , <name2> )	<name3> ( <name5> , <name4> , <name1> , <name2> )	<name2> ( <name5> , <name4> , <name1> , <name2> )
<name3> の <name2> 番目を <name6> とする	<name6> = <name3> [ <name2> ]	<name2> = <name3> [ <name2> ]
0 から <name3> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name2> in range ( <name3> ) ]	<name6> = [ [ ] for <name2> in range ( <name3> ) ]
internal node を <name3> の <name6> 番目にする	<name3> [ <name6> ] = 'internal node'	( <name3> [ <name6> ] = 'internal node' )
<name6> が <name5> に含まれるとき、 <blk> <name5> の <name6> 番目を <name2> の整数値だけ増加させる </blk>	if <name6> in <name5> : <blk> <name5> [ <name6> ] += int ( <name2> ) </blk>	try : <blk> <name5> [ <name6> ] += int ( <name2> ) </blk>
<name2> の <name3> の <name5> に <name5> を挿入する	<name2> . <name3> . insert ( <name5> , <name5> )	<name1> . insert ( <name2> . <name3> . <name5> , <name5> )
<val4> を間に入れて <name5> 、 0 から <val2> 未満までの数列を反転した列の要素をそれぞれ組にした列の各要素を <name3> 、 <name6> とし、 <name3> のときの <name1> ( <name3> , <name6> ) の列を連結した文字列を <name2> とする	<name2> = <val4> . join ( [ <name1> ( <name3> , <name6> ) for <name3> , <name6> in zip ( <name5> , reversed ( range ( <val2> ) ) ) if <name3> ] )	<name2> = <val4> . join ( [ <name1> ( <name3> , <name6> ) for <name3> , <name6> in zip ( <name5> , reversed ( <val2> ) ) if <name3> ] )
0 から <name5> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組の列を <name6> とする	<name6> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name5> ) ]	<name6> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name5> ) ]
<name1> の -1 番目が <name5> より小さいとき、	if <name1> [ - 1 ] < <name5> :	while <name1> [ - 1 ] < <name5> :
<name2> ( <name1> , <name6> , <name4> , <name5> + <val3> ) に <val3> を加えた値を <name3> とする	<name3> = <name2> ( <name1> , <name6> , <name4> , <name5> + <val3> ) + <val3>	<name4> = <name2> ( <name1> , <name6> , <name4> , <name5> + <val3> ) + <val3>
<val5> を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <val5>	( <name6> [ <name2> ] = <val5> )
<name6> の総和から <name3> を引いた値を <name4> とする	<name4> = sum ( <name6> ) - <name3>	<name4> = sum ( <name6> ) - <name3>
<name1> の末尾に <name2> ( <name5> - <name3> . <name5> , <name6> - <name3> . <name6> ) を追加する	<name1> . append ( <name2> ( <name5> - <name3> . <name5> , <name6> - <name3> . <name6> ) )	<name1> . append ( <name2> ( <name5> - <name3> . <name5> , <name6> - <name3> . <name6> ) )
<name4> を <name5> で割った余りを <name2> とする	<name2> = <name4> % <name5>	( <name2> = <name4> % <name5> )
<name1> ( <name6> , <name4> + <val3> )	<name1> ( <name6> , <name4> + <val3> )	<name1> ( <name6> , <name4> + <val3> )
<name5> の <name6> に <name2> を加えた値番目、 <name5> の <name1> に <name2> を加えた値番目を <name5> の <name1> に <name2> を加えた値番目、 <name5> の <name6> に <name2> を加えた値番目とする	<name5> [ <name1> + <name2> ] , <name5> [ <name6> + <name2> ] = <name5> [ <name6> + <name2> ] , <name5> [ <name1> + <name2> ]	( <name5> [ <name1> + <name2> ] , <name5> [ <name6> + <name2> ] = <name5> [ <name6> + <name2> ] , <name5> [ <name1> + <name2> ] )
<name6> の <name4> を <val2> だけ増加させる	<name6> . <name4> += <val2>	pow ( <name6> . <name4> , <val2> )
<name3> に <name5> の <name4> 番目を加えた値、 <name1> に <name6> の <name4> 番目を加えた値を <name6> 、 <name2> とする	<name6> , <name2> = <name3> + <name5> [ <name4> ] , <name1> + <name6> [ <name4> ]	<name5> , <name2> = <name3> + <name5> [ <name4> ] , <name1> + <name6> [ <name4> ]
<val6> から <val5> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <val5> ) :	. for <name1> in range ( <val6> , <val5> ) :
<name4> の <name5> の <name2> 番目に <name4> の <name1> の <name2> 番目の <name6> 番目を加えた値を <name4> の <name5> の <name6> 番目にする	<name4> . <name5> [ <name6> ] = <name4> . <name5> [ <name2> ] + <name4> . <name1> [ <name2> ] [ <name6> ]	<name4> . <name5> [ <name6> ] = <name4> . <name5> [ <name2> ] + <name4> . <name1> [ <name2> ] [ <name6> ]
<name3> に <name2> の <name5> 番目の先頭を加えた値、 <name1> に <name2> の <name5> 番目の <val4> 番目を加えた値を <name4> 、 <name6> とする	<name4> , <name6> = <name3> + <name2> [ <name5> ] [ 0 ] , <name1> + <name2> [ <name5> ] [ <val4> ]	<name2> , <name4> , <name6> = <name3> + <name2> [ <name5> ] [ 0 ] , <name1> + <name2> [ <name5> ] [ <val4> ]
<name4> が <val2> 以下かつ <name6> が <val2> 以下かどうかを返す	return <name4> <= <val2> and <name6> <= <val2>	x return <name4> <= <val2> and <name6> <= <val2>
<name6> に <name5> から <name6> を引いた値を <val1> で割った商を加えた値を <name4> とする	<name4> = <name6> + ( <name5> - <name6> ) // <val1>	<name4> = <name6> + ( <name5> - <name6> ) // <val1>
<name5> を <name6> の <name1> 番目に <name4> の <name3> 番目を掛けた値に <name2> の <name3> 番目を掛けた値を <name5> で割った余りだけ減少させる	<name5> -= <name6> [ <name1> ] * <name4> [ <name3> ] * <name2> [ <name3> ] % <name5>	<name1> -= <name6> [ <name1> ] * <name4> [ <name3> ] * <name2> [ <name3> ] % <name5>
<name5> の <name3> の <name2> に <val4> を加えた値番目に <name2> に <val4> を加えた値を掛けた値を <name6> で割った余りを <name5> の <name3> の <name2> 番目にする	<name5> . <name3> [ <name2> ] = <name5> . <name3> [ <name2> + <val4> ] * ( <name2> + <val4> ) % <name6>	<name1> . <name3> [ <name2> ] = <name5> . <name3> [ <name2> + <val4> ] * ( <name2> + <val4> ) % <name6>
<name1> ( <name6> , <name4> , <name3> , <name5> ) が <name2> より大きいとき、	if <name1> ( <name6> , <name4> , <name3> , <name5> ) > <name2> :	isinstance ( <name1> ( <name6> , <name4> , <name3> , <name5> ) > <name2> :
<name5> ( <name4> * <name2> , <name6> ) を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name5> ( <name4> * <name2> , <name6> )	<name3> [ <name1> ] = <name5> ( <name4> * <name2> , <name6> )
<val6> から <name4> 未満までの数列の逆順を順に <name3> として、繰り返す	for <name3> in range ( <val6> , <name4> ) [ : : - <val6> ] :	continue for <name3> in range ( <val6> , <name4> ) [ : : - 1 ] :
<name2> を <name6> で割った商を <name3> とする <name1> を <name6> で割った商を <name4> とする	<name3> = <name2> // <name6> <name4> = <name1> // <name6>	<name2> = <name2> // <name6> <name4> = <name1> // <name6>
<val6> から <name4> に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , <name4> + <val5> ) :	continue range ( <val6> , <name4> + <val5> ) :
<name6> 内の <name3> の整数値と等しい要素を取り除く	<name6> . remove ( int ( <name3> ) )	not <name6> . remove ( int ( <name3> ) )
<val5> から <name2> に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , <name2> + <val5> ) :	. for <name1> in range ( <val5> , <name2> + <val5> ) :
\ <name1> が'\\\\'と等しいとき、\	\ if <name1> == '\\\\' : \	if <name1> == '\\\\' : \
<name1> ( <name2> , ( <name6> , <name5> , <name4> , <val3> ) )	<name1> ( <name2> , ( <name6> , <name5> , <name4> , <val3> ) )	<name4> ( <name2> , ( <name6> , <name5> , <name4> , <val3> ) )
<name5> に <name6> を掛けた値を <name5> と <name6> の最大公約数で割った商を <name2> とする	<name2> = <name5> * <name6> // gcd ( <name5> , <name6> )	( <name2> = <name5> * <name6> ) // gcd ( <name5> , <name6> )
<name2> を <name1> と <val4> の論理積との排他的論理和にする	<name2> ^ = ( <name1> & <val4> )	( <name2> ^ = <name1> & <val4> )
<name6> に <val5> を加えた値を <val4> で割った商に <val4> を掛けた値から <name3> に <val1> を加えた値未満までの <val4> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( ( <name6> + <val5> ) // <val4> * <val4> , <name3> + <val1> , <val4> ) :	. for <name2> in range ( ( <name6> + <val5> ) // <val4> * <val4> , <name3> + <val1> , <val4> ) :
<val4> に <name3> を掛けた値を <name6> とする	<name6> = <val4> * <name3>	<name6> = <val4> * <name3>
<name5> を <name3> の <name2> に <name4> を加えた値番目だけ増加させる	<name5> += <name3> [ <name2> + <name4> ]	<name2> += <name5> += <name3> [ <name2> + <name4> ]
<name4> の <name1> の各要素を <name5> とし、 <name5> を <val3> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列の列を <name2> とする	<name2> = [ [ int ( <name6> ) for <name6> in <name5> . split ( <val3> ) ] for <name5> in <name4> . <name1> ]	<name2> = [ [ int ( <name6> ) for <name6> in <name5> . split ( <val3> ) ] for <name5> in <name4> . <name1> ]
<val5> を返す	return ( <val5> )	yield ( <val5> )
<name3> 、 <name4> の <name3> と等しい要素の最初の位置を出力する	print ( <name3> , <name4> . index ( <name3> ) )	<name4> . index ( <name3> ) print ( <name3> ) )
入力された文字列を <val5> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( float , input ( ) . split ( <val5> ) )	<name6> , <name3> = map ( float , input ( ) . split ( <val5> ) )
( <val4> ) からなる列の <val3> 回分の列を順に <name2> として、繰り返す	for <name2> in [ <val4> ] * <val3> :	. for <name2> in [ <val4> ] * <val3> :
<name3> ( <name5> - <name1> ) を <name6> とする	<name6> = <name3> ( <name5> - <name1> )	<name6> = <name3> ( <name5> - <name1> )
関数 <name2> を <name6> 、 <name3> をパラメータとして定義する 0 から <name3> 未満までの数列の各要素を <name1> とし、 <name6> の列を返す	def <name2> ( <name6> , <name3> ) : return [ <name6> ( input ( ) ) for <name1> in range ( <name3> ) ]	<name5> ( <name2> ( <name6> , <name3> ) : return [ <name6> ( <name1> ) for <name1> in range ( <name3> ) ] )
<name4> の <name5> 番目に番号付した組の列を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in enumerate ( <name4> [ <name5> ] ) :	for <name3> , <name6> in enumerate ( <name4> [ <name5> ] ) :
0 から <val6> を <name3> だけ左シフトした値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> << <name3> ) :	) : in range ( <val6> << <name3> ) :
<name3> ( [ <name1> [ <val5> : <val2> ] forlineindrawing [ <val6> : <val4> ] ] ) を <name4> とする	<name4> = <name3> ( [ <name1> [ <val5> : <val2> ] for <name1> in drawing [ <val6> : <val4> ] ] )	<name4> = <name3> ( [ <name1> [ <val5> : <val2> ] for <name1> in drawing [ <val6> : <val4> ] ] )
<name5> の <name3> かつ <name2> の <name1> が、つまり未定値と等しくないとき、	if <name5> . <name3> and <name2> . <name1> is None :	if <name5> . <name3> and <name2> . <name1> is None :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = input ( ) . split ( )	<name5> , <name1> = input ( ) . split ( )
0 から <name6> から <val5> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> - <val5> ) :	for <name4> in range ( <name6> - <val5> ) :
<name6> の <name3> を <name3> とする <name6> の <name2> を <name2> とする	<name3> = <name6> . <name3> <name2> = <name6> . <name2>	else = <name6> . <name3> <name2> = <name6> . <name2>
<name5> から <name4> を引いた値の <val1> 乗に <name6> から <name2> を引いた値の <val1> 乗を加えた値を <name3> とする	<name3> = ( <name5> - <name4> ) ** <val1> + ( <name6> - <name2> ) ** <val1>	<name3> = ( <name5> - <name4> ) ** <val1> + ( <name6> - <name2> ) ** <val1>
<name3> の <name1> 番目の <name2> 番目が <name6> より大きいとき、	if <name3> [ <name1> ] [ <name2> ] > <name6> :	continue [ <name1> ] [ <name2> ] > <name6> :
( <name3> を <name1> で割った商、 <name6> を <name1> で割った商 ) の組を返す	return ( <name3> // <name1> , <name6> // <name1> )	yield ( <name3> // <name1> , <name6> // <name1> )
( <name4> ) からなる列の <name6> の <name5> 回分の列を <name2> とする	<name2> = [ <name4> ] * <name6> . <name5>	<name2> = [ <name4> ] * <name6> . <name5>
<name5> の <name2> の <name1> から <val4> を引いた値番目に <name5> の <name2> の <name1> から <val3> を引いた値番目を加えた値を <name6> とする	<name6> = <name5> . <name2> [ <name1> - <val4> ] + <name5> . <name2> [ <name1> - <val3> ]	<name6> = <name5> . <name2> [ <name1> - <val4> ] + <name5> . <name2> [ <name1> - <val3> ]
<name4> 、 <name2> を <name5> 、 <name1> とする	<name5> , <name1> = <name4> , <name2>	<name1> , <name1> = <name4> , <name2>
<name1> の <name6> 番目に <name3> を加えた値が <name1> の <name4> 番目より小さいとき、	if <name1> [ <name6> ] + <name3> < <name1> [ <name4> ] :	for <name1> [ <name6> ] + <name3> < <name1> [ <name4> ] :
<name2> と <name3> 、 <name1> の和集合	<name2> . union ( <name3> , <name1> )	set ( <name2> . union ( <name3> , <name1> ) )
0 から <name1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の <val6> 番目から、つまり末尾までの部分列の列を <name2> とする	<name2> = [ input ( ) . split ( ) [ <val6> : ] for <name3> in range ( <name1> ) ]	<name2> = [ input ( ) . split ( ) [ <val6> : ] for <name3> in range ( <name1> ) ]
<name5> の <val1> 番目が <name3> に含まれるとき、	if <name5> [ <val1> ] in <name3> :	if <name5> [ <val1> ] in <name3> :
<name2> の <name3> 番目を <name1> の <name4> 番目にする	<name1> [ <name4> ] = <name2> [ <name3> ]	<name1> [ <name4> ] = <name2> [ <name3> ]
<name1> の <name5> に <name2> を加えた値番目を <val6> だけ減少させる	<name1> [ <name5> + <name2> ] -= <val6>	<name2> <name1> [ <name5> + <name2> ] -= <val6>
<val6> を <name4> を <name3> とするとするを <name1> とする	<name1> = <name3> = <name4> = <val6>	<name1> = <name3> = <name4> = <val6>
<name1> の <name4> の <val5> 番目番目を展開してを出力する	print ( * <name1> [ <name4> [ <val5> ] ] )	print ( * <name1> [ <name4> [ <val5> ] ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name3> の <name2> 番目にする	<name3> [ <name2> ] = list ( map ( int , input ( ) . split ( ) ) )	<name3> [ <name2> ] = list ( map ( int , input ( ) . split ( ) ) )
<name4> が、つまり未定値と等しくかつ <name4> の <name1> が <name2> と等しくない間、次を繰り返す	while <name4> is not None and <name4> . <name1> != <name2> :	try while <name4> is not None and <name4> . <name1> != <name2> :
<name4> の <name5> を <name6> の、つまり先頭から、つまり末尾までの部分列にする	<name6> [ : ] = <name4> . <name5>	<name6> [ : ] = <name4> . <name5>
<name3> [ <name4> ] . <name5> ( )	<name3> [ <name4> ] . <name5> ( )	( <name3> [ <name4> ] . <name5> ( ) )
偽を <name4> の <val2> 番目にする	<name4> [ <val2> ] = False	( <name4> [ <val2> ] = False )
0 から <name6> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name2> とする	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name6> ) ]	<name2> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name4> in range ( <name6> ) ]
<name3> を <name2> の絶対値に <name5> の絶対値を加えた値だけ増加させる	<name3> += abs ( <name2> ) + abs ( <name5> )	<name1> += ( abs ( <name2> ) + abs ( <name5> ) )
<name6> に <name4> を加えた値を出力する	print ( <name6> + <name4> )	print ( <name6> + <name4> )
入力された文字列を <val3> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ]	<name4> , <name1> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ]
<name3> の <name4> 番目が、つまり真と等しいとき、	if <name3> [ <name4> ] == True :	if <name3> [ <name4> ] == True :
<name5> [ <name3> ] . <name1> ( <name5> [ <name2> ] )	<name5> [ <name3> ] . <name1> ( <name5> [ <name2> ] )	<name1> [ <name3> ] . <name1> ( <name5> [ <name2> ] )
<name1> の <name4> 番目の <val3> 番目を返す	return <name1> [ <name4> ] [ <val3> ]	yield <name1> [ <name4> ] [ <val3> ]
<name1> の <name2> を <name1> とする	<name1> = <name1> . <name2>	<name2> = <name1> . <name2>
<val4> に <name3> を掛けた値から <val1> を引いた値を <name5> の <name3> にする	<name5> . <name3> = <val4> * <name3> - <val1>	<name4> . <name3> = <val4> * <name3> - <val1>
<name2> の <name6> の <name4> 番目を返す	return <name2> . <name6> [ <name4> ]	yield <name2> . <name6> [ <name4> ]
<name6> が <name3> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <name3> : <blk> break </blk>	list ( <name6> == <name3> ) : <blk> break </blk>
MULTIPLE を出力する	print ( 'MULTIPLE' )	dict print ( 'Data ' )
<name4> の末尾に <name1> の末尾内の <name2> の出現回数を追加する	<name4> . append ( <name1> [ - 1 ] . count ( <name2> ) )	<name4> . append ( <name1> [ - 1 ] . count ( <name2> ) )
<name3> ( <name2> . <name6> * <name1> , <name2> . <name5> * <name1> ) を返す	return <name3> ( <name2> . <name6> * <name1> , <name2> . <name5> * <name1> )	assert <name3> ( <name2> . <name6> * <name1> , <name2> . <name5> * <name1> )
<name4> . <name5> ( <name2> . <name1> - <name2> . <name6> , <name3> - <name2> . <name6> ) が <val4> より小さいとき、	if <name4> . <name5> ( <name2> . <name1> - <name2> . <name6> , <name3> - <name2> . <name6> ) < <val4> :	isinstance ( <name4> . <name5> ( <name2> . <name1> - <name2> . <name6> , <name3> - <name2> . <name6> ) < <val4> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを返す	return list ( map ( int , input ( ) . split ( ) ) )	return list ( map ( int , input ( ) . split ( ) ) )
<name3> から <name1> を引いた値の絶対値を <name4> とする	<name4> = abs ( <name3> - <name1> )	<name4> = abs ( <name3> - <name1> )
<name1> の <name4> から <val5> を引いた値番目を <name3> とする	<name3> = <name1> [ <name4> - <val5> ]	<name3> = <name1> [ <name4> - <val5> ]
0 から <name1> 未満までの数列の各要素を <name2> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name2> in range ( <name1> ) ]	<name4> = [ [ ] for <name2> in range ( <name1> ) ]
<val5> から <name2> の長さ未満までの数列の各要素を <name4> とし、 <val1> 、 ( <val5> ) からなる列の <name2> の先頭の長さ回分の列からの配列の列を <name6> とする	<name6> = [ array ( <val1> , [ <val5> ] * len ( <name2> [ <val5> ] ) ) for <name4> in range ( len ( <name2> ) ) ]	<name6> = [ array ( <val1> , [ <val5> ] * len ( <name2> [ <val5> ] ) ) for <name4> in range ( len ( <name2> ) ) ]
<name1> の長さが <name3> の長さ以上のとき、	if len ( <name1> ) >= len ( <name3> ) :	list ( len ( <name1> ) >= len ( <name3> ) ) :
\ <val3> 、 <val2> を開いたファイルストリームに <val1> を書き込む\	\ open ( <val3> , <val2> ) . write ( <val1> ) \	\ open ( <val3> , <val2> ) . write ( <val1> ) \
<name5> と <name1> の論理和と <name3> の論理和でないとき、	if not ( <name5> | <name1> | <name3> ) :	global ( <name5> | <name1> | <name3> ) :
<val6> の <val1> 乗を <name4> とする	<name4> = <val6> ** <val1>	<name4> = <val6> ** <val1>
改行せずに <val3> を書式として <name1> の <name4> から <val2> を引いた値番目で整形した文字列を出力する	print ( <val3> . format ( <name1> [ <name4> - <val2> ] ) , end = '' )	<name5> . format ( <name1> [ <name4> - <val2> ] ) , end = '' )
<name1> に <name1> を掛けた値を <val4> で割った値に <val2> を加えた値を <val2> で割った値の切り上げ整数値を <name3> とする	<name3> = math . ceil ( ( <name1> * <name1> / <val4> + <val2> ) / <val2> )	<name3> = math . ceil ( ( <name1> * <name1> / <val4> + <val2> ) / <val2> )
<name1> の <name2> 番目の <name5> 番目を <name4> だけ減少させる	<name1> [ <name2> ] [ <name5> ] -= <name4>	not <name1> [ <name2> ] [ <name5> ] -= <name4>
<name3> ( <name5> ) を <name4> とする	<name4> = <name3> ( <name5> )	<name4> = <name3> ( <name5> )
<name1> が <name4> より小さくかつ <name5> が <name3> 以下のとき、	if <name1> < <name4> and <name5> <= <name3> :	or <name1> < <name4> and <name5> <= <name3> :
<name1> の <val2> を <val5> で割った値乗を <name3> とする	<name3> = <name1> ** ( <val2> / <val5> )	<name3> = <name1> ** ( <val2> / <val5> )
\ ( <name1> のとき <val5> 、そうでなければ <val3> ) からなる列を <name2> とする\	\ <name2> = [ <val5> if <name1> else <val3> ] \	try = [ <val5> if <name1> else <val3> ] \
<name2> の <name4> 番目に <name5> を加えた値を <name2> の <name6> 番目にする	<name2> [ <name6> ] = <name2> [ <name4> ] + <name5>	( <name2> [ <name6> ] = <name2> [ <name4> ] + <name5> )
<name1> が <name2> から <val3> を引いた値以下の間、次を繰り返す	while <name1> <= <name2> - <val3> :	del <name1> <= <name2> - <val3> :
<name1> ( <name3> )	<name1> ( <name3> )	( <name1> ( <name3> ) )
<name6> に <val5> を加えた値の文字列を <name4> とする	<name4> = str ( <name6> + <val5> )	<name4> = str ( <name6> + <val5> )
<name6> が <name1> より小さくかつ <name4> の <name5> の <name6> 番目番目の間、次を繰り返す	while <name6> < <name1> and <name4> [ <name5> [ <name6> ] ] :	del ( <name6> < <name1> and <name4> [ <name5> [ <name6> ] ] ) :
<name4> の <name1> の <name2> から読み込んだ一行を入力された文字列とする	input = <name4> . <name1> . <name2> . readline	now = <name4> . <name1> . <name2> . readline ( )
<name5> モジュールを用いる	from <name5> import add	from <name5> , Counter
( <val2> ) からなる列の <val3> 回分の列を <name4> とする	<name4> = [ <val2> ] * <val3>	<name4> = [ <val2> ] * <val3>
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name5> とする	<name1> , <name2> , <name5> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )	<name6> , <name2> , <name5> = map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = map ( float , input ( ) . split ( ) )	<name1> , <name5> = map ( float , input ( ) . split ( ) )
<name6> ( <name2> , ( <name5> , <name4> , <name3> + <name1> ) )	<name6> ( <name2> , ( <name5> , <name4> , <name3> + <name1> ) )	set ( <name6> ( <name2> , ( <name5> , <name4> , <name3> + <name1> ) ) )
<name6> の <val4> 番目の整数値から <val4> を引いた値を <name5> とする	<name5> = int ( <name6> [ <val4> ] ) - <val4>	<name5> = int ( <name6> [ <val4> ] ) - <val4>
<val6> が <name1> に含まれるとき、	if <val6> in <name1> :	list if <val6> in <name1> :
<name2> の <name3> の <name4> から読み込んだ一行を <name6> とする	<name6> = <name2> . <name3> . <name4> . <name6>	<name6> = <name2> . <name3> . <name4> . <name6>
<name1> の <name3> 番目を削除する	del <name1> [ <name3> ]	count = <name1> [ <name3> ]
<name5> 、 <name3> を <name1> 、 <name4> とする	<name1> , <name4> = <name5> , <name3>	( <name1> , <name4> = <name5> , <name3> )
<name4> が <val5> より大きくかつ <name2> の <name4> から <val3> を引いた値番目が <val6> と等しくない間、次を繰り返す <blk> <name4> を <val3> だけ減少させる </blk>	while <name4> > <val5> and <name2> [ <name4> - <val3> ] != <val6> : <blk> <name4> -= <val3> </blk>	for <name2> in <name4> > <val5> and <name2> [ <name4> - <val3> ] != <val6> : <blk> <name4> -= <val3> </blk>
<name3> [ <name2> ] の <name1> 番目から <name3> [ <name2> ] [ <name4> ] に <name5> を掛けた値を引いた値から <name3> [ <name6> ] の <name1> 番目に <name3> を掛けた値を引いた値に <name3> [ <name6> ] の <name4> 番目に <name5> に <name3> を掛けた値を掛けた値を <name2> で割った余りを加えた値を <name2> で割った余りを返す	return ( <name3> [ <name2> ] [ <name1> ] - <name3> [ <name2> ] [ <name4> ] * <name5> - <name3> [ <name6> ] [ <name1> ] * <name3> + <name3> [ <name6> ] [ <name4> ] * ( <name5> * <name3> ) % <name2> ) % <name2>	assert ( <name3> [ <name2> ] [ <name1> ] - <name3> [ <name2> ] [ <name4> ] * <name5> - <name3> [ <name6> ] [ <name1> ] * <name3> + <name3> [ <name6> ] [ <name4> ] * <name5> % <name3> * <name2> ) % <name2>
<name6> が <name4> の長さと等しくないとき、	if <name6> != len ( <name4> ) :	!= <name6> != len ( <name4> ) :
入力された文字列を <val3> で分割した字句列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = input ( ) . split ( <val3> )	<name6> , <name1> = input ( ) . split ( <val3> )
( <val6> ) からなる列の <name5> に <val4> を加えた値回分の列を <name2> とする	<name2> = [ <val6> ] * ( <name5> + <val4> )	<name2> = [ <val6> ] * ( <name5> + <val4> )
<name5> ( <name1> -1 ) に <name5> ( <name1> -2 ) を加えた値に <name5> ( <name1> -3 ) を加えた値を返す	return <name5> ( <name1> - 1 ) + <name5> ( <name1> - 2 ) + <name5> ( <name1> - 3 )	return <name5> ( <name1> - 1 ) + <name5> ( <name1> - 2 ) + <name5> ( <name1> - 3 )
<name3> 、 <name5> 、 <name1> を <name6> の <name3> 、 <name6> の <name5> 、 <name6> の <name1> とする	<name6> . <name3> , <name6> . <name5> , <name6> . <name1> = <name3> , <name5> , <name1>	<name2> . <name3> , <name6> . <name5> , <name6> . <name1> = <name3> , <name5> , <name1>
0 から <val1> を <name3> だけ左シフトした値から <val1> を引いた値未満までの数列を反転した列を順に <name5> として、繰り返す	for <name5> in reversed ( range ( ( <val1> << <name3> ) - <val1> ) ) :	in reversed ( range ( <val1> << <name3> ) - <val1> ) :
区切りなしで <name2> 、 <val4> 、 <name5> 、 <val4> 、 <name1> を出力する	print ( <name2> , <val4> , <name5> , <val4> , <name1> , sep = '' )	print ( <name2> , <val4> , <name5> , <val4> , <name1> , sep = '' , end = '' )
<name3> かつ <name3> の <val1> 番目が <name2> と等しくなくまたは <name3> の <val5> 番目が <name2> と等しくない間、次を繰り返す	while <name3> and ( <name3> [ <val1> ] is <name2> or <name3> [ <val5> ] is <name2> ) :	for while <name3> and <name3> [ <val1> ] is <name2> or <name3> [ <val5> ] is <name2> :
<name3> の <name5> が、つまり未定値と等しくない間、次を繰り返す	while <name3> . <name5> != None :	while <name3> . <name5> != None :
<name4> ( <name2> , { [ iforiinrange ( <name6> ) ifi != <name2> ] } , <name5> , <name1> ) を出力する	print ( <name4> ( <name2> , { [ i for i in range ( <name6> ) if i != <name2> ] } , <name5> , <name1> ) )	range ( <name4> ( <name2> , { [ i for i in range ( <name6> ) if i & <name2> ] } , <name5> , <name1> ) )
入力された文字列を <val6> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name4> とする	<name4> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]	<name4> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val6> ) ]
<name3> の末尾に ( 、つまり真 ) からなる列の <name2> に <val6> を加えた値回分の列を追加する	<name3> . append ( [ True ] * ( <name2> + <val6> ) )	<name3> . append ( [ True ] * ( <name2> + <val6> ) )
<name4> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name2> 、 <name3> とする	<name1> , <name5> , <name2> , <name3> = map ( int , <name4> . split ( ) )	<name1> , <name5> , <name2> , <name3> = map ( int , <name4> . split ( ) )
<name3> . <name2> ( <name4> ) を <name2> とする	<name2> = <name3> . <name2> ( <name4> )	( <name2> = <name3> . <name2> ( <name4> ) )
<name1> に <val4> を加えた値を <name2> とする	<name2> = <name1> + <val4>	( <name2> = <name1> + <val4> )
<name5> ( <name3> ( <name1> [ : <name6> ] ) , <name3> ( <name1> [ <name6> : ] ) ) を <name1> の、つまり先頭から、つまり末尾までの部分列にする	<name1> [ : ] = <name5> ( <name3> ( <name1> [ : <name6> ] ) , <name3> ( <name1> [ <name6> : ] ) )	<name1> [ : ] = <name5> ( <name3> ( <name1> [ : <name6> ] ) , <name3> ( <name1> [ <name6> : ] ) )
os . <name5> の <name2> を取り出した値を <name6> とする	<name6> = <name5> . pop ( <name2> )	<name6> = <name5> . pop ( <name2> )
<name5> が <name4> より小さくないとき、	if not <name5> < <name4> :	while not <name5> < <name4> :
<name2> の <val1> 番目を <name5> の <val6> 番目にする	<name5> [ <val6> ] = <name2> [ <val1> ]	( <name5> [ <val6> ] = <name2> [ <val1> ] )
<val4> の <val1> 乗を <name2> とする	<name2> = <val4> ** <val1>	<name2> = <val4> ** <val1>
<name4> が <name1> より大きいとき、 <blk> <name4> を <name1> とする </blk>	if <name4> > <name1> : <blk> <name1> = <name4> </blk>	\ <name1> = <name4> > <name1> : <blk> <name1> = <name4> </blk>
<name1> ( <name4> * <name6> . <name3> , <name4> * <name6> . <name5> ) を返す	return <name1> ( <name4> * <name6> . <name3> , <name4> * <name6> . <name5> )	yield <name1> ( <name4> * <name6> . <name3> , <name4> * <name6> . <name5> )
<name1> が <val6> 以上かつ <name2> が <val6> 以上かつ <name3> が <val6> 以上のとき、	if <name1> >= <val6> and <name2> >= <val6> and <name3> >= <val6> :	gcd ( <name1> >= <val6> and <name2> >= <val6> and <name3> >= <val6> ) :
<name2> の <name1> の先頭と等しい要素の最初の位置を <name4> とする	<name4> = <name2> . index ( <name1> [ 0 ] )	<name2> <name4> = <name2> . index ( <name1> [ 0 ] )
<val2> から <name1> と <val3> の論理積を引いた値を <name5> とする	<name5> = <val2> - ( <name1> & <val3> )	<name5> = <val2> - ( <name1> & <val3> )
<name5> の <val3> 番目から、つまり末尾までの部分列を順に <name4> として、繰り返す	for <name4> in <name5> [ <val3> : ] :	while <name5> [ <val3> : ] :
<name4> の各要素を <name1> とし、 <val3> を間に入れて <name1> の各要素に整数を適用した列を連結した文字列を出力するの列	[ print ( <val3> . join ( map ( str , <name1> ) ) ) for <name1> in <name4> ]	[ print ( <val3> . join ( map ( str , <name1> ) ) ) for <name1> in <name4> ]
関数 <name4> を <name1> 、 <name2> 、 <name5> をパラメータとして定義する <name1> . <name6> ( <name2> ) が <name1> . <name6> ( <name5> ) と等しいかどうかを返す	def <name4> ( <name1> , <name2> , <name5> ) : return <name1> . <name6> ( <name2> ) == <name1> . <name6> ( <name5> )	<name4> ( <name1> , <name2> , <name5> ) : return <name1> . <name6> ( <name2> ) == <name1> . <name6> ( <name5> )
<name2> の <name1> 番目から <name6> 番目までの部分列を順に <name5> として、繰り返す	for <name5> in <name2> [ <name1> : <name6> ] :	while <name2> [ <name1> : <name6> ] :
<name4> の末尾を除いた部分列、 <name4> の先頭を除いた部分列の要素をそれぞれ組にした列を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in zip ( <name4> [ : - 1 ] , <name4> [ 1 : ] ) :	for <name1> , <name6> in zip ( <name4> [ : - 1 ] , <name4> [ 1 : ] ) :
<name5> と <name6> 、 <name3> の和集合	<name5> . union ( <name6> , <name3> )	<name1> . union ( <name6> , <name3> )
<name6> の <name4> から <name6> の <name3> を引いた値に <name1> を加えた値を <name6> の <name4> で割った余りを返す	return ( <name6> . <name4> - <name6> . <name3> + <name1> ) % <name6> . <name4>	x return ( <name6> . <name4> - <name6> . <name3> + <name1> ) % <name6> . <name4>
<name2> の <name1> から <val3> を引いた値番目を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name2> [ <name1> - <val3> ]	( <name2> [ <name1> ] = <name2> [ <name1> - <val3> ] )
<name3> の <name6> が <name6> と等しいとき、 <blk> 真を返す </blk>	if <name3> . <name6> == <name6> : <blk> return True </blk>	\ if <name3> . <name6> == <name6> : <blk> return True </blk>
<name5> の先頭の <name6> 番目が <name2> と等しいとき、	if <name5> [ 0 ] [ <name6> ] == <name2> :	while <name5> [ 0 ] [ <name6> ] == <name2> :
<name5> をパラメータとして <name5> の <name6> を返す関数を <name1> として <name2> をソートする	<name2> . sort ( <name1> = lambda <name5> : <name5> . <name6> )	<name2> . sort ( <name1> = lambda <name5> : <name5> . <name6> )
<name1> の長さから <name2> を引いた値を <name5> とする	<name5> = len ( <name1> ) - <name2>	<name2> = len ( <name1> ) - <name2>
<name2> の両端から空白改行を取り除いた文字列を <name2> とする	<name2> = <name2> . strip ( )	<name6> = <name2> . strip ( )
<name1> ( <name5> ( <name3> ( ) ) ) を出力する	print ( <name1> ( <name5> ( <name3> ( ) ) ) )	print ( <name1> ( <name5> ( <name3> ( ) ) ) )
( ( 、つまり未定値 ) からなる列の 0 から <name6> 未満までの数列の各要素を <name4> とし、 <name2> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ None ] * [ <name2> for <name4> in range ( <name6> ) ] ]	<name1> = [ [ None ] * [ <name2> for <name4> in range ( <name6> ) ] ]
<name1> を <val3> を初期値として <name5> で集約した列を返す	return reduce ( <name5> , <name1> , <val3> )	reduce ( <name5> , <name1> , <val3> )
<name6> の <name3> 、 <name6> の <name2> 、 <name6> の <name4> 、 <name6> の <name5> を <name6> の <name4> 、 <name6> の <name3> 、 <name6> の <name5> 、 <name6> の <name2> とする	<name6> . <name4> , <name6> . <name3> , <name6> . <name5> , <name6> . <name2> = <name6> . <name3> , <name6> . <name2> , <name6> . <name4> , <name6> . <name5>	<name1> . <name4> , <name6> . <name3> , <name6> . <name5> , <name6> . <name2> = <name6> . <name3> , <name6> . <name2> , <name6> . <name4> , <name6> . <name5>
( <val3> 、 <val2> ) からなる列を <name5> とする	<name5> = [ <val3> , <val2> ]	else = [ <val3> , <val2> ]
<name6> の <name1> の先頭番目を <val3> だけ増加させる	<name6> [ <name1> [ 0 ] ] += <val3>	<name4> [ <name1> [ 0 ] ] += <val3>
<name6> の文字列が <name1> の <val4> 番目と等しくまたは <name6> が <val5> 以上かつ <name1> の <val4> 番目が <val3> と等しいとき、	if str ( <name6> ) == <name1> [ <val4> ] or ( <name6> >= <val5> and <name1> [ <val4> ] == <val3> ) :	for <name6> in str ( <name6> ) == <name1> [ <val4> ] or <name6> >= <val5> and <name1> [ <val4> ] == <val3> :
0 から <name6> の長さ未満までの数列の逆順を順に <name4> として、繰り返す	for <name4> in range ( len ( <name6> ) ) [ : : - 1 ] :	in range ( len ( <name6> ) ) [ : : - 1 ] :
<name1> の <name6> 番目、 <name1> の <name5> 番目を <name1> の <name5> 番目、 <name1> の <name6> 番目とする	<name1> [ <name5> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name5> ]	[ <name1> [ <name5> ] , <name1> [ <name6> ] = <name1> [ <name6> ] , <name1> [ <name5> ]
<name3> の <val1> 番目から、つまり末尾までの部分列を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = <name3> [ <val1> : ]	<name2> , <name4> = <name3> [ <val1> : ]
<name3> の末尾の先頭を出力する	print ( <name3> [ - 1 ] [ 0 ] )	print ( <name3> [ - 1 ] [ 0 ] )
<name4> を <name2> の <val1> 番目にする	<name2> [ <val1> ] = <name4>	( <name2> [ <val1> ] = <name4> )
<name3> 、 <name4> の要素をそれぞれ組にした列に番号付した組の列を順に <name1> 、 <name2> 、 <name6> として、繰り返す	for <name1> , <name2> , <name6> in enumerate ( zip ( <name3> , <name4> ) ) :	. for <name1> , <name2> , <name6> in enumerate ( zip ( <name3> , <name4> ) ) :
<name5> の <name2> の <name4> 番目の <name3> から <val6> を引いた値乗に対する <name3> の剰余を <name5> の <name1> の <name4> 番目にする	<name5> . <name1> [ <name4> ] = pow ( <name5> . <name2> [ <name4> ] , <name3> - <val6> , <name3> )	<name1> [ <name4> ] = pow ( <name5> . <name2> [ <name4> ] , <name3> - <val6> , <name3> )
<name1> の末尾に ( <name2> に <name5> を加えた値から <name6> を引いた値、 <name4> に <name3> を加えた値から <name1> を引いた値 ) の組を追加する	<name1> . append ( ( <name2> + <name5> - <name6> , <name4> + <name3> - <name1> ) )	dict . append ( ( <name2> + <name5> - <name6> , <name4> + <name3> - <name1> ) )
( <val4> ) からなる列の <name3> の <name2> 回分の列を <name6> とする	<name6> = [ <val4> ] * <name3> . <name2>	<name6> = [ <val4> ] * <name3> . <name2>
<name6> の末尾に ( <name2> 、 <name4> 、 <name3> ) の組を追加する	<name6> . append ( ( <name2> , <name4> , <name3> ) )	<name4> . append ( ( <name2> , <name4> , <name3> ) )
<name2> から <val3> を引いた値を <name5> とする	<name5> = <name2> - <val3>	<name5> = <name2> - <val3>
入力された文字列を空白で分割した字句列を展開し、それぞれ <name1> 、 <name5> とする <name5> の整数値を <name5> とする	<name1> , <name5> = input ( ) . split ( ) <name5> = int ( <name5> )	<name6> , <name1> , <name5> = input ( ) . split ( ) <name5> = int ( <name5> )
<name2> の <name1> 番目から、つまり末尾までの部分列内の <val3> の出現回数が <name2> の <name1> 番目から、つまり末尾までの部分列の長さと等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name2> [ <name1> : ] . count ( <val3> ) == len ( <name2> [ <name1> : ] ) : <blk> continue </blk>	if <name2> [ <name1> : ] . count ( <val3> ) == len ( <name2> [ <name1> : ] ) : <blk> continue </blk>
<name4> の各要素を <name5> とし、 <name5> の整数値の列を <name4> とする	<name4> = [ int ( <name5> ) for <name5> in <name4> ]	<name6> = [ int ( <name5> ) for <name5> in <name4> ]
<name4> を <name6> から <name5> を引いた値だけ増加させる	<name4> += <name6> - <name5>	( <name4> += <name6> - <name5> )
<name6> が <name1> より大きいとき、	if <name6> > <name1> :	> if <name6> > <name1> :
( <name1> に <val2> を加えた値 ) からなる列の <val3> 回分の列を <name5> とする	<name5> = [ <name1> + <val2> ] * <val3>	<name5> = [ <name1> + <val2> ] * <val3>
<name3> ( <name5> , <name1> , <name6> , <name2> ) でないとき、	if not <name3> ( <name5> , <name1> , <name6> , <name2> ) :	isinstance ( <name3> ( <name5> , <name1> , <name6> , <name2> ) ) :
<name3> . <name2> ( <name1> , <name6> + <val5> ) を出力する	print ( <name3> . <name2> ( <name1> , <name6> + <val5> ) )	print ( <name3> . <name2> ( <name1> , <name6> + <val5> ) )
<name2> の <name4> 番目から、つまり末尾までの部分列が <name1> の、つまり先頭から <name3> 番目までの部分列と等しいとき、	if <name2> [ <name4> : ] == <name1> [ : <name3> ] :	if <name2> [ <name4> : ] == <name1> [ : <name3> ] :
<name3> の <val6> 番目から <val6> に <name1> を加えた値までの部分列を <name2> とする	<name2> = <name3> [ <val6> : <val6> + <name1> ]	<name2> = <name3> [ <val6> : <val6> + <name1> ]
<name4> の順列を順に <name3> として、繰り返す	for <name3> in permutations ( <name4> ) :	. for <name3> in permutations ( <name4> ) :
<name1> の末尾に ( <name3> の先頭の整数値、 <name3> の <val5> 番目の整数値 ) からなる列を追加する	<name1> . append ( [ int ( <name3> [ 0 ] ) , int ( <name3> [ <val5> ] ) ] )	<name1> . append ( [ int ( <name3> [ 0 ] ) , int ( <name3> [ <val5> ] ) ] )
<val2> を <name6> とする <name3> に <val5> を加えた値を <name4> とする	<name6> = <val2> <name4> = <name3> + <val5>	<name4> = <name6> = <val2> <name4> = <name3> + <val5>
<name3> の末尾に <name5> の <name4> 番目の <name2> 番目を追加する	<name3> . append ( <name5> [ <name4> ] [ <name2> ] )	<name3> . append ( <name5> [ <name4> ] [ <name2> ] )
<name2> ( <name4> ( <name6> ( <name3> , <name1> ( ) . <name5> ( ) ) ) ) を <name5> とする	<name5> = <name2> ( <name4> ( <name6> ( <name3> , <name1> ( ) . <name5> ( ) ) ) )	<name6> = <name2> ( <name4> ( <name6> ( <name3> , <name1> ( ) . <name5> ( ) ) ) )
<name4> ( <name2> -1 , <name3> , <name1> , <name5> , <name6> )	<name4> ( <name2> - 1 , <name3> , <name1> , <name5> , <name6> )	<name5> <name4> ( <name2> - 1 , <name3> , <name1> , <name5> , <name6> )
<val2> 、 <val2> を <name6> 、 <name5> とする	<name6> , <name5> = <val2> , <val2>	( <name6> , <name5> = <val2> , <val2> )
<name1> の <name2> 番目を <name1> の <name2> から <val4> を引いた値番目だけ増加させる	<name1> [ <name2> ] += <name1> [ <name2> - <val4> ]	<name2> [ <name2> ] += <name1> [ <name2> - <val4> ]
<name3> を <name5> に <name6> の <name1> 番目の <name4> 番目を掛けた値を <name2> で割った余りだけ増加させる	<name3> += <name5> * <name6> [ <name1> ] [ <name4> ] % <name2>	<name3> += <name5> * <name6> [ <name1> ] [ <name4> ] % <name2>
<name6> を <val4> の <val3> 乗で割った余りを出力する	print ( <name6> % <val4> ** <val3> )	print ( <name6> % ( <val4> ** <val3> ) )
<name6> の長さが <val2> 以下のとき、	if len ( <name6> ) <= <val2> :	if ( len ( <name6> ) <= <val2> ) :
<name5> の長さが <val1> より大きい間、次を繰り返す	while len ( <name5> ) > <val1> :	yield ( len ( <name5> ) > <val1> ) :
( <val5> を間に入れて <name6> を連結した文字列、 <val5> を間に入れて <name4> を連結した文字列 ) の組を返す	return ( <val5> . join ( <name6> ) , <val5> . join ( <name4> ) )	return ( <val5> . join ( <name6> ) , <val5> . join ( <name4> ) )
<name4> ( <name5> ( <name3> ) ) . <name6> ( <name4> ( <val2> ) , <name1> = <name3> ) を <name3> とする	<name3> = <name4> ( <name5> ( <name3> ) ) . <name6> ( <name4> ( <val2> ) , <name1> = <name3> )	<name3> = <name4> ( <name5> ( <name3> ) ) . <name6> ( <name4> ( <val2> ) , <name1> = <name3> )
<name1> の末尾に <name5> の <name2> の <name3> 番目を追加する	<name1> . append ( <name5> . <name2> [ <name3> ] )	<name1> . append ( <name5> . <name2> [ <name3> ] )
<val2> の順序数、 <val5> の順序数に <val6> を加えた値、 <val1> の順序数、 <val3> の順序数に <val6> を加えた値を <name6> 、 <name1> 、 <name3> 、 <name4> とする	<name6> , <name1> , <name3> , <name4> = ord ( <val2> ) , ord ( <val5> ) + <val6> , ord ( <val1> ) , ord ( <val3> ) + <val6>	<name2> , <name6> , <name1> , <name3> , <name4> = ord ( <val2> ) , ord ( <val5> ) + <val6> , ord ( <val1> ) , ord ( <val3> ) + <val6>
<name5> を <name4> で割った商を <name1> とする	<name1> = <name5> // <name4>	( <name1> = <name5> // <name4> )
<name2> の <name5> 番目が <name6> 以下のとき、	if <name2> [ <name5> ] <= <name6> :	or <name2> [ <name5> ] <= <name6> :
<name2> ( <name1> , <name3> ) を <name1> の <name4> に <name3> の <name4> を掛けた値の <val5> 乗で割った値を <name6> とする	<name6> = <name2> ( <name1> , <name3> ) / ( ( <name1> . <name4> * <name3> . <name4> ) ** <val5> )	<name2> = <name2> ( <name1> , <name3> ) / ( ( <name1> . <name4> * <name4> . <name3> ) ** <val5> )
<name3> を <name5> の <val4> 番目にする <name6> を <name5> の <val1> 番目にする	<name5> [ <val4> ] = <name3> <name5> [ <val1> ] = <name6>	<name4> [ <val4> ] = <name3> <name5> [ <val1> ] = <name6>
<name1> ( <name6> , <name3> ) を <name4> の <name2> にする	<name4> . <name2> = <name1> ( <name6> , <name3> )	<name3> . <name2> = <name1> ( <name6> , <name3> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name5> 、 <name1> 、 <name4> とする	<name5> , <name1> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	[ <name5> , <name1> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name3> に <name2> から <name4> を引いた値の <val6> 乗を加えた値を <name3> とする	<name3> = <name3> + ( <name2> - <name4> ) ** <val6>	<name3> = <name3> + ( <name2> - <name4> ) ** <val6>
<name1> を <val6> だけ右シフトする <name2> を <val6> だけ右シフトする	<name1> >> = <val6> <name2> >> = <val6>	not <name1> >> = <val6> <name2> >> = <val6>
<val5> に <name4> を掛けた値を <name6> とする	<name6> = <val5> * <name4>	( <name6> = <val5> * <name4> )
<val6> が <name3> に含まれる間、次を繰り返す	while <val6> in <name3> :	del <val6> in <name3> :
<name6> の <name2> 番目の末尾に ( <name5> 、 <name4> ) の組を追加する	<name6> [ <name2> ] . append ( ( <name5> , <name4> ) )	<name2> [ <name2> ] . append ( ( <name5> , <name4> ) )
<name1> が <name5> より大きいとき、	if <name1> > <name5> :	for <name1> > <name5> :
<name1> が <name6> の <name4> 番目より小さいとき、	if <name1> < <name6> [ <name4> ] :	raise <name1> < <name6> [ <name4> ] :
<name3> 、 <name6> の最大値を <name3> とする	<name3> = max ( <name3> , <name6> )	<name3> = max ( <name3> , <name6> )
<name2> が <name6> より大きいとき、	if <name2> > <name6> :	continue > <name6> :
<name2> に <name5> を掛けた値を <name1> で割った余りを <name2> とするを <name4> の <name3> に <val6> を加えた値番目にする	<name4> [ <name3> + <val6> ] = <name2> = <name2> * <name5> % <name1>	<name2> [ <name3> + <val6> ] = <name2> = <name2> * <name5> % <name1>
% d を <name2> で割った余りを出力する	print ( '%d' % <name2> )	print ( '%d %d' % <name2> )
<name5> の <name3> 番目から <name4> に <val2> を加えた値までの部分列を反転した列を <name6> の <name3> 番目から <name4> に <val2> を加えた値までの部分列にする	<name6> [ <name3> : <name4> + <val2> ] = reversed ( <name5> [ <name3> : <name4> + <val2> ] )	<name4> [ <name3> : <name4> + <val2> ] = reversed ( <name5> [ <name3> : <name4> + <val2> ] )
<name6> の <name5> に <val4> を加えた値番目を <name2> だけ減少させる	<name6> [ <name5> + <val4> ] -= <name2>	<name1> [ <name5> + <val4> ] -= <name2>
<name6> の <name5> に <name2> を加えた値番目が <name3> の <name2> 番目と等しくないとき、	if <name6> [ <name5> + <name2> ] != <name3> [ <name2> ] :	!= <name6> [ <name5> + <name2> ] != <name3> [ <name2> ] :
( <name3> の <name6> 番目、 <name3> の <name2> 番目 ) からなる列をソートした列の組を <name5> とする	<name5> = tuple ( sorted ( [ <name3> [ <name6> ] , <name3> [ <name2> ] ] ) )	<name5> = tuple ( sorted ( [ <name3> [ <name6> ] , <name3> [ <name2> ] ] ) )
<name4> から <name3> を引いた値を <name4> とする	<name4> = <name4> - <name3>	( <name4> = <name4> - <name3> )
<val4> の <name6> 乗を <name2> とする <val4> の <name6> から <val5> を引いた値乗を <name1> とする	<name2> = <val4> ** <name6> <name1> = <val4> ** ( <name6> - <val5> )	<name6> = <val4> ** <name6> <name1> = <val4> ** ( <name6> - <val5> )
<name1> . <name3> ( <name5> ) から <name1> . <name3> ( <name2> -1 ) を引いた値を返す	return <name1> . <name3> ( <name5> ) - <name1> . <name3> ( <name2> - 1 )	x return <name1> . <name3> ( <name5> ) - <name1> . <name3> ( <name2> - 1 )
<name5> を <name6> の <name2> から <val3> を引いた値番目の <name1> から <val3> を引いた値番目とするを <name6> の <name1> から <val3> を引いた値番目の <name2> から <val3> を引いた値番目にする	<name6> [ <name1> - <val3> ] [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] [ <name1> - <val3> ] = <name5>	<name6> [ <name1> - <val3> ] [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] [ <name1> - <val3> ] = <name5>
<name2> が <name3> より小さいとき、	if <name2> < <name3> :	isclose if <name2> < <name3> :
<name4> の各要素を <name6> とし、 <name6> 、 <val5> の最小値の列を <name4> とする	<name4> = [ min ( <name6> , <val5> ) for <name6> in <name4> ]	<name4> = [ min ( <name6> , <val5> ) for <name6> in <name4> ]
( ( <val6> の浮動小数点数 ) からなる列の 0 から <val5> に <val4> を加えた値未満までの数列の各要素を <name2> とし、 <val5> に <val4> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ float ( <val6> ) ] * [ ( <val5> + <val4> ) for <name2> in range ( <val5> + <val4> ) ] ]	<name1> = [ [ float ( <val6> ) ] * [ ( <val5> + <val4> ) for <name2> in range ( <val5> + <val4> ) ] ]
<name5> に <name6> ( <name3> = <name4> ) を加えた値を <name4> とする	<name4> = <name5> + <name6> ( <name3> = <name4> )	<name4> = <name5> + <name6> ( <name3> = <name4> )
<val1> から <name4> の先頭の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , len ( <name4> [ 0 ] ) ) :	for <name3> in range ( <val1> , len ( <name4> [ 0 ] ) ) :
showa 、 <name3> の <val2> 番目から <val4> を引いた値に <val5> を加えた値、 <name3> の <val5> 番目、 <name3> の <val1> 番目を出力する	print ( 'showa' , <name3> [ <val2> ] - <val4> + <val5> , <name3> [ <val5> ] , <name3> [ <val1> ] )	print ( 'showa' , <name3> [ <val2> ] - <val4> + <val5> , <name3> [ <val5> ] , <name3> [ <val1> ] )
<name1> の <name5> 番目の <name6> を順に <name4> として、繰り返す	for <name4> in <name1> [ <name5> ] . <name6> :	: for <name4> in <name1> [ <name5> ] . <name6> :
<name5> . <name2> . <name6> ( ) . <name4> ( ) の各要素に整数を適用した列の組を <name3> とする	<name3> = tuple ( map ( int , <name5> . <name2> . <name6> ( ) . <name4> ( ) ) )	else = tuple ( map ( int , <name5> . <name2> . <name6> ( ) . <name4> ( ) ) )
<name1> ( <name4> ( <name3> [ <name5> ] ) ) を <name2> とする	<name2> = <name1> ( <name4> ( <name3> [ <name5> ] ) )	dict = <name1> ( <name4> ( <name3> [ <name5> ] ) )
<name6> に <val5> を加えた値を <name1> とする	<name1> = <name6> + <val5>	<name1> = <name6> + <val5>
<val5> を <name6> の <name3> 番目にする	<name6> [ <name3> ] = <val5>	( <name6> [ <name3> ] = <val5> )
<val3> 、 <val4> 、 <val6> を <name2> 、 <name1> 、 <name5> とする	<name2> , <name1> , <name5> = <val3> , <val4> , <val6>	<name2> , <name1> , <name5> = <val3> , <val4> , <val6>
<name6> の <val1> 番目が <val4> と等しくない間、次を繰り返す	while <name6> [ <val1> ] != <val4> :	del <name6> [ <val1> ] != <val4> :
<name4> - <name5> から <name2> を引いた値を <name3> で割った商に <val1> を加えた値、 <val6> の最大値を出力する	print ( max ( ( <name4> - <name5> - <name2> ) // <name3> + <val1> , <val6> ) )	range ( max ( ( <name4> - <name5> - <name2> ) // <name3> + <val1> , <val6> ) )
<name3> ( <name6> , <name5> ) を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = <name3> ( <name6> , <name5> )	<name2> , <name1> = <name3> ( <name6> , <name5> )
<name4> が <name6> 以下のとき、 <blk> <name4> を出力する </blk>	if <name4> <= <name6> : <blk> print ( <name4> ) </blk>	for <name4> in <name4> <= <name6> : <blk> print ( <name4> ) </blk>
<name4> の <val5> に <name2> を掛けた値に <val3> を加えた値番目を <name1> とする <name4> の <val5> に <name2> を掛けた値に <val5> を加えた値番目を <name6> とする	<name1> = <name4> [ <val5> * <name2> + <val3> ] <name6> = <name4> [ <val5> * <name2> + <val5> ]	<name1> = <name4> [ <val5> * <name2> + <val3> ] <name6> = <name4> [ <val5> * <name2> + <val5> ]
<name6> を <name3> の先頭の <name3> の <val2> 番目乗から <name3> の先頭の <name3> の <val2> 番目から <val2> を引いた値乗を引いた値倍にする	<name6> *= ( <name3> [ 0 ] ** <name3> [ <val2> ] - <name3> [ 0 ] ** ( <name3> [ <val2> ] - <val2> ) )	<name5> *= <name3> [ 0 ] ** ( <name3> [ <val2> ] - <name3> [ 0 ] ** ( <name3> [ <val2> ] - <val2> ) )
入力された文字列を空白で分割した字句列を展開し、それぞれ <name3> 、 <name1> 、 <name2> 、 <name4> 、 <name6> とする	<name3> , <name1> , <name2> , <name4> , <name6> = input ( ) . split ( )	<name1> , <name2> , <name4> , <name6> = input ( ) . split ( )
<name2> から <val1> を引いた値から <name2> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> - <val1> , <name2> + <val6> ) :	for <name5> in range ( <name2> - <val1> , <name2> + <val6> ) :
<name2> を展開し、それぞれ <name5> 、 <name4> 、 <name3> とする	<name5> , <name4> , <name3> = <name2>	<name4> , <name3> = <name2>
<name6> ( <name2> . <name4> + <name5> . <name4> , <name2> . <name1> + <name5> . <name1> ) を返す	return <name6> ( <name2> . <name4> + <name5> . <name4> , <name2> . <name1> + <name5> . <name1> )	x return <name6> ( <name2> . <name4> + <name5> . <name4> , <name2> . <name1> + <name5> . <name1> )
<name6> に <val4> を加えた値から <name1> に <val4> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> + <val4> , <name1> + <val4> ) :	for <name5> in range ( <name6> + <val4> , <name1> + <val4> ) :
<name4> を出力する	print ( <name4> )	<name4> print ( <name4> )
<name3> ( <name2> , ( <name4> , <val6> , <name1> , <name5> ) )	<name3> ( <name2> , ( <name4> , <val6> , <name1> , <name5> ) )	<name5> ( <name2> , ( <name4> , <val6> , <name1> , <name5> ) )
<name3> の <val2> 番目が <name3> の <val6> 番目と等しいかどうかが <name3> の <val1> 番目と等しいとき、	if <name3> [ <val2> ] == <name3> [ <val6> ] == <name3> [ <val1> ] :	while <name3> [ <val2> ] == <name3> [ <val6> ] == <name3> [ <val1> ] :
( <val4> 、 <val5> 、 <val2> ) からなる列を <name6> とする	<name6> = [ <val4> , <val5> , <val2> ]	<name6> = [ <val4> , <val5> , <val2> ]
<name1> の <name3> の <name5> 番目が <val6> より小さいとき、	if <name1> . <name3> [ <name5> ] < <val6> :	if <name1> . <name3> [ <name5> ] < <val6> :
<name6> の <name4> が <name2> と等しいとき、	if <name6> . <name4> == <name2> :	if <name6> . <name4> == <name2> :
<name6> モジュールを用いる	from <name6> import zip_longest	sqrt ( <name6> ) import sqrt
( ( <val1> 、 <val5> ) の組、 ( <val5> 、 <val5> ) の組、 ( <val5> 、 <val1> ) の組、 ( <val1> 、 -1 ) の組、 ( -1 、 <val1> ) の組、 ( -1 、 <val5> ) の組 ) の組を <name2> とする	<name2> = ( ( <val1> , <val5> ) , ( <val5> , <val5> ) , ( <val5> , <val1> ) , ( <val1> , - <val5> ) , ( - <val5> , <val1> ) , ( - <val5> , <val5> ) )	<name6> = ( ( <val1> , <val5> ) , ( <val5> , <val5> ) , ( <val5> , <val1> ) , ( <val1> , - <val1> ) , ( - <val1> , <val1> ) , ( - <val1> , <val5> ) , ( <val5> ) ) )
0 から <val1> に <name6> を掛けた値未満までの数列の各要素を <name2> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name2> in range ( <val1> * <name6> ) ]	<name3> = [ [ ] for <name2> in range ( <val1> * <name6> ) ]
<name6> の <name1> 番目の先頭が <val5> と等しくかつ <name4> の <name1> 番目が <val2> と等しいとき、	if <name6> [ <name1> ] [ <val5> ] == <val5> and <name4> [ <name1> ] == <val2> :	> if <name6> [ <name1> ] [ 0 ] == <val5> and <name4> [ <name1> ] == <val2> :
<name2> が <name4> と等しいかどうかが <name3> と等しいかどうかが -1 と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name4> == <name3> == - 1 : <blk> break </blk>	\ if <name2> == <name4> == <name3> == - 1 : <blk> break </blk>
<name4> から <val2> を引いた値、 <name5> . <name1> ( <name4> -1 ) に <name4> を加えた値を追加して <name5> を更新する	<name5> . update ( <name4> - <val2> , <name5> . <name1> ( <name4> - <val2> ) + <name4> )	<name5> . update ( <name4> - <val2> , <name5> . <name1> ( <name4> - <val2> ) + <name4> )
( ( <name3> 、 <val4> ) の組、 ( <name2> 、 <val1> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <name3> , <val4> ) , ( <name2> , <val1> ) ]	<name5> = [ ( <name3> , <val4> ) , ( <name2> , <val1> ) ]
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = input ( ) . strip ( ) . split ( )	<name2> , <name5> , <name1> = input ( ) . strip ( ) . split ( )
<name1> の末尾に <name5> の <name6> を追加する	<name1> . append ( <name5> . <name6> )	<name4> . append ( <name5> . <name6> )
<name6> を英小文字に変換した文字列の順序数を <name2> とする	<name2> = ord ( <name6> . lower ( ) )	<name2> = ord ( <name6> . lower ( ) )
<name3> の <name5> 番目を <name3> の <name5> から <val2> を引いた値番目だけ増加させる	<name3> [ <name5> ] += <name3> [ <name5> - <val2> ]	<name3> [ <name5> ] += <name3> [ <name5> - <val2> ]
sample - input . txt 、 <val4> を開いたファイルストリームを <name6> の <name5> にする	<name6> . <name5> = open ( 'sample-input.txt' , <val4> )	dict . <name5> = open ( 'sample-input.txt' , <val4> )
<name3> を <name2> に <name6> を掛けた値に <name5> を加えた値だけ増加させる	<name3> += <name2> * <name6> + <name5>	<name3> += <name2> * <name6> + <name5>
<name1> の <name3> の <val6> 番目番目のとき、	if <name1> [ <name3> [ <val6> ] ] :	while <name1> [ <name3> [ <val6> ] ] :
<name6> の先頭が <val2> と等しいとき、	if <name6> [ <val2> ] == <val2> :	> <name6> [ 0 ] == <val2> :
<val6> を <name3> とする <val5> を <name4> とする	<name3> = <val6> <name4> = <val5>	<name3> = <val6> <name4> = <val5>
<name3> の <name4> を順に <name1> として、繰り返す	for <name1> in <name3> . <name4> :	: for <name1> in <name3> . <name4> :
0 から <name3> 、 <name6> から <name5> を引いた値の最小値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( min ( <name3> , <name6> - <name5> ) ) :	in range ( min ( <name3> , <name6> - <name5> ) ) :
<name1> ( <name5> ) の各要素を <name4> とし、 <name4> を出力するの列	[ print ( <name4> ) for <name4> in <name1> ( <name5> ) ]	[ print ( <name4> ) for <name4> in <name1> ( <name5> ) ]
<name6> が <name5> の長さより小さくかつ <name5> の <name6> 番目が <name5> の <name2> 番目より大きいとき、 <blk> <name6> を <name2> とする </blk>	if <name6> < len ( <name5> ) and <name5> [ <name6> ] > <name5> [ <name2> ] : <blk> <name2> = <name6> </blk>	for <name2> in <name6> < len ( <name5> ) and <name5> [ <name6> ] > <name5> [ <name2> ] : <blk> <name2> = <name6> </blk>
<name3> を <name3> の絶対値で割った商を返す	return <name3> // abs ( <name3> )	return <name3> // abs ( <name3> )
<name6> の <name3> に <name1> の <name3> を掛けた値に <name6> の <name5> に <name1> の <name5> を掛けた値を加えた値を返す	return <name6> . <name3> * <name1> . <name3> + <name6> . <name5> * <name1> . <name5>	x return <name6> . <name3> * <name1> . <name3> + <name6> . <name5> * <name1> . <name5>
入力された文字列を空白で分割した字句列の各要素に <name2> をパラメータとして <name2> の整数値を返す関数を適用した列のリストを展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = list ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )	<name5> , <name3> = list ( map ( lambda <name2> : int ( <name2> ) , input ( ) . split ( ) ) )
<name4> の末尾に ( <name3> 、 <name6> に <name2> を加えた値 ) の組を追加する	<name4> . append ( ( <name3> , <name6> + <name2> ) )	<name4> . append ( ( <name3> , <name6> + <name2> ) )
<name3> を ( <name1> ( <name5> [ <val4> ] , <name2> ) ) からなる列だけ増加させる	<name3> += [ <name1> ( <name5> [ <val4> ] , <name2> ) ]	<name3> += [ [ <name1> ( <name5> [ <val4> ] , <name2> ) ] ]
<name4> の各要素に tt ** <name3> を返す関数を適用した列の総和の <val5> を <name3> で割った値乗を出力する	print ( sum ( map ( lambda t : t ** <name3> , <name4> ) ) ** ( <val5> / <name3> ) )	( sum ( map ( lambda <name3> : <name3> ** <name3> , <name4> ) ) ** ( <val5> / <name3> ) )
( <name1> の <name3> ) からなる列の <val4> に <name6> を掛けた値回分の列を <name1> の <name2> にする	<name1> . <name2> = [ <name1> . <name3> ] * ( <val4> * <name6> )	<name6> . <name1> . <name2> = [ <name1> . <name3> ] * ( <val4> * <name6> )
<name2> モジュールを用いる	from <name2> import fabs	from <name2> , deque
<name6> の <name1> 番目の <name3> 番目が <name4> に含まれないとき、	if <name6> [ <name1> ] [ <name3> ] not in <name4> :	for <name6> [ <name1> ] [ <name3> ] not in <name4> :
<name6> を <name5> の <name1> に <val4> を加えた値番目の <name3> 番目にする	<name5> [ <name1> + <val4> ] [ <name3> ] = <name6>	<name4> [ <name1> + <val4> ] [ <name3> ] = <name6>
<name3> を <name6> の <name4> に <val5> を加えた値番目にする	<name6> [ <name4> + <val5> ] = <name3>	<name1> [ <name4> + <val5> ] = <name3>
<name4> の <name3> 番目を <name4> の <name3> に <name1> を加えた値番目にする	<name4> [ <name3> + <name1> ] = <name4> [ <name3> ]	<name2> [ <name3> + <name1> ] = <name4> [ <name3> ]
( 、つまり無限大 ) からなる列の <name1> 回分の列を <name6> とする	<name6> = [ inf ] * <name1>	<name6> = [ inf ] * <name1>
<name5> をパラメータとして <name5> の先頭を返す関数を <name1> として <name4> をソートする	<name4> . sort ( <name1> = lambda <name5> : <name5> [ 0 ] )	<name5> . sort ( <name1> = lambda <name5> : <name5> [ 0 ] )
<name1> の <val3> 番目が <name6> と等しくないとき、	if <name1> [ <val3> ] is <name6> :	if <name1> [ <val3> ] != <name6> :
( <name5> に <name6> を加えた値、 <name3> に <name2> を加えた値 ) の組が <name4> に含まれないとき、	if ( <name5> + <name6> , <name3> + <name2> ) not in <name4> :	list ( ( <name5> + <name6> , <name3> + <name2> ) not in <name4> :
<name3> から <name1> を引いた値から <name2> を引いた値を <name6> とする	<name6> = <name3> - <name1> - <name2>	( <name6> = <name3> - <name1> - <name2> )
<name6> に <name3> . <name1> ( <name6> . <name2> , <name4> - <name5> ) を加えた値	<name6> + <name3> . <name1> ( <name6> . <name2> , <name4> - <name5> )	<name6> + <name3> . <name1> ( <name6> . <name2> , <name4> - <name5> )
( <val3> から <val6> 未満までの数列の各要素を <name4> とし、 <name4> の列 ) の集合から <name5> の集合を引いた値を <name2> とする	<name2> = { [ <name4> for <name4> in range ( <val3> , <val6> ) ] } - set ( <name5> )	<name2> = { [ <name4> for <name4> in range ( <val3> , <val6> ) ] } - set ( <name5> )
<name5> の <name3> の組番目を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name5> [ tuple ( <name3> ) ]	( <name4> [ <name1> ] = <name5> [ tuple ( <name3> ) ] )
<name1> から <val6> を引いた値を <val6> だけ右シフトした値を <name5> とする	<name5> = ( <name1> - <val6> ) >> <val6>	<name5> = ( <name1> - <val6> ) >> <val6>
<name2> の <name4> を <name5> の <name6> の <name3> にする	<name5> . <name6> . <name3> = <name2> . <name4>	<name2> . <name6> . <name3> = <name2> . <name4>
真を <name5> の <name1> 番目にする	<name5> [ <name1> ] = True	( <name5> [ <name1> ] = True )
 を間に入れて <name3> の <name5> 番目の各要素に整数を適用した列を連結した文字列を出力する	print ( ' ' . join ( map ( str , <name3> [ <name5> ] ) ) )	<val3> print ( '' . join ( map ( str , <name3> [ <name5> ] ) ) )
<name6> から <name5> を引いた値を <name1> とする <name3> から <name4> を引いた値を <name2> とする	<name1> = <name6> - <name5> <name2> = <name3> - <name4>	<name2> = <name6> - <name5> <name2> = <name3> - <name4>
<name6> が <name1> に <name3> を掛けた値に <val4> を加えた値と等しいとき、	if <name6> == <name1> * <name3> + <val4> :	if <name6> == <name1> * <name3> + <val4> :
0 から <name2> 未満までの数列の各要素を <name4> とし、、つまり空列の列を <name1> の <name3> にする	<name1> . <name3> = [ [ ] for <name4> in range ( <name2> ) ]	<name6> . <name3> = [ [ ] for <name4> in range ( <name2> ) ]
( <name2> ) からなる列の <name1> の <name6> 回分の列を <name5> とする	<name5> = [ <name2> ] * <name1> . <name6>	<name5> = [ <name2> ] * <name1> . <name6>
<name6> ( <name3> ) を <name4> の <name1> にする	<name4> . <name1> = <name6> ( <name3> )	<name4> . <name1> = <name6> ( <name3> )
<val4> 年 <name3> 月 <name1> 日の日時を <name5> とする	<name5> = datetime . datetime ( <val4> , <name3> , <name1> )	<name5> = datetime . datetime ( <val4> , <name3> , <name1> )
<name2> の -1 番目を <name3> だけ増加させる	<name2> [ - 1 ] += <name3>	<name1> [ - 1 ] += <name3>
<name3> の <name6> 番目を <name3> の <name6> から <val2> を引いた値番目にする	<name3> [ <name6> - <val2> ] = <name3> [ <name6> ]	else [ <name6> - <val2> ] = <name3> [ <name6> ]
<name3> ( <name5> -1 , <name2> - <name1> , <name6> , <name4> ) に [ MASK ] を加えた値	+ <name3> ( <name5> - 1 , <name2> - <name1> , <name6> , <name4> )	sqrt ( <name3> ( <name5> - 1 , <name2> - <name1> , <name6> , <name4> ) )
( <name1> の <val2> と等しい要素の最初の位置、 <name3> ) の組を <name5> とする	<name5> = ( <name1> . index ( <val2> ) , <name3> )	<name5> = ( <name1> . index ( <val2> ) , <name3> )
<name6> の <val3> 番目を <name2> の <val1> 番目とするを <name5> とする	<name5> = <name2> [ <val1> ] = <name6> [ <val3> ]	else = <name2> [ <val1> ] = <name6> [ <val3> ]
<val4> を <name1> として ( <val2> 、 <val5> 、 <val6> ) からなる列と [ MASK ] の直積を順に <name3> として、繰り返す	for <name3> in itertools . product ( [ <val2> , <val5> , <val6> ] , <name1> = <val4> ) :	. for <name3> in product ( [ <val2> , <val5> , <val6> ] , <name1> = <val4> ) :
<name5> の末尾に ( <name4> 、 <name6> ) からなる列を追加する	<name5> . append ( [ <name4> , <name6> ] )	<name5> . append ( [ <name4> , <name6> ] )
<name6> の <name3> 番目を <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name6> [ <name3> ]	not <name1> [ <name2> ] = <name6> [ <name3> ]
<name1> を <name2> の <name6> にする	<name2> . <name6> = <name1>	<name4> . <name2> . <name6> = <name1>
<name3> ( <name5> , <name4> )	<name3> ( <name5> , <name4> )	<name4> ( <name5> , <name4> )
<val3> を <name1> の <name2> から <val3> を引いた値番目の <name6> 番目とするを <name1> の先頭の <name6> 番目にする	<name1> [ 0 ] [ <name6> ] = <name1> [ <name2> - <val3> ] [ <name6> ] = <val3>	else [ <name1> [ 0 ] [ <name6> ] = <name1> [ <name2> - <val3> ] [ <name6> ] = <val3>
<name6> の <name2> を <val5> だけ増加させる	<name6> . <name2> += <val5>	pow ( <name6> . <name2> , <val5> )
<name5> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列の辞書カウンタを <name1> とする	<name1> = Counter ( map ( int , <name5> . readline ( ) . split ( ) ) )	<name1> = Counter ( map ( int , <name5> . readline ( ) . split ( ) ) )
<name1> に <val3> に <name5> を加えた値を掛けた値を <val3> で割った商に <name4> に <val3> に <name5> を加えた値を掛けた値を <val3> で割った商を加えた値を <name2> とする	<name2> = ( <name1> * ( <val3> + <name5> ) // <val3> ) + ( <name4> * ( <val3> + <name5> ) // <val3> )	( <name2> = <name1> * ( <val3> + <name5> ) // <val3> ) + ( <name4> * ( <val3> + <name5> ) // <val3> )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を <name3> とする	<name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name3> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name2> の <name5> 番目を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in <name2> [ <name5> ] :	for <name1> , <name4> in <name2> [ <name5> ] :
<name1> を 0 から <name4> 未満までの数列の各要素を <name5> とし、 <name3> に <name5> を加えた値の列だけ増加させる	<name1> += [ <name3> + <name5> for <name5> in range ( <name4> ) ]	<name1> += [ ( <name3> + <name5> ) for <name5> in range ( <name4> ) ]
<name1> の <name6> 番目を <name1> の <name6> に <val5> を加えた値番目にする	<name1> [ <name6> + <val5> ] = <name1> [ <name6> ]	<name4> [ <name1> [ <name6> + <val5> ] ] = <name1> [ <name6> ]
<name3> . <name1> ( <name4> , <name5> ) が <val2> と等しいかどうかを返す	return <name3> . <name1> ( <name4> , <name5> ) == <val2>	x return <name3> . <name1> ( <name4> , <name5> ) == <val2>
<name6> を順に <name3> 、 <name5> 、 <name1> として、繰り返す	for <name3> , <name5> , <name1> in <name6> :	. for <name3> , <name5> , <name1> in <name6> :
( <name2> 、 <name1> ) の組が <name4> に含まれるとき、	if ( <name2> , <name1> ) in <name4> :	isinstance ( ( <name2> , <name1> ) in <name4> :
入力された文字列を空白で分割した字句列をセパレータとする	sep = input ( ) . split ( )	print ( input ( ) . split ( ) )
<name5> ( <name4> , ( <name2> + <name1> , <name3> ) )	<name5> ( <name4> , ( <name2> + <name1> , <name3> ) )	<name5> ( <name4> , ( <name2> + <name1> , <name3> ) )
0 から <val3> 未満までの数列の各要素を <name5> とし、 <val4> から <val3> 未満までの数列の列の各要素を <name6> とし、 <name2> ( <name6> ) に <name2> ( <name5> ) を加えた値に <name5> の文字列を加えた値に <name6> の文字列を加えた値の整数値の列を <name1> とする	<name1> = [ int ( <name2> ( <name6> ) + <name2> ( <name5> ) + <name2> ( <name5> ) + <name2> ( <name6> ) ) for <name6> in [ range ( <val4> , <val3> ) for <name5> in range ( <val3> ) ] ]	<name6> = [ [ int ( <name2> ( <name6> ) + <name2> ( <name5> ) + <name5> ) + str ( <name6> ) ) for <name6> in [ range ( <val3> ) for <name5> in range ( <val3> ) ] ]
<name1> が <name5> の <name4> の <name1> 番目と等しくない間、次を繰り返す	while <name1> != <name5> . <name4> [ <name1> ] :	del <name1> != <name5> . <name4> [ <name1> ] :
\ <name3> ( <val1> % <name5> ( [ <name5> ( <name4> ) fordpiindp ] ) ) \	\ <name3> ( <val1> % <name5> ( [ <name5> ( <name4> ) for <name4> in dp ] ) ) \	for <name3> in <name3> ( <val1> % <name5> ( [ <name5> ( <name4> ( ) ) ] } ) \
<name6> を <val2> で割った余りが <val5> と等しいとき <val2> 、そうでなければ <val1> を返す	return <val2> if <name6> % <val2> == <val5> else <val1>	x return <val2> if <name6> % <val2> == <val5> else <val1>
<name6> の <name3> 番目の <name2> 番目が <name5> と等しくなくかつ <name6> の <name2> 番目の <name1> 番目が <name5> と等しくないとき、	if <name6> [ <name3> ] [ <name2> ] != <name5> and <name6> [ <name2> ] [ <name1> ] != <name5> :	for <name6> in <name6> [ <name3> ] [ <name2> ] != <name5> and <name6> [ <name2> ] [ <name1> ] != <name5> :
<val4> の <name2> 乗に <val5> の <name1> 乗を掛けた値に <val3> の <name6> 乗を掛けた値を <name6> とする	<name6> = <val4> ** <name2> * <val5> ** <name1> * <val3> ** <name6>	( <name6> = <val4> ** <name2> * <val5> ** <name1> ) * ( <val3> ** <name6> )
<name5> の <name3> 番目が <name4> と等しいとき、	if <name5> [ <name3> ] == <name4> :	list if <name5> [ <name3> ] == <name4> :
<name1> が <name4> の <val3> 乗より小さいとき、	if <name1> < <name4> ** <val3> :	while <name1> < <name4> ** <val3> :
<val3> <name2> <val1> を <name6> とする	<name6> = <val3> <name2> <val1>	( <name6> = <val3> <name2> <val1> )
<name1> の <name2> に <name6> を加えた値番目を <name6> の <val3> 乗だけ減少させる	<name1> [ <name2> + <name6> ] -= <name6> ** <val3>	<name1> [ <name2> + <name6> ] -= <name6> ** <val3>
入力された文字列を <val2> で分割した字句列を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = input ( ) . split ( <val2> )	<name6> = input ( ) . split ( <val2> )
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name5> 、 <name6> とする	<name4> , <name5> , <name6> = map ( int , <name1> ( ) . split ( ) )	<name5> , <name6> = map ( int , <name1> ( ) . split ( ) )
<name1> ( <name6> . <name2> [ <val3> : ] )	<name1> ( <name6> . <name2> [ <val3> : ] )	<name1> ( <name6> . <name2> [ <val3> : ] )
<name4> の -1 を取り出した値を <name5> とする	<name5> = <name4> . pop ( - 1 )	<name5> = <name4> . pop ( - 1 )
( 、つまり未定値 ) からなる列の <name2> の長さ回分の列を <name4> とする	<name4> = [ None ] * len ( <name2> )	<name4> = [ None ] * len ( <name2> )
<name3> の <name6> 番目の <name5> の整数値番目を <name6> とする	<name6> = <name3> [ <name6> ] [ int ( <name5> ) ]	<name6> = <name3> [ <name6> ] [ int ( <name5> ) ]
0 から <name5> 未満までの数列の各要素を <name3> とし、 <name2> ( ) の列を <name4> とする	<name4> = [ <name2> ( ) for <name3> in range ( <name5> ) ]	<name4> = [ <name2> ( ) for <name3> in range ( <name5> ) ]
<name6> の <val3> 番目から、つまり末尾までの部分列の整数値を <name2> とする	<name2> = int ( <name6> [ <val3> : ] )	<name2> = int ( <name6> [ <val3> : ] )
<val6> から <val4> 未満までの数列を順に現在の日時として、繰り返す	for now in range ( <val6> , <val4> ) :	for now in range ( <val6> , <val4> ) :
{} : を書式として <name1> で整形した文字列を出力する	print ( '{}:' . format ( <name1> ) )	str . format ( <name1> ) ) print ( <val1> . format ( <name1> ) )
<name2> が <name1> に含まれないとき、	if <name2> not in <name1> :	while <name2> not in <name1> :
<name2> の <name4> 番目の末尾に ( <name3> 、 <name1> 、 <name6> ) の組を追加する	<name2> [ <name4> ] . append ( ( <name3> , <name1> , <name6> ) )	<name2> [ <name4> ] . append ( ( <name3> , <name1> , <name6> ) )
真を <name3> の <name6> 番目の <name6> 番目にする	<name3> [ <name6> ] [ <name6> ] = True	<name4> [ <name6> ] [ <name6> ] = True
<name1> の <name4> の先頭番目を <name6> とする	<name6> = <name1> [ <name4> [ 0 ] ]	<name2> = <name1> [ <name4> [ 0 ] ]
<name4> の末尾に <name3> の <val5> 番目から、つまり末尾までの部分列を追加する	<name4> . append ( <name3> [ <val5> : ] )	<name3> . append ( <name3> [ <val5> : ] )
<name3> から読み込んだ一行を空白で分割した字句列を展開し、それぞれ <name1> 、 <name2> 、 <name6> とする	<name1> , <name2> , <name6> = <name3> . readline ( ) . split ( )	<name1> , <name2> , <name6> = <name3> . readline ( ) . split ( )
<name4> に <val2> を掛けた値から <name6> に <val5> を加えた値未満までの <name4> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> * <val2> , <name6> + <val5> , <name4> ) :	( for <name3> in range ( <name4> * <val2> , <name6> + <val5> , <name4> ) :
<name5> を <name4> の <name2> 番目から <name4> の <name2> から <val1> を引いた値番目を引いた値から <val3> に <name6> を掛けた値を引いた値、 <val5> の最大値だけ増加させる	<name5> += max ( <name4> [ <name2> ] - <name4> [ <name2> - <val1> ] - <val3> * <name6> , <val5> )	<name1> += max ( <name4> [ <name2> ] - <name4> [ <name2> - <val1> ] - <val3> * <name6> , <val5> )
<name4> に <val1> を加えた値を <name2> の <name5> の <name3> 番目番目にする	<name2> [ <name5> [ <name3> ] ] = <name4> + <val1>	<name2> [ <name5> [ <name3> ] ] = <name4> + <val1>
<name5> を <name6> に <name2> を掛けた値に <name4> の <name1> から <name3> に <val5> を加えた値を引いた値番目を掛けた値を <name6> で割った余りだけ増加させる	<name5> += <name6> * <name2> * <name4> [ <name1> - ( <name3> + <val5> ) ] % <name6>	<name1> += <name6> * <name2> * <name4> [ <name1> - <name3> + <val5> ] % <name6>
入力された文字列を空白で分割した字句列の先頭を除いた部分列の各要素に整数を適用した列を順に <name1> として、繰り返す	for <name1> in map ( int , input ( ) . split ( ) [ 1 : ] ) :	. for <name1> in map ( int , input ( ) . split ( ) [ 1 : ] ) :
<name5> の <name3> が、つまり未定値と等しくなければならない	assert <name5> . <name3> is not None	find = <name5> . <name3> is not None
<val3> から <name2> 未満までの数列の各要素を <name4> とし、 <val3> から <name6> に <val1> を加えた値未満までの数列の各要素を <name5> とし、 <val3> の列の列を <name2> とする	<name2> = [ [ <val3> for <name5> in range ( <name6> + <val1> ) ] for <name4> in range ( <name2> ) ]	<name3> = [ [ <val3> for <name5> in range ( <name6> + <val1> ) ] for <name4> in range ( <name2> ) ]
<name5> を <name2> の <name1> の <name6> 番目にする	<name2> . <name1> [ <name6> ] = <name5>	( <name2> . <name1> [ <name6> ] = <name5> )
<name4> を <name2> だけ増加させる <name2> を <val6> だけ増加させる	<name4> += <name2> <name2> += <val6>	<name2> += <name2> <name2> += <val6>
<name4> の <name5> 番目に <name6> を加えた値を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name4> [ <name5> ] + <name6>	<name3> [ <name3> ] = <name4> [ <name5> ] + <name6>
<name4> の <name3> の <name2> の <name5> 番目の末尾に <name2> を追加する	<name4> . <name3> [ <name2> . <name5> ] . append ( <name2> )	<name2> . <name3> [ <name2> . <name5> ] . append ( <name2> )
<name3> の <name4> 番目が <name2> の先頭より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name3> [ <name4> ] < <name2> [ 0 ] : <blk> continue </blk>	if <name3> [ <name4> ] < <name2> [ 0 ] : <blk> continue </blk>
{ 0 } : { 1 }を書式として <name3> 、 <name6> で整形した文字列を出力する	print ( '{0} : {1}' . format ( <name3> , <name6> ) )	[ print ( '{0} : ] . format ( <name3> , <name6> ) )
<val2> から <name1> 未満までの数列を順に <name3> として、繰り返す <blk> <name3> を <name4> の <name3> 番目の <val2> 番目にする </blk>	for <name3> in range ( <name1> ) : <blk> <name4> [ <name3> ] [ <val2> ] = <name3> </blk>	: for <name3> in range ( <name1> ) : <blk> <name4> [ <name3> ] [ <val2> ] = <name3> </blk>
( <val2> 、 <val4> 、 <val6> 、 <val5> 、 <val3> 、 <val1> 、 <val2> ) からなる列を <name1> とする	<name1> = [ <val2> , <val4> , <val6> , <val5> , <val3> , <val1> , <val2> ]	<name3> = [ <val2> , <val4> , <val6> , <val5> , <val3> , <val1> , <val2> ]
入力された文字列の両端から空白改行を取り除いた文字列の整数値を <name3> とする	<name3> = int ( input ( ) . strip ( ) )	<name3> = int ( input ( ) . strip ( ) )
<name2> の <val3> 番目を <val6> だけ増加させる	<name2> [ <val3> ] += <val6>	( <name2> [ <val3> ] += <val6> )
<name2> の末尾に <name1> ( <val5> , <name3> ( <name4> ( ) ) ) の文字列を追加する	<name2> . append ( str ( <name1> ( <val5> , <name3> ( <name4> ( ) ) ) ) )	<name1> . append ( str ( str ( <name1> ( <val5> , <name3> ( <name4> ( ) ) ) ) ) )
( <name6> ) からなる列を <name5> とする	<name5> = [ <name6> ]	<name5> = [ <name6> ]
<name2> を <name5> で割った商、 - <name4> を <name5> で割った商を <name6> 、 <name3> とする	<name6> , <name3> = <name2> // <name5> , - <name4> // <name5>	<name2> , <name3> = <name2> // <name5> , - <name4> // <name5>
0 から <name1> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> + <val4> ) :	in range ( <name1> + <val4> ) :
( 、つまり偽 ) からなる列の <name1> // <val4> から <name3> * <name3> // <val4> を引いた値から <val5> を引いた値を <name3> で割った商に <val5> を加えた値回分の列を <name5> の <name3> に <name3> を掛けた値を <val6> で割った商から、つまり末尾までの <val2> に <name3> を掛けた値間隔による部分列にする	<name5> [ <name3> * <name3> // <val6> : : <val2> * <name3> ] = [ False ] * ( ( <name1> // <val4> - <name3> * <name3> // <val4> - <val5> ) // <name3> + <val5> )	<name2> [ <name3> * <name3> // <val6> : : <val2> * <name3> ] = [ False ] * ( ( <name1> // <val4> - <name3> * <name3> // <val4> - <val5> ) // <name3> + <val5> )
<name6> 、 <name5> の最大値を <name6> とする	<name6> = max ( <name6> , <name5> )	<name6> = max ( <name6> , <name5> )
<name5> の <name2> 番目を <name5> の <name2> に <name3> を加えた値番目にする	<name5> [ <name2> + <name3> ] = <name5> [ <name2> ]	<name4> [ <name2> + <name3> ] = <name5> [ <name2> ]
<name6> から <val3> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> , <val3> , - 1 ) :	for <name2> in range ( <name6> , <val3> , - 1 ) :
<name5> の長さが <val1> 以下のとき、	if len ( <name5> ) <= <val1> :	for <name5> in len ( <name5> ) <= <val1> :
<name4> に <name5> から <name1> を引いた値を追加した集まり	<name4> . add ( <name5> - <name1> )	<name5> . add ( <name5> - <name1> )
<name1> を <name6> ( <name4> ) から <val5> を引いた値の <val3> 進数文字列の <val3> 番目から、つまり末尾までの部分列の文字列を長さ <val2> になるように '0' 左詰めした文字列だけ増加させる	<name1> += str ( bin ( <name6> ( <name4> ) - <val5> ) [ <val3> : ] ) . zfill ( <val2> )	<name4> += <name1> += str ( bin ( <name6> ( <name4> ) - <val5> ) [ <val3> : ] ) . zfill ( <val2> )
<name1> ( <name3> , <name5> ( <name4> [ <val2> ] ) )	<name1> ( <name3> , <name5> ( <name4> [ <val2> ] ) )	<name1> ( <name3> , <name5> ( <name4> [ <val2> ] ) )
<name2> を <name1> だけ右シフトした値と <val6> の論理積が <val4> と等しいとき、	if ( <name2> >> <name1> & <val6> ) == <val4> :	continue ( <name2> >> <name1> ) & <val6> == <val4> :
<name4> の <name2> の <name1> 番目を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name4> . <name2> [ <name1> ] :	for <name3> , <name6> in <name4> . <name2> [ <name1> ] :
<name4> の <val6> 番目を <name3> だけ減少させる	<name4> [ <val6> ] -= <name3>	<name3> [ <val6> ] -= <name3>
<val2> の <name5> 番目から、つまり末尾までの部分列を順に <name6> として、繰り返す	for <name6> in <val2> [ <name5> : ] :	for <name6> in <val2> [ <name5> : ] :
<name5> . <name2> ( <name1> ( <name5> . <name3> , <name6> ) ) を <name5> . <name4> ( ) の <val5> 乗で割った値を <name4> とする	<name4> = <name5> . <name2> ( <name1> ( <name5> . <name3> , <name6> ) ) / pow ( <name5> . <name4> ( ) , <val5> )	<name4> = <name5> . <name2> ( <name1> ( <name5> . <name3> , <name6> ) ) / pow ( <name5> . <name4> ( ) , <val5> )
<name4> の <name6> が、つまり未定値と等しくない間、次を繰り返す	while <name4> . <name6> != None :	for while <name4> . <name6> != None :
<name3> の値の集まりのリストをソートした列を <name2> とする	<name2> = sorted ( list ( <name3> . values ) )	<name2> = sorted ( list ( <name3> . values ) )
<name5> の <name6> が、つまり未定値と等しいとき、	if <name5> . <name6> == None :	or ( <name5> . <name6> is not None ) :
<val1> から <name6> の平方根の整数値に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , int ( math . sqrt ( <name6> ) ) + <val1> ) :	. for <name5> in range ( <val1> , int ( math . sqrt ( <name6> ) ) + <val1> ) :
<name2> の末尾に ( <name5> に <val1> を加えた値、 <name6> 、 <name3> 、 <name4> ) の組を追加する	<name2> . append ( ( <name5> + <val1> , <name6> , <name3> , <name4> ) )	<name2> . append ( ( <name5> + <val1> , <name6> , <name3> , <name4> ) )
<name5> の集合から <name4> の集合を引いた値をソートした列を順に <name2> として、繰り返す	for <name2> in sorted ( set ( <name5> ) - set ( <name4> ) ) :	( <name2> in sorted ( set ( <name5> ) - set ( <name4> ) ) :
<name3> を <name3> の絶対値で割った商を <name4> とする	<name4> = <name3> // abs ( <name3> )	<name4> = <name3> // abs ( <name3> )
<name6> を <name5> の <name4> 番目の <name1> にする	<name5> [ <name4> ] . <name1> = <name6>	( <name5> [ <name4> ] . <name1> = <name6> )
<name1> ( <name6> , <name3> )	<name1> ( <name6> , <name3> )	<name3> <name1> ( <name6> , <name3> )
os . <name4> の先頭を除いた部分列、 os . <name4> の末尾を除いた部分列の要素をそれぞれ組にした列を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in zip ( <name4> [ 1 : ] , <name4> [ : - 1 ] ) :	. for <name1> , <name5> in zip ( <name4> [ 1 : ] , <name4> [ : - 1 ] ) :
<name1> の <name4> 番目の <name3> 番目が <val6> と等しいとき、	if <name1> [ <name4> ] [ <name3> ] == <val6> :	while <name1> [ <name4> ] [ <name3> ] == <val6> :
<name3> が <name2> に含まれるとき <name2> の <name3> 番目に <name5> の整数値を加えた値、そうでなければ <name5> の整数値を <name2> の <name3> 番目にする	<name2> [ <name3> ] = <name2> [ <name3> ] + int ( <name5> ) if <name3> in <name2> else int ( <name5> )	<name2> [ <name3> ] = ( <name2> [ <name3> ] + int ( <name5> ) if <name3> in <name2> else int ( <name5> ) )
<name3> の <name4> 番目の <name2> 番目に <val5> を加えた値を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = <name3> [ <name4> ] [ <name2> ] + <val5>	<name3> [ <name4> ] [ <name6> ] = <name3> [ <name4> ] [ <name2> ] + <val5>
<name3> の <val4> 番目を <name6> の <val4> 番目にする	<name6> [ <val4> ] = <name3> [ <val4> ]	<name3> [ <val4> ] = <name3> [ <val4> ]
<val6> 、 <val1> を間に入れて <name2> . <name4> . <name5> ( ) の各要素に整数を適用した列を連結した文字列を出力する	print ( <val6> , <val1> . join ( map ( str , <name2> . <name4> . <name5> ( ) ) ) )	print ( <val6> , <val1> . join ( map ( str , <name2> . <name4> . <name5> ( ) ) ) )
入力された文字列を空白で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]	<name3> = [ int ( <name1> ) for <name1> in input ( ) . split ( ) ]
<name4> の <name3> 番目から <name4> の <name1> 番目を引いた値を返す	return <name4> [ <name3> ] - <name4> [ <name1> ]	yield <name4> [ <name3> ] - <name4> [ <name1> ]
0 から <name6> から <name5> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> - <name5> ) :	in range ( <name6> - <name5> ) :
<name5> の <name4> に <name1> を掛けた値に <name6> に <val2> を加えた値を加えた値番目の末尾に ( <name4> に <name1> を掛けた値に <name6> を加えた値、 <name3> に <val2> を加えた値 ) の組を追加する	<name5> [ <name4> * <name1> + ( <name6> + <val2> ) ] . append ( ( <name4> * <name1> + <name6> , <name3> + <val2> ) )	<name4> [ <name1> * ( <name6> + <val2> ) ] . append ( ( <name4> * <name1> + <name6> , <name3> + <val2> ) )
<val4> 年 <val2> 月 <val3> 日の日時を <name5> とする	<name5> = datetime . datetime ( <val4> , <val2> , <val3> )	<name5> = datetime . datetime ( <val4> , <val2> , <val3> )
<name4> . <name1> ( ) でないとき、	if not <name4> . <name1> ( ) :	list ( not <name4> . <name1> ( ) ) :
\ <name2> の <name3> 番目が'\\\\'と等しいとき、\	\ if <name2> [ <name3> ] == '\\\\' : \	if <name2> [ <name3> ] == '\\\\' : \
( <val5> ) からなる列の <val4> 回分の列を <name6> とする	<name6> = [ <val5> ] * <val4>	<name6> = [ <val5> ] * <val4>
<val5> を <name4> の <name6> の先頭の <val2> 番目にする	<name4> . <name6> [ <val2> ] [ <val2> ] = <val5>	( <name4> . <name6> [ 0 ] [ <val2> ] = <val5> )
<name1> に <name6> を加えた値を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name1> + <name6>	<name2> [ <name4> ] = <name1> + <name6>
( <name3> 、 <name6> ) の組を <name4> とする	<name4> = ( <name3> , <name6> )	<name4> = ( <name3> , <name6> )
<name6> ( <name4> , <name3> + <val5> , <name1> )	<name6> ( <name4> , <name3> + <val5> , <name1> )	set ( <name6> ( <name4> , <name3> + <val5> , <name1> ) )
<name4> ( <name6> , <name5> . <name3> ( <name1> ( ) . <name2> ( ) ) ) を <name6> とする	<name6> = <name4> ( <name6> , <name5> . <name3> ( <name1> ( ) . <name2> ( ) ) )	<name6> = <name4> ( <name6> , <name5> . <name3> ( <name1> ( ) . <name2> ( ) ) )
<name4> の先頭の <name2> 番目が <val3> と等しくなくかつ <name1> の <name2> 番目が <name4> の先頭の <name2> 番目と等しくないとき、	if <name4> [ 0 ] [ <name2> ] != <val3> and <name1> [ <name2> ] != <name4> [ 0 ] [ <name2> ] :	for <name4> in <name4> [ 0 ] [ <name2> ] != <val3> and <name1> [ <name2> ] != <name4> [ 0 ] [ <name2> ] :
\ <name1> ( <val3> % ( <name2> // <name5> ) ) \	\ <name1> ( <val3> % ( <name2> // <name5> ) ) \	\ <name1> ( <val3> % ( <name2> // <name5> ) ) \
<name1> の <name6> 番目でない間、次を繰り返す	while not <name1> [ <name6> ] :	del not <name1> [ <name6> ] :
<name4> の <name6> 個までのコンビネーションのリストを <name3> とする	<name3> = list ( itertools . combinations ( <name4> , <name6> ) )	<name3> = list ( itertools . combinations ( <name4> , <name6> ) )
<name2> モジュールを用いる	from <name2> import List , Iterator , Tuple	from <name2> , deque
<name2> の <name4> 番目の末尾に <name5> を追加する	<name2> [ <name4> ] . append ( <name5> )	<name4> [ <name4> ] . append ( <name5> )
<name2> の <name1> から読み込んだ行の列を <name3> とする	<name3> = <name2> . <name1> . readlines ( )	<name3> = <name2> . <name1> . readlines ( )
<name5> の長さが <val4> より大きくかつ <name2> の <name5> の末尾番目が <name2> の <name3> 番目より小さい間、次を繰り返す	while len ( <name5> ) > <val4> and <name2> [ <name5> [ - 1 ] ] < <name2> [ <name3> ] :	del ( len ( <name5> ) > <val4> and <name2> [ <name5> [ - 1 ] ] < <name2> [ <name3> ] ) :
<name5> の末尾に <name1> を <name6> で割った値を追加する	<name5> . append ( <name1> / <name6> )	<name1> . append ( <name1> / <name6> )
<name2> . <name4> ( <name1> . <name6> ) に <name2> . <name4> ( <name1> . <name5> ) を加えた値に <val3> を加えた値を <name1> 内の [ MASK ] の出現回数にする	<name1> . count = <name2> . <name4> ( <name1> . <name6> ) + <name2> . <name4> ( <name1> . <name5> ) + <val3>	<name6> . count = <name2> . <name4> ( <name1> . <name6> ) + <name2> . <name4> ( <name1> . <name5> ) + <val3>
<name4> ( <name1> ( <name2> ) , <name5> ( <name2> ) )	<name4> ( <name1> ( <name2> ) , <name5> ( <name2> ) )	<name5> ( <name4> ( <name1> ( <name2> ) , <name5> ( <name2> ) ) )
\ <name2> ( <val5> % <name1> . <name3> ( <val6> , <val4> ) ) \	\ <name2> ( <val5> % <name1> . <name3> ( <val6> , <val4> ) ) \	% <name2> ( <val5> % <name1> . <name3> ( <val6> , <val4> ) ) \
<name5> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = map ( int , <name5> ( ) . split ( ) )	<name2> , <name4> , <name1> = map ( int , <name5> ( ) . split ( ) )
<name3> の <name6> の <name2> 番目を <name5> とする	<name5> = <name3> . <name6> [ <name2> ]	<name5> = <name3> . <name6> [ <name2> ]
3 C { : 02 d }を書式として <name4> を <val1> で割った余りのとき <name4> 、そうでなければ <val1> で整形した文字列を出力する	print ( '3C{:02d}' . format ( <name4> if <name4> % <val1> else <val1> ) )	print ( '3C' . format ( <name4> if <name4> % <val1> else <val1> ) )
<name4> . <name3> ( <name5> , <name2> [ <name1> ] ( <name6> , <val4> ) )	<name4> . <name3> ( <name5> , <name2> [ <name1> ] ( <name6> , <val4> ) )	<name5> . <name4> . <name3> ( <name5> , <name2> [ <name1> ] ( <name6> , <val4> ) )
<name6> が <name2> に <name4> を掛けた値より小さいとき、	if <name6> < <name2> * <name4> :	while <name6> < <name2> * <name4> :
<name1> をパラメータとして ( <name1> の <name6> 、 <name1> の <name4> ) の組を返す関数を <name5> として <name2> をソートする	<name2> . sort ( <name5> = lambda <name1> : ( <name1> . <name6> , <name1> . <name4> ) )	<name2> . sort ( <name5> = lambda <name1> : ( <name1> . <name6> , <name1> . <name4> ) )
<name6> の <name5> 番目が <name3> に含まれるとき、	if <name6> [ <name5> ] in <name3> :	if <name6> [ <name5> ] in <name3> :
<name1> の <name6> 番目を <val4> だけ減少させる <name1> の <name6> に <val4> を加えた値番目を <val4> だけ減少させる <name1> の <name6> に <val5> を加えた値番目を <val4> だけ減少させる	<name1> [ <name6> ] -= <val4> <name1> [ <name6> + <val4> ] -= <val4> <name1> [ <name6> + <val5> ] -= <val4>	<name1> [ <name6> ] -= <val4> <name1> [ <name6> + <val4> ] -= <val4> <name1> [ <name6> + <val5> ] -= <val4>
<name4> の <name6> 番目の <name1> 番目が <name3> より大きい間、次を繰り返す	while <name4> [ <name6> ] [ <name1> ] > <name3> :	del <name4> [ <name6> ] [ <name1> ] > <name3> :
<name4> の <name4> の <name5> 番目の <name1> 番目の <name6> を返す	return <name4> [ <name4> [ <name5> ] . <name1> ] . <name6>	assert <name4> . <name4> [ <name5> ] [ <name1> ] . <name6>
<name4> の <name5> から <val6> を引いた値番目の <name3> 番目に <name4> の <name5> 番目の <name3> から <val6> を引いた値番目を加えた値、 <name4> の <name5> から <val6> を引いた値番目の <name3> 番目、 <name4> の <name5> 番目の <name3> から <val6> を引いた値番目の最大値を <name4> の <name5> 番目の <name3> 番目にする	<name4> [ <name5> ] [ <name3> ] = max ( <name4> [ <name5> - <val6> ] [ <name3> ] + <name4> [ <name5> ] [ <name3> - <val6> ] , <name4> [ <name5> - <val6> ] [ <name3> ] , <name4> [ <name5> ] [ <name3> - <val6> ] )	<name5> [ <name3> ] = max ( <name4> [ <name5> - <val6> ] [ <name3> ] + <name4> [ <name5> ] [ <name3> - <val6> ] , <name4> [ <name5> - <val6> ] [ <name3> ] , <name4> [ <name5> ] [ <name3> ] [ <name5> ] - <val6> ] [ <name3> ] )
<name2> を <name6> で割った商に <name2> を <name6> で割った余りを加えた値を出力する	print ( <name2> // <name6> + <name2> % <name6> )	[ print ( <name2> // <name6> ) + ( <name2> % <name6> ) )
<name5> を <name3> の <name6> から <val1> を引いた値だけ増加させる	<name5> += <name3> . <name6> - <val1>	( <name5> += <name3> . <name6> - <val1> )
<name5> に <name3> を加えた値が <name4> 以下のとき、	if <name5> + <name3> <= <name4> :	list if <name5> + <name3> <= <name4> :
<val6> を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = <val6>	<name5> [ <name3> ] [ <name4> ] = <val6>
<name1> . <name4> ( <name5> , <name2> . <name6> - <name3> . <name6> ) の絶対値を <name3> とする	<name3> = abs ( <name1> . <name4> ( <name5> , <name2> . <name6> - <name3> . <name6> ) )	<name3> = abs ( <name1> . <name4> ( <name5> , <name2> . <name6> - <name3> . <name6> ) )
<name6> の各要素を <name1> とし、 <val2> を間に入れて <name1> の各要素に整数を適用した列を連結した文字列を出力するの列	[ print ( <val2> . join ( map ( str , <name1> ) ) ) for <name1> in <name6> ]	[ print ( <val2> . join ( map ( str , <name1> ) ) ) for <name1> in <name6> ]
<name3> と <name6> を入れ替える	<name3> , <name6> = <name6> , <name3>	( <name3> , <name6> = <name6> , <name3> )
<name3> の <val1> 番目に <name4> に <name6> ( <name2> , <name5> [ <val1> ] - <name3> [ <val1> ] ) を <name6> ( <name2> , <name4> ) で割った値を掛けた値を加えた値を返す	return <name3> [ <val1> ] + <name4> * ( <name6> ( <name2> , <name5> [ <val1> ] - <name3> [ <val1> ] ) / <name6> ( <name2> , <name4> ) )	x return <name3> [ <val1> ] + <name4> * ( <name6> ( <name2> , <name5> [ <val1> ] - <name3> [ <val1> ] ) / <name6> ( <name2> , <name4> ) )
( <val3> 、 <val4> 、 <val1> 、 <val6> 、 <val5> 、 <val2> 、 <val3> ) からなる列を <name2> とする	<name2> = [ <val3> , <val4> , <val1> , <val6> , <val5> , <val2> , <val3> ]	<name2> = [ <val3> , <val4> , <val1> , <val6> , <val5> , <val2> , <val3> ]
<name1> を <val3> で割った値の整数値から -1 未満までの -1 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( int ( <name1> / <val3> ) , - 1 , - 1 ) :	for <name5> in range ( int ( <name1> / <val3> ) , - 1 , - 1 ) :
os . <name2> の <name3> 番目を <name1> とする	<name1> = <name2> [ <name3> ]	<name1> = <name2> [ <name3> ]
<name1> の集合をソートした列の <val6> 番目から、つまり末尾までの部分列を <name1> とする	<name1> = sorted ( set ( <name1> ) ) [ <val6> : ]	<name1> = sorted ( set ( <name1> ) ) [ <val6> : ]
<name1> の <name4> 番目の <name5> に <val6> を加えた値番目が <val3> と等しいとき、	if <name1> [ <name4> ] [ <name5> + <val6> ] == <val3> :	list if <name1> [ <name4> ] [ <name5> + <val6> ] == <val3> :
( ( -1 、 <val6> ) の組、 ( <val6> 、 -1 ) の組、 ( <val3> 、 <val6> ) の組、 ( <val6> 、 <val3> ) の組 ) の組を <name4> とする	<name4> = ( ( - <val3> , <val6> ) , ( <val6> , - <val3> ) , ( <val3> , <val6> ) , ( <val6> , <val3> ) )	<name4> = ( ( - <val3> , <val6> ) , ( <val6> , - <val3> ) , ( <val3> , <val6> ) , ( <val6> , <val3> ) )
0 から <name3> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name3> + <val5> ) :	for <name4> in range ( <name3> + <val5> ) :
<name5> が <name2> と等しいかどうかが <val3> と等しくなければならない	assert <name5> == <name2> == <val3>	sep = <name5> == <name2> == <val3>
( -1 ) からなる列に入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを加えた値を <name5> とする	<name5> = [ - 1 ] + list ( map ( int , input ( ) . split ( ) ) )	<name5> = [ - 1 ] + list ( map ( int , input ( ) . split ( ) ) )
<name5> ( <val2> ) の <val2> 番目が <val1> と等しいとき、 <blk> <name6> を <val4> だけ増加させる </blk>	if <name5> ( <val2> ) [ <val2> ] == <val1> : <blk> <name6> += <val4> </blk>	\ <name5> ( <val2> ) [ <val2> ] == <val1> : <blk> <name6> += <val4> </blk>
<val3> から <name6> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val3> , <name6> ) :	: for <name2> in range ( <val3> , <name6> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , input ( ) . split ( ) )	<name5> , <name3> = map ( int , input ( ) . split ( ) )
<name2> . <name6> ( <name4> ) を <name6> とする	<name6> = <name2> . <name6> ( <name4> )	<name6> = <name2> . <name6> ( <name4> )
<name6> から読み込んだ一行の両端から空白改行を取り除いた文字列を <name3> とする	<name3> = <name6> . readline ( ) . strip ( )	<name3> = <name6> . readline ( ) . strip ( )
<name1> の <name6> 番目が <val3> と等しいとき、	if <name1> [ <name6> ] == <val3> :	while <name1> [ <name6> ] == <val3> :
<name2> 内の <val3> の出現回数を出力する	print ( <name2> . count ( <val3> ) )	print ( <name2> . count ( <val3> ) )
0 から <name5> に <val4> を加えた値未満までの数列の各要素を <name6> とし、 <name2> ( <name1> : <name5> ) の列を <name3> とする	<name3> = [ <name2> ( <name1> : <name5> ) for <name6> in range ( <name5> + <val4> ) ]	<name6> = [ <name2> ( <name1> . <name5> ) for <name6> in range ( <name5> + <val4> ) ]
入力された文字列、入力された文字列を <name3> 、 <name1> とする	<name3> , <name1> = input ( ) , input ( )	<name3> , <name1> = input ( ) , input ( )
0 から <val4> に <name3> の <name2> を掛けた値未満までの数列の各要素を <name6> とし、 <name1> の列を <name3> の <name5> にする	<name3> . <name5> = [ <name1> for <name6> in range ( <val4> * <name3> . <name2> ) ]	<name4> . <name5> = [ <name1> for <name6> in range ( <val4> * <name3> . <name2> ) ]
<name2> の末尾に <name2> の末尾に <name1> の <name4> 番目を加えた値を追加する	<name2> . append ( <name2> [ - 1 ] + <name1> [ <name4> ] )	<name2> . append ( <name2> [ - 1 ] + <name1> [ <name4> ] )
整数の <val1> 番目から <name4> に <val1> を加えた値までの部分列を出力する	print ( str [ <val1> : <name4> + <val1> ] )	print ( str [ <val1> : <name4> + <val1> ] )
<name2> の <name6> 番目を <name1> の <name3> ( <val5> + <name6> ) 番目にする	<name1> [ <name3> ( <val5> + <name6> ) ] = <name2> [ <name6> ]	<name4> [ <name1> [ <name3> ( <val5> + <name6> ) ] = <name2> [ <name6> ]
<name6> が <name4> の長さより小さいとき、	if <name6> < len ( <name4> ) :	isinstance ( <name6> < len ( <name4> ) ) :
<name4> から <val3> を引いた値を <val5> で割った余りを <name4> とする	<name4> = ( <name4> - <val3> ) % <val5>	<name4> = ( <name4> - <val3> ) % <val5>
<name3> に <name4> を掛けた値に <name5> の <name1> 番目の順序数を加えた値を <name6> で割った余りを <name3> とするを <name6> の <name1> に <val2> を加えた値番目にする	<name6> [ <name1> + <val2> ] = <name3> = ( <name3> * <name4> + ord ( <name5> [ <name1> ] ) ) % <name6>	<name3> [ <name6> [ <name1> + <val2> ] = <name3> = ( <name3> * <name4> + ord ( <name5> [ <name1> ] ) ) % <name6>
<name3> が <name5> に <name1> を掛けた値に <val4> を加えた値と等しいとき、	if <name3> == <name5> * <name1> + <val4> :	if <name3> == <name5> * <name1> + <val4> :
<name3> に <name6> を加えた値に <val4> に <name5> を掛けた値を加えた値を <name2> とする	<name2> = <name3> + <name6> + <val4> * <name5>	<name2> = <name3> + <name6> + <val4> * <name5>
<val1> を <name4> だけ左シフトした値を <name2> とする	<name2> = <val1> << <name4>	( <val1> << = <name4> )
<name3> の <name5> 番目を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name3> [ <name5> ]	<name1> [ <name4> ] = <name3> [ <name5> ]
<name6> を <val3> 倍にする	<name6> *= <val3>	<name3> *= <name6> *= <val3>
<val1> を <name4> の <name5> から <val1> を引いた値番目を <name4> の <name3> から <val1> を引いた値番目とするとするを <name4> の <name6> から <val1> を引いた値番目にする	<name4> [ <name6> - <val1> ] = <name4> [ <name3> - <val1> ] = <name4> [ <name5> - <val1> ] = <val1>	else [ <name4> [ <name6> - <val1> ] = <name4> [ <name3> - <val1> ] = <val1>
( ( <val5> 、 <name4> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <val5> , <name4> ) ]	else = [ ( <val5> , <name4> ) ]
<name3> に <val1> を加えた値が <name5> と等しいとき <name6> の <val4> 番目、そうでなければ <name6> の <name3> に <val1> を加えた値番目を <name2> とする	<name2> = <name6> [ <val4> ] if <name3> + <val1> == <name5> else <name6> [ <name3> + <val1> ]	input = <name6> [ <val4> ] if <name3> + <val1> == <name5> else <name6> [ <name3> + <val1> ]
<name2> と <name6> を入れ替える	<name2> , <name6> = <name6> , <name2>	( <name2> , <name6> = <name6> , <name2> )
<name4> の末尾に入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列を追加する	<name4> . append ( [ int ( <name2> ) for <name2> in input ( ) . split ( ) ] )	<name4> . append ( [ int ( <name2> ) for <name2> in input ( ) . split ( ) ] )
<name4> の <name6> の <name5> 番目を <name5> とする	<name5> = <name4> . <name6> [ <name5> ]	<name5> = <name4> . <name6> [ <name5> ]
<name4> の <name1> 番目を <name5> とする <name4> の <name2> 番目を <name3> とする	<name5> = <name4> [ <name1> ] <name3> = <name4> [ <name2> ]	<name2> = <name4> [ <name1> ] <name3> = <name4> [ <name2> ]
<name2> のとき、 <blk> <name4> . <name3> ( <name1> , <name6> ) のとき <val5> 、そうでなければ <val2> を出力する </blk>	if <name2> : <blk> print ( <val5> if <name4> . <name3> ( <name1> , <name6> ) else <val2> ) </blk>	: if <name2> : <blk> print ( <val5> if <name4> . <name3> ( <name1> , <name6> ) else <val2> ) </blk>
<name1> の末尾に ( <name4> 、 <name2> の整数値、 <name3> ) からなる列を追加する	<name1> . append ( [ <name4> , int ( <name2> ) , <name3> ] )	<name1> . append ( [ <name4> , int ( <name2> ) , <name3> ] )
<name5> . <name4> ( <name5> . <name6> / <name1> , <name5> . <name2> / <name1> ) を返す	return <name5> . <name4> ( <name5> . <name6> / <name1> , <name5> . <name2> / <name1> )	yield <name5> . <name4> ( <name5> . <name6> / <name1> , <name5> . <name2> / <name1> )
<name2> ( <name4> , <name3> ) のとき <val5> 、そうでなければ <val1> を出力する	print ( <val5> if <name2> ( <name4> , <name3> ) else <val1> )	print ( <val5> if <name2> ( <name4> , <name3> ) else <val1> )
<name1> の <val6> を取り出した値を <name2> とする	<name2> = <name1> . pop ( <val6> )	<name2> = <name1> . pop ( <val6> )
<val6> から <val6> 未満までの数列の各要素を <name2> とし、 <val6> から <val4> 未満までの数列の各要素を <name5> とし、 <val6> から <val1> 未満までの数列の各要素を <name3> とし、 <val6> の列の列の列を <name2> とする	<name2> = [ [ [ <val6> for <name3> in range ( <val1> ) ] for <name5> in range ( <val4> ) ] for <name2> in range ( <val6> ) ]	<name6> = [ [ [ <val6> for <name3> in range ( <val1> ) ] for <name5> in range ( <val4> ) ] for <name2> in range ( <val6> ) ]
<name6> の <name2> 番目が <val3> と等しくまたは <name1> が <name5> の <name2> 番目より大きいとき、 <blk> <val4> 、 <name1> を <name6> の <name2> 番目、 <name5> の <name2> 番目とする </blk>	if <name6> [ <name2> ] == <val3> or <name1> > <name5> [ <name2> ] : <blk> <name6> [ <name2> ] , <name5> [ <name2> ] = <val4> , <name1> </blk>	> if <name6> [ <name2> ] == <val3> or <name1> > <name5> [ <name2> ] : <blk> <name6> [ <name2> ] , <name5> [ <name2> ] = <val4> , <name1> </blk>
<name3> の <name1> の <name5> 番目の型が、つまり整数と等しくない間、次を繰り返す	while type ( <name3> . <name1> [ <name5> ] ) != int :	try : while type ( <name3> . <name1> [ <name5> ] ) != int </blk>
<name2> が <name6> に含まれるとき、	if ( <name2> in <name6> ) :	list in <name6> :
乱数生成を初期化する	random . seed ( )	'LIMIT_OVER' = 'NONE'
<name6> の <name3> 番目を <name5> で割った余りが <val4> と等しいとき、	if ( <name6> [ <name3> ] % <name5> ) == <val4> :	if <name6> [ <name3> ] % <name5> == <val4> :
<name6> が <val2> と等しいとき <val4> 、そうでなければ <val1> を返す	return <val4> if <name6> == <val2> else <val1>	x return <val4> if <name6> == <val2> else <val1>
<name5> から <name6> から <name5> が <val2> と等しいかどうかを引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> , <name6> - ( <name5> == <val2> ) ) :	. for <name4> in range ( <name5> , <name6> - ( <name5> == <val2> ) ) :
<name1> の総和を <name2> の <name5> 番目にする	<name2> [ <name5> ] = sum ( <name1> )	<name2> [ <name5> ] = sum ( <name1> )
<name1> の <name5> から <val6> を引いた値番目が <val3> と等しいとき、	if <name1> [ <name5> - <val6> ] == <val3> :	for <name1> [ <name5> - <val6> ] == <val3> :
<name2> の <name6> の <name3> 番目が <name1> の <name6> の <name3> 番目より大きいかどうかを返す	return <name2> . <name6> [ <name3> ] > <name1> . <name6> [ <name3> ]	yield <name2> . <name6> [ <name3> ] > <name1> . <name6> [ <name3> ]
<name4> ( <name2> , <name1> , <name5> , <name6> , <name3> )	<name4> ( <name2> , <name1> , <name5> , <name6> , <name3> )	<name5> ( <name4> ( <name2> , <name1> , <name5> , <name6> , <name3> ) )
<name2> の <name4> の <name5> 番目の末尾に <name2> . <name6> ( <name3> , <val1> , <name2> ( <name2> . <name4> [ <name3> ] ) -1 ) を追加する	<name2> . <name4> [ <name5> ] . append ( <name2> . <name6> ( <name3> , <val1> , <name2> ( <name2> . <name4> [ <name3> ] ) - 1 ) )	<name6> . <name4> [ <name5> ] . append ( <name2> . <name6> ( <name3> , <val1> , <name2> ( <name2> . <name4> [ <name3> ] ) - <val1> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> 、 <name3> 、 <name4> とする	<name6> , <name5> , <name3> , <name4> = map ( int , input ( ) . split ( ) )	<name5> , <name3> , <name4> = map ( int , input ( ) . split ( ) )
<name5> の <name1> 番目の <name4> 番目を <name6> とする	<name6> = <name5> [ <name1> ] [ <name4> ]	else = <name5> [ <name1> ] [ <name4> ]
0 から <name4> 未満までの数列を順に <name2> として、繰り返す <blk> 入力された文字列を <name6> の <name2> 番目にする </blk>	for <name2> in range ( <name4> ) : <blk> <name6> [ <name2> ] = input ( ) </blk>	: for <name2> in range ( <name4> ) : <blk> <name6> [ <name2> ] = input ( ) </blk>
<name5> の <name4> から <val1> を引いた値番目の <val1> 番目が <name5> の <name4> 番目の <val1> 番目より大きいとき、	if <name5> [ <name4> - <val1> ] [ <val1> ] > <name5> [ <name4> ] [ <val1> ] :	while <name5> [ <name4> - <val1> ] [ <val1> ] > <name5> [ <name4> ] [ <val1> ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> 、 <name1> 、 <name2> 、 <name6> 、 <name5> 、 <name4> 、 <name3> とする	<name4> , <name3> , <name1> , <name2> , <name6> , <name5> , <name4> , <name3> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name2> , <name6> , <name5> , <name4> , <name3> = map ( int , input ( ) . split ( ) )
<name2> の x 座標が <val1> と等しいとき、	if <name2> . x == <val1> :	if <name2> . x == <val1> :
<name5> の <name4> 番目、 <name5> の <name1> 番目を <name5> の <name1> 番目、 <name5> の <name4> 番目とする	<name5> [ <name1> ] , <name5> [ <name4> ] = <name5> [ <name4> ] , <name5> [ <name1> ]	<name1> [ <name1> ] , <name5> [ <name4> ] = <name5> [ <name4> ] , <name5> [ <name1> ]
<name5> 、 <name2> の <name6> 番目の <val3> 番目から <name2> の <name1> 番目の <val4> 番目を引いた値の最大値を <name5> とする	<name5> = max ( <name5> , <name2> [ <name6> ] [ <val3> ] - <name2> [ <name1> ] [ <val4> ] )	else = max ( <name5> , <name2> [ <name6> ] [ <val3> ] - <name2> [ <name1> ] [ <val4> ] )
<name6> の <name2> 番目の <name3> 番目が <name4> の <name3> 番目より小さいとき、	if <name6> [ <name2> ] [ <name3> ] < <name4> [ <name3> ] :	for <name6> [ <name2> ] [ <name3> ] < <name4> [ <name3> ] :
<name1> を <name5> から <name1> 未満までの数列の各要素を <name3> とし、 <val4> を <name2> から <name6> に <name3> から <name5> を引いた値を掛けた値を引いた値で割った値の列だけ増加させる	<name1> += [ <val4> / ( <name2> - <name6> * ( <name3> - <name5> ) ) for <name3> in range ( <name5> , <name1> ) ]	<name1> += [ <val4> / ( <name2> - <name6> * ( <name3> - <name5> ) ) for <name3> in range ( <name5> , <name1> ) ]
<name6> を <name2> だけ右シフトした値と <val4> の論理積でないとき、	if not ( <name6> >> <name2> & <val4> ) :	isinstance ( ( <name6> >> <name2> & <val4> ) :
ソートされた順序を保ったまま <name4> の <val5> 番目を <name2> に挿入できる最後の位置を <name3> とする	<name3> = bisect . bisect_right ( <name2> , <name4> [ <val5> ] )	<name2> = bisect_right ( <name2> , <name4> [ <val5> ] )
yuiophjklnm の集合を <name4> とする	<name4> = set ( 'yuiophjklnm' )	( <name4> = set ( ) )
Case { 0 } : { 1 }を書式として <name3> 、 <name2> で整形した文字列を出力する	print ( 'Case {0}: {1}' . format ( <name3> , <name2> ) )	'Case print ( 'Case {0}: key = 'Case ' . format ( <name3> , <name2> ) )
真を <name6> の <name5> に <val4> を加えた値番目の <name3> 番目にする	<name6> [ <name5> + <val4> ] [ <name3> ] = True	( <name6> [ <name5> + <val4> ] [ <name3> ] = True )
<name4> が <name6> の <name4> と等しいとき、	if <name4> == <name6> . <name4> :	list if <name4> == <name6> . <name4> :
<name6> を <name3> に <name5> を加えた値だけ減少させる	<name6> -= ( <name3> + <name5> )	<name1> -= ( <name3> + <name5> )
<name5> の <val3> を取り出した値を <name6> とする	<name6> = <name5> . pop ( <val3> )	<name6> = <name5> . pop ( <val3> )
<name3> を <name6> とするを <name2> の <val5> 番目にする	<name2> [ <val5> ] = <name6> = <name3>	<name2> [ <val5> ] = <name6> = <name3>
<name1> の <name4> 番目が <val6> と等しいとき、	if <name1> [ <name4> ] == <val6> :	continue <name1> [ <name4> ] == <val6> :
<name6> . <name1> ( <name4> , <name2> ) が <val5> と等しいかどうかを返す	return <name6> . <name1> ( <name4> , <name2> ) == <val5>	x return <name6> . <name1> ( <name4> , <name2> ) == <val5>
<name5> が <name2> より小さくかつ <name1> が <name3> より小さい間、次を繰り返す	while <name5> < <name2> and <name1> < <name3> :	del ( <name5> < <name2> and <name1> < <name3> ) :
<val1> を <name2> の <name5> 番目の <name6> 番目にする	<name2> [ <name5> ] [ <name6> ] = <val1>	( <name2> [ <name5> ] [ <name6> ] = <val1> )
<name6> のキーと値の集まりを順に <name4> 、 <name5> 、 <name1> として、繰り返す	for <name4> , <name5> , <name1> in <name6> . items ( ) :	. for <name4> , <name5> , <name1> in <name6> . items ( ) :
( <name6> 、 <name1> ) の組、 ( <name4> から <name6> を引いた値、 <name1> ) の組を <name3> 、 <name5> とする	<name3> , <name5> = ( <name6> , <name1> ) , ( <name4> - <name6> , <name1> )	<name3> , <name5> = ( <name6> , <name1> ) , ( <name4> - <name6> , <name1> )
<name5> の <val3> 番目から <val6> を引いた値を <name4> とする	<name4> = <name5> [ <val3> ] - <val6>	<name4> = <name5> [ <val3> ] - <val6>
<name4> と <name1> を割ったときの ( 商を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = divmod ( <name4> , <name1> )	<name3> , <name2> = divmod ( <name4> , <name1> )
<name3> の <name5> 、 <name4> の要素をそれぞれ組にした列を順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in zip ( <name3> . <name5> , <name4> ) :	. for <name6> , <name1> in zip ( <name3> . <name5> , <name4> ) :
( <name4> . <name5> <name2> <name1> <name3> <name4> . <name6> ) ( )	( <name4> . <name5> <name2> <name1> <name3> <name4> . <name6> ) ( )	[ <name4> . <name5> <name2> <name1> <name3> <name4> . <name6> ( ) ]
<name1> . <name3> ( <name5> ) を <name4> とする	<name4> = <name1> . <name3> ( <name5> )	<name4> = <name1> . <name3> ( <name5> )
<name1> の <val2> 番目を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name3> 、 <name6> とする	<name5> , <name4> , <name3> , <name6> = map ( int , <name1> [ <val2> ] . split ( ) )	<name4> , <name3> , <name6> = map ( int , <name1> [ <val2> ] . split ( ) )
<val4> + <name1> ( <name6> ) + <val2> + <name1> ( <name3> ) + <val5> + <name1> ( <name4> [ <name6> ] . <name1> ) に <val6> を加えた値に <name2> を加えた値に <val6> を加えた値に <name3> の文字列を加えた値を出力する	print ( <val4> + <name1> ( <name6> ) + <val2> + <name1> ( <name3> ) + <val5> + <name1> ( <name4> [ <name6> ] . <name1> ) + <val6> + <name2> + <val6> + <name1> ( <name3> ) )	[ print ( <val4> + <name1> ( <name6> ) + <val2> + <name1> ( <name3> ) + <val5> + <name1> ( <name4> [ <name6> ] . <name1> ) + <val6> . <name2> + <val6> . <name3> ) )
<val3> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val3> . join ( map ( str , <name5> ) ) )	print ( <val3> . join ( map ( str , <name5> ) ) )
 を間に入れて <name5> の <name2> から <val1> を引いた値番目の各要素を <name3> とし、 <name3> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name3> ) for <name3> in <name5> [ <name2> - <val1> ] ] ) )	print ( '' . join ( [ str ( <name3> ) for <name3> in <name5> [ <name2> - <val1> ] ] ) )
<name5> の <name4> 番目が、つまり未定値と等しいかどうかを返す	return <name5> [ <name4> ] is not None	x return <name5> [ <name4> ] is not None
<name4> の <name5> 番目が <name2> より小さいとき、	if <name4> [ <name5> ] < <name2> :	if <name4> [ <name5> ] < <name2> :
<name1> を順に <name2> として、繰り返す <blk> <val6> を書式として <name2> で整形した文字列を出力する </blk>	for <name2> in <name1> : <blk> print ( <val6> . format ( <name2> ) ) </blk>	for <name2> in <name1> : <blk> print ( <val6> . format ( <name2> ) ) </blk>
( <val2> ) からなる列の <val6> を <name3> だけ左シフトした値回分の列を <name4> とする	<name4> = [ <val2> ] * ( <val6> << <name3> )	<name4> = [ <val2> ] * ( <val6> << <name3> )
<val4> から <val3> 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val4> , <val3> , - 1 ) :	. for <name6> in range ( <val4> , <val3> , - 1 ) :
<name5> の <name3> 番目が <name6> と等しいとき、	if <name5> [ <name3> ] == <name6> :	continue <name5> [ <name3> ] == <name6> :
入力された文字列を <val1> で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を <name2> とする	<name2> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val1> ) ]	<name2> = [ int ( <name3> ) for <name3> in input ( ) . split ( <val1> ) ]
<name5> に <name4> を加えた値が <name2> より大きくかつ <name4> に <name2> を加えた値が <name5> より大きくかつ <name2> に <name5> を加えた値が <name4> より大きいとき、	if <name5> + <name4> > <name2> and <name4> + <name2> > <name5> and <name2> + <name5> > <name4> :	isinstance ( <name5> + <name4> > <name2> and <name4> + <name2> > <name5> and <name2> + <name5> > <name4> ) :
<name5> に <val2> を掛けた値が <name1> の <val4> 番目に <name1> の <val3> 番目を加えた値に <name1> の <val6> 番目を加えた値と等しいとき、	if <name5> * <val2> == <name1> [ <val4> ] + <name1> [ <val3> ] + <name1> [ <val6> ] :	list ( <name5> * <val2> == <name1> [ <val4> ] + <name1> [ <val3> ] + <name1> [ <val6> ] ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name6> 、 <name5> とする	<name1> , <name4> , <name6> , <name5> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name5> = map ( int , input ( ) . split ( ) )
<name3> ( <name1> , <val5> ) を順に <name4> 、 <name6> として、繰り返す	for <name4> , <name6> in <name3> ( <name1> , <val5> ) :	for <name4> , <name6> in <name3> ( <name1> , <val5> ) :
<name4> に <name6> を追加した集まり <name4> に <name3> を追加した集まり	<name4> . add ( <name6> ) <name4> . add ( <name3> )	<name2> . add ( <name6> ) <name4> . add ( <name3> )
現在の日時から <val5> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( now , <val5> ) :	. for <name3> in range ( now , <val5> ) :
<name3> の <name6> 番目の先頭を出力する	print ( <name3> [ <name6> ] [ 0 ] )	print ( <name3> [ <name6> ] [ 0 ] )
<val6> を出力する何も返さない	print ( <val6> ) return	print ( <val6> ) return
<val5> の <val4> 乗を <name1> とする	<name1> = <val5> ** <val4>	( <name1> = <val5> ** <val4> )
<name5> ( <name4> , <name4> [ <val6> ] , <name2> )	<name5> ( <name4> , <name4> [ <val6> ] , <name2> )	<name4> ( <name4> , <name4> [ <val6> ] , <name2> )
<name2> が <name6> の <name1> 番目から <name1> に <val5> を加えた値までの部分列と等しいとき、	if <name2> == <name6> [ <name1> : <name1> + <val5> ] :	isinstance ( <name2> == <name6> [ <name1> : <name1> + <val5> ] ) :
( ( <name3> , <name1> . <name2> ( ) の各要素を <name3> とし、、つまり偽の列 ) ) からなる辞書を <name4> とする	<name4> = { <name3> : [ False for <name3> in <name1> . <name2> ( ) ] }	<name4> = { <name3> : [ False for <name3> in <name1> . <name2> ( ) ] }
<name4> を <name3> で割った余りが <val2> と等しいとき、	if <name4> % <name3> == <val2> :	continue % <name4> % <name3> == <val2> :
<name3> の先頭を <name4> の <name1> 番目の <name5> にする	<name4> [ <name1> ] . <name5> = <name3> [ 0 ]	<name2> [ <name1> ] . <name5> = <name3> [ 0 ]
<name6> ( <name2> ) から <name4> を引いた値を <name3> とする	<name3> = <name6> ( <name2> ) - <name4>	<name3> = <name6> ( <name2> ) - <name4>
<val4> を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <val4>	( <name2> [ <name1> ] = <val4> )
<val3> を <name1> とする <val3> を <name6> とする	<name1> = <val3> <name6> = <val3>	<name1> = <val3> <name6> = <val3>
<name6> を <name2> の <name5> 番目に <name2> の <name3> から <name5> を引いた値番目を掛けた値だけ増加させる	<name6> += <name2> [ <name5> ] * <name2> [ <name3> - <name5> ]	<name1> += <name2> [ <name5> ] * <name2> [ <name3> - <name5> ]
<name5> ( <name1> , <name4> , <name6> ) を <name1> とする	<name1> = <name5> ( <name1> , <name4> , <name6> )	<name1> = <name5> ( <name1> , <name4> , <name6> )
( <name3> ) からなる列の <name2> の <name1> 回分の列を <name4> とする	<name4> = [ <name3> ] * <name2> . <name1>	<name4> = [ <name3> ] * <name2> . <name1>
<name6> の <name4> の <val2> に <name1> を加えた値番目の末尾に <name5> を追加する	<name6> . <name4> [ <val2> + <name1> ] . append ( <name5> )	<name4> . <name4> [ <val2> + <name1> ] . append ( <name5> )
<val2> から <name3> に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , <name3> + <val2> ) :	continue for <name4> in range ( <val2> , <name3> + <val2> ) :
<name2> の <name6> に <name4> の <name3> を掛けた値から <name2> の <name3> に <name4> の <name6> を掛けた値を引いた値を返す	return <name2> . <name6> * <name4> . <name3> - <name2> . <name3> * <name4> . <name6>	x return <name2> . <name6> * <name4> . <name3> - <name2> . <name3> * <name4> . <name6>
<name5> と <name6> の論理積が <name4> に含まれないとき、 <blk> <val3> を <name4> の <name5> と <name6> の論理積番目にする </blk>	if <name5> & <name6> not in <name4> : <blk> <name4> [ <name5> & <name6> ] = <val3> </blk>	try : if <name5> & <name6> not in <name4> : <blk> <name4> [ <name5> & <name6> ] = <val3> </blk>
<name6> 、 <name2> ( <name4> ) の最大値を <name6> とする	<name6> = max ( <name6> , <name2> ( <name4> ) )	else = max ( <name6> , <name2> ( <name4> ) )
<name6> の <name2> 、 <name6> の <name1> 、 <name6> の <name4> 、 <name6> の <name5> を <name6> の <name1> 、 <name6> の <name5> 、 <name6> の <name2> 、 <name6> の <name4> とする	<name6> . <name1> , <name6> . <name5> , <name6> . <name2> , <name6> . <name4> = <name6> . <name2> , <name6> . <name1> , <name6> . <name4> , <name6> . <name5>	<name1> . <name6> . <name5> , <name6> . <name2> , <name6> . <name4> = <name6> . <name2> , <name6> . <name1> , <name6> . <name4> , <name6> . <name5>
<name3> から <val4> 未満までの <val6> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name3> , <val4> , <val6> ) :	for <name5> in range ( <name3> , <val4> , <val6> ) :
<name2> ( <name4> , <name3> [ <name6> + <val1> : ] , <name5> [ <name6> + <val1> : ] ) を <name5> とする	<name5> = <name2> ( <name4> , <name3> [ <name6> + <val1> : ] , <name5> [ <name6> + <val1> : ] )	<name1> = <name2> ( <name4> , <name3> [ <name6> + <val1> : ] , <name5> [ <name6> + <val1> : ] )
<name4> の <val3> 乗に <name1> の <val3> 乗を加えた値から <name2> の <val3> 乗を引いた値を <name6> とする	<name6> = <name4> ** <val3> + <name1> ** <val3> - <name2> ** <val3>	else = <name4> ** <val3> + <name1> ** <val3> - <name2> ** <val3>
<val5> から <name6> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> , <name6> ) :	. for <name3> in range ( <val5> , <name6> ) :
<name6> の <name2> 番目から <name2> に <val1> を加えた値までの部分列の整数値が <name5> に含まれるとき、	if int ( <name6> [ <name2> : <name2> + <val1> ] ) in <name5> :	isinstance ( int ( <name6> [ <name2> : <name2> + <val1> ] ) in <name5> :
<name6> を <val4> で割った余りが <val1> と等しいとき、	if <name6> % <val4> == <val1> :	list ( <name6> % <val4> == <val1> :
<name6> が <val4> と等しいとき、 <blk> <val4> を返す </blk>	if <name6> == <val4> : <blk> return <val4> </blk>	list ( <name6> == <val4> ) : <blk> return <val4> </blk>
<name1> が <name4> ( <name6> , <name5> ) に <name3> を加えた値以下かつ <val2> が <name1> 以下かどうかを返す	return <name1> <= <name4> ( <name6> , <name5> ) + <name3> and <val2> <= <name1>	x return <name1> <= <name4> ( <name6> , <name5> ) + <name3> and <val2> <= <name1>
<val3> から <val2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val3> , <val2> ) :	continue for <name5> in range ( <val3> , <val2> ) :
<name2> が -1 と等しくかつ <name1> が -1 と等しくかつ <name6> が -1 と等しいとき、	if <name2> == - 1 and <name1> == - 1 and <name6> == - 1 :	if <name2> == - 1 and <name1> == - 1 and <name6> == - 1 :
<name1> の <name4> から <name3> を引いた値番目が <val6> と等しいとき、 <blk> <name5> の補数を <name5> とする </blk>	if <name1> [ <name4> - <name3> ] == <val6> : <blk> <name5> = ~ <name5> </blk>	\ <name5> = if <name1> [ <name4> - <name3> ] == <val6> : <blk> <name5> = ~ <name5> </blk>
<name3> の <name2> から <val5> を引いた値番目の <name1> 番目が <name4> と等しくないとき、	if <name3> [ <name2> - <val5> ] [ <name1> ] != <name4> :	!= <name3> [ <name2> - <val5> ] [ <name1> ] != <name4> :
<name6> ( <name5> , <name1> ) を <name2> とする	<name2> = <name6> ( <name5> , <name1> )	dict = <name6> ( <name5> , <name1> )
<name5> の <val3> に <val4> に <name1> に <val6> を加えた値を掛けた値を挿入する	<name5> . insert ( <val3> , <val4> * ( <name1> + <val6> ) )	<name5> . insert ( <val3> , <val4> * ( <name1> + <val6> ) )
<name5> が <name1> と等しいかどうかが <val2> と等しいとき、	if <name5> == <name1> == <val2> :	: if <name5> == <name1> == <val2> :
<name6> の末尾に <name1> の <name4> の <val3> 番目から、つまり末尾までの部分列の整数値番目を追加する	<name6> . append ( <name1> [ int ( <name4> [ <val3> : ] ) ] )	<name3> . append ( <name1> [ int ( <name4> [ <val3> : ] ) ] )
<name6> の <name1> の <name6> の <name2> の <name5> 番目番目を <name5> とする	<name5> = <name6> . <name1> [ <name6> . <name2> [ <name5> ] ]	<name5> = <name6> . <name1> [ <name6> . <name2> [ <name5> ] ]
<name5> の末尾に ( <name2> 、 <name6> 、 <name3> のコピーされた列 ) の組を追加する	<name5> . append ( ( <name2> , <name6> , <name3> [ : ] ) )	<name5> . append ( ( <name2> , <name6> , <name3> [ : ] ) )
( <val3> 、 <val4> 、 <val5> ) からなる列を <name2> とする	<name2> = [ <val3> , <val4> , <val5> ]	<name2> = [ <val3> , <val4> , <val5> ]
<name1> の <val6> 番目、 <name1> の <val4> 番目、 <name1> の <val3> 番目、 <name1> の先頭、 <name1> の <val2> 番目、 <name1> の <val5> 番目を <name1> の先頭、 <name1> の <val4> 番目、 <name1> の <val6> 番目、 <name1> の <val5> 番目、 <name1> の <val2> 番目、 <name1> の <val3> 番目とする	<name1> [ 0 ] , <name1> [ <val4> ] , <name1> [ <val6> ] , <name1> [ <val5> ] , <name1> [ <val2> ] , <name1> [ <val3> ] = <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val3> ] , <name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ]	<name1> [ 0 ] , <name1> [ <val4> ] , <name1> [ <val6> ] , <name1> [ <val5> ] , <name1> [ <val2> ] , <name1> [ <val3> ] = <name1> [ <val6> ] , <name1> [ <val4> ] , <name1> [ <val3> ] , <name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val5> ]
<name2> に <name5> を加えた値が <name4> より大きいとき、	if <name2> + <name5> > <name4> :	continue <name2> + <name5> > <name4> :
入力された文字列を <val4> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を <name3> とする	<name3> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val4> ) ]	<name3> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val4> ) ]
<name6> の <name1> 番目の末尾に <name2> を追加する	<name6> [ <name1> ] . append ( <name2> )	<name1> [ <name1> ] . append ( <name2> )
<name4> を <name6> を <name1> とするとするを <name5> とする <val2> を <name3> とする <val2> を <name5> とする	<name5> = <name1> = <name6> = <name4> <name3> = <val2> <name5> = <val2>	<name6> = <name1> = <name6> = <name4> <name3> = <val2> <name5> = <val2>
<name5> の末尾に <name5> の <name1> 番目を追加する	<name5> . append ( <name5> [ <name1> ] )	<name3> . append ( <name5> [ <name1> ] )
<name1> ( <name4> - <name5> , <name2> - <name5> ) を <name3> とする	<name3> = <name1> ( <name4> - <name5> , <name2> - <name5> )	else = <name1> ( <name4> - <name5> , <name2> - <name5> )
<name6> に <name3> に <val2> の <name5> 乗を掛けた値を加えた値を <name4> とする	<name4> = <name6> + <name3> * <val2> ** <name5>	<name4> = <name6> + <name3> * <val2> ** <name5>
<name4> . <name1> ( ) を <name6> とする	<name6> = <name4> . <name1> ( )	+ <name6> = <name4> . <name1> ( )
<name5> の <val1> 乗に <val1> に ( <name2> ** <val1> ) に ( <name5> ** <val1> ) を掛けた値に <val6> / <val4> に ( <name5> ** <val4> ) を掛けた値を加えた値の平方根を掛けた値を加えた値を <name3> とする	<name3> = <name5> ** <val1> + <val1> * math . sqrt ( ( <name2> ** <val1> ) * ( <name5> ** <val1> ) + <val6> / <val4> * ( <name5> ** <val4> ) )	<name4> = <name5> ** <val1> + <val1> * ( ( <name2> ** <val1> ) * ( <name5> ** <val1> ) + <val6> / <val4> * ( <name5> ** <val4> ) )
<name2> . <name4> ( <val3> )	<name2> . <name4> ( <val3> )	set ( <name2> . <name4> ( <val3> ) )
<name3> をソートした列を <name5> とする	<name5> = sorted ( <name3> )	<name5> = sorted ( <name3> )
<name2> の <name6> 番目の末尾に ( <name3> 、 <name4> ) の組を追加する	<name2> [ <name6> ] . append ( ( <name3> , <name4> ) )	<name2> [ <name6> ] . append ( ( <name3> , <name4> ) )
<name1> が <val2> 以上かつ - <name5> の先頭の <val6> 番目が <name3> より小さいとき、	if <name1> >= <val2> and - <name5> [ <val6> ] [ <val6> ] < <name3> :	while <name1> >= <val2> and - <name5> [ <val6> ] [ <val6> ] < <name3> :
<name1> 、 <name5> の集合と <name4> の集合の論理積の長さから <name1> を引いた値を出力する	print ( <name1> , len ( set ( <name5> ) & set ( <name4> ) ) - <name1> )	print ( <name1> , len ( set ( <name5> ) & set ( <name4> ) ) - <name1> )
書式 <name3> を <val6> でフォーマットした文字列を長さ <val2> になるように '0' 左詰めした文字列を <name1> とする	<name1> = format ( <name3> , <val6> ) . zfill ( <val2> )	<name1> = format ( <name3> , <val6> ) . zfill ( <val2> )
<name3> が <name1> 以上かつ <name2> が <name1> 以上のとき、 <blk> <name6> 、 <name1> の最大値を <name6> とする </blk>	if <name3> >= <name1> and <name2> >= <name1> : <blk> <name6> = max ( <name6> , <name1> ) </blk>	for <name6> in <name3> >= <name1> and <name2> >= <name1> : <blk> <name6> = max ( <name6> , <name1> ) </blk>
<name5> が <name6> と等しくない間、次を繰り返す	while <name5> != <name6> :	while <name5> != <name6> :
<name3> が <name5> と等しくかつ <name6> が <name4> 以下のとき、	if <name3> == <name5> and <name6> <= <name4> :	. if <name3> == <name5> and <name6> <= <name4> :
<name4> の <name3> 番目が <val5> と等しくないとき、	if <name4> [ <name3> ] != <val5> :	while <name4> [ <name3> ] != <val5> :
<val4> に <val6> に <name2> から <val1> を引いた値を掛けた値を加えた値に <val4> を加えた値を出力する	print ( <val4> + <val6> * ( <name2> - <val1> ) + <val4> )	print ( <val4> + <val6> * ( <name2> - <val1> ) + <val4> )
NNNNWNNNWNNNENNNENNNWNNN を順に <name3> として、繰り返す	for <name3> in 'NNNNWNNNWNNNENNNENNNWNNN' :	'?' , <name3> in 'NNNNWNNNWNNNENNNENNNWNNN' ' :
<val2> から <name3> の先頭の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , len ( <name3> [ 0 ] ) ) :	for <name4> in range ( len ( <name3> [ <val2> ] ) ) :
<name2> が <val6> より大きくかつ <name3> の <name5> から <val1> を引いた値番目の <name2> から <val1> を引いた値番目が <name4> と等しくないとき、	if <name2> > <val6> and <name3> [ <name5> - <val1> ] [ <name2> - <val1> ] != <name4> :	> if <name2> > <val6> and <name3> [ <name5> - <val1> ] [ <name2> - <val1> ] != <name4> :
0 から <name1> 、 <name6> から <name4> を引いた値の最小値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( min ( <name1> , <name6> - <name4> ) ) :	continue for <name3> in range ( min ( <name1> , <name6> - <name4> ) ) :
<name2> の <name4> から <val3> を引いた値番目、 <name2> の <name4> 番目を <name2> の <name4> 番目、 <name2> の <name4> から <val3> を引いた値番目とする	<name2> [ <name4> ] , <name2> [ <name4> - <val3> ] = <name2> [ <name4> - <val3> ] , <name2> [ <name4> ]	<name2> [ <name4> ] , <name2> [ <name4> - <val3> ] = <name2> [ <name4> - <val3> ] , <name2> [ <name4> ]
<name4> の <name1> の <name5> 番目を <val6> だけ増加させる	<name4> . <name1> [ <name5> ] += <val6>	<name4> . <name1> [ <name5> ] += <val6>
<name4> の <name3> の <name2> に <val6> を加えた値番目の <name5> に <val6> を加えた値番目を <name4> の <name1> で割った余りにする	<name4> . <name3> [ <name2> + <val6> ] [ <name5> + <val6> ] % = <name4> . <name1>	( <name4> . <name3> [ <name2> + <val6> ] [ <name5> + <val6> ] % = <name4> . <name1> )
<name2> のとき <val1> 、そうでなければ <val5> を出力する	print ( <val1> if <name2> else <val5> )	print ( <val1> if <name2> else <val5> )
<name3> の <val4> 番目のとき、	if <name3> [ <val4> ] :	for <name3> in <name3> [ <val4> ] :
<name5> の <name6> 番目が <val2> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name6> ] == <val2> : <blk> continue </blk>	if <name5> [ <name6> ] == <val2> : <blk> continue </blk>
<name5> . <name3> ( <name1> , ( <name6> [ <name4> ] , <name4> ) )	<name5> . <name3> ( <name1> , ( <name6> [ <name4> ] , <name4> ) )	<name4> . <name3> ( <name1> , ( <name6> [ <name4> ] , <name4> ) )
<val1> から <val2> の <name3> . <name5> に <val3> を加えた値乗から <val3> を引いた値未満までの数列の各要素を <name4> とし、 <val1> の列を <name3> の <name6> にする	<name3> . <name6> = [ <val1> for <name4> in range ( pow ( <val2> , <name3> . <name5> + <val3> ) - <val3> ) ]	<name3> . <name6> = [ <val1> for <name4> in range ( <val2> ** ( <name3> . <name5> + <val3> ) - <val3> ) ]
空列を <name4> とする <val2> を <name1> とする	<name4> = [ ] <name1> = <val2>	<name2> = [ ] <name1> = <val2>
<name4> の <val5> 番目から、つまり末尾までの部分列を順に <name2> 、 <name6> として、繰り返す	for <name2> , <name6> in <name4> [ <val5> : ] :	[ <name2> for <name6> in <name4> [ <val5> : ] :
<name3> の <name5> 番目を <name3> の <name6> 番目にする	<name3> [ <name6> ] = <name3> [ <name5> ]	<name3> [ <name6> ] = <name3> [ <name5> ]
<name3> を <name4> とする <name6> を <name1> とする	<name4> = <name3> <name1> = <name6>	<name6> = <name3> <name1> = <name6>
<val3> から <name6> 未満までの数列の各要素を <name2> とし、 <val3> から <name5> 未満までの数列の各要素を <name1> とし、 <val3> の列の列を <name4> とする	<name4> = [ [ <val3> for <name1> in range ( <name5> ) ] for <name2> in range ( <name6> ) ]	<name4> = [ [ <val3> for <name1> in range ( <name5> ) ] for <name2> in range ( <name6> ) ]
 を代わりの行末として <val4> を書式として <name1> で整形した文字列を出力する	print ( <val4> . format ( <name1> ) , end = ' ' )	print ( <val4> . format ( <name1> ) , end = ' ' )
<name4> . <name5> ( <name3> . <name2> )	<name4> . <name5> ( <name3> . <name2> )	<name1> . <name5> ( <name3> . <name2> )
<name5> の集合を <name2> とする	<name2> = set ( <name5> )	<name2> = set ( <name5> )
Case { 0 } : { 1 }を書式として <name1> 、 <name6> で整形した文字列を出力する	print ( 'Case {0}: {1}' . format ( <name1> , <name6> ) )	print ( 'Case {0}: {1}' key = 'Case ' . format ( <name1> , <name6> ) )
<name3> の末尾に <name2> の <name4> から <val1> を引いた値番目を追加する	<name3> . append ( <name2> [ <name4> - <val1> ] )	<name1> . append ( <name2> [ <name4> - <val1> ] )
<name4> の <name3> に <val2> を加えた値番目、 <name4> の <name3> 番目を <name4> の <name3> 番目、 <name4> の <name3> に <val2> を加えた値番目とする	<name4> [ <name3> ] , <name4> [ <name3> + <val2> ] = <name4> [ <name3> + <val2> ] , <name4> [ <name3> ]	<name4> [ <name3> ] , <name4> [ <name3> + <val2> ] = <name4> [ <name3> + <val2> ] , <name4> [ <name3> ]
<name3> を <name5> の <name2> 番目にする	<name5> [ <name2> ] = <name3>	( <name5> [ <name2> ] = <name3> )
<name5> の <name4> 番目が <name6> より小さいとき、	if <name5> [ <name4> ] < <name6> :	continue <name5> [ <name4> ] < <name6> :
<name5> を順に <name4> 、 <name3> 、 <name6> として、繰り返す	for <name4> , <name3> , <name6> in <name5> :	for <name4> , <name3> , <name6> in <name5> :
<name3> 、 <name5> 、 <name4> 、 <name2> 、 <name6> 、 <name1> はグローバル変数とする	global <name3> , <name5> , <name4> , <name2> , <name6> , <name1>	bisect_right ( <name3> , <name5> , <name4> , <name2> , <name6> , <name1> )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = map ( int , <name4> ( ) . split ( ) )	<name3> , <name1> = map ( int , <name4> ( ) . split ( ) )
<name4> の <name2> 乗に対する <name1> の剰余を出力する	print ( pow ( <name4> , <name2> , <name1> ) )	print ( pow ( <name4> , <name2> , <name1> ) )
<val6> が <name4> 以下かどうかが <val5> より小さくかつ <val6> が <name2> 以下かどうかが <val5> より小さいとき、	if <val6> <= <name4> < <val5> and <val6> <= <name2> < <val5> :	list ( <val6> <= <name4> < <val5> and <val6> <= <name2> < <val5> ) :
Case % d : % d を ( <name1> 、 <name3> ) の組で割った余りを出力する	print ( 'Case %d: %d' % ( <name1> , <name3> ) )	print ( 'Case %d' % ( <name1> , <name3> ) )
<name1> . <name5> ( <name3> . <name2> )	<name1> . <name5> ( <name3> . <name2> )	<name1> . <name5> ( <name3> . <name2> )
<name3> ( <name4> , <name6> , <name5> ) から <name3> ( <name2> , <name1> , <name3> ) を引いた値を出力する	print ( <name3> ( <name4> , <name6> , <name5> ) - <name3> ( <name2> , <name1> , <name3> ) )	print ( <name3> ( <name4> , <name6> , <name5> ) - <name3> ( <name2> , <name1> , <name3> ) )
<name1> の先頭を取り出した値を <name3> とする	<name3> = <name1> . <name3>	<name3> = <name1> . pop ( )
<val6> を <name5> の <name3> の <name1> 番目にする	<name5> . <name3> [ <name1> ] = <val6>	<name3> . <name1> = <val6>
( <val4> 、 <val4> 、 <val4> ) からなる列を <name5> とする	<name5> = [ <val4> , <val4> , <val4> ]	<name5> = [ <val4> , <val4> , <val4> ]
<name6> の <name5> 番目、 <name6> の <name1> 番目を <name6> の <name1> 番目、 <name6> の <name5> 番目とする	<name6> [ <name1> ] , <name6> [ <name5> ] = <name6> [ <name5> ] , <name6> [ <name1> ]	<name6> [ <name1> ] , <name6> [ <name5> ] = <name6> [ <name5> ] , <name6> [ <name1> ]
<name1> . <name4> ( <name6> * <val2> + <val5> , <name3> , ( <name1> + <name3> ) // <val2> )	<name1> . <name4> ( <name6> * <val2> + <val5> , <name3> , ( <name1> + <name3> ) // <val2> )	<name2> . <name4> ( <name6> * <val2> + <val5> , <name3> , ( <name1> + <name3> ) // <val2> )
<val1> が <name6> 以下かどうかが <name5> より小さくかつ <val1> が <name3> 以下かどうかが <name2> より小さくかつ <name4> の <name6> 番目の <name3> 番目が <name1> と等しいとき、	if <val1> <= <name6> < <name5> and <val1> <= <name3> < <name2> and <name4> [ <name6> ] [ <name3> ] == <name1> :	list ( <val1> <= <name6> < <name5> and <val1> <= <name3> < <name2> and <name4> [ <name6> ] [ <name3> ] == <name1> :
\ <name3> ( <val4> % <name6> ) \	\ <name3> ( <val4> % <name6> ) \	) <name3> ( <val4> % <name6> ) \
<name5> の <name3> の各要素を <name6> とし、 <name6> の長さの列を <name2> とする	<name2> = [ len ( <name6> ) for <name6> in <name5> . <name3> ]	<name6> = [ len ( <name6> ) for <name6> in <name5> . <name3> ]
0 から <name3> に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> + <val5> ) :	( <name6> in range ( <name3> + <val5> ) :
( <name3> ( <name1> ) 、 <name3> ( <name1> ) ) の組を一旦、返す	yield ( <name3> ( <name1> ) , <name3> ( <name1> ) )	global ( <name3> ( <name1> ) , <name3> ( <name1> ) )
( ( <name2> に <name1> に <name6> を掛けた値を <name5> で割った値を加えた値、 <name4> に <name3> に <name6> を掛けた値を <name5> で割った値を加えた値 ) の組、 <name2> に <name1> を掛けた値を <name6> で割った値 ) の組を返す	return ( ( <name2> + <name1> * <name6> / <name5> , <name4> + <name3> * <name6> / <name5> ) , <name2> * <name1> / <name6> )	return ( <name2> + <name1> * <name6> / <name5> , <name4> + <name3> * <name6> / <name5> , <name2> * <name1> / <name6> )
0 から <name6> の長さから <val1> を引いた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name6> ) - <val1> ) :	. for <name5> in range ( len ( <name6> ) - <val1> ) :
( <name6> の <name4> 、 <name6> の <name2> ) の組を返す	return ( <name6> . <name4> , <name6> . <name2> )	yield ( <name6> . <name4> , <name6> . <name2> )
( <val5> ) からなる列の <name3> に <val4> を加えた値回分の列を <name1> とする	<name1> = [ <val5> ] * ( <name3> + <val4> )	<name1> = [ <val5> ] * ( <name3> + <val4> )
<name2> の <val3> 乗に対する <name5> の剰余を <name2> とする	<name2> = pow ( <name2> , <val3> , <name5> )	<name6> = pow ( <name2> , <val3> , <name5> )
<name1> を <name4> の <name2> 番目の <name6> にする	<name4> [ <name2> ] . <name6> = <name1>	( <name4> [ <name2> ] . <name6> = <name1> )
<val6> から <val6> を <name5> だけ左シフトした値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val6> , <val6> << <name5> ) :	continue in range ( <val6> , <val6> << <name5> ) :
<name1> が <name2> の <val4> 番目より小さいとき、	if <name1> < <name2> [ <val4> ] :	: if <name1> < <name2> [ <val4> ] :
<name3> ( ( <name1> . <name5> * <name1> . <name5> + <name4> * <name4> - <name6> . <name5> * <name6> . <name5> ) / ( <val2> * <name1> . <name5> * <name4> ) ) を <name2> とする	<name2> = <name3> ( ( <name1> . <name5> * <name1> . <name5> + <name4> * <name4> - <name6> . <name5> * <name6> . <name5> ) / ( <val2> * <name1> . <name5> * <name4> ) )	<name2> = <name3> ( ( <name1> . <name5> * <name1> . <name5> + <name4> * <name4> - <name6> . <name5> * <name6> . <name5> ) / ( <val2> * <name1> . <name5> * <name4> ) )
<name6> 、 <name5> の最小値を <name5> とする	<name5> = min ( <name6> , <name5> )	<name4> = min ( <name6> , <name5> )
<val4> が <name6> 以下かどうかが <name1> より小さくなくまたは <val4> が <name5> 以下かどうかが <name3> より小さくなくまたは <val4> が <name2> 以下かどうかが <name4> より小さくないとき、	if not <val4> <= <name6> < <name1> or not <val4> <= <name5> < <name3> or not <val4> <= <name2> < <name4> :	isinstance ( <val4> <= <name6> < <name1> ) or not <val4> <= <name5> < <name3> or not <val4> <= <name2> < <name4> :
<name5> の長さのとき、 <blk> <name5> の <val6> を取り出した値を <name3> とする </blk>	if len ( <name5> ) : <blk> <name3> = <name5> . pop ( <val6> ) </blk>	while len ( <name5> ) : <blk> <name3> = <name5> . pop ( <val6> ) </blk>
<name2> の <name6> 番目が <name2> の <name1> 番目より小さいとき、	if <name2> [ <name6> ] < <name2> [ <name1> ] :	raise <name2> [ <name6> ] < <name2> [ <name1> ] :
<val1> の浮動小数点数を <name3> とする	<name3> = float ( <val1> )	<name3> = float ( <val1> )
<name5> ( <name4> * <name2> . <name1> , <name4> * <name2> . <name6> ) を返す	return <name5> ( <name4> * <name2> . <name1> , <name4> * <name2> . <name6> )	yield <name5> ( <name4> * <name2> . <name1> , <name4> * <name2> . <name6> )
<name4> に <val1> を掛けた値を <name4> とする	<name4> = <name4> * <val1>	<name4> = <name4> * <val1>
<name2> に番号付した組の列の各要素を <name1> 、 <name3> とし、 <name1> に <name3> を加えた値の列の集合の長さが <val4> と等しくないとき、 <blk> 最初からもう一度、繰り返す </blk>	if len ( set ( [ <name1> + <name3> for <name1> , <name3> in enumerate ( <name2> ) ] ) ) != <val4> : <blk> continue </blk>	for <name1> , <name3> in enumerate ( set ( [ <name1> + <name3> for <name1> , <name3> in enumerate ( <name2> ) ] ) ) != <val4> : <blk> continue </blk>
<name5> ( <name6> , ( <val4> , <val4> , <name1> , <name3> , <val4> ) )	<name5> ( <name6> , ( <val4> , <val4> , <name1> , <name3> , <val4> ) )	<name5> ( <name6> , ( <val4> , <val4> , <name1> , <name3> , <val4> ) )
<name5> を <val1> で割った商が <name6> を <val1> で割った余りを <val2> で割った商と等しくまたは <name5> を <val1> で割った商が <name6> を <val2> で割った余りを <val4> で割った商と等しくまたは <name5> を <val1> で割った商が <name6> を <val4> で割った余りと等しいとき、	if <name5> // <val1> == ( <name6> % <val1> ) // <val2> or <name5> // <val1> == ( <name6> % <val2> ) // <val4> or <name5> // <val1> == <name6> % <val4> :	for ( <name5> // <val1> == ( <name6> // <val1> ) // <val2> or <name5> // <val1> == ( <name6> % <val2> ) // <val4> ) or ( <name5> // <val1> ) // ( <name6> % <val4> ) :
<name6> の <name3> が <name5> の <name3> より小さいかどうかを返す	return <name6> . <name3> < <name5> . <name3>	x return <name6> . <name3> < <name5> . <name3>
<name6> を <name5> で割った商を <name2> とする	<name2> = <name6> // <name5>	( <name2> = <name6> // <name5> )
<name1> の <name3> 番目の <name4> 番目を <name2> とする	<name2> = <name1> [ <name3> ] [ <name4> ]	<name2> = <name1> [ <name3> ] [ <name4> ]
<name6> に <val4> を加えた値が <name2> より小さいとき、 <blk> <name1> の末尾に ( <name3> 、 <name5> 、 <name6> に <val4> を加えた値 ) からなる列を追加する </blk>	if <name6> + <val4> < <name2> : <blk> <name1> . append ( [ <name3> , <name5> , <name6> + <val4> ] ) </blk>	if <name6> + <val4> < <name2> : <blk> <name1> . append ( [ <name3> , <name5> , <name6> + <val4> ] ) </blk>
<name6> の末尾に <name2> の -2 番目を追加する	<name6> . append ( <name2> [ - 2 ] )	<name3> . append ( <name2> [ - 2 ] )
( <val5> 、 <val3> 、 -1 、 <val3> ) の組を <name4> とする	<name4> = ( <val5> , <val3> , - <val5> , <val3> )	<name6> = ( <val5> , <val3> , - <val5> , <val3> )
書式 <name1> を <val6> でフォーマットした文字列を出力する	print ( format ( <name1> , <val6> ) )	print ( format ( <name1> , <val6> ) )
<name4> を入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストだけ増加させる	<name4> += list ( map ( str , input ( ) . split ( ) ) )	<name4> += list ( map ( int , input ( ) . split ( ) ) )
<name6> から <name4> の <name3> を引いた値の絶対値を返す	return abs ( <name6> - <name4> . <name3> )	self return abs ( <name6> - <name4> . <name3> )
<name6> ( <name4> -1 , <name5> - ( <name3> * <name4> ) , <name1> )	<name6> ( <name4> - 1 , <name5> - ( <name3> * <name4> ) , <name1> )	<name6> ( <name4> - 1 , <name5> - ( <name3> * <name4> ) , <name1> )
( ( <name2> , <name3> の各要素を <name2> とし、 <val1> の列 ) ) からなる辞書を <name4> とする	<name4> = { <name2> : [ <val1> for <name2> in <name3> ] }	{ <name2> : [ <val1> for <name2> in <name3> ] }
<name6> の <name2> 番目を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name6> [ <name2> ]	<name4> [ <name1> ] = <name6> [ <name2> ]
<name4> の末尾に <name5> ( <name6> ) を追加する	<name4> . append ( <name5> ( <name6> ) )	<name4> . append ( <name5> ( <name6> ) )
<name2> に <name1> を掛けた値を <name3> とする	<name3> = <name2> * <name1>	( <name3> = <name2> * <name1> )
( -1 、 <name5> ) の組を <name3> の <name1> の <name3> の <name4> に <name6> を加えた値から <val2> を引いた値番目にする	<name3> . <name1> [ <name3> . <name4> + <name6> - <val2> ] = ( - <val2> , <name5> )	<name3> . <name1> [ <name3> . <name4> + <name6> - <val2> ] = ( - <val2> , <name5> )
<val1> に <name2> を掛けた値に <val4> に <name6> を掛けた値を加えた値に <name3> を加えた値を <name5> とする	<name5> = <val1> * <name2> + <val4> * <name6> + <name3>	( <name5> = <val1> * <name2> ) + ( <val4> * <name6> + <name3> )
<name5> から <name2> を引いた値を <name4> とする	<name4> = <name5> - <name2>	<name6> = <name5> - <name2>
( <val1> ) からなる列の <name2> に <val6> を加えた値回分の列を <name5> とする	<name5> = [ <val1> ] * ( <name2> + <val6> )	<name5> = [ <val1> ] * ( <name2> + <val6> )
0 から <name2> 未満までの数列の各要素を <name1> とし、 ( <name1> + <val5> ) に ( <name3> [ <name1> ] + <name4> [ <name6> ] ) を掛けた値に ( <name2> - <name1> ) に <name4> [ <name2> - <name1> -1 ] [ <name6> -1 ] を掛けた値を加えた値を <name2> に <val5> を加えた値で割った値の列の最小値を <name4> の <name2> 番目の <name6> 番目にする	<name4> [ <name2> ] [ <name6> ] = min ( [ ( ( <name1> + <val5> ) * ( <name3> [ <name1> ] + <name4> [ <name6> ] ) + ( <name2> - <name1> ) * <name4> [ <name2> - <name1> - <val5> ] [ <name6> - <val5> ] ) / ( <name2> + <val5> ) for <name1> in range ( <name2> ) ] )	<name4> [ <name2> ] = min ( [ ( <name1> + <val5> ) * ( <name3> [ <name1> ] + <name4> [ <name6> ] ) + ( <name2> - <name1> ) * ( <name4> [ <name2> - <name1> - <val5> ] [ <name6> - <val5> ] ) / ( <name2> + <val5> ) for <name1> in range ( <name2> ) ] )
<name5> を <name6> で割った値の整数値を <name4> とする	<name4> = int ( <name5> / <name6> )	<name4> = int ( <name5> / <name6> )
<name3> を <name6> の <val5> 番目とするを <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name6> [ <val5> ] = <name3>	<name4> [ <val5> ] = <name6> [ <val5> ] = <name3>
<name3> を <name1> の <name2> に <name5> を加えた値番目にする	<name1> [ <name2> + <name5> ] = <name3>	( <name1> [ <name2> + <name5> ] = <name3> )
<name3> の <name2> 番目でない間、次を繰り返す	while not <name3> [ <name2> ] :	while not <name3> [ <name2> ] :
<name6> の <name1> の <name2> 番目を <name6> の <name1> の <name3> 番目にする	<name6> . <name1> [ <name3> ] = <name6> . <name1> [ <name2> ]	<name2> . <name1> [ <name3> ] = <name6> . <name1> [ <name2> ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> の <name2> 番目、 <name4> の <name2> 番目、 <name3> の <name2> 番目とする	<name5> [ <name2> ] , <name4> [ <name2> ] , <name3> [ <name2> ] = map ( int , input ( ) . split ( ) )	<name4> [ <name2> ] , <name4> [ <name2> ] , <name3> [ <name2> ] = map ( int , input ( ) . split ( ) )
#を <name5> の <name1> 番目の <val3> 番目にする	<name5> [ <name1> ] [ <val3> ] = '#'	( <name5> [ <name1> ] [ <val3> ] = '#' )
<name5> . <name2> ( <name1> [ <val4> ] , <val6> ) に <name5> . <name2> ( <name1> [ <val3> ] , <val6> ) を加えた値が <name5> . <name2> ( <name1> [ <val6> ] , <val6> ) と等しいとき、	if <name5> . <name2> ( <name1> [ <val4> ] , <val6> ) + <name5> . <name2> ( <name1> [ <val3> ] , <val6> ) == <name5> . <name2> ( <name1> [ <val6> ] , <val6> ) :	list ( <name5> . <name2> ( <name1> [ <val4> ] , <val6> ) + <name5> . <name2> ( <name1> [ <val3> ] , <val6> ) ) == <name5> . <name2> ( <name1> [ <val6> ] , <val6> ) :
<name3> が <name6> から <val4> を引いた値より小さくかつ <name1> の <name2> に <name5> を加えた値番目が <val3> と等しくないとき、	if <name3> < ( <name6> - <val4> ) and <name1> [ <name2> + <name5> ] != <val3> :	raise <name3> < ( <name6> - <val4> ) and <name1> [ <name2> + <name5> ] != <val3> :
<name2> の <name6> を <name6> とする <name2> の <name5> を <name5> とする	<name6> = <name2> . <name6> <name5> = <name2> . <name5>	<name1> = <name2> . <name6> <name5> = <name2> . <name5>
{ : . 8 f }を書式として <name1> ( <name2> , <name5> , <name6> ) で整形した文字列を出力する	print ( '{:.8f}' . format ( <name1> ( <name2> , <name5> , <name6> ) ) )	input ( ) . format ( <name1> ( <name2> , <name5> , <name6> ) ) )
<name6> ( <name5> [ <name3> ] )	<name6> ( <name5> [ <name3> ] )	set ( <name6> ( <name5> [ <name3> ] ) )
0 から <val3> に <name2> を掛けた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> * <name2> ) :	) for <name4> in range ( <val3> * <name2> ) :
<name6> ( <name4> , <name2> ( <name3> , <name1> -1 - <name3> ) )	<name6> ( <name4> , <name2> ( <name3> , <name1> - 1 - <name3> ) )	set ( <name6> ( <name4> , <name2> ( <name3> , <name1> - 1 - <name3> ) ) )
<name6> に <name3> を掛けた値を <name2> で割った余りを <name6> とするを <name4> の <name3> 番目にする	<name4> [ <name3> ] = <name6> = <name6> * <name3> % <name2>	bit_length [ <name4> ] = <name6> = <name6> * <name3> % <name2>
( <name2> の <name1> ) からなる列の <val5> に <name2> の <name6> を掛けた値から <val4> を引いた値回分の列を <name2> の <name3> にする	<name2> . <name3> = [ <name2> . <name1> ] * ( <val5> * <name2> . <name6> - <val4> )	<name6> . <name3> = [ <name2> . <name1> ] * ( <val5> * <name2> . <name6> - <val4> )
- <name3> が <name1> の <name4> 以下かどうかが <name3> 以下かつ - <name3> が <name1> の <name2> 以下かどうかが <name3> 以下かどうかを返す	return - <name3> <= <name1> . <name4> <= <name3> and - <name3> <= <name1> . <name2> <= <name3>	x return - <name3> <= <name1> . <name4> <= <name3> and - <name3> <= <name1> . <name2> <= <name3>
<name1> の文字列を返す	return str ( <name1> )	yield str ( <name1> )
<name3> ( [ <val5> ** <val6> ] * <name2> . <name4> ) を <name1> とする	<name1> = <name3> ( [ <val5> ** <val6> ] * <name2> . <name4> )	<name1> = <name3> ( [ <val5> ** <val6> ] * <name2> . <name4> )
<name6> の <name4> に <val2> を掛けた値に <val1> を加えた値番目、 <name6> の <name4> に <val2> を掛けた値に <val2> を加えた値番目の最小値を <name6> の <name4> 番目にする	<name6> [ <name4> ] = min ( <name6> [ <name4> * <val2> + <val1> ] , <name6> [ <name4> * <val2> + <val2> ] )	else [ <name4> ] = min ( <name6> [ <name4> * <val2> + <val1> ] , <name6> [ <name4> * <val2> + <val2> ] )
<name6> が <name3> の長さから <val1> を引いた値と等しいとき、 <blk> <val1> を返す </blk>	if <name6> == len ( <name3> ) - <val1> : <blk> return <val1> </blk>	\ if <name6> == len ( <name3> ) - <val1> : <blk> return <val1> </blk>
<name2> の <name6> の文字列が <name1> に含まれないとき、	if str ( <name2> . <name6> ) not in <name1> :	sum ( <name2> . <name6> ) not in <name1> :
<name3> の末尾に ( 、つまり無限の整数列、 <name1> ) の組を追加する	<name3> . append ( ( count , <name1> ) )	<name4> . append ( ( count , <name1> ) )
0 から <name6> 未満までの数列の各要素を <name1> とし、 <name2> ( ) の両端から空白改行を取り除いた文字列の列を <name5> とする	<name5> = [ <name2> ( ) . strip ( ) for <name1> in range ( <name6> ) ]	<name5> = [ <name2> ( ) . strip ( ) for <name1> in range ( <name6> ) ]
<name6> の <name4> 番目の <name1> 番目、 <name6> の <name4> 番目の <name2> 番目に <name6> の <name2> + <val3> 番目の <name1> 番目を加えた値に <name5> の <name4> -1 番目に <name5> の <name2> 番目を掛けた値に <name5> の <name1> 番目を掛けた値を加えた値の最小値を <name6> の <name4> 番目の <name1> 番目にする	<name6> [ <name4> ] [ <name1> ] = min ( <name6> [ <name4> ] [ <name1> ] , <name6> [ <name4> ] [ <name2> ] + <name6> [ <name2> + <val3> ] [ <name1> ] + <name5> [ <name4> - <val3> ] * <name5> [ <name2> ] * <name5> [ <name1> ] )	<name5> [ <name4> ] [ <name1> ] = min ( <name6> [ <name4> ] [ <name1> ] , <name6> [ <name4> ] [ <name2> ] + <name6> [ <name2> + <val3> ] [ <name1> ] + <name5> [ <name4> - <val3> ] * <name5> [ <name2> ] * <name5> [ <name1> ] )
<name2> ( <name4> ) に <val6> を加えた値に <name3> の文字列を加えた値に <val5> を加えた値に <name4> に <name3> を掛けた値の文字列を加えた値を出力する	print ( <name2> ( <name4> ) + <val6> + <name2> ( <name3> ) + <val5> + <name2> ( <name4> * <name3> ) )	[ print ( <name2> ( <name4> ) + <val6> + str ( <name3> ) + <val5> ) + str ( <name4> * <name3> ) )
<val1> に <name3> に <name6> を <val2> で割った値を掛けた値を加えた値を <name4> とする	<name4> = <val1> + <name3> * ( <name6> / <val2> )	<name4> = <val1> + <name3> * ( <name6> / <val2> )
0 から <name1> 未満までの数列を順に <name2> として、繰り返す <blk> 入力された文字列を <name6> の <name2> 番目にする </blk>	for <name2> in range ( <name1> ) : <blk> <name6> [ <name2> ] = input ( ) </blk>	try : for <name2> in range ( <name1> ) : <blk> <name6> [ <name2> ] = input ( ) </blk>
<name6> に <name4> を加えた値を <val2> で割った商を <name3> とする	<name3> = ( <name6> + <name4> ) // <val2>	<name3> = ( <name6> + <name4> ) // <val2>
0 から <name3> 未満までの数列の逆順を順に <name1> として、繰り返す	for <name1> in range ( <name3> ) [ : : - 1 ] :	. <name1> in range ( <name3> ) [ : : - 1 ] :
<name4> を <name3> の <name1> 番目だけ増加させる	<name4> += <name3> [ <name1> ]	( <name4> += <name3> [ <name1> ] )
<name1> の末尾を <name6> とする	<name6> = <name1> [ - 1 ]	( <name6> = <name1> [ - 1 ] )
入力された文字列を <val4> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val4> ) ]	<name1> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val4> ) ]
<name2> から読み込んだ一行の浮動小数点数を <name4> とする	<name4> = float ( <name2> . readline ( ) )	<name4> = float ( <name2> . readline ( ) )
os . <name1> の -1 番目が <val2> と等しいとき、	if <name1> [ - 1 ] == <val2> :	continue <name1> [ - 1 ] == <val2> :
<val4> が <name1> 以下かどうかが <name5> より小さくないとき、	if not <val4> <= <name1> < <name5> :	isinstance ( <val4> <= <name1> < <name5> ) :
( <val1> 、 <val2> 、 <val5> 、 <val3> ) からなる列を <name4> とする	<name4> = [ <val1> , <val2> , <val5> , <val3> ]	<name6> = [ <val1> , <val2> , <val5> , <val3> ]
真を <name1> の <name6> 番目の <name2> 番目の先頭にする	<name1> [ <name6> ] [ <name2> ] [ 0 ] = True	( <name1> [ <name6> ] [ <name2> ] [ 0 ] = True )
空辞書を <name1> の <name5> にする	<name1> . <name5> = { }	( <name1> . <name5> = { } )
<val3> を <name1> だけ左シフトした値を <name6> とする	<name6> = <val3> << <name1>	( <name6> = <val3> << <name1> )
入力された文字列を <val4> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name3> とする	<name2> , <name3> = map ( float , input ( ) . split ( <val4> ) )	<name2> , <name3> = map ( float , input ( ) . split ( <val4> ) )
<name5> を空白で分割した字句列の各要素を <name4> とし、 <name4> の浮動小数点数の列を <name3> とする	<name3> = [ float ( <name4> ) for <name4> in <name5> . split ( ) ]	<name3> = [ float ( <name4> ) for <name4> in <name5> . split ( ) ]
入力された文字列内の <val4> を <val1> で置き換えた文字列、 <val5> 、 <val6> を <name6> 、 <name3> 、 <name2> とする	<name6> , <name3> , <name2> = input ( ) . replace ( <val4> , <val1> ) , <val5> , <val6>	<name3> , <name2> = input ( ) . replace ( <val4> , <val1> ) , <val5> , <val6>
( ( <name3> , 真 ) ) からなる辞書を <name6> とする	<name6> = { <name3> : True }	<name6> = { <name3> : True }
<name2> の <name2> の <name1> 番目の <name1> 番目でないとき、	if not <name2> . <name2> [ <name1> ] [ <name1> ] :	if not <name2> [ <name2> [ <name1> ] [ <name1> ] :
<name3> の総和を <name6> で割った商の整数値を <name1> とする	<name1> = int ( sum ( <name3> ) // <name6> )	<name1> = int ( sum ( <name3> ) // <name6> )
( <val5> ) からなる列の両端キューを <name4> とする	<name4> = deque ( [ <val5> ] )	<name4> = deque ( [ <val5> ] )
<name5> の末尾に ( <name2> に <val1> を加えた値、 <name4> に <val1> を加えた値 ) の組を追加する	<name5> . append ( ( <name2> + <val1> , <name4> + <val1> ) )	<name5> . append ( ( <name2> + <val1> , <name4> + <val1> ) )
<name4> の先頭に <name1> を追加する	<name4> . appendleft ( <name1> )	( <name4> [ 0 ] . add ( <name1> ) )
( <val3> ) からなる列に ( <val1> ) からなる列の <name5> 回分の列を加えた値を <name6> とする	<name6> = [ <val3> ] + [ <val1> ] * <name5>	<name6> = [ <val3> ] + [ <val1> ] * <name5>
<name5> が <name2> より小さくかつ <name2> が <name3> より小さいとき、	if <name5> < <name2> and <name2> < <name3> :	: if <name5> < <name2> and <name2> < <name3> :
<name1> から <name4> を引いた値が <name3> 以下のとき <val6> 、 <name1> から <name4> を引いた値の最大値、そうでなければ <val2> を出力する	print ( max ( <val6> , <name1> - <name4> ) if <name1> - <name4> <= <name3> else <val2> )	print ( max ( <val6> , <name1> - <name4> ) if <name1> - <name4> <= <name3> else <val2> )
<name6> が <name2> から <val3> を引いた値と等しいとき、	if <name6> == <name2> - <val3> :	> <name6> == <name2> - <val3> :
<name5> を <name2> の <name1> 番目だけ減少させる	<name5> -= <name2> [ <name1> ]	( <name5> -= <name2> [ <name1> ] )
<name4> ( ) の最大値または <val6> を出力する	print ( max ( <name4> ( ) ) or <val6> )	print ( max ( <name4> ( ) ) or <val6> )
<name4> に ( <name3> 、 - <name6> から <val1> を引いた値 ) の組を追加した集まり	<name4> . add ( ( <name3> , - <name6> - <val1> ) )	<name4> . add ( ( <name3> , - <name6> - <val1> ) )
<name5> ( <name6> , <name3> ) が <val1> より小さいとき、	if <name5> ( <name6> , <name3> ) < <val1> :	list ( <name5> ( <name6> , <name3> ) < <val1> :
<name6> の y 座標から <name1> の y 座標を引いた値を <name5> の y 座標にする	<name5> . y = <name6> . y - <name1> . y	<name4> . <name5> = <name6> . y - <name1> . y
<name6> の先頭に <name4> の <val3> 番目を追加する	<name6> . appendleft ( <name4> [ <val3> ] )	<name1> . appendleft ( <name4> [ <val3> ] )
<val6> が <name2> より小さいかどうかが <name1> より小さいとき、	if <val6> < <name2> < <name1> :	if <val6> < <name2> < <name1> :
<name6> を <name4> の、つまり先頭から <name1> 番目までの部分列の総和だけ増加させる	<name6> += sum ( <name4> [ : <name1> ] )	set <name6> += sum ( <name4> [ : <name1> ] )
<name6> の <name1> から <val4> を引いた値から <name1> に <name3> を加えた値から <val4> を引いた値までの部分列が ( <val2> ) からなる列の <name3> 回分の列と等しくないとき、	if <name6> [ <name1> - <val4> : <name1> + <name3> - <val4> ] != [ <val2> ] * <name3> :	for <name6> in <name6> [ <name1> - <val4> : <name1> + <name3> - <val4> ] != [ <val2> ] * <name3> :
<name3> の末尾に ( <name6> 、 <name5> から <val2> を引いた値、 <name1> から <val2> を引いた値 ) の組を追加する	<name3> . append ( ( <name6> , <name5> - <val2> , <name1> - <val2> ) )	<name2> . append ( ( <name6> , <name5> - <val2> , <name1> - <val2> ) )
<name2> の <name6> と等しい要素の最初の位置、 <name2> の <name4> と等しい要素の最初の位置の最小値を <name5> とする	<name5> = min ( <name2> . index ( <name6> ) , <name2> . index ( <name4> ) )	else = min ( <name2> . index ( <name6> ) , <name2> . index ( <name4> ) )
( 、つまり未定値 ) からなる列の <name3> の <name6> 回分の列を <name3> の <name2> にする	<name3> . <name2> = [ None ] * <name3> . <name6>	<name3> . <name2> = [ None ] * <name3> . <name6>
<name6> の <name4> の <name3> 番目の <name5> から <val1> を引いた値乗に対する <name5> の剰余を <name6> の <name2> の <name3> 番目にする	<name6> . <name2> [ <name3> ] = pow ( <name6> . <name4> [ <name3> ] , <name5> - <val1> , <name5> )	<name2> [ <name3> ] = pow ( <name6> . <name4> [ <name3> ] , <name5> - <val1> , <name5> )
<name2> を <name4> の <name6> の <name3> 番目にする	<name4> [ <name6> . <name3> ] = <name2>	( <name4> . <name6> [ <name3> ] = <name2> )
<name3> が <name2> に <val1> を加えた値以下かどうかが <name4> 以下のとき、	if <name3> <= <name2> + <val1> <= <name4> :	list ( <name3> <= <name2> + <val1> <= <name4> ) :
<name5> の先頭を取り出した値を出力する	print ( <name5> . pop ( ) )	print ( <name5> . pop ( ) )
<name4> を <name3> の <name5> 番目の <val1> 番目にする	<name3> [ <name5> ] [ <val1> ] = <name4>	( <name3> [ <name5> ] [ <val1> ] = <name4> )
<name6> ( <name2> , <name4> , <name5> , <name1> )	<name6> ( <name2> , <name4> , <name5> , <name1> )	set ( <name6> ( <name2> , <name4> , <name5> , <name1> ) )
<name2> が <name5> より小さいとき、 <blk> <name1> の <name4> 番目の先頭を <name5> とする </blk>	if <name2> < <name5> : <blk> <name5> = <name1> [ <name4> ] [ 0 ] </blk>	for <name5> in <name2> < <name5> : <blk> <name5> = <name1> [ <name4> ] [ 0 ] </blk>
関数 <name3> を <name2> 、 <name5> をパラメータとして定義する <name2> の x 座標に <name5> の x 座標を掛けた値に <name2> の y 座標に <name5> の y 座標を掛けた値を加えた値を返す	def <name3> ( <name2> , <name5> ) : return ( <name2> . x * <name5> . x + <name2> . y * <name5> . y )	try : <name3> ( <name2> . <name5> ) : return <name2> . x * <name5> . x + <name2> . <name5> . y
<name5> の <name3> の <name1> 番目を <val6> だけ増加させる	<name5> . <name3> [ <name1> ] += <val6>	<name4> . <name3> [ <name1> ] += <val6>
<name5> が <name1> の - <name3> 番目から、つまり末尾までの部分列と等しいとき、	if <name5> == <name1> [ - <name3> : ] :	[ if <name5> == <name1> [ - <name3> : ] :
0 から <name6> 未満までの数列の各要素を <name3> とし、 <name4> . <name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の組の列の組を <name2> とする	<name2> = tuple ( [ tuple ( map ( int , <name4> . <name1> ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ] )	<name2> = tuple ( [ tuple ( map ( int , <name4> . <name1> ( ) . split ( ) ) ) for <name3> in range ( <name6> ) ] )
<name3> を <val1> で割った余りの文字列を長さ <val4> になるように '0' 左詰めした文字列を <name2> とする	<name2> = str ( <name3> % <val1> ) . zfill ( <val4> )	<name2> = str ( <name3> % <val1> ) . zfill ( <val4> )
<name6> の <name4> 番目の <name5> 番目が <name1> と等しいとき、 <blk> <name3> の <name4> 番目の <name5> 番目を <val2> との論理和にする </blk>	if <name6> [ <name4> ] [ <name5> ] == <name1> : <blk> <name3> [ <name4> ] [ <name5> ] | = <val2> </blk>	\ if <name6> [ <name4> ] [ <name5> ] == <name1> : <blk> <name3> [ <name4> ] [ <name5> ] | = <val2> </blk>
wrong_answer を出力する	print ( 'wrong_answer' )	dict print ( 'LIMIT_OVER' ' )
<name4> の <val6> 番目に <name4> の <val2> 番目を加えた値に <name4> の <val5> 番目を加えた値を <name1> で割った余りを <name3> とする	<name3> = ( <name4> [ <val6> ] + <name4> [ <val2> ] + <name4> [ <val5> ] ) % <name1>	<name3> = ( <name4> [ <val6> ] + <name4> [ <val2> ] + <name4> [ <val5> ] ) % <name1>
<name4> . <name3> ( <name2> . <name5> )	<name4> . <name3> ( <name2> . <name5> )	<name2> . <name3> ( <name2> . <name5> )
<name3> ( <name5> ) を <name5> とする	<name5> = <name3> ( <name5> )	else = <name3> ( <name5> )
<name5> の末尾に <name6> の <val3> 番目から、つまり末尾までの部分列を追加する	<name5> . append ( <name6> [ <val3> : ] )	) <name5> . append ( <name6> [ <val3> : ] )
<val3> を <name2> の <name5> 番目の <name5> 番目にする	<name2> [ <name5> ] [ <name5> ] = <val3>	( <name2> [ <name5> ] [ <name5> ] = <val3> )
<name2> の <name4> 番目の <name5> 番目を <name1> とする	<name1> = <name2> [ <name4> ] [ <name5> ]	<name1> = <name2> [ <name4> ] [ <name5> ]
- <name4> に <name2> を加えた値から <name4> に <name2> を加えた値未満までの数列の各要素を <name6> とし、 <name3> [ <name6> ] から <name5> ( <name4> * <name4> - ( <name6> - <name2> + ( <name6> < <name2> ) ) * ( <name6> - <name2> + ( <name6> < <name2> ) ) ) を引いた値に <name4> を加えた値の列の最小値を出力する	print ( min ( [ <name3> [ <name6> ] - <name5> ( <name4> * <name4> - ( <name6> - <name2> + ( <name6> < <name2> ) ) * ( <name6> - <name2> + ( <name6> < <name2> ) ) ) + <name4> for <name6> in range ( - <name4> + <name2> , <name4> + <name2> ) ] ) )	<name6> = min ( [ <name3> [ <name6> ] - <name5> ( <name4> * <name4> - ( <name6> - <name2> + <name2> ) * ( <name6> - <name2> + ( <name6> - <name2> ) ) * ( <name6> - <name2> ) * ( <name2> + <name6> + <name2> ) ) + ( <name6> + <name2> + <name4> + <name2> ) for <name6> in <name4> ] ) )
<name4> に <name5> の文字列を加えた値に <val3> を加えた値に <val1> を加えた値を出力する	print ( <name4> + str ( <name5> ) + <val3> + <val1> )	print ( <name4> + str ( <name5> ) + <val3> + <val1> )
<name3> が <name6> の <name3> 番目と等しくない間、次を繰り返す	while <name3> != <name6> [ <name3> ] :	for <name3> in <name3> != <name6> [ <name3> ] :
<val1> を <name2> で割った商を <name5> とする	<name5> = <val1> // <name2>	<name5> = <val1> // <name2>
<name2> の <name6> の先頭番目の末尾に <name6> を追加する	<name2> [ <name6> [ 0 ] ] . append ( <name6> )	<name1> [ <name6> [ 0 ] ] . append ( <name6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name1> 、 <name6> とする	<name2> , <name5> , <name1> , <name6> = map ( int , input ( ) . split ( ) )	<name5> , <name1> , <name6> = map ( int , input ( ) . split ( ) )
<name5> に <name2> を加えた値に <name1> の <name4> 番目が <val6> と等しくないかどうかを加えた値を <name3> とする	<name3> = <name5> + <name2> + ( <name1> [ <name4> ] != <val6> )	<name3> = <name5> + <name2> + ( <name1> [ <name4> ] != <val6> )
<val3> から <name4> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <val3> から <name4> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <val3> の列の列を <name2> の <name1> にする	<name2> . <name1> = [ [ <val3> for <name5> in range ( <name4> + <val6> ) ] for <name2> in range ( <name4> + <val6> ) ]	<name6> . <name1> = [ [ <val3> for <name5> in range ( <name4> + <val6> ) ] for <name2> in range ( <name4> + <val6> ) ]
<name6> が <name5> の <name1> 番目より小さい間、次を繰り返す <blk> <name1> を <val2> だけ減少させる </blk>	while <name6> < <name5> [ <name1> ] : <blk> <name1> -= <val2> </blk>	while <name6> < <name5> [ <name1> ] : <blk> <name1> -= <val2> </blk>
( <val1> 、 <val3> 、 <val2> ) の組を順に <name5> として、繰り返す	for <name5> in ( <val1> , <val3> , <val2> ) :	continue ( <val1> , <val3> , <val2> ) :
<name4> ( <name3> [ <name6> : ] , <name5> ) を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = <name4> ( <name3> [ <name6> : ] , <name5> )	<name6> , <name2> , <name1> = <name4> ( <name3> [ <name6> : ] , <name5> )
<name1> の ( <name5> -1 ) * <val4> に <name6> を加えた値から <val2> を引いた値番目、 <name1> の ( <name5> -1 ) に <val4> を掛けた値に <name6> を加えた値番目、 <name1> の <name5> * <val4> に <name6> を加えた値から <val2> を引いた値番目の最小値に <val2> を加えた値を <name1> の <name5> に <val4> を掛けた値に <name6> を加えた値番目にする	<name1> [ <name5> * <val4> + <name6> ] = min ( <name1> [ ( <name5> - <val2> ) * <val4> + <name6> - <val2> ] , <name1> [ ( <name5> - <val2> ) * <val4> + <name6> ] , <name1> [ <name5> * <val4> + <name6> - <val2> ] ) + <val2>	<name6> = min ( <name1> [ ( <name5> - <val4> ) * <val4> + <name6> - <val2> ) ] , <name1> [ ( <name5> - <val2> ) * <val4> + <name6> ] , <name1> [ <name5> * <val4> + <name6> - <val2> ] ) + <val2>
<name1> に <name6> の <name4> 番目を <name5> の <name4> 番目で割った値を加えた値、 <name3> の <name2> に <val3> を加えた値番目の最大値を <name3> の <name2> 番目にする	<name3> [ <name2> ] = max ( <name1> + <name6> [ <name4> ] / <name5> [ <name4> ] , <name3> [ <name2> + <val3> ] )	<name3> [ <name2> ] = max ( <name1> + <name6> [ <name4> ] / <name5> [ <name4> ] , <name3> [ <name2> + <val3> ] )
\ ( <val2> 、 <val5> 、 <val4> 、 <val1> 、 <val3> 、 <val6> ) からなる列を <name6> とする\	\ <name6> = [ <val2> , <val5> , <val4> , <val1> , <val3> , <val6> ] \	for <name6> in [ <val2> , <val5> , <val4> , <val1> , <val3> , <val6> ] \
<name3> に <name2> を加えた値を <name6> とする	<name6> = <name3> + <name2>	( <name6> = <name3> + <name2> )
( <name6> の先頭の整数値 ) からなる列を <name1> の <name5> 番目にする	<name1> [ <name5> ] = [ int ( <name6> [ 0 ] ) ]	<name1> [ <name5> ] = [ int ( <name6> [ 0 ] ) ]
真を <name4> の <name1> 番目の <name5> 番目にする	<name4> [ <name1> ] [ <name5> ] = True	( <name4> [ <name1> ] [ <name5> ] = True )
( <val3> 、 <val3> ) からなる列に ( 、つまり未定値 ) からなる列の <val4> 回分の列を加えた値を <name5> とする	<name5> = [ <val3> , <val3> ] + [ None ] * <val4>	<name5> = [ <val3> , <val3> ] + [ None ] * <val4>
<name6> をソートした列を <name5> とする	<name5> = sorted ( <name6> )	<name5> = sorted ( <name6> )
<name4> を <name3> の <name1> 番目の <name5> 番目に <name6> の <name5> 番目を掛けた値だけ増加させる	<name4> += <name3> [ <name1> ] [ <name5> ] * <name6> [ <name5> ]	( <name4> += <name3> [ <name1> ] [ <name5> ] * <name6> [ <name5> ] )
<name1> をパラメータとして ( <name1> の先頭から <name6> [ <val3> ] の先頭を引いた値、 <name1> の <val4> 番目から <name6> [ <val3> ] の <val4> 番目を引いた値 ) からなる列の組を返す関数を <name5> とする	<name5> = lambda <name1> : tuple ( [ <name1> [ <val3> ] - <name6> [ <val3> ] [ <val3> ] , <name1> [ <val4> ] - <name6> [ <val3> ] [ <val4> ] ] )	<name4> = lambda <name1> : ( <name1> [ 0 ] - <name6> [ <val3> ] [ 0 ] , <name1> [ <val4> ] - <name6> [ <val3> ] [ <val4> ] ] )
<name3> の <name4> 番目を <name1> とする	<name1> = <name3> [ <name4> ]	<name4> = <name3> [ <name4> ]
<name3> の <name2> 番目から <name4> 番目までの部分列を <name6> とする	<name6> = <name3> [ <name2> : <name4> ]	set = <name3> [ <name2> : <name4> ]
<val6> をそうでなければ、とする	else = <val6>	inf = <val6>
<name2> の <name4> 番目が <name5> 以下のとき、	if <name2> [ <name4> ] <= <name5> :	if <name2> [ <name4> ] <= <name5> :
( ( ( <val5> 、 <val5> 、 <val5> ) の組 , <val2> ) ) からなる辞書の辞書カウンタを <name4> とする	<name4> = Counter ( { ( <val5> , <val5> , <val5> ) : <val2> } )	<name4> = Counter ( { ( <val5> , <val5> , <val5> ) : <val2> } )
<name6> と <name1> の <name2> 番目の論理積が <val3> と等しいとき、	if <name6> & <name1> [ <name2> ] == <val3> :	for <name6> in ( <name6> & <name1> [ <name2> ] ) == <val3> :
<name3> . <name4> ( <name5> )	<name3> . <name4> ( <name5> )	( <name3> . <name4> ( <name5> ) )
未定値を <name3> の <name6> の <name2> にする	<name3> . <name6> . <name2> = None	( <name3> . <name6> . <name2> = None )
<name6> の <name3> が -1 と等しくないとき、	if <name6> . <name3> != - 1 :	if <name6> . <name3> != - 1 :
を間に入れて、つまり逆順に <name4> をソートした列を連結した文字列を <name1> とする	<name1> = '' . join ( sorted ( <name4> , reverse = True ) )	<name1> = '' . join ( sorted ( <name4> , reverse = True ) )
<name6> に <name2> を加えた値を <name4> とする	<name4> = <name6> + <name2>	<name4> = <name6> + <name2>
<name6> の x 座標が <name3> の x 座標より小さいかどうかを返す	return <name6> . x < <name3> . x	x return <name6> . x < <name3> . x
入力された文字列の整数値から <val1> を引いた値を <name4> とする	<name4> = int ( input ( ) ) - <val1>	<name4> = int ( input ( ) ) - <val1>
<name4> が、つまり無限大と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name4> == inf : <blk> break </blk>	try if <name4> == inf : <blk> break </blk>
<name2> ( <name4> , <name5> ) を出力する	print ( <name2> ( <name4> , <name5> ) )	print ( <name2> ( <name4> , <name5> ) )
<name2> の <name1> 番目を削除する	del <name2> [ <name1> ]	count = <name2> [ <name1> ]
入力された文字列を <val2> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val2> ) ]	<name4> , <name3> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val2> ) ]
<name2> の <name4> 番目の <name5> を <name1> とする	<name1> = <name2> [ <name4> ] . <name5>	<name1> = <name2> [ <name4> ] . <name5>
<name6> に <name4> に <val1> を掛けた値に <name2> を加えた値を加えた値に <name5> に <val3> を掛けた値に <name6> に <val1> を掛けた値を加えた値に <name4> を加えた値を加えた値が <name1> に <val3> を掛けた値に <name2> に <val1> を掛けた値を加えた値に <name5> を加えた値と等しいかどうかを返す	return <name6> + ( <name4> * <val1> + <name2> ) + ( <name5> * <val3> + <name6> * <val1> + <name4> ) == ( <name1> * <val3> + <name2> * <val1> + <name5> )	return <name6> * <name4> * <val1> + <name2> + <name5> * <val3> + <name6> * <val1> + <name4> == <name1> * <val3> * <name2> + <val1> * <name5>
<name6> に <val3> を掛けた値に <name1> に <val4> を掛けた値を加えた値に <name2> を加えた値に <name5> に <val6> を掛けた値を加えた値を <name5> とする	<name5> = <name6> * <val3> + <name1> * <val4> + <name2> + <name5> * <val6>	else = <name6> * <val3> + <name1> * <val4> + <name2> + <name5> * <val6>
yuiophjklnm を <name1> とする	<name1> = 'yuiophjklnm'	( <name1> = %.16f' )
<name6> を <name5> で割った余りを出力する	print ( <name6> % <name5> )	print ( <name6> % <name5> )
 を間に入れて、つまり逆順に <name6> ( <name4> , <name5> ( ) . <name1> ( ) ) のリストをソートした列の各要素に整数を適用した列を連結した文字列を出力する	print ( ' ' . join ( <name6> ( str , sorted ( list ( <name6> ( <name4> , <name5> ( ) . <name1> ( ) ) ) , reverse = True ) ) ) )	'' print ( ' . join ( map ( str , sorted ( list ( <name6> ( <name4> , <name5> ( ) . <name1> ( ) ) ) ) , reverse = True ) ) )
<name3> に <name4> を加えた値を <name1> とする <name2> に <name6> を加えた値を <name5> とする	<name1> = <name3> + <name4> <name5> = <name2> + <name6>	<name6> = <name3> + <name4> <name5> = <name2> + <name6>
<name2> の <name5> 番目を <val1> だけ減少させる	<name2> [ <name5> ] -= <val1>	<name1> [ <name5> ] -= <val1>
<name4> の <name3> を <val2> だけ減少させる	<name4> . <name3> -= <val2>	( <name4> . <name3> -= <val2> )
<name3> を反転した列を順に <name4> 、 <name5> として、繰り返す	for <name4> , <name5> in reversed ( <name3> ) :	\ <name4> , <name5> in reversed ( <name3> ) :
( <val1> ) からなる列の <name4> 回分の列を <name3> とする	<name3> = [ <val1> ] * <name4>	<name3> = [ <val1> ] * <name4>
<name2> を <val5> で割った余りが <val3> と等しい間、次を繰り返す	while <name2> % <val5> == <val3> :	del <name2> % <val5> == <val3> :
<val2> から <name4> から <val5> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , <name4> - <val5> ) :	continue for <name1> in range ( <val2> , <name4> - <val5> ) :
0 から <val6> 未満までの数列の各要素を <name2> とし、 <name2> の文字列の列の組を <name3> とする	<name3> = tuple ( [ str ( <name2> ) for <name2> in range ( <val6> ) ] )	<name3> = tuple ( [ str ( <name2> ) for <name2> in range ( <val6> ) ] )
<name4> が <val1> より大きいとき、 <blk> <name2> を <val5> に <name3> の <val5> 番目を掛けた値に <name4> を加えた値だけ増加させる </blk>	if <name4> > <val1> : <blk> <name2> += <val5> * <name3> [ <val5> ] + <name4> </blk>	for <name2> in <name4> > <val1> : <blk> <name2> += <val5> * <name3> [ <val5> ] + <name4> </blk>
<name3> を <name6> の <name1> 番目の <name2> にする	<name6> [ <name1> ] . <name2> = <name3>	( <name6> [ <name1> ] . <name2> = <name3> )
<name2> の <val5> 番目から、つまり末尾までの部分列を <name4> の <name2> の先頭番目にする	<name4> [ <name2> [ 0 ] ] = <name2> [ <val5> : ]	<name4> [ <name2> [ 0 ] ] = <name2> [ <val5> : ]
<val3> を <name6> とする <val3> を <name1> とする	<name6> = <val3> <name1> = <val3>	<name1> = <val3> <name1> = <val3>
<name3> を <name5> の <name1> 番目の <name6> 番目にする	<name5> [ <name1> ] [ <name6> ] = <name3>	( <name5> [ <name1> ] [ <name6> ] = <name3> )
<name1> の <name6> 番目の <name4> 、 <name1> の <name6> 番目の <name5> を出力する	print ( <name1> [ <name6> ] . <name4> , <name1> [ <name6> ] . <name5> )	print ( <name1> [ <name6> ] . <name4> , <name1> [ <name6> ] . <name5> )
<name6> を <name5> で割った商に <val3> を加えた値を <name1> とする	<name1> = <name6> // <name5> + <val3>	<name1> = <name6> // <name5> + <val3>
<name6> に <val2> を加えた値が <name5> の長さより小さい間、次を繰り返す	while <name6> + <val2> < len ( <name5> ) :	del ( <name6> + <val2> < len ( <name5> ) ) :
<name5> の先頭の <name4> 番目を出力する	print ( <name5> [ 0 ] [ <name4> ] )	print ( <name5> [ 0 ] [ <name4> ] )
<name6> を <val3> で割った商、 <name2> の最小値を <name1> とする	<name1> = min ( <name6> // <val3> , <name2> )	<name1> = min ( <name6> // <val3> , <name2> )
<name2> から <val4> を引いた値を <val3> で割った商を <name2> とする	<name2> = ( <name2> - <val4> ) // <val3>	<name2> = ( <name2> - <val4> ) // <val3>
<val5> から <name4> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <val5> から <name2> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <val5> の列の列を <name4> とする	<name4> = [ [ <val5> for <name6> in range ( <name2> + <val1> ) ] for <name3> in range ( <name4> + <val1> ) ]	<name4> = [ [ <val5> for <name6> in range ( <name2> + <val1> ) ] for <name3> in range ( <name4> + <val1> ) ]
<name1> の <name3> の <name1> の <name5> 番目の <name4> を出力する	print ( <name1> . <name3> [ <name1> . <name5> ] . <name4> )	print ( <name1> . <name3> [ <name1> . <name5> ] . <name4> )
<name4> が <name2> 以下のとき、	if <name4> <= <name2> :	list if <name4> <= <name2> :
<name3> に <name5> の <name2> に <val1> を加えた値番目の <name6> に <val1> を加えた値番目の整数値を掛けた値を <name4> とする ( <name6> に <val1> を加えた値、 <name2> に <val1> を加えた値 ) の組を <name4> とする	<name4> = <name3> * int ( <name5> [ <name2> + <val1> ] [ <name6> + <val1> ] ) <name4> = ( <name6> + <val1> , <name2> + <val1> )	<name4> = <name3> * int ( <name5> [ <name2> + <val1> ] [ <name6> + <val1> ] ) <name4> = ( <name6> + <val1> , <name2> + <val1> )
<name5> が <name1> と等しいとき、 <blk> <val4> を出力する </blk>	if <name5> == <name1> : <blk> print ( <val4> ) </blk>	if <name5> == <name1> : <blk> print ( <val4> ) </blk>
<name4> の総和でないとき、	if not sum ( <name4> ) :	print ( not sum ( <name4> ) ) :
<name5> をパラメータとして ( - <name5> の <val4> 番目、 <name5> の先頭 ) の組を返す関数を <name3> として <name1> をソートする	<name1> . sort ( <name3> = lambda <name5> : ( - <name5> [ <val4> ] , <name5> [ 0 ] ) )	<name3> . sort ( <name1> = lambda <name5> : ( - <name5> [ <val4> ] , <name5> [ 0 ] ) )
( <val1> ) からなる列の <name5> 回分の列を <name2> の <val3> 番目にする	<name2> [ <val3> ] = [ <val1> ] * <name5>	<name2> [ <val3> ] = [ <val1> ] * <name5>
<name6> の <name1> 番目から、つまり末尾までの部分列、 <name6> の要素をそれぞれ組にした列に番号付した組の列を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in enumerate ( zip ( <name6> [ <name1> : ] , <name6> ) ) :	for <name5> , <name4> in enumerate ( zip ( <name6> [ <name1> : ] , <name6> ) ) :
<name2> の <name1> 番目から <name3> 番目までの部分列を順に <name6> として、繰り返す	for <name6> in <name2> [ <name1> : <name3> ] :	while <name2> [ <name1> : <name3> ] :
<name2> の <val1> 番目を <name5> の <name4> だけ減少させる	<name2> [ <val1> ] -= <name5> . <name4>	<name1> [ <val1> ] -= <name5> . <name4>
<name6> 、 <name1> 、 <name5> を出力する	print ( <name6> , <name1> , <name5> )	print ( <name6> , <name1> , <name5> )
<name1> の、つまり先頭から <name5> 番目までの部分列を <name6> とする	<name6> = <name1> [ : <name5> ]	else = <name1> [ : <name5> ]
<name1> に <name6> を掛けた値に <name5> を加えた値に <val3> を加えた値を <name4> で割った余りを <name1> とする	<name1> = ( <name1> * <name6> + <name5> + <val3> ) % <name4>	<name1> = ( <name1> * <name6> + <name5> + <val3> ) % <name4>
<name4> の長さに <name5> の長さを加えた値を <name2> ( ) の <name1> とする	<name2> ( ) . <name1> = len ( <name4> ) + len ( <name5> )	dict . <name2> ( ) . <name1> = len ( <name4> ) + len ( <name5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストをソートした列を <name2> とする	<name2> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )	<name2> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )
<name6> を <val5> で割った商に <name2> を <val5> で割った商を加えた値に <val5> を掛けた値を <name1> とする	<name1> = ( <name6> // <val5> + <name2> // <val5> ) * <val5>	<name6> = ( <name6> // <val5> + <name2> // <val5> ) * <val5>
<name3> の逆順を返す	return <name3> [ : : - 1 ]	return <name3> [ : : - 1 ]
<name3> の末尾に <name6> ( <name2> , <name1> , <name4> ) を追加する	<name3> . append ( <name6> ( <name2> , <name1> , <name4> ) )	<name3> . append ( <name6> ( <name2> , <name1> , <name4> ) )
<name1> の先頭の <val2> 番目を出力する	print ( <name1> [ 0 ] [ <val2> ] )	print ( <name1> [ 0 ] [ <val2> ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = map ( str , input ( ) . split ( ) )	<name2> , <name4> = map ( int , input ( ) . split ( ) )
<name2> の末尾に <name1> から <name6> 内の <val5> の出現回数を引いた値に <name2> の末尾を加えた値を追加する	<name2> . append ( <name1> - <name6> . count ( <val5> ) + <name2> [ - 1 ] )	<name2> . append ( <name1> - <name6> . count ( <val5> ) + <name2> [ - 1 ] )
<name1> の <name4> を <val2> だけ増加させる	<name1> . <name4> += <val2>	( <name1> . <name4> += <val2> )
空列を <name3> の <name5> 番目にする	<name3> [ <name5> ] = [ ]	( <name3> [ <name5> ] = [ ] )
<name5> ( <name2> , { <name4> : <val6> } ) を <name1> とする	<name1> = <name5> ( <name2> , { <name4> : <val6> } )	<name1> = <name5> ( <name2> , { <name4> } : <val6> } )
<name6> が <name1> の長さより小さくかつ <name1> の <name6> 番目が <val2> と等しくない間、次を繰り返す <blk> <name6> を <val5> だけ増加させる </blk>	while <name6> < len ( <name1> ) and <name1> [ <name6> ] != <val2> : <blk> <name6> += <val5> </blk>	if <name6> < len ( <name1> ) and <name1> [ <name6> ] != <val2> : <blk> <name6> += <val5> </blk>
<name2> の <name3> の先頭番目を <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name2> [ <name3> [ 0 ] ]	<name2> [ <name4> ] = <name2> [ <name3> [ 0 ] ]
<name3> の先頭を取り出した値を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name3> . pop ( )	<name6> , <name2> , <name4> = <name3> . pop ( )
<name3> が <name6> と等しいかどうかが <name2> と等しいかどうかが <name5> と等しいかどうかが <name4> と等しいかどうかが <val1> と等しいとき、	if <name3> == <name6> == <name2> == <name5> == <name4> == <val1> :	list == <name3> == <name6> == <name2> == <name5> == <name4> == <val1> :
<name5> の <name3> 番目を <val6> との排他的論理和にする	<name5> [ <name3> ] ^ = <val6>	<name4> [ <name3> ] ^ = <val6>
<name5> モジュールを用いる	from <name5> import cos , sin , radians	from <name5> , Counter
<name2> を <name1> の <name3> 番目から <name5> に <name6> の <name3> 番目を掛けた値を引いた値の <val4> 乗だけ増加させる	<name2> += ( <name1> [ <name3> ] - <name5> * <name6> [ <name3> ] ) ** <val4>	<name2> += ( <name1> [ <name3> ] - <name5> * <name6> [ <name3> ] ) ** <val4>
<name6> の <name3> の <name5> 番目番目でないとき、	if not <name6> [ <name3> [ <name5> ] ] :	while not <name6> [ <name3> [ <name5> ] ] :
<val6> 、 <val6> を <name3> 、 <name4> とする	<name3> , <name4> = <val6> , <val6>	<name2> , <name4> = <val6> , <val6>
<name5> が <name6> の <name3> から <val2> を引いた値以上のとき、 <blk> <name6> の <name4> の <name5> 番目を返す </blk>	if <name5> >= <name6> . <name3> - <val2> : <blk> return <name6> . <name4> [ <name5> ] </blk>	try : if <name5> >= <name6> . <name3> - <val2> : <blk> return <name6> . <name4> [ <name5> ] </blk>
<name5> の <name4> 番目の末尾に ( <name1> 、 <name1> に <name6> を加えた値から <val2> を引いた値、 <name3> ) の組を追加する	<name5> [ <name4> ] . append ( ( <name1> , <name1> + <name6> - <val2> , <name3> ) )	<name3> [ <name4> ] . append ( ( <name1> , <name1> + <name6> - <val2> , <name3> ) )
\ <name2> + <val3> に <name5> を加えた値に <val3> を加えた値に <name1> を <val6> で割った商を掛けた値に <name1> を <val6> で割った余りのとき <name2> に <val3> を加えた値、そうでなければ <val4> を加えた値を出力する\	\ print ( ( <name2> + <val3> + <name5> + <val3> ) * ( <name1> // <val6> ) + ( <name2> + <val3> if <name1> % <val6> else <val4> ) ) \	for print ( ( <name2> + <val3> + <name5> + <name5> + <val3> ) * ( <name1> // <val6> + ( <name2> + <val3> ) ) + <val4> ) \
<name2> が <name5> と等しいかどうかが <val1> と等しいとき、	if <name2> == <name5> == <val1> :	\ if <name2> == <name5> == <val1> :
Case {} : {}を書式として <name4> 、 <name3> で整形した文字列を出力する	print ( 'Case {}: {}' . format ( <name4> , <name3> ) )	print ( 'Case {}:' . format ( <name4> , <name3> ) )
<name4> の <val2> 番目から、つまり末尾までの部分列が <name1> に含まれるとき <val5> 、そうでなければ <val6> を出力する	print ( <val5> if <name4> [ <val2> : ] in <name1> else <val6> )	end = <val5> if <name4> [ <val2> : ] in <name1> else <val6> )
<name5> ( <name6> , ( <name1> , <name3> , ( <name2> , <name4> ) ) )	<name5> ( <name6> , ( <name1> , <name3> , ( <name2> , <name4> ) ) )	<name2> ( <name6> , ( <name1> , <name3> , ( <name2> , <name4> ) ) )
<val5> から <val1> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> , <val1> ) :	. for <name3> in range ( <val5> , <val1> ) :
<name4> 、 <name6> 、 <name1> の要素をそれぞれ組にした列を順に <name2> 、 <name5> 、 <name3> として、繰り返す	for <name2> , <name5> , <name3> in zip ( <name4> , <name6> , <name1> ) :	. for <name2> , <name5> , <name3> in zip ( <name4> , <name6> , <name1> ) :
<name6> に <name2> を掛けた値を <val4> で割った値を <name1> とする	<name1> = <name6> * <name2> / <val4>	<name1> = <name6> * <name2> / <val4>
<name1> の <name3> の <name4> 番目を <name1> の <name3> の <name1> の <name6> の <name4> 番目番目だけ増加させる	<name1> . <name3> [ <name4> ] += <name1> . <name3> [ <name1> . <name6> [ <name4> ] ]	. <name1> . <name3> [ <name4> ] += <name1> . <name3> [ <name1> . <name6> [ <name4> ] ]
<name5> を <name6> ( <name1> + <val3> , <name2> - <name4> , <name5> * ( <name4> + <val3> ) ) だけ増加させる	<name5> += <name6> ( <name1> + <val3> , <name2> - <name4> , <name5> * ( <name4> + <val3> ) )	<name1> += <name6> ( <name1> + <val3> , <name2> - <name4> , <name5> * ( <name4> + <val3> ) )
<name1> の <name6> の <name4> 番目を <name2> とする	<name2> = <name1> . <name6> [ <name4> ]	<name2> = <name1> . <name6> [ <name4> ]
<name1> の先頭が <name1> の <val2> 番目より小さくかつ <name1> の <val2> 番目が <name1> の <val3> 番目より小さいとき、 <blk> <val4> を出力する </blk>	if <name1> [ 0 ] < <name1> [ <val2> ] and <name1> [ <val2> ] < <name1> [ <val3> ] : <blk> print ( <val4> ) </blk>	<blk> if <name1> [ 0 ] < <name1> [ <val2> ] and <name1> [ <val2> ] < <name1> [ <val3> ] : <blk> print ( <val4> ) </blk>
<name3> . <name4> ( <name1> ) を <name3> とする	<name3> = <name3> . <name4> ( <name1> )	<name3> = <name3> . <name4> ( <name1> )
<name2> の <name4> 番目に <name3> を加えた値、 <name5> 、 <name1> の各要素に <name6> を適用した列の最小値に <name4> を加えた値の最小値を <name1> の <name4> 番目にする	<name1> [ <name4> ] = min ( <name2> [ <name4> ] + <name3> , min ( map ( <name6> , <name5> , <name1> ) ) + <name4> )	<name3> [ <name4> ] = min ( <name2> [ <name4> ] + <name3> , min ( map ( <name6> , <name5> , <name1> ) ) + <name4> )
( -1 ) からなる列の <val1> を <name6> だけ左シフトした値回分の列を <name5> とする	<name5> = [ - <val1> ] * ( <val1> << <name6> )	<name5> = [ - <val1> ] * ( <val1> << <name6> )
<name1> と <val4> の論理積のとき、	if <name1> & <val4> :	for <name1> in <name1> & <val4> :
<name5> の <name2> 番目の <name6> 番目が <name4> と等しくなくかつ <name5> の <name6> 番目の <name1> 番目が <name4> と等しくないとき、	if <name5> [ <name2> ] [ <name6> ] != <name4> and <name5> [ <name6> ] [ <name1> ] != <name4> :	raise <name5> [ <name2> ] [ <name6> ] != <name4> and <name5> [ <name6> ] [ <name1> ] != <name4> :
<name1> に <name1> を掛けた値から <name2> に <name2> を掛けた値を引いた値に <name5> に <name5> を掛けた値を加えた値から <name4> に <name4> を掛けた値を引いた値を <name3> とする	<name3> = <name1> * <name1> - <name2> * <name2> + <name5> * <name5> - <name4> * <name4>	<name6> = <name1> * <name1> - <name2> * <name2> + <name5> * <name5> - <name4> * <name4>
<val2> が <name3> 以下かつ <name3> が <name1> より小さくかつ <val2> が <name6> 以下かつ <name6> が <name4> より小さいかどうかを返す	return <val2> <= <name3> and <name3> < <name1> and <val2> <= <name6> and <name6> < <name4>	x return <val2> <= <name3> and <name3> < <name1> and <val2> <= <name6> and <name6> < <name4>
<name3> から <name2> を引いた値をソートした列を順に <name6> として、繰り返す	for <name6> in sorted ( <name3> - <name2> ) :	( <name6> in sorted ( <name3> - <name2> ) :
( <name3> から <name1> から <name2> を引いた値を引いた値、 <name5> に <name6> から <name4> を引いた値を加えた値 ) の組を <name4> とする	<name4> = ( <name3> - ( <name1> - <name2> ) , <name5> + ( <name6> - <name4> ) )	<name4> = ( <name3> - ( <name1> - <name2> ) , <name5> + ( <name6> - <name4> ) )
<val2> を <name1> の <name5> の先頭の <val4> 番目にする	<name1> . <name5> [ <val4> ] [ <val4> ] = <val2>	not <name1> . <name5> [ <val4> ] [ <val4> ] = <val2>
<val4> から <name2> の先頭の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( len ( <name2> [ <val4> ] ) ) :	in range ( <val4> , len ( <name2> [ 0 ] ) ) :
<val1> を書式として <name5> 、 <name4> で整形した文字列を出力する	print ( <val1> . format ( <name5> , <name4> ) )	print ( <val1> . format ( <name5> , <name4> ) )
<name5> の <name3> 番目が <name1> と等しいとき、	if <name5> [ <name3> ] == <name1> :	list if <name5> [ <name3> ] == <name1> :
<name6> を <name3> とする <val1> を <name2> とする	<name3> = <name6> <name2> = <val1>	<name2> = <name6> <name2> = <val1>
<val6> の浮動小数点数を <name2> とする	<name2> = float ( <val6> )	<name2> = float ( <val6> )
<val3> から <name6> の <name1> の先頭の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name6> . <name1> [ <val3> ] ) ) :	in range ( <val3> , len ( <name6> . <name1> [ 0 ] ) ) :
<name1> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> 、 <name6> とする	<name4> , <name3> , <name6> = map ( int , <name1> . readline ( ) . split ( ) )	<name3> , <name6> = map ( int , <name1> . readline ( ) . split ( ) )
<name1> ( <name3> , <name5> ) を返す	return <name1> ( <name3> , <name5> )	yield <name1> ( <name3> , <name5> )
<name4> の <name5> 番目の <name1> 番目のとき、	if <name4> [ <name5> ] [ <name1> ] :	continue if <name4> [ <name5> ] [ <name1> ] :
<name1> の <name6> 番目が <name2> より小さいとき、	if <name1> [ <name6> ] < <name2> :	while <name1> [ <name6> ] < <name2> :
<val4> を書式として <name6> を <val3> で割った商、 <name6> を <val3> で割った余りを <val2> で割った商、 <name6> を <val2> で割った余りで整形した文字列を出力する	print ( <val4> . format ( <name6> // <val3> , ( <name6> % <val3> ) // <val2> , <name6> % <val2> ) )	print ( <val4> . format ( <name6> // <val3> , <name6> // <val3> // <val2> , <name6> % <val2> ) )
<name6> を <val4> で割った余りが <val5> と等しくかつ <name6> を <val3> で割った余りが <val5> と等しくなくまたは <name6> を <val1> で割った余りが <val5> と等しいとき、	if <name6> % <val4> == <val5> and ( <name6> % <val3> != <val5> or <name6> % <val1> == <val5> ) :	list ( <name6> % <val4> == <val5> and <name6> % <val3> != <val5> or <name6> % <val1> == <val5> :
0 から <name5> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を <val6> で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列の列を <name1> とする	<name1> = [ [ int ( <name3> ) for <name3> in input ( ) . split ( <val6> ) ] for <name4> in range ( <name5> ) ]	<name6> = [ [ int ( <name3> ) for <name3> in input ( ) . split ( <val6> ) ] for <name4> in range ( <name5> ) ]
<name6> の <name2> から <val4> を引いた値番目を <name3> だけ増加させる	<name6> [ <name2> - <val4> ] += <name3>	<name3> [ <name2> - <val4> ] += <name3>
<name6> の <name1> の <name3> 番目を返す	return <name6> . <name1> [ <name3> ]	yield <name6> . <name1> [ <name3> ]
<name1> の整数値を返す	return int ( <name1> )	yield int ( <name1> )
<name1> に <name4> の逆順に <name6> の逆順を加えた値を追加した集まり	<name1> . add ( <name4> [ : : - 1 ] + <name6> [ : : - 1 ] )	<name1> . add ( <name4> [ : : - 1 ] + <name6> [ : : - 1 ] )
<name3> の <name5> から <val4> を引いた値番目を <name2> とする	<name2> = <name3> [ <name5> - <val4> ]	( <name2> = <name3> [ <name5> - <val4> ] )
逆順に <name1> の各要素を <name4> とし、 <name4> の <val6> 番目の列の辞書カウンタのキーの集まりをソートした列を <name2> とする	<name2> = sorted ( Counter ( [ <name4> [ <val6> ] for <name4> in <name1> ] ) . keys ( ) , reverse = True )	<name2> = sorted ( Counter ( [ <name4> [ <val6> ] for <name4> in <name1> ] ) , reverse = True )
<name1> . <name6> ( <name2> ) のとき、	if <name1> . <name6> ( <name2> ) :	for <name1> . <name6> ( <name2> ) :
<name2> の <val5> 番目を実部、 <name2> の <val6> 番目を虚部とした複素数を <name3> とする	<name3> = complex ( <name2> [ <val5> ] , <name2> [ <val6> ] )	else = complex ( <name2> [ <val5> ] , <name2> [ <val6> ] )
<name2> を <name3> の <name1> の <name6> 番目の <name5> 番目の <val4> 番目にする	<name3> . <name1> [ <name6> ] [ <name5> ] [ <val4> ] = <name2>	<name3> . <name1> [ <name6> ] [ <name5> ] [ <val4> ] = <name2>
<name6> ( <name5> . <name1> + <name2> . <name1> , <name5> . <name4> + <name2> . <name4> ) を返す	return <name6> ( <name5> . <name1> + <name2> . <name1> , <name5> . <name4> + <name2> . <name4> )	return <name6> ( <name5> . <name1> + <name2> . <name1> , <name5> . <name4> + <name2> . <name4> )
<name5> のコピーを <name4> とする	<name4> = <name5> . copy ( )	<name4> = <name5> . copy ( )
<name3> の <val6> 番目が <val2> と等しいとき、	if <name3> [ <val6> ] == <val2> :	continue [ <val6> ] == <val2> :
<name5> の先頭、 <name4> を出力する	print ( <name5> [ 0 ] , <name4> )	print ( <name5> [ 0 ] , <name4> )
<name2> を <name5> で割った余りが <val3> と等しくない間、次を繰り返す	while <name2> % <name5> != <val3> :	try != <name2> % <name5> != <val3> :
<name4> を <name3> との論理和にする	<name4> | = <name3>	( <name4> | = <name3> )
<name6> を <name5> の <name4> の両端から空白改行を取り除いた文字列番目にする	<name5> [ <name4> . strip ( ) ] = <name6>	<name1> [ <name4> . strip ( ) ] = <name6>
0 から <val5> の <name1> 乗未満までの数列の各要素を <name3> とし、 0 から <name1> 未満までの数列の各要素を <name6> とし、 <name4> の列の列を <name2> とする	<name2> = [ [ <name4> for <name6> in range ( <name1> ) ] for <name3> in range ( <val5> ** <name1> ) ]	<name2> = [ [ <name4> for <name6> in range ( <name1> ) ] for <name3> in range ( <val5> ** <name1> ) ]
<name2> を <val3> で割った値の整数値を <name5> とする	<name5> = int ( <name2> / <val3> )	( <name5> = int ( <name2> / <val3> ) )
<val3> の順序数を <name6> とする	<name6> = ord ( <val3> )	<name6> = ord ( <val3> )
<name1> . <name5> ( <name4> . <name2> ) を返す	return <name1> . <name5> ( <name4> . <name2> )	self return <name1> . <name5> ( <name4> . <name2> )
<name2> を <name3> の <name1> だけ増加させる	<name2> += <name3> . <name1>	( <name2> += <name3> . <name1> )
<name4> は非ローカル変数とする	nonlocal <name4>	nonlocal <name4>
<name3> の先頭から <val4> を探して見つかった位置を <name2> とする	<name2> = <name3> . find ( <val4> )	<name2> = <name3> . find ( <val4> )
<name1> の <name3> 番目の <name2> が -1 と等しいとき、	if <name1> [ <name3> ] . <name2> == - 1 :	: if <name1> [ <name3> ] . <name2> == - 1 :
<name1> を <name2> の文字列に <val6> を加えた値だけ増加させる	<name1> += str ( <name2> ) + <val6>	<name1> += str ( <name2> ) + <val6>
<name2> の <name5> 番目から <name2> の <name4> 番目を引いた値の絶対値が <name6> より小さいとき、	if abs ( <name2> [ <name5> ] - <name2> [ <name4> ] ) < <name6> :	> abs ( <name2> [ <name5> ] - <name2> [ <name4> ] ) < <name6> :
<name3> から <val1> を引いた値を <name5> とする	<name5> = <name3> - <val1>	<name2> <name5> = <name3> - <val1>
<name5> を <name6> で割った商を <name4> とする	<name4> = <name5> // <name6>	<name4> = <name5> // <name6>
( <name3> 、 <name6> ) の組を <name1> の <val5> 番目にする	<name1> [ <val5> ] = ( <name3> , <name6> )	( <name3> , <name6> ) = ( <name3> , <name6> )
<name4> ( <name3> [ -1 ] , -1 , <val1> )	<name4> ( <name3> [ - 1 ] , - 1 , <val1> )	set ( <name4> ( <name3> [ - 1 ] , - 1 , <val1> ) )
0 から <name3> 未満までの数列を順に <name6> として、繰り返す <blk> <name1> の末尾に <name5> の <name6> 番目の <val2> 番目を追加する </blk>	for <name6> in range ( <name3> ) : <blk> <name1> . append ( <name5> [ <name6> ] [ <val2> ] ) </blk>	in range ( <name3> ) : <blk> <name1> . append ( <name5> [ <name6> ] [ <val2> ] ) </blk>
\ <name3> ( <val1> % <name5> [ <name4> ] ) \	\ <name3> ( <val1> % <name5> [ <name4> ] ) \	for <name3> in <val1> % <name5> [ <name4> ] ) \
<name1> の <name5> に <val3> を加えた値番目を <name4> とする	<name4> = <name1> [ <name5> + <val3> ]	<name4> = <name1> [ <name5> + <val3> ]
<name1> 、 <name4> に <val2> を加えた値を出力する	print ( <name1> , <name4> + <val2> )	print ( <name1> , <name4> + <val2> )
<name4> の先頭に <name1> の <val3> 番目を掛けた値から <name4> の <val3> 番目に <name1> の先頭を掛けた値を引いた値を返す	return <name4> [ 0 ] * <name1> [ <val3> ] - <name4> [ <val3> ] * <name1> [ 0 ]	yield <name4> [ 0 ] * <name1> [ <val3> ] - <name4> [ <val3> ] * <name1> [ 0 ]
<val4> から <val4> を <name1> だけ左シフトした値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> , <val4> << <name1> ) :	continue for <name2> in range ( <val4> , ( <val4> << <name1> ) ) :
<name5> の <name2> 番目が <name1> より大きいとき、	if <name5> [ <name2> ] > <name1> :	list if <name5> [ <name2> ] > <name1> :
<name5> に <name6> を掛けた値、 <name5> に <val1> を掛けた値に <name6> に <val1> を掛けた値を加えた値を出力する	print ( <name5> * <name6> , <name5> * <val1> + <name6> * <val1> )	<val3> print ( <name5> * <name6> , <name5> * <val1> + <name6> * <val1> )
0 から <name1> 未満までの数列の各要素を <name3> とし、 0 から <name5> 未満までの数列の列の各要素を <name2> とし、 <name4> ( <name2> , <name3> ) の列の最小値を出力する	print ( min ( [ <name4> ( <name2> , <name3> ) for <name2> in [ range ( <name5> ) for <name3> in range ( <name1> ) ] ] ) )	[ print ( min ( [ <name4> ( <name2> , <name3> ) for <name2> in [ range ( <name5> ) for <name3> in range ( <name1> ) ] ] ) )
<を <name2> の <name6> 番目の <name1> から <val3> を引いた値番目にする	<name2> [ <name6> ] [ <name1> - <val3> ] = '<'	<name1> [ <name6> ] [ <name1> - <val3> ] = <val6>
<name4> が無限大のとき <val6> 、そうでなければ <name4> を出力する	print ( <val6> if math . isinf ( <name4> ) else <name4> )	[ print ( <val6> ) if math . isinf ( <name4> ) else <name4> )
<name3> の <name1> に <val4> を加えた値番目を <name3> の <name1> 番目だけ増加させる	<name3> [ <name1> + <val4> ] += <name3> [ <name1> ]	<name1> [ <name1> + <val4> ] += <name3> [ <name1> ]
<name3> から <val2> を引いた値を <name1> の先頭の <val4> 番目にする	<name1> [ <val4> ] [ <val4> ] = <name3> - <val2>	<name1> [ <val4> ] [ <val4> ] = <name3> - <val2>
<name3> の <name1> 番目が <name6> と等しいとき、	if <name3> [ <name1> ] == <name6> :	continue [ <name1> ] == <name6> :
( ( <val3> 、 <val3> ) の組 ) からなる列を <name2> の <val3> 番目にする	<name2> [ <val3> ] = [ ( <val3> , <val3> ) ]	<name2> [ <val3> ] = [ ( <val3> , <val3> ) ]
入力された文字列を <val3> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val3> ) ]	<name1> , <name2> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val3> ) ]
<name1> を ( <name2> の先頭に <val6> の ( <val3> / <val5> ) 乗を掛けた値を <val5> で割った値に <name2> の <val3> 番目を <val5> で割った値を加えた値 ) からなる列だけ増加させる	<name1> += [ <name2> [ 0 ] * <val6> ** ( <val3> / <val5> ) / <val5> + <name2> [ <val3> ] / <val5> ]	<name5> += <name1> += [ <name2> [ 0 ] + <val6> ** ( <val3> / <val5> ) / <val5> + <name2> [ <val3> ] / <val5> ]
<val5> から <name2> の先頭の整数値に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , int ( <name2> [ 0 ] ) + <val5> ) :	for <name1> in range ( <val5> , int ( <name2> [ 0 ] ) + <val5> ) :
<name2> ( <name3> , ( <name6> + <val5> , ( <name4> , <name1> ) ) )	<name2> ( <name3> , ( <name6> + <val5> , ( <name4> , <name1> ) ) )	<name2> ( <name3> , ( <name6> + <val5> , ( <name4> , <name1> ) ) )
<name6> が <val1> と等しくかつ <name2> の絶対値が <name3> より小さくかつ <name5> の絶対値が <name3> より小さいとき、	if <name6> == <val1> and abs ( <name2> ) < <name3> and abs ( <name5> ) < <name3> :	list ( <name6> == <val1> and abs ( <name2> ) < <name3> and abs ( <name5> ) < <name3> :
<name1> ( [ <name3> ( <name5> ) , <name4> ] )	<name1> ( [ <name3> ( <name5> ) , <name4> ] )	<name1> ( [ <name3> ( <name5> ) , <name4> ] )
<name3> の <name6> 番目の <name5> 番目が <name4> 以下のとき、	if <name3> [ <name6> ] [ <name5> ] <= <name4> :	[ if <name3> [ <name6> ] [ <name5> ] <= <name4> :
<name3> ( <val5> )	<name3> ( <val5> )	( <name3> ( <val5> ) )
<val3> から <name6> 未満までの数列の各要素を <name5> とし、 <val3> の列を <name2> とする	<name2> = [ <val3> for <name5> in range ( <name6> ) ]	<name6> = [ <val3> for <name5> in range ( <name6> ) ]
<name5> ( <name4> , ( <val3> , <val3> ) )	<name5> ( <name4> , ( <val3> , <val3> ) )	<name5> ( <name4> , ( <val3> , <val3> ) )
<name2> ( <name4> )	<name2> ( <name4> )	pow ( <name2> ( <name4> ) )
<name2> に <name5> を加えた値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = <name2> + <name5>	( <name1> [ <name3> ] = <name2> + <name5> )
次は例外に関する条件がある <blk> 入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列のリストを <name2> とする </blk>	try : <blk> <name2> = list ( map ( int , input ( ) . split ( <val4> ) ) ) </blk>	: try : <blk> <name2> = list ( map ( int , input ( ) . split ( <val4> ) ) ) </blk>
入力された文字列を <val3> で分割した字句列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = input ( ) . split ( <val3> )	<name4> , <name6> = input ( ) . split ( <val3> )
<name5> を <name1> の <name6> 番目の <name2> 番目にする	<name1> [ <name6> ] [ <name2> ] = <name5>	( <name1> [ <name6> ] [ <name2> ] = <name5> )
<name5> の <name2> 番目の末尾に ( <name6> 、 <name1> ) の組を追加する	<name5> [ <name2> ] . append ( ( <name6> , <name1> ) )	<name3> [ <name2> ] . append ( ( <name6> , <name1> ) )
<name2> を順に <name4> 、 <name3> 、 <name1> 、 <name6> として、繰り返す	for <name4> , <name3> , <name1> , <name6> in <name2> :	for <name4> , <name3> , <name1> , <name6> in <name2> :
0 から <val4> 未満までの数列の各要素を <name3> とし、 0 から <val2> 未満までの数列の各要素を <name1> とし、、つまり偽の列の列を <name5> とする	<name5> = [ [ False for <name1> in range ( <val2> ) ] for <name3> in range ( <val4> ) ]	<name5> = [ [ False for <name1> in range ( <val2> ) ] for <name3> in range ( <val4> ) ]
<name2> 、 <name5> の <name1> 番目の <name4> から <val3> を引いた値番目の最大値を <name2> とする	<name2> = max ( <name2> , <name5> [ <name1> ] [ <name4> - <val3> ] )	<name2> = max ( <name2> , <name5> [ <name1> ] [ <name4> - <val3> ] )
<name1> を <name5> だけ増加させる <name3> を <name2> だけ増加させる	<name1> += <name5> <name3> += <name2>	<name2> += <name1> += <name5> <name3> += <name2>
<name5> の最小値を出力する	print ( min ( <name5> ) )	print ( min ( <name5> ) )
- <name3> の <name6> から <name5> の <name6> を引いた値を <name3> の <name1> から <name5> の <name1> を引いた値で割った値を <name2> とする	<name2> = - ( <name3> . <name6> - <name5> . <name6> ) / ( <name3> . <name1> - <name5> . <name1> )	( <name2> = - <name3> . <name6> - <name5> . <name6> ) / ( <name3> . <name1> - <name5> . <name1> )
<name6> ( <name3> , <name3> [ <name5> ] . <name2> , <name4> )	<name6> ( <name3> , <name3> [ <name5> ] . <name2> , <name4> )	<name6> ( <name3> , <name3> [ <name5> ] . <name2> , <name4> )
<name5> を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name5>	<name3> , <name4> = <name5>
( <name6> - <name4> ) . <name2> ( ) に <name3> から <name4> を引いた値を掛けた値を <name5> とする	<name5> = ( <name6> - <name4> ) . <name2> ( ) * ( <name3> - <name4> )	else = [ <name6> - <name4> ) . <name2> ( ) * ( <name3> - <name4> )
<name5> から <val3> を引いた値から <name2> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> - <val3> , <name2> ) :	: for <name6> in range ( <name5> - <val3> , <name2> ) :
<name3> の末尾に <name4> の <val1> 番目から <val5> 番目までの部分列のリストを追加する	<name3> . append ( list ( <name4> [ <val1> : <val5> ] ) )	<name3> . append ( list ( <name4> [ <val1> : <val5> ] ) )
<name5> に <name6> を加えた値に <name1> を加えた値を <name4> とする	<name4> = <name5> + <name6> + <name1>	<name4> = <name5> + <name6> + <name1>
<name2> の <name1> 番目と <name4> の <name1> 番目の論理和のとき、	if <name2> [ <name1> ] | <name4> [ <name1> ] :	list if <name2> [ <name1> ] | <name4> [ <name1> ] :
<name5> . <name6> ( <name3> ) を <name1> とする	<name1> = <name5> . <name6> ( <name3> )	<name1> = <name5> . <name6> ( <name3> )
<name6> ( ) を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name6> ( )	<name3> , <name2> = <name6> ( )
( <name3> 、 <name1> 、 <name6> の組、 <name5> ) の組が <name2> に含まれないとき、	if ( <name3> , <name1> , tuple ( <name6> ) , <name5> ) not in <name2> :	list ( <name3> , <name1> , <name6> ) , <name5> ) not in <name2> :
<name2> を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in <name2> :	. for <name6> , <name5> in <name2> :
<name3> から <name1> を引いた値が <val6> 以上の間、次を繰り返す	while <name3> - <name1> >= <val6> :	del ( <name3> - <name1> >= <val6> ) :
<name4> の末尾に <name1> に対応する値の <val5> 番目を追加する	<name4> . append ( <name1> . get ( ) [ <val5> ] )	<name4> . append ( <name1> . get ( <val5> ) )
<name3> の <name2> 番目を <val5> だけ減少させる	<name3> [ <name2> ] -= <val5>	( <name3> [ <name2> ] -= <val5> )
<name2> . <name4> ( <name5> , ( <name3> , <name1> ) )	<name2> . <name4> ( <name5> , ( <name3> , <name1> ) )	set ( <name2> . <name4> ( <name5> , ( <name3> , <name1> ) ) )
0 から <name1> に <name1> から <val6> を引いた値を掛けた値を <val4> で割った商未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> * ( <name1> - <val6> ) // <val4> ) :	for <name5> in range ( <name1> * ( <name1> - <val6> ) // <val4> ) :
<name3> の先頭から <name4> を探して見つかった位置を <name6> とする	<name6> = <name3> . find ( <name4> )	<name6> = <name3> . find ( <name4> )
<name2> から <name4> を <name3> で割った値、 <name1> を <name5> で割った値の最大値を引いた値の整数値を出力する	print ( int ( <name2> - max ( <name4> / <name3> , <name1> / <name5> ) ) )	<name2> print ( int ( <name2> - max ( <name4> / <name3> ) , max ( <name1> / <name5> ) ) )
<name5> の <name3> 番目に <name2> を加えた値を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name5> [ <name3> ] + <name2>	<name4> [ <name4> ] = <name5> [ <name3> ] + <name2>
<name2> の各要素を <name5> とし、 <name1> の <name5> 番目の列を <name2> とする	<name2> = [ <name1> [ <name5> ] for <name5> in <name2> ]	<name6> = [ <name1> [ <name5> ] for <name5> in <name2> ]
<name5> の <name1> の <name3> 番目が、つまり無限大と等しくないとき <name5> の <name1> の <name3> 番目、そうでなければ <val2> を出力する	print ( <name5> . <name1> [ <name3> ] if <name5> . <name1> [ <name3> ] != inf else <val2> )	end = <name5> . <name1> [ <name3> ] if <name5> . <name1> [ <name3> ] != inf else <val2> )
<name1> の <name3> を順に <name5> として、繰り返す	for <name5> in <name1> . <name3> :	. for <name5> in <name1> . <name3> :
空列を <name6> の <name3> の <val4> 番目番目にする	<name6> [ <name3> [ <val4> ] ] = [ ]	<name4> [ <name3> [ <val4> ] ] = [ ]
<name1> の <name6> 番目の <name5> 番目のとき、	if <name1> [ <name6> ] [ <name5> ] :	[ if <name1> [ <name6> ] [ <name5> ] :
-1000000001 を <name4> とする	<name4> = - 1000000001	<name4> = - 1000000000
sample - input . txt 、 <val1> を開いたファイルストリームを <name3> の <name5> にする	<name3> . <name5> = open ( 'sample-input.txt' , <val1> )	<name3> . <name5> = open ( 'sample-input.txt' , <val1> )
<val5> を書式として <name4> を <name2> で割った商、 <name4> を <name2> で割った余り、 <name4> を <name2> で割った値で整形した文字列を出力する	print ( <val5> . format ( <name4> // <name2> , <name4> % <name2> , <name4> / <name2> ) )	print ( <val5> . format ( <name4> // <name2> , <name4> % <name2> , <name4> / <name2> ) )
<name5> の <name1> 番目の末尾に ( <name3> 、 <name4> ) の組を追加する	<name5> [ <name1> ] . append ( ( <name3> , <name4> ) )	<name4> [ <name1> ] . append ( ( <name3> , <name4> ) )
?を返す	return '?'	yield '?'
<name6> が <val4> 以下のとき、 <blk> <val2> を出力する </blk>	if <name6> <= <val4> : <blk> print ( <val2> ) </blk>	\ print ( <name6> <= <val4> : <blk> print ( <val2> ) </blk>
空列を <name3> の <name2> にする	<name3> . <name2> = [ ]	( <name3> . <name2> = [ ] )
<name2> の <name3> 番目を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in <name2> [ <name3> ] :	for <name1> , <name5> in <name2> [ <name3> ] :
<name1> に <val2> を加えた値を <val5> で割った余りが <name6> と等しいとき、	if ( <name1> + <val2> ) % <val5> == <name6> :	for <name6> == ( <name1> + <val2> ) % <val5> == <name6> :
( <val5> 、 <val3> 、 <val4> 、 <val1> 、 <val6> 、 <val2> ) からなる列を順に <name2> として、繰り返す	for <name2> in [ <val5> , <val3> , <val4> , <val1> , <val6> , <val2> ] :	for <name2> in [ <val5> , <val3> , <val4> , <val1> , <val6> , <val2> ] :
<name2> の <name6> の <name5> 番目が <val3> と等しいとき、	if <name2> . <name6> [ <name5> ] == <val3> :	for <name2> . <name6> [ <name5> ] == <val3> :
<name2> の <name3> 番目から <name4> 番目までの部分列を反転した列を <name2> の <name3> 番目から <name4> 番目までの部分列にする	<name2> [ <name3> : <name4> ] = reversed ( <name2> [ <name3> : <name4> ] )	<name2> [ <name3> : <name4> ] = reversed ( <name2> [ <name3> : <name4> ] )
\ <val6> に <name4> を掛けた値に <val3> を加えた値を <name1> とする\	\ <name1> = <val6> * <name4> + <val3> \	\ <name1> = <val6> * <name4> + <val3> \
<name2> でなくかつ <name4> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name2> and not <name4> : <blk> break </blk>	enumerate ( <name2> ) and not <name4> : <blk> break </blk>
<name4> ( <name5> , ( <name2> , <val1> , <name3> ) )	<name4> ( <name5> , ( <name2> , <val1> , <name3> ) )	<name4> ( <name5> , ( <name2> , <val1> , <name3> ) )
<name5> 、 <val2> に番号付した組の列を順に <name1> 、 <name3> として、繰り返す	for <name1> , <name3> in enumerate ( <name5> , <val2> ) :	for <name1> , <name3> in enumerate ( <name5> , <val2> ) :
<val3> を <name2> の <val4> 番目にする	<name2> [ <val4> ] = <val3>	( <name2> [ <val4> ] = <val3> )
<name5> の各要素を <name6> とし、 <name4> が <name6> 以下のときの <name5> の列の各要素を <name4> とし、 <name4> に <name6> を加えた値の列を <name1> とする	<name1> = [ <name4> + <name6> for <name4> in [ <name5> for <name6> in <name5> if <name4> <= <name6> ] ]	<name1> = [ [ <name4> + <name6> for <name4> in [ <name5> for <name6> in <name5> if <name4> <= <name6> ] ]
<name4> に <name3> を加えた値が <name6> 以下かつ <name5> が <name1> の <name4> に <name3> を加えた値番目より小さいとき、	if <name4> + <name3> <= <name6> and <name5> < <name1> [ <name4> + <name3> ] :	list ( <name4> + <name3> <= <name6> and <name5> < <name1> [ <name4> + <name3> ] ) :
<name6> の <name3> 番目の <name2> 番目を <name1> の <name3> 番目の <name2> から <name4> を引いた値番目にする	<name1> [ <name3> ] [ <name2> - <name4> ] = <name6> [ <name3> ] [ <name2> ]	<name1> [ <name3> ] [ <name2> - <name4> ] = <name6> [ <name3> ] [ <name2> ]
( ( <val1> 、 <name2> ) の組 ) からなる列を <name6> とする	<name6> = [ ( <val1> , <name2> ) ]	<name6> = [ ( <val1> , <name2> ) ]
<name4> の <name2> の <name6> 番目が <name4> の <name2> の <name3> 番目より小さいとき、	if <name4> . <name2> [ <name6> ] < <name4> . <name2> [ <name3> ] :	. <name4> [ <name2> . <name6> ] < <name4> . <name2> [ <name3> ] :
<name4> の <name2> に <val1> を加えた値番目を <name3> とする	<name3> = <name4> [ <name2> + <val1> ]	<name3> = <name4> [ <name2> + <val1> ]
整数、 <name6> の <name4> 番目を英小文字に変換した文字列が、つまり整数、 <name1> を英小文字に変換した文字列と等しいとき、	if str . lower ( <name6> [ <name4> ] ) == str . lower ( <name1> ) :	list ( str , <name6> [ <name4> ] . lower ( ) ) == str . lower ( <name1> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name1> とする	<name2> , <name3> , <name1> = map ( int , input ( ) . split ( ) )	<name2> , <name3> , <name1> = map ( int , input ( ) . split ( ) )
<name2> の先頭から <val3> を探して見つかった位置を <name1> とする	<name1> = <name2> . find ( <val3> )	<name1> = <name2> . find ( <val3> )
( <val4> ) からなる列の <val6> を <name5> だけ左シフトした値回分の列を <name2> とする	<name2> = [ <val4> ] * ( <val6> << <name5> )	<name2> = [ <val4> ] * ( <val6> << <name5> )
<name6> の <name2> の <name4> 番目に番号付した組の列を順に <name1> 、 <name3> として、繰り返す	for <name1> , <name3> in enumerate ( <name6> . <name2> [ <name4> ] ) :	for <name1> , <name3> in enumerate ( <name6> . <name2> [ <name4> ] ) :
\ <name2> ( <val1> % ( <val6> - <name3> ) ) \	\ <name2> ( <val1> % ( <val6> - <name3> ) ) \	% <name2> ( <val1> % ( <val6> - <name3> ) ) \
<name1> の <name5> を順に <name3> として、繰り返す <blk> <name3> . <name2> ( ) の各要素に <name6> を適用した列の総和の文字列の長さを出力する </blk>	for <name3> in <name1> . <name5> : <blk> print ( len ( str ( sum ( map ( <name6> , <name3> . <name2> ( ) ) ) ) ) ) </blk>	for <name3> in <name1> . <name5> : <blk> print ( len ( str ( sum ( map ( <name6> , <name3> . <name2> ( ) ) ) ) ) </blk>
<name5> の、つまり先頭から <name3> 番目までの部分列の総和を出力する	print ( sum ( <name5> [ : <name3> ] ) )	print ( sum ( <name5> [ : <name3> ] ) )
<name5> の <name4> 番目の <name1> 番目、 <name5> の <name4> 番目の <name6> 番目に <name5> の <name6> 番目の <name1> 番目を加えた値の最小値を <name5> の <name4> 番目の <name1> 番目にする	<name5> [ <name4> ] [ <name1> ] = min ( <name5> [ <name4> ] [ <name1> ] , <name5> [ <name4> ] [ <name6> ] + <name5> [ <name6> ] [ <name1> ] )	<name5> [ <name4> ] [ <name1> ] = min ( <name5> [ <name4> ] [ <name1> ] , <name5> [ <name4> ] [ <name6> ] + <name5> [ <name6> ] [ <name1> ] )
<name6> の <name2> 番目が、つまり未定値と等しいかどうかを返す	return <name6> [ <name2> ] is not None	x return <name6> [ <name2> ] is not None
<name4> が <val6> 以上かつ <name5> の <name4> 番目が <name2> より大きい間、次を繰り返す	while <name4> >= <val6> and <name5> [ <name4> ] > <name2> :	yield <name4> >= <val6> and <name5> [ <name4> ] > <name2> :
<name6> ( <name2> ) に <name6> ( <name3> ) を加えた値を <name5> とする	<name5> = <name6> ( <name2> ) + <name6> ( <name3> )	<name5> = <name6> ( <name2> ) + <name6> ( <name3> )
<name6> の <val5> 番目を <name1> の <name6> の <val4> 番目番目にする	<name1> [ <name6> [ <val4> ] ] = <name6> [ <val5> ]	not <name1> [ <name6> [ <val4> ] ] = <name6> [ <val5> ]
<name2> を展開し、それぞれ <name4> 、 <name5> 、 <name1> とする	<name4> , <name5> , <name1> = <name2>	<name4> , <name5> , <name1> = <name2>
<name1> から <val4> を引いた値を <val3> で割った商に <val4> を加えた値に <name2> を掛けた値を出力する	print ( ( ( <name1> - <val4> ) // <val3> + <val4> ) * <name2> )	<name1> print ( ( <name1> - <val4> ) // <val3> + <val4> ) * <name2> )
( <val4> ) からなる列の <name1> 回分の列を <name6> とする ( <val4> ) からなる列の <name1> 回分の列を <name2> とする	<name6> = [ <val4> ] * <name1> <name2> = [ <val4> ] * <name1>	<name1> = [ <val4> ] * <name1> <name2> = [ <val4> ] * <name1>
<name1> の <name6> 番目の <name4> 番目が <name5> と等しくないとき、	if <name1> [ <name6> ] [ <name4> ] != <name5> :	for <name1> in <name1> [ <name6> ] [ <name4> ] != <name5> :
<name4> の <name6> の <val1> 番目、 <name4> の <name6> の先頭、 <name4> の <name6> の <val5> 番目、 <name4> の <name6> の <val3> 番目を <name4> の <name6> の先頭、 <name4> の <name6> の <val3> 番目、 <name4> の <name6> の <val1> 番目、 <name4> の <name6> の <val5> 番目とする	<name4> . <name6> [ 0 ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val1> ] , <name4> . <name6> [ 0 ] , <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val3> ]	<name4> . <name6> [ 0 ] , <name4> . <name6> [ <val3> ] , <name4> . <name6> [ <val1> ] , <name4> . <name6> [ <val5> ] = <name4> . <name6> [ <val1> ] , <name4> . <name6> [ 0 ] , <name4> . <name6> [ <val5> ] , <name4> . <name6> [ <val3> ]
<val1> を書式として <val4> を間に入れて <name3> の各要素に整数を適用した列を連結した文字列で整形した文字列を出力する	print ( <val1> . format ( <val4> . join ( map ( str , <name3> ) ) ) )	<val3> print ( <val1> . format ( <val4> . join ( map ( str , <name3> ) ) ) )
<name4> の <name3> 乗に対する <val1> の剰余を <name6> とする	<name6> = pow ( <name4> , <name3> , <val1> )	<name6> = pow ( <name4> , <name3> , <val1> )
<name5> の <name3> の <name1> 番目が、つまり未定値と等しくないとき、	if <name5> . <name3> [ <name1> ] is None :	if <name5> . <name3> [ <name1> ] != None :
<name5> が <name4> 以下かつ <name5> と <val6> の論理積かつ <name2> の <name5> 番目が <val3> と等しいとき、	if <name5> <= <name4> and ( <name5> & <val6> ) and <name2> [ <name5> ] == <val3> :	for <name5> in <name4> and <name5> & <val6> and <name2> [ <name5> ] == <val3> :
( <name2> 、 <name1> 、 <name3> ) の組を返す	return ( <name2> , <name1> , <name3> )	yield ( <name2> , <name1> , <name3> )
<name3> のとき、 <blk> <name1> ( <name5> * <name5> % <val4> , <name3> // <val2> ) に <name3> を <val2> で割った余りのとき <name5> 、そうでなければ <val6> を掛けた値を <val4> で割った余りを返す </blk>	if <name3> : <blk> return <name1> ( <name5> * <name5> % <val4> , <name3> // <val2> ) * ( <name5> if <name3> % <val2> else <val6> ) % <val4> </blk>	if <name3> : <blk> return <name1> ( <name5> * <val4> , <name3> // <val2> ) * <name3> % <val2> else <val6> % <val4> </blk>
<name4> の各要素を <name1> とし、 <name2> の <name1> と等しい要素の最初の位置の列の組を <name5> とする	<name5> = tuple ( [ <name2> . index ( <name1> ) for <name1> in <name4> ] )	( <name5> = tuple ( [ <name2> . index ( <name1> ) ) for <name1> in <name4> ] )
( 、つまり偽 ) からなる列の <name6> の <name4> 回分の列を <name3> とする	<name3> = [ False ] * <name6> . <name4>	<name3> = [ False ] * <name6> . <name4>
<name2> の先頭を取り出した値の整数値を <name3> とする	<name3> = int ( <name2> . pop ( ) )	<name3> = int ( <name2> . pop ( ) )
0 から <name6> 未満までの数列の各要素を <name5> とし、 <name1> の <name5> 番目でないときの <name3> の <name5> 番目の列を <name4> とする	<name4> = [ <name3> [ <name5> ] for <name5> in range ( <name6> ) if not <name1> [ <name5> ] ]	<name4> = [ <name3> [ <name5> ] for <name5> in range ( <name6> ) if not <name1> [ <name5> ] ]
<name1> が <name6> に <name4> を加えた値より大きいとき、	if <name1> > <name6> + <name4> :	for <name1> > <name6> + <name4> :
<name1> かつ <name4> が <name1> の末尾の <val3> 番目以下の間、次を繰り返す	while <name1> and <name4> <= <name1> [ - <val3> ] [ <val3> ] :	and <name1> and <name4> <= <name1> [ - <val3> ] [ <val3> ] :
<name3> 、 <name5> に <name3> を加えた値を <name5> 、 <name3> とする	<name5> , <name3> = <name3> , <name5> + <name3>	<name2> , <name3> = <name3> , <name5> + <name3>
<name3> ( <name2> , <name1> ) を <name5> とする	<name5> = <name3> ( <name2> , <name1> )	else = <name3> ( <name2> , <name1> )
<name1> モジュールを用いる	from <name1> import permutations	return from <name1> import combinations
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = map ( int , <name1> ( ) . split ( ) )	<name5> , <name6> = map ( int , <name1> ( ) . split ( ) )
<name1> 内の <name5> の出現回数を出力する	print ( <name1> . count ( <name5> ) )	print ( <name1> . count ( <name5> ) )
0 から <name3> 未満までの数列の各要素を <name1> とし、 <name2> の <name1> 番目の <name5> から <name4> に <name2> の <name1> 番目の <name6> を掛けた値を引いた値の列を <name3> とする	<name3> = [ ( <name2> [ <name1> ] . <name5> - <name4> * <name2> [ <name1> ] . <name6> ) for <name1> in range ( <name3> ) ]	<name6> = [ <name2> [ <name1> ] . <name5> - <name4> * <name2> [ <name1> ] . <name6> for <name1> in range ( <name3> ) ]
<name6> ( <name2> ) を展開し、それぞれ <name2> 、 <name3> 、 <name5> 、 <name1> 、 <name4> とする	<name2> , <name3> , <name5> , <name1> , <name4> = <name6> ( <name2> )	( <name2> , <name3> , <name5> , <name1> , <name4> = <name6> ( <name2> ) )
<name4> の <name2> に <val5> を加えた値番目の <name3> に <name1> を加えた値番目を <name4> の <name2> 番目の <name3> 番目だけ増加させる	<name4> [ <name2> + <val5> ] [ <name3> + <name1> ] += <name4> [ <name2> ] [ <name3> ]	<name4> [ <name2> + <val5> ] [ <name3> + <name1> ] += <name4> [ <name2> ] [ <name3> ]
<name5> から <name4> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <name4> + <val6> ) :	( for <name1> in range ( <name5> , <name4> + <val6> ) :
<name6> の <name3> を <val1> だけ増加させる	<name6> . <name3> += <val1>	pow ( <name6> . <name3> , <val1> )
<name4> の <val2> 番目が <val1> と等しいとき、 <blk> - <name6> の <name4> [ <val5> ] の整数値番目の先頭を出力する </blk>	if <name4> [ <val2> ] == <val1> : <blk> print ( - <name6> [ ( int ( <name4> [ <val5> ] ) ) ] [ <val2> ] ) </blk>	<blk> if <name4> [ <val2> ] == <val1> : <blk> print ( - int ( <name6> [ <name4> [ <val5> ] ) ] [ <val1> ] ) </blk>
( ( <val2> 、 -1 ) の組、 ( <val2> 、 <val1> ) の組、 ( -1 、 <val2> ) の組、 ( <val1> 、 <val2> ) の組 ) の組を <name5> とする	<name5> = ( ( <val2> , - <val1> ) , ( <val2> , <val1> ) , ( - <val1> , <val2> ) , ( <val1> , <val2> ) )	<name5> = ( ( <val2> , - <val2> ) , ( <val2> , <val1> ) , ( - <val2> , <val2> ) , ( <val1> , <val2> ) )
<name2> の最大値を <name1> とする	<name1> = <name1> ( <name2> )	( <name1> = max ( <name2> ) )
0 から <name5> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を <val1> で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列の列を <name6> とする	<name6> = [ [ int ( <name2> ) for <name2> in input ( ) . split ( <val1> ) ] for <name4> in range ( <name5> ) ]	<name6> = [ [ int ( <name2> ) for <name2> in input ( ) . split ( <val1> ) ] for <name4> in range ( <name5> ) ]
0 を返す	return '0'	from return '0' ( '{0:.5f} [ 0 ] )
<name2> の <name3> の <name5> 番目の <name6> 番目に <name6> に <val1> を加えた値に <name2> の <name3> の <name5> 番目の <name6> に <val1> を加えた値番目を掛けた値を加えた値を <name2> の <name3> の <name5> に <val1> を加えた値番目の <name6> に <val1> を加えた値番目にする	<name2> . <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] = <name2> . <name3> [ <name5> ] [ <name6> ] + ( <name6> + <val1> ) * <name2> . <name3> [ <name5> ] [ <name6> + <val1> ]	<name3> . <name3> [ <name5> + <val1> ] [ <name6> + <val1> ] = <name2> . <name3> [ <name5> ] [ <name6> ] * ( ( <name6> + <val1> ) * <name2> . <name3> [ <name5> ] [ <name6> + <val1> ] )
無限の整数列が <val1> より小さいとき、	if count < <val1> :	isinstance ( count ) < <val1> :
<name4> の <name5> に <name2> を加えた値番目の <name2> 番目を <name6> で割った余りを出力する	print ( <name4> [ <name5> + <name2> ] [ <name2> ] % <name6> )	print ( <name4> [ <name5> + <name2> ] [ <name2> ] % <name6> )
<name4> に番号付した組の列を順に <name2> 、 <name1> 、 <name3> 、 <name5> 、 <name6> として、繰り返す	for <name2> , <name1> , <name3> , <name5> , <name6> in enumerate ( <name4> ) :	for <name2> , <name1> , <name3> , <name5> , <name6> in enumerate ( <name4> ) :
<name3> が <name4> の長さと等しくないとき、	if <name3> != len ( <name4> ) :	!= <name3> != len ( <name4> ) :
<name5> が <name3> 以上かつ <name6> が <name2> 以上のとき、	if <name5> >= <name3> and <name6> >= <name2> :	if <name5> >= <name3> and <name6> >= <name2> :
0 から <name2> 未満までの数列の各要素を <name6> とし、 <name6> の列を <name3> の <name1> にする	<name3> . <name1> = [ <name6> for <name6> in range ( <name2> ) ]	<name3> . <name1> = [ <name6> for <name6> in range ( <name2> ) ]
<name3> の <name2> 番目の末尾に [ MASK ] を追加するを <name1> とする	<name1> = <name3> [ <name2> ] . append	<name1> = <name3> [ <name2> ] . append
<name3> が <val4> より大きくかつ <name1> が <name2> の先頭の長さから <val5> を引いた値より小さい間、次を繰り返す	while <name3> > <val4> and <name1> < len ( <name2> [ <val4> ] ) - <val5> :	try > <val4> and <name1> < len ( <name2> [ <val4> ] ) - <val5> :
<name3> . <name2> ( <name1> ) を <name3> の <name5> にする	<name3> . <name5> = <name3> . <name2> ( <name1> )	<name3> . <name5> = <name3> . <name2> ( <name1> )
<name1> を <name1> に <val4> を加えた値との論理和にする	<name1> | = <name1> + <val4>	( <name1> | = <name1> + <val4> )
<name2> から <name3> に <val1> を加えた値未満までの数列のリストを返す	return list ( range ( <name2> , <name3> + <val1> ) )	yield list ( range ( <name2> , <name3> + <val1> ) )
<name3> の末尾に <name4> の整数値を追加する	<name3> . append ( int ( <name4> ) )	<name3> . append ( int ( <name4> ) )
<val1> を間に入れて <name5> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val1> . join ( map ( str , <name5> ) ) )	<val1> print ( <val1> . join ( map ( str , <name5> ) ) )
<name5> に <name4> を加えた値を <name2> とする	<name2> = <name5> + <name4>	( <name2> = <name5> + <name4> )
<val3> を <name4> とするを <name6> とする	<name6> = <name4> = <val3>	<name2> <name6> = <name4> = <val3>
<name5> の <name1> 番目を <val3> との排他的論理和にする	<name5> [ <name1> ] ^ = <val3>	<name1> [ <name1> ] ^ = <val3>
<name3> を順に <name1> 、 <name4> 、 <name5> として、繰り返す	for <name1> , <name4> , <name5> in <name3> :	. for <name1> , <name4> , <name5> in <name3> :
<name4> の長さ、 <name6> を <name1> 、 <name3> とする	<name1> , <name3> = len ( <name4> ) , <name6>	<name1> , <name3> = len ( <name4> ) , <name6>
% . 6 f % . 6 f を ( <name2> に <name6> の <val4> 乗を掛けた値、 <val4> に <name2> を掛けた値に <name6> を掛けた値 ) の組で割った余りを出力する	print ( '%.6f %.6f' % ( <name2> * <name6> ** <val4> , <val4> * <name2> * <name6> ) )	[ print ( <name6> % ( <name2> * <name6> ** <val4> , <val4> * <name2> * <name6> ) )
<name4> の <name3> 番目を <name2> から <name5> の <val1> 乗を引いた値だけ増加させる	<name4> [ <name3> ] += <name2> - <name5> ** <val1>	( <name4> [ <name3> ] += <name2> - <name5> ** <val1> )
<name6> に <name4> を掛けた値の整数値を <name2> とする	<name2> = int ( <name6> * <name4> )	( <name2> = int ( <name6> * <name4> ) )
<name4> の <name6> 番目の先頭を除いた部分列の整数値を <name2> とする	<name2> = int ( <name4> [ <name6> ] [ 1 : ] )	<name2> = int ( <name4> [ <name6> ] [ 1 : ] )
<name2> でなくかつ <name5> でなくかつ <name4> でなくかつ <name1> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name2> and not <name5> and not <name4> and not <name1> : <blk> break </blk>	enumerate ( <name2> and not <name5> ) and not <name4> and not <name1> : <blk> break </blk>
<name5> を円周率を <val3> で割った値倍にする	<name5> *= math . pi / <val3>	( <name5> *= math . pi / <val3> )
<name2> を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <name2>	( <name5> [ <val1> ] = <name2> )
<name2> かつ <name3> が <name1> の <name6> 番目に <val5> を加えた値より大きいかどうかが <name4> 以下のとき、	if <name2> and <name3> > <name1> [ <name6> ] + <val5> <= <name4> :	for <name2> and <name3> > <name1> [ <name6> ] + <val5> <= <name4> :
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列の集合を <name2> とする	<name2> = set ( [ int ( <name5> ) for <name5> in input ( ) . split ( ) ] )	<name2> = set ( [ int ( <name5> ) for <name5> in input ( ) . split ( ) ] )
<name3> 、 <name4> の要素をそれぞれ組にした列を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in zip ( <name3> , <name4> ) :	( <name6> , <name5> in zip ( <name3> , <name4> ) :
<name2> の <name4> の <val6> 番目番目の末尾に <name4> の <val3> 番目を追加する	<name2> [ <name4> [ <val6> ] ] . append ( <name4> [ <val3> ] )	<name4> [ <val6> ] ] . append ( <name4> [ <val3> ] )
<name2> の <name4> に <val6> を掛けた値に <name1> を加えた値番目が <val3> と等しいとき、	if <name2> [ <name4> * <val6> + <name1> ] == <val3> :	for <name2> in <name2> [ <name4> * <val6> + <name1> ] == <val3> :
<name5> かつ <name5> の末尾の <val2> 番目が <name1> より大きい間、次を繰り返す	while <name5> and ( <name5> [ - 1 ] [ <val2> ] > <name1> ) :	: while <name5> and <name5> [ - 1 ] [ <val2> ] > <name1> :
ソートされた順序を保ったまま <name1> を <name3> に挿入できる最後の位置を <name6> とする	<name6> = bisect_right ( <name3> , <name1> )	<name6> = bisect_right ( <name3> , <name1> )
<name6> に <name5> から <name2> を引いた値を掛けた値を <name1> とする	<name1> = <name6> * ( <name5> - <name2> )	<name1> = <name6> * ( <name5> - <name2> )
<name1> の末尾の先頭、 <name1> の末尾の <val4> 番目を <name6> 、 <name5> とする	<name6> , <name5> = <name1> [ - <val4> ] [ 0 ] , <name1> [ - <val4> ] [ <val4> ]	<name2> , <name5> = <name1> [ - <val4> ] [ 0 ] , <name1> [ - <val4> ] [ <val4> ]
. #に <name4> を <val5> で割った商に <val6> に <name4> を <val5> で割った余りを掛けた値を加えた値を掛けた値を出力する	print ( '.#' * ( <name4> // <val5> ) + <val6> * ( <name4> % <val5> ) )	. print ( '#.' * ( <name4> // <val5> ) + <val6> * ( <name4> % <val5> ) )
<name2> 、 <name1> の最小値を返す	return min ( <name2> , <name1> )	self return min ( <name2> , <name1> )
<name3> . <name4> ( [ <val2> ] )	<name3> . <name4> ( [ <val2> ] )	( <name3> . <name4> ( [ <val2> ] ) )
<name4> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name4> : <blk> break </blk>	if not <name4> : <blk> break </blk>
\ <name2> ( <val6> % <val3> . <name1> ( <name4> ( <name5> , <name2> ) ) ) \	\ <name2> ( <val6> % <val3> . <name1> ( <name4> ( <name5> , <name2> ) ) ) \	% <name2> ( <val6> % <val3> . <name1> ( <name4> ( <name5> , <name2> ) ) ) \
<name2> の末尾に <name1> . <name5> ( ) を追加する	<name2> . append ( <name1> . <name5> ( ) )	<name2> . append ( <name1> . <name5> ( ) )
<name2> ( <name4> ( ) . <name3> ( <val5> , <val6> ) ) を <name1> とする	<name1> = <name2> ( <name4> ( ) . <name3> ( <val5> , <val6> ) )	<name1> = <name2> ( <name4> ( ) . <name3> ( <val5> , <val6> ) )
<name5> の <name2> を <name2> とする	<name2> = <name5> . <name2>	<name2> = <name5> . <name2>
<name6> を返す	return ( <name6> )	assert <name6> ( a , b )
<name6> ( ) エラーとなる	raise <name6> ( )	raise <name6> ( )
<val5> に <val3> を加えた値に <name6> から <val4> を引いた値に <val2> を掛けた値を加えた値を <name1> とする	<name1> = <val5> + <val3> + ( <name6> - <val4> ) * <val2>	<name1> = <val5> + <val3> + ( <name6> - <val4> ) * <val2>
<name2> の <name4> に [ MASK ] を書き込むを <name1> とする	<name1> = <name2> . <name4> . <name1>	<name1> = <name2> . <name4> . <name1>
<name2> を順に <name5> 、 <name6> 、 <name1> 、 <name3> として、繰り返す	for <name5> , <name6> , <name1> , <name3> in <name2> :	. for <name5> , <name6> , <name1> , <name3> in <name2> :
<name2> ( )	<name2> ( )	tuple ( <name2> ( ) )
<name5> を <val6> だけ右シフトした値を <name5> とする	<name5> = <name5> >> <val6>	<name5> = <name5> >> <val6>
<name5> が <name3> から <val4> を引いた値より小さいとき、	if <name5> < <name3> - <val4> :	while <name5> < <name3> - <val4> :
<val6> に <val2> を掛けた値を <name4> とする	<name4> = <val6> * <val2>	<name4> = <val6> * <val2>
<name4> を <name2> で割った商を <name1> とする	<name1> = <name4> // <name2>	( <name1> = <name4> // <name2> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name6> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name3> を順に <name1> 、 <name6> 、 <name4> として、繰り返す	for <name1> , <name6> , <name4> in <name3> :	. for <name1> , <name6> , <name4> in <name3> :
<val3> の <val4> 乗に <val1> を加えた値を <name5> とする	<name5> = <val3> ** <val4> + <val1>	<name5> = <val3> ** <val4> + <val1>
<val3> が <name2> より小さい間、次を繰り返す	while <val3> < <name2> :	: while <val3> < <name2> :
入力された文字列を <val3> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を <name1> とする	<name1> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ]	<name1> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val3> ) ]
<name4> の <name5> 番目の <name1> 番目を出力する	print ( <name4> [ <name5> ] [ <name1> ] )	print ( <name4> [ <name5> ] [ <name1> ] )
<name1> の <name2> が <name2> より大きいとき、	if <name1> . <name2> > <name2> :	for <name1> . <name2> > <name2> :
<name3> の <name4> 番目を <name1> の <name2> 番目にする	<name1> [ <name2> ] = <name3> [ <name4> ]	not <name1> [ <name2> ] = <name3> [ <name4> ]
<name5> 内の <val6> の出現回数が <name4> と等しくかつ <name5> 内の <val2> の出現回数が <name3> と等しいとき、	if <name5> . count ( <val6> ) == <name4> and <name5> . count ( <val2> ) == <name3> :	or <name5> . count ( <val6> ) == <name4> and <name5> . count ( <val2> ) == <name3> :
<name5> を <name6> の長さの文字列だけ増加させる	<name5> += str ( len ( <name6> ) )	<name2> += str ( len ( <name6> ) )
<name6> の <name5> の長さから、つまり末尾までの部分列を <name6> とする	<name6> = <name6> [ len ( <name5> ) : ]	<name6> = <name6> [ len ( <name5> ) : ]
<name3> の <val2> 番目に <name4> のとき <name4> の <val5> 番目、そうでなければ <val6> を加えた値に <name1> のとき <name1> の <val5> 番目、そうでなければ <val6> を加えた値を <name3> の <val5> 番目にする	<name3> [ <val5> ] = <name3> [ <val2> ] + ( <name4> [ <val5> ] if <name4> else <val6> ) + ( <name1> [ <val5> ] if <name1> else <val6> )	<name3> [ <val5> ] = <name3> [ <val2> ] + ( <name4> [ <val5> ] if <name4> else <val6> ) + ( <name1> [ <val5> ] if <name1> else <val6> )
空辞書を <name6> の <name1> 番目にする	<name6> [ <name1> ] = { }	( <name6> [ <name1> ] = { } )
<name2> の <val6> 番目から、つまり末尾までの部分列に <name2> の、つまり先頭から <val6> 番目までの部分列を加えた値を <name2> とする	<name2> = <name2> [ <val6> : ] + <name2> [ 0 : <val6> ]	<name6> = <name2> [ <val6> : ] + <name2> [ : <val6> ]
<name5> の <val4> を書式として <name3> 、 <name2> で整形した文字列番目を返す	return <name5> [ <val4> . format ( <name3> , <name2> ) ]	assert <name5> [ <val4> . format ( <name3> , <name2> ) ]
<name5> モジュールを用いる	from <name5> import ceil	from <name5> , Counter
<name1> から <name6> を引いた値に <name4> を掛けた値が <name3> から <name2> を引いた値に <name5> を掛けた値と等しくかつ <name1> から <name6> を引いた値に <name4> を掛けた値が <name6> から <name2> を引いた値に <name5> を掛けた値と等しいとき、	if ( <name1> - <name6> ) * <name4> == ( <name3> - <name2> ) * <name5> and ( <name1> - <name6> ) * <name4> == ( <name6> - <name2> ) * <name5> :	[ print ( ( <name1> - <name6> ) * <name4> == ( <name3> - <name2> ) * <name5> and ( <name1> - <name6> ) * <name4> ) == ( <name6> - <name2> ) * <name5> :
<name1> の <val4> 番目の整数値を <name1> の <val4> 番目にする	<name1> [ <val4> ] = int ( <name1> [ <val4> ] )	<name1> [ <val4> ] = int ( <name1> [ <val4> ] )
( <val2> ) からなる列	[ <val2> ]	return [ [ <val2> ] ]
<name1> に <val3> を加えた値から <name5> に <val3> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name1> + <val3> , <name5> + <val3> ) :	. for <name2> in range ( <name1> + <val3> , <name5> + <val3> ) :
<name6> に <name4> を掛けた値に <name3> に <name1> を加えた値を掛けた値を <name5> とする	<name5> = <name6> * <name4> * ( <name3> + <name1> )	else = <name6> * <name4> * ( <name3> + <name1> )
<name5> を空白で分割した字句列を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = <name5> . split ( )	<name1> , <name3> = <name5> . split ( )
<name2> . <name6> ( <name4> , <name1> , <name3> ) を <name5> とする	<name5> = <name2> . <name6> ( <name4> , <name1> , <name3> )	else = <name2> . <name6> ( <name4> , <name1> , <name3> )
<val4> を <name6> の <name1> 番目にする	<name6> [ <name1> ] = <val4>	( <name6> [ <name1> ] = <val4> )
<name1> に <name6> の <val3> 乗を加えた値を <name1> とする	<name1> = <name1> + pow ( <name6> , <val3> )	<name1> = <name1> + <name6> ** <val3>
<name6> が <name2> と等しくない間、次を繰り返す	while <name6> != <name2> :	del <name6> != <name2> :
<name4> から読み込んだ行の列を <name3> とする	<name3> = <name4> . <name3>	<name3> = <name4> . readlines ( )
<name6> が <name2> の <name5> の <name6> 番目と等しくない間、次を繰り返す	while ( <name6> != <name2> . <name5> [ <name6> ] ) :	while <name6> != <name2> . <name5> [ <name6> ] :
<name2> の <name4> 番目が <name6> より大きいとき、	if <name2> [ <name4> ] > <name6> :	while <name2> [ <name4> ] > <name6> :
<name3> 、 <name6> を <name6> の <name3> 、 <name3> の <name3> とする	<name6> . <name3> , <name3> . <name3> = <name3> , <name6>	<name6> . <name3> , <name3> . <name3> = <name3> , <name6>
<name6> が <val5> より大きいとき、 <blk> <name2> を <val4> だけ増加させる </blk>	if <name6> > <val5> : <blk> <name2> += <val4> </blk>	\ <name6> > <val5> : <blk> <name2> += <val4> </blk>
<name1> の末尾に ( <name6> 、 <name2> ) からなる列を追加する	<name1> . append ( [ <name6> , <name2> ] )	not <name1> . append ( [ <name6> , <name2> ] )
改行せずに 'left key = {}, ' を出力する	print ( left key = { lk } , , end = '' )	n print ( node key , key , end f = '' ) , end = '' )
<name2> に <name5> を掛けた値を <name6> とする	<name6> = <name2> * <name5>	<name6> = <name2> * <name5>
<name3> の <name4> の各要素に整数を適用した列のリストを <name2> とする	<name2> = list ( map ( int , <name3> . <name4> ) )	<name2> = list ( map ( int , <name3> . <name4> ) )
( <name4> から <name5> を引いた値、 <name2> から <name3> を引いた値 ) の組を <name6> とする	<name6> = ( <name4> - <name5> , <name2> - <name3> )	else = ( <name4> - <name5> , <name2> - <name3> )
<val1> から <val3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , <val3> ) :	. for <name5> in range ( <val1> , <val3> ) :
0 から <name1> 未満までの数列の各要素を <name2> とし、 <name6> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name4> とする	<name4> = [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]	<name4> = [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]
<name1> ( <name3> ) を <name2> とするを <name6> の <name4> 番目にする	<name6> [ <name4> ] = <name2> = <name1> ( <name3> )	dict [ <name4> ] = <name2> = <name1> ( <name3> )
<name4> * <val3> に <name1> * <val5> を加えた値に <name6> に <val2> を掛けた値を加えた値に <name4> に <val3> を掛けた値を加えた値に <name1> に <val5> を掛けた値を加えた値に <name6> に <val2> を掛けた値を加えた値を <name2> とする	<name2> = <name4> * <val3> + <name1> * <val5> + <name6> * <val2> + <name4> * <val3> + <name1> * <val5> + <name6> * <val2>	<name2> = <name4> * <val3> + <name1> * <val5> + <name6> * <val2> + <name4> * <val3> + <name1> * <val5> + <name6> * <val2>
入力された文字列を <val1> で分割した字句列を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = input ( ) . split ( <val1> )	<name3> , <name5> = input ( ) . split ( <val1> )
<name5> の <name4> ( <name5> , <name3> ) 番目を <name1> とする	<name1> = <name5> [ <name4> ( <name5> , <name3> ) ]	<name1> = <name5> [ <name4> ( <name5> , <name3> ) ]
<name2> を <name3> の <name2> 番目とするを <name4> の <name2> 番目にする	<name4> [ <name2> ] = <name3> [ <name2> ] = <name2>	<name2> [ <name2> ] = <name3> [ <name2> ] = <name2>
( <name6> ) からなる列の <name5> 回分の列を <name2> とする	<name2> = [ <name6> ] * <name5>	<name2> = [ <name6> ] * <name5>
sample - input . txt 、 <val6> を開いたファイルストリームを <name2> の <name5> にする	<name2> . <name5> = open ( 'sample-input.txt' , <val6> )	<name2> . <name5> = open ( 'sample-input.txt' , <val6> )
<name4> かつ <name4> の <val2> 番目が <name1> と等しくなくまたは <name4> の <val3> 番目が <name1> と等しくない間、次を繰り返す	while <name4> and ( <name4> [ <val2> ] is <name1> or <name4> [ <val3> ] is <name1> ) :	for while <name4> and ( <name4> [ <val2> ] != <name1> or <name4> [ <val3> ] != <name1> ) :
文字コード <name2> ( <name4> ) から <name3> を引いた値に <name5> を加えた値を <val1> で割った余りに <name3> を加えた値の文字を <name4> とする	<name4> = chr ( ( ( <name2> ( <name4> ) - <name3> + <name5> ) % <val1> ) + <name3> )	<name4> = chr ( ( <name2> ( <name4> ) - <name3> + <name5> ) % <val1> + <name3> )
( <val4> 、 <val3> ) の組	( <val4> , <val3> )	) ( <val4> , <val3> )
<name2> ( <name5> [ : <name1> ] + <val3> + <name5> [ <name1> + <val6> : ] , <name4> , <name2> , <name5> , <name1> , <name3> ) に <name6> ( <name1> , <name5> , <name2> , <name5> , <name3> ) を加えた値を <name4> とする	<name4> = <name2> ( <name5> [ : <name1> ] + <val3> + <name5> [ <name1> + <val6> : ] , <name4> , <name2> , <name5> , <name1> , <name3> ) + <name6> ( <name1> , <name5> , <name2> , <name5> , <name3> )	<name4> = <name2> ( <name5> [ : <name1> ] + <val3> + <name5> [ <name1> + <val6> : ] , <name4> , <name2> , <name5> , <name1> , <name3> ) + <name6> ( <name1> , <name5> , <name2> , <name5> , <name3> )
<val2> を <name3> とするを <name4> とする	<name4> = <name3> = <val2>	<name3> = <name3> = <val2>
空列、空辞書を <name2> 、 <name4> とする	<name2> , <name4> = [ ] , { }	dict , <name4> = [ ] , { }
<name4> に <name6> を加えた値から <val3> を引いた値から <name2> に <val3> を加えた値の <val1> 乗を引いた値に <name5> を加えた値を <name5> とする	<name5> = <name4> + <name6> - <val3> - ( <name2> + <val3> ) ** <val1> + <name5>	<name5> = <name4> + <name6> - <val3> - ( <name2> + <val3> ) ** <val1> + <name5>
<val1> から <name3> の長さ未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> , len ( <name3> ) ) :	. for <name6> in range ( <val1> , len ( <name3> ) ) :
<name1> の <name6> ( <name3> ) 番目を <val5> だけ増加させる <name1> の <name6> ( <name4> ) 番目を <val5> だけ減少させる	<name1> [ <name6> ( <name3> ) ] += <val5> <name1> [ <name6> ( <name4> ) ] -= <val5>	<name2> [ <name1> [ <name6> ( <name3> ) ] ] += <val5> <name1> [ <name6> ( <name4> ) ] -= <val5>
0 から <name3> 未満までの数列の各要素を <name4> とし、、つまり集合の列を <name1> とする	<name1> = [ set ( ) for <name4> in range ( <name3> ) ]	<name6> = [ set ( ) for <name4> in range ( <name3> ) ]
<name2> に整数を追加した集まり	<name2> . add ( str )	<name1> . add ( int ( <name2> ) )
<name5> ( ( <name2> ** <val6> + <name1> ** <val6> - <name3> ** <val6> ) / ( <val6> * <name2> * <name1> ) ) を <name4> とする	<name4> = <name5> ( ( <name2> ** <val6> + <name1> ** <val6> - <name3> ** <val6> ) / ( <val6> * <name2> * <name1> ) )	<name4> = <name5> ( ( <name2> ** <val6> + <name1> ** <val6> - <name3> ** <val6> ) / ( <val6> * <name2> * <name1> ) )
<name5> を <val2> で割った商を <name3> とする	<name3> = <name5> // <val2>	( <name3> = <name5> // <val2> )
{ : . 6 f }を書式として <name5> に <name4> を掛けた値を <val3> で割った値で整形した文字列を出力する	print ( '{:.6f}' . format ( ( <name5> * <name4> ) / <val3> ) )	print ( '{:.6f}' . format ( <name5> * <name4> / <val3> ) )
<name5> ( <name3> - <name4> , <name2> - <name1> , <name6> ) を <name6> とする	<name6> = <name5> ( <name3> - <name4> , <name2> - <name1> , <name6> )	<name6> = <name5> ( <name3> - <name4> , <name2> - <name1> , <name6> )
<name4> の <name6> を <val5> で割った余りのとき <name6> を <val5> で割った商、そうでなければ <name6> を <val5> で割った商から <val3> を引いた値番目を <name1> とする	<name1> = <name4> [ <name6> // <val5> if <name6> % <val5> else <name6> // <val5> - <val3> ]	<name4> = <name4> [ <name6> // <val5> if <name6> % <val5> else <name6> // <val5> - <val3> ]
<name5> . <name1> ( <name3> ) を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name5> . <name1> ( <name3> )	<name2> , <name4> = <name5> . <name1> ( <name3> )
<name6> の <name2> 番目の <name5> が <val3> と等しくまたは <name1> の <name6> [ <name2> ] の <name5> に <val4> を加えた値番目が、つまり未定値と等しくないとき、	if <name6> [ <name2> ] . <name5> == <val3> or <name1> [ <name6> [ <name2> ] . <name5> + <val4> ] != None :	while <name6> [ <name2> ] [ <name5> == <val3> or <name1> [ <name6> [ <name2> ] [ <name5> + <val4> ] != None :
<name4> が <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name4> == <val5> : <blk> break </blk>	\ if <name4> == <val5> : <blk> break </blk>
<name6> の <name1> 番目を <name6> の <val3> 番目にする	<name6> [ <val3> ] = <name6> [ <name1> ]	<name1> [ <val3> ] = <name6> [ <name1> ]
kogakubu10gokan を出力する	print ( 'kogakubu10gokan' )	& print ( '{:.10f} ' ) )
<name4> をパラメータとして <name4> の <val5> 番目を返す関数をキーとして <name1> をソートした列を <name1> とする	<name1> = sorted ( <name1> , key = lambda <name4> : <name4> [ <val5> ] )	<name4> = sorted ( <name1> , key = lambda <name4> : <name4> [ <val5> ] )
0 から <name2> から <name1> を引いた値に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> - <name1> + <val5> ) :	for <name6> in range ( <name2> - <name1> + <val5> ) :
<name2> に <val5> に <name6> の先頭を掛けた値を加えた値、 <name3> に <val5> に <name6> の <val1> 番目を掛けた値を加えた値を出力する	print ( <name2> + <val5> * <name6> [ 0 ] , <name3> + <val5> * <name6> [ <val1> ] )	print ( <name2> + <val5> * <name6> [ 0 ] , <name3> + <val5> * <name6> [ <val1> ] )
<name1> ( <val5> , <val3> ) を <name6> とする	<name6> = <name1> ( <val5> , <val3> )	<name6> = <name1> ( <val5> , <val3> )
<name3> . <name4> ( <name5> , <name2> , <name1> ( <name6> , <name3> ) ) を <name6> とする	<name6> = <name3> . <name4> ( <name5> , <name2> , <name1> ( <name6> , <name3> ) )	<name6> = <name3> . <name4> ( <name5> , <name2> , <name1> ( <name6> , <name3> ) )
<name6> に <name4> を加えた値を <name3> とする	<name3> = <name6> + <name4>	<name3> = <name6> + <name4>
<name2> の <val3> 番目から <name1> を引いた値を <name6> とする	<name6> = <name2> [ <val3> ] - <name1>	( <name6> = <name2> [ <val3> ] - <name1> )
<name6> に <val1> を加えた値から <name3> を引いた値を <name5> とする	<name5> = <name6> + <val1> - <name3>	( <name5> = <name6> + <val1> - <name3> )
<name4> を展開し、それぞれ <name3> 、 <name2> とする <name1> を展開し、それぞれ <name5> 、 <name6> とする <name4> を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name4> <name5> , <name6> = <name1> <name3> , <name2> = <name4>	<name2> = <name4> <name5> , <name6> = <name1> <name3> , <name2> = <name4>
<val1> を書式として <name2> の x 座標、 <name2> の y 座標、 <name6> の x 座標、 <name6> の y 座標で整形した文字列を出力する	print ( <val1> . format ( <name2> . x , <name2> . y , <name6> . x , <name6> . y ) )	end . format ( <name2> . x , <name2> . y , <name6> . x , <name6> . y ) )
改行せずに <name6> の <name2> 番目の文字列に <val4> を加えた値を出力する	print ( str ( <name6> [ <name2> ] ) + <val4> , end = '' )	print ( str ( <name6> [ <name2> ] ) + <val4> , end = '' )
<name2> を <name1> から <val4> を引いた値だけ増加させる	<name2> += ( <name1> - <val4> )	( <name2> += <name1> - <val4> )
<val3> から <name5> の長さ未満までの <val6> 間隔の数列を順に <name1> として、繰り返す <blk> <name4> を <name2> の <val1> 進表記 <name5> の <name1> 番目から <name1> に <val6> を加えた値までの部分列の整数値番目だけ増加させる </blk>	for <name1> in range ( <val3> , len ( <name5> ) , <val6> ) : <blk> <name4> += <name2> [ int ( <name5> [ <name1> : <name1> + <val6> ] , <val1> ) ] </blk>	\ <name1> in range ( <val3> , len ( <name5> ) , <val6> ) : <blk> <name4> += <name2> [ int ( <name5> [ <name1> : <name1> + <val6> ] ) ] </blk>
<name2> の <name4> に <name5> を挿入する	<name2> . insert ( <name4> , <name5> )	<name4> . insert ( <name5> , <name5> )
( - <val6> の浮動小数点数 ) からなる列を <name5> とする	<name5> = [ - float ( <val6> ) ]	<name5> = [ - float ( <val6> ) ]
<name3> の <name2> 番目の <name6> 番目を <name3> の <name2> 番目の <name6> から <val1> を引いた値番目だけ増加させる	<name3> [ <name2> ] [ <name6> ] += <name3> [ <name2> ] [ <name6> - <val1> ]	<name3> [ <name2> ] [ <name6> ] += <name3> [ <name2> ] [ <name6> - <val1> ]
<name5> の <name3> 番目の末尾に ( <name1> 、 <name4> 、 <name6> ) の組を追加する	<name5> [ <name3> ] . append ( ( <name1> , <name4> , <name6> ) )	<name4> [ <name3> ] . append ( ( <name1> , <name4> , <name6> ) )
<name2> の <name3> の <name6> 番目が <val1> より小さいとき、	if <name2> . <name3> [ <name6> ] < <val1> :	list ( <name2> . <name3> [ <name6> ] < <val1> ) :
<name3> を反転した列を順に <name6> として、繰り返す	for <name6> in reversed ( <name3> ) :	for <name6> in reversed ( <name3> ) :
<name4> の <name6> の <name1> 番目が <val5> 以上の間、次を繰り返す	while <name4> . <name6> [ <name1> ] >= <val5> :	del <name4> . <name6> [ <name1> ] >= <val5> :
入力された文字列を順に <name2> として、繰り返す	for <name2> in input ( ) :	: for <name2> in input ( ) :
<name6> の <name3> 番目の <name4> 番目かつ <name5> の <name4> 番目が <name1> と等しいとき、	if <name6> [ <name3> ] [ <name4> ] and <name5> [ <name4> ] == <name1> :	list ( <name6> [ <name3> ] [ <name4> ] and <name5> [ <name4> ] == <name1> ) :
<name2> から <name1> の <name5> 番目を引いた値が <val4> 以上のとき、	if ( <name2> - <name1> [ <name5> ] >= <val4> ) :	continue <name2> - <name1> [ <name5> ] >= <val4> :
( <val5> 、 <val2> ) からなる列を <name3> の <val4> 番目にする	<name3> [ <val4> ] = [ <val5> , <val2> ]	<name1> [ <val4> ] = [ <val5> , <val2> ]
<name5> を <name4> で割った余りかつ <name5> を <name4> で割った商が <val3> より小さいとき、	if <name5> % <name4> and <name5> // <name4> < <val3> :	list ( <name5> % <name4> ) and ( <name5> // <name4> ) < <val3> :
<name4> の <name1> 番目の整数値を <name2> とする	<name2> = int ( <name4> [ <name1> ] )	<name2> = int ( <name4> [ <name1> ] )
<name2> を <name5> の <val6> 番目の <name4> 番目の <val6> を <name4> だけ左シフトした値番目にする	<name5> [ <val6> ] [ <name4> ] [ <val6> << <name4> ] = <name2>	<name4> [ <val6> ] [ <name4> ] [ <val6> << <name4> ] = <name2>
<name5> の <val2> 番目かつ <name6> ( <name5> )	<name5> [ <val2> ] and <name6> ( <name5> )	( <name5> [ <val2> ] and <name6> ( <name5> ) )
<name3> の <name4> 番目から <name2> に <val6> を加えた値までの部分列を出力する	print ( <name3> [ <name4> : <name2> + <val6> ] )	print ( <name3> [ <name4> : <name2> + <val6> ] )
<name2> の <name1> 番目を <name2> の <name1> に <val5> を加えた値番目にする	<name2> [ <name1> + <val5> ] = <name2> [ <name1> ]	<name4> [ <name2> [ <name1> + <val5> ] ] = <name2> [ <name1> ]
<name3> の <name4> 番目が <name3> の <name4> から <val5> を引いた値番目より小さいとき、	if <name3> [ <name4> ] < <name3> [ <name4> - <val5> ] :	continue <name3> [ <name4> ] < <name3> [ <name4> - <val5> ] :
<name1> が <name4> と等しいかどうかが <name6> と等しいかどうかが <name2> と等しいかどうかが <name3> と等しいかどうかが <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <name4> == <name6> == <name2> == <name3> == <val5> : <blk> break </blk>	while ( <name1> == <name4> == <name6> == <name2> == <name3> == <val5> ) : <blk> break </blk>
<name5> ( <name6> , <name2> = <name4> , <name3> = <name1> )	<name5> ( <name6> , <name2> = <name4> , <name3> = <name1> )	<name5> ( <name6> , <name2> = <name4> , <name3> = <name1> )
Not stable を <name2> とする	<name2> = 'Not stable'	<name2> = 'ON'
\ <val6> を間に入れて <name2> . <name1> ( ) の各要素を <name5> とし、 <val4> を書式として <name5> 、 <name2> . <name3> ( <name5> ) で整形した文字列の列を連結した文字列を返す\	\ return <val6> . join ( [ <val4> . format ( <name5> , <name2> . <name3> ( <name5> ) ) for <name5> in <name2> . <name1> ( ) ] ) \	% <val6> . join ( [ <val4> . format ( <name5> , <name2> . <name3> ( <name5> ) ) for <name5> in <name2> . <name1> ( ) ] ) \
<val4> を <name2> とする <val6> を <name3> とする <val1> を <name5> とする <val4> を <name2> とする <val6> を <name3> とする	<name2> = <val4> <name3> = <val6> <name5> = <val1> <name2> = <val4> <name3> = <val6>	<name6> = <val4> <name2> = <val6> <name5> = <val1> <name2> = <val4> <name3> = <val6>
( <val5> 、 <val5> ) からなる列に ( <val4> ) からなる列の <val1> 回分の列を加えた値を <name3> とする	<name3> = [ <val5> , <val5> ] + [ <val4> ] * <val1>	<name3> = [ <val5> , <val5> ] + [ <val4> ] * <val1>
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = map ( int , input ( ) . strip ( ) . split ( ) )	<name4> , <name2> = map ( int , input ( ) . strip ( ) . split ( ) )
bantam を <name1> とする	<name1> = 'bantam'	<name1> = '3C' ' ' '
<name6> ( [ <name5> , <name3> ] , [ <name1> , <name4> ] ) のとき <val2> 、そうでなければ <val2> を出力する	print ( <val2> if <name6> ( [ <name5> , <name3> ] , [ <name1> , <name4> ] ) else <val2> )	print ( <val2> if <name6> ( [ <name5> , <name3> ] , [ <name1> , <name4> ] ) else <val2> )
<name2> の順列のリストを <name6> とする	<name6> = list ( itertools . permutations ( <name2> ) )	<name6> = list ( itertools . permutations ( <name2> ) )
<name6> に ( <name1> 、 <name2> ) の組を追加した集まり	<name6> . add ( ( <name1> , <name2> ) )	not <name6> . add ( ( <name1> , <name2> ) )
<name4> ( <name2> . <name1> [ <val3> : ] )	<name4> ( <name2> . <name1> [ <val3> : ] )	<name4> ( <name2> . <name1> [ <val3> : ] )
<name3> を ( <name4> の先頭、 <name4> の <val5> 番目、 <name6> の先頭、 <name6> の <val5> 番目、 <name1> の先頭、 <name1> の <val5> 番目 ) からなる列だけ増加させる	<name3> += [ <name4> [ 0 ] , <name4> [ <val5> ] , <name6> [ 0 ] , <name6> [ <val5> ] , <name1> [ 0 ] , <name1> [ <val5> ] ]	<name1> += [ <name4> [ 0 ] , <name4> [ <val5> ] , <name6> [ 0 ] , <name6> [ <val5> ] , <name1> [ 0 ] , <name1> [ <val5> ] ]
\ <name4> ( <val2> % ( <name5> , <val3> . <name6> ( <name1> ( <name4> , <name2> ) ) ) ) \	\ <name4> ( <val2> % ( <name5> , <val3> . <name6> ( <name1> ( <name4> , <name2> ) ) ) ) \	) <name4> ( <val2> % ( <name5> , <val3> . <name6> ( <name1> ( <name4> , <name2> ) ) ) \
<name4> を <val5> 分の一にする	<name4> /= <val5>	( <name4> // = <val5> )
<name5> の <val6> 乗から <name1> の <val6> 乗を引いた値に <name2> を加えた値を <name4> とする	<name4> = ( <name5> ** <val6> - <name1> ** <val6> + <name2> )	<name4> = <name5> ** <val6> - <name1> ** <val6> + <name2>
<name1> を書式として <name2> と <name5> の論理積と <name6> の論理積で整形した文字列を出力する	print ( <name1> . format ( ( <name2> & <name5> ) & <name6> ) )	<val3> print ( <name1> . format ( ( <name2> & <name5> ) & <name6> ) )
<name5> に <name2> を加えた値を出力する	print ( <name5> + <name2> )	print ( <name5> + <name2> )
( -1 ) からなる列の <name2> の長さ回分の列を <name4> とする	<name4> = [ - 1 ] * len ( <name2> )	<name4> = [ - 1 ] * len ( <name2> )
<name3> . <name4> ( <name2> . <name6> )	<name3> . <name4> ( <name2> . <name6> )	<name2> . <name4> ( <name2> . <name6> )
<name5> の <name2> 番目の <name6> 番目を <name5> の <name2> から <val3> を引いた値番目の <name6> 番目だけ増加させる	<name5> [ <name2> ] [ <name6> ] += <name5> [ <name2> - <val3> ] [ <name6> ]	<name2> [ <name6> ] [ <name6> ] += <name5> [ <name2> - <val3> ] [ <name6> ]
2 を底とする <val3> に <name6> ( ) の整数値を加えた値の対数の切り捨て整数値を出力する	print ( floor ( log2 ( <val3> + int ( <name6> ( ) ) ) ) )	sep . floor ( math . log2 ( <val3> + int ( <name6> ( ) ) , 2 ) )
<name3> の総和に <name2> の総和を加えた値から ( <name1> ( <name3> ) & <name1> ( <name2> ) ) のキーと値の集まりの各要素を <name4> 、 <name5> とし、 <name4> に <name5> を掛けた値の列の総和を引いた値を出力する	print ( sum ( <name3> ) + sum ( <name2> ) - sum ( [ <name4> * <name5> for <name4> , <name5> in ( <name1> ( <name3> ) & <name1> ( <name2> ) ) . items ( ) ] ) )	end = sum ( <name3> ) + sum ( [ <name4> * <name5> for <name4> , <name5> in ( <name1> ( <name2> ) ) . items ( ) ] ) )
<name2> ( <name1> [ <name4> [ <val6> ] ] , - <name4> [ <val5> ] )	<name2> ( <name1> [ <name4> [ <val6> ] ] , - <name4> [ <val5> ] )	<name2> ( <name1> [ <name4> [ <val6> ] ] , - <name4> [ <val5> ] )
<name2> が <name3> より小さくまたは <name5> が <name4> より小さいとき、 <blk> <name1> を返す </blk>	if <name2> < <name3> or <name5> < <name4> : <blk> return <name1> </blk>	\ if <name2> < <name3> or <name5> < <name4> : <blk> return <name1> </blk>
<name3> の <name1> 番目から <name4> 番目までの部分列を <name2> とする	<name2> = <name3> [ <name1> : <name4> ]	dict = <name3> [ <name1> : <name4> ]
<name1> ( <name6> , <name4> , <name5> -1 )	<name1> ( <name6> , <name4> , <name5> - 1 )	<name1> ( <name6> , <name4> , <name5> - 1 )
<name4> 、 <name1> の <name2> 番目の最小値を <name4> とする	<name4> = min ( <name4> , <name1> [ <name2> ] )	<name4> = min ( <name4> , <name1> [ <name2> ] )
<name6> の <name1> 番目の末尾に <name2> の先頭を追加する	<name6> [ <name1> ] . append ( <name2> [ 0 ] )	<name2> [ <name1> ] . append ( <name2> [ 0 ] )
( <val3> ) からなる列の <name4> 回分の列を <name5> とする	<name5> = [ <val3> ] * <name4>	else = [ <val3> ] * <name4>
<name4> が <name5> の <name1> 番目の先頭と等しいとき、 <blk> <name3> を <name5> の <name1> 番目の先頭にする </blk>	if <name4> == <name5> [ <name1> ] [ 0 ] : <blk> <name5> [ <name1> ] [ 0 ] = <name3> </blk>	\ <name5> [ <name1> ] [ 0 ] = <name4> == <name5> [ <name1> ] [ 0 ] : <blk> <name5> [ <name1> ] [ 0 ] = <name3> </blk>
<val5> を <name3> の <name4> 番目の <name6> 番目にする	<name3> [ <name4> ] [ <name6> ] = <val5>	<name4> [ <name4> ] [ <name6> ] = <val5>
\ <name6> ( <val4> % ( <val1> * <name2> , <name5> [ <name3> ] ) ) \	\ <name6> ( <val4> % ( <val1> * <name2> , <name5> [ <name3> ] ) ) \	\ <name6> ( <val4> % ( <val1> * <name2> , <name5> [ <name3> ] ) ) \
<name5> . <name1> ( <name2> ) のとき、	if <name5> . <name1> ( <name2> ) :	list if <name5> . <name1> ( <name2> ) :
<name6> . <name6> の <name2> 番目の <name1> 番目を <name4> で割った余りに <name3> を掛けた値を <name4> で割った余り	<name6> . <name6> [ <name2> ] [ <name1> ] % <name4> * <name3> % <name4>	not ( <name6> . <name6> [ <name2> ] [ <name1> ] % <name4> * <name3> % <name4> )
<name3> に <name4> に <name5> を掛けた値を加えた値を <name3> とする	<name3> = <name3> + <name4> * <name5>	<name3> = <name3> + <name4> * <name5>
<name1> に <name1> を掛けた値から <name3> 未満までの <name1> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> * <name1> , <name3> , <name1> ) :	continue for <name5> in range ( <name1> * <name1> , <name3> , <name1> ) :
<name6> から <name6> を <val3> で割った余りを引いた値に <val3> を加えた値、 <val1> から <name6> を <val3> で割った余りが <val5> より大きいかどうかを引いた値を <name6> 、 <name4> とする	<name6> , <name4> = <name6> - <name6> % <val3> + <val3> , <val1> - ( <name6> % <val3> > <val5> )	<name6> , <name4> = <name6> - ( <name6> % <val3> ) + <val3> , <val1> - ( <name6> % <val3> > <val5> )
0 から <name6> の <name4> 番目の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( len ( <name6> [ <name4> ] ) ) :	in range ( len ( <name6> [ <name4> ] ) ) :
<name6> の <val1> 番目を <name5> の y 座標にする	<name5> . y = <name6> [ <val1> ]	<name4> . <name5> . y = <name6> [ <val1> ]
空列を <name2> の <name5> の <name4> 番目にする	<name2> . <name5> [ <name4> ] = [ ]	<name4> [ <name2> . <name5> [ <name4> ] = [ ]
<val5> を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <val5>	( <name4> [ <name1> ] = <val5> )
<name2> に <val5> を掛けた値に <val6> を加えた値、 <name2> に <val5> を掛けた値に <val5> を加えた値を <name1> 、 <name4> とする	<name1> , <name4> = <name2> * <val5> + <val6> , <name2> * <val5> + <val5>	<name6> , <name1> , <name4> = <name2> * <val5> + <val6> , <name2> * <val5> + <val5>
<name3> の <name1> が <name4> の <name1> より大きいとき、	if <name3> . <name1> > <name4> . <name1> :	if <name3> . <name1> > <name4> . <name1> :
0 から <name6> に <val2> を加えた値未満までの数列の各要素を <name5> とし、 <name3> の <name4> 番目の <name5> 番目のときの <name5> の列を <name1> とする	<name1> = [ <name5> for <name5> in range ( <name6> + <val2> ) if <name3> [ <name4> ] [ <name5> ] ]	<name6> = [ <name5> for <name5> in range ( <name6> + <val2> ) if <name3> [ <name4> ] [ <name5> ] ]
<name5> の <val2> 番目を返す	return <name5> [ <val2> ]	yield <name5> [ <val2> ]
<name2> が <val5> より大きいとき、	if <name2> > <val5> :	for <name2> > <val5> :
<name2> が <name5> 以下かどうかが <name4> 以下かつ <name2> が <name6> 以下かどうかが <name3> 以下のとき、	if <name2> <= <name5> <= <name4> and <name2> <= <name6> <= <name3> :	list <= <name2> <= <name5> <= <name4> and <name2> <= <name6> <= <name3> :
( ( <val4> 、 <val4> ) の組 ) からなる列を <name1> の <val4> 番目にする	<name1> [ <val4> ] = [ ( <val4> , <val4> ) ]	<name1> [ <val4> ] = [ ( <val4> , <val4> ) ]
<name2> 、 <name6> の要素をそれぞれ組にした列を順に <name5> 、 <name1> として、繰り返す	for <name5> , <name1> in zip ( <name2> , <name6> ) :	( <name5> , <name1> in zip ( <name2> , <name6> ) :
<name2> に <name5> を掛けた値に <val3> を掛けた値に <name5> の <val3> 乗を加えた値を <name6> とする	<name6> = <name2> * <name5> * <val3> + <name5> ** <val3>	<name6> = <name2> * <name5> * <val3> + <name5> ** <val3>
<name3> の <name2> が <name1> と等しくないとき、	if <name3> . <name2> != <name1> :	: if <name3> . <name2> != <name1> :
white を出力する	print ( 'white' )	n print ( '{0:.5f} {1:.5f}' )
<name1> を順に <name4> 、 <name2> として、繰り返す	for <name4> , <name2> in <name1> :	. for <name4> , <name2> in <name1> :
<name1> から <val4> を引いた値を <val4> だけ右シフトした値を <name2> とする	<name2> = ( <name1> - <val4> ) >> <val4>	input = ( <name1> - <val4> ) >> <val4>
<name6> に <name3> を加えた値に <name2> の <name1> 番目が <val5> と等しくないかどうかを加えた値を <name4> とする	<name4> = <name6> + <name3> + ( <name2> [ <name1> ] != <val5> )	<name4> = <name6> + <name3> + ( <name2> [ <name1> ] != <val5> )
( ( -1 、 <val4> ) の組、 ( <val4> 、 -1 ) の組、 ( <val5> 、 <val4> ) の組、 ( <val4> 、 <val5> ) の組 ) の組を <name6> とする	<name6> = ( ( - <val5> , <val4> ) , ( <val4> , - <val5> ) , ( <val5> , <val4> ) , ( <val4> , <val5> ) )	<name6> = ( ( - <val5> , <val4> ) , ( <val4> , - <val5> ) , ( <val5> , <val4> ) , ( <val4> , <val5> ) )
( <val4> ) からなる列の <name2> 回分の列を <name3> とする ( <val4> ) からなる列の <name2> 回分の列を <name5> とする	<name3> = [ <val4> ] * <name2> <name5> = [ <val4> ] * <name2>	<name2> = [ <val4> ] * <name2> <name5> = [ <val4> ] * <name2>
<name1> の <name6> の <name4> 番目を <name3> とする	<name3> = <name1> . <name6> [ <name4> ]	else = <name1> . <name6> [ <name4> ]
<name5> に <name4> を掛けた値から <name6> に <name3> を掛けた値を引いた値を <name2> とする	<name2> = <name5> * <name4> - <name6> * <name3>	( <name2> = <name5> * <name4> - <name6> * <name3> )
<name6> [ <name1> ] ( <name2> , <name4> ) を返す	return <name6> [ <name1> ] ( <name2> , <name4> )	assert <name6> [ <name1> ] ( <name2> , <name4> )
<name2> の x 座標から <name3> の x 座標を引いた値を <name6> とする	<name6> = <name2> . x - <name3> . x	( <name6> = <name2> . x - <name3> . x )
<name6> の先頭が <val1> と等しいとき、	if <name6> [ <val1> ] == <val1> :	if <name6> [ <val1> ] == <val1> :
<name3> 、 <name4> の要素をそれぞれ組にした列に番号付した組の列を順に <name6> 、 <name1> として、繰り返す	for <name6> , <name1> in enumerate ( zip ( <name3> , <name4> ) ) :	. for <name6> , <name1> in enumerate ( zip ( <name3> , <name4> ) ) :
<name3> の順序数から <name6> を引いた値を <name5> とする	<name5> = ord ( <name3> ) - <name6>	<name5> = ord ( <name3> ) - <name6>
<name3> の <name1> の <name6> 番目を <val2> だけ増加させる	<name3> . <name1> [ <name6> ] += <val2>	<name3> . <name1> [ <name6> ] += <val2>
<name4> ( ) を <name1> とする	<name1> = <name4> ( )	<name1> = <name4> ( )
( <val1> 、 <val1> 、 <name2> ) からなる列を <name3> とするを <name2> の <val6> 番目にする	<name2> [ <val6> ] = <name3> = [ <val1> , <val1> , <name2> ]	<name2> [ <val6> ] = <name3> = [ <val1> , <val1> , <name2> ]
<name3> が <val1> 以上かつ <name4> の <name3> 番目が <val5> と等しい間、次を繰り返す	while <name3> >= <val1> and <name4> [ <name3> ] == <val5> :	del ( <name3> >= <val1> and <name4> [ <name3> ] == <val5> ) :
<name5> に <name4> を加えた値に <val3> を加えた値が <name1> から <name6> を引いた値と等しいとき、	if <name5> + <name4> + <val3> == <name1> - <name6> :	continue + <name4> + <val3> == <name1> - <name6> :
<name6> を <val3> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = map ( int , <name6> . split ( <val3> ) )	<name3> , <name2> = map ( int , <name6> . split ( <val3> ) )
<name6> を反転した列を順に <name3> として、繰り返す	for <name3> in reversed ( <name6> ) :	for <name3> in reversed ( <name6> ) :
<name2> の <name5> 番目から <name2> の <name1> 番目を引いた値、 <name6> の <name5> 番目から <name6> の <name1> 番目を引いた値を <name4> 、 <name3> とする	<name4> , <name3> = <name2> [ <name5> ] - <name2> [ <name1> ] , <name6> [ <name5> ] - <name6> [ <name1> ]	<name2> , <name3> = <name2> [ <name5> ] - <name2> [ <name1> ] , <name6> [ <name5> ] - <name6> [ <name1> ]
<name4> が <name5> と等しくないとき、	if <name4> is <name5> :	while <name4> != <name5> :
0 から <name3> に <name4> を掛けた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name3> * <name4> ) :	for <name2> in range ( <name3> * <name4> ) :
<val4> 〜 <name1> から <val4> を引いた値の整数乱数を <name6> とする	<name6> = random . randint ( <val4> , <name1> - <val4> )	} . <name6> = random . randint ( <val4> , <name1> - <val4> )
- <name6> の <name2> 番目、 <name1> の <name4> 番目の最小値に <name3> の <name5> 番目を加えた値を <name1> の <name4> 番目にする	<name1> [ <name4> ] = min ( - <name6> [ <name2> ] , <name1> [ <name4> ] ) + <name3> [ <name5> ]	<name4> [ <name4> ] = min ( - <name6> [ <name2> ] , <name1> [ <name4> ] ) + <name3> [ <name5> ]
<val1> から <val5> 未満までの数列の各要素を <name6> とし、 <val1> から <val5> 未満までの数列の各要素を <name2> とし、 <val1> の列の列を <name4> とする	<name4> = [ [ <val1> for <name2> in range ( <val5> ) ] for <name6> in range ( <val5> ) ]	<name4> = [ [ <val1> for <name2> in range ( <val5> ) ] for <name6> in range ( <val5> ) ]
<name4> の長さを <name2> とする <name1> の長さを <name3> とする	<name2> = len ( <name4> ) <name3> = len ( <name1> )	<name2> = len ( <name4> ) <name3> = len ( <name1> )
<name3> と <val5> を割ったときの ( 商を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = divmod ( <name3> , <val5> )	<name3> , <name1> = divmod ( <name3> , <val5> )
<name5> ( <name3> , <name1> , <name6> ) を <name2> とする	<name2> = <name5> ( <name3> , <name1> , <name6> )	<name2> = <name5> ( <name3> , <name1> , <name6> )
プログラムを正常終了する	exit ( )	exit . exit ( )
<name4> の <name3> 番目の順序数から <name5> の <name6> 番目を引いた値を <name2> とする	<name2> = ord ( <name4> [ <name3> ] ) - <name5> [ <name6> ]	<name2> = ord ( <name4> [ <name3> ] ) - <name5> [ <name6> ]
<name5> の末尾に ( <name1> 、 <name4> 、 <name2> ) の組を追加する	<name5> . append ( ( <name1> , <name4> , <name2> ) )	<name4> . append ( ( <name1> , <name4> , <name2> ) )
<name2> の <name1> 番目に <name2> の <name5> 番目を加えた値を <name3> とする	<name3> = <name2> [ <name1> ] + <name2> [ <name5> ]	<name3> = <name2> [ <name1> ] + <name2> [ <name5> ]
<name2> の <name1> に対応する値、もし存在しなければ <name6> を <name5> とする	<name5> = <name2> . <name1> . get ( <name6> )	<name5> = <name2> . <name1> . get ( <name6> )
<name1> から <name4> に <name2> を掛けた値を引いた値が <name5> より大きくまたは <name1> から <name4> に <name2> を掛けた値を引いた値が <name3> より小さいとき、	if <name1> - ( <name4> * <name2> ) > <name5> or <name1> - ( <name4> * <name2> ) < <name3> :	isinstance ( <name1> - <name4> * <name2> ) > <name5> or <name1> - <name4> * <name2> < <name3> :
<name5> ( <val2> , <name6> -1 ) を出力する	print ( <name5> ( <val2> , <name6> - 1 ) )	print ( <name5> ( <val2> , <name6> - 1 ) )
<name3> に <name4> に <val5> を掛けた値に <val1> を加えた値、 <name6> に <val1> を加えた値、 <name2> 、 <name3> 、 <name4> 、 <name5> を追加した集まり	<name3> . add ( <name4> * <val5> + <val1> , <name6> + <val1> , <name2> , <name3> , <name4> , <name5> )	( <name3> . add ( <name4> * <val5> + <val1> , <name6> + <val1> , <name2> , <name3> , <name4> , <name5> ) )
<name3> を <val2> で割った値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name3> / <val2>	( <name5> [ <name6> ] = <name3> / <val2> )
<name5> の <name3> の末尾に <name2> の <name1> を追加する	<name5> . <name3> . append ( <name2> . <name1> )	<name3> . append ( <name2> . <name1> )
を間に入れて <name5> の各要素を <name3> とし、 <name4> ( <name3> ) . <name2> ( <val1> ) の列を連結した文字列を出力する	print ( ( '' . join ( [ <name4> ( <name3> ) . <name2> ( <val1> ) for <name3> in <name5> ] ) ) )	print ( '' . join ( [ <name4> ( <name3> ) . <name2> ( <val1> ) for <name3> in <name5> ] ) )
<name1> に <val4> に <name5> から <val3> を引いた値を掛けた値に <name5> から <val2> を引いた値を掛けた値を加えた値を <name1> とする	<name1> = <name1> + <val4> * ( <name5> - <val3> ) * ( <name5> - <val2> )	\ <name1> = <name1> + <val4> * ( <name5> - <val3> ) * ( <name5> - <val2> )
<name6> の <val5> 番目が <name3> と等しくないとき、	if <name6> [ <val5> ] != <name3> :	while <name6> [ <val5> ] != <name3> :
<name4> の -1 番目に <name5> を加えた値を <name4> の -1 番目にする	<name4> [ - 1 ] = <name4> [ - 1 ] + <name5>	[ <name4> - 1 ] = <name4> [ - 1 ] + <name5>
<name5> を <name5> に <val3> を加えた値との論理和にする	<name5> | = ( <name5> + <val3> )	<name1> | = ( <name5> + <val3> )
<name1> の <name5> 番目の <name5> 番目が <val6> より小さいとき、	if <name1> [ <name5> ] [ <name5> ] < <val6> :	[ if <name1> [ <name5> ] [ <name5> ] < <val6> :
<name2> の <name5> を <val6> だけ減少させる	<name2> . <name5> -= <val6>	( <name2> . <name5> -= <val6> )
<name5> の <name6> 番目が、つまり偽と等しいとき、	if <name5> [ <name6> ] == False :	or <name5> [ <name6> ] == False :
<name4> ( <name1> . <name5> - <name1> . <name2> ) を <name3> とする	<name3> = <name4> ( <name1> . <name5> - <name1> . <name2> )	else = <name4> ( <name1> . <name5> - <name1> . <name2> )
<name3> ( <name5> [ <val6> ] , <name5> [ <val1> ] ) を <name2> とする	<name2> = <name3> ( <name5> [ <val6> ] , <name5> [ <val1> ] )	<name2> = <name3> ( <name5> [ <val6> ] , <name5> [ <val1> ] )
空辞書を <name2> の <name5> にする	<name2> . <name5> = { }	( <name2> . <name5> = { } )
<name4> と <val1> の <name6> 乗の排他論理和を <name4> とする	<name4> = <name4> ^ ( <val1> ** <name6> )	<name4> = <name4> ^ <val1> ** <name6>
<name4> . <name2> ( <name6> . <name1> - <name6> . <name3> , <name5> - <name6> . <name3> ) が <val4> より小さいとき、	if <name4> . <name2> ( <name6> . <name1> - <name6> . <name3> , <name5> - <name6> . <name3> ) < <val4> :	isinstance ( <name4> . <name2> ( <name6> . <name1> - <name6> . <name3> , <name5> - <name6> . <name3> ) < <val4> :
<name5> の、つまり先頭から <name2> 番目までの部分列を <name6> とする	<name6> = <name5> [ : <name2> ]	else = <name5> [ : <name2> ]
改行せずに <name6> の <name5> から <name2> を引いた値から <val1> を引いた値番目を出力する	print ( <name6> [ <name5> - <name2> - <val1> ] , end = '' )	, end = <name6> [ <name5> - <name2> - <val1> ] , end = '' )
<name5> の <name3> 番目の <val4> 番目を <name2> だけ増加させる	<name5> [ <name3> ] [ <val4> ] += <name2>	( <name5> [ <name3> ] [ <val4> ] += <name2> )
( 、つまり未定値 ) からなる列の <name3> に <val5> を加えた値回分の列を <name2> とする	<name2> = [ None ] * ( <name3> + <val5> )	<name2> = [ None ] * ( <name3> + <val5> )
<name2> ( <name3> . <name5> - <name3> . <name6> ) を <name1> とする	<name1> = <name2> ( <name3> . <name5> - <name3> . <name6> )	<name1> = <name2> ( <name3> . <name5> - <name3> . <name6> )
<name4> が <name3> に含まれるとき、 <blk> <name3> の <name4> 番目を <val5> だけ増加させる </blk>	if <name4> in <name3> : <blk> <name3> [ <name4> ] += <val5> </blk>	for <name4> in <name3> : <blk> <name3> [ <name4> ] += <val5> </blk>
<name4> を <name3> の <name3> の <name1> 番目の <name1> 番目に <name1> が <name2> と等しくないとき -1 、そうでなければ <val6> を掛けた値倍にする	<name4> *= <name3> . <name3> [ <name1> ] [ <name1> ] * ( - <val6> if <name1> != <name2> else <val6> )	<name5> *= <name3> . <name3> [ <name1> ] [ <name1> ] * ( - <val6> if <name1> != <name2> else <val6> )
<name6> の <name1> から <val2> を引いた値番目、 <name6> の <name1> 番目を <name6> の <name1> 番目、 <name6> の <name1> から <val2> を引いた値番目とする	<name6> [ <name1> ] , <name6> [ <name1> - <val2> ] = <name6> [ <name1> - <val2> ] , <name6> [ <name1> ]	<name4> [ <name1> ] , <name6> [ <name1> - <val2> ] = <name6> [ <name1> - <val2> ] , <name6> [ <name1> ]
<name5> の <val4> 乗に <val2> を加えた値を <name6> とする	<name6> = <name5> ** <val4> + <val2>	<name6> = <name5> ** <val4> + <val2>
<name6> の <name2> 番目に <val3> を加えた値が <name6> の <name1> 番目と等しいとき、	if <name6> [ <name2> ] + <val3> == <name6> [ <name1> ] :	while <name6> [ <name2> ] + <val3> == <name6> [ <name1> ] :
<name4> に <name6> を加えた値を <name6> の <name2> に <val1> を加えた値番目の <name5> に <val3> を加えた値番目にする	<name6> [ <name2> + <val1> ] [ <name5> + <val3> ] = <name4> + <name6>	<name1> [ <name2> + <val1> ] [ <name5> + <val3> ] = <name4> + <name6>
<name1> から <name5> に <val6> を加えた値未満までの数列の各要素を <name3> とし、 <name2> を <name3> で割った余りが <val4> と等しいかどうかの列の総和を出力する	print ( sum ( [ <name2> % <name3> == <val4> for <name3> in range ( <name1> , <name5> + <val6> ) ] ) )	print ( sum ( [ ( <name2> % <name3> ) == <val4> for <name3> in range ( <name1> , <name5> + <val6> ) ] ) )
<name4> に <name3> を加えた値に <name4> に <name3> を加えた値を掛けた値を <name2> とする	<name2> = ( <name4> + <name3> ) * ( <name4> + <name3> )	input = ( <name4> + <name3> ) * ( <name4> + <name3> )
<name6> の長さから <val4> を引いた値を <name2> とする	<name2> = len ( <name6> ) - <val4>	<name6> <name2> = len ( <name6> ) - <val4>
<val5> を <name3> の <name2> の <name6> 番目にする	<name3> . <name2> [ <name6> ] = <val5>	( <name3> . <name2> [ <name6> ] = <val5> )
<val3> が <name5> の <name6> 番目の <name2> 番目と等しくないとき、	if <val3> != <name5> [ <name6> ] [ <name2> ] :	raise <val3> != <name5> [ <name6> ] [ <name2> ] :
<val1> に <name4> を掛けた値を出力する	print ( <val1> * <name4> )	print ( <val1> * <name4> )
<val3> から <name6> から <val3> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val3> , <name6> - <val3> ) :	. for <name4> in range ( <val3> , <name6> - <val3> ) :
<name5> ( <name4> ) を <name3> の <name1> 番目にする	<name3> [ <name1> ] = <name5> ( <name4> )	<name3> [ <name1> ] = <name5> ( <name4> )
<name6> の <name5> 番目を順に <name3> 、 <name4> として、繰り返す	for <name3> , <name4> in <name6> [ <name5> ] :	for <name3> , <name4> in <name6> [ <name5> ] :
0 から <name6> 未満までの数列の各要素を <name4> とし、 <name5> の <name1> の列を <name2> とする	<name2> = [ <name5> . <name1> for <name4> in range ( <name6> ) ]	<name6> = [ <name5> . <name1> for <name4> in range ( <name6> ) ]
( <val5> 、 <val5> 、 <val5> 、 <val5> ) からなる列を <name1> とする	<name1> = [ <val5> , <val5> , <val5> , <val5> ]	<name6> = [ <val5> , <val5> , <val5> , <val5> ]
<name3> の集合が <name2> の集合の部分集合のとき、	if set ( <name3> ) . issubset ( set ( <name2> ) ) :	sum ( set ( <name3> ) . issubset ( <name2> ) :
<name4> に <name1> を掛けた値、 <val6> に <name4> に <name1> を加えた値を掛けた値を出力する	print ( <name4> * <name1> , <val6> * ( <name4> + <name1> ) )	print ( <name4> * <name1> , <val6> * ( <name4> + <name1> ) )
0 から <val1> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列をソートした列を <name3> とする	<name3> = sorted ( [ int ( input ( ) ) for <name6> in range ( <val1> ) ] )	<name3> = sorted ( [ int ( input ( ) ) for <name6> in range ( <val1> ) ] )
<name5> の <name6> から <val1> を引いた値番目を <name3> とする	<name3> = <name5> [ <name6> - <val1> ]	<name3> = <name5> [ <name6> - <val1> ]
<name4> を <name2> とするを <name5> とする	<name5> = <name2> = <name4>	<name2> <name5> = <name2> = <name4>
( <name3> の各要素を <name6> とし、 <name6> の <val5> 番目の列、 <name3> の各要素を <name6> とし、 <name6> の <val2> 番目の列 ) の組を <name4> とする	<name4> = ( [ <name6> [ <val5> ] for <name6> in <name3> ] , [ <name6> [ <val2> ] for <name6> in <name3> ] )	<name4> = ( [ <name6> [ <val5> ] for <name6> in <name3> ] )
<name3> の <name2> 番目の <name5> が <name4> と等しくないとき、	if <name3> [ <name2> ] . <name5> != <name4> :	for <name3> in <name3> [ <name2> ] . <name5> != <name4> :
<name6> の <name3> 番目を <name2> とする <name4> の <name3> 番目を <name1> とする	<name2> = <name6> [ <name3> ] <name1> = <name4> [ <name3> ]	<name6> = <name6> [ <name3> ] <name1> = <name4> [ <name3> ]
<name4> は <name1> の <name5> 型かつ <name4> は ( 、つまり整数、 <name3> ) の組型でないとき、	if isinstance ( <name4> , <name1> . <name5> ) and not isinstance ( <name4> , ( str , <name3> ) ) :	for <name4> , <name1> in isinstance ( <name4> , <name1> . <name5> ) and not isinstance ( <name4> , ( str ( str , <name3> ) ) :
<name3> を <name5> ( <name4> [ <name2> ] , <name4> [ <name6> ] ) だけ増加させる	<name3> += <name5> ( <name4> [ <name2> ] , <name4> [ <name6> ] )	<name1> += <name5> ( <name4> [ <name2> ] , <name4> [ <name6> ] )
<name6> の <name4> 番目の <name2> 番目から <name6> の <name4> 番目の <name5> から <val3> を引いた値番目を引いた値から <name6> の <name1> から <val3> を引いた値番目の <name2> 番目を引いた値に <name6> の <name1> から <val3> を引いた値番目の <name5> から <val3> を引いた値番目を加えた値を <name1> とする	<name1> = <name6> [ <name4> ] [ <name2> ] - <name6> [ <name4> ] [ <name5> - <val3> ] - <name6> [ <name1> - <val3> ] [ <name2> ] + <name6> [ <name1> - <val3> ] [ <name5> - <val3> ]	<name6> = <name6> [ <name4> ] [ <name2> ] - <name6> [ <name4> ] [ <name5> - <val3> ] - <name6> [ <name1> - <val3> ] [ <name2> ] + <name6> [ <name1> - <val3> ] [ <name5> - <val3> ]
<val2> を <name5> の <name3> とするを <name5> の <name6> にする	<name5> . <name6> = <name5> . <name3> = <val2>	else . <name6> = <name5> . <name3> = <val2>
<name5> を <name5> に <name4> を加えた値で割った値を <name1> とする	<name1> = <name5> / ( <name5> + <name4> )	<name4> = <name5> / ( <name5> + <name4> )
<name5> ( <name3> , <val6> , <name1> )	<name5> ( <name3> , <val6> , <name1> )	( <name5> ( <name3> , <val6> , <name1> ) )
<name1> の <name3> を <name4> とする	<name4> = <name1> . <name3>	<name6> = <name1> . <name3>
( <val1> 、 <val4> 、 <val2> 、 <val3> 、 <val6> 、 <val5> 、 <val1> 、 <val4> 、 <val2> 、 <val3> ) からなる列の各要素を <name5> とし、 <name5> が <name6> 以下のときの <name5> の列を <name6> とする	<name6> = [ <name5> for <name5> in [ <val1> , <val4> , <val2> , <val3> , <val6> , <val5> , <val1> , <val4> , <val2> , <val3> ] if <name5> <= <name6> ]	<name4> = [ [ <val1> , <val4> , <val2> , <val3> , <val6> , <val5> , <val1> , <val4> , <val2> , <val3> ] for <name5> in [ <name5> for <name5> in <name6> ] ]
<name3> の <name2> 番目が <val1> と等しいとき、 <blk> <val5> を <name4> とする </blk>	if <name3> [ <name2> ] == <val1> : <blk> <name4> = <val5> </blk>	\ <name4> = <name3> [ <name2> ] == <val1> : <blk> <name4> = <val5> </blk>
<name4> と <name6> の論理和のリストを <name5> とする	<name5> = list ( <name4> | <name6> )	<name5> = list ( <name4> | <name6> )
<name3> ( <name5> * <val1> + <val1> , <name6> + <val4> , <name2> , <name3> ) を返す	return <name3> ( <name5> * <val1> + <val1> , <name6> + <val4> , <name2> , <name3> )	x return <name3> ( <name5> * <val1> + <val1> , <name6> + <val4> , <name2> , <name3> )
0 から <name5> 未満までの数列の各要素を <name3> とし、 <name1> の <name3> 番目、 <name4> の要素をそれぞれ組にした列の各要素を <name6> 、 <name2> とし、 <name6> に <name2> を掛けた値の列の総和の列を <name4> とする	<name4> = [ sum ( [ <name6> * <name2> for <name6> , <name2> in zip ( <name1> [ <name3> ] , <name4> ) ] ) for <name3> in range ( <name5> ) ]	<name5> = [ [ <name6> . sum ( [ <name6> * <name2> for <name6> , <name2> in zip ( <name1> [ <name3> ] , <name4> ) ] ) for <name3> in range ( <name5> ) ]
<name5> が <name2> 以下かつ <name3> の <name5> 番目が <name3> の <name4> 番目より大きいとき、	if <name5> <= <name2> and <name3> [ <name5> ] > <name3> [ <name4> ] :	for <name5> <= <name2> and <name3> [ <name5> ] > <name3> [ <name4> ] :
<name4> に <val6> を掛けた値から <val1> を引いた値を <name4> とする	<name4> = <name4> * <val6> - <val1>	<name4> = <name4> * <val6> - <val1>
<name4> . <name6> ( <val3> , <name5> -1 ) を出力する	print ( <name4> . <name6> ( <val3> , <name5> - 1 ) )	print ( <name4> . <name6> ( <val3> , <name5> - 1 ) )
<name3> を <name4> の <name1> に <name5> を加えた値番目にする	<name4> [ <name1> + <name5> ] = <name3>	<name2> [ <name4> [ <name1> + <name5> ] ] = <name3>
<name1> に <val6> を加えた値を <name3> の、つまり文字コード <name4> に <name1> を加えた値の文字番目にする	<name3> [ chr ( <name4> + <name1> ) ] = <name1> + <val6>	<name3> [ chr ( <name4> + <name1> ) ] = <name1> + <val6>
<name1> . <name2> ( ) を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = <name1> . <name2> ( )	<name3> , <name4> = <name1> . <name2> ( )
<name5> [ <val1> ] + <name5> [ <val4> ] に <name5> [ <val2> ] を加えた値に <name5> の <val6> 番目を加えた値に <val3> を掛けた値に <name5> に <val3> を掛けた値を加えた値に <name1> を加えた値を <name3> の <name5> の先頭番目にする	<name3> [ <name5> [ 0 ] ] = ( <name5> [ <val1> ] + <name5> [ <val4> ] + <name5> [ <val2> ] + <name5> [ <val6> ] ) * <val3> + <name5> * <val3> + <name1>	<name3> [ <name5> [ 0 ] ] = ( <name5> [ <val1> ] + <name5> [ <val4> ] + <name5> [ <val2> ] + <name5> [ <val6> ] ) * <val3> + ( <name5> * <val3> ) + <name1>
辞書を <name2> の <name3> にする	<name2> . <name3> = dict ( zip ( dataset , [ 1 ] * len ( dataset ) ) )	( <name2> . <name3> = dict ( ) )
<name5> を <val4> で分割した字句列の <val2> 番目を <name5> とする	<name5> = <name5> . split ( <val4> ) [ <val2> ]	else = <name5> . split ( <val4> ) [ <val2> ]
<name1> . <name4> ( <name2> , <name3> ) が <val6> より小さいとき、	if <name1> . <name4> ( <name2> , <name3> ) < <val6> :	isinstance ( <name1> . <name4> ( <name2> , <name3> ) < <val6> :
<name4> のキーと値の集まりを順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in <name4> . items ( ) :	. for <name5> , <name2> in <name4> . items ( ) :
<name1> ( <name3> [ <name4> ] . <name6> )	<name1> ( <name3> [ <name4> ] . <name6> )	<name4> ( <name1> ( <name3> [ <name4> ] . <name6> ) )
<name5> が <name4> の <name2> と等しいとき、	if <name5> == <name4> . <name2> :	if <name5> == <name4> . <name2> :
<name2> ( <val5> , <val1> ** <val4> + <val3> ) を <name6> とする	<name6> = <name2> ( <val5> , <val1> ** <val4> + <val3> )	<name6> = <name2> ( <val5> , <val1> ** <val4> + <val3> )
<name1> が <name5> より大きいとき ( <name1> 、 <name5> ) からなる列、そうでなければ ( <name5> 、 <name1> ) からなる列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = [ <name1> , <name5> ] if <name1> > <name5> else [ <name5> , <name1> ]	<name2> , <name3> = [ <name1> , <name5> ] if <name1> > <name5> else [ <name5> , <name1> ]
<name1> ( <name5> , <name4> , -1 , -1 ) を <name2> とする	<name2> = <name1> ( <name5> , <name4> , - 1 , - 1 )	<name6> = <name1> ( <name5> , <name4> , - 1 , - 1 )
<name1> ( [ <val4> ] * <name3> ) を <name2> とする	<name2> = <name1> ( [ <val4> ] * <name3> )	else = <name1> ( [ <val4> ] * <name3> )
\ <val6> を書式として <name4> 、 <name5> で整形した文字列を出力する\	\ print ( <val6> . format ( <name4> , <name5> ) ) \	for print ( <val6> . format ( <name4> , <name5> ) ) \
<name6> ( <name3> ) を <name5> とするを <name1> の <name4> 番目にする	<name1> [ <name4> ] = <name5> = <name6> ( <name3> )	<name1> [ <name4> ] = <name5> = <name6> ( <name3> )
<name5> の <name2> の末尾に ( <name4> 、 <name6> ) の組を追加する	<name5> . <name2> . append ( ( <name4> , <name6> ) )	<name4> . <name2> . append ( ( <name4> , <name6> ) )
<name6> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name1> 、 <name2> 、 <name5> 、 <name3> 、 <name4> とする	<name6> , <name1> , <name2> , <name5> , <name3> , <name4> = map ( int , <name6> ( ) . split ( ) )	<name3> , <name1> , <name2> , <name5> , <name3> , <name4> = map ( int , <name6> ( ) . split ( ) )
空列、 <val1> を <name2> 、 <name3> とする	<name2> , <name3> = [ ] , <val1>	( <name2> , <name3> = [ ] , <val1> )
<name6> が <val1> の <val2> 乗より大きいとき、	if <name6> > <val1> ** <val2> :	: if <name6> > <val1> ** <val2> :
<name3> に <name1> を掛けた値から <name5> に <val6> を加えた値未満までの <name4> 間隔の数列を順に <name2> として、繰り返す <blk> <val3> を <name2> の <name2> 番目にする </blk>	for <name2> in range ( <name3> * <name1> , <name5> + <val6> , <name4> ) : <blk> <name2> [ <name2> ] = <val3> </blk>	: for <name2> in range ( <name3> * <name1> , <name5> + <val6> , <name4> ) : <blk> <name2> [ <name2> ] = <val3> </blk>
<name3> ( <name6> , ( <val5> , <val5> ) )	<name3> ( <name6> , ( <val5> , <val5> ) )	<name3> ( <name6> , ( <val5> , <val5> ) )
<name1> . <name2> ( ) のとき、	if <name1> . <name2> ( ) :	isinstance ( <name1> . <name2> ( ) ) :
( <val5> ) からなる列の <name6> の <name3> 回分の列を <name6> の <name4> にする	<name6> . <name4> = [ <val5> ] * <name6> . <name3>	<name3> . <name4> = [ <val5> ] * <name6> . <name3>
( <val5> ) からなる列の <name6> 回分の列を順に <name3> として、繰り返す	for <name3> in [ <val5> ] * <name6> :	. for <name3> in [ <val5> ] * <name6> :
( <val5> ) からなる列の <name2> に <val1> を加えた値回分の列を <name3> とする	<name3> = [ <val5> ] * ( <name2> + <val1> )	else = [ <val5> ] * ( <name2> + <val1> )
0 から <name4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name3> in range ( <name4> ) ]	<name6> = [ int ( input ( ) ) for <name3> in range ( <name4> ) ]
<name1> ( <name5> . <name3> [ <val6> : ] )	<name1> ( <name5> . <name3> [ <val6> : ] )	<name1> ( <name5> . <name3> [ <val6> : ] )
<name1> が <name6> の長さから <val2> を引いた値と等しいとき、	if <name1> == len ( <name6> ) - <val2> :	raise <name1> == len ( <name6> ) - <val2> :
<name3> の <name6> 番目から <name5> 番目までの部分列を <name2> とする	<name2> = <name3> [ <name6> : <name5> ]	<name2> = <name3> [ <name6> : <name5> ]
無限の整数列、 <name2> に <name5> を <name3> の先頭で割った商を加えた値の最小値を無限の整数列とする	count = min ( count , <name2> + <name5> // <name3> [ 0 ] )	count = min ( count , <name2> + <name5> // <name3> [ 0 ] )
<name2> の末尾に <name3> から <val6> を引いた値を追加する	<name2> . append ( <name3> - <val6> )	<name1> . append ( <name3> - <val6> )
<val1> を <name6> の <name2> 番目にする	<name6> [ <name2> ] = <val1>	( <name6> [ <name2> ] = <val1> )
<name2> の <name6> 番目、 <name3> の <name6> から <val1> を引いた値番目、 <name2> の <name6> から <name4> を引いた値番目に <name5> を加えた値の最大値を <name3> の <name6> 番目にする	<name3> [ <name6> ] = max ( <name2> [ <name6> ] , <name3> [ <name6> - <val1> ] , <name2> [ <name6> - <name4> ] + <name5> )	<name3> [ <name6> ] = max ( <name2> [ <name6> ] , <name3> [ <name6> - <val1> ] , <name2> [ <name6> - <name4> ] + <name5> )
<name2> が <val1> と等しくかつ <name6> が <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <val1> and <name6> == <val1> : <blk> break </blk>	list ( <name2> == <val1> and <name6> == <val1> ) : <blk> break </blk>
<name2> の <name4> 番目に ( <val5> 、 <val6> ) の組を追加した集まり	<name2> [ <name4> ] . add ( ( <val5> , <val6> ) )	<name1> [ <name4> ] . add ( ( <val5> , <val6> ) )
<name1> の <name2> 番目に <name4> の <name5> - <name2> から <val3> を引いた値番目の <name2> に <val6> を加えた値番目を加えた値、 <name4> の <name5> - <name2> から <val3> を引いた値番目の <name2> 番目に <name1> の <name5> 番目を加えた値の最小値を <name6> とする	<name6> = min ( <name1> [ <name2> ] + <name4> [ <name5> - <name2> - <val3> ] [ <name2> + <val6> ] , <name4> [ <name5> - <name2> - <val3> ] [ <name2> ] + <name1> [ <name5> ] )	<name6> = min ( <name1> [ <name2> ] + <name4> [ <name5> - <name2> - <val3> ] [ <name2> + <val6> ] , <name4> [ <name5> - <name2> - <val3> ] [ <name2> ] + <name1> [ <name5> ] )
書式 <name4> を <name3> でフォーマットした文字列の各要素を <name5> とし、 <name5> の整数値の列を <name6> とする	<name6> = [ int ( <name5> ) for <name5> in format ( <name4> , <name3> ) ]	<name6> = [ int ( <name5> ) for <name5> in format ( <name4> , <name3> ) ]
<name2> ( <name1> . <name6> + <name3> . <name6> , <name1> . <name4> + <name3> . <name4> ) を返す	return <name2> ( <name1> . <name6> + <name3> . <name6> , <name1> . <name4> + <name3> . <name4> )	x return <name2> ( <name1> . <name6> + <name3> . <name6> , <name1> . <name4> + <name3> . <name4> )
<name3> の <name1> 番目の <name5> 番目が <name4> より小さいとき、	if <name3> [ <name1> ] [ <name5> ] < <name4> :	[ if <name3> [ <name1> ] [ <name5> ] < <name4> :
( <name2> ( <name4> ) が <name5> と等しいとき <val6> 、そうでなければ <name1> . <name2> ( <name6> ( <val6> , <name4> + <val6> ) , <name5> ) の各要素を <name4> とし、 <val3> の列 ) からなる列の総和を出力する	print ( <name2> ( [ <val6> if <name2> ( <name4> ) == <name5> else [ <val3> for <name4> in <name1> . <name2> ( <name6> ( <val6> , <name4> + <val6> ) , <name5> ) ] ] ) )	) print ( sum ( [ <val6> if <name2> ( <name4> ) == <name5> else [ <val6> for <name4> in <name1> . <name2> ( <name6> , <name4> + <val6> ) , <name5> ] ] ) )
<name2> の <name5> 番目の <name4> 番目を返す	return <name2> [ <name5> ] [ <name4> ]	yield <name2> [ <name5> ] [ <name4> ]
<name3> から <name4> を引いた値が <val2> より小さいとき、 <blk> <val2> を返す </blk>	if <name3> - <name4> < <val2> : <blk> return <val2> </blk>	<blk> if <name3> - <name4> < <val2> : <blk> return <val2> </blk>
<name2> から <name3> を引いた値を <name6> とする	<name6> = <name2> - <name3>	( <name6> = <name2> - <name3> )
( <name6> ) からなる列の <val2> に <name3> を掛けた値回分の列を <name5> とする	<name5> = [ <name6> ] * ( <val2> * <name3> )	<name5> = [ <name6> ] * ( <val2> * <name3> )
<name3> を <name6> として <name2> の、つまり先頭から <name5> 番目までの部分列の最小値、 <name3> を <name6> として <name2> の <name4> に <val1> を加えた値から、つまり末尾までの部分列の最小値の最小値を <name1> とする	<name1> = min ( min ( <name2> [ : <name5> ] , <name6> = <name3> ) , min ( <name2> [ <name4> + <val1> : ] , <name6> = <name3> ) )	<name4> = min ( min ( <name2> [ : <name5> ] ) , <name6> = <name3> , min ( <name2> [ : <name5> ] ) , <name6> = <name3> )
<name6> に <name1> から <name3> を引いた値を掛けた値が <val2> より大きいとき、	if <name6> * ( <name1> - <name3> ) > <val2> :	list ( <name6> * ( <name1> - <name3> ) > <val2> :
<name4> の <val3> 番目が <val2> と等しいとき、	if <name4> [ <val3> ] == <val2> :	: if <name4> [ <val3> ] == <val2> :
<name1> 、 <name2> の浮動小数点数の最大値を <name1> とする	<name1> = max ( <name1> , float ( <name2> ) )	<name1> = max ( <name1> , float ( <name2> ) )
<name6> の長さが <val4> と等しくない間、次を繰り返す	while len ( <name6> ) != <val4> :	del ( len ( <name6> ) != <val4> ) :
<name5> から <name2> を引いた値の <val6> 乗に <name1> から <name4> を引いた値の <val6> 乗を加えた値を <name3> とする	<name3> = ( <name5> - <name2> ) ** <val6> + ( <name1> - <name4> ) ** <val6>	<name3> = ( <name5> - <name2> ) ** <val6> + ( <name1> - <name4> ) ** <val6>
<name6> が <val1> と等しいとき、 <blk> <name5> を <name2> だけ増加させる </blk>	if <name6> == <val1> : <blk> <name5> += <name2> </blk>	: if <name6> == <val1> : <blk> <name5> += <name2> </blk>
<name6> の <name2> の <name5> 番目を順に <name1> として、繰り返す	for <name1> in <name6> . <name2> [ <name5> ] :	in <name6> . <name2> [ <name5> ] :
<name5> ( <val6> ) を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name5> ( <val6> )	<name3> , <name2> = <name5> ( <val6> )
<name1> に <name1> に <name2> を掛けた値を <val4> で割った値を加えた値の整数値に <name3> に <name3> に <name2> を掛けた値を <val4> で割った値を加えた値の整数値を加えた値を <name5> とする	<name5> = int ( <name1> + <name1> * <name2> / <val4> ) + int ( <name3> + <name3> * <name2> / <val4> )	else = int ( <name1> + <name1> * <name2> / <val4> ) + int ( <name3> + <name3> * <name2> / <val4> )
( -1 ) からなる列の <name5> の <name6> 回分の列を <name5> の <name4> にする	<name5> . <name4> = [ - 1 ] * <name5> . <name6>	<name3> . <name4> = [ - 1 ] * <name5> . <name6>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = map ( int , input ( ) . split ( ) )	<name5> , <name2> = map ( int , input ( ) . split ( ) )
<name1> の先頭に <name3> を追加する	<name1> . appendleft ( <name3> )	<name4> . appendleft ( <name3> )
<val3> の <val1> 乗を <name4> とする	<name4> = <val3> ** <val1>	<name4> = <val3> ** <val1>
<name5> の <name2> から読み込んだ行の列を <name1> とする	<name1> = <name5> . <name2> . readlines ( )	( <name1> = <name5> . <name2> . readlines ( ) )
<name4> の <name1> 番目の <val6> 番目から <val3> 番目までの部分列が <name4> の <name1> から <val6> を引いた値番目の <val6> 番目から <val3> 番目までの部分列より小さいとき、	if <name4> [ <name1> ] [ <val6> : <val3> ] < <name4> [ <name1> - <val6> ] [ <val6> : <val3> ] :	if <name4> [ <name1> ] [ <val6> : <val3> ] < <name4> [ <name1> - <val6> ] [ <val6> : <val3> ] :
<name5> の、つまり先頭から <name2> 番目までの部分列に <name4> の <val3> 番目を加えた値に <name5> の <name1> 番目から、つまり末尾までの部分列を加えた値を <name5> とする	<name5> = <name5> [ : <name2> ] + <name4> [ <val3> ] + <name5> [ <name1> : ]	<name4> = <name5> [ : <name2> ] + <name4> [ <val3> ] + <name5> [ <name1> : ]
<name1> を開始番号として <name2> の <name1> 番目から <name1> に <val6> を掛けた値に <val5> を加えた値までの部分列、 <name2> の要素をそれぞれ組にした列に番号付した組の列を順に <name4> 、 <name3> として、繰り返す	for <name4> , <name3> in enumerate ( zip ( <name2> [ <name1> : <name1> * <val6> + <val5> ] , <name2> ) , start = <name1> ) :	in enumerate ( zip ( <name2> [ <name1> : <name1> * <val6> + <val5> ] , <name2> ) , start = <name1> ) :
<name3> を空白で分割した字句列を <name2> とする	<name2> = <name3> . split ( )	<name2> = <name3> . split ( )
<name5> 、 <name2> の最大値を <name5> とする	<name5> = max ( <name5> , <name2> )	<name4> = max ( <name5> , <name2> )
<name6> の各要素を <name4> とし、 <name6> の <val3> 番目が <name4> と等しいかどうかの列を <name1> 、 <name5> をパラメータとして <name1> かつ <name5> を返す関数で集約した列のとき、	if reduce ( lambda <name1> , <name5> : <name1> and <name5> , [ <name6> [ <val3> ] == <name4> for <name4> in <name6> ] ) :	if reduce ( lambda <name1> , <name5> : <name1> and <name5> , [ <name6> [ <val3> ] == <name4> for <name4> in <name6> ] ) :
<name2> の <name5> の <name6> 番目が <name3> と等しいとき、	if <name2> . <name5> [ <name6> ] == <name3> :	if <name2> . <name5> [ <name6> ] == <name3> :
<name6> の長さを <val1> で割った商を <name4> とする	<name4> = len ( <name6> ) // <val1>	<name4> = len ( <name6> ) // <val1>
<name2> の <name4> 番目の <name6> が <name1> と等しくないとき、	if <name2> [ <name4> ] . <name6> != <name1> :	for if <name2> [ <name4> ] . <name6> != <name1> :
<name6> ( <name3> ) <name6> ( <name4> )	<name6> ( <name3> ) <name6> ( <name4> )	<name3> ( <name3> ) <name6> ( <name4> )
<name6> から <name1> を引いた値に <name3> に <name5> を <name2> で割った商を加えた値から <name5> を引いた値を加えた値を <name4> とする	<name4> = ( <name6> - <name1> ) + ( <name3> + <name5> // <name2> - <name5> )	<name4> = ( <name6> - <name1> ) + ( <name3> + ( <name5> // <name2> ) - <name5> )
<name1> が <val6> より大きくかつ <name4> の <name5> から <val2> を引いた値番目が <val3> と等しくないとき、	if <name1> > <val6> and <name4> [ <name5> - <val2> ] != <val3> :	if <name1> > <val6> and <name4> [ <name5> - <val2> ] != <val3> :
<name1> が <name3> の <name2> に含まれないとき、	if not <name1> in <name3> . <name2> :	isinstance ( <name1> not in <name3> . <name2> ) :
<val1> のラジアンを <name3> とする	<name3> = math . radians ( <val1> )	<name3> = math . radians ( <val1> )
( ( <val5> の浮動小数点数 ) からなる列の 0 から <name2> 未満までの数列の各要素を <name6> とし、 <name2> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ float ( <val5> ) ] * [ <name2> for <name6> in range ( <name2> ) ] ]	<name1> = [ [ float ( <val5> ) ] * [ <name2> for <name6> in range ( <name2> ) ] ]
<name4> に <name5> を加えた値を <name2> の <name1> 番目の <name3> に <val6> を加えた値番目にする	<name2> [ <name1> ] [ <name3> + <val6> ] = <name4> + <name5>	<name4> [ <name1> ] [ <name3> + <val6> ] = <name4> + <name5>
<name4> の末尾に <name6> の <name2> 番目の <name1> の <name2> 番目番目を追加する	<name4> . append ( <name6> [ <name2> ] [ <name1> [ <name2> ] ] )	<name4> . append ( <name6> [ <name2> ] [ <name1> [ <name2> ] ] )
<name4> が - <name2> より大きいとき、	if <name4> > - <name2> :	list if <name4> > - <name2> :
<name1> を <name4> とする	<name4> = <name1>	<name5> = <name1> ( a , k - 1 )
<name1> の <val3> 番目が <val6> と等しいとき、 <blk> <name1> の先頭、 <name5> を出力する </blk>	if <name1> [ <val3> ] == <val6> : <blk> print ( <name1> [ <val6> ] , <name5> ) </blk>	list if <name1> [ <val3> ] == <val6> : <blk> print ( <name1> [ 0 ] , <name5> ) </blk>
<name2> を <name4> に <name3> の <name4> 番目に <name1> の <name4> 番目を加えた値から <name5> を引いた値を掛けた値だけ増加させる	<name2> += <name4> * ( <name3> [ <name4> ] + <name1> [ <name4> ] - <name5> )	<name6> += <name4> * ( <name3> [ <name4> ] + <name1> [ <name4> ] - <name5> )
<name1> の <val3> 番目が <val4> と等しいとき、	if <name1> [ <val3> ] == <val4> :	: if <name1> [ <val3> ] == <val4> :
<name5> の <name6> 番目の先頭を <name5> の <name6> から <val4> を引いた値番目の先頭だけ増加させる	<name5> [ <name6> ] [ 0 ] += <name5> [ <name6> - <val4> ] [ 0 ]	<name4> [ <name6> ] [ 0 ] += <name5> [ <name6> - <val4> ] [ 0 ]
( ( <val3> ) からなる列の <val3> から <name1> 未満までの数列の各要素を <name2> とし、 <name6> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val3> ] * [ <name6> for <name2> in range ( <name1> ) ] ]	<name5> = [ [ <val3> ] * [ <name6> for <name2> in range ( <name1> ) ] ]
<name1> の <name4> の整数値番目を出力する	print ( <name1> [ int ( <name4> ) ] )	print ( <name1> [ int ( <name4> ) ] )
<name6> の <name3> 番目を順に <name5> 、 <name4> として、繰り返す	for <name5> , <name4> in <name6> [ <name3> ] :	for <name5> , <name4> in <name6> [ <name3> ] :
<name4> の <name5> 番目を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = <name4> [ <name5> ]	dict , <name2> , <name6> = <name4> [ <name5> ]
<name5> の末尾に <name2> ( <name4> ) ( <name1> ) を追加する	<name5> . append ( <name2> ( <name4> ) ( <name1> ) )	<name4> . append ( <name2> ( <name4> ) ( <name1> ) )
( ( <name6> ) からなる列の 0 から <name3> 未満までの数列の各要素を <name5> とし、 <name3> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <name6> ] * [ <name3> for <name5> in range ( <name3> ) ] ]	<name1> = [ [ <name6> ] * [ <name3> for <name5> in range ( <name3> ) ] ]
<val1> を <name4> とする <name6> から <name2> を引いた値に <val5> を加えた値を <name3> とする	<name4> = <val1> <name3> = <name6> - <name2> + <val5>	<name6> = <val1> <name3> = <name6> - <name2> + <val5>
<name6> が <name1> と等しいかどうかが <val4> と等しいとき、	if <name6> == <name1> == <val4> :	: if <name6> == <name1> == <val4> :
<name1> が、つまり未定値と等しくかつ <val6> が <name5> の <name1> 番目の長さより小さいとき、	if <name1> is not None and <val6> < len ( <name5> [ <name1> ] ) :	while <name1> is not None and <val6> < len ( <name5> [ <name1> ] ) :
( <val4> 、 <val4> ) の組	( <val4> , <val4> )	) ( <val4> , <val4> )
0 から <name1> 未満までの数列の各要素を <name6> とし、 <name2> ( -1 , <name4> , <name4> ) の列を <name5> とする	<name5> = [ <name2> ( - 1 , <name4> , <name4> ) for <name6> in range ( <name1> ) ]	<name6> = [ <name2> ( - 1 , <name4> , <name4> ) for <name6> in range ( <name1> ) ]
<val5> が <name6> の長さと等しくない間、次を繰り返す	while <val5> != len ( <name6> ) :	global <val5> != len ( <name6> ) :
<name4> の -2 番目に <name4> の -1 番目を加えた値に <val2> を加えた値を <name4> の -2 番目にする	<name4> [ - 2 ] = <name4> [ - 2 ] + <name4> [ - <val2> ] + <val2>	<name5> [ - 2 ] = <name4> [ - 2 ] + <name4> [ - <val2> ] + <val2>
<name4> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( int , <name4> . split ( ) )	<name5> , <name1> = map ( int , <name4> . split ( ) )
<name1> ( <name2> - <name3> , <name5> - <name3> ) に <name1> ( <name2> - <name3> , <name4> - <name3> ) を掛けた値が <name6> 以下かどうかかつ [ MASK ]	and ( <name1> ( <name2> - <name3> , <name5> - <name3> ) * <name1> ( <name2> - <name3> , <name4> - <name3> ) <= <name6> )	( <name1> ( <name2> - <name3> , <name5> - <name3> ) * <name1> ( <name2> - <name3> , <name4> - <name3> ) <= <name6> ) and ( )
0 から <val1> を <name5> だけ左シフトした値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> << <name5> ) :	in range ( <val1> << <name5> ) :
<name3> の <name2> から <name1> を引いた値から <name2> 番目までの部分列が <name6> の、つまり先頭から <name1> 番目までの部分列と等しくないとき、	if <name3> [ <name2> - <name1> : <name2> ] != <name6> [ : <name1> ] :	while <name3> [ <name2> - <name1> : <name2> ] != <name6> [ : <name1> ] :
( <val5> 、 <val4> 、 <val2> 、 <val1> 、 <val3> 、 <val6> 、 <val5> 、 <val4> 、 <val2> 、 <val1> 、 <val3> 、 <val6> 、 <val5> 、 <val4> 、 <val2> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val5> , <val4> , <val2> , <val1> , <val3> , <val6> , <val5> , <val4> , <val2> , <val1> , <val3> , <val6> , <val5> , <val4> , <val2> , <val1> ]	<name6> = [ <val5> , <val4> , <val2> , <val1> , <val3> , <val6> , <val5> , <val4> , <val2> , <val1> , <val3> , <val6> , <val5> , <val4> , <val2> , <val1> ]
<name6> の <val3> 番目から <name5> の先頭を引いた値を <name1> とする <name6> の <val2> 番目から <name5> の <val2> 番目を引いた値を <name4> とする	<name1> = <name6> [ <val3> ] - <name5> [ <val3> ] <name4> = <name6> [ <val2> ] - <name5> [ <val2> ]	else = <name6> [ <val3> ] - <name5> [ <val3> ] <name4> = <name6> [ <val2> ] - <name5> [ <val2> ]
<name5> から <name3> を引いた値に <name4> を掛けた値から <name1> から <name2> を引いた値に <name6> を掛けた値を引いた値を <name6> とする	<name6> = ( <name5> - <name3> ) * <name4> - ( <name1> - <name2> ) * <name6>	<name4> = ( <name5> - <name3> ) * <name4> - ( <name1> - <name2> ) * <name6>
( ( <val3> 、 <val2> ) からなる列、 ( <val3> 、 <val1> ) からなる列、 ( <val3> 、 <val4> ) からなる列、 ( <val3> 、 <val5> ) からなる列、 ( <val3> 、 <val6> ) からなる列 ) からなる列を <name6> とする	<name6> = [ [ <val3> , <val2> ] , [ <val3> , <val1> ] , [ <val3> , <val4> ] , [ <val3> , <val5> ] , [ <val3> , <val6> ] ]	<name6> = [ [ <val3> , <val2> ] , [ <val3> , <val1> ] , [ <val3> , <val4> ] , [ <val3> , <val5> ] , [ <val3> , <val6> ] ]
<name3> を <name4> の、つまり現在の日時番目の <name5> 番目の <name2> 番目にする	<name4> [ now ] [ <name5> ] [ <name2> ] = <name3>	<name2> [ now ] [ <name5> ] [ <name2> ] = <name3>
<name6> の <name5> の <name3> に <val4> を加えた値番目の <name1> に <val4> を加えた値番目を <name2> で割った余りにする	<name6> . <name5> [ <name3> + <val4> ] [ <name1> + <val4> ] % = <name2>	( <name6> . <name5> [ <name3> + <val4> ] [ <name1> + <val4> ] % = <name2> )
<name4> の末尾に <name3> に <val2> を加えた値を追加する	<name4> . append ( <name3> + <val2> )	<name3> . append ( <name3> + <val2> )
0 から <name5> のビット長に <val1> を加えた値未満までの数列の各要素を <name3> とし、、つまり空列の列を <name2> の <name4> にする	<name2> . <name4> = [ [ ] for <name3> in range ( <name5> . bit_length ( ) + <val1> ) ]	<name4> = [ [ ] for <name3> in range ( <name5> . bit_length ( ) + <val1> ) ]
<name3> ( <val6> ) を <name4> とする	<name4> = <name3> ( <val6> )	<name4> = <name3> ( <val6> )
入力された文字列の各要素に整数を適用した列のリストを <name6> とする	<name6> = list ( map ( int , input ( ) ) )	<name6> = list ( map ( int , input ( ) ) )
<val5> が <name3> に含まれるとき、 <blk> <name4> の <name3> の <val5> と等しい要素の最初の位置番目の <name2> の <val6> と等しい要素の最初の位置番目が <val5> と等しいとき <val1> 、そうでなければ <val5> を返す </blk>	if <val5> in <name3> : <blk> return <val1> if <name4> [ <name3> . index ( <val5> ) ] [ <name2> . index ( <val6> ) ] == <val5> else <val5> </blk>	\ if <val5> in <name3> : <blk> return <val1> if <name4> [ <name3> . index ( <val5> ) ] [ <name2> . index ( <val6> ) ] == <val5> else <val5> </blk>
<name1> の先頭が <val6> で始まるとき、	if <name1> . startswith ( <val6> ) :	list ( <name1> [ <val6> ] . startswith ( <val6> ) :
<name1> から <name4> を引いた値を <val5> で割った余りを <name1> とする	<name1> = ( <name1> - <name4> ) % <val5>	<name1> = ( <name1> - <name4> ) % <val5>
<name4> から <name6> に <val1> を掛けた値を引いた値を <val3> で割った商を <name5> とする	<name5> = ( <name4> - <name6> * <val1> ) // <val3>	<name5> = ( <name4> - <name6> * <val1> ) // <val3>
<name3> の、つまり先頭から <val5> 番目までの部分列の最小値に <name3> の <val5> 番目から、つまり末尾までの部分列の最小値を加えた値から <val4> を引いた値を出力する	print ( min ( <name3> [ 0 : <val5> ] ) + min ( <name3> [ <val5> : ] ) - <val4> )	print ( min ( <name3> [ : <val5> ] ) + min ( <name3> [ <val5> : ] ) - <val4> )
<name3> ( ) の間、次を繰り返す	while <name3> ( ) :	for <name3> in <name3> ( ) :
( <val1> 、 <val4> ) からなる列を <name3> とする	<name3> = [ <val1> , <val4> ]	else = [ <val1> , <val4> ]
<name5> の各要素を <name3> とし、 <name3> が <val1> と等しくまたは <name3> が <val4> と等しくまたは <name3> が <val6> と等しくまたは <name3> が <val2> と等しいときの <name3> の列を <name2> とする	<name2> = [ <name3> for <name3> in <name5> if <name3> == <val1> or <name3> == <val4> or <name3> == <val6> or <name3> == <val2> ]	<name6> = [ <name3> for <name3> in <name5> if <name3> == <val1> or <name3> == <val4> or <name3> == <val6> or <name3> == <val2> ]
<name4> を <name2> の集合との論理和にする	<name4> | = set ( <name2> )	( <name4> | = { <name2> } )
<name4> の末尾に <name3> の <name6> 番目の <name5> を <name3> の <name6> 番目の長さで割った余り番目を追加する	<name4> . append ( <name3> [ <name6> ] [ <name5> % len ( <name3> [ <name6> ] ) ] )	<name2> . append ( <name3> [ <name6> ] [ <name5> % len ( <name3> [ <name6> ] ) ] )
<name2> モジュールを用いる	from <name2> import hypot	from <name2> , deque
次は例外に関する条件がある <blk> <name5> の <name4> の <name3> ( ) の整数値番目と等しい要素の最初の位置に <val6> を加えた値を出力する </blk>	try : <blk> print ( <name5> . index ( <name4> [ int ( <name3> ( ) ) ] ) + <val6> ) </blk>	while try : <blk> print ( <name5> . index ( <name4> [ int ( <name3> ( ) ) ] ) + <val6> ) </blk>
入力された文字列内の <val3> を <val5> で置き換えた文字列を出力する	print ( input ( ) . replace ( <val3> , <val5> ) )	print ( input ( ) . replace ( <val3> , <val5> ) )
0 から <val5> 未満までの数列の各要素を <name4> とし、、つまり未定値の列を <name6> とする	<name6> = [ None for <name4> in range ( <val5> ) ]	<name6> = [ None for <name4> in range ( <val5> ) ]
<name2> が <name1> より大きいとき、	if <name2> > <name1> :	if <name2> > <name1> :
<name4> ( <name1> [ <name2> ] . <name6> , <name5> + <val3> )	<name4> ( <name1> [ <name2> ] . <name6> , <name5> + <val3> )	set ( <name4> ( <name1> [ <name2> ] . <name6> , <name5> + <val3> ) )
<name5> を <name6> の <name4> にする	<name6> . <name4> = <name5>	<name1> . <name4> = <name5>
0 から <name6> 未満までの数列の各要素を <name4> とし、 0 から <name6> 未満までの数列の集合の列を <name1> とする	<name1> = [ set ( range ( <name6> ) ) for <name4> in range ( <name6> ) ]	<name1> = [ set ( range ( <name6> ) ) for <name4> in range ( <name6> ) ]
<name5> を <val3> で割った値が <val4> 以上のとき、	if <name5> / <val3> >= <val4> :	continue <name5> / <val3> >= <val4> :
<name2> から <name6> を引いた値に <name4> を掛けた値から <name5> から <name1> を引いた値に <name3> を掛けた値を引いた値を <name3> とする	<name3> = ( <name2> - <name6> ) * <name4> - ( <name5> - <name1> ) * <name3>	\ <name3> = ( <name2> - <name6> ) * <name4> - ( <name5> - <name1> ) * <name3>
<name6> を <val5> で割った余りが <val3> と等しいとき、	if <name6> % <val5> == <val3> :	> ( <name6> % <val5> == <val3> ) :
<name6> の <val4> と等しい要素の最初の位置を <name5> とする	<name5> = <name6> . index ( <val4> )	<name5> = <name6> . index ( <val4> )
\ <name1> ( <val4> % <name5> [ <val3> ** ( <name2> -1 ) -1 ] ) \	\ <name1> ( <val4> % <name5> [ <val3> ** ( <name2> - 1 ) - 1 ] ) \	% <name1> ( <val4> % <name5> [ <val3> ** ( <name2> - 1 ) - 1 ] ) \
<name1> の <name2> の <name4> 番目に <name1> の位置 <name3> に <val6> を加えた値、 <name1> 、 <name2> から <name4> に <val5> を掛けた値に <val6> を加えた値を探して見つかった位置を加えた値を返す	return <name1> . <name2> [ <name4> ] + <name1> . find ( <name4> * <val5> + <val6> , <name3> + <val6> , <name1> , <name2> )	yield <name1> . <name2> [ <name4> ] + <name1> . find ( <name4> * <val5> + <val6> , <name3> + <val6> , <name1> , <name2> , <name2> , <name4> )
入力された文字列を <val1> で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name4> 、 <name2> 、 <name5> とする	<name4> , <name2> , <name5> = map ( float , input ( ) . split ( <val1> ) )	<name3> , <name2> , <name5> = map ( float , input ( ) . split ( <val1> ) )
( ( <val4> 、 <val5> ) からなる列、 ( <val4> 、 -1 ) からなる列、 ( <val5> 、 <val4> ) からなる列、 ( -1 、 <val4> ) からなる列 ) からなる列を <name2> とする	<name2> = [ [ <val4> , <val5> ] , [ <val4> , - <val5> ] , [ <val5> , <val4> ] , [ - <val5> , <val4> ] ]	<name2> = [ [ <val4> , <val5> ] , [ <val4> , - <val4> ] , [ <val5> , <val4> ] , [ - <val4> ] , [ - <val4> , <val4> ] ]
<name5> から <name3> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> , <name3> ) :	: for <name1> in range ( <name5> , <name3> ) :
<name5> の <val3> 番目から <name1> の先頭を引いた値を <val4> で割った値から <name5> [ <val2> ] から <name1> [ <val2> ] を引いた値に <val6> の平方根を掛けた値を <val4> で割った値を引いた値に <name1> の先頭を加えた値を <name6> とする	<name6> = ( <name5> [ <val3> ] - <name1> [ <val3> ] ) / <val4> - ( <name5> [ <val2> ] - <name1> [ <val2> ] ) * math . sqrt ( <val6> ) / <val4> + <name1> [ <val3> ]	<name2> = ( <name5> [ <val3> ] - <name1> [ <val3> ] ) / <val4> - ( <name5> [ <val2> ] - <name1> [ <val2> ] ) * math . sqrt ( <val6> ) + <name1> [ <val3> ]
<name5> の <name1> 番目の <name4> 番目のとき、	if <name5> [ <name1> ] [ <name4> ] :	if <name5> [ <name1> ] [ <name4> ] :
<name3> の <name2> を <name5> とする	<name5> = <name3> . <name2>	else = <name3> . <name2>
<val3> を書式として <name6> に <name4> の <val2> 乗を掛けた値、 <val2> に <name6> を掛けた値に <name4> を掛けた値で整形した文字列を出力する	print ( <val3> . format ( <name6> * <name4> ** <val2> , <val2> * <name6> * <name4> ) )	print ( <val3> . format ( <name6> * <name4> ** <val2> , <val2> * <name6> * <name4> ) )
<name6> の <name3> 番目の <name4> 番目が <name1> より大きいとき、	if <name6> [ <name3> ] [ <name4> ] > <name1> :	if <name6> [ <name3> ] [ <name4> ] > <name1> :
<name4> の <name1> 番目から <name1> に <val5> を加えた値までの部分列が <val2> と等しいとき、	if <name4> [ <name1> : <name1> + <val5> ] == <val2> :	list ( <name4> [ <name1> : <name1> + <val5> ] == <val2> :
<name4> ( <name2> ) に <val3> を加えた値に <name5> の文字列を加えた値に <val1> を加えた値に <name2> に <name5> を掛けた値の文字列を加えた値を出力する	print ( <name4> ( <name2> ) + <val3> + <name4> ( <name5> ) + <val1> + <name4> ( <name2> * <name5> ) )	print ( <name4> ( <name2> ) + <val3> + <name5> ) + <val1> + str ( <name2> * <name5> ) )
<name6> から <name5> を引いた値を <name6> とする	<name6> = <name6> - <name5>	( <name6> = <name6> - <name5> )
<name6> の最大値から <val4> を引いた値を <name1> とする <name6> の総和を <name2> とする	<name1> = max ( <name6> ) - <val4> <name2> = sum ( <name6> )	else = max ( <name6> ) - <val4> <name2> = sum ( <name6> )
<val1> 、 ( <name3> ) からなる列の両端キューを <name4> 、 <name5> とする	<name4> , <name5> = <val1> , deque ( [ <name3> ] )	<name2> , <name5> = deque ( <val1> , [ <name3> ] )
<name6> を <val5> で割った商を <name3> とする	<name3> = <name6> // <val5>	<name3> = <name6> // <val5>
( <val3> 、 <val1> 、 <val1> 、 <val1> 、 <val1> 、 <val1> 、 <val1> 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val3> , <val1> , <val1> , <val1> , <val1> , <val1> , <val1> , <val1> ]	<name4> = [ <val3> , <val1> , <val1> , <val1> , <val1> , <val1> , <val1> , <val1> ]
<name5> の <name3> -1 番目の <name2> 番目の <val6> 番目に <name5> の <name3> 番目の <name2> から <val1> を引いた値番目の <val6> 番目を加えた値から <name5> の <name3> から <val1> を引いた値番目の <name2> から <val1> を引いた値番目の先頭を引いた値を <name5> の <name3> 番目の <name2> 番目の <val6> 番目にする	<name5> [ <name3> ] [ <name2> ] [ <val6> ] = <name5> [ <name3> - <val1> ] [ <name2> ] [ <val6> ] + <name5> [ <name3> ] [ <name2> - <val1> ] [ <val6> ] - <name5> [ <name3> - <val1> ] [ <name2> - <val1> ] [ <val6> ]	<name1> [ <name3> ] [ <name2> ] [ <val6> ] = <name5> [ <name3> - <val1> ] [ <name2> ] [ <val6> ] + <name5> [ <name3> ] [ <name2> - <val1> ] [ <val6> ] - <name5> [ <name3> - <val1> ] [ <name2> - <val1> ] [ <val6> ]
<name2> の <name1> のキーの集まりをソートした列を順に <name4> として、繰り返す	for <name4> in sorted ( <name2> . <name1> . keys ( ) ) :	. for <name4> in sorted ( <name2> . <name1> . keys ( ) ) :
<name2> の辞書カウンタの出現頻度順の列の各要素を <name1> とし、 <name1> の <val5> 番目の列を <name3> とする	<name3> = [ <name1> [ <val5> ] for <name1> in Counter ( <name2> ) . most_common ( ) ]	<name3> = [ <name1> [ <val5> ] for <name1> in Counter ( <name2> ) . most_common ( ) ]
<name2> の <name6> が、つまり未定値と等しいとき、	if <name2> . <name6> is not None :	or <name2> . <name6> is not None :
<name1> が <name3> と等しいかどうかを返す	return ( <name1> == <name3> )	yield <name1> == <name3>
<name6> に <val5> を掛けた値に <name4> に <val3> を掛けた値を加えた値に <val1> を掛けた値の整数値を <name2> とする	<name2> = int ( ( <name6> * <val5> + <name4> * <val3> ) * <val1> )	<name2> = int ( ( <name6> * <val5> + <name4> * <val3> ) * <val1> )
<val5> に入力された文字列の整数値を掛けた値に <val4> を加えた値を <name6> とする	<name6> = <val5> * int ( input ( ) ) + <val4>	<name5> = <val5> * int ( input ( ) ) + <val4>
<name3> 、 <val2> に <name4> を掛けた値に <val1> に <name6> を掛けた値を加えた値に <val5> に <name3> を掛けた値を加えた値から <name2> に <name4> を加えた値に <name1> を加えた値を引いた値の最大値を <name3> とする	<name3> = max ( <name3> , <val2> * <name4> + <val1> * <name6> + <val5> * <name3> - ( <name2> + <name4> + <name1> ) )	else = max ( <name3> , <val2> * <name4> + <val1> * <name6> + <val5> * <name3> - ( <name2> + <name4> + <name1> ) )
<name2> の集合をソートした列の逆順を <name2> とする	<name2> = sorted ( set ( <name2> ) ) [ : : - 1 ]	<name2> = sorted ( set ( <name2> ) ) [ : : - 1 ]
( 、つまり偽 ) からなる列の <name3> の <name4> 回分の列を <name1> とする	<name1> = [ False ] * <name3> . <name4>	<name1> = [ False ] * <name3> . <name4>
<name1> の <name6> 番目を <name2> に <name3> を掛けた値だけ増加させる	<name1> [ <name6> ] += <name2> * <name3>	<name2> [ <name6> ] += <name2> * <name3>
<name1> ( <name5> , <name4> , <name3> )	<name1> ( <name5> , <name4> , <name3> )	<name1> ( <name5> , <name4> , <name3> )
<name2> が <name4> の <name5> 番目より小さいとき、	if <name2> < <name4> [ <name5> ] :	list < <name2> < <name4> [ <name5> ] :
<val6> を <name4> の先頭の先頭の <val6> 番目にする	<name4> [ <val6> ] [ <val6> ] [ <val6> ] = <val6>	( <name4> [ <val6> ] [ <val6> ] ) [ <val6> ] = <val6>
( <val2> ) からなる列の <name6> 回分の列を <name4> とする ( <val2> ) からなる列の <name6> 回分の列を <name5> とする	<name4> = [ <val2> ] * <name6> <name5> = [ <val2> ] * <name6>	<name2> = [ <val2> ] * <name6> <name5> = [ <val2> ] * <name6>
0 から <name5> 未満までの数列の各要素を <name3> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name3> in range ( <name5> ) ]	<name6> = [ [ ] for <name3> in range ( <name5> ) ]
<val5> に <name3> から <val1> を引いた値を掛けた値が <name2> より小さい間、次を繰り返す <blk> <name3> を <val1> だけ増加させる </blk>	while <val5> * ( <name3> - <val1> ) < <name2> : <blk> <name3> += <val1> </blk>	\ <val5> * ( <name3> - <val1> ) < <name2> : <blk> <name3> += <val1> </blk>
<name1> の x 座標が <name4> の x 座標と等しいとき、	if <name1> . x == <name4> . x :	[ if <name1> . x == <name4> . x :
<name6> から <name3> を引いた値の <val5> 乗に <name4> から <name1> を引いた値の <val5> 乗を加えた値を返す	return ( <name6> - <name3> ) ** <val5> + ( <name4> - <name1> ) ** <val5>	<val2> = ( <name6> - <name3> ) ** <val5> + ( <name4> - <name1> ) ** <val5>
?に <name6> を加えた値を出力する	print ( '?' + <name6> )	print ( '?' + <name6> )
<name3> の <name4> 番目から <name4> に <name5> を加えた値までの部分列を <name2> とする	<name2> = <name3> [ <name4> : <name4> + <name5> ]	<name3> = <name3> [ <name4> : <name4> + <name5> ]
<val1> から <name2> に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <val1> から <name6> に <val4> を加えた値未満までの数列の各要素を <name3> とし、 <val1> の列の列を <name2> とする	<name2> = [ [ <val1> for <name3> in range ( <name6> + <val4> ) ] for <name5> in range ( <name2> + <val4> ) ]	<name1> = [ [ <val1> for <name3> in range ( <name6> + <val4> ) ] for <name5> in range ( <name2> + <val4> ) ]
<val5> の <val4> 乗を <name1> とするを <name2> とする	<name2> = <name1> = <val5> ** <val4>	<name2> = <name1> = <val5> ** <val4>
<name6> . <name2> ( ) を <name3> とする	<name3> = <name6> . <name2> ( )	<name3> = <name6> . <name2> ( )
<name5> に <val3> を加えた値を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <name5> + <val3>	( <name4> [ <name1> ] = <name5> + <val3> )
<name6> はグローバル変数とする	global <name6>	else = <name6> ( a , c [ 0 ] )
<name2> ( <name4> , <name3> , <name5> , <name6> )	<name2> ( <name4> , <name3> , <name5> , <name6> )	( <name2> ( <name4> , <name3> , <name5> , <name6> ) )
<name1> の <name6> 番目が <name3> より小さいとき、	if <name1> [ <name6> ] < <name3> :	while <name1> [ <name6> ] < <name3> :
( ( <val1> , <val6> ) 、 ( <val4> , <val5> ) 、 ( <val2> , <val3> ) 、 ( <val1> , <val6> ) ) からなる辞書を <name3> とする	<name3> = { <val1> : <val6> , <val4> : <val5> , <val2> : <val3> , <val1> : <val6> }	<name3> = { <val1> : <val6> , <val4> : <val5> , <val2> : <val3> , <val1> : <val6> }
0 から <val6> 未満までの数列の各要素を <name3> とし、 <name2> の <name4> の列を <name5> とする	<name5> = [ <name2> . <name4> for <name3> in range ( <val6> ) ]	<name5> = [ <name2> . <name4> for <name3> in range ( <val6> ) ]
<name6> の <name1> 番目から <name4> 番目までの部分列を順に <name3> として、繰り返す	for <name3> in <name6> [ <name1> : <name4> ] :	. for <name3> in <name6> [ <name1> : <name4> ] :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを追加して <name1> を拡張する	<name1> . extend ( list ( map ( int , input ( ) . split ( ) ) ) )	<name2> . <name1> . extend ( list ( map ( int , input ( ) . split ( ) ) ) )
<name4> を <name6> ( <name2> , <name3> , <name5> , <name1> ) だけ増加させる	<name4> += <name6> ( <name2> , <name3> , <name5> , <name1> )	<name2> += <name4> += <name6> ( <name2> , <name3> , <name5> , <name1> )
<name2> の末尾に <name5> の <name4> 番目の先頭を追加する	<name2> . append ( <name5> [ <name4> ] [ 0 ] )	<name2> . append ( <name5> [ <name4> ] [ 0 ] )
<name3> の <name5> 番目が <name6> の <name1> と等しくなくかつ <name4> の <name5> 番目が <name2> より小さいとき、	if <name3> [ <name5> ] != <name6> . <name1> and <name4> [ <name5> ] < <name2> :	for <name3> in <name3> [ <name5> ] != <name6> . <name1> and <name4> [ <name5> ] < <name2> :
<name2> の <name1> 番目の <name5> 番目または <name1> が <name5> と等しくまたは <name6> が ( <name5> 、 <name1> ) の組と等しいとき、	if <name2> [ <name1> ] [ <name5> ] or <name1> == <name5> or <name6> == ( <name5> , <name1> ) :	or <name2> [ <name1> ] [ <name5> ] or <name1> == <name5> or <name6> == ( <name5> , <name1> ) :
<name5> ( <name1> , <name2> , <name4> , <name6> , <name3> ) を返す	return <name5> ( <name1> , <name2> , <name4> , <name6> , <name3> )	yield <name5> ( <name1> , <name2> , <name4> , <name6> , <name3> )
( <val4> 、 <val1> ) からなる列	[ <val4> , <val1> ]	all ( [ <val4> , <val1> ] )
<name6> ( <name2> , <name4> , <name5> ) が -1 と等しいとき、	if <name6> ( <name2> , <name4> , <name5> ) == - 1 :	for <name6> in <name6> ( <name2> , <name4> , <name5> ) == - 1 :
( <val4> 、 <val4> 、 -1 、 <val1> ) からなる列を <name5> とする	<name5> = [ <val4> , <val4> , - <val1> , <val1> ]	<name5> = [ <val4> , <val4> , - <val1> , <val1> ]
<name5> の <name1> 番目の整数値が <val2> と等しくかつ <name6> が <val2> と等しくないとき、	if int ( <name5> [ <name1> ] ) == <val2> and <name6> != <val2> :	for <name5> in int ( <name5> [ <name1> ] ) == <val2> and <name6> != <val2> :
<val1> から <val6> 未満までの数列の各要素を <name3> とし、 <val1> から <val6> 未満までの数列の各要素を <name2> とし、 <val1> の列の列を <name4> とする	<name4> = [ [ <val1> for <name2> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]	<name4> = [ [ <val1> for <name2> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]
<name4> 、 <name1> に <name3> に <name2> を掛けた値を加えた値に <name6> の <name3> 番目を加えた値の最小値を <name4> とする	<name4> = min ( <name4> , <name1> + <name3> * <name2> + <name6> [ <name3> ] )	<name4> = min ( <name4> , <name1> + <name3> * <name2> + <name6> [ <name3> ] )
<name2> の辞書カウンタを <name4> とする	<name4> = collections . Counter ( <name2> )	<name4> = Counter ( <name2> )
0 から <val2> 未満までの数列の各要素を <name3> とし、 <val4> を <name3> だけ左シフトした値の列を <name6> の <name1> にする	<name6> . <name1> = [ <val4> << <name3> for <name3> in range ( <val2> ) ]	<val6> . <name1> = [ <val4> << <name3> for <name3> in range ( <val2> ) ]
<val1> を <name6> の先頭の <val4> 番目にする	<name6> [ <val1> ] [ <val4> ] = <val1>	<name4> [ <val4> ] [ <val4> ] = <val1>
( <name6> 、 <name1> ) の組が <name2> の <name4> に含まれるとき、	if ( <name6> , <name1> ) in <name2> . <name4> :	for <name2> , <name4> in ( <name6> , <name1> ) in <name2> . <name4> :
<name2> を <name5> の <name2> 番目にする	<name5> [ <name2> ] = <name2>	( <name5> [ <name2> ] = <name2> )
os . <name3> の先頭を除いた部分列、 os . <name3> の末尾を除いた部分列の要素をそれぞれ組にした列を順に <name5> 、 <name2> として、繰り返す	for <name5> , <name2> in zip ( <name3> [ 1 : ] , <name3> [ : - 1 ] ) :	. for <name5> , <name2> in zip ( <name3> [ 1 : ] , <name3> [ : - 1 ] ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name1> 、 <name2> 、 <name5> 、 <name4> 、 <name6> 、 <name3> とする	<name6> , <name3> , <name1> , <name2> , <name5> , <name4> , <name6> , <name3> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name2> , <name5> , <name4> , <name6> , <name3> = map ( int , input ( ) . split ( ) )
<name4> に ( <name1> 、 <name3> ) の組を追加した集まり	<name4> . add ( ( <name1> , <name3> ) )	<name4> . add ( ( <name1> , <name3> ) )
<name6> <name3> <name2> <name5>	<name6> <name3> <name2> <name5>	( <name6> <name3> <name2> <name5> )
<name5> が <val6> と等しくない間、次を繰り返す	while <name5> != <val6> :	while <name5> != <val6> :
0 から <name4> に <name6> を加えた値に <val2> を加えた値未満までの数列の各要素を <name1> とし、、つまり空列の列を <name3> とする	<name3> = [ [ ] for <name1> in range ( <name4> + <name6> + <val2> ) ]	<name4> = [ [ ] for <name1> in range ( <name4> + <name6> + <val2> ) ]
<name3> . <name1> ( <name4> . <name2> )	<name3> . <name1> ( <name4> . <name2> )	<name1> . <name1> ( <name4> . <name2> )
<name4> の <name6> に [ MASK ] を書き込むを <name1> とする	<name1> = <name4> . <name6> . <name1>	<name6> . <name1> = <name4> . <name6> . <name1>
<name2> が <name5> と等しくかつ <name3> が <val6> と等しいとき、	if <name2> == <name5> and <name3> == <val6> :	or <name2> == <name5> and <name3> == <val6> :
<name3> ( ( <name2> , <name4> ) , ( <name5> , <name1> ) ) を <name6> とする	<name6> = <name3> ( ( <name2> , <name4> ) , ( <name5> , <name1> ) )	<name6> = <name3> ( ( <name2> , <name4> ) , ( <name5> , <name1> ) )
( <val4> 、 <val5> 、 <val2> 、 <val6> ) からなる列を順に <name3> として、繰り返す	for <name3> in [ <val4> , <val5> , <val2> , <val6> ] :	len in [ <val4> , <val5> , <val2> , <val6> ] :
<name2> ( <val5> . <name6> ( <name1> ( <name3> , <name4> ) ) )	<name2> ( <val5> . <name6> ( <name1> ( <name3> , <name4> ) ) )	<name2> ( <val5> . <name6> ( <name1> ( <name3> , <name4> ) ) )
<name3> から <val2> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> , <val2> , - 1 ) :	) for <name1> in range ( <name3> , <val2> , - 1 ) :
<name6> が <name4> の <name1> 以下の間、次を繰り返す	while ( <name6> <= <name4> . <name1> ) :	del <name6> <= <name4> . <name1> :
<name2> の <name3> から <val4> を引いた値番目かつ <name2> の <name3> 番目のとき、	if <name2> [ <name3> - <val4> ] and <name2> [ <name3> ] :	for <name2> [ <name3> - <val4> ] and <name2> [ <name3> ] :
<name3> の <name6> 番目から <name1> の <name2> 番目を引いた値を <val5> だけ左シフトした値が <name4> と等しいとき、	if ( ( <name3> [ <name6> ] - <name1> [ <name2> ] ) << <val5> ) == <name4> :	for <name3> in ( <name3> [ <name6> ] - <name1> [ <name2> ] ) << <val5> == <name4> :
区切りなしで <val5> 、 <name4> 、 <val2> 、 <name3> 、 <val6> 、 <name1> 、 <val5> 、 <name4> 、 <val5> 、 <name2> を出力する	print ( <val5> , <name4> , <val2> , <name3> , <val6> , <name1> , <val5> , <name4> , <val5> , <name2> , sep = '' )	print ( <val5> , <name4> , <val2> , <name3> , <val6> , <name1> , <val5> , <name4> , <val5> , <name2> , sep = '' )
<name2> の <name6> を <name1> とする	<name1> = <name2> . <name6>	( <name1> = <name2> . <name6> )
<name1> の <name6> 番目の <name2> 番目が ( <val5> 、 <val3> ) からなる列に含まれかつ <name4> の <name6> 番目の <name2> 番目が ( <name1> 、 <val5> ) からなる列に含まれるとき、	if ( <name1> [ <name6> ] [ <name2> ] in [ <val5> , <val3> ] ) and ( <name4> [ <name6> ] [ <name2> ] in [ <name1> , <val5> ] ) :	> <name1> [ <name6> ] [ <name2> ] in [ <val5> , <val3> ] and <name4> [ <name6> ] [ <name2> ] in [ <name1> , <val5> ] :
<name5> の長さが <name3> の長さ以下のとき、	if len ( <name5> ) <= len ( <name3> ) :	list ( len ( <name5> ) <= len ( <name3> ) ) :
<name6> の <name4> 番目が <name3> を <val1> で割った値より大きいとき、	if <name6> [ <name4> ] > <name3> / <val1> :	: if <name6> [ <name4> ] > <name3> / <val1> :
<name4> が <name6> の <name3> より小さいとき、	if <name4> < <name6> . <name3> :	list ( <name4> < <name6> . <name3> ) :
<name1> の <name4> 番目、 <name1> の <name5> に <val6> を加えた値番目を <name1> の <name5> に <val6> を加えた値番目、 <name1> の <name4> 番目とする	<name1> [ <name5> + <val6> ] , <name1> [ <name4> ] = <name1> [ <name4> ] , <name1> [ <name5> + <val6> ]	<name1> [ <name5> + <val6> ] , <name1> [ <name4> ] = <name1> [ <name4> ] , <name1> [ <name5> + <val6> ]
<val4> を <name6> として <name1> の順列を順に <name3> 、 <name5> 、 <name2> として、繰り返す	for <name3> , <name5> , <name2> in permutations ( <name1> , <name6> = <val4> ) :	. for <name3> , <name5> , <name2> in permutations ( <name1> , <name6> = <val4> ) :
<name6> 内の <name4> の出現回数が <val1> と等しくないとき、	if <name6> . count ( <name4> ) != <val1> :	for <name6> in <name6> . count ( <name4> ) != <val1> :
0 から <name5> 未満までの数列の各要素を <name3> とし、、つまり未定値の列を <name1> とする	<name1> = [ None for <name3> in range ( <name5> ) ]	<name6> = [ None for <name3> in range ( <name5> ) ]
<val1> 、 <val1> 、 <val1> 、 <val1> 、 <val1> を <name5> 、 <name6> 、 <name4> 、 <name2> 、 <name3> とする	<name5> , <name6> , <name4> , <name2> , <name3> = <val1> , <val1> , <val1> , <val1> , <val1>	<name5> , <name6> , <name4> , <name2> , <name3> = <val1> , <val1> , <val1> , <val1>
( <val1> 、 <val6> 、 <val5> 、 <val4> ) からなる列の各要素を <name2> とし、 <name5> の <name4> の <name3> 番目から <name2> を引いた値番目の列が全てが真のとき、	if all ( [ <name5> [ <name4> [ <name3> ] - <name2> ] for <name2> in [ <val1> , <val6> , <val5> , <val4> ] ] ) :	for <name2> in all ( [ <name5> [ <name4> [ <name3> ] - <name2> ] for <name2> in [ <val1> , <val6> , <val5> , <val4> ] ] ) :
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name6> 、 <name5> とする	<name3> , <name4> , <name6> , <name5> = map ( int , <name2> ( ) . split ( ) )	<name3> , <name4> , <name6> , <name5> = map ( int , <name2> ( ) . split ( ) )
入力された文字列を <val1> で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を <name5> とする	<name5> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val1> ) ]	<name5> = [ int ( <name6> ) for <name6> in input ( ) . split ( <val1> ) ]
421653 のリストを <name5> とする	<name5> = list ( '421653' )	else = list ( 'yuiophjklnm' )
<name1> の <val5> 番目が <val5> より大きいとき、	if <name1> [ <val5> ] > <val5> :	: if <name1> [ <val5> ] > <val5> :
<name6> を <name3> で割った余りを <name6> とする	<name6> = <name6> % <name3>	( <name6> = <name6> % <name3> )
<name6> を <name2> の <name1> 番目だけ減少させる	<name6> -= <name2> [ <name1> ]	<name1> -= <name2> [ <name1> ]
<name1> ( <name4> , <name6> ) を <name5> とする	<name5> = <name1> ( <name4> , <name6> )	<name5> = <name1> ( <name4> , <name6> )
<name5> 内の <val1> を <val6> で置き換えた文字列を出力する	print ( <name5> . replace ( <val1> , <val6> ) )	print ( <name5> . replace ( <val1> , <val6> ) )
<name3> または <name6> または <name5> のとき、	if <name3> or <name6> or <name5> :	for <name3> in <name3> or <name6> or <name5> :
<name5> の、つまり先頭から <name6> 番目までの部分列を <name1> とする	<name1> = <name5> [ : <name6> ]	<name1> = <name5> [ : <name6> ]
<name4> と <name6> の直積を順に <name1> 、 <name3> として、繰り返す	for <name1> , <name3> in product ( <name4> , <name6> ) :	. for <name1> , <name3> in product ( <name4> , <name6> ) :
<name1> から <name6> を引いた値に <name1> から <name6> を引いた値を掛けた値に <name4> から <name2> を引いた値に <name4> から <name2> を引いた値を掛けた値を加えた値を <name5> とする	<name5> = ( <name1> - <name6> ) * ( <name1> - <name6> ) + ( <name4> - <name2> ) * ( <name4> - <name2> )	<name5> = ( <name1> - <name6> ) * ( <name1> - <name6> ) + ( <name4> - <name2> ) * ( <name4> - <name2> )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name3> 、 <name1> 、 <name5> とする	<name2> , <name3> , <name1> , <name5> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> , <name3> , <name1> , <name5> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
\ 0 から <name3> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の両端から <val5> を取り除いた文字列の列を <name6> とする\	\ <name6> = [ input ( ) . strip ( <val5> ) for <name1> in range ( <name3> ) ] \	\ <name6> = [ input ( ) . strip ( <val5> ) for <name1> in range ( <name3> ) ] \
<name2> ( <name5> , <val6> ) を <name4> とする	<name4> = <name2> ( <name5> , <val6> )	<name4> = <name2> ( <name5> , <val6> )
<name4> ( <name2> . <name1> - <name2> . <name5> ) を <name3> とする	<name3> = <name4> ( <name2> . <name1> - <name2> . <name5> )	<name6> = <name4> ( <name2> . <name1> - <name2> . <name5> )
<name4> . <name6> ( <name5> ) を <name5> とする	<name5> = <name4> . <name6> ( <name5> )	<name5> = <name4> . <name6> ( <name5> )
<name5> に <name3> を掛けた値から <name4> に <name1> を掛けた値を引いた値を <name6> とする	<name6> = <name5> * <name3> - <name4> * <name1>	<name6> = <name5> * <name3> - <name4> * <name1>
<name3> が <name1> の <name2> 番目の先頭と等しいとき、 <blk> <name6> を <name1> の <name2> 番目の先頭にする </blk>	if <name3> == <name1> [ <name2> ] [ 0 ] : <blk> <name1> [ <name2> ] [ 0 ] = <name6> </blk>	while <name3> == <name1> [ <name2> ] [ 0 ] : <blk> <name1> [ <name2> ] [ 0 ] = <name6> </blk>
{ 0 } { 1 } { 2 : . 5 <name6> }を書式として <name1> 、 <name4> 、 <name6> で整形した文字列を出力する	print ( '{0} {1} {2:.5f}' . format ( <name1> , <name4> , <name6> ) )	input ( '{0} {1} '{0} . format ( <name1> , <name4> , <name6> ) )
<val4> を <name5> の <name6> の <name3> 番目にする	<name5> . <name6> [ <name3> ] = <val4>	( <name5> . <name6> [ <name3> ] = <val4> )
<name4> から <name6> を引いた値の <val3> 乗に <name2> から <name5> を引いた値の <val3> 乗を加えた値の平方根を <name1> とする	<name1> = math . sqrt ( ( <name4> - <name6> ) ** <val3> + ( <name2> - <name5> ) ** <val3> )	<name1> = math . sqrt ( ( <name4> - <name6> ) ** <val3> + ( <name2> - <name5> ) ** <val3> )
<name3> ( <name6> , <name4> , <name1> , <name5> + <val2> , <name3> )	<name3> ( <name6> , <name4> , <name1> , <name5> + <val2> , <name3> )	<name5> ( <name3> ( <name6> , <name4> , <name1> , <name5> + <val2> , <name3> ) )
( ( <name1> ) からなる列の 0 から <name6> 未満までの数列の各要素を <name4> とし、 <name6> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <name1> ] * [ <name6> for <name4> in range ( <name6> ) ] ]	<name5> = [ [ <name1> ] * [ <name6> for <name4> in range ( <name6> ) ] ]
<val4> が ( <name6> 、 <name1> 、 <name5> ) からなる列に含まれるとき、	if <val4> in [ <name6> , <name1> , <name5> ] :	isinstance ( <val4> in [ <name6> , <name1> , <name5> ] ) :
<name4> から <val5> を引いた値が <name3> に含まれるとき、	if <name4> - <val5> in <name3> :	list ( <name4> - <val5> ) in <name3> :
<name2> の先頭、 <name2> の <val3> 番目を出力する	print ( <name2> [ 0 ] , <name2> [ <val3> ] )	print ( <name2> [ 0 ] , <name2> [ <val3> ] )
<val6> を書式として <name1> 、 <name2> で整形した文字列を <name3> とする	<name3> = <val6> . format ( <name1> , <name2> )	else = <val6> . format ( <name1> , <name2> )
<name5> を <val3> で分割した字句列の各要素を <name2> とし、 <name2> の浮動小数点数の列を展開し、それぞれ <name2> 、 <name5> 、 <name3> 、 <name6> 、 <name4> 、 <name1> とする	<name2> , <name5> , <name3> , <name6> , <name4> , <name1> = [ float ( <name2> ) for <name2> in <name5> . split ( <val3> ) ]	<name5> , <name3> , <name6> , <name4> , <name1> = [ float ( <name2> ) for <name2> in <name5> . split ( <val3> ) ]
<name3> [ <name2> ] . <name1> ( )	<name3> [ <name2> ] . <name1> ( )	( <name3> [ <name2> ] . <name1> ( ) )
<name1> を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name1>	( <name4> , <name2> = <name1> )
<name5> の <name6> 番目が <name3> の <name6> 番目の長さより小さいとき、	if <name5> [ <name6> ] < len ( <name3> [ <name6> ] ) :	list <name5> [ <name6> ] < len ( <name3> [ <name6> ] ) :
<name4> の文字列に <val2> を加えた値に <name1> を加えた値を出力する	print ( str ( <name4> ) + <val2> + <name1> )	print ( str ( <name4> ) + <val2> + <name1> )
<name5> ( ( <name4> ( <name6> , <name2> ) , <name3> ) , ( <name1> ( <name5> , <name4> ) , <name6> ) ) を一旦、返す	yield <name5> ( ( <name4> ( <name6> , <name2> ) , <name3> ) , ( <name1> ( <name5> , <name4> ) , <name6> ) )	global <name5> ( ( <name4> ( <name6> , <name2> ) , <name3> ) , ( <name1> ( <name5> , <name4> ) , <name6> ) )
<name4> の <name2> 番目を順に <name5> として、繰り返す	for <name5> in <name4> [ <name2> ] :	continue [ <name2> ] :
<name4> の <name3> 番目を <name6> とする <name4> の <name3> に <val2> を加えた値番目を <name5> とする	<name6> = <name4> [ <name3> ] <name5> = <name4> [ <name3> + <val2> ]	<name2> = <name4> [ <name3> ] <name5> = <name4> [ <name3> + <val2> ]
0 から <name5> の長さから <val4> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name5> ) - <val4> ) :	) <name6> in range ( len ( <name5> ) - <val4> ) :
<name4> -1 に <name3> を加えた値に <name5> を掛けた値に <val2> を加えた値の整数値を出力する	print ( int ( ( <name4> - <val2> + <name3> ) * <name5> + <val2> ) )	range ( int ( ( <name4> - <val2> + <name3> ) * <name5> + <val2> ) )
( ( <name1> 、 <name5> ) からなる列 ) からなる列を <name4> とする	<name4> = [ [ <name1> , <name5> ] ]	<name4> = [ [ <name1> , <name5> ] ]
<name6> の <name1> 番目を返す	return <name6> [ <name1> ]	yield <name6> [ <name1> ]
<name6> 内の <val3> を <name5> の文字列で置き換えた文字列の整数値を <name4> とする	<name4> = int ( <name6> . replace ( <val3> , str ( <name5> ) ) )	<name4> = int ( <name6> . replace ( <val3> , str ( <name5> ) ) )
<name5> の <name1> を <name5> の <name4> の <name5> の <name1> 番目にする	<name5> . <name4> [ <name5> . <name1> ] = <name5> . <name1>	<name1> . <name4> [ <name5> . <name1> ] = <name5> . <name1>
<name3> の <name6> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = map ( int , <name3> . <name6> . readline ( ) . split ( ) )	<name4> , <name2> = map ( int , <name3> . <name6> . readline ( ) . split ( ) )
<name2> が <name5> に含まれる間、次を繰り返す	while <name2> in <name5> :	del <name2> in <name5> :
<name3> に <val4> を加えた値を <name5> の <name1> 番目の <name6> 番目の <name2> 番目にする	<name5> [ <name1> ] [ <name6> ] [ <name2> ] = <name3> + <val4>	<name1> [ <name1> ] [ <name6> ] [ <name2> ] = <name3> + <val4>
<name2> が <name3> の <name6> の <val4> 番目と等しいとき、	if <name2> == <name3> . <name6> [ <val4> ] :	for <name2> in <name3> . <name6> [ <val4> ] :
<name2> の <val4> 番目を <name2> とする	<name2> = <name2> [ <val4> ]	( <name2> = <name2> [ <val4> ] )
<name4> の末尾に <name1> ( <name6> , <name5> ) を追加する	<name4> . append ( <name1> ( <name6> , <name5> ) )	<name4> . append ( <name1> ( <name6> , <name5> ) )
<name2> が <name6> . <name5> ( ) に含まれないとき、	if <name2> not in <name6> . <name5> ( ) :	for <name2> in <name6> . <name5> ( ) :
<name5> の <name1> の <val2> 番目番目の末尾を出力する	print ( <name5> [ <name1> [ <val2> ] ] [ - <val2> ] )	print ( <name5> [ <name1> [ <val2> ] ] [ - <val2> ] )
taisho 、 <name2> から <val1> を引いた値、 <name6> 、 <name4> を出力する	print ( 'taisho' , <name2> - <val1> , <name6> , <name4> )	end = 'taisho' , <name2> - <val1> , <name6> , <name4> )
<name3> ( <name2> , <name5> , <name4> , <name6> , <name1> , <name3> ) を <name1> とする	<name1> = <name3> ( <name2> , <name5> , <name4> , <name6> , <name1> , <name3> )	<name1> = <name3> ( <name2> , <name5> , <name4> , <name6> , <name1> , <name3> )
<name3> が <val1> と等しくかつ <name2> が <val1> 以下のとき、	if <name3> == <val1> and <name2> <= <val1> :	if <name3> == <val1> and <name2> <= <val1> :
<name5> の各要素を <name4> とし、 <name2> の列の各要素を <name5> とし、 <name4> の列を <name2> とする	<name2> = [ <name4> for <name5> in [ <name2> for <name4> in <name5> ] ]	<name6> = [ <name4> for <name5> in [ <name2> for <name4> in <name5> ] ]
<name6> から <name5> を引いた値を <name1> とする	<name1> = <name6> - <name5>	<name6> <name1> = <name6> - <name5>
<name2> の末尾に ( <name1> 、 <name6> 、 <name5> ) の組を追加する	<name2> . append ( ( <name1> , <name6> , <name5> ) )	<name4> . append ( ( <name1> , <name6> , <name5> ) )
<name6> を <name2> の <name3> にする	<name2> . <name3> = <name6>	( <name2> . <name3> = <name6> )
<name1> のキーと値の集まりのリストを <name5> とする	<name5> = list ( <name1> . items ( ) )	<name5> = list ( <name1> . items ( ) )
<val5> を <name2> とする <val1> を <name3> とする <val4> を <name6> とする	<name2> = <val5> <name3> = <val1> <name6> = <val4>	<name1> = <name2> = <val5> <name3> = <val1> <name6> = <val4>
( <name5> の <val6> 番目から <name3> の先頭を引いた値、 <name5> の <val2> 番目から <name3> の <val2> 番目を引いた値、 <name5> の <val1> 番目から <name3> の <val1> 番目を引いた値 ) からなる列を <name4> とする	<name4> = [ <name5> [ <val6> ] - <name3> [ <val6> ] , <name5> [ <val2> ] - <name3> [ <val2> ] , <name5> [ <val1> ] - <name3> [ <val1> ] ]	<name4> = [ <name5> [ <val6> ] - <name3> [ <val6> ] , <name5> [ <val2> ] - <name3> [ <val2> ] , <name5> [ <val1> ] - <name3> [ <val1> ] ]
<name4> の <name5> 番目を展開し、それぞれ <name6> 、 <name2> 、 <name1> とする	<name6> , <name2> , <name1> = <name4> [ <name5> ]	<name3> , <name2> , <name1> = <name4> [ <name5> ]
入力された文字列を空白で分割した字句列の <val6> 番目から、つまり末尾までの部分列の各要素に整数を適用した列のリストを <name4> とする	<name4> = list ( map ( int , input ( ) . split ( ) [ <val6> : ] ) )	<name4> = list ( map ( int , input ( ) . split ( ) [ <val6> : ] ) )
<name2> に <name3> を掛けた値に <name6> を掛けた値を <name5> で割った値を <name1> とする	<name1> = <name2> * <name3> * <name6> / <name5>	<name1> = <name2> * <name3> * <name6> / <name5>
<name4> の <name1> 番目から、つまり末尾までの部分列に <name4> の、つまり先頭から <name1> 番目までの部分列を加えた値を <name4> とする	<name4> = <name4> [ <name1> : ] + <name4> [ 0 : <name1> ]	<name4> = <name4> [ <name1> : ] + <name4> [ : <name1> ]
<name5> 内の <name5> の <name2> 番目の出現回数を <name1> とする	<name1> = <name5> . count ( <name5> [ <name2> ] )	<name1> = <name5> . count ( <name5> [ <name2> ] )
<name6> から <val1> を引いた値を <val1> だけ右シフトした値を <name5> とする	<name5> = ( <name6> - <val1> ) >> <val1>	<name5> = ( <name6> - <val1> ) >> <val1>
( <val5> ) からなる列の <name4> 回分の列を <name3> とする	<name3> = [ <val5> ] * <name4>	<name3> = [ <val5> ] * <name4>
<name1> モジュールを用いる	from <name1> import stdin , stdout	return from <name1> import combinations
0 から <val2> 未満までの数列のリスト、 0 から <val2> 未満までの数列のリストを <name3> 、 <name1> とする	<name3> , <name1> = list ( range ( <val2> ) ) , list ( range ( <val2> ) )	<name3> , <name1> = list ( range ( <val2> ) ) , list ( range ( <val2> ) )
<name6> ( <name3> , <name4> , <name2> , <name1> ) でないとき、	if not <name6> ( <name3> , <name4> , <name2> , <name1> ) :	isinstance ( <name6> ( <name3> , <name4> , <name2> , <name1> ) ) :
<name5> の <name3> を順に <name1> として、繰り返す	for <name1> in <name5> . <name3> :	. for <name1> in <name5> . <name3> :
<val3> に <name1> を四捨五入した整数値の文字列を加えた値を <name5> とする	<name5> = <val3> + str ( round ( <name1> ) )	<name5> = <val3> + str ( round ( round ( <name1> ) ) )
<name4> に <name6> の各要素を <name1> とし、 <name1> の各要素に <name2> . <name3> を適用した列の組の列の最小値を追加した集まり	<name4> . add ( min ( [ tuple ( map ( <name2> . <name3> , <name1> ) ) for <name1> in <name6> ] ) )	<name4> . add ( min ( [ tuple ( map ( <name2> . <name3> , <name1> ) ) for <name1> in <name6> ] ) )
<name6> の、つまり先頭から -2 番目までの部分列、 <name6> の先頭を除いた部分列の要素をそれぞれ組にした列を順に <name3> 、 <name2> として、繰り返す	for <name3> , <name2> in zip ( <name6> [ : - 2 ] , <name6> [ 1 : ] ) :	. for <name3> , <name2> in zip ( <name6> [ 0 : - 1 ] , <name6> [ 1 : ] ) :
<name4> ( <name3> ) の整数値を返す	return int ( <name4> ( <name3> ) )	assert int ( <name4> ( <name3> ) )
<name3> が <name6> と等しいかどうかを返す	return <name3> == <name6>	x return <name3> == <name6>
<name1> の先頭を取り出した値を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name1> . pop ( )	<name2> , <name5> , <name2> = <name1> . pop ( )
<name2> ( <name1> , <name6> ) を <name4> とする	<name4> = <name2> ( <name1> , <name6> )	<name4> = <name2> ( <name1> , <name6> )
<name4> のとき <name3> と <name4> の最大公約数、そうでなければ <name3> を返す	return gcd ( <name3> , <name4> ) if <name4> else <name3>	print ( gcd ( <name3> , <name4> ) if <name4> else <name3> )
<val5> を開始番号として <name6> の先頭を除いた部分列に番号付した組の列を順に <name2> 、 <name1> として、繰り返す	for <name2> , <name1> in enumerate ( <name6> [ <val5> : ] , start = <val5> ) :	. for <name2> , <name1> in enumerate ( <name6> [ <val5> : ] , start = <val5> ) :
0 から <name3> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 ( ( - <name4> ) からなる列の 0 から <name1> + <val2> 未満までの数列の各要素を <name6> とし、 <val5> の列回分の列 ) からなる列の列を <name3> とする	<name3> = [ [ [ - <name4> ] * [ <val5> for <name6> in range ( <name1> + <val2> ) ] ] for <name6> in range ( <name3> + <val2> ) ]	<name3> = [ [ [ - <val2> ] * [ <val5> for <name6> in range ( <name1> + <val2> ) ] ] for <name6> in range ( <name3> + <val2> ) ]
<name2> の先頭から <name6> を探して見つかった位置を <name3> とする	<name3> = <name2> . find ( <name6> )	<name3> = <name2> . find ( <name6> )
<name4> の <name2> を <val1> だけ増加させる	<name4> . <name2> += <val1>	( <name4> . <name2> += <val1> )
<name2> . <name3> ( <name6> , <name5> ) を <name1> とする	<name1> = <name2> . <name3> ( <name6> , <name5> )	<name1> = <name2> . <name3> ( <name6> , <name5> )
<val1> から <val2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , <val2> ) :	continue for <name5> in range ( <val1> , <val2> ) :
( <val4> 、 <val3> 、 <val1> 、 <val6> 、 <val5> 、 <val2> 、 <val4> 、 <val3> 、 <val1> ) からなる列を <name2> とする	<name2> = [ <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> , <val3> , <val1> ]	<name2> = [ <val4> , <val3> , <val1> , <val6> , <val5> , <val2> , <val4> , <val3> , <val1> ]
<name1> の <name5> の <name2> に <val6> を加えた値番目の <name3> 番目に <name1> の <name5> の <name2> から <name3> を引いた値番目の <name3> に <val6> を加えた値番目を加えた値を <name1> の <name5> の <name2> に <val6> を加えた値番目の <name3> に <val6> を加えた値番目にする	<name1> . <name5> [ <name2> + <val6> ] [ <name3> + <val6> ] = <name1> . <name5> [ <name2> + <val6> ] [ <name3> ] + <name1> . <name5> [ <name2> - <name3> ] [ <name3> + <val6> ]	. <name1> [ <name5> . <name2> + <val6> ] [ <name3> + <val6> ] = <name1> . <name5> [ <name2> + <val6> ] [ <name3> ] + <name1> . <name5> [ <name2> - <name3> ] [ <name3> + <val6> ]
<name5> の <name2> 番目内の <name5> の <name2> 番目の <name6> 番目の出現回数から <name4> 内の <name5> の <name2> 番目の <name6> 番目の出現回数を引いた値を <name1> とする	<name1> = <name5> [ <name2> ] . count ( <name5> [ <name2> ] [ <name6> ] ) - <name4> . count ( <name5> [ <name2> ] [ <name6> ] )	<name1> = <name5> [ <name2> ] . count ( <name5> [ <name2> ] [ <name6> ] ) - <name4> . count ( <name5> [ <name2> ] [ <name6> ] )
<name1> の総和に <name4> を <name4> に <name3> を加えた値で割った値を掛けた値を <name6> とする	<name6> = sum ( <name1> ) * ( <name4> / ( <name4> + <name3> ) )	<name6> = sum ( <name1> ) * ( <name4> / ( <name4> + <name3> ) )
<name2> ( <name5> , ( <name4> , <name1> , <name6> ) )	<name2> ( <name5> , ( <name4> , <name1> , <name6> ) )	<name2> ( <name5> , ( <name4> , <name1> , <name6> ) )
<name4> が <name1> に含まれないとき、 <blk> <name1> の <val3> に <name4> を挿入する </blk>	if <name4> not in <name1> : <blk> <name1> . insert ( <val3> , <name4> ) </blk>	try : if <name4> not in <name1> : <blk> <name1> . insert ( <val3> , <name4> ) </blk>
<name1> が <val5> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> == <val5> : <blk> break </blk>	\ if <name1> == <val5> : <blk> break </blk>
<name3> の <name4> 、 <name3> の <name6> 、 <name3> の <name2> 、 <name3> の <name1> を <name3> の <name1> 、 <name3> の <name2> 、 <name3> の <name4> 、 <name3> の <name6> とする	<name3> . <name1> , <name3> . <name2> , <name3> . <name4> , <name3> . <name6> = <name3> . <name4> , <name3> . <name6> , <name3> . <name2> , <name3> . <name1>	<name2> . <name3> , <name1> . <name2> , <name3> . <name4> , <name3> . <name6> = <name3> . <name4> , <name3> . <name6> , <name3> . <name2> , <name3> . <name1>
<name1> が、つまり無限の整数列以上または <name3> の <name1> 番目が <name4> と等しくないとき、	if <name1> >= count or <name3> [ <name1> ] != <name4> :	for <name1> in ( count ) or <name3> [ <name1> ] != <name4> :
<name1> の <name6> 番目の <val5> 番目を <name6> とする	<name6> = <name1> [ <name6> ] [ <val5> ]	<name6> = <name1> [ <name6> ] [ <val5> ]
<name1> の <name5> と <name1> の <name3> の論理積が <name1> の <name3> と等しいかどうかを返す	return <name1> . <name5> & <name1> . <name3> == <name1> . <name3>	x return <name1> . <name5> & <name1> . <name3> == <name1> . <name3>
<name5> を展開し、それぞれ <name4> 、 <name1> 、 <name3> とする	<name4> , <name1> , <name3> = <name5>	<name4> , <name1> , <name3> = <name5>
( <name2> 、 os . <name6> の逆順 ) の組を返す	return ( <name2> , <name6> [ : : - 1 ] )	yield ( <name2> , <name6> [ : : - 1 ] )
<name3> の <name5> のとき、	if <name3> . <name5> :	for <name3> . <name5> in <name3> . <name5> :
<val6> から <name3> + <val6> 未満までの数列の <name4> 個までのコンビネーションの各要素を <name1> とし、 <name1> の総和が <name2> と等しいかどうかの列の総和を出力する	print ( sum ( [ sum ( <name1> ) == <name2> for <name1> in itertools . combinations ( range ( <val6> , <name3> + <val6> ) , <name4> ) ] ) )	print ( sum ( [ sum ( <name1> ) == <name2> for <name1> in combinations ( range ( <val6> , <name3> + <val6> ) , <name4> ) ] ) )
<name4> に <name3> を加えた値に <name1> を加えた値を <name2> とする	<name2> = <name4> + <name3> + <name1>	<name2> = <name4> + <name3> + <name1>
sample - input2 . txt 、 <val6> を開いたファイルストリームを <name1> の <name5> にする	<name1> . <name5> = open ( 'sample-input2.txt' , <val6> )	dict . <name5> = open ( 'sample-input2.txt' , <val6> )
<name4> ( <name5> - <name6> , <name1> - <name2> ) を <name3> とする	<name3> = <name4> ( <name5> - <name6> , <name1> - <name2> )	<name4> = <name4> ( <name5> - <name6> , <name1> - <name2> )
<name6> 、 <name1> を <name4> 、 <name5> とする	<name4> , <name5> = <name6> , <name1>	( <name4> , <name5> = <name6> , <name1> )
<name5> の <val2> 番目を出力する	print ( <name5> [ <val2> ] )	print ( <name5> [ <val2> ] )
<name3> 内の <name6> の出現回数が <val2> と等しいとき、	if <name3> . count ( <name6> ) == <val2> :	list <name3> . count ( <name6> ) == <val2> :
<name3> の <name4> 番目を <name1> の <name4> 番目だけ増加させる	<name3> [ <name4> ] += <name1> [ <name4> ]	<name4> [ <name4> ] += <name1> [ <name4> ]
<name4> ( <name5> , <val2> , <name1> ) を <name3> とする	<name3> = <name4> ( <name5> , <val2> , <name1> )	<name3> = <name4> ( <name5> , <val2> , <name1> )
<name4> から <val6> を引いた値を <name1> とする	<name1> = <name4> - <val6>	<name1> = <name4> - <val6>
<name1> の <name2> の <name6> 番目を <name1> の <name2> の <name1> の <name3> の <name6> 番目番目にする	<name1> . <name2> [ <name1> . <name3> [ <name6> ] ] = <name1> . <name2> [ <name6> ]	. <name1> . <name2> [ <name1> . <name3> [ <name6> ] ] = <name1> . <name2> [ <name6> ]
<name6> から <name4> を引いた値を <name3> とする <name1> から <name5> を引いた値を <name2> とする	<name3> = <name6> - <name4> <name2> = <name1> - <name5>	<name2> = <name6> - <name4> <name2> = <name1> - <name5>
<name6> の <name2> の <name4> に <val3> を加えた値番目の <name1> に <val3> を加えた値番目を <name5> で割った余りにする	<name6> . <name2> [ <name4> + <val3> ] [ <name1> + <val3> ] % = <name5>	( <name6> . <name2> [ <name4> + <val3> ] [ <name1> + <val3> ] ) % = <name5>
( 、つまり空列 ) からなる列の <name2> 回分の列を <name3> とする	<name3> = [ [ ] ] * <name2>	<name3> = [ [ ] ] * <name2>
( -100 ) からなる列に入力された文字列を空白で分割した字句列の各要素に <name6> をパラメータとして <name3> の <name6> 番目を返す関数を適用した列のリストを加えた値を <name1> とする	<name1> = [ - 100 ] + list ( map ( lambda <name6> : <name3> [ <name6> ] , input ( ) . split ( ) ) )	<name1> = [ - <val4> ] + list ( map ( lambda <name6> : <name3> [ <name6> ] , input ( ) . split ( ) ) )
<name1> の <name3> 番目、 <name1> の <name3> から <val6> を引いた値番目を <name1> の <name3> から <val6> を引いた値番目、 <name1> の <name3> 番目とする	<name1> [ <name3> - <val6> ] , <name1> [ <name3> ] = <name1> [ <name3> ] , <name1> [ <name3> - <val6> ]	<name1> [ <name3> - <val6> ] , <name1> [ <name3> ] = <name1> [ <name3> ] , <name1> [ <name3> - <val6> ]
<name5> を <val2> で割った余りのとき、	if <name5> % <val2> :	for if <name5> % <val2> :
<name4> の <val3> 番目から、つまり末尾までの部分列をソートした列を <name1> とする	<name1> = sorted ( <name4> [ <val3> : ] )	<name1> = sorted ( <name4> [ <val3> : ] )
<name1> ( ) の浮動小数点数を <name2> とする	<name2> = float ( <name1> ( ) )	<name2> = float ( <name1> ( ) )
( <val4> ) からなる列の <name3> に <val5> を加えた値回分の列を <name2> の <name6> にする	<name2> . <name6> = [ <val4> ] * ( <name3> + <val5> )	<name2> . <name6> = [ <val4> ] * ( <name3> + <val5> )
<val6> を <name5> の <name5> の末尾番目の <name1> にする	<name5> [ <name5> [ - 1 ] ] . <name1> = <val6>	<name4> [ <name5> [ - 1 ] ] . <name1> = <val6>
<name1> が <name3> より小さいとき、 <blk> <name1> を <name3> とする </blk>	if <name1> < <name3> : <blk> <name3> = <name1> </blk>	\ <name3> = <name1> < <name3> : <blk> <name3> = <name1> </blk>
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name2> 、 <name5> とする	<name2> , <name5> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name5> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<val4> が <name1> に含まれるとき、	if <val4> in <name1> :	tuple if <val4> in <name1> :
<name1> ( <name3> , ( <name2> + <name5> , <name4> , <name6> ) )	<name1> ( <name3> , ( <name2> + <name5> , <name4> , <name6> ) )	<name1> ( <name3> , ( <name2> + <name5> , <name4> , <name6> ) )
<name1> ( <name6> ) を <name5> とする	<name5> = <name1> ( <name6> )	else = <name1> ( <name6> )
<name4> の <name1> 番目から <name6> 番目までの部分列を <name3> とする	<name3> = <name4> [ <name1> : <name6> ]	<name3> = <name4> [ <name1> : <name6> ]
( ( <name1> , <val4> ) 、 ( <name5> , <val4> ) 、 ( <name2> , <val4> ) 、 ( <name6> , <val4> ) 、 ( <name3> , <val4> ) 、 ( <name3> , <val4> ) 、 ( <val1> , <val4> ) ) からなる辞書を <name3> とする	<name3> = { <name1> : <val4> , <name5> : <val4> , <name2> : <val4> , <name6> : <val4> , <name3> : <val4> , <name3> : <val4> , <val1> : <val4> }	<name3> = { <name1> : <val4> , <name5> : <val4> , <name2> : <val4> , <name6> : <val4> , <name3> : <val4> , <val1> : <val4> }
<name3> の <name2> 番目の <name5> 番目を <name6> だけ増加させる	<name3> [ <name2> ] [ <name5> ] += <name6>	( <name3> [ <name2> ] [ <name5> ] += <name6> )
<name5> から <val1> を引いた値が <name2> より小さいとき、	if <name5> - <val1> < <name2> :	list if <name5> - <val1> < <name2> :
<name2> に <name5> に <name4> を掛けた値を加えた値を返す	return <name2> + <name5> * <name4>	yield <name2> + <name5> * <name4>
<name5> [ <name1> [ <val4> ] ] . <name2> ( )	<name5> [ <name1> [ <val4> ] ] . <name2> ( )	<name5> [ <name1> [ <val4> ] ] . <name2> ( )
( ( <val4> ) からなる列の <val4> から <val3> 未満までの数列の各要素を <name2> とし、 <val3> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val4> ] * [ <val3> for <name2> in range ( <val3> ) ] ]	<name1> = [ [ <val4> ] * [ <val3> for <name2> in range ( <val3> ) ] ]
<name4> の文字列に <val5> を加えた値に <name1> を加えた値を出力する	print ( str ( <name4> ) + <val5> + <name1> )	<name4> = str ( <name4> ) + <val5> + <name1> )
<name6> の <val1> に ( <val1> ) からなる列の <name4> に <val5> を加えた値回分の列を挿入する	<name6> . insert ( <val1> , [ <val1> ] * ( <name4> + <val5> ) )	<name6> . insert ( <val1> , [ <val1> ] * ( <name4> + <val5> ) )
<name2> が <val3> と等しいとき、 <blk> <name1> . <name5> ( ) </blk>	if <name2> == <val3> : <blk> <name1> . <name5> ( ) </blk>	: if <name2> == <val3> : <blk> <name1> . <name5> ( ) </blk>
<name1> の <name3> 番目の末尾に ( <name5> 、 <name4> ) からなる列を追加する	<name1> [ <name3> ] . append ( [ <name5> , <name4> ] )	<name1> [ <name3> ] . append ( [ <name5> , <name4> ] )
<name3> が <val2> 以上のとき、	if <name3> >= <val2> :	: if <name3> >= <val2> :
<val6> の <val5> 乗を <name4> の <name3> 番目にする	<name4> [ <name3> ] = <val6> ** <val5>	<name2> [ <name4> [ <name3> ] = <val6> ** <val5>
<name2> 内の [ MASK ] の出現回数を <val3> だけ増加させる	<name2> . count += <val3>	<name6> . count += <val3>
<name3> を順に <name6> として、繰り返す <blk> <name2> 内の <name6> と等しい要素を取り除く </blk>	for <name6> in <name3> : <blk> <name2> . remove ( <name6> ) </blk>	for <name6> in <name3> : <blk> <name2> . remove ( <name6> ) </blk>
{ : . 6 f }を書式として <name3> の先頭で整形した文字列を出力する	print ( '{:.6f}' . format ( <name3> [ 0 ] ) )	range ( <name6> . format ( <name3> [ 0 ] ) )
<name6> が <name3> の <name1> と等しいとき、	if <name6> == <name3> . <name1> :	list ( <name6> == <name3> . <name1> ) :
0 から <name6> 未満までの数列の各要素を <name4> とし、 <name5> の <name4> 番目に <name2> の -1 番目から <name2> の <name4> 番目を引いた値を掛けた値の列の最大値を <name3> とする	<name3> = max ( [ <name5> [ <name4> ] * ( <name2> [ - 1 ] - <name2> [ <name4> ] ) for <name4> in range ( <name6> ) ] )	<name3> = max ( [ <name5> [ <name4> ] * ( <name2> [ - 1 ] - <name2> [ <name4> ] ) for <name4> in range ( <name6> ) ] )
<name1> ( <name4> , <name2> , <name3> , <name5> ) を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = <name1> ( <name4> , <name2> , <name3> , <name5> )	<name3> , <name6> = <name1> ( <name4> , <name2> , <name3> , <name5> )
<name6> の <name1> 番目から <name3> を引いた値を <val2> で割った余りを <name6> の <name1> 番目にする	<name6> [ <name1> ] = ( <name6> [ <name1> ] - <name3> ) % <val2>	dict [ <name1> ] = ( <name6> [ <name1> ] - <name3> ) % <val2>
( ( <val1> , <val3> ) 、 ( <val6> , <val2> ) 、 ( <val5> , <val4> ) ) からなる辞書を <name4> とする	<name4> = { <val1> : <val3> , <val6> : <val2> , <val5> : <val4> }	<name4> = { <val1> : <val3> , <val6> : <val2> , <val5> : <val4> }
<name1> の先頭を取り出した値、 <name1> の先頭を取り出した値を <name2> 、 <name6> とする	<name2> , <name6> = <name1> . pop ( ) , <name1> . pop ( )	<name2> , <name6> = <name1> . pop ( ) , <name1> . pop ( )
\ 0 から <name4> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の両端から <val3> を取り除いた文字列の列を <name1> とする\	\ <name1> = [ input ( ) . strip ( <val3> ) for <name6> in range ( <name4> ) ] \	\ <name1> = [ input ( ) . strip ( <val3> ) for <name6> in range ( <name4> ) ] \
<name3> を <name1> で割った商を <name2> とする	<name2> = <name3> // <name1>	( <name2> = <name3> // <name1> )
( <val1> ) からなる列の <name3> の <name4> 回分の列を <name5> とする	<name5> = [ <val1> ] * <name3> . <name4>	<name5> = [ <val1> ] * <name3> . <name4>
<val4> を <name1> の <name6> から <val5> を引いた値番目の <name2> から <val5> を引いた値番目にする	<name1> [ <name6> - <val5> ] [ <name2> - <val5> ] = <val4>	not <name1> [ <name6> - <val5> ] [ <name2> - <val5> ] = <val4>
<val1> の <val2> 乗に <val6> を加えた値を <name3> とする	<name3> = <val1> ** <val2> + <val6>	<name3> = <val1> ** <val2> + <val6>
<name2> を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name2>	<name3> , <name1> = <name2>
<name1> が <name4> の <name2> 番目より小さいとき、	if <name1> < <name4> [ <name2> ] :	if <name1> < <name4> [ <name2> ] :
( ( <val4> ) からなる列の <val4> から <name5> 未満までの数列の各要素を <name3> とし、 <name5> の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val4> ] * [ <name5> for <name3> in range ( <name5> ) ] ]	<name2> = [ [ <val4> ] * [ <name5> for <name3> in range ( <name5> ) ] ]
<name1> を <val2> で割った商を <name5> とする	<name5> = <name1> // <val2>	( <name5> = <name1> // <val2> )
\ <name3> ( <val1> . <name4> ( <name2> ( <name6> , <name5> ) ) ) \	\ <name3> ( <val1> . <name4> ( <name2> ( <name6> , <name5> ) ) ) \	for <name3> in <name3> ( <val1> . <name4> ( <name2> ( <name6> , <name5> ) ) ) \
<name2> の末尾に <name4> から <name5> を引いた値の絶対値を追加する	<name2> . append ( abs ( <name4> - <name5> ) )	<name2> . append ( abs ( <name4> - <name5> ) )
<name5> を <name1> の <val4> 番目にする	<name1> [ <val4> ] = <name5>	( <name1> [ <val4> ] = <name5> )
<name2> の <name1> の <name3> の先頭番目の末尾に ( <name3> の <val4> 番目、 <name3> の <val5> 番目 ) の組を追加する	<name2> . <name1> [ <name3> [ 0 ] ] . append ( ( <name3> [ <val4> ] , <name3> [ <val5> ] ) )	<name2> . <name1> [ <name3> [ 0 ] ] . append ( ( <name3> [ <val4> ] , <name3> [ <val5> ] ) )
<name4> 内の <name2> の <val1> 番目の整数値と等しい要素を取り除く	<name4> . remove ( int ( <name2> [ <val1> ] ) )	<name4> . remove ( int ( <name2> [ <val1> ] ) )
0 から <name6> 未満までの数列の各要素を <name2> とし、 <name3> の <name2> 番目でないときの ( <name4> の <name2> 番目、 <name2> ) の組の列の最小値を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = min ( [ ( <name4> [ <name2> ] , <name2> ) for <name2> in range ( <name6> ) if not <name3> [ <name2> ] ] )	<name1> , <name5> = min ( [ ( <name4> [ <name2> ] , <name2> ) for <name2> in range ( <name6> ) if not <name3> [ <name2> ] ] )
<name4> の末尾に <name5> の <name2> から <val6> を引いた値番目を追加する	<name4> . append ( <name5> [ <name2> - <val6> ] )	<name2> . append ( <name5> [ <name2> - <val6> ] )
<name2> の <name1> を <val3> で割った余り番目を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name2> [ <name1> % <val3> ]	<name3> , <name5> = <name2> [ <name1> % <val3> ]
<val5> が <name1> 以下かどうかが <name3> より小さくないとき、	if not <val5> <= <name1> < <name3> :	while not <val5> <= <name1> < <name3> :
<name5> ( <name6> , ( <name1> + <name4> , <name3> , <name2> ) )	<name5> ( <name6> , ( <name1> + <name4> , <name3> , <name2> ) )	<name5> ( <name6> , ( <name1> + <name4> , <name3> , <name2> ) )
<name5> の長さが <name3> 以上のとき、 <blk> 繰り返しを中断する </blk>	if len ( <name5> ) >= <name3> : <blk> break </blk>	while len ( <name5> ) >= <name3> : <blk> break </blk>
<name3> が <name4> に含まれるとき、 <blk> <name5> を <name4> の <name3> 番目だけ増加させる </blk>	if <name3> in <name4> : <blk> <name5> += <name4> [ <name3> ] </blk>	for <name3> in <name3> in <name4> : <blk> <name5> += <name4> [ <name3> ] </blk>
<name4> 、 <name5> の最小値を出力する	print ( <name4> , min ( <name5> ) )	print ( min ( <name4> , <name5> ) )
偽を <name2> の <name4> 番目にする	<name2> [ <name4> ] = False	( <name2> [ <name4> ] = False )
<name6> に <name5> を加えた値に <name1> を加えた値に <name4> を加えた値を <val3> で割った余りを出力する	print ( ( <name6> + <name5> + <name1> + <name4> ) % <val3> )	print ( ( <name6> + <name5> + <name1> + <name4> ) % <val3> )
入力された文字列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = input ( )	<name2> , <name1> = input ( )
<name2> を <val6> だけ左シフトする	<name2> << = <val6>	( <name2> << = <val6> )
<name1> の <val3> 番目を <name1> の <val4> 番目にする	<name1> [ <val4> ] = <name1> [ <val3> ]	<name1> [ <val4> ] = <name1> [ <val3> ]
<name1> の浮動小数点数を <name1> とする	<name1> = float ( <name1> )	( <name1> = float ( <name1> ) )
<name5> の <name3> 番目、 <name5> の <name2> 番目の最小値を <name5> の <name3> 番目にする	<name5> [ <name3> ] = min ( <name5> [ <name3> ] , <name5> [ <name2> ] )	) <name5> [ <name3> ] = min ( <name5> [ <name3> ] , <name5> [ <name2> ] )
<name1> に <name2> に <name5> を掛けた値を加えた値を <name6> とする	<name6> = <name1> + <name2> * <name5>	<name6> = <name1> + <name2> * <name5>
<name5> に <name6> を加えた値を <name1> の <name3> に <val4> を加えた値番目にする	<name1> [ <name3> + <val4> ] = <name5> + <name6>	<name1> [ <name3> + <val4> ] = <name5> + <name6>
<name2> の末尾に ( <name1> 、 <name5> ) の組を追加する	<name2> . append ( ( <name1> , <name5> ) )	<name2> . append ( ( <name1> , <name5> ) )
<name2> を <val4> だけ右シフトする <name6> を <val4> だけ右シフトする	<name2> >> = <val4> <name6> >> = <val4>	input = <name2> >> = <val4> <name6> >> = <val4>
<name3> が <name1> の <name4> の <val5> 番目と等しいとき、	if <name3> == <name1> . <name4> [ <val5> ] :	for <name3> == <name1> . <name4> [ <val5> ] :
<name1> ( ) を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name1> ( )	<name3> , <name2> = <name1> ( )
<name1> の <val4> 番目の整数値を <name5> とする	<name5> = int ( <name1> [ <val4> ] )	else = int ( <name1> [ <val4> ] )
<name6> の <name2> に <name5> の <name2> を掛けた値に <name6> の <name4> に <name5> の <name4> を掛けた値を加えた値を返す	return <name6> . <name2> * <name5> . <name2> + <name6> . <name4> * <name5> . <name4>	x return <name6> . <name2> * <name5> . <name2> + <name6> . <name4> * <name5> . <name4>
<name3> の <name6> を <val5> だけ増加させる	<name3> . <name6> += <val5>	( <name3> . <name6> += <val5> )
-1 を <name5> とする	<name5> = - 1	( <name5> = - 1 )
<name4> の <val6> 番目を <name2> とする	<name2> = <name4> [ <val6> ]	<name2> = <name4> [ <val6> ]
<name6> が <name4> より大きいとき、 <blk> <val1> に <name2> の <name6> 番目の長さを掛けた値を <name2> の <name6> 番目にする </blk>	if <name6> > <name4> : <blk> <name2> [ <name6> ] = <val1> * len ( <name2> [ <name6> ] ) </blk>	\ <name2> [ <name6> ] = <name6> > <name4> : <blk> <name2> [ <name6> ] = <val1> * len ( <name2> [ <name6> ] ) </blk>
<name4> を <name5> ( <name3> , <name2> , <name1> ) だけ増加させる	<name4> += <name5> ( <name3> , <name2> , <name1> )	<name2> += <name4> += <name5> ( <name3> , <name2> , <name1> )
<name3> の長さが <val4> より大きくまたは <name5> の長さが <val4> より大きいとき、	if len ( <name3> ) > <val4> or len ( <name5> ) > <val4> :	continue len ( <name3> ) > <val4> or len ( <name5> ) > <val4> :
<name6> を <val3> だけ左シフトする	<name6> << = <val3>	( <name6> << = <val3> )
( <name1> の <name5> 番目の組 ) の集合を <name6> とする	<name6> = { tuple ( <name1> [ <name5> ] ) }	} <name6> = { ( <name1> [ <name5> ] ) }
<name6> ( <name2> , <name1> , <name1> ) を <name3> とする	<name3> = <name6> ( <name2> , <name1> , <name1> )	else = <name6> ( <name2> , <name1> , <name1> )
<name4> を展開し、それぞれ <name6> 、 <name3> とする <name1> を展開し、それぞれ <name5> 、 <name2> とする	<name6> , <name3> = <name4> <name5> , <name2> = <name1>	<name1> , <name3> = <name4> <name5> , <name2> = <name1>
<name1> を <name3> の <name6> 番目だけ減少させる	<name1> -= <name3> [ <name6> ]	<name2> -= <name1> -= <name3> [ <name6> ]
0 から <val5> を <name6> だけ左シフトした値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> << <name6> ) :	) : in range ( <val5> << <name6> ) :
( <val3> 、 <val2> 、 <val4> 、 <val6> 、 <val5> 、 <val1> 、 <val3> 、 <val2> 、 <val4> 、 <val6> 、 <val5> 、 <val1> ) からなる列を <name1> とする	<name1> = [ <val3> , <val2> , <val4> , <val6> , <val5> , <val1> , <val3> , <val2> , <val4> , <val6> , <val5> , <val1> ]	<name1> = [ <val3> , <val2> , <val4> , <val6> , <val5> , <val1> , <val3> , <val2> , <val4> , <val6> , <val5> , <val1> ]
<name1> の <name5> を <name2> とする	<name2> = <name1> . <name5>	input = <name1> . <name5>
未定値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = None	( <name5> [ <name1> ] = None )
<name2> の総和を <name3> とする	<name3> = sum ( <name2> )	<name3> = sum ( <name2> )
<val6> 、 <val6> を <name3> 、 <name2> とする	<name3> , <name2> = <val6> , <val6>	<name1> , <name2> = <val6> , <val6>
<name4> の <name2> に <val5> を掛けた値番目を <name1> とする	<name1> = <name4> [ <name2> * <val5> ]	<name1> = <name4> [ <name2> * <val5> ]
0 から <name4> の <val3> 番目未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> [ <val3> ] ) :	for <name1> in range ( <name4> [ <val3> ] ) :
<name3> を順に <name2> 、 <name6> 、 <name4> として、繰り返す	for <name2> , <name6> , <name4> in <name3> :	for <name2> , <name6> , <name4> in <name3> :
文字列 <name6> を評価した値を出力する	print ( eval ( <name6> ) )	print ( eval ( <name6> ) )
<name4> ( <name3> , <name6> , <name2> )	<name4> ( <name3> , <name6> , <name2> )	( <name4> ( <name3> , <name6> , <name2> ) )
( ( <val1> 、 <name4> ) の組 ) からなる列を <name2> とする	<name2> = [ ( <val1> , <name4> ) ]	<name2> = [ ( <val1> , <name4> ) ]
<name5> のとき、 <blk> <name2> . <name5> ( <name6> ) </blk>	if <name5> : <blk> <name2> . <name5> ( <name6> ) </blk>	: if <name5> : <blk> <name2> . <name5> ( <name6> ) </blk>
<name5> の <val2> 番目、 <name5> の <val6> 番目を <name1> 、 <name4> とする	<name1> , <name4> = <name5> [ <val2> ] , <name5> [ <val6> ]	<name1> , <name4> = <name5> [ <val2> ] , <name5> [ <val6> ]
<name3> が <name5> ( <name6> ) に含まれるかどうか	<name3> in <name5> ( <name6> )	( <name3> in <name5> ( <name6> ) )
<name6> の <name3> に <val5> を加えた値番目を <name1> の <name6> の <name3> 番目番目の <name2> にする	<name1> [ <name6> [ <name3> ] ] . <name2> = <name6> [ <name3> + <val5> ]	not <name1> [ <name6> [ <name3> ] ] . <name2> = <name6> [ <name3> + <val5> ]
<name4> の <name3> 番目を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name4> [ <name3> ]	<name2> , <name5> , <name1> = <name4> [ <name3> ]
<name1> の <name6> の x 座標から <name1> の <name2> の x 座標を引いた値に <name3> の <name6> の y 座標から <name1> の <name6> の y 座標を引いた値を掛けた値に <name1> の <name6> の y 座標から <name1> の <name2> の y 座標を引いた値に <name1> の <name6> の x 座標から <name3> の <name6> の x 座標を引いた値を掛けた値を加えた値を <name4> とする	<name4> = ( <name1> . <name6> . x - <name1> . <name2> . x ) * ( <name3> . <name6> . y - <name1> . <name6> . y ) + ( <name1> . <name6> . y - <name1> . <name2> . y ) * ( <name1> . <name6> . x - <name3> . <name6> . x )	<name4> = ( <name1> . <name6> . x - <name1> . <name2> . x ) * ( <name3> . <name6> . x - <name1> . <name6> . x ) + ( <name1> . <name6> . x - <name1> . <name6> . x ) * ( <name3> . <name6> . x )
<name6> ( <name5> ) を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name6> ( <name5> )	<name2> , <name4> = <name6> ( <name5> )
<name5> の <name3> 番目の末尾に <name6> を追加する	<name5> [ <name3> ] . append ( <name6> )	<name3> [ <name3> ] . append ( <name6> )
<name5> の末尾に ( <name3> の <val6> 番目 ) からなる列を追加する	<name5> . append ( [ <name3> [ <val6> ] ] )	<name3> . append ( [ <name3> [ <val6> ] ] )
<name6> を <val3> で割った余りに <val1> を加えた値を出力する	print ( <name6> % <val3> + <val1> )	print ( <name6> % <val3> + <val1> )
<name3> が <name2> と等しいかどうかが <val4> と等しいとき、	if <name3> == <name2> == <val4> :	if <name3> == <name2> == <val4> :
<name4> の <name3> から読み込んだ行の列を <name6> とする	<name6> = <name4> . <name3> . readlines ( )	<name6> = <name4> . <name3> . readlines ( )
<name1> の <name6> の <val3> 番目から <name6> の <val2> 番目までの部分列の最小値を出力する	print ( min ( <name1> [ <name6> [ <val3> ] : <name6> [ <val2> ] ] ) )	range ( min ( <name1> [ <name6> [ <val3> ] : <name6> [ <val2> ] ] ) )
<name3> が <val1> と等しいとき、 <blk> <name6> . <name5> ( ) </blk>	if <name3> == <val1> : <blk> <name6> . <name5> ( ) </blk>	for <name3> == <val1> : <blk> <name6> . <name5> ( ) </blk>
<val2> から <name4> 未満までの数列の各要素を <name1> とし、 <val2> の列を <name3> とする	<name3> = [ <val2> for <name1> in range ( <name4> ) ]	<name1> = [ <val2> for <name1> in range ( <name4> ) ]
( <name3> 、 <name2> に対応する値、もし存在しなければ <val4> 、 <val5> 、 <name2> に対応する値、もし存在しなければ <val1> 、 <val5> 、 <name2> に対応する値、もし存在しなければ <val6> 、 <val5> ) からなる列を <name6> とする	<name6> = [ <name3> , <name2> . get ( <val4> , <val5> ) , <name2> . get ( <val1> , <val5> ) , <name2> . get ( <val6> , <val5> ) ]	<name6> = [ <name3> , <name2> . get ( <val4> , <val5> ) , <name2> . get ( <val1> , <val5> ) , <name2> . get ( <val6> , <val5> ) , <val6> , <val5> ]
<name2> の <name3> 番目の <name4> 番目の間、次を繰り返す	while <name2> [ <name3> ] [ <name4> ] :	del <name2> [ <name3> ] [ <name4> ] :
<name6> を <name2> の ( <name5> 、 <name1> ) の組番目にする	<name2> [ ( <name5> , <name1> ) ] = <name6>	<name2> [ ( <name5> , <name1> ) ] = <name6>
<name6> を <name2> の <name4> 番目に <name2> の <name5> 番目を加えた値だけ増加させる	<name6> += <name2> [ <name4> ] + <name2> [ <name5> ]	<name1> += <name2> [ <name4> ] + <name2> [ <name5> ]
( <name3> 、 <name6> ) の組を <name2> の <name4> の <name5> 番目にする	<name2> . <name4> [ <name5> ] = ( <name3> , <name6> )	dict . <name4> [ <name5> ] = ( <name3> , <name6> )
<name4> の <name1> の x 座標から <name4> の <name5> の x 座標を引いた値と <name4> の <name1> の y 座標から <name4> の <name5> の y 座標を引いた値のノルムを <name3> とする	<name3> = hypot ( <name4> . <name1> . x - <name4> . <name5> . x , <name4> . <name1> . y - <name4> . <name5> . y )	else = hypot ( <name4> . <name1> . x - <name4> . <name5> . x , <name4> . <name1> . <name5> . y )
<name4> ( ) の総和を出力する	print ( sum ( <name4> ( ) ) )	print ( sum ( <name4> ( ) ) )
<name6> が <name2> と等しいかどうかが <val3> と等しいとき、	if <name6> == <name2> == <val3> :	list == <name6> == <name2> == <val3> :
<name2> ( <name5> , <name3> , <name6> , <name4> ) を <name1> とする	<name1> = <name2> ( <name5> , <name3> , <name6> , <name4> )	<name1> = <name2> ( <name5> , <name3> , <name6> , <name4> )
<name3> モジュールを用いる	from <name3> import heappop , heappush , heapify	from <name3> import combinations
<name3> の <name6> に <name4> の <name1> を掛けた値から <name3> の <name1> に <name4> の <name6> を掛けた値を引いた値を返す	return <name3> . <name6> * <name4> . <name1> - <name3> . <name1> * <name4> . <name6>	x return <name3> . <name6> * <name4> . <name1> - <name3> . <name1> * <name4> . <name6>
<name3> の <name6> から、つまり現在の日時を引いた値番目に <name1> の <name6> 番目を加えた値を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name3> [ <name6> - now ] + <name1> [ <name6> ]	<name1> [ <name6> ] = <name3> [ <name6> - now ] + <name1> [ <name6> ]
<val6> の <val4> 乗を <name2> とする	<name2> = <val6> ** <val4>	( <name2> = <val6> ** <val4> )
<name3> の末尾の <val1> 番目が <name3> の -2 番目の <val1> 番目に <name4> を加えた値より大きいとき、	if <name3> [ - <val1> ] [ <val1> ] > <name3> [ - 2 ] [ <val1> ] + <name4> :	if <name3> [ - <val1> ] [ <val1> ] > <name3> [ - 2 ] [ <val1> ] + <name4> :
<name4> の <name5> に対応する値、もし存在しなければ <val2> を <name3> とする	<name3> = <name4> . <name5> . get ( <val2> )	<name3> = <name4> . <name5> . get ( <val2> )
0 から <name2> に <val1> を加えた値未満までの数列の各要素を <name5> とし、 0 から <name6> に <val1> を加えた値未満までの数列の各要素を <name3> とし、 <name2> の <name4> の列の列を <name5> とする	<name5> = [ [ <name2> . <name4> for <name3> in range ( <name6> + <val1> ) ] for <name5> in range ( <name2> + <val1> ) ]	<name1> = [ [ <name2> . <name4> for <name3> in range ( <name6> + <val1> ) ] for <name5> in range ( <name2> + <val1> ) ]
<val2> を <name4> とする <val3> を <name1> とする	<name4> = <val2> <name1> = <val3>	<name1> = <name4> = <val2> <name1> = <val3>
<name3> が <name5> より小さい間、次を繰り返す	while <name3> < <name5> :	while <name3> < <name5> :
<name2> の長さを <name1> とする <name4> の長さを <name6> とする	<name1> = len ( <name2> ) <name6> = len ( <name4> )	<name1> = len ( <name2> ) <name6> = len ( <name4> )
<name5> の <val2> 番目を <name1> の <name6> にする	<name1> . <name6> = <name5> [ <val2> ]	not <name1> . <name6> = <name5> [ <val2> ]
<name3> の末尾に ( <name6> を <val2> で割った商に <name1> を加えた値、 <name4> ) の組を追加する	<name3> . append ( ( <name6> // <val2> + <name1> , <name4> ) )	<name3> . append ( ( <name6> // <val2> + <name1> , <name4> ) )
<val2> を <name6> ( ) の <name3> とする	<name6> ( ) . <name3> = <val2>	else . <name6> ( ) . <name3> = <val2>
<name6> の <name1> が <name2> の <name1> より大きいとき ( <name6> の <name1> 、 <name2> の <name1> ) の組、そうでなければ ( <name2> の <name1> 、 <name6> の <name1> ) の組を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = ( <name6> . <name1> , <name2> . <name1> ) if <name6> . <name1> > <name2> . <name1> else ( <name2> . <name1> , <name6> . <name1> )	<name2> , <name5> , <name3> = ( <name6> . <name1> , <name2> . <name1> ) if <name6> . <name1> > <name2> . <name1> else ( <name2> . <name1> , <name6> . <name1> )
<name2> を <name3> の <name6> の <name5> にする	<name3> . <name6> . <name5> = <name2>	( <name3> . <name6> . <name5> = <name2> )
<name5> の <val3> 番目に <name5> の <val4> 番目を加えた値に <name5> の <val6> 番目を加えた値を <val1> で割った商を <name2> とする	<name2> = ( <name5> [ <val3> ] + <name5> [ <val4> ] + <name5> [ <val6> ] ) // <val1>	<name2> = ( <name5> [ <val3> ] + <name5> [ <val4> ] + <name5> [ <val6> ] ) // <val1>
<name6> の <name5> に <name6> の <name2> を加えた値を <name6> の <name1> にする	<name6> . <name1> = <name6> . <name5> + <name6> . <name2>	<name2> . <name1> = <name6> . <name5> + <name6> . <name2>
整数をキーとして <name5> をソートした列の、つまり先頭から <val3> 番目までの部分列を <name5> とする	<name5> = sorted ( <name5> , key = int ) [ : <val3> ]	<name4> = sorted ( sorted ( <name5> ) , key = str ) [ : <val3> ]
<name2> が <name1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name2> == <name1> : <blk> break </blk>	list ( <name2> == <name1> ) : <blk> break </blk>
<name5> の <name1> と <name4> の論理和番目、 <name5> の <name1> 番目に <name2> を加えた値の最大値を <name5> の <name1> と <name4> の論理和番目にする	<name5> [ <name1> | <name4> ] = max ( <name5> [ <name1> | <name4> ] , <name5> [ <name1> ] + <name2> )	<name2> [ <name1> | <name4> ] = max ( <name5> [ <name1> | <name4> ] , <name5> [ <name1> ] + <name2> )
<name6> に番号付した組の列の各要素を <name3> 、 <name5> とし、 <name5> のときの <name3> の列を <name1> とする	<name1> = [ <name3> for <name3> , <name5> in enumerate ( <name6> ) if <name5> ]	<name1> = [ <name3> for <name3> , <name5> in enumerate ( <name6> ) if <name5> ]
<name5> の <name2> から <val3> を引いた値番目、 <name5> の <name2> 番目を <name5> の <name2> 番目、 <name5> の <name2> から <val3> を引いた値番目とする	<name5> [ <name2> ] , <name5> [ <name2> - <val3> ] = <name5> [ <name2> - <val3> ] , <name5> [ <name2> ]	<name5> [ <name2> ] , <name5> [ <name2> - <val3> ] = <name5> [ <name2> - <val3> ] , <name5> [ <name2> ]
<name6> が <name5> の <name4> 番目より小さいとき、	if <name6> < <name5> [ <name4> ] :	while <name6> < <name5> [ <name4> ] :
<name4> の <name6> に <val2> を加えた値番目から <name4> の <name6> 番目を引いた値を <name5> とする	<name5> = <name4> [ <name6> + <val2> ] - <name4> [ <name6> ]	<name5> = <name4> [ <name6> + <val2> ] - <name4> [ <name6> ]
 を代わりの行末として <name1> の - <name3> に <val4> を加えた値番目を出力する	print ( <name1> [ - ( <name3> + <val4> ) ] , end = ' ' )	print ( <name1> [ - <name3> + <val4> ] , end = ' ' )
<val1> から <name2> 未満までの数列の各要素を <name5> とし、 <val1> の列を <name4> とする	<name4> = [ <val1> for <name5> in range ( <name2> ) ]	<name4> = [ <val1> for <name5> in range ( <name2> ) ]
<name5> が <val3> と等しくまたは <name2> が <val3> と等しくまたは <name4> が <val3> と等しくまたは <name5> に <name2> を加えた値が <val1> 以上または <name5> に <name2> を加えた値に <name4> を加えた値が <val6> 以上のとき、	if <name5> == <val3> or <name2> == <val3> or <name4> == <val3> or <name5> + <name2> >= <val1> or <name5> + <name2> + <name4> >= <val6> :	or ( <name5> == <val3> or <name2> == <val3> or <name4> == <val3> or <name5> + <name2> >= <val1> or <name5> + <name2> + <name4> >= <val6> ) :
<val4> から <name5> 未満までの数列の各要素を <name3> とし、 <val4> から <name1> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <val4> の列の列を <name5> とする	<name5> = [ [ <val4> for <name2> in range ( <name1> + <val6> ) ] for <name3> in range ( <name5> ) ]	<name2> = [ [ <val4> for <name2> in range ( <name1> + <val6> ) ] for <name3> in range ( <name5> ) ]
<name4> の <name6> 番目が <name4> の <name5> 番目と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name4> [ <name6> ] == <name4> [ <name5> ] : <blk> break </blk>	if <name4> [ <name6> ] == <name4> [ <name5> ] : <blk> break </blk>
<name1> に <name2> から <name3> を引いた値に <val5> を加えた値を掛けた値に <name3> の <name4> から <val6> を引いた値乗に対する <name4> の剰余を掛けた値を <name4> で割った余りを <name1> とする	<name1> = <name1> * ( <name2> - <name3> + <val5> ) * pow ( <name3> , <name4> - <val6> , <name4> ) % <name4>	<name1> = <name1> * ( ( <name2> - <name3> + <val5> ) * pow ( <name3> , <name4> - <val6> , <name4> ) ) % <name4>
<name6> に <val4> の . <val1> 乗を掛けた値を <name2> とする	<name2> = <name6> * <val4> ** . <val1>	( <name2> = <name6> * <val4> ** . <val1> )
<name6> が <val2> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> == <val2> : <blk> break </blk>	list ( <name6> == <val2> ) : <blk> break </blk>
<name4> の <name3> 番目を <name2> の <name5> 番目にする	<name2> [ <name5> ] = <name4> [ <name3> ]	<name2> [ <name5> ] = <name4> [ <name3> ]
<name6> が <name5> のキーの集まりに含まれないとき、	if <name6> not in <name5> . keys :	or <name6> not in <name5> . keys ( ) :
<name3> の <name2> の <name5> 番目から <name3> の <name4> の <name5> 番目の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> . <name2> [ <name5> ] , len ( <name3> . <name4> [ <name5> ] ) ) :	. for <name1> in range ( <name3> . <name2> [ <name5> ] , len ( <name3> . <name4> [ <name5> ] ) ) :
<name5> の <name4> の <name3> から読み込んだ一行を入力された文字列とする	input = <name5> . <name4> . <name3> . readline	now = <name5> . <name4> . <name3> . readline ( )
<name3> の <name2> 番目を <name6> に <name4> を加えた値だけ増加させる	<name3> [ <name2> ] += <name6> + <name4>	<name3> [ <name2> ] += <name6> + <name4>
<name4> に <val5> を加えた値、 <name1> の最大値を <name1> とする	<name1> = max ( <name4> + <val5> , <name1> )	<name1> = max ( <name4> + <val5> , <name1> )
偽を <name6> の <val2> 番目にする	<name6> [ <val2> ] = False	( <name6> [ <val2> ] = False )
現在の日時の <name6> を現在の日時とする	now = now . <name6>	2 . now = now . <name6>
<name4> の <name4> の最大値と等しい要素の最初の位置を <name6> とする	<name6> = <name4> . index ( max ( <name4> ) )	<name6> = <name4> . index ( max ( <name4> ) )
0 から <name6> の <name5> 未満までの数列の各要素を <name4> とし、 <name3> ( ) の列を <name1> とする	<name1> = [ <name3> ( ) for <name4> in range ( <name6> . <name5> ) ]	<name1> = [ <name3> ( ) for <name4> in range ( <name6> . <name5> ) ]
<name1> ( <name4> , <name3> [ <name5> ] , <name3> [ <name2> ] ) のとき、	if <name1> ( <name4> , <name3> [ <name5> ] , <name3> [ <name2> ] ) :	for <name1> in <name1> ( <name4> , <name3> [ <name5> ] , <name3> [ <name2> ] ) :
<name4> に <val6> を加えた値を返す	return <name4> + <val6>	self return <name4> + <val6>
<name4> を展開し、それぞれ <name1> 、 <name2> 、 <name6> とする	<name1> , <name2> , <name6> = <name4>	( <name1> , <name2> , <name6> = <name4> )
<name2> に <name5> の <name6> 番目を加えた値を <name2> とする	<name2> = <name2> + <name5> [ <name6> ]	else = <name2> + <name5> [ <name6> ]
<name2> . <name4> ( <val3> , <name6> -1 ) を出力する	print ( <name2> . <name4> ( <val3> , <name6> - 1 ) )	print ( <name2> . <name4> ( <val3> , <name6> - 1 ) )
<name5> の末尾に ( <name4> の <val6> に <name3> を掛けた値に <val2> を加えた値番目、 <name4> の <val6> に <name3> を掛けた値に <val6> を加えた値番目 ) からなる列を追加する	<name5> . append ( [ <name4> [ <val6> * <name3> + <val2> ] , <name4> [ <val6> * <name3> + <val6> ] ] )	<name1> . append ( [ <name4> [ <val6> * <name3> + <val2> ] , <name4> [ <val6> * <name3> + <val6> ] ] )
<name2> . <name4> ( ) を <name6> とする	<name6> = <name2> . <name4> ( )	<name6> = <name2> . <name4> ( )
入力された文字列を空白で分割した字句列の各要素を <name1> とし、 <name1> の浮動小数点数の列を展開し、それぞれ <name3> 、 <name4> 、 <name2> とする	<name3> , <name4> , <name2> = [ float ( <name1> ) for <name1> in input ( ) . split ( ) ]	<name3> , <name4> , <name2> = [ float ( <name1> ) for <name1> in input ( ) . split ( ) ]
<name4> ( <val5> , <name1> -1 ) を出力する	print ( <name4> ( <val5> , <name1> - 1 ) )	print ( <name4> ( <val5> , <name1> - 1 ) )
<name4> から <name6> を引いた値の絶対値を <name5> とする	<name5> = abs ( <name4> - <name6> )	( <name5> = abs ( <name4> - <name6> ) )
0 から <val6> 未満までの数列の各要素を <name1> とし、 <name1> の列の辞書カウンタを <name2> とする	<name2> = Counter ( [ <name1> for <name1> in range ( <val6> ) ] )	<name2> = Counter ( [ <name1> for <name1> in range ( <val6> ) ] )
<name6> を <name4> 分の一にする	<name6> // = <name4>	( <name6> // = <name4> )
<name2> の末尾に <name3> の両端から空白改行を取り除いた文字列を <val6> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を追加する	<name2> . append ( [ int ( <name1> ) for <name1> in <name3> . strip ( ) . split ( <val6> ) ] )	<name1> . append ( [ int ( <name1> ) for <name1> in <name3> . strip ( ) . split ( <val6> ) ] )
<name5> の <name1> 番目を <name5> の <name6> 番目だけ増加させる	<name5> [ <name1> ] += <name5> [ <name6> ]	<name1> [ <name1> ] += <name5> [ <name6> ]
<name4> が <name6> から <val3> を引いた値より小さくかつ <name2> の <name1> に <name5> を加えた値番目が <val4> と等しくないとき、	if <name4> < ( <name6> - <val3> ) and <name2> [ <name1> + <name5> ] != <val4> :	raise <name4> < ( <name6> - <val3> ) and <name2> [ <name1> + <name5> ] != <val4> :
<val4> から <name3> 未満までの数列の各要素を <name2> とし、 <val4> の列を <name1> とする	<name1> = [ <val4> for <name2> in range ( <name3> ) ]	<name1> = [ <val4> for <name2> in range ( <name3> ) ]
<name4> ( <name2> * <val6> + <val6> , <name3> + <val1> , <name5> , <name4> )	<name4> ( <name2> * <val6> + <val6> , <name3> + <val1> , <name5> , <name4> )	<name3> <name4> ( <name2> * <val6> + <val6> , <name3> + <val1> , <name5> , <name4> )
<name1> の <val6> 番目を <name1> の <val2> 番目の <val2> 乗で割った値を <name4> とする	<name4> = <name1> [ <val6> ] / ( <name1> [ <val2> ] ** <val2> )	<name4> = <name1> [ <val6> ] / ( <name1> [ <val2> ] ** <val2> )
<name2> が <name5> 以下のとき、	if ( <name2> <= <name5> ) :	list <= <name5> :
<name5> の <name6> から <val1> を引いた値番目の <name2> から <val1> を引いた値番目に <val1> を加えた値を <name5> の <name6> 番目の <name2> 番目にする	<name5> [ <name6> ] [ <name2> ] = <name5> [ <name6> - <val1> ] [ <name2> - <val1> ] + <val1>	[ <name5> [ <name6> ] [ <name2> ] = <name5> [ <name6> - <val1> ] [ <name2> - <val1> ] + <val1>
<val5> を書式として <name3> で整形した文字列を出力する	print ( <val5> . format ( <name3> ) )	print ( <val5> . format ( <name3> ) )
<name2> の先頭のとき、	if <name2> [ 0 ] :	[ 0 ] if <name2> [ 0 ] :
<name1> が <val4> と等しくかつ <name2> が <val6> 以上のとき、	if <name1> == <val4> and <name2> >= <val6> :	gcd ( <name1> == <val4> and <name2> >= <val6> ) :
<name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の総和、 <name1> ( ) を空白で分割した字句列の各要素に整数を適用した列の総和の最大値を出力する	print ( max ( sum ( map ( int , <name1> ( ) . split ( ) ) ) , sum ( map ( int , <name1> ( ) . split ( ) ) ) ) )	[ print ( max ( map ( int , <name1> ( ) . split ( ) ) ) , sum ( map ( int , <name1> ( ) . split ( ) ) ) )
( -1 、 <val1> 、 <val2> 、 -2 、 -2 、 -2 、 <val4> 、 <val4> 、 <val4> 、 -1 、 <val1> 、 <val2> ) からなる列を <name3> とする	<name3> = [ - <val2> , <val1> , <val2> , - <val4> , - <val4> , - <val4> , <val4> , <val4> , <val4> , - <val2> , <val1> , <val2> ]	<name3> = [ - <val4> , <val1> , <val2> , - <val2> , - <val2> , - <val2> , - <val4> , <val4> , - <val2> , <val1> , <val2> ]
<name2> の <name3> の <name4> に <val5> を加えた値番目の <name6> に <val5> を加えた値番目を <name2> の <name1> で割った余りにする	<name2> . <name3> [ <name4> + <val5> ] [ <name6> + <val5> ] % = <name2> . <name1>	pow ( <name2> . <name3> [ <name4> + <val5> ] [ <name6> + <val5> ] % = <name2> . <name1> )
<name4> が <val3> より小さいとき、 <blk> <val3> を <name4> とする </blk>	if <name4> < <val3> : <blk> <name4> = <val3> </blk>	\ <name4> = <name4> < <val3> : <blk> <name4> = <val3> </blk>
<name6> の <val4> 番目を <name2> の <val1> 番目にする	<name2> [ <val1> ] = <name6> [ <val4> ]	( <name2> [ <val1> ] = <name6> [ <val4> ] )
{ : . 6 f }を書式として <name5> で整形した文字列を出力する	print ( '{:.6f}' . format ( <name5> ) )	print ( '{:.6f}' . format ( <name5> ) )
. <val1> を <name2> とするを <name3> とする	<name3> = <name2> = . <val1>	else = <name2> = <val1>
<name3> が <name4> より大きくまたは <name5> が <name1> より大きいとき、	if <name3> > <name4> or <name5> > <name1> :	if <name3> > <name4> or <name5> > <name1> :
<val3> を <name6> の <name5> の <name2> の <name1> にする	<name6> . <name5> . <name2> . <name1> = <val3>	( <name6> . <name5> . <name2> . <name1> = <val3> )
( ( <val4> ) からなる列の <val4> から <name3> ( <name6> ) に <val5> を加えた値未満までの数列の各要素を <name2> とし、 <name1> に <val5> を加えた値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val4> ] * [ ( <name1> + <val5> ) for <name2> in range ( <name3> ( <name6> ) + <val5> ) ] ]	<name6> = [ [ <val4> ] * [ ( <name1> + <val5> ) for <name2> in range ( <name3> ( <name6> ) + <val5> ) ] ]
<name6> . <name1> ( <val2> ** <val5> )	<name6> . <name1> ( <val2> ** <val5> )	<name5> . <name1> ( <val2> ** <val5> )
( ( <val5> ) からなる列の <val5> から <name2> 未満までの数列の各要素を <name1> とし、 <name2> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val5> ] * [ <name2> for <name1> in range ( <name2> ) ] ]	<name4> = [ [ <val5> ] * [ <name2> for <name1> in range ( <name2> ) ] ]
ソートされた順序を保ったまま <name1> の先頭を <name2> に挿入できる最後の位置を <name5> とする	<name5> = bisect . bisect_right ( <name2> , <name1> [ 0 ] )	else = bisect_right ( <name2> , <name1> [ 0 ] )
<name3> . <name6> ( <name5> . <name2> ( <name3> ) / <name3> . <name4> ( ) ) を返す	return <name3> . <name6> ( <name5> . <name2> ( <name3> ) / <name3> . <name4> ( ) )	return <name3> . <name6> ( <name5> . <name2> ( <name3> ) / <name3> . <name4> ( ) )
<name3> の <name5> 番目に <name1> の <name5> から <name2> を引いた値番目を掛けた値を <name4> で割った余りを <name6> の <name5> 番目の <name2> 番目にする	<name6> [ <name5> ] [ <name2> ] = <name3> [ <name5> ] * <name1> [ <name5> - <name2> ] % <name4>	( <name6> [ <name5> ] [ <name2> ] = <name3> [ <name5> ] * <name1> [ <name5> - <name2> ] % <name4> )
<name2> の <name4> が <name4> より大きいとき、	if <name2> . <name4> > <name4> :	list if <name2> . <name4> > <name4> :
<val1> が <name4> に <name5> の <val2> 番目を加えた値以下かどうかが <name6> 以下のとき、	if <val1> <= <name4> + <name5> [ <val2> ] <= <name6> :	list if <val1> <= <name4> + <name5> [ <val2> ] <= <name6> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name3> 、 <name2> 、 <name1> とする	<name5> , <name3> , <name2> , <name1> = map ( int , input ( ) . split ( ) )	<name3> , <name2> , <name1> = map ( int , input ( ) . split ( ) )
<name5> に <name2> を加えた値を <val4> で割った商を <name1> とする	<name1> = ( <name5> + <name2> ) // <val4>	<name1> = ( <name5> + <name2> ) // <val4>
<val6> を <name5> で割った値に <name1> に <name2> を掛けた値から <name4> に <name3> を掛けた値を引いた値を掛けた値を <name3> とする	<name3> = <val6> / <name5> * ( <name1> * <name2> - <name4> * <name3> )	else = <val6> / <name5> * ( <name1> * <name2> - <name4> * <name3> )
<name2> の <name6> 番目の末尾に ( <name4> 、 <name5> ) の組を追加する	<name2> [ <name6> ] . append ( ( <name4> , <name5> ) )	<name2> [ <name6> ] . append ( ( <name4> , <name5> ) )
<name2> の <name4> を <val1> だけ増加させる	<name2> . <name4> += <val1>	pow ( <name2> . <name4> , <val1> )
<name5> の <val2> 番目、 <name5> の <val6> 番目、 <name5> の <val4> 番目、 <name5> の <val3> 番目を <name6> 、 <name4> 、 <name3> 、 <name1> とする	<name6> , <name4> , <name3> , <name1> = <name5> [ <val2> ] , <name5> [ <val6> ] , <name5> [ <val4> ] , <name5> [ <val3> ]	<name5> , <name4> , <name3> , <name1> = <name5> [ <val2> ] , <name5> [ <val6> ] , <name5> [ <val4> ] , <name5> [ <val3> ]
<name5> の先頭から <name4> の末尾を引いた値を出力する	print ( <name5> [ 0 ] - <name4> [ - 1 ] )	print ( <name5> [ 0 ] - <name4> [ - 1 ] )
<name5> の先頭の整数値、 <name5> の <val3> 番目の整数値、 <name5> の <val2> 番目の整数値を <name4> 、 <name6> 、 <name1> とする	<name4> , <name6> , <name1> = int ( <name5> [ 0 ] ) , int ( <name5> [ <val3> ] ) , int ( <name5> [ <val2> ] )	<name4> , <name6> , <name1> = int ( <name5> [ 0 ] ) , int ( <name5> [ <val3> ] ) , int ( <name5> [ <val2> ] )
<name6> 、 <name4> の <name1> 番目の先頭、 <name4> の <name1> 番目の末尾の最小値を <name6> とする	<name6> = min ( <name6> , <name4> [ <name1> ] [ 0 ] , <name4> [ <name1> ] [ - 1 ] )	else = min ( <name6> , <name4> [ <name1> ] [ 0 ] , <name4> [ <name1> ] [ - 1 ] )
<name1> の最小値、 <name1> の最大値を出力する	print ( min ( <name1> ) , max ( <name1> ) )	print ( min ( <name1> ) , max ( <name1> ) )
0 から <val6> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列の整数値の列を <name3> とする	<name3> = [ int ( input ( ) ) for <name1> in range ( <val6> ) ]	<name3> = [ int ( input ( ) ) for <name1> in range ( <val6> ) ]
<val3> を <name5> の <name4> 番目にする	<name5> [ <name4> ] = <val3>	( <name5> [ <name4> ] = <val3> )
0 から <name6> から <val4> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name6> - <val4> ) :	: for <name1> in range ( <name6> - <val4> ) :
0 から <name1> 未満までの数列の各要素を <name3> とし、 -1 の列を <name2> の <name4> にする	<name2> . <name4> = [ - 1 for <name3> in range ( <name1> ) ]	dict . <name4> = [ - 1 for <name3> in range ( <name1> ) ]
<name4> の <name3> 番目の <name6> 番目が <val5> 以上かつ <name4> の <name3> 番目の <name6> 番目が <val1> 以下のとき、	if <name4> [ <name3> ] [ <name6> ] >= <val5> and <name4> [ <name3> ] [ <name6> ] <= <val1> :	list ( <name4> [ <name3> ] [ <name6> ] >= <val5> and <name4> [ <name3> ] [ <name6> ] <= <val1> :
<name5> を <name3> で割った商を <name1> とする	<name1> = <name5> // <name3>	( <name1> = <name5> // <name3> )
<name5> の <name3> 番目が <name1> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name3> ] < <name1> : <blk> continue </blk>	if <name5> [ <name3> ] < <name1> : <blk> continue </blk>
<name2> の末尾に ( <name3> 、 <name6> 、 <name5> ) の組を追加する	<name2> . append ( ( <name3> , <name6> , <name5> ) )	<name4> . append ( ( <name3> , <name6> , <name5> ) )
<val6> を <name3> の <name2> 番目の総和で割った余りを出力する	print ( <val6> % sum ( <name3> [ <name2> ] ) )	print ( <val6> % sum ( <name3> [ <name2> ] ) )
<name6> の <name2> 番目が <name6> の <name4> 番目と等しいとき <val3> 、そうでなければ <val5> を出力する	print ( <val3> if <name6> [ <name2> ] == <name6> [ <name4> ] else <val5> )	print ( <val3> if <name6> [ <name2> ] == <name6> [ <name4> ] else <val5> )
<val4> を <name3> の <name1> から <val2> を引いた値番目にする	<name3> [ <name1> - <val2> ] = <val4>	<name3> [ <name1> - <val2> ] = <val4>
<val6> の順序数を <name4> とする	<name4> = ord ( <val6> )	<name4> = ord ( <val6> )
<name5> を ( 、つまり文字列 <name4> に <name6> を加えた値に <name2> を加えた値を評価した値の浮動小数点数 ) からなる列だけ増加させる	<name5> += [ float ( eval ( <name4> + <name6> + <name2> ) ) ]	<name5> += [ [ float ( eval ( <name4> + <name6> + <name2> ) ) ] ]
( <val3> 、 ( <name4> の先頭、 <name1> の先頭、 <name6> の先頭 ) の組 ) からなる列を返す	return [ <val3> , ( <name4> [ 0 ] , <name1> [ 0 ] , <name6> [ 0 ] ) ]	assert [ <val3> , [ <name4> [ 0 ] , <name1> [ 0 ] , <name6> [ 0 ] ) ]
<name1> に <name2> を掛けた値が <val4> 以下かつ <name6> に <name5> を掛けた値が <val4> 以下かどうかを返す	return <name1> * <name2> <= <val4> and <name6> * <name5> <= <val4>	x return <name1> * <name2> <= <val4> and <name6> * <name5> <= <val4>
<name2> ( <name4> + <val1> ) に <val5> を加えた値に <name3> + <val1> の文字列を加えた値に <val6> を加えた値に <name4> に <val1> を加えた値に <name3> に <val1> を加えた値を掛けた値の文字列を加えた値を出力する	print ( <name2> ( <name4> + <val1> ) + <val5> + <name2> ( <name3> + <val1> ) + <val6> + <name2> ( ( <name4> + <val1> ) * ( <name3> + <val1> ) ) )	<name4> = <name2> ( <name4> + <val1> ) + <val5> + str ( <name3> + <val1> ) + <val6> + str ( <name4> + <val1> ) * str ( <name3> + <val1> ) )
0 から <val3> 未満までの数列の各要素を <name6> とし、、つまり集合の列を <name1> とする	<name1> = [ set ( ) for <name6> in range ( <val3> ) ]	<name6> = [ set ( ) for <name6> in range ( <val3> ) ]
<name1> を展開し、それぞれ <name4> 、 <name2> とする <name3> を展開し、それぞれ <name6> 、 <name5> とする <name1> を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = <name1> <name6> , <name5> = <name3> <name4> , <name2> = <name1>	<name6> , <name5> = <name1> <name6> , <name2> = <name3> <name4> , <name2> = <name1>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列をソートした列を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = sorted ( map ( int , input ( ) . split ( ) ) )	<name1> , <name4> = sorted ( map ( int , input ( ) . split ( ) ) )
<name2> の <name6> 番目を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name2> [ <name6> ]	<name3> , <name1> = <name2> [ <name6> ]
<name3> が <name4> 以下かどうかが <val6> に <name3> の <val1> 乗を加えた値の <val5> 乗以下のとき、	if <name3> <= <name4> <= pow ( <val6> + <name3> ** <val1> , <val5> ) :	list ( <name3> <= <name4> <= <val6> + <name3> ** <val1> ) ** <val5> :
<name3> を <name4> を <val1> で割った値の <val5> 乗で割った値を <name2> とする	<name2> = <name3> / ( <name4> / <val1> ) ** <val5>	<name2> = <name3> / ( <name4> / <val1> ) ** <val5>
<val4> を <name5> だけ左シフトした値を <name6> とする	<name6> = <val4> << <name5>	count = <val4> << <name5>
<name4> . <name2> ( <name6> , <name1> ) を <name2> とする	<name2> = <name4> . <name2> ( <name6> , <name1> )	<name2> = <name4> . <name2> ( <name6> , <name1> )
<name5> の <name2> 番目が <val6> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name2> ] == <val6> : <blk> continue </blk>	\ if <name5> [ <name2> ] == <val6> : <blk> continue </blk>
0 から <name4> 未満までの数列の各要素を <name2> とし、 <name3> ( ) の列を <name6> とする	<name6> = [ <name3> ( ) for <name2> in range ( <name4> ) ]	<name6> = [ <name3> ( ) for <name2> in range ( <name4> ) ]
<name6> を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name6>	( <name2> , <name4> = <name6> )
<name4> の <name2> から読み込んだ一行の整数値を <name6> とする	<name6> = int ( <name4> . <name2> . readline ( ) )	<name6> = int ( <name4> . <name2> . readline ( ) )
<name1> が <val3> 以上のとき、	if <name1> >= <val3> :	if <name1> >= <val3> :
<val6> を <name1> とする <val4> を <name2> とする	<name1> = <val6> <name2> = <val4>	<name1> = <val6> <name2> = <val4>
<name1> の <name3> 番目を <name4> だけ増加させる	<name1> [ <name3> ] += <name4>	not <name1> [ <name3> ] += <name4>
<name3> が <val4> <name5> <val1> より小さいとき、	if <name3> < <val4> <name5> <val1> :	if <name3> < <val4> <name5> <val1> :
<name6> に <val5> を加えた値から <name1> に <val5> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> + <val5> , <name1> + <val5> ) :	for <name4> in range ( <name6> + <val5> , <name1> + <val5> ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストをソートした列を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )	<name4> , <name1> = sorted ( list ( map ( int , input ( ) . split ( ) ) ) )
<name6> を文字コード <name1> ( <name2> ) から <name1> ( <val3> ) を引いた値に <name4> を加えた値を <val5> で割った余りに <val3> の順序数を加えた値の文字だけ増加させる	<name6> += chr ( ( <name1> ( <name2> ) - <name1> ( <val3> ) + <name4> ) % <val5> + <name1> ( <val3> ) )	<name6> += chr ( ( <name1> ( <name2> ) - ( <name1> ( <val3> ) + <name4> ) ) % <val5> + ord ( <val3> ) )
( <val6> ) からなる列を <name5> とする	<name5> = [ <val6> ]	<name5> = [ <val6> ]
<name1> が <name5> から <val3> を引いた値より小さいとき <name2> 、そうでなければ <name6> を <name4> とする	<name4> = <name2> if <name1> < <name5> - <val3> else <name6>	<name4> = <name2> if <name1> < <name5> - <val3> else <name6>
<name3> . <name1> ( <name5> , <name4> ) を返す	return <name3> . <name1> ( <name5> , <name4> )	yield <name3> . <name1> ( <name5> , <name4> )
<name6> の <name5> が <name4> に含まれなくまたは <name6> の <name2> が <name4> に含まれないとき、	if <name6> . <name5> not in <name4> or <name6> . <name2> not in <name4> :	list ( <name6> . <name5> not in <name4> ) or <name6> . <name2> not in <name4> :
<name3> の <val6> 番目が <name5> の <val6> 番目の整数値と等しいとき、	if <name3> [ <val6> ] == int ( <name5> [ <val6> ] ) :	continue <name3> [ <val6> ] == int ( <name5> [ <val6> ] ) :
<name3> . <name2> ( ) を <name6> とする	<name6> = <name3> . <name2> ( )	<name6> = <name3> . <name2> ( )
<name1> の <name5> 番目を順に <name2> 、 <name6> 、 <name3> として、繰り返す	for <name2> , <name6> , <name3> in <name1> [ <name5> ] :	for <name2> , <name6> , <name3> in <name1> [ <name5> ] :
<name1> が <val3> 以下のとき、 <blk> <name6> を <name1> だけ増加させる </blk>	if <name1> <= <val3> : <blk> <name6> += <name1> </blk>	: if <name1> <= <val3> : <blk> <name6> += <name1> </blk>
<name1> ( <name2> , ( <name4> , <name5> , <name6> -1 ) )	<name1> ( <name2> , ( <name4> , <name5> , <name6> - 1 ) )	<name1> ( <name2> , ( <name4> , <name5> , <name6> - 1 ) )
( <val2> ) からなる列に ( -1 ) からなる列の <name6> 回分の列を加えた値を <name3> とする	<name3> = [ <val2> ] + [ - 1 ] * <name6>	<name3> = [ <val2> ] + [ - 1 ] * <name6>
<name5> の <name4> 番目が <name5> の <name2> 番目より小さいとき、 <blk> <name5> の <name6> 番目と <name5> の <name2> 番目を入れ替える <sep> <name1> ( <name2> ) </blk>	if <name5> [ <name4> ] < <name5> [ <name2> ] : <blk> <name5> [ <name6> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name6> ] <sep> <name1> ( <name2> ) </blk>	\ if <name5> [ <name4> ] < <name5> [ <name2> ] : <blk> <name5> [ <name6> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name1> ( <name2> ) </blk>
<name6> から <val2> を引いた値に <val3> を加えた値を <name1> とする	<name1> = <name6> - <val2> + <val3>	<name1> = <name6> - <val2> + <val3>
<name1> を <name3> の <name5> 番目の <name6> から <val4> を引いた値番目にする	<name3> [ <name5> ] [ <name6> - <val4> ] = <name1>	<name4> [ <name5> ] [ <name6> - <val4> ] = <name1>
空辞書、未定値を <name1> 、 <name3> とする	<name1> , <name3> = { } , None	<name1> , <name3> = { } , None
<name3> の、つまり先頭から <name1> 番目までの部分列を <name6> とする	<name6> = <name3> [ : <name1> ]	else = <name3> [ : <name1> ]
<name3> の <name4> に <val5> を加えた値から、つまり末尾までの部分列を <name6> とする	<name6> = <name3> [ <name4> + <val5> : ]	<name6> = <name3> [ <name4> + <val5> : ]
<name1> の <name2> 番目の <val6> を取り出した値を <name3> とする	<name3> = <name1> [ <name2> ] . pop ( <val6> )	<name3> = <name1> [ <name2> ] . pop ( <val6> )
<val4> に <name3> を掛けた値に <name5> の <name6> 番目の整数値を加えた値を <name3> とする	<name3> = <val4> * <name3> + int ( <name5> [ <name6> ] )	<name3> = <val4> * <name3> + int ( <name5> [ <name6> ] )
<name6> に <name2> を加えた値を <val5> だけ右シフトした値を <name1> とする	<name1> = ( <name6> + <name2> ) >> <val5>	<name1> = ( <name6> + <name2> ) >> <val5>
<name4> 、 <name4> の <val6> 番目から、つまり末尾までの部分列に ( 、つまり未定値 ) からなる列を加えた値の要素をそれぞれ組にした列の各要素を <name5> 、 <name2> とし、 <name5> が <name2> と等しくないときの <name5> の列を <name1> とする	<name1> = ( [ <name5> for <name5> , <name2> in zip ( <name4> , <name4> [ <val6> : ] + [ None ] ) if <name5> != <name2> ] )	<name2> = [ <name5> for <name5> , <name2> in zip ( <name4> , <name4> [ <val6> : ] + [ None : ] ) if <name5> != <name2> ]
light welter を出力する	print ( 'light welter' )	dict ( 'light print ( 'light heavy' ) )
<name1> の <name4> 番目に <name5> の <name4> 番目の <name3> 番目を加えた値が <name1> の <name3> 番目より小さいとき、	if <name1> [ <name4> ] + <name5> [ <name4> ] [ <name3> ] < <name1> [ <name3> ] :	while <name1> [ <name4> ] + <name5> [ <name4> ] [ <name3> ] < <name1> [ <name3> ] :
<name1> の <name2> 番目の先頭を <name3> とする	<name3> = <name1> [ <name2> ] [ 0 ]	( <name3> = <name1> [ <name2> ] [ 0 ] )
<name4> の絶対値が <val3> より大きいかどうかを返す	return abs ( <name4> ) > <val3>	x return abs ( <name4> ) > <val3>
<val6> を <name3> の <name1> 番目の <name4> 番目にする	<name3> [ <name1> ] [ <name4> ] = <val6>	<name4> [ <name1> ] [ <name4> ] = <val6>
<name6> の長さを <name3> とする	<name3> = len ( <name6> )	<name3> = len ( <name6> )
<val1> から <name6> に <name6> を掛けた値に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <val1> から <name3> に <val4> を加えた値未満までの数列の各要素を <name5> とし、 <val1> の列の列を <name2> とする	<name2> = [ [ <val1> for <name5> in range ( <name3> + <val4> ) ] for <name5> in range ( <name6> * <name6> + <val4> ) ]	<name2> = [ [ <val1> for <name5> in range ( <name3> + <val4> ) ] for <name5> in range ( <name6> * <name6> + <val4> ) ]
<name5> . <name6> ( <name4> ) を <name3> とする	<name3> = <name5> . <name6> ( <name4> )	<name3> = <name5> . <name6> ( <name4> )
<val4> を間に入れて <name2> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val4> . join ( map ( str , <name2> ) ) )	print ( <val4> . join ( map ( str , <name2> ) ) )
<name5> <name3> <name1> <name6>	<name5> <name3> <name1> <name6>	( <name5> <name3> <name1> <name6> )
<name5> の <name3> に [ MASK ] を書き込むを <name1> とする	<name1> = <name5> . <name3> . <name1>	<name1> = <name5> . <name3> . <name1>
<name5> の各要素を <name4> とし、 0 から <val1> 未満までの数列の各要素を <name3> とし、 <name6> の <name2> ( <name4> , <name3> ) の組番目の列のリストの列を <name5> とする	<name5> = [ list ( [ <name6> [ tuple ( <name2> ( <name4> , <name3> ) ) ] for <name3> in range ( <val1> ) ] ) for <name4> in <name5> ]	<name5> = [ list ( [ <name6> [ tuple ( <name2> ( <name4> , <name3> ) ) ] ) for <name3> in range ( <val1> ) ] for <name4> in <name5> ]
<name6> の <name4> 番目を空白で分割した字句列を展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = <name6> [ <name4> ] . split ( )	<name2> , <name1> = <name6> [ <name4> ] . split ( )
0 から <name2> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name1> in range ( <name2> ) ]	<name4> = [ [ ] for <name1> in range ( <name2> ) ]
<name6> の <name4> 番目のとき、	if <name6> [ <name4> ] :	list if <name6> [ <name4> ] :
os . <name3> の <name6> 番目を <name5> だけ増加させる	<name3> [ <name6> ] += <name5>	[ <name3> [ <name6> ] += <name5>
<name3> の <name5> 番目を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name3> [ <name5> ] :	. for <name2> , <name4> in <name3> [ <name5> ] :
( <name6> ) からなる列の <name5> 回分の列を <name1> とする	<name1> = [ <name6> ] * <name5>	<name1> = [ <name6> ] * <name5>
<name2> を順に <name6> として、繰り返す	for <name6> in <name2> :	. for <name6> in <name2> :
<name2> を <name4> の <name3> ( <name2> , <name5> [ <name2> ] [ <name6> [ <name2> ] -1 ] ) 番目にする	<name4> [ <name3> ( <name2> , <name5> [ <name2> ] [ <name6> [ <name2> ] - 1 ] ) ] = <name2>	<name5> [ <name4> [ <name3> ( <name2> , <name5> [ <name2> ] [ <name6> [ <name2> ] - 1 ] ) ] = <name2>
<name5> ( <name3> ) を展開し、それぞれ <name4> 、 <name2> 、 <name6> 、 <name1> とする	<name4> , <name2> , <name6> , <name1> = <name5> ( <name3> )	<name1> , <name2> , <name6> , <name1> = <name5> ( <name3> )
<name6> の <name1> が <name5> と等しくないとき、	if <name6> . <name1> is <name5> :	while <name6> . <name1> != <name5> :
<name3> の <name5> と等しい要素の最初の位置に <val1> を加えた値を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name3> . index ( <name5> ) + <val1>	<name2> [ <name6> ] = <name3> . index ( <name5> ) + <val1>
0 から <name4> の <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name4> . <name3> ) :	. for <name5> in range ( <name4> . <name3> ) :
<name4> の <name2> 番目に <name6> の <name2> 番目の <name1> 番目を加えた値が <name4> の <name1> 番目より小さいとき、	if <name4> [ <name2> ] + <name6> [ <name2> ] [ <name1> ] < <name4> [ <name1> ] :	for <name4> [ <name2> ] + <name6> [ <name2> ] [ <name1> ] < <name4> [ <name1> ] :
<name5> が <name4> に含まれないとき、	if <name5> not in <name4> :	while <name5> not in <name4> :
\ <name1> ( <val4> % <name3> ) \	\ <name1> ( <val4> % <name3> ) \	) <name1> ( <val4> % <name3> ) \
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を順に <name5> として、繰り返す	for <name5> in map ( int , input ( ) . split ( ) ) :	. for <name5> in map ( int , input ( ) . split ( ) ) :
<name4> . <name1> ( <name3> , <name5> + <val2> ) を出力する	print ( <name4> . <name1> ( <name3> , <name5> + <val2> ) )	print ( <name4> . <name1> ( <name3> , <name5> + <val2> ) )
<name2> の <name6> から <val5> を引いた値番目を <name1> とする	<name1> = <name2> [ <name6> - <val5> ]	<name1> = <name2> [ <name6> - <val5> ]
<name6> ( <name5> - <name3> , <name5> - <name2> ) を <name4> とする	<name4> = <name6> ( <name5> - <name3> , <name5> - <name2> )	<name4> = <name6> ( <name5> - <name3> , <name5> - <name2> )
<name1> の <name4> の <name6> 番目でないとき、	if not <name1> . <name4> [ <name6> ] :	while not <name1> . <name4> [ <name6> ] :
<name2> に <val5> を加えた値から <name1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name2> + <val5> , <name1> ) :	range for <name6> in range ( <name2> + <val5> , <name1> ) :
<name5> の、つまり現在の日時番目が、つまり未定値と等しいとき、	if <name5> [ now ] == None :	while <name5> [ now ] is not None :
<name2> の末尾に <val6> を間に入れて <name5> に <name3> を加えた値を連結した文字列を追加する	<name2> . append ( <val6> . join ( <name5> + <name3> ) )	<name1> . append ( <val6> . join ( <name5> + <name3> ) )
<name1> {}を返す	return <name1> { Y -1988 }	from return <name1> import dict
<name5> の <name6> 番目を <name3> だけ増加させる	<name5> [ <name6> ] += <name3>	<name3> [ <name6> ] += <name3>
<name5> の末尾に ( <name4> に <val1> を加えた値、 <val6> 、 <name3> に <name2> に <name5> を掛けた値を加えた値 ) の組を追加する	<name5> . append ( ( <name4> + <val1> , <val6> , <name3> + <name2> * <name5> ) )	<name5> . append ( ( <name4> + <val1> , <val6> , <name3> + <name2> * <name5> ) )
<name6> の <name2> 番目を <val3> だけ減少させる	<name6> [ <name2> ] -= <val3>	<name2> [ <name2> ] -= <val3>
<name4> が <name5> と等しいとき、	if <name4> == <name5> :	isclose if <name4> == <name5> :
<name4> の <name6> に <val1> を加えた値番目の <name2> に <val1> を加えた値番目のとき、	if <name4> [ <name6> + <val1> ] [ <name2> + <val1> ] :	list if <name4> [ <name6> + <val1> ] [ <name2> + <val1> ] :
<name5> を <name2> の <name3> から <val6> を引いた値番目の <name4> 番目だけ増加させる	<name5> += <name2> [ <name3> - <val6> ] [ <name4> ]	<name4> += <name2> [ <name3> - <val6> ] [ <name4> ]
<name3> の <val1> 番目が <val6> と等しいとき、 <blk> <name2> の末尾に <name3> の <val5> 番目から、つまり末尾までの部分列を追加する </blk>	if <name3> [ <val1> ] == <val6> : <blk> <name2> . append ( <name3> [ <val5> : ] ) </blk>	<blk> if <name3> [ <val1> ] == <val6> : <blk> <name2> . append ( <name3> [ <val5> : ] ) </blk>
<name6> の <val3> 番目を <name4> だけ増加させる	<name6> [ <val3> ] += <name4>	( <name6> [ <val3> ] += <name4> )
<name1> . <name3> ( <name2> ) を <name2> とする	<name2> = <name1> . <name3> ( <name2> )	dict = <name1> . <name3> ( <name2> )
<name6> が <name4> の <name2> 番目より小さいとき、	if <name6> < <name4> [ <name2> ] :	if <name6> < <name4> [ <name2> ] :
<name6> と <val2> を <name1> だけ左シフトした値の論理和を <name6> とする	<name6> = <name6> | ( <val2> << <name1> )	count = <name6> | ( <val2> << <name1> )
<name1> の <name2> の <val5> 番目に <name6> を加えた値番目の <name2> の <val3> 番目に <name4> を加えた値番目が <val1> と等しいとき、 <blk> <name2> の <val5> 番目を <name6> だけ増加させる <sep> <name2> の <val3> 番目を <name4> だけ増加させる </blk>	if <name1> [ <name2> [ <val5> ] + <name6> ] [ <name2> [ <val3> ] + <name4> ] == <val1> : <blk> <name2> [ <val5> ] += <name6> <sep> <name2> [ <val3> ] += <name4> </blk>	while <name1> [ <name2> [ <val5> ] + <name6> ] [ <name2> + <val3> + <name4> ] == <val1> : <blk> <name2> [ <val5> ] += <name6> <sep> <name2> [ <val3> ] += <name4> </blk>
<name1> . <name6> . <name2> ( ) かつ <name1> . <name3> . <name2> ( ) でないとき、	if <name1> . <name6> . <name2> ( ) and not <name1> . <name3> . <name2> ( ) :	isinstance ( <name1> . <name6> . <name2> ( ) and not <name1> . <name3> . <name2> ( ) ) :
<val4> に <name1> を掛けた値を <name6> とする	<name6> = <val4> * <name1>	( <name6> = <val4> * <name1> )
<name3> に <val6> を加えた値を返す	return <name3> + <val6>	self return <name3> + <val6>
<val2> を <name3> とする <val2> を <name4> とする	<name3> = <val2> <name4> = <val2>	<name3> = <val2> <name4> = <val2>
<name3> が <val5> より大きい間、次を繰り返す	while ( <name3> > <val5> ) :	del <name3> > <val5> :
<val2> の間、次を繰り返す	while ( <val2> ) :	del <val2> :
<name1> の -2 番目を <name3> の ( <name6> 、 <name2> ) の組番目にする	<name3> [ ( <name6> , <name2> ) ] = <name1> [ - 2 ]	<name1> [ ( <name6> , <name2> ) ] = <name1> [ - 2 ]
<val5> に <name4> を掛けた値の <val5> 乗が <name2> より大きいとき <val3> 、そうでなければ <val1> を出力する	print ( <val3> if ( <val5> * <name4> ) ** <val5> > <name2> else <val1> )	[ print ( <val3> ) if <val5> * <name4> ** <val5> > <name2> else <val1> )
<name3> に <val2> を加えた値から <name5> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> + <val2> , <name5> ) :	: ( range ( <name3> + <val2> , <name5> ) :
<name6> の <name2> 番目が -1 と等しくまたは <name5> の <name4> 番目が -1 と等しいとき、	if <name6> [ <name2> ] == - 1 or <name5> [ <name4> ] == - 1 :	while <name6> [ <name2> ] == - 1 or <name5> [ <name4> ] == - 1 :
ソートされた順序を保ったまま <name4> を <name6> に挿入できる位置を <name2> とする	<name2> = bisect_left ( <name6> , <name4> )	<name2> = bisect . bisect_left ( <name6> , <name4> )
0 から <name2> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列を空白で分割した字句列の列を <name6> とする	<name6> = [ input ( ) . split ( ) for <name4> in range ( <name2> ) ]	<name6> = [ input ( ) . split ( ) for <name4> in range ( <name2> ) ]
<name5> が <name1> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> == <name1> : <blk> continue </blk>	if <name5> == <name1> : <blk> continue </blk>
<name4> を ( <name4> の先頭 ) からなる列だけ増加させる	<name4> += [ <name4> [ 0 ] ]	<name2> += [ <name4> [ 0 ] ]
<name2> の <val5> 乗が <name6> 以上のとき、	if <name2> ** <val5> >= <name6> :	for <name2> in <name2> ** <val5> >= <name6> :
<name3> の位置 <name4> の <val2> 番目の整数値から <name3> を探して見つかった位置のとき <val5> 、そうでなければ <val1> を出力する	print ( <val5> if <name3> . find ( <name3> , int ( <name4> [ <val2> ] ) ) else <val1> )	print ( <val5> if <name3> . find ( <name3> , int ( <name4> [ <val2> ] ) ) else <val1> )
<name5> ( <name2> ( <name4> = <name1> , <name6> = <name3> ) )	<name5> ( <name2> ( <name4> = <name1> , <name6> = <name3> ) )	<name5> ( <name2> ( <name4> = <name1> , <name6> = <name3> ) )
<name4> が <name1> の <name2> 番目より大きいとき、	if <name4> > <name1> [ <name2> ] :	for <name4> in <name1> [ <name2> ] :
<name6> と <val3> を <name1> の先頭だけ左シフトした値の論理積のとき、	if <name6> & ( <val3> << <name1> [ 0 ] ) :	for <name6> & ( <val3> << <name1> [ 0 ] ) :
<name4> から <name5> から <name4> を引いた値を引いた値を <name6> とする	<name6> = <name4> - ( <name5> - <name4> )	<name6> = <name4> - ( <name5> - <name4> )
<name2> から <name3> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> , <name3> + <val6> ) :	. for <name5> in range ( <name2> , <name3> + <val6> ) :
入力された文字列を空白で分割した字句列の先頭を除いた部分列の各要素に整数を適用した列を順に <name2> として、繰り返す	for <name2> in map ( int , input ( ) . split ( ) [ 1 : ] ) :	. for <name2> in map ( int , input ( ) . split ( ) [ 1 : ] ) :
<name6> の <name4> の <name2> 番目を順に <name3> として、繰り返す	for <name3> in <name6> . <name4> [ <name2> ] :	for <name3> in <name6> . <name4> [ <name2> ] :
<name5> が <name3> に含まれるとき、 <blk> <name2> を <name3> の <name5> 番目だけ増加させる <sep> <val6> を <name5> とする </blk>	if <name5> in <name3> : <blk> <name2> += <name3> [ <name5> ] <sep> <name5> = <val6> </blk>	\ <name5> in <name3> : <blk> <name2> += <name3> [ <name5> ] <sep> <name5> = <val6> </blk>
<name1> の <name5> から <val3> を引いた値番目の末尾に ( <name6> から <val3> を引いた値、 <name4> ) の組を追加する	<name1> [ <name5> - <val3> ] . append ( ( <name6> - <val3> , <name4> ) )	<name4> [ <name5> - <val3> ] . append ( ( <name6> - <val3> , <name4> ) )
<name4> から <name1> に <val2> を加えた値未満までの数列の各要素を <name3> とし、 ( <name5> の <name3> 番目、 <name3> ) の組の列を <name6> とする	<name6> = [ ( <name5> [ <name3> ] , <name3> ) for <name3> in range ( <name4> , <name1> + <val2> ) ]	<name4> = [ ( <name5> [ <name3> ] , <name3> ) for <name3> in range ( <name4> , <name1> + <val2> ) ]
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列の整数値の列をソートした列を <name1> とする	<name1> = sorted ( [ int ( input ( ) ) for <name2> in range ( <name5> ) ] )	<name1> = sorted ( [ int ( input ( ) ) for <name2> in range ( <name5> ) ] )
<name5> に <name5> を掛けた値から <name1> に <val2> を加えた値未満までの <name5> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name5> * <name5> , <name1> + <val2> , <name5> ) :	( for <name6> in range ( <name5> * <name5> , <name1> + <val2> , <name5> ) :
<name6> . <name1> ( ) を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name6> . <name1> ( )	<name3> , <name2> = <name6> . <name1> ( )
0 から <name6> 未満までの数列の各要素を <name2> とし、 0 から <name6> 未満までの数列の各要素を <name1> とし、 <name5> の列の列を <name4> とする	<name4> = [ [ <name5> for <name1> in range ( <name6> ) ] for <name2> in range ( <name6> ) ]	<name4> = [ [ <name5> for <name1> in range ( <name6> ) ] for <name2> in range ( <name6> ) ]
<name2> の <name4> 番目の長さが <val5> と等しいとき、	if len ( <name2> [ <name4> ] ) == <val5> :	if ( len ( <name2> [ <name4> ] ) == <val5> ) :
<val6> から <val3> 未満までの数列の各要素を <name5> とし、 <val6> から <val3> 未満までの数列の各要素を <name4> とし、 <val6> の列の列を <name2> とする	<name2> = [ [ <val6> for <name4> in range ( <val3> ) ] for <name5> in range ( <val3> ) ]	<name2> = [ [ <val6> for <name4> in range ( <val3> ) ] for <name5> in range ( <val3> ) ]
<val3> が <name1> 以下かどうかが <name5> 以下かどうかが <name2> より小さくないとき、	if not <val3> <= <name1> <= <name5> < <name2> :	raise <val3> <= <name1> <= <name5> < <name2> :
<name5> を展開しての要素をそれぞれ組にした列の各要素を <name3> とし、 <name3> のリストの列を <name5> とする	<name5> = [ list ( <name3> ) for <name3> in zip ( * <name5> ) ]	<name4> = [ list ( <name3> ) for <name3> in zip ( * <name5> ) ]
<name5> の <name1> の <name4> 番目から <name4> に <name2> を加えた値までの部分列と等しい要素の最初の位置を順に <name3> として、繰り返す	for <name3> in <name5> . index ( <name1> [ <name4> : <name4> + <name2> ] ) :	for <name3> in <name5> . index ( <name1> [ <name4> : <name4> + <name2> ] ) :
<name4> から <name5> に <val6> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> , <name5> + <val6> ) :	continue for <name3> in range ( <name4> , <name5> + <val6> ) :
<name4> の、つまり先頭から <name1> 番目までの部分列に <name4> の <name1> に <val2> を加えた値から、つまり末尾までの部分列を加えた値を <name3> とする	<name3> = <name4> [ : <name1> ] + <name4> [ <name1> + <val2> : ]	<name3> = <name4> [ : <name1> ] + <name4> [ <name1> + <val2> : ]
<val6> から <name4> を引いた値を <name3> とする <name4> に <val2> を加えた値を <name5> とする <name4> に <val3> を加えた値を <name1> とする	<name3> = <val6> - <name4> <name5> = <name4> + <val2> <name1> = <name4> + <val3>	<name2> = <val6> - <name4> <name5> = <name4> + <val2> <name1> = <name4> + <val3>
<name1> ( <name5> ) を <name6> とする	<name6> = <name1> ( <name5> )	<name6> = <name1> ( <name5> )
<name5> の <name4> 番目の <name3> の <val1> 番目番目の <val6> 番目を <name2> だけ増加させる	<name5> [ <name4> ] [ <name3> [ <val1> ] ] [ <val6> ] += <name2>	( <name5> [ <name4> ] [ <name3> [ <val1> ] ] [ <val6> ] += <name2> )
<name6> ( <name4> . <name1> [ <val5> : ] )	<name6> ( <name4> . <name1> [ <val5> : ] )	set ( <name6> ( <name4> . <name1> [ <val5> : ] ) )
<val3> を間に入れて <name5> の <name1> 番目の各要素に整数を適用した列を連結した文字列を出力する	print ( <val3> . join ( map ( str , <name5> [ <name1> ] ) ) )	<val3> print ( <val3> . join ( map ( str , <name5> [ <name1> ] ) ) )
<name5> の <name4> の <name3> 番目が <name5> の <name4> の <name6> 番目と等しいとき、	if <name5> . <name4> [ <name3> ] == <name5> . <name4> [ <name6> ] :	or <name5> . <name4> [ <name3> ] == <name5> . <name4> [ <name6> ] :
<name6> . <name5> ( <name3> - <name4> . <name1> ) を <name6> . <name2> ( ) で割った値を <name2> とする	<name2> = <name6> . <name5> ( <name3> - <name4> . <name1> ) / <name6> . <name2> ( )	<name2> = <name6> . <name5> ( <name3> - <name4> . <name1> ) / <name6> . <name2> ( )
\ <name2> ( <val4> % <name5> [ <name6> ] ) \	\ <name2> ( <val4> % <name5> [ <name6> ] ) \	% <name2> ( <val4> % <name5> [ <name6> ] ) \
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name5> 、 <name2> とする	<name1> , <name6> , <name5> , <name2> = map ( int , input ( ) . split ( ) )	<name6> , <name5> , <name2> = map ( int , input ( ) . split ( ) )
<name6> の末尾を順に <name1> として、繰り返す	for <name1> in <name6> [ - 1 ] :	for <name1> in <name6> [ - 1 ] :
<name2> の <val3> 番目を <name6> の <name1> にする	<name6> . <name1> = <name2> [ <val3> ]	<name6> . <name1> = <name2> [ <val3> ]
<val1> を <name3> の <val1> 番目にする	<name3> [ <val1> ] = <val1>	( <name3> [ <val1> ] = <val1> )
0 から <val6> 未満までの数列の各要素を <name4> とし、 0 から <val6> 未満までの数列の各要素を <name2> とし、 <val3> の列の列を <name5> とする	<name5> = [ [ <val3> for <name2> in range ( <val6> ) ] for <name4> in range ( <val6> ) ]	<name5> = [ [ <val3> for <name2> in range ( <val6> ) ] for <name4> in range ( <val6> ) ]
<name4> の <val1> 番目が <name4> の <val5> 番目と等しいかどうかが <name4> の <val6> 番目と等しいかどうかが <name4> の <val3> 番目と等しくまたは <name4> の <val5> 番目が <name4> の <val6> 番目と等しいかどうかが <name4> の <val3> 番目と等しいかどうかが <name4> の <val2> 番目と等しいとき、	if ( <name4> [ <val1> ] == <name4> [ <val5> ] == <name4> [ <val6> ] == <name4> [ <val3> ] ) or ( <name4> [ <val5> ] == <name4> [ <val6> ] == <name4> [ <val3> ] == <name4> [ <val2> ] ) :	== <name4> [ <val1> ] == <name4> [ <val5> ] == <name4> [ <val6> ] == <name4> [ <val3> ] or <name4> [ <val5> ] == <name4> [ <val6> ] == <name4> [ <val3> ] == <name4> [ <val2> ] :
<name3> に <name6> を加えた値を <name3> とする	<name3> = <name3> + <name6>	<name3> = <name3> + <name6>
<name1> . <name2> . <name4> ( <name6> . <name2> , <name6> . <name5> ) に <name1> . <name5> . <name4> ( <name6> . <name2> , <name6> . <name5> ) を掛けた値を <name3> とする	<name3> = <name1> . <name2> . <name4> ( <name6> . <name2> , <name6> . <name5> ) * <name1> . <name5> . <name4> ( <name6> . <name2> , <name6> . <name5> )	<name3> = <name1> . <name2> . <name4> ( <name6> . <name2> , <name6> . <name5> ) * <name1> . <name5> . <name4> ( <name6> . <name2> , <name6> . <name5> )
<name4> ( <val3> ) エラーとなる	raise <name4> ( <val3> )	raise <name4> ( <val3> )
<name2> の先頭が <val4> と等しいとき、	if <name2> [ <val4> ] == <val4> :	list if <name2> [ 0 ] == <val4> :
<name4> を <name2> から <name3> を引いた値から <name1> を引いた値だけ増加させる	<name4> += <name2> - <name3> - <name1>	<name4> += <name2> - <name3> - <name1>
<name6> が <name3> の <val5> 乗に <name3> を加えた値以下のとき、	if <name6> <= <name3> ** <val5> + <name3> :	if <name6> <= <name3> ** <val5> + <name3> :
<name4> ( ) を <name6> の <name2> にする	<name6> . <name2> = <name4> ( )	<name6> . <name2> = <name4> ( )
<name2> を <name6> ( <val4> , <val5> ) で割った余りを <name2> とする	<name2> = <name2> % <name6> ( <val4> , <val5> )	<name2> = <name2> % <name6> ( <val4> , <val5> )
<name5> に <name1> を加えた値を <name5> とする	<name5> = <name5> + <name1>	( <name5> = <name5> + <name1> )
<name2> の末尾に <name3> ( <name1> , <val5> ) を追加する	<name2> . append ( <name3> ( <name1> , <val5> ) )	<name2> . append ( <name3> ( <name1> , <val5> ) )
<name1> の <name5> 番目を <val2> を <name5> だけ左シフトした値との論理和にする	<name1> [ <name5> ] | = <val2> << <name5>	<name1> [ <name5> ] | = ( <val2> << <name5> )
<name5> を <name6> ( <name2> ) から <name6> ( <name3> ) を引いた値だけ増加させる	<name5> += <name6> ( <name2> ) - <name6> ( <name3> )	<name2> += <name6> ( <name2> ) - <name6> ( <name3> )
<name1> から <name6> を引いた値が <val2> より大きい間、次を繰り返す	while <name1> - <name6> > <val2> :	yield ( <name1> - <name6> ) > <val2> :
<name6> 、 <name5> の要素をそれぞれ組にした列の各要素を <name1> 、 <name3> とし、 <name1> から <name3> を引いた値を <val2> で割った余りの列を <name4> とする	<name4> = [ ( <name1> - <name3> ) % <val2> for <name1> , <name3> in zip ( <name6> , <name5> ) ]	<name4> = [ ( <name1> - <name3> ) % <val2> for <name1> , <name3> in zip ( <name6> , <name5> ) ]
<name1> の <name4> 番目を <name2> を <val5> で割った商だけ増加させる	<name1> [ <name4> ] += <name2> // <val5>	<name1> [ <name4> ] += <name2> // <val5>
<name1> の先頭から <name4> の先頭の整数値を探して見つかった位置のとき <val5> 、そうでなければ <val6> を出力する	print ( <val5> if <name1> . find ( int ( <name4> [ 0 ] ) ) else <val6> )	print ( <val5> if <name1> . find ( int ( <name4> [ 0 ] ) ) else <val6> )
( <name6> ) からなる列を os . <name4> とする	<name4> = [ <name6> ]	<name2> . <name4> = [ <name6> ]
<name3> から <name2> を引いた値から <name1> を引いた値を <name6> とする	<name6> = <name3> - <name2> - <name1>	( <name6> = <name3> - <name2> - <name1> )
<name5> 、 <name3> 、 <name1> 、 <name4> の要素をそれぞれ組にした列を順に <name1> 、 <name4> 、 <name2> 、 <name6> として、繰り返す	for <name1> , <name4> , <name2> , <name6> in zip ( <name5> , <name3> , <name1> , <name4> ) :	. for <name1> , <name4> , <name2> , <name6> in zip ( <name5> , <name3> , <name1> , <name4> ) :
( ( <val1> 、 <val1> ) の組 ) からなる列の <name4> 回分の列を <name6> とする	<name6> = [ ( <val1> , <val1> ) ] * <name4>	<name6> = [ ( <val1> , <val1> ) ] * <name4>
<name5> の <name1> 番目の <name3> 番目を <name6> とする	<name6> = <name5> [ <name1> ] [ <name3> ]	else = <name5> [ <name1> ] [ <name3> ]
<val6> から <name4> の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val6> , len ( <name4> ) ) :	continue range ( <val6> , len ( <name4> ) ) :
逆順に <name6> をソートする	<name6> . sort ( reverse = True )	<name3> . sort ( <name6> = True )
<name4> に <val2> を掛けた値を <name4> とする	<name4> = <name4> * <val2>	<name4> = <name4> * <val2>
<name1> が -1 と等しくまたは <name2> が -1 と等しいとき、	if <name1> == - 1 or <name2> == - 1 :	for <name2> == - 1 or <name2> == - 1 :
\ 0 から <name1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列内の <val2> を <val5> で置き換えた文字列の整数値の列を <name6> とする\	\ <name6> = [ int ( input ( ) . replace ( <val2> , <val5> ) ) for <name3> in range ( <name1> ) ] \	\ <name6> = [ int ( input ( ) . replace ( <val2> , <val5> ) ) for <name3> in range ( <name1> ) ] \
<name5> の <name4> から <name6> を引いた値番目を <name5> の <name4> 番目だけ減少させる	<name5> [ <name4> - <name6> ] -= <name5> [ <name4> ]	<name1> [ <name4> - <name6> ] -= <name5> [ <name4> ]
<name5> から <name1> を引いた値に <name4> から <name6> を引いた値を掛けた値を <name2> から <name1> を引いた値で割った値に <name6> を加えた値を <name3> とする	<name3> = ( <name5> - <name1> ) * ( <name4> - <name6> ) / ( <name2> - <name1> ) + <name6>	<name3> = ( <name5> - <name1> ) * ( <name4> - <name6> ) / ( <name2> - <name1> ) + <name6>
0 から <name1> の長さから <val5> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( len ( <name1> ) - <val5> ) :	. for <name3> in range ( len ( <name1> ) - <val5> ) :
<name4> を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = <name4>	( <name1> , <name3> = <name4> )
<val1> から <name6> の <val2> 乗の整数値に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val1> , int ( <name6> ** <val2> ) + <val4> ) :	. for <name3> in range ( <val1> , int ( <name6> ** <val2> ) + <val4> ) :
<name2> の最大値から <name2> の最小値を引いた値を <name6> とする	<name6> = max ( <name2> ) - min ( <name2> )	<name6> = max ( <name2> ) - min ( <name2> )
<name5> が <val2> より小さいとき、	if <name5> < <val2> :	: if <name5> < <val2> :
<name5> の <name3> 番目の <name6> 番目と <val1> の排他論理和を <name5> の <name6> 番目の <name3> 番目とするを <name5> の <name3> 番目の <name6> 番目にする	<name5> [ <name3> ] [ <name6> ] = <name5> [ <name6> ] [ <name3> ] = <name5> [ <name3> ] [ <name6> ] ^ <val1>	<name5> [ <name3> ] [ <name6> ] = <name5> [ <name6> ] [ <name3> ] = <name5> [ <name3> ] [ <name6> ] ^ <val1>
<name6> の末尾に <name4> の <name1> から <val2> を引いた値番目を追加する	<name6> . append ( <name4> [ <name1> - <val2> ] )	<name2> . append ( <name4> [ <name1> - <val2> ] )
<name3> を <val4> で割った余りのとき <name2> 、そうでなければ <name1> を <name5> とする	<name5> = <name2> if <name3> % <val4> else <name1>	else = <name2> if <name3> % <val4> else <name1>
<name5> の <name4> が、つまり未定値と等しくないとき、	if <name5> . <name4> != None :	if <name5> . <name4> != None :
<name2> に <name4> を掛けた値を <name2> と <name4> の最大公約数の <val3> 乗で割った商に <name6> を掛けた値を出力する	print ( <name2> * <name4> // ( math . gcd ( <name2> , <name4> ) ** <val3> ) * <name6> )	<name2> print ( <name2> * <name4> / math . gcd ( <name2> , <name4> ) , <val3> ) * <name6> )
<name3> の <name5> に <val1> を加えた値番目の末尾に <name6> を追加する	<name3> [ <name5> + <val1> ] . append ( <name6> )	<name1> [ <name5> + <val1> ] . append ( <name6> )
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name4> , <name1> , <name6> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name3> の末尾に ( <name6> 、 <name4> ) からなる列を追加する	<name3> . append ( [ <name6> , <name4> ] )	<name4> . append ( [ <name6> , <name4> ] )
<name1> . <name6> ( <name3> ) を <name1> とする	<name1> = <name1> . <name6> ( <name3> )	<name1> = <name1> . <name6> ( <name3> )
現在の日時に <name5> の <name1> 番目の <name6> 番目を加えた値を <name2> の <name6> 番目にする	<name2> [ <name6> ] = now + <name5> [ <name1> ] [ <name6> ]	input [ <name6> ] = now + <name5> [ <name1> ] [ <name6> ]
<name1> の <name2> に <val6> を加えた値番目を <name1> の <name2> 番目を <val5> で割った商だけ増加させる	<name1> [ <name2> + <val6> ] += <name1> [ <name2> ] // <val5>	<name2> [ <name2> + <val6> ] += <name1> [ <name2> ] // <val5>
<name1> を <name2> の <name6> の <name3> にする	<name2> . <name6> . <name3> = <name1>	( <name2> . <name6> . <name3> = <name1> )
<name2> の <val5> 番目を辞書の <name2> の先頭番目にする	dict [ <name2> [ 0 ] ] = <name2> [ <val5> ]	count [ <name2> [ 0 ] ] = <name2> [ <val5> ]
<name6> の <name1> に <val3> を加えた値番目を <name6> の <name1> 番目だけ増加させる	<name6> [ <name1> + <val3> ] += <name6> [ <name1> ]	<name6> [ <name1> + <val3> ] += <name6> [ <name1> ]
\ <val3> を書式として <val2> を間に入れて <name6> の <name1> の各要素を <name5> とし、 <name5> の文字列の列を連結した文字列で整形した文字列を返す\	\ return <val3> . format ( <val2> . join ( [ str ( <name5> ) for <name5> in <name6> . <name1> ] ) ) \	yield <val3> . format ( <val2> . join ( [ str ( <name5> ) for <name5> in <name6> . <name1> ] ) ) \
<name3> のリストの各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , list ( <name3> ) ) )	<name1> = list ( map ( int , list ( <name3> ) ) )
<name5> の <name3> から <val1> を引いた値番目、 <name5> の <name3> 番目を <name5> の <name3> 番目、 <name5> の <name3> から <val1> を引いた値番目とする	<name5> [ <name3> ] , <name5> [ <name3> - <val1> ] = <name5> [ <name3> - <val1> ] , <name5> [ <name3> ]	<name2> [ <name3> ] , <name5> [ <name3> - <val1> ] = <name5> [ <name3> - <val1> ] , <name5> [ <name3> ]
<name5> の <val3> 番目から <name1> の先頭を引いた値の <val4> 乗に <name5> の <val6> 番目から <name1> の <val6> 番目を引いた値の <val4> 乗を加えた値の平方根を返す	return math . sqrt ( ( <name5> [ <val3> ] - <name1> [ <val3> ] ) ** <val4> + ( <name5> [ <val6> ] - <name1> [ <val6> ] ) ** <val4> )	return sqrt ( ( <name5> [ <val3> ] - <name1> [ <val3> ] ) ** <val4> + ( <name5> [ <val6> ] - <name1> [ <val6> ] ) ** <val4> )
<val2> の <val4> 乗を <name5> の <name3> 番目にする	<name5> [ <name3> ] = <val2> ** <val4>	<name3> [ <name3> ] = <val2> ** <val4>
0 から <name2> 未満までの数列の各要素を <name3> とし、 <name6> [ <name3> ] 、 <name1> の要素をそれぞれ組にした列の各要素を <name4> 、 <name5> とし、 <name4> に <name5> を掛けた値の列の総和を出力するの列	[ print ( sum ( [ <name4> * <name5> for <name4> , <name5> in zip ( <name6> [ <name3> ] , <name1> ) ] ) ) for <name3> in range ( <name2> ) ]	print ( [ sum ( [ <name4> * <name5> for <name4> , <name5> in zip ( <name6> [ <name3> ] , <name1> ) ] ) for <name3> in range ( <name2> ) ] )
<name2> が、つまり無限の整数列より小さくかつ <name5> の <name2> 番目が <name6> と等しいとき、	if <name2> < count and <name5> [ <name2> ] == <name6> :	for <name2> in count and <name5> [ <name2> ] == <name6> :
<name5> の <name3> に対応する値、もし存在しなければ <val2> を <name6> とする	<name6> = <name5> . <name3> . get ( <val2> )	<name6> = <name5> . <name3> . get ( <val2> )
<name5> が <name3> の <name4> と等しいとき、	if <name5> == <name3> . <name4> :	list ( <name5> == <name3> . <name4> ) :
<name2> の <name1> の <name6> 番目のとき、	if <name2> . <name1> [ <name6> ] :	if <name2> . <name1> [ <name6> ] :
<val5> から <name2> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す <blk> <name6> に <name1> を加えた値を <name3> で割った余りを <name6> とする </blk>	for <name3> in range ( <val5> , <name2> + <val4> ) : <blk> <name6> = ( <name6> + <name1> ) % <name3> </blk>	for <name3> in range ( <val5> , <name2> + <val4> ) : <blk> <name6> = ( <name6> + <name1> ) % <name3> </blk>
( <name2> に <name6> を加えた値に <val3> を加えた値、 <name1> に <name5> を加えた値に <val3> を加えた値 ) の組を返す	return ( <name2> + <name6> + <val3> , <name1> + <name5> + <val3> )	yield ( <name2> + <name6> + <val3> , <name1> + <name5> + <val3> )
<name1> をパラメータとして <name1> の順序数から <name4> を引いた値を返す関数を <name6> とする	<name6> = lambda <name1> : ord ( <name1> ) - <name4>	<name4> = lambda <name1> : ord ( <name1> ) - <name4>
<name3> の長さが <val5> 以上の間、次を繰り返す	while len ( <name3> ) >= <val5> :	del ( len ( <name3> ) >= <val5> ) :
<val1> の <name6> 乗を <name3> とする	<name3> = <val1> ** <name6>	<name3> = <val1> ** <name6>
ソートされた順序を保ったまま <name5> に <val4> を加えた値を <name1> に挿入できる位置を <name6> とする	<name6> = bisect . bisect_left ( <name1> , <name5> + <val4> )	<name6> = bisect . bisect_left ( <name1> , <name5> + <val4> )
0 から <name6> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の <val1> 番目から、つまり末尾までの部分列の列を <name4> とする	<name4> = [ input ( ) . split ( ) [ <val1> : ] for <name3> in range ( <name6> ) ]	<name4> = [ input ( ) . split ( ) [ <val1> : ] for <name3> in range ( <name6> ) ]
<name5> に <name5> から <val1> を引いた値を掛けた値を <val3> で割った値の整数値を <name6> の <name4> にする	<name6> . <name4> = int ( <name5> * ( <name5> - <val1> ) / <val3> )	<val6> . <name4> = int ( <name5> * ( <name5> - <val1> ) / <val3> )
( <name4> 、 <name3> ) の組が <name2> に含まれなくまたは <name2> の ( <name4> 、 <name3> ) の組番目が <name6> より大きいとき、	if ( <name4> , <name3> ) not in <name2> or <name2> [ ( <name4> , <name3> ) ] > <name6> :	for <name2> in ( <name4> , <name3> ) not in <name2> or <name2> [ ( <name4> , <name3> ) ] > <name6> :
<name6> が <name5> 以下かつ <name3> が <name1> 以下のとき、	if <name6> <= <name5> and <name3> <= <name1> :	for <name6> <= <name5> and <name3> <= <name1> :
<name6> の末尾の <val2> 番目を <name5> とする	<name5> = <name6> [ - 1 ] [ <val2> ]	<name5> = <name6> [ - <val2> ] [ <val2> ]
<name1> から <name4> を引いた値の <val6> 乗に <name3> から <name5> を引いた値の <val6> 乗を加えた値を返す	return ( <name1> - <name4> ) ** <val6> + ( <name3> - <name5> ) ** <val6>	<val2> return ( <name1> - <name4> ) ** <val6> + ( <name3> - <name5> ) ** <val6>
( <val6> 、 <val4> 、 <val5> 、 <val4> 、 <val4> 、 <val5> 、 <val1> 、 <val5> 、 <val5> 、 <val1> 、 <val2> 、 <val1> 、 <val1> 、 <val2> 、 <val3> 、 <val2> ) の組	( <val6> , <val4> , <val5> , <val4> , <val4> , <val5> , <val1> , <val5> , <val5> , <val1> , <val2> , <val1> , <val1> , <val2> , <val3> , <val2> )	<val2> , <val5> , <val4> , <val5> , <val1> , <val5> , <val1> , <val5> , <val1> , <val2> , <val1> , <val2> , <val3> , <val2> )
<name1> . <name4> ( <name2> , <name3> )	<name1> . <name4> ( <name2> , <name3> )	<name4> . <name4> ( <name2> , <name3> )
<name1> を <name3> の、つまり先頭から、つまり末尾までの部分列にする	<name3> [ : ] = <name1>	<name1> [ : ] = <name1>
<name2> の <name3> を <name5> の <name3> にする	<name5> . <name3> = <name2> . <name3>	<name2> . <name3> = <name2> . <name3>
<name4> ( <name2> , <name1> ) を出力する	print ( <name4> ( <name2> , <name1> ) )	print ( <name4> ( <name2> , <name1> ) )
<name6> の末尾に ( <val4> に [ MASK ] を加えた値、 <val5> に [ MASK ] を加えた値 ) の組を追加する	<name6> . append ( ( + <val4> , + <val5> ) )	<name6> . append ( ( + <val4> , <val5> ) + <val5> )
<name5> のとき <val4> 、そうでなければ <val3> を <name5> とする	<name5> = <val4> if <name5> else <val3>	<name5> = <val4> if <name5> else <val3>
0 から <name3> に <val5> を掛けた値から <val4> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name3> * <val5> - <val4> ) :	: for <name1> in range ( <name3> * <val5> - <val4> ) :
<name4> の <name5> 番目が <val2> と等しいとき、	if <name4> [ <name5> ] == <val2> :	: if <name4> [ <name5> ] == <val2> :
<name5> の末尾に <val2> に ( ( <name4> ( <name6> [ <name3> ] ) * <name1> - <name5> ( <name6> [ <name3> ] ) * <name2> ) + ( <name2> * <name5> ( <name6> [ <name3> + <val2> ] ) - <name1> * <name4> ( <name6> [ <name3> + <val2> ] ) ) ) を ( <name6> [ <name3> + <val2> ] - <name6> [ <name3> ] ) で割った値を加えた値に <val4> を掛けた値の整数値を追加する	<name5> . append ( int ( ( <val2> + ( ( <name4> ( <name6> [ <name3> ] ) * <name1> - <name5> ( <name6> [ <name3> ] ) * <name2> ) + ( <name2> * <name5> ( <name6> [ <name3> + <val2> ] ) - <name1> * <name4> ( <name6> [ <name3> + <val2> ] ) ) ) / ( <name6> [ <name3> + <val2> ] - <name6> [ <name3> ] ) ) * <val4> ) )	<name4> . append ( <val2> * ( ( ( <name4> ( <name6> [ <name3> ] ) * <name1> - <name5> ( <name6> [ <name3> ] ) * <name2> + ( <name5> ( <name6> [ <name3> + <val2> ] ) - <name1> ) * <name4> ( <name6> [ <name3> + <val2> ] ) ) / <val2> ) * ( ( <name6> [ <name3> + <val2> ] ) ) ) / <val4> * ( <name3> [ <val2> ] ) )
<name6> の <name1> 番目の長さが <val5> より大きいとき、	if len ( <name6> [ <name1> ] ) > <val5> :	> len ( <name6> [ <name1> ] ) > <val5> :
<name1> 、 <name6> を <name1> で割った余りを <name6> 、 <name1> とする	<name6> , <name1> = <name1> , <name6> % <name1>	<name2> , <name1> = <name1> , <name6> % <name1>
<name6> の <name3> を <name6> の <name5> にする	<name6> . <name5> = <name6> . <name3>	<name3> . <name5> = <name6> . <name3>
<name6> の <name6> の最大値と等しい要素の最初の位置を <name3> とする	<name3> = <name6> . index ( max ( <name6> ) )	<name3> = <name6> . index ( max ( <name6> ) )
<name4> の <name5> の <name1> 番目の末尾に <name3> を追加する	<name4> . <name5> [ <name1> ] . append ( <name3> )	<name2> . <name4> [ <name5> . <name1> ] . append ( <name3> )
0 から <name2> 未満までの数列の各要素を <name1> とし、 -1 の列を <name5> の <name6> にする	<name5> . <name6> = [ - 1 for <name1> in range ( <name2> ) ]	) <name5> . <name6> = [ - 1 for <name1> in range ( <name2> ) ]
<name5> の <name2> 番目の <name6> 番目を <name5> の <name2> に <val3> を加えた値番目の <name6> 番目にする	<name5> [ <name2> + <val3> ] [ <name6> ] = <name5> [ <name2> ] [ <name6> ]	<name5> [ <name2> + <val3> ] [ <name6> ] = <name5> [ <name2> ] [ <name6> ]
<name4> の平方根を <name1> とする	<name1> = math . sqrt ( <name4> )	<name1> = math . sqrt ( <name4> )
( <name6> から <name5> を引いた値、 <name2> から <name4> を引いた値 ) の組を <name1> とする	<name1> = ( <name6> - <name5> , <name2> - <name4> )	<name1> = ( <name6> - <name5> , <name2> - <name4> )
<name1> と <name6> の最大公約数を <name4> とする	<name4> = gcd ( <name1> , <name6> )	<name4> = math . gcd ( <name1> , <name6> )
<name5> が <name2> に ( <name6> + <name1> ) を掛けた値に <name6> を加えた値から <name4> を引いた値を <val3> で割った値以下のとき、	if <name5> <= ( <name2> * ( <name6> + <name1> ) + <name6> - <name4> ) / <val3> :	isinstance ( <name5> <= <name2> * ( <name6> + <name1> ) + <name6> - <name4> ) / <val3> :
<name3> を <name2> の <name6> に <val5> を加えた値番目に <name2> の <name6> に <val4> を加えた値番目の整数値を掛けた値だけ増加させる	<name3> += <name2> [ <name6> + <val5> ] * int ( <name2> [ <name6> + <val4> ] )	<name2> += <name2> [ <name6> + <val5> ] * int ( <name2> [ <name6> + <val4> ] )
( <val1> 、 <val4> 、 <val6> 、 <val5> 、 <val3> ) からなる列を <name2> とする	<name2> = [ <val1> , <val4> , <val6> , <val5> , <val3> ]	<name2> = [ <val1> , <val4> , <val6> , <val5> , <val3> ]
<name3> の末尾に ( <name5> に <name1> に <name6> の余弦を掛けた値を加えた値、 <name4> に <name1> に <name6> の正弦を掛けた値を加えた値 ) の組を追加する	<name3> . append ( ( <name5> + <name1> * cos ( <name6> ) , <name4> + <name1> * sin ( <name6> ) ) )	( <name3> . append ( ( <name5> + <name1> * cos ( <name6> ) , <name4> + <name1> * sin ( <name6> ) ) ) )
<name2> の末尾に <name6> の <name1> を追加する	<name2> . append ( <name6> . <name1> )	<name2> . append ( <name6> . <name1> )
<name5> ( <name1> , <name3> ) が <val2> と等しくかつ <name4> ( <name1> , <name3> ) が <val2> より小さいかどうかを返す	return <name5> ( <name1> , <name3> ) == <val2> and <name4> ( <name1> , <name3> ) < <val2>	lambda <name5> ( <name1> , <name3> ) == <val2> and <name4> ( <name1> , <name3> ) < <val2>
<name1> の <val2> 番目を出力する	print ( <name1> [ <val2> ] )	print ( <name1> [ <val2> ] )
<name3> を <name6> に <val5> を掛けた値だけ増加させる	<name3> += <name6> * <val5>	( <name3> += <name6> * <val5> )
<name4> の <name6> を順に <name3> として、繰り返す	for <name3> in <name4> . <name6> :	for <name3> in <name4> . <name6> :
<name6> ( <name5> , <name4> ( <name1> [ <val2> ] ) ) が、つまり未定値と等しいとき、 <blk> <val3> を出力する </blk>	if <name6> ( <name5> , <name4> ( <name1> [ <val2> ] ) ) is not None : <blk> print ( <val3> ) </blk>	<blk> if <name6> ( <name5> , <name4> ( <name1> [ <val2> ] ) ) == None : <blk> print ( <val3> ) </blk>
<name2> が <name4> 以下かどうかが <name1> 以下のとき、	if <name2> <= <name4> <= <name1> :	list if <name2> <= <name4> <= <name1> :
<val6> を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <val6>	( <name5> [ <val1> ] = <val6> )
( <name1> に <name5> に <name6> を掛けた値を加えた値、 <name1> から <name5> に <name6> を掛けた値を引いた値 ) の組を返す	return ( <name1> + <name5> * <name6> , <name1> - <name5> * <name6> )	insort ( <name1> + <name5> * <name6> , <name1> - <name5> * <name6> )
<val5> を <name6> の ( <name4> 、 <name3> の組、 <val2> ) の組番目にする	<name6> [ ( <name4> , tuple ( <name3> ) , <val2> ) ] = <val5>	<name4> [ ( <name4> , tuple ( <name3> ) , <val2> ) ] = <val5>
<val2> に <name4> を掛けた値を <name6> で割った余りを <name5> とする	<name5> = ( <val2> * <name4> ) % <name6>	<name5> = <val2> * <name4> % <name6>
<name3> を <name4> ( <val6> , <val1> ) で割った余りを <name3> とする	<name3> = <name3> % <name4> ( <val6> , <val1> )	else = <name3> % <name4> ( <val6> , <val1> )
<name2> の <name6> 番目の末尾の整数値を返す	return int ( <name2> [ <name6> ] [ - 1 ] )	assert int ( <name2> [ <name6> ] [ - 1 ] )
<name3> の <name2> に対応する値、もし存在しなければ <val5> を <name6> とする	<name6> = <name3> . <name2> . get ( <val5> )	<name6> = <name3> . <name2> . get ( <val5> )
<name6> . <name2> ( <name2> ) を出力する	print ( <name6> . <name2> ( <name2> ) )	print ( <name6> . <name2> ( <name2> ) )
<name4> の先頭の先頭を取り出した値を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name4> [ 0 ] . pop ( )	<name3> , <name2> = <name4> [ 0 ] . pop ( )
<name5> ( <name1> , ( <name4> + <name6> , <val3> , <name2> ) )	<name5> ( <name1> , ( <name4> + <name6> , <val3> , <name2> ) )	<name5> ( <name1> , ( <name4> + <name6> , <val3> , <name2> ) )
<name6> の <name4> 番目が <name3> の <name2> 番目より大きいとき、	if <name6> [ <name4> ] > <name3> [ <name2> ] :	> <name6> [ <name4> ] > <name3> [ <name2> ] :
\ <name6> ( <val5> ) \	\ <name6> ( <val5> ) \	<val1> <name6> ( <val5> ) \
<name1> が ( <val5> ) からなる列と等しいとき、	if <name1> == [ <val5> ] :	[ if <name1> == [ <val5> ] :
<name1> を <val4> で割った商を <name3> とする	<name3> = <name1> // <val4>	( <name3> = <name1> // <val4> )
0 から <name3> の <name1> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> . <name1> ) :	continue for <name6> in range ( <name3> . <name1> ) :
( ( <name3> ) からなる列の 0 から <name6> に <val2> を加えた値未満までの数列の各要素を <name1> とし、 <name5> に <val2> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <name3> ] * [ ( <name5> + <val2> ) for <name1> in range ( <name6> + <val2> ) ] ]	<name4> = [ [ <name3> ] * [ ( <name5> + <val2> ) for <name1> in range ( <name6> + <val2> ) ] ]
<name2> の <name4> 番目が <name6> と等しいとき、	if <name2> [ <name4> ] == <name6> :	continue [ <name4> ] == <name6> :
<name2> [ <val1> ] が <val6> と等しくかつ <name2> [ <val6> ] が <val5> と等しくかつ <name2> の <val3> 番目が <val4> と等しくかつ <name2> の <val2> 番目が <val1> と等しくかつ <name2> の <val6> 番目が <val5> と等しいとき、	if <name2> [ <val1> ] == <val6> and <name2> [ <val6> ] == <val5> and <name2> [ <val3> ] == <val4> and <name2> [ <val2> ] == <val1> and <name2> [ <val6> ] == <val5> :	for <name2> in <name2> [ <val1> ] == <val6> and <name2> [ <val6> ] == <val5> and <name2> [ <val3> ] == <val4> and <name2> [ <val2> ] == <val1> and <name2> [ <val6> ] == <val5> :
<name4> . <name2> ( <name6> * <name1> )	<name4> . <name2> ( <name6> * <name1> )	<name2> . <name2> ( <name6> * <name1> )
<name4> の <val3> 番目から <name5> を引いた値の <val1> 乗が <name2> 以上のとき、	if ( <name4> [ <val3> ] - <name5> ) ** <val1> >= <name2> :	>= ( <name4> [ <val3> ] - <name5> ) ** <val1> >= <name2> :
<name6> の整数値に <name1> の整数値を加えた値を <name2> とする	<name2> = int ( <name6> ) + int ( <name1> )	<name2> = int ( <name6> ) + int ( <name1> )
<name4> を <val3> で分割した字句列の先頭を <name4> とする	<name4> = <name4> . split ( <val3> ) [ 0 ]	<name4> = <name4> . split ( <val3> ) [ 0 ]
<name5> を <name4> で割った余りが <val2> と等しいとき、	if <name5> % <name4> == <val2> :	: if <name5> % <name4> == <val2> :
<name3> ( <name1> ( <name6> // <val2> ) , <name1> ( <name6> - <name6> // <val2> ) ) の最大値を一旦、返す	yield max ( <name3> ( <name1> ( <name6> // <val2> ) , <name1> ( <name6> - <name6> // <val2> ) ) )	<name2> , yield max ( <name3> ( <name1> ( <name6> // <val2> ) , <name1> ( <name6> - <val2> ) ) )
0 から <name4> に <val5> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name4> + <val5> ) :	for <name2> in range ( <name4> + <val5> ) :
<name2> が <val6> より小さくかつ <name1> の <name4> 番目の <name5> 番目のとき、 <blk> <name3> の末尾に <name2> の <name4> 番目の <name5> 番目を追加する </blk>	if <name2> < <val6> and <name1> [ <name4> ] [ <name5> ] : <blk> <name3> . append ( <name2> [ <name4> ] [ <name5> ] ) </blk>	if <name2> < <val6> and <name1> [ <name4> ] [ <name5> ] : <blk> <name3> . append ( <name2> [ <name4> ] [ <name5> ] ) </blk>
未定値を <name5> の <name6> にする	<name5> . <name6> = None	<name1> . <name6> = None
<name1> の <name6> と等しい要素の最初の位置を <name3> とする	<name3> = <name1> . index ( <name6> )	<name3> = <name1> . index ( <name6> )
( <name6> 、 <name4> 、 <name1> 、 <name5> ) からなる列を順に <name3> として、繰り返す	for <name3> in [ <name6> , <name4> , <name1> , <name5> ] :	in [ <name6> , <name4> , <name1> , <name5> ] :
<name1> の末尾に <name4> を <val5> で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を追加する	<name1> . append ( [ int ( <name3> ) for <name3> in <name4> . split ( <val5> ) ] )	<name1> . append ( [ int ( <name3> ) for <name3> in <name4> . split ( <val5> ) ] )
<name5> ( <name4> , <name1> ) を展開し、それぞれ <name2> 、 <name3> 、 <name6> とする	<name2> , <name3> , <name6> = <name5> ( <name4> , <name1> )	<name6> , <name2> , <name3> , <name6> = <name5> ( <name4> , <name1> )
<name2> ( <name3> , <name3> [ <val4> ] , <name1> )	<name2> ( <name3> , <name3> [ <val4> ] , <name1> )	set ( <name2> ( <name3> , <name3> [ <val4> ] , <name1> ) )
ソートされた順序を保ったまま <name2> を <name5> に挿入できる位置を <name6> とする	<name6> = bisect . bisect_left ( <name5> , <name2> )	<name6> = bisect . bisect_left ( <name5> , <name2> )
入力された文字列を空白で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name4> 、 <name1> 、 <name2> とする	<name4> , <name1> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]	<name4> , <name1> , <name2> = [ int ( <name5> ) for <name5> in input ( ) . split ( ) ]
<name4> の末尾に ( <name2> 、 <name3> 、 <name5> ) からなる列をソートした列を追加する	<name4> . append ( sorted ( [ <name2> , <name3> , <name5> ] ) )	<name4> . append ( sorted ( [ <name2> , <name3> , <name5> ] ) )
<name5> の先頭の <name4> 番目を返す	return <name5> [ 0 ] [ <name4> ]	yield <name5> [ 0 ] [ <name4> ]
<name3> ( <val4> , <name5> ) のとき、	if <name3> ( <val4> , <name5> ) :	continue <name3> ( <val4> , <name5> ) :
<name3> から <name4> を引いた値が <val5> 以上のとき、	if <name3> - <name4> >= <val5> :	if <name3> - <name4> >= <val5> :
<name6> の <name3> の <name1> 番目を <val4> だけ増加させる	<name6> . <name3> [ <name1> ] += <val4>	<name4> . <name3> [ <name1> ] += <val4>
<name1> の <name6> 番目の末尾に ( <name5> 、 <name4> ) の組を追加する	<name1> [ <name6> ] . append ( ( <name5> , <name4> ) )	not <name1> [ <name6> ] . append ( ( <name5> , <name4> ) )
<name3> を入力された文字列の整数値倍にする	<name3> *= int ( input ( ) )	<name3> *= int ( input ( ) )
0 から <name1> から <name6> を引いた値に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> - <name6> + <val2> ) :	range for <name5> in range ( <name1> - <name6> + <val2> ) :
<name2> が <name1> から <val6> を引いた値と等しくないとき、	if <name2> != ( <name1> - <val6> ) :	raise <name2> != <name1> - <val6> :
<val1> の <val2> 乗を <name5> とする	<name5> = <val1> ** <val2>	else = <val1> ** <val2>
( ( -1 、 <val1> ) の組、 ( <val1> 、 -1 ) の組、 ( <val3> 、 <val1> ) の組、 ( <val1> 、 <val3> ) の組 ) からなる列の各要素を <name5> 、 <name4> とし、 ( <name2> に <name5> を加えた値、 <name6> に <name4> を加えた値 ) の組の列を追加して <name1> を拡張する	<name1> . extend ( [ ( <name2> + <name5> , <name6> + <name4> ) for <name5> , <name4> in [ ( - <val3> , <val1> ) , ( <val1> , - <val3> ) , ( <val3> , <val1> ) , ( <val1> , <val3> ) ] ] )	<name1> . add ( [ ( <name2> + <name5> , <name6> + <name4> ) , [ ( <name2> + <name5> , <name4> ) for <name5> , <name4> in [ ( - <val1> , <val1> ) , ( <val3> , <val1> ) , ( <val1> , <val3> ) ] , [ <val1> , <val3> ) ] ] )
<name1> の x 座標に <name5> の y 座標を掛けた値から <name1> の y 座標に <name5> の x 座標を掛けた値を引いた値を返す	return <name1> . x * <name5> . y - <name1> . y * <name5> . x	x return <name1> . x * <name5> . y - <name1> . y * <name5> . x
<name6> を <val4> を <name3> だけ左シフトした値との排他的論理和にする	<name6> ^ = <val4> << <name3>	( <name6> ^ = <val4> << <name3> )
0 から <name4> 未満までの数列の各要素を <name5> とし、 <name6> の <name5> 番目のときの <name5> の列を <name1> とする	<name1> = [ <name5> for <name5> in range ( <name4> ) if <name6> [ <name5> ] ]	<name4> = [ <name5> for <name5> in range ( <name4> ) if <name6> [ <name5> ] ]
<name3> の <name4> が <name5> の <name4> より大きいとき ( <name3> の <name4> 、 <name5> の <name4> ) の組、そうでなければ ( <name5> の <name4> 、 <name3> の <name4> ) の組を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = ( <name3> . <name4> , <name5> . <name4> ) if <name3> . <name4> > <name5> . <name4> else ( <name5> . <name4> , <name3> . <name4> )	<name3> , <name1> , <name2> = ( <name3> . <name4> , <name5> . <name4> ) if <name3> . <name4> > <name5> . <name4> else ( <name5> . <name4> , <name3> . <name4> )
<name6> を <name5> だけ右シフトした値と <val4> の論理積が <val4> と等しいとき、	if <name6> >> <name5> & <val4> == <val4> :	for ( <name6> >> <name5> ) & <val4> == <val4> :
<name3> の <name5> の <val2> 番目、 <name3> の <name5> の <val1> 番目、 <name3> の <name5> の <val6> 番目、 <name3> の <name5> の <val4> 番目を <name3> の <name5> の <val4> 番目、 <name3> の <name5> の <val2> 番目、 <name3> の <name5> の <val1> 番目、 <name3> の <name5> の <val6> 番目とする	<name3> . <name5> [ <val4> ] , <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val6> ] = <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val4> ]	<name4> . <name5> [ <val4> ] , <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val6> ] = <name3> . <name5> [ <val2> ] , <name3> . <name5> [ <val1> ] , <name3> . <name5> [ <val6> ] , <name3> . <name5> [ <val4> ]
<name5> と <name4> の最小公倍数と <name6> の最小公倍数を返す	return lcm ( lcm ( <name5> , <name4> ) , <name6> )	assert lcm ( lcm ( <name5> , <name4> ) , <name6> )
<name1> ( <name4> , <name5> , <name3> ) を <name2> とする	<name2> = <name1> ( <name4> , <name5> , <name3> )	dict = <name1> ( <name4> , <name5> , <name3> )
<name4> が <name2> 以下かどうかが <name3> 以下かつ ( <name2> - <name4> ) に ( <name5> - <name6> ) を掛けた値から ( <name1> - <name6> ) に ( <name3> - <name4> ) を掛けた値を引いた値の絶対値が <val4> <name2> <val3> より小さいとき、	if <name4> <= <name2> <= <name3> and abs ( ( <name2> - <name4> ) * ( <name5> - <name6> ) - ( <name1> - <name6> ) * ( <name3> - <name4> ) ) < <val4> <name2> <val3> :	list ( <name4> <= <name2> <= <name3> and ( <name2> - <name4> ) * ( <name5> - <name6> ) - ( <name1> - <name6> ) * ( <name1> - <name3> - <name4> ) ) < <val4> <name2> <val3> :
<name4> の末尾に <val5> の <name2> 乗を追加する	<name4> . append ( <val5> ** <name2> )	<name4> . append ( <val5> ** <name2> )
<name3> が <name6> 以下のとき <name3> 、そうでなければ <val1> を出力する	print ( <name3> if <name3> <= <name6> else <val1> )	print ( <name3> if <name3> <= <name6> else <val1> )
<name6> ( <name5> . <name1> , <name3> )	<name6> ( <name5> . <name1> , <name3> )	set ( <name6> ( <name5> . <name1> , <name3> ) )
偽を <name2> の <name3> 番目にする	<name2> [ <name3> ] = False	( <name2> [ <name3> ] = False )
<name2> の <name4> 番目が <name5> と等しいとき、 <blk> <val6> を出力する </blk>	if <name2> [ <name4> ] == <name5> : <blk> print ( <val6> ) </blk>	continue if <name2> [ <name4> ] == <name5> : <blk> print ( <val6> ) </blk>
<name1> の総和を <name2> とする	<name2> = sum ( <name1> )	<name2> = sum ( <name1> )
<name1> を <name6> から <name2> の <name5> 番目を引いた値の絶対値、 <name6> から <name2> の <name5> から <val3> を引いた値番目を引いた値の絶対値の最小値だけ増加させる	<name1> += min ( abs ( <name6> - <name2> [ <name5> ] ) , abs ( <name6> - <name2> [ <name5> - <val3> ] ) )	<name1> += min ( abs ( <name6> - <name2> [ <name5> ] ) , abs ( <name6> - <name2> [ <name5> - <val3> ] ) )
<name1> の <name5> から <val4> を引いた値番目の <name2> 番目に <val4> を加えた値、 <name1> の <name5> 番目の <name2> から <val4> を引いた値番目に <val4> を加えた値、 <name1> の <name5> から <val4> を引いた値番目の <name2> から <val4> を引いた値番目に <name6> を加えた値の最小値を <name1> の <name5> 番目の <name2> 番目にする	<name1> [ <name5> ] [ <name2> ] = min ( <name1> [ <name5> - <val4> ] [ <name2> ] + <val4> , <name1> [ <name5> ] [ <name2> - <val4> ] + <val4> , <name1> [ <name5> - <val4> ] [ <name2> - <val4> ] + <name6> )	<name1> [ <name5> ] [ <name2> ] = min ( <name1> [ <name5> - <val4> ] [ <name2> ] + <val4> , <name1> [ <name5> ] [ <name2> - <val4> ] + <val4> , <name1> [ <name5> - <val4> ] [ <name2> - <val4> ] + <name6> )
<name2> の <name5> が <name1> より小さいとき、	if <name2> . <name5> < <name1> :	if <name2> . <name5> < <name1> :
<name1> ( <name2> , <name6> , <name3> ) を <name5> で割った値を <name4> とする	<name4> = <name1> ( <name2> , <name6> , <name3> ) / <name5>	<name4> = <name1> ( <name2> , <name6> , <name3> ) / <name5>
<name4> を <name1> の <val2> 番目から <name1> の先頭を引いた値だけ減少させる	<name4> -= <name1> [ <val2> ] - <name1> [ 0 ]	( <name4> -= <name1> [ <val2> ] - <name1> [ <val2> ] )
( 、つまり真 ) からなる列の <name4> を <val3> で割った商回分の列を <name2> とする	<name2> = [ True ] * ( <name4> // <val3> )	<name2> = [ True ] * ( <name4> // <val3> )
<name2> . <name4> ( <name2> ) を <name2> とする	<name2> = <name2> . <name4> ( <name2> )	<name2> = <name2> . <name4> ( <name2> )
 を間に入れて <name3> . <name2> ( ) の各要素を <name6> とし、 <name6> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name6> ) for <name6> in <name3> . <name2> ( ) ] ) )	print ( '' . join ( [ str ( <name6> ) for <name6> in <name3> . <name2> ( ) ] ) )
<name1> の <name5> に対応する値、もし存在しなければ <val2> を <name6> とする	<name6> = <name1> . <name5> . get ( <val2> )	<name6> = <name1> . <name5> . get ( <val2> )
<name1> を ( <name4> ( <name3> [ <val6> ] , <name2> ) ) からなる列だけ増加させる	<name1> += [ <name4> ( <name3> [ <val6> ] , <name2> ) ]	<name2> += [ <name4> ( <name3> [ <val6> ] , <name2> ) ]
<name3> 、 <name1> を <name5> 、 <name3> とする	<name5> , <name3> = <name3> , <name1>	( <name5> , <name3> = <name3> , <name1> )
<val3> を <name5> の先頭の <val1> 番目にする	<name5> [ <val1> ] [ <val1> ] = <val3>	( <name5> [ <val1> ] [ <val1> ] = <val3> )
<name6> が <name1> と等しいとき、	if ( <name6> == <name1> ) :	: if <name6> == <name1> :
<name1> を <name1> 倍にする	<name1> *= <name1>	( <name1> *= <name1> )
<name2> の <name4> が、つまり未定値と等しくかつ <name2> の <name6> が、つまり未定値と等しいとき、	if <name2> . <name4> == None and <name2> . <name6> == None :	. if <name2> . <name4> is not None and <name2> . <name6> is not None :
入力された文字列が <val2> と等しいとき <val3> 、そうでなければ <val6> を出力する	print ( <val3> if input ( ) == <val2> else <val6> )	else = <val3> if input ( ) == <val2> else <val6> )
<name5> . <name3> ( ) を <name4> とする	<name4> = <name5> . <name3> ( )	<name4> = <name5> . <name3> ( )
<name5> が <name3> に含まれるとき、 <blk> <val1> を出力する </blk>	if <name5> in <name3> : <blk> print ( <val1> ) </blk>	list ( <name5> in <name3> : <blk> print ( <val1> ) </blk>
<name5> から <name1> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <name1> ) :	: for <name2> in range ( <name5> , <name1> ) :
<name4> に <name2> を加えた値を <val5> で割った余りが <val3> より大きいとき、	if ( <name4> + <name2> ) % <val5> > <val3> :	continue ( <name4> + <name2> ) % <val5> > <val3> :
<val2> から <name3> に <val5> を掛けた値を引いた値から <name6> に <val4> を掛けた値を引いた値から <name1> を引いた値を <name1> とする	<name1> = <val2> - <name3> * <val5> - <name6> * <val4> - <name1>	<name1> = <val2> - <name3> * <val5> - <name6> * <val4> - <name1>
<name1> 、 <name6> に <name5> を加えた値を <name4> から <name2> を引いた値で割った値の最大値を <name1> とする	<name1> = max ( <name1> , ( <name6> + <name5> ) / ( <name4> - <name2> ) )	<name1> = max ( <name1> , ( <name6> + <name5> ) / ( <name4> - <name2> ) )
<name5> の <name2> 番目を深くコピーした結果を <name1> とする	<name1> = copy . deepcopy ( <name5> [ <name2> ] )	<name1> = copy . deepcopy ( <name5> [ <name2> ] )
( ( <val1> ) からなる列の <val1> から <name2> 未満までの数列の各要素を <name6> とし、 <name2> に <val5> を加えた値の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val1> ] * [ ( <name2> + <val5> ) for <name6> in range ( <name2> ) ] ]	<name4> = [ [ <val1> ] * [ ( <name2> + <val5> ) for <name6> in range ( <name2> ) ] ]
<name3> の <name1> の <name4> 番目を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = <name3> . <name1> [ <name4> ]	<name2> , <name5> , <name2> = <name3> . <name1> [ <name4> ]
<name3> の <name5> 番目を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name3> [ <name5> ]	dict , <name1> , <name2> = <name3> [ <name5> ]
入力された文字列を空白で分割した字句列を展開し、それぞれ <name5> の <name3> 番目の先頭、 <name5> の <name3> 番目の <val4> 番目とする	<name5> [ <name3> ] [ 0 ] , <name5> [ <name3> ] [ <val4> ] = input ( ) . split ( )	<name4> [ <name3> ] [ 0 ] , <name5> [ <name3> ] [ <val4> ] = input ( ) . split ( )
( <name3> の <name4> の先頭、 <name3> の <name4> の <val6> 番目、 <name3> の <name4> の <val1> 番目、 <name3> の <name4> の <val5> 番目、 <name3> の <name4> の <val2> 番目、 <name3> の <name4> の <val3> 番目 ) からなる列を <name3> の <name4> にする	<name3> . <name4> = [ <name3> . <name4> [ 0 ] , <name3> . <name4> [ <val6> ] , <name3> . <name4> [ <val1> ] , <name3> . <name4> [ <val5> ] , <name3> . <name4> [ <val2> ] , <name3> . <name4> [ <val3> ] ]	<name2> . <name4> = [ <name3> . <name4> [ 0 ] , <name3> . <name4> [ <val6> ] , <name3> . <name4> [ <val1> ] , <name3> . <name4> [ <val5> ] , <name3> . <name4> [ <val2> ] , <name3> . <name4> [ <val3> ] ]
文字列 <name2> を評価した値が <val6> と等しいとき、	if eval ( <name2> ) == <val6> :	list eval ( <name2> ) == <val6> :
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値から <val5> を引いた値の列を展開し、それぞれ <name6> 、 <name2> 、 <name3> 、 <name1> とする	<name6> , <name2> , <name3> , <name1> = [ int ( <name4> ) - <val5> for <name4> in input ( ) . split ( ) ]	<name2> , <name3> , <name1> = [ int ( <name4> ) - <val5> for <name4> in input ( ) . split ( ) ]
<val4> が <name6> 以下かどうかが <name3> より小さくなくまたは <val4> が <name1> 以下かどうかが <name3> より小さくないとき、	if not <val4> <= <name6> < <name3> or not <val4> <= <name1> < <name3> :	if ( not <val4> <= <name6> < <name3> ) or ( not <val4> <= <name1> < <name3> ) :
<name2> の末尾に <name6> に <name5> を加えた値を追加する	<name2> . append ( <name6> + <name5> )	<name4> . append ( <name6> + <name5> )
<name6> の <name4> から <name2> を引いた値番目に <name3> を加えた値、 <name6> の <name4> 番目の最大値を <name6> の <name4> 番目にする	<name6> [ <name4> ] = max ( <name6> [ <name4> - <name2> ] + <name3> , <name6> [ <name4> ] )	<val6> [ <name4> ] = max ( <name6> [ <name4> - <name2> ] + <name3> , <name6> [ <name4> ] )
0 から <name4> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の列を <name3> とする	<name3> = [ input ( ) for <name6> in range ( <name4> ) ]	<name3> = [ input ( ) for <name6> in range ( <name4> ) ]
<val5> を <name3> に <val6> を加えた値で割った余りを出力する入力された文字列	print ( <val5> % ( <name3> + <val6> ) ) input ( )	print ( <val5> % ( <name3> + <val6> ) ) input ( )
<name5> を <name2> の <name5> の <val6> 番目番目にする	<name2> [ <name5> [ <val6> ] ] = <name5>	<name4> [ <name2> [ <name5> [ <val6> ] ] = <name5>
<name5> の末尾に ( <name6> 、 <name2> ) の組を追加する	<name5> . append ( ( <name6> , <name2> ) )	<name4> . append ( ( <name6> , <name2> ) )
\ <val5> を間に入れて <name1> の各要素に整数を適用した列を連結した文字列を出力する\	\ print ( <val5> . join ( map ( str , <name1> ) ) ) \	for print ( <val5> . join ( map ( str , <name1> ) ) ) \
<val4> 、 <name5> の長さから <val6> を引いた値を <name2> 、 <name3> とする	<name2> , <name3> = <val4> , len ( <name5> ) - <val6>	<name2> , <name3> = <val4> , len ( <name5> ) - <val6>
<val2> を <name1> の <name4> 番目の <name6> 番目にする	<name1> [ <name4> ] [ <name6> ] = <val2>	<name1> [ <name4> ] [ <name6> ] = <val2>
Monday を出力する	print ( 'Monday' )	dict print ( 'Data ' )
<name5> を <val1> で割った値に <name3> を <val2> で割った余りを掛けた値に <name5> に <val2> を掛けた値に <name3> を <val2> で割った余りが <val4> と等しいかどうかを掛けた値を加えた値を <name6> とする	<name6> = ( <name5> / <val1> ) * ( <name3> % <val2> ) + ( <name5> * <val2> ) * ( <name3> % <val2> == <val4> )	<name6> = <name5> / <val1> * ( <name3> % <val2> ) + ( <name5> * <val2> ) * ( <name3> % <val2> ) == <val4> )
入力された文字列を空白で分割した字句列の各要素に <name1> をパラメータとして <name1> の整数値を返す関数を適用した列の集合の辞書カウンタを <name2> とする	<name2> = collections . Counter ( set ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) ) )	<name2> = Counter ( set ( map ( lambda <name1> : int ( <name1> ) , input ( ) . split ( ) ) ) )
<name6> が <name3> より大きい間、次を繰り返す	while <name6> > <name3> :	del <name6> > <name3> :
入力された文字列を空白で分割した字句列を展開し、それぞれ <name4> 、 <name2> 、 <name6> とする	<name4> , <name2> , <name6> = input ( ) . split ( )	<name3> , <name2> , <name6> = input ( ) . split ( )
<name2> のとき、 <blk> 空行を出力する </blk>	if <name2> : <blk> print ( ) </blk>	for <name2> in <name2> : <blk> print ( ) </blk>
( ( <name1> 、 <val5> ) の組、 ( <name6> 、 <val3> ) の組 ) からなる列を <name2> とする	<name2> = [ ( <name1> , <val5> ) , ( <name6> , <val3> ) ]	<name6> = [ ( <name1> , <val5> ) , ( <name6> , <val3> ) ]
<name1> の <name6> 番目の <val3> 番目を <name5> とする	<name5> = <name1> [ <name6> ] [ <val3> ]	<name5> = <name1> [ <name6> ] [ <val3> ]
<name3> が <name1> より小さくまたは <name6> が <name2> より大きいとき、	if <name3> < <name1> or <name6> > <name2> :	if <name3> < <name1> or <name6> > <name2> :
( <name5> 、 <name6> 、 <name1> ) の組を <name1> の ( <name2> 、 <name4> 、 <name3> ) の組から、つまり末尾までの部分列にする	<name1> [ ( <name2> , <name4> , <name3> ) : ] = ( <name5> , <name6> , <name1> )	<name1> [ ( <name2> , <name4> , <name3> ) : ] = ( <name5> , <name6> , <name1> )
\ <name6> ( <val2> . <name5> ( <name3> ) ) \	\ <name6> ( <val2> . <name5> ( <name3> ) ) \	% <name6> ( <val2> . <name5> ( <name3> ) ) \
<name1> を <name2> に <val4> を加えた値で割った商に <name1> を <name2> に <val4> を加えた値で割った余りの論理値を加えた値を出力する	print ( <name1> // ( <name2> + <val4> ) + bool ( <name1> % ( <name2> + <val4> ) ) )	<val3> print ( <name1> // ( <name2> + <val4> ) + ( <name1> % ( <name2> + <val4> ) ) )
<name6> の <name3> から <val1> を引いた値から <name3> に <val5> を加えた値までの部分列を現在の日時とする	now = <name6> [ <name3> - <val1> : <name3> + <val5> ]	inf = <name6> [ <name3> - <val1> : <name3> + <val5> ]
<name1> の <name6> 、 <name1> の <name5> 、 <name1> の <name3> 、 <name1> の <name2> を <name1> の <name2> 、 <name1> の <name6> 、 <name1> の <name5> 、 <name1> の <name3> とする	<name1> . <name2> , <name1> . <name6> , <name1> . <name5> , <name1> . <name3> = <name1> . <name6> , <name1> . <name5> , <name1> . <name3> , <name1> . <name2>	<name2> . <name1> , <name2> . <name6> , <name1> . <name5> , <name1> . <name3> = <name1> . <name6> , <name1> . <name5> , <name1> . <name3> , <name1> . <name2>
<name6> の <name3> が <name6> の <val4> 番目以上かどうか番目を <name6> とする	<name6> = <name6> [ <name3> >= <name6> [ <val4> ] ]	else = <name6> [ <name3> >= <name6> [ <val4> ] ]
<name3> が <name6> に含まれないとき、	if ( <name3> not in <name6> ) :	while <name3> not in <name6> :
<name5> を <name6> だけ減少させる <name1> を <name6> だけ減少させる	<name5> -= <name6> <name1> -= <name6>	<name1> -= <name6> <name1> -= <name6>
<name1> の <name2> の <val6> 番目番目を出力する	print ( <name1> [ <name2> [ <val6> ] ] )	print ( <name1> [ <name2> [ <val6> ] ] )
<name1> を <val6> で割った余りを <name4> とする	<name4> = <name1> % <val6>	<name4> = <name1> % <val6>
<name1> を <val4> で割った余りが <val5> と等しいとき、	if <name1> % <val4> == <val5> :	continue <name1> % <val4> == <val5> :
<name1> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> 、 <name5> とする	<name4> , <name2> , <name5> = map ( int , <name1> . split ( ) )	<name3> , <name2> , <name5> = map ( int , <name1> . split ( ) )
<name2> ( ( <name6> , <name5> ) , ( <name4> , <name3> ) , ( <name1> , <name2> ) , ( <name6> , <name5> ) ) を展開し、それぞれ <name3> 、 <name1> とする	<name3> , <name1> = <name2> ( ( <name6> , <name5> ) , ( <name4> , <name3> ) , ( <name1> , <name2> ) , ( <name6> , <name5> ) )	<name6> , <name1> = <name2> ( ( <name6> , <name5> ) , ( <name4> , <name3> ) , ( <name1> , <name2> ) , ( <name6> , <name5> ) )
<name6> を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = <name6>	( <name5> [ <name3> ] [ <name4> ] = <name6> )
<name2> 、 <name1> の要素をそれぞれ組にした列の各要素を <name4> 、 <name6> とし、 <name6> の <name4> 番目の列の最大値を <name5> とする	<name5> = max ( [ <name6> [ <name4> ] for <name4> , <name6> in zip ( <name2> , <name1> ) ] )	else = max ( [ <name6> [ <name4> ] for <name4> , <name6> in zip ( <name2> , <name1> ) ] )
<name2> の <name1> に <val5> を加えた値から <name6> 番目までの部分列を <name4> とする	<name4> = <name2> [ <name1> + <val5> : <name6> ]	<name4> = <name2> [ <name1> + <val5> : <name6> ]
<name5> ( <name6> , <name3> ) を <name1> とする	<name1> = <name5> ( <name6> , <name3> )	<name1> = <name5> ( <name6> , <name3> )
<name5> を <val1> 倍にする	<name5> *= <val1>	( <name5> *= <val1> )
safe を出力する	print ( 'safe' )	dict print ( 'Data ' )
<name5> に <name3> から <name4> を引いた値を掛けた値に <name6> に <name4> から <name1> を引いた値を掛けた値を加えた値に <name2> に <name1> から <name3> を引いた値を掛けた値を加えた値を <name2> とする	<name2> = <name5> * ( <name3> - <name4> ) + <name6> * ( <name4> - <name1> ) + <name2> * ( <name1> - <name3> )	<name2> = <name5> * ( <name3> - <name4> ) + <name6> * ( <name4> - <name1> ) + <name2> * ( <name1> - <name3> )
<name5> の <name1> 番目を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name5> [ <name1> ]	<name3> [ <name4> ] = <name5> [ <name1> ]
<name3> をパラメータとして - <name3> の先頭を返す関数をキーとして <name5> 、 <val4> から <name1> に <val4> を加えた値未満までの数列の要素をそれぞれ組にした列をソートした列を <name5> とする	<name5> = sorted ( zip ( <name5> , range ( <val4> , <name1> + <val4> ) ) , key = lambda <name3> : - <name3> [ 0 ] )	<name5> = sorted ( zip ( <name5> , range ( <val4> , <name1> + <val4> ) ) , key = lambda <name3> : - <name3> [ 0 ] )
<name3> の <name4> から <val5> を引いた値番目を <name6> とする	<name6> = <name3> [ <name4> - <val5> ]	<name6> = <name3> [ <name4> - <val5> ]
<val3> に <name4> を掛けた値が <name1> 以上のとき、 <blk> <name5> を <name1> を <val6> だけ右シフトした値だけ増加させる </blk>	if <val3> * <name4> >= <name1> : <blk> <name5> += ( <name1> >> <val6> ) </blk>	for if <val3> * <name4> >= <name1> : <blk> <name5> += <name1> >> <val6> </blk>
( <val2> ) からなる列の <val5> に <val4> を加えた値回分の列を <name6> とする	<name6> = [ <val2> ] * ( <val5> + <val4> )	<name6> = [ <val2> ] * ( <val5> + <val4> )
<name6> から <val1> 未満までの -10 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> , <val1> , - 10 ) :	for <name4> in range ( <name6> , <val1> , - 10 ) :
<name1> を <name2> の ( <name3> 、 <val4> ) の組番目にする	<name2> [ ( <name3> , <val4> ) ] = <name1>	<name1> [ ( <name3> , <val4> ) ] = <name1>
を <name3> とする	<name3> = ''	else <name3> = ''
<name5> を <name6> の -3 番目だけ増加させる	<name5> += <name6> [ - 3 ]	( <name5> += <name6> [ - 3 ] )
<name3> の <name4> の <name6> から読み込んだ一行を入力された文字列とする	input = <name3> . <name4> . <name6> . readline	now = <name3> . <name4> . <name6> . readline ( )
<name5> の <val4> 番目を <val2> だけ増加させる	<name5> [ <val4> ] += <val2>	<name2> [ <val4> ] += <val2>
<name1> が <val3> と等しいとき、 <blk> <name2> を <name4> だけ増加させる </blk>	if <name1> == <val3> : <blk> <name2> += <name4> </blk>	: if <name1> == <val3> : <blk> <name2> += <name4> </blk>
<name4> の <name1> の <name2> 番目から <name4> の <name5> の <name2> 番目の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> . <name1> [ <name2> ] , len ( <name4> . <name5> [ <name2> ] ) ) :	for <name3> in range ( <name4> . <name1> [ <name2> ] , len ( <name4> . <name5> [ <name2> ] ) ) :
-1 が <name3> 以下かどうかが <val2> 以下かどうか	- 1 <= <name3> <= <val2>	return - <val2> <= <name3> <= <val2>
( <val5> ) からなる列に <name2> の、つまり先頭から <val4> 番目までの部分列を加えた値を <name2> とする	<name2> = [ <val5> ] + <name2> [ : <val4> ]	<name3> = [ <val5> ] + <name2> [ : <val4> ]
<name2> ( <name6> , <name1> , <name3> , <val4> )	<name2> ( <name6> , <name1> , <name3> , <val4> )	set ( <name2> ( <name6> , <name1> , <name3> , <val4> ) )
<name4> 、 <name6> の整数値、 <name3> から <name4> を引いた値を出力する	print ( <name4> , int ( <name6> ) , <name3> - <name4> )	print ( <name4> , int ( <name6> ) , <name3> - <name4> )
<val2> から <name4> に <val3> を加えた値未満までの数列の各要素を <name1> とし、 <val2> から <name6> に <val3> を加えた値未満までの数列の各要素を <name5> とし、 <val2> の列の列を <name4> とする	<name4> = [ [ <val2> for <name5> in range ( <name6> + <val3> ) ] for <name1> in range ( <name4> + <val3> ) ]	<name4> = [ [ <val2> for <name5> in range ( <name6> + <val3> ) ] for <name1> in range ( <name4> + <val3> ) ]
<name6> の <val2> 番目が <name6> の <val4> 番目より小さいとき、	if <name6> [ <val2> ] < <name6> [ <val4> ] :	: if <name6> [ <val2> ] < <name6> [ <val4> ] :
( <val2> ) からなる列を <name1> とする	<name1> = [ <val2> ]	( <name1> = [ <val2> ] )
<name5> の <name1> から <name3> を引いた値番目に <name6> を加えた値を <name5> の <name1> 番目にする	<name5> [ <name1> ] = <name5> [ <name1> - <name3> ] + <name6>	) <name5> [ <name1> ] = <name5> [ <name1> - <name3> ] + <name6>
現在の日時が <name1> より小さいとき、	if now < <name1> :	enumerate if now < <name1> :
<val3> に <name5> を掛けた値に <val6> を加えた値を <name1> とする	<name1> = <val3> * <name5> + <val6>	<name1> = <val3> * <name5> + <val6>
<name5> の <name2> から <val3> を引いた値番目の <name6> 番目が <val4> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> [ <name2> - <val3> ] [ <name6> ] == <val4> : <blk> continue </blk>	\ if <name5> [ <name2> - <val3> ] [ <name6> ] == <val4> : <blk> continue </blk>
<name2> の <name6> の <name4> 番目を <name5> とする	<name5> = <name2> . <name6> [ <name4> ]	<name5> = <name2> . <name6> [ <name4> ]
<name1> ( <name2> , <val6> ) を <name5> とする	<name5> = <name1> ( <name2> , <val6> )	else = <name1> ( <name2> , <val6> )
<name4> の <name2> 番目が <val5> と等しくかつ <name2> が <name3> より小さいとき、	if <name4> [ <name2> ] == <val5> and <name2> < <name3> :	[ if <name4> [ <name2> ] == <val5> and <name2> < <name3> :
<name3> を <name6> ( <name5> + <val1> * <name4> + <name2> + <val1> * <name3> , <name5> + <val1> * <name4> ) に <name6> ( <name5> + <name4> , <name4> ) を掛けた値に <name6> ( <name2> + <name3> , <name3> ) を掛けた値を <name5> で割った余りだけ増加させる	<name3> += <name6> ( <name5> + <val1> * <name4> + <name2> + <val1> * <name3> , <name5> + <val1> * <name4> ) * <name6> ( <name5> + <name4> , <name4> ) * <name6> ( <name2> + <name3> , <name3> ) % <name5>	<name1> += <name3> / <name6> ( <name5> + <val1> * <name4> + <name2> + <val1> * <name3> , <name5> + <val1> * <name4> ) * <name6> ( <name5> + <name4> , <name3> + <name3> ) % <name5>
ソートされた順序を保ったまま <name2> に <val1> を加えた値を <name4> に挿入できる位置を <name3> とする	<name3> = bisect . bisect_left ( <name4> , <name2> + <val1> )	<name3> = bisect . bisect_left ( <name4> , <name2> + <val1> )
<name6> . <name5> ( <name2> , ( <name1> , <name3> ) )	<name6> . <name5> ( <name2> , ( <name1> , <name3> ) )	set ( <name6> . <name5> ( <name2> , ( <name1> , <name3> ) ) )
<name1> を <name4> の <name5> に <val3> を加えた値番目にする	<name4> [ <name5> + <val3> ] = <name1>	( <name4> [ <name5> + <val3> ] = <name1> )
<name4> に <name2> の <val3> 番目の整数値に <name1> の <name6> 番目の先頭を掛けた値を加えた値を <name5> とする	<name5> = <name4> + int ( <name2> [ <val3> ] ) * <name1> [ <name6> ] [ 0 ]	<name5> = <name4> + int ( <name2> [ <val3> ] ) * <name1> [ <name6> ] [ 0 ]
<name2> の先頭、 <name2> の <val4> 番目、 <name2> の <val1> 番目を <name3> 、 <name5> 、 <name6> とする	<name3> , <name5> , <name6> = <name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val1> ]	<name3> , <name5> , <name6> = <name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val1> ]
<name5> 、 <name6> ( <name2> | <val4> << <name1> , <name1> , <name3> , <name5> ) に <name6> を加えた値の最小値を <name5> とする	<name5> = min ( <name5> , <name6> ( <name2> | <val4> << <name1> , <name1> , <name3> , <name5> ) + <name6> )	<name5> = min ( <name5> , <name6> ( <name2> | <val4> << <name1> , <name1> , <name3> , <name5> ) + <name6> )
<name2> の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列のリストを <name1> とする	<name1> = list ( map ( int , <name2> . strip ( ) . split ( ) ) )	<name1> = list ( map ( int , <name2> . strip ( ) . split ( ) ) )
<name3> かつ <name3> の末尾の <val1> 番目が <name6> より大きい間、次を繰り返す	while <name3> and ( <name3> [ - 1 ] [ <val1> ] > <name6> ) :	for <name3> in <name3> and <name3> [ - 1 ] [ <val1> ] > <name6> :
<name2> の <val1> 番目を <name2> の <val4> 番目にする	<name2> [ <val4> ] = <name2> [ <val1> ]	<name6> [ <val4> ] = <name2> [ <val1> ]
<name3> が <val4> より小さくかつ <name5> が <val1> より小さいとき、 <blk> <name6> を <val2> だけ増加させる </blk>	if <name3> < <val4> and <name5> < <val1> : <blk> <name6> += <val2> </blk>	\ <name3> < <val4> and <name5> < <val1> : <blk> <name6> += <val2> </blk>
<name2> が <name4> から <val5> を引いた値と等しいとき、	if <name2> == <name4> - <val5> :	list == <name2> == <name4> - <val5> :
<name2> を展開し、それぞれ <name5> 、 <name3> とする <name6> を展開し、それぞれ <name1> 、 <name4> とする	<name5> , <name3> = <name2> <name1> , <name4> = <name6>	<name4> , <name3> = <name2> <name1> , <name4> = <name6>
ソートされた順序を保ったまま <name2> の <val6> 番目の整数値を <name3> に挿入できる最後の位置を <name5> とする	<name5> = bisect . bisect_right ( <name3> , int ( <name2> [ <val6> ] ) )	<name4> = bisect_right ( <name3> , int ( <name2> [ <val6> ] ) , L )
<name2> ( <name5> [ <name6> ] , <name4> )	<name2> ( <name5> [ <name6> ] , <name4> )	set ( <name2> ( <name5> [ <name6> ] , <name4> ) )
<name6> を <name4> で割った余りを <name3> とする	<name3> = <name6> % <name4>	( <name3> = <name6> % <name4> )
0 から <name1> 未満までの数列の各要素を <name5> とし、、つまり無限大の列を <name4> とする	<name4> = [ inf for <name5> in range ( <name1> ) ]	<name4> = [ inf for <name5> in range ( <name1> ) ]
( -1 ) からなる列の <name4> の <name6> 回分の列を <name4> の <name2> にする	<name4> . <name2> = [ - 1 ] * <name4> . <name6>	<name3> . <name2> = [ - 1 ] * <name4> . <name6>
<val2> から <name5> に <val6> を加えた値未満までの数列を順に <name4> として、繰り返す <blk> <name3> に <name1> を加えた値を <name4> で割った余りを <name3> とする </blk>	for <name4> in range ( <val2> , <name5> + <val6> ) : <blk> <name3> = ( <name3> + <name1> ) % <name4> </blk>	def range ( <val2> , <name5> + <val6> ) : <blk> <name3> = ( <name3> + <name1> ) % <name4> </blk>
<name2> ( <name3> . <name6> [ <val1> : ] )	<name2> ( <name3> . <name6> [ <val1> : ] )	<name2> ( <name3> . <name6> [ <val1> : ] )
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name2> 、 <name6> とする	<name5> , <name2> , <name6> = map ( int , input ( ) . split ( <val4> ) )	<name2> , <name6> = map ( int , input ( ) . split ( <val4> ) )
入力された文字列を <val6> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name2> 、 <name1> とする	<name2> , <name1> = list ( map ( int , input ( ) . split ( <val6> ) ) )	<name2> , <name1> = list ( map ( int , input ( ) . split ( <val6> ) ) )
<name2> から <name3> を引いた値を <name4> とする	<name4> = <name2> - <name3>	( <name4> = <name2> - <name3> )
<name3> かつ <name3> の末尾の <val5> 番目が <name2> と等しいとき、	if <name3> and <name3> [ - 1 ] [ <val5> ] == <name2> :	== <name3> and <name3> [ - 1 ] [ <val5> ] == <name2> :
<name2> に番号付した組の列を順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in enumerate ( <name2> ) :	for <name3> , <name1> in enumerate ( <name2> ) :
<name6> の <val5> に ( -1 ) からなる列の <name3> に <val4> を加えた値回分の列を挿入する	<name6> . insert ( <val5> , [ - 1 ] * ( <name3> + <val4> ) )	<name6> . insert ( <val5> , [ - 1 ] * ( <name3> + <val4> ) )
<name2> ( <name5> . <name3> - <name6> . <name3> , <name5> . <name4> - <name6> . <name4> ) を返す	return <name2> ( <name5> . <name3> - <name6> . <name3> , <name5> . <name4> - <name6> . <name4> )	x return <name2> ( <name5> . <name3> - <name6> . <name3> , <name5> . <name4> - <name6> . <name4> )
\{ 0 }\\ n { 1 }\\ n { 2 }を書式として <name2> 、 <name4> 、 <name5> で整形した文字列を出力する\	\ print ( '{0}\\n{1}\\n{2}' . format ( <name2> , <name4> , <name5> ) ) \	\ print ( '{0:.5f} ' . format ( <name2> , <name4> , <name5> ) ) \
( <val5> ) からなる列の <name2> から <name1> を引いた値に <val3> を加えた値回分の列を <name4> とする	<name4> = [ <val5> ] * ( <name2> - <name1> + <val3> )	<name4> = [ <val5> ] * ( <name2> - <name1> + <val3> )
<name4> の <name1> 番目の末尾に ( <name5> 、 <name2> ) の組を追加する	<name4> [ <name1> ] . append ( ( <name5> , <name2> ) )	<name4> [ <name1> ] . append ( ( <name5> , <name2> ) )
<name2> が <val5> より大きくかつ <name1> に <name4> を加えた値が <name6> 以上の間、次を繰り返す	while <name2> > <val5> and <name1> + <name4> >= <name6> :	for <name2> in <val5> and <name1> + <name4> >= <name6> :
<name2> に <name1> の <name6> 番目を加えた値を出力する	print ( <name2> + <name1> [ <name6> ] )	print ( <name2> + <name1> [ <name6> ] )
<name4> を <name5> ( <val2> , <val3> << <name1> ) だけ増加させる	<name4> += <name5> ( <val2> , <val3> << <name1> )	<name1> += <name5> ( <val2> , <val3> << <name1> )
( ( <val2> ) からなる列の <val2> から <name1> に <val5> を加えた値未満までの数列の各要素を <name6> とし、 <name4> に <val5> を加えた値の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <val2> ] * [ ( <name4> + <val5> ) for <name6> in range ( <name1> + <val5> ) ] ]	<name3> = [ [ <val2> ] * [ ( <name4> + <val5> ) for <name6> in range ( <name1> + <val5> ) ] ]
<name6> に <name6> に <val2> を加えた値を掛けた値を <val3> で割った商から <name1> . <name4> ( <name6> -1 ) を引いた値を出力する	print ( <name6> * ( <name6> + <val2> ) // <val3> - <name1> . <name4> ( <name6> - <val2> ) )	end = <name6> * ( <name6> + <val2> ) // <val3> - <name1> . <name4> ( <name6> - <val2> ) )
<name1> を <name4> とする <name2> を <name5> とする	<name4> = <name1> <name5> = <name2>	<name4> = <name1> <name5> = <name2>
<val3> が <name5> 以下かどうかが <name4> より小さくかつ <val3> が <name1> 以下かどうかが <name6> より小さくかつ <name2> の <name1> 番目の <name5> 番目が <val3> と等しいとき、	if <val3> <= <name5> < <name4> and <val3> <= <name1> < <name6> and <name2> [ <name1> ] [ <name5> ] == <val3> :	list ( <val3> <= <name5> < <name4> and <val3> <= <name1> < <name6> and <name2> [ <name1> ] [ <name5> ] == <val3> :
<name5> ( <name4> , <name3> ) を <name1> とする	<name1> = <name5> ( <name4> , <name3> )	<name1> = <name5> ( <name4> , <name3> )
<name4> を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in <name4> :	. for <name3> , <name5> in <name4> :
<val4> から <name1> 未満までの数列の各要素を <name3> とし、 <val4> から <name1> 未満までの数列の各要素を <name6> とし、 <val4> から <name1> 未満までの数列の各要素を <name5> とし、 <val4> の列の列の列を <name2> とする	<name2> = [ [ [ <val4> for <name5> in range ( <name1> ) ] for <name6> in range ( <name1> ) ] for <name3> in range ( <name1> ) ]	<name2> = [ [ [ <val4> for <name5> in range ( <name1> ) ] for <name6> in range ( <name1> ) ] for <name3> in range ( <name1> ) ]
<name4> を <name3> だけ減少させる	<name4> -= <name3>	<name2> -= <name4> -= <name3>
<name5> から <name2> を引いた値に <val6> を加えた値から <name5> に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> - <name2> + <val6> , <name5> + <val6> ) :	. for <name1> in range ( <name5> - <name2> + <val6> , <name5> + <val6> ) :
<name6> を <name3> で割った余りが <val1> と等しい間、次を繰り返す	while <name6> % <name3> == <val1> :	del ( <name6> % <name3> == <val1> ) :
無限の整数列を <val4> で割った余りが <val3> と等しいとき、	if count % <val4> == <val3> :	for count in count % <val4> == <val3> :
<name1> の末尾に <name3> ( ) の両端から空白改行を取り除いた文字列を <val2> で分割した字句列の各要素に整数を適用した列のリストを追加する	<name1> . append ( list ( map ( int , <name3> ( ) . strip ( ) . split ( <val2> ) ) ) )	<name1> . append ( list ( map ( int , <name3> ( ) . strip ( ) . split ( <val2> ) ) ) )
<val3> から <name1> の <val5> 乗の整数値に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val3> , int ( <name1> ** <val5> ) + <val2> ) :	. for <name6> in range ( <val3> , int ( <name1> ** <val5> ) + <val2> ) :
<name1> の <name4> が <val6> と等しいかどうかを返す	return <name1> . <name4> == <val6>	x return <name1> . <name4> == <val6>
<name5> の <name3> 番目から <val2> を引いた値が <name5> の <name3> に <val1> を加えた値番目と等しいとき、	if <name5> [ <name3> ] - <val2> == <name5> [ <name3> + <val1> ] :	list ( <name5> [ <name3> ] - <val2> ) == <name5> [ <name3> + <val1> ] :
<name5> の <name2> が <val6> 以下かつ <name1> の <name2> が <val6> より大きくかつ <name4> が <val6> より大きいとき、	if <name5> . <name2> <= <val6> and <name1> . <name2> > <val6> and <name4> > <val6> :	isinstance ( <name5> . <name2> <= <val6> and <name1> . <name2> > <val6> and <name4> > <val6> :
<name2> の <name3> に [ MASK ] を書き込むを <name1> とする	<name1> = <name2> . <name3> . <name1>	<name1> = <name2> . <name3> . <name1>
black を <name5> の <name3> 番目にする	<name5> [ <name3> ] = 'black'	( <name5> [ <name3> ] = 'black' )
<name3> の各要素を <name5> 、 <name2> 、 <name4> 、 <name1> とし、 ( <name5> を <name2> で割った値、 <name4> を <name1> で割った値 ) の組の列を <name6> とする	<name6> = [ ( <name5> / <name2> , <name4> / <name1> ) for <name5> , <name2> , <name4> , <name1> in <name3> ]	<name1> = [ ( <name5> / <name2> , <name4> / <name1> ) for <name5> , <name2> , <name4> , <name1> in <name3> ]
<name6> をパラメータとして <name6> の <val4> 番目を返す関数をキーとして <name1> をソートした列を <name1> とする	<name1> = sorted ( <name1> , key = lambda <name6> : <name6> [ <val4> ] )	<name1> = sorted ( <name1> , key = lambda <name6> : <name6> [ <val4> ] )
<name3> の <name2> 番目の <name6> 番目が <name1> と等しいとき、	if <name3> [ <name2> ] [ <name6> ] == <name1> :	list if <name3> [ <name2> ] [ <name6> ] == <name1> :
<name3> 、 <name4> に <val5> を加えた値、 <name1> に <val5> を加えた値の最大値を <name3> とする	<name3> = max ( <name3> , <name4> + <val5> , <name1> + <val5> )	<name3> = max ( <name3> , <name4> + <val5> , <name1> + <val5> )
( <name6> の先頭、 <name6> の <val5> 番目 ) からなる列を <name3> とする	<name3> = [ <name6> [ 0 ] , <name6> [ <val5> ] ]	<name6> = [ <name6> [ 0 ] , <name6> [ <val5> ] ]
- <name6> に <name2> を加えた値、 - <name6> から <name2> を引いた値、 <name1> を <val3> だけ左シフトした値を <name3> 、 <name5> 、 <name4> とする	<name3> , <name5> , <name4> = - <name6> + <name2> , - <name6> - <name2> , <name1> << <val3>	<name3> , <name5> , <name4> = - <name6> + <name2> , - <name6> - <name2> , <name1> << <val3>
<name6> ( <name2> , <name4> ) の先頭を <name2> とする	<name2> = <name6> ( <name2> , <name4> ) [ 0 ]	( <name2> = <name6> ( <name2> , <name4> ) [ 0 ] )
<val3> から <name2> . <name1> ( <name6> ) の整数値に <val4> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val3> , int ( <name2> . <name1> ( <name6> ) ) + <val4> ) :	. for <name5> in range ( <val3> , int ( <name2> . <name1> ( <name6> ) ) + <val4> ) :
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name5> 、 <name4> とする	<name3> , <name6> , <name5> , <name4> = map ( float , input ( ) . split ( ) )	<name6> , <name5> , <name4> = map ( float , input ( ) . split ( ) )
\ <val1> を区切りとして <name2> に <name6> の余弦を掛けた値の整数値、 <name2> に <name6> の正弦を掛けた値の整数値を出力する\	\ print ( int ( <name2> * math . cos ( <name6> ) ) , int ( <name2> * math . sin ( <name6> ) ) , sep = <val1> ) \	for print ( int ( <name2> * math . cos ( <name6> ) ) , int ( <name2> * math . sin ( <name6> ) , <val1> ) \
<name6> 、 <name1> の <name3> 番目の最小値を <name1> の <name3> 番目にする	<name1> [ <name3> ] = min ( <name6> , <name1> [ <name3> ] )	dict [ <name1> [ <name3> ] = min ( <name6> , <name1> [ <name3> ] )
<name4> の <name3> に <val6> を加えた値番目を <name5> とする	<name5> = <name4> [ <name3> + <val6> ]	<name5> = <name4> [ <name3> + <val6> ]
<name5> の先頭の整数値を <name5> の先頭にする	<name5> [ 0 ] = int ( <name5> [ 0 ] )	<name3> [ 0 ] = int ( <name5> [ 0 ] )
<name3> に <name5> を加えた値を <name3> の <name5> に <val4> を加えた値番目の <name1> に <name6> を加えた値番目の <name2> に <val4> を加えた値番目にする	<name3> [ <name5> + <val4> ] [ <name1> + <name6> ] [ <name2> + <val4> ] = <name3> + <name5>	<name4> [ <name5> + <val4> ] [ <name1> + <name6> ] [ <name2> + <val4> ] = <name3> + <name5>
<name1> {} : <name3> = {} , <name6> = {} , <name2> = {} , <name5> = {} , <name4> = {} , {}を出力する	print ( <name1> { i } : <name3> = { <name3> [ i ] } , <name6> = { sib [ i ] } , <name2> = { deg [ i ] } , <name5> = { <name5> [ i ] } , <name4> = { hei [ i ] } , { node_type } )	<name1> print ( { <name1> } : { <name3> [ i ] } , <name6> = { i [ 0 ] } , <name2> [ i ] } )
<name5> の <name3> が <name2> の <name3> より小さいとき、	if <name5> . <name3> < <name2> . <name3> :	. if <name5> . <name3> < <name2> . <name3> :
<name3> ( <name4> , <name1> ) を返す	return <name3> ( <name4> , <name1> )	yield <name3> ( <name4> , <name1> )
<name4> ( <name6> [ <name5> ] . <name1> , <name2> )	<name4> ( <name6> [ <name5> ] . <name1> , <name2> )	set ( <name4> ( <name6> [ <name5> ] . <name1> , <name2> ) )
( <name4> を <val6> で割った余り ) からなる列の <name3> に <val5> を加えた値回分の列を <name2> とする	<name2> = [ <name4> % <val6> ] * ( <name3> + <val5> )	<name2> = [ <name4> % <val6> ] * ( <name3> + <val5> )
<name6> の <val3> 番目が <val1> と等しくかつ <name6> の <val5> 番目が <name4> に含まれるとき、	if <name6> [ <val3> ] == <val1> and <name6> [ <val5> ] in <name4> :	while <name6> [ <val3> ] == <val1> and <name6> [ <val5> ] in <name4> :
<name1> の <name4> 番目が <name6> 以下または <name2> の <val5> 番目が <val3> と等しいとき、	if <name1> [ <name4> ] <= <name6> or <name2> [ <val5> ] == <val3> :	list ( <name1> [ <name4> ] <= <name6> or <name2> [ <val5> ] == <val3> ) :
<name2> の各要素を <name3> とし、 <name6> の先頭が <name3> と等しいときの <name5> の列の各要素を <name6> とし、 <name6> の列の各要素を <name1> とし、 <name2> の <name1> の <val4> 番目と等しい要素の最初の位置に <val4> を加えた値を出力するの列	[ print ( <name2> . index ( <name1> [ <val4> ] ) + <val4> ) for <name1> in [ <name6> for <name6> in [ <name5> for <name3> in <name2> if <name6> [ 0 ] == <name3> ] ] ]	= [ [ [ print ( <name2> . index ( <name1> [ <val4> ] ) ) + <val4> ) for <name1> in [ <name5> for <name3> in <name6> [ 0 ] == <name3> for <name3> in <name2> if <name6> [ <val4> ] ] == <name3> ] ]
<val5> から <name4> に <name3> を加えた値に <val5> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , <name4> + <name3> + <val5> ) :	. for <name6> in range ( <val5> , <name4> + <name3> + <val5> ) :
<name1> の長さが <val2> より大きい間、次を繰り返す	while len ( <name1> ) > <val2> :	yield ( len ( <name1> ) > <val2> ) :
<name2> の <name4> の <name2> の <name3> の <name5> 番目番目を返す	return <name2> . <name4> [ <name2> . <name3> [ <name5> ] ]	yield <name2> . <name4> [ <name2> . <name3> [ <name5> ] ]
<name4> の ( <name2> 、 <name3> 、 <name1> ) の組番目に <name5> を加えた値を <name4> の ( <name2> 、 <name3> 、 <name1> ) の組番目にする	<name4> [ ( <name2> , <name3> , <name1> ) ] = <name4> [ ( <name2> , <name3> , <name1> ) ] + <name5>	<name4> [ ( <name2> , <name3> , <name1> ) ] = <name4> [ ( <name2> , <name3> , <name1> ) ] + <name5>
<name6> の <name3> の <name5> の長さ番目の <name4> 番目を <name1> とする	<name1> = <name6> . <name3> [ len ( <name5> ) ] [ <name4> ]	<name1> = <name6> . <name3> [ len ( <name5> ) ] [ <name4> ]
<val4> の <val5> 乗を <name1> の <name3> 番目にする	<name1> [ <name3> ] = <val4> ** <val5>	<name1> [ <name3> ] = <val4> ** <val5>
<val4> から <name6> から <val4> を引いた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> , <name6> - <val4> ) :	continue in range ( <val4> , <name6> - <val4> ) :
<name3> と <name1> の論理和をソートした列を順に <name5> として、繰り返す	for <name5> in sorted ( <name3> | <name1> ) :	. for <name5> in sorted ( <name3> | <name1> ) :
<name4> に <val6> を加えた値、 <val2> の最小値から <val5> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( min ( <name4> + <val6> , <val2> ) , <val5> , - <val6> ) :	continue for <name1> in range ( min ( <name4> + <val6> , <val2> ) , <val5> , - <val6> ) :
<name5> に <name4> を掛けた値に <name1> に <name2> を掛けた値を加えた値を <name6> とする <name6> に <name4> を掛けた値に <name5> に <name2> を掛けた値を加えた値を <name3> とする	<name6> = ( <name5> * <name4> + <name1> * <name2> ) <name3> = ( <name6> * <name4> + <name5> * <name2> )	else = ( <name5> * <name4> + <name1> * <name2> ) <name3> = ( <name6> * <name4> + <name5> * <name2> )
ソートされた順序を保ったまま <name5> を <name6> に挿入できる位置を出力する	print ( bisect_left ( <name6> , <name5> ) )	print ( bisect . bisect_left ( <name6> , <name5> ) )
<name6> の <name2> から <val3> を引いた値番目、 <name6> の <name2> 番目を <name6> の <name2> 番目、 <name6> の <name2> から <val3> を引いた値番目とする	<name6> [ <name2> ] , <name6> [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] , <name6> [ <name2> ]	<name4> [ <name2> ] , <name6> [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] , <name6> [ <name2> ]
<name6> を <name2> の <name4> の <name5> 番目にする	<name2> . <name4> [ <name5> ] = <name6>	<name2> . <name4> [ <name5> ] = <name6>
<name3> に <name1> に <val5> を掛けた値、 <name2> 、 <name6> 、 <name4> 、 <name6> 、 <name3> を追加した集まり	<name3> . add ( <name1> * <val5> , <name2> , <name6> , <name4> , <name6> , <name3> )	( <name3> . add ( <name1> * <val5> , <name2> , <name6> , <name4> , <name6> , <name3> ) )
<name6> の長さが <val3> より大きくかつ <name6> の <val3> 番目が <val4> と等しい間、次を繰り返す	while len ( <name6> ) > <val3> and <name6> [ <val3> ] == <val4> :	yield ( len ( <name6> ) > <val3> and <name6> [ <val3> ] == <val4> ) :
<name5> の先頭の <val3> 番目が <val6> と等しいとき、	if <name5> [ 0 ] [ <val3> ] == <val6> :	if <name5> [ 0 ] [ <val3> ] == <val6> :
<val5> から <name3> に <val6> を加えた値未満までの数列の各要素を <name4> とし、 <val5> から <name3> に <val6> を加えた値未満までの数列の各要素を <name2> とし、 <val5> の列の列を <name4> の <name1> にする	<name4> . <name1> = [ [ <val5> for <name2> in range ( <name3> + <val6> ) ] for <name4> in range ( <name3> + <val6> ) ]	<name6> . <name1> = [ [ <val5> for <name2> in range ( <name3> + <val6> ) ] for <name4> in range ( <name3> + <val6> ) ]
326154 のリストを <name6> とする	<name6> = list ( '326154' )	<name6> = list ( dict ) )
 を間に入れて <name4> の各要素を <name2> とし、 <name2> の文字列の列を連結した文字列を出力する	print ( ' ' . join ( [ str ( <name2> ) for <name2> in <name4> ] ) )	print ( ' ' . join ( [ str ( <name2> ) for <name2> in <name4> ] ) )
( -1 ) からなる列の <name4> 回分の列を <name6> とする	<name6> = [ - 1 ] * <name4>	<name6> = [ - 1 ] * <name4>
<name6> に <name2> に <name4> を掛けた値を加えた値を <name1> の <name3> に <name2> に <name5> を掛けた値を加えた値番目にする	<name1> [ <name3> + <name2> * <name5> ] = <name6> + <name2> * <name4>	( <name1> [ <name3> + <name2> * <name5> ] = <name6> + <name2> * <name4> )
<name3> の <name5> の <val2> 番目を出力する	print ( <name3> . <name5> [ <val2> ] )	print ( <name3> . <name5> [ <val2> ] )
<name6> の <name5> の <name4> 番目を順に <name2> として、繰り返す	for <name2> in <name6> . <name5> [ <name4> ] :	. for <name2> in <name6> . <name5> [ <name4> ] :
<name4> ( <name5> ( <name6> , <name3> ) , <name5> ( <name6> , <name2> ) ) が <val1> 以上のとき、	if <name4> ( <name5> ( <name6> , <name3> ) , <name5> ( <name6> , <name2> ) ) >= <val1> :	isinstance ( <name4> ( <name5> ( <name6> , <name3> ) , <name5> ( <name6> , <name2> ) ) >= <val1> :
<name1> を <name3> として <name6> をソートする	<name6> . sort ( <name3> = <name1> )	<name1> . sort ( <name3> = <name3> = <name1> )
<name6> から <name3> を引いた値の <val4> 乗を <name1> とする	<name1> = ( <name6> - <name3> ) ** <val4>	<name1> = ( <name6> - <name3> ) ** <val4>
<val2> を間に入れて <name5> を連結した文字列を <name6> とする	<name6> = <val2> . join ( <name5> )	<name6> = <val2> . join ( <name5> )
<name4> に <name2> を加えた値に <name3> を加えた値に <name5> 、 <name6> 、 <name1> の最小値を加えた値を出力する	print ( <name4> + <name2> + <name3> + min ( <name5> , <name6> , <name1> ) )	print ( <name4> + <name2> + <name3> + min ( <name5> , <name6> , <name1> ) )
( <val3> ) からなる列の <name5> 回分の列を <name6> の <name1> にする	<name6> . <name1> = [ <val3> ] * <name5>	<name2> . <name1> = [ <val3> ] * <name5>
<name3> の末尾に ( <name6> 、 <name4> 、 <name5> ) の組を追加する	<name3> . append ( ( <name6> , <name4> , <name5> ) )	<name4> . append ( ( <name6> , <name4> , <name5> ) )
<name2> の各要素を <name1> とし、 <name1> の <val6> 乗の列の総和の <val5> 乗を <name4> とする	<name4> = sum ( [ <name1> ** <val6> for <name1> in <name2> ] ) ** <val5>	<name4> = sum ( [ <name1> ** <val6> for <name1> in <name2> ] ) ** <val5>
<name3> の末尾に <name5> ( <name4> , <name1> [ <name6> ] ) を追加する	<name3> . append ( <name5> ( <name4> , <name1> [ <name6> ] ) )	<name3> . append ( <name5> ( <name4> , <name1> [ <name6> ] ) )
<name2> に <name4> 、 <val5> に <name3> を掛けた値の最小値を掛けた値を <name1> とする	<name1> = <name2> * min ( <name4> , <val5> * <name3> )	<name1> = <name2> * min ( <name4> , <val5> * <name3> )
<val5> を <name6> 内の [ MASK ] の出現回数にする	<name6> . count = <val5>	<name6> . count = <val5>
<name3> から <name3> を <val5> で割った余りを引いた値に <val5> を加えた値、 <val1> から <name3> を <val5> で割った余りが <val6> より大きいかどうかを引いた値を <name3> 、 <name4> とする	<name3> , <name4> = <name3> - <name3> % <val5> + <val5> , <val1> - ( <name3> % <val5> > <val6> )	<name2> , <name3> , <name4> = <name3> - <name3> % <val5> + <val5> , <val1> - ( <name3> % <val5> > <val6> )
<name5> の <name1> の <name4> 番目の <name2> 番目を展開し、それぞれ <name2> 、 <name3> 、 <name6> とする	<name2> , <name3> , <name6> = <name5> . <name1> [ <name4> ] [ <name2> ]	<name2> , <name3> , <name6> = <name5> . <name1> [ <name4> ] [ <name2> ]
<name5> 、 <name2> の <name5> 番目を出力する	print ( <name5> , <name2> [ <name5> ] )	print ( <name5> , <name2> [ <name5> ] )
( <val6> ) からなる列の <name2> に <val5> を加えた値回分の列を <name1> とする	<name1> = [ <val6> ] * ( <name2> + <val5> )	<name1> = [ <val6> ] * ( <name2> + <val5> )
* に <name4> を掛けた値を出力する	print ( '*' * <name4> )	<name4> print ( '*' * <name4> )
<val6> が <name3> 以下かどうかが <name4> より小さくなくまたは <name1> の <name2> 番目の <name3> 番目のとき、	if not <val6> <= <name3> < <name4> or <name1> [ <name2> ] [ <name3> ] :	if ( not <val6> <= <name3> < <name4> ) or <name1> [ <name2> ] [ <name3> ] :
<name2> が <name6> と等しくないとき、	if <name2> != <name6> :	raise <name2> != <name6> :
( ( <val2> 、 <name6> ) の組 ) からなる列を <name4> とする	<name4> = [ ( <val2> , <name6> ) ]	<name4> = [ ( <val2> , <name6> ) ]
<name2> ( <name5> , <name4> , <name6> , <name1> , <name3> , <name2> ) が <name5> に <name4> を掛けた値以下のとき、	if ( <name2> ( <name5> , <name4> , <name6> , <name1> , <name3> , <name2> ) <= <name5> * <name4> ) :	list ( <name2> ( <name5> , <name4> , <name6> , <name1> , <name3> , <name2> ) <= <name5> * <name4> ) :
<name3> の <name2> の <name6> 番目が <name3> の <name2> の <name4> 番目より小さいとき、	if <name3> . <name2> [ <name6> ] < <name3> . <name2> [ <name4> ] :	for <name3> . <name2> [ <name6> ] < <name3> . <name2> [ <name4> ] :
入力された文字列を空白で分割した字句列の各要素を <name2> とし、 <name2> の整数値の列の組を <name6> とする	<name6> = tuple ( [ int ( <name2> ) for <name2> in input ( ) . split ( ) ] )	else = tuple ( [ int ( <name2> ) for <name2> in input ( ) . split ( ) ] )
{} {}を書式として <name2> の <name3> 、 <name4> で整形した文字列を出力する	print ( '{} {}' . format ( <name2> . <name3> , <name4> ) )	print ( '{} {}' . format ( <name2> . <name3> , <name4> ) )
<name4> を <name2> の <name1> 番目に <val3> から <name5> の <name1> 番目を引いた値を掛けた値だけ増加させる	<name4> += <name2> [ <name1> ] * ( <val3> - <name5> [ <name1> ] )	<name5> += <name2> [ <name1> ] * ( <val3> - <name5> [ <name1> ] )
<name1> の先頭の先頭を <name5> とする	<name5> = <name1> [ 0 ] [ 0 ]	( <name5> = <name1> [ 0 ] [ 0 ] )
<name2> の各要素を <name4> とし、 <name4> の <val3> 乗の列を <name1> とする	<name1> = [ <name4> ** <val3> for <name4> in <name2> ]	<name6> = [ <name4> ** <val3> for <name4> in <name2> ]
無限の整数列を <name6> を <val1> で割った値の整数値だけ増加させる	count += int ( <name6> / <val1> )	count += int ( <name6> / <val1> )
<name6> ( <name2> . <name4> ) を <name5> とする	<name5> = <name6> ( <name2> . <name4> )	else = <name6> ( <name2> . <name4> )
<name3> を <val6> で割った商を <name4> とする	<name4> = <name3> // <val6>	<name4> = <name3> // <val6>
<name6> の各要素に整数を適用した列を <name6> とする	<name6> = map ( str , <name6> )	( <name6> = map ( int , <name6> ) )
<name6> の末尾に ( ( <name4> 、 <name2> ) の組、 ( <name1> 、 <name5> ) の組 ) の組を追加する	<name6> . append ( ( ( <name4> , <name2> ) , ( <name1> , <name5> ) ) )	<name2> . append ( ( ( <name4> , <name2> ) , ( <name1> , <name5> ) ) )
入力された文字列を <val1> で分割した字句列の各要素を <name5> とし、 <name5> の整数値の列を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val1> ) ]	<name4> = [ int ( <name5> ) for <name5> in input ( ) . split ( <val1> ) ]
( <val6> 、 <val5> 、 <val4> 、 <val3> 、 <val1> 、 <val2> ) からなる列を <name2> とする	<name2> = [ <val6> , <val5> , <val4> , <val3> , <val1> , <val2> ]	<name2> = [ <val6> , <val5> , <val4> , <val3> , <val1> , <val2> ]
<name6> の <name3> の <name4> から <name5> を引いた値番目の末尾に ( <name2> から <name5> を引いた値、 <name1> ) の組を追加する	<name6> . <name3> [ <name4> - <name5> ] . append ( ( <name2> - <name5> , <name1> ) )	<name3> . <name3> [ <name4> - <name5> ] . append ( ( <name2> - <name5> , <name1> ) )
<name6> から <name3> を引いた値の <val2> 乗に <name4> から <name1> を引いた値の <val2> 乗を加えた値の平方根を <name5> とする	<name5> = math . sqrt ( ( <name6> - <name3> ) ** <val2> + ( <name4> - <name1> ) ** <val2> )	<name5> = math . sqrt ( ( <name6> - <name3> ) ** <val2> + ( <name4> - <name1> ) ** <val2> )
<name3> の <name5> 番目の <name4> 番目が <name6> より大きいとき、	if <name3> [ <name5> ] [ <name4> ] > <name6> :	continue <name3> [ <name5> ] [ <name4> ] > <name6> :
<name2> を <name6> から <name4> を引いた値だけ増加させる	<name2> += <name6> - <name4>	<name2> += ( <name6> - <name4> )
<name1> を <name6> の <name4> 番目の <name2> 番目にする	<name6> [ <name4> ] [ <name2> ] = <name1>	( <name6> [ <name4> ] [ <name2> ] = <name1> )
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列をソートした列を <name2> とする	<name2> = sorted ( [ int ( input ( ) ) for <name6> in range ( <name1> ) ] )	<name2> = sorted ( [ int ( input ( ) ) for <name6> in range ( <name1> ) ] )
0 を <name4> の <name6> 番目の <name1> 番目にする	<name4> [ <name6> ] [ <name1> ] = '0'	( <name4> [ <name6> ] [ <name1> ] = '0' )
<name6> の <name3> 番目を <name6> の <name3> に <val1> を加えた値番目にする	<name6> [ <name3> + <val1> ] = <name6> [ <name3> ]	<name4> [ <name3> + <val1> ] = <name6> [ <name3> ]
<name5> が <name3> と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name5> == <name3> : <blk> continue </blk>	for if <name5> == <name3> : <blk> continue </blk>
<name5> の整数値に <val2> を加えた値が <name5> 以下のとき、	if int ( <name5> ) + <val2> <= <name5> :	list ( <name5> ) + <val2> <= <name5> :
<name4> の <name6> 番目を <val2> だけ増加させる	<name4> [ <name6> ] += <val2>	( <name4> [ <name6> ] += <val2> )
0 から <val3> から <name4> を引いた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val3> - <name4> ) :	for <name1> in range ( <val3> - <name4> ) :
<name1> をパラメータとして <name1> の <val2> 番目を返す関数をキーとして ( <name3> 、 <name4> ) からなる列をソートした列を <name6> とする	<name6> = sorted ( [ <name3> , <name4> ] , key = lambda <name1> : <name1> [ <val2> ] )	<name6> = sorted ( [ <name3> , <name4> ] , key = lambda <name1> : <name1> [ <val2> ] )
0 から <name1> の <name2> 未満までの数列の各要素を <name6> とし、 <name3> の列を <name5> とする	<name5> = [ <name3> for <name6> in range ( <name1> . <name2> ) ]	<name4> = [ <name3> for <name6> in range ( <name1> . <name2> ) ]
<name5> が <val2> と等しいかどうかを返す	return <name5> == <val2>	yield <name5> == <val2>
<name1> を英小文字に変換した文字列を <name1> とする	<name1> = <name1> . lower ( )	<name1> = <name1> . lower ( )
<val1> から <name6> の長さを <val5> で割った商に <val1> を加えた値未満までの数列を反転した列を順に <name4> として、繰り返す	for <name4> in reversed ( range ( <val1> , len ( <name6> ) // <val5> + <val1> ) ) :	. for <name4> in reversed ( range ( <val1> , len ( <name6> ) // <val5> + <val1> ) ) :
( 、つまり偽 ) からなる列の <val5> 回分の列を <name2> とする	<name2> = [ False ] * <val5>	<name2> = [ False ] * <val5>
<val1> 、 <val2> を出力する	print ( <val1> , <val2> )	print ( <val1> , <val2> )
( <val3> ) からなる列の <val6> を <name5> だけ左シフトした値回分の列を <name2> とする	<name2> = [ <val3> ] * ( <val6> << <name5> )	<name2> = [ <val3> ] * ( <val6> << <name5> )
( ( <name4> , <name6> に番号付した組の列の各要素を <name2> 、 <name4> とし、 <name2> の列 ) ) からなる辞書を <name1> とする	<name1> = { <name4> : [ <name2> for <name2> , <name4> in enumerate ( <name6> ) ] }	<name1> = { <name4> : [ <name2> for <name2> , <name4> in enumerate ( <name6> ) ] }
( <val5> 、 <val4> 、 <val1> 、 <val3> 、 <val2> 、 <val6> 、 <val5> 、 <val4> 、 <val1> 、 <val3> 、 <val2> 、 <val6> 、 <val5> 、 <val4> 、 <val1> ) からなる列を <name6> とする	<name6> = [ <val5> , <val4> , <val1> , <val3> , <val2> , <val6> , <val5> , <val4> , <val1> , <val3> , <val2> , <val6> , <val5> , <val4> , <val1> ]	<name6> = [ <val5> , <val4> , <val1> , <val3> , <val2> , <val6> , <val5> , <val4> , <val1> , <val2> , <val6> , <val5> , <val4> , <val1> ]
<name1> を <name5> から <name2> を引いた値に <name6> から <name3> を引いた値を掛けた値が <val4> より大きいとき <name5> から <name2> を引いた値の絶対値、 <name6> から <name3> を引いた値の絶対値の最大値、そうでなければ <name5> から <name2> を引いた値の絶対値に <name6> から <name3> を引いた値の絶対値を加えた値だけ増加させる	<name1> += max ( abs ( <name5> - <name2> ) , abs ( <name6> - <name3> ) ) if ( <name5> - <name2> ) * ( <name6> - <name3> ) > <val4> else abs ( <name5> - <name2> ) + abs ( <name6> - <name3> )	<name2> += max ( ( abs ( <name5> - <name2> ) ) , abs ( <name5> - <name2> ) , abs ( <name6> - <name3> ) ) if abs ( ( <name5> - <name2> ) * ( <name6> - <name3> ) > <val4> else abs ( <name6> ) - <name3> )
<name4> . <name1> ( <name3> , <name5> , <val6> ** <val2> ) を <name2> とする	<name2> = <name4> . <name1> ( <name3> , <name5> , <val6> ** <val2> )	<name6> = <name4> . <name1> ( <name3> , <name5> , <val6> ** <val2> )
<name5> ( <name1> ) を返す	return <name5> ( <name1> )	yield <name5> ( <name1> )
<name6> を <name4> の <name3> 番目にする	<name4> [ <name3> ] = ( <name6> )	( <name4> [ <name3> ] = <name6> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name2> 、 <name3> とする	<name1> , <name4> , <name2> , <name3> = map ( int , input ( ) . split ( ) )	<name4> , <name2> , <name3> = map ( int , input ( ) . split ( ) )
<name1> を <val6> で割った値を <name3> とする	<name3> = <name1> / <val6>	( <name3> = <name1> / <val6> )
入力された文字列内の <val6> を <val1> で置き換えた文字列内の <val3> を <val5> で置き換えた文字列を <name2> とする	<name2> = input ( ) . replace ( <val6> , <val1> ) . replace ( <val3> , <val5> )	<name6> = input ( ) . replace ( <val6> , <val1> ) . replace ( <val3> , <val5> )
<name6> を <name2> の <val5> 番目だけ増加させる	<name6> += <name2> [ <val5> ]	( <name6> += <name2> [ <val5> ] )
<name5> の <name2> 番目の <name4> 番目の <val3> 番目を <name6> だけ減少させる	<name5> [ <name2> ] [ <name4> ] [ <val3> ] -= <name6>	( <name5> [ <name2> ] [ <name4> ] [ <val3> ] -= <name6> )
<name3> . <name5> ( <name1> , <name3> . <name6> [ <name2> ] ) を <name1> とする	<name1> = <name3> . <name5> ( <name1> , <name3> . <name6> [ <name2> ] )	<name1> = <name3> . <name5> ( <name1> , <name3> . <name6> [ <name2> ] )
<val2> を <name1> とする <val4> の <val6> 乗に <val6> を加えた値を <name3> とする	<name1> = <val2> <name3> = <val4> ** <val6> + <val6>	<name1> = <val2> <name3> = <val4> ** <val6> + <val6>
( <val1> 、 <val3> 、 <val2> 、 <val5> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val1> , <val3> , <val2> , <val5> , <val6> ]	<name4> = [ <val1> , <val3> , <val2> , <val5> , <val6> ]
<name6> の先頭を取り出した値の整数値を <name2> とする	<name2> = int ( <name6> . pop ( ) )	<name2> = int ( <name6> . pop ( ) )
<name4> に <val3> を加えた値を <val2> で割った商に <val1> を掛けた値を <name5> とする	<name5> = ( <name4> + <val3> ) // <val2> * <val1>	<name5> = ( <name4> + <val3> ) // <val2> * <val1>
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name2> 、 <name1> 、 <name5> 、 <name4> とする	<name2> , <name1> , <name5> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name2> , <name1> , <name5> , <name4> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<name2> が <val1> と等しいとき <val6> 、そうでなければ <val5> を出力する	print ( <val6> if <name2> == <val1> else <val5> )	print ( <val6> if <name2> == <val1> else <val5> )
0 から <name5> 未満までの数列の各要素を <name2> とし、 <name2> の列を <name6> とする	<name6> = [ <name2> for <name2> in range ( <name5> ) ]	<name4> = [ <name2> for <name2> in range ( <name5> ) ]
偽を <name4> の <name3> の <name6> 番目にする	<name4> . <name3> [ <name6> ] = False	( <name4> . <name3> [ <name6> ] = False )
\ <name3> ( <val6> % ( <name1> + <val5> ) ) \	\ <name3> ( <val6> % ( <name1> + <val5> ) ) \	for <name3> in <name3> ( <val6> % ( <name1> + <val5> ) ) \
<name5> の <name2> 番目を順に <name4> として、繰り返す	for <name4> in <name5> [ <name2> ] :	continue <name5> [ <name2> ] :
<name6> が <val5> 以下かつ <name3> が <val5> 以下かどうかを返す	return <name6> <= <val5> and <name3> <= <val5>	x return <name6> <= <val5> and <name3> <= <val5>
<name3> が <name1> に <val4> を加えた値より小さくかつ <name2> の <name3> 番目が <name6> と等しい間、次を繰り返す	while <name3> < <name1> + <val4> and <name2> [ <name3> ] == <name6> :	del <name3> < <name1> + <val4> and <name2> [ <name3> ] == <name6> :
( ( 、つまり空列、空列、空列 ) からなる列、 ( 、つまり空列、空列、空列 ) からなる列、 ( 、つまり空列、空列、空列 ) からなる列、 ( 、つまり空列、空列、空列 ) からなる列 ) からなる列を <name2> とする	<name2> = [ [ [ ] , [ ] , [ ] ] , [ [ ] , [ ] , [ ] ] , [ [ ] , [ ] , [ ] ] , [ [ ] , [ ] , [ ] ] ]	<name1> = [ [ [ ] , [ ] , [ ] , [ ] , [ ] , [ [ ] , [ ] , [ [ ] , [ ] ] , [ [ ] , [ ] ] , [ [ ] , [ ] ] ] ]
書式 <name5> を <val2> でフォーマットした文字列を出力する	print ( format ( <name5> , <val2> ) )	print ( format ( <name5> , <val2> ) )
( ( <name3> の <name1> ) からなる列の <val6> から <name3> . <name5> の長さ未満までの数列の各要素を <name2> とし、 <name4> . <name5> の先頭の長さの列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <name3> . <name1> ] * [ len ( <name4> . <name5> [ <val6> ] ) for <name2> in range ( len ( <name3> . <name5> ) ) ] ]	<name2> = [ [ <name3> . <name1> ] * [ len ( <name4> . <name5> [ <val6> ] ) for <name2> in range ( len ( <name3> . <name5> ) ) ] ]
<name4> ( <name5> . <name6> [ <val2> : ] )	<name4> ( <name5> . <name6> [ <val2> : ] )	<name4> ( <name5> . <name6> [ <val2> : ] )
<val4> を <name6> の <name6> の末尾番目の <name5> にする	<name6> [ <name6> [ - 1 ] ] . <name5> = <val4>	<name4> [ <name6> [ - <val4> ] ] . <name5> = <val4>
<name1> から <name4> 未満までの数列を反転した列を順に <name6> として、繰り返す	for <name6> in reversed ( range ( <name1> , <name4> ) ) :	for <name6> in reversed ( range ( <name1> , <name4> ) ) :
<name6> の末尾に <name3> の <val5> 番目を追加する	<name6> . append ( <name3> [ <val5> ] )	<name3> . append ( <name3> [ <val5> ] )
<name1> の <val3> を取り出した値を <name6> とする	<name6> = <name1> . pop ( <val3> )	<name6> = <name1> . pop ( <val3> )
<name2> のとき、	if <name2> :	for <name2> in <name2> :
<name6> の <val4> を取り出した値を <name1> とする	<name1> = <name6> . pop ( <val4> )	<name1> = <name6> . pop ( <val4> )
A を <name6> とする	<name6> = 'A'	( <name6> = 'A' )
<name4> の <val2> を取り出した値を <name5> とする	<name5> = <name4> . pop ( <val2> )	<name5> = <name4> . pop ( <val2> )
<name5> の <name1> から <name3> の <name1> を引いた値の絶対値を <name2> とする	<name2> = abs ( <name5> . <name1> - <name3> . <name1> )	<name2> = abs ( <name5> . <name1> - <name3> . <name1> )
<name5> ( <name3> . <name6> [ <val1> : ] )	<name5> ( <name3> . <name6> [ <val1> : ] )	map <name5> ( <name3> . <name6> [ <val1> : ] )
<val5> から <val2> 未満までの数列の各要素を <name2> とし、 ( <val3> 、 <val6> 、 <val4> 、 <val1> ) からなる列の列の各要素を <name5> とし、 <name5> に <name2> の文字列を加えた値の列を <name1> とする	<name1> = [ <name5> + str ( <name2> ) for <name5> in [ [ <val3> , <val6> , <val4> , <val1> ] for <name2> in range ( <val5> , <val2> ) ] ]	<name4> = [ [ <name5> + str ( <name2> ) for <name5> in [ <val3> , <val6> , <val4> , <val1> ] for <name2> in range ( <val2> ) ]
<name3> の <name6> 番目の <name1> 番目が <name4> と等しいとき、	if <name3> [ <name6> ] [ <name1> ] == <name4> :	for <name3> in <name3> [ <name6> ] [ <name1> ] == <name4> :
<name6> の末尾に ( <name5> 、 <name1> ) からなる列を追加する	<name6> . append ( [ <name5> , <name1> ] )	<name4> . append ( [ <name5> , <name1> ] )
<name3> を展開し、それぞれ <name3> 、 <name4> 、 <name1> 、 <name6> 、 <name5> 、 <name2> とする	<name3> , <name4> , <name1> , <name6> , <name5> , <name2> = <name3>	<name3> , <name4> , <name1> , <name6> , <name5> , <name2> = <name3>
<name4> ( <name2> + <val5> , <name6> , <name3> , <name1> -1 )	<name4> ( <name2> + <val5> , <name6> , <name3> , <name1> - <val5> )	<name4> ( <name2> + <val5> , <name6> , <name3> , <name1> - 1 )
<name5> と <val3> を <name1> だけ左シフトした値の論理積でないとき、	if not ( <name5> & ( <val3> << <name1> ) ) :	for <name5> & ( ( <val3> << <name1> ) ) :
<name2> の末尾を除いた部分列の各要素を <name4> 、 <name3> とし、 <name4> の列を返す	return [ <name4> for <name4> , <name3> in <name2> [ : - 1 ] ]	return [ <name4> for <name4> , <name3> in <name2> [ : - 1 ] ]
<name4> を <name2> の <name5> 番目の <name6> 番目にする	<name2> [ <name5> ] [ <name6> ] = <name4>	( <name2> [ <name5> ] [ <name6> ] = <name4> )
<name1> の <name4> 番目の <name3> 番目かつ <name6> の <name4> 番目が <name3> と等しくないとき、	if <name1> [ <name4> ] [ <name3> ] and <name6> [ <name4> ] != <name3> :	if <name1> [ <name4> ] [ <name3> ] and <name6> [ <name4> ] != <name3> :
<name4> の ( <name3> 、 <name2> 、 <name1> ) の組番目を返す	return <name4> [ ( <name3> , <name2> , <name1> ) ]	yield <name4> [ ( <name3> , <name2> , <name1> ) ]
<name5> と <name6> の論理和を <name5> とする	<name5> = <name5> | <name6>	( <name5> = <name5> | <name6> )
<name3> の長さを <name6> の <name5> 番目にする <name3> の整数値を <name2> の <name5> 番目にする	<name6> [ <name5> ] = len ( <name3> ) <name2> [ <name5> ] = int ( <name3> )	<name1> [ <name5> ] = len ( <name3> ) <name2> [ <name5> ] = int ( <name3> )
<name5> の <name1> 番目が <name2> より大きいとき、	if <name5> [ <name1> ] > <name2> :	list if <name5> [ <name1> ] > <name2> :
<name3> を順に <name2> 、 <name4> 、 <name6> 、 <name5> として、繰り返す	for <name2> , <name4> , <name6> , <name5> in <name3> :	. for <name2> , <name4> , <name6> , <name5> in <name3> :
( <val5> 、 <val6> 、 <val4> 、 <val2> 、 <val3> 、 <val1> ) の組の各要素を <name1> とし、 <name3> の <name1> 番目の列を返す	return [ <name3> [ <name1> ] for <name1> in ( <val5> , <val6> , <val4> , <val2> , <val3> , <val1> ) ]	[ return [ <val5> ] for <name1> in ( <val5> , <val6> , <val4> , <val2> , <val3> , <val1> ) ]
<name2> の長さが <val4> 以上のとき、	if len ( <name2> ) >= <val4> :	for <name2> in len ( <name2> ) >= <val4> :
<name3> の <name4> の <val2> 番目を出力する	print ( <name3> . <name4> [ <val2> ] )	print ( <name3> . <name4> [ <val2> ] )
<name1> の <name5> を <name1> の <name2> の <name4> 番目にする	<name1> . <name2> [ <name4> ] = <name1> . <name5>	<name4> . <name1> [ <name2> . <name4> ] = <name1> . <name5>
( 、つまり未定値 ) からなる列の <val2> 回分の列を <name5> とする	<name5> = [ None ] * <val2>	( <name5> = [ None ] * <val2> )
middle を <name2> とする	<name2> = 'middle'	<name2> = %.16f' . join ( )
<name1> から読み込んだ一行の両端から空白改行を取り除いた文字列を空白で分割した字句列を <name6> とする	<name6> = <name1> . readline ( ) . strip ( ) . split ( )	<name6> = <name1> . readline ( ) . strip ( ) . split ( )
<name1> の <name4> に <val5> を掛けた値に <name3> を加えた値番目を <name2> とする	<name2> = <name1> [ <name4> * <val5> + <name3> ]	<name3> = <name1> [ <name4> * <val5> + <name3> ]
d を出力する	print ( 'd' )	& print ( '%d )
<name2> の <name3> 番目の末尾に ( <name6> 、 <name1> ) の組を追加する	<name2> [ <name3> ] . append ( ( <name6> , <name1> ) )	<name2> [ <name3> ] . append ( ( <name6> , <name1> ) )
<name3> の <name5> の <name6> 番目を <name3> の <name5> の <name2> 番目だけ増加させる	<name3> . <name5> [ <name6> ] += <name3> . <name5> [ <name2> ]	<name4> . <name5> [ <name6> ] += <name3> . <name5> [ <name2> ]
<name6> の <name1> 番目の <name4> 番目が <name6> の <name3> 番目の <name4> 番目と等しいとき、	if <name6> [ <name1> ] [ <name4> ] == <name6> [ <name3> ] [ <name4> ] :	[ if <name6> [ <name1> ] [ <name4> ] == <name6> [ <name3> ] [ <name4> ] :
<name1> を <val4> で割った余りにする	<name1> % = <val4>	( <name1> % = <val4> )
<name4> ( <name2> + <name5> -1 , <name5> ) を返す	return <name4> ( <name2> + <name5> - 1 , <name5> )	yield <name4> ( <name2> + <name5> - 1 , <name5> )
<name1> の <name5> を <val4> だけ増加させる	<name1> . <name5> += <val4>	( <name1> . <name5> += <val4> )
( 、つまり偽 ) からなる列の <val6> 回分の列を <name4> とする	<name4> = [ False ] * <val6>	<name4> = [ False ] * <val6>
<name5> の <name3> に <val1> を加えた値から、つまり末尾までの部分列を <name5> とする	<name5> = <name5> [ <name3> + <val1> : ]	<name5> = <name5> [ <name3> + <val1> : ]
0 から <name1> 未満までの数列の各要素を <name2> とし、 <name6> ( ) を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]	<name5> = [ list ( map ( int , <name6> ( ) . split ( ) ) ) for <name2> in range ( <name1> ) ]
<name5> ( <name6> ) に <val4> を加えた値を <val2> で割った商を <val1> で割った商に <val4> を加えた値を出力する	print ( ( ( ( <name5> ( <name6> ) + <val4> ) // <val2> ) // <val1> ) + <val4> )	str ( ( <name5> ( <name6> ) + <val4> ) // <val2> // <val1> + <val4> )
<name3> に <val2> を掛けた値に <name1> に <val4> を掛けた値を加えた値に <name5> を加えた値を <name6> とする	<name6> = <name3> * <val2> + <name1> * <val4> + <name5>	else = <name3> * <val2> + <name1> * <val4> + <name5>
<name6> の <name4> 番目の文字列を出力する	print ( str ( <name6> [ <name4> ] ) )	) print ( str ( <name6> [ <name4> ] ) )
<name6> を <name5> の <name1> 番目だけ増加させる	<name6> += <name5> [ <name1> ]	( <name6> += <name5> [ <name1> ] )
<name3> の <name4> の整数値を出力する	print ( int ( <name3> . <name4> ) )	) print ( int ( <name3> . <name4> ) )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name1> 、 <name5> 、 <name3> 、 <name2> とする	<name1> , <name5> , <name3> , <name2> = map ( float , input ( ) . split ( ) )	<name1> , <name5> , <name3> , <name2> = map ( float , input ( ) . split ( ) )
( <val6> 、 <val6> 、未定値 ) からなる列を <name4> とする	<name4> = [ <val6> , <val6> , None ]	<name4> = [ <val6> , <val6> , None ]
( 、つまり偽 ) からなる列の <name2> の <name1> 回分の列を <name3> とする	<name3> = [ False ] * <name2> . <name1>	<name3> = [ False ] * <name2> . <name1>
<name5> の <name3> の <name2> 番目に <name5> の位置 <name4> 、 <name1> 、 <name5> から <name2> に <val6> を掛けた値を探して見つかった位置を加えた値を返す	return <name5> . <name3> [ <name2> ] + <name5> . find ( <name2> * <val6> , <name4> , <name1> , <name5> )	yield <name5> . <name3> [ <name2> ] + <name5> . find ( <name2> * <val6> , <name4> , <name1> , <name5> )
<val3> の <val5> 乗に <val2> を加えた値を <name4> とする	<name4> = <val3> ** <val5> + <val2>	<name4> = <val3> ** <val5> + <val2>
<name5> ( <name1> . <name6> ) を返す	return <name5> ( <name1> . <name6> )	yield <name5> ( <name1> . <name6> )
<name5> を <name6> の <name5> 座標にする	<name6> . <name5> = <name5>	<name1> . <name5> = <name5>
<name6> が <name3> の <name4> に含まれないとき、	if <name6> not in <name3> . <name4> :	if <name6> not in <name3> . <name4> :
入力された文字列が <val5> と等しいとき <val2> 、そうでなければ <val4> を出力する	print ( <val2> if input ( ) == <val5> else <val4> )	else = <val2> if input ( ) == <val5> else <val4> )
<name5> . <name6> ( <name3> + <name4> , <name1> + <name2> , <val5> )	<name5> . <name6> ( <name3> + <name4> , <name1> + <name2> , <val5> )	<name1> . <name6> ( <name3> + <name4> , <name1> + <name2> , <val5> )
<name1> の、つまり先頭から <name3> から <val2> を引いた値までの -1 間隔による部分列を <name1> の <name3> 番目から、つまり末尾までの部分列にする	<name1> [ <name3> : ] = <name1> [ : <name3> - <val2> : - <val2> ]	<name1> [ <name3> : ] = <name1> [ : <name3> - <val2> : - <val2> ]
<name4> の <name5> の <name6> 番目の末尾に <name1> を追加する	<name4> . <name5> [ <name6> ] . append ( <name1> )	<name2> . <name5> [ <name6> ] . append ( <name1> )
<val3> を書式として <val4> に <name1> を掛けた値から <name2> を引いた値で整形した文字列、 <val3> を書式として <val4> に <name6> を掛けた値から <name5> を引いた値で整形した文字列を出力する	print ( <val3> . format ( <val4> * <name1> - <name2> ) , <val3> . format ( <val4> * <name6> - <name5> ) )	<val1> . format ( <val4> * <name1> - <name2> ) , <val3> . format ( <val4> * <name6> - <name5> ) )
<val1> が <name2> から <val6> を引いた値以下かどうかが <name4> より小さくかつ <val1> が <name3> 以下かどうかが <name5> より小さくかつ <name1> の <name3> 番目の <name2> から <val6> を引いた値番目が <val2> と等しいとき、	if <val1> <= <name2> - <val6> < <name4> and <val1> <= <name3> < <name5> and <name1> [ <name3> ] [ <name2> - <val6> ] == <val2> :	for <name4> in <val1> <= <name2> - <val6> < <name4> and <val1> <= <name3> < <name5> and <name1> [ <name3> ] [ <name2> - <val6> ] == <val2> :
<name5> の絶対値と <name2> の最大公約数を <name6> とする	<name6> = gcd ( abs ( <name5> ) , <name2> )	<name6> = gcd ( abs ( <name5> ) , <name2> )
% . 10 f を <name6> で割った余りを出力する	print ( '%.10f' % ( <name6> ) )	<name4> = print ( '%.10f' % <name6> )
<name5> から <name3> を引いた値が <name1> 以下のとき、	if <name5> - <name3> <= <name1> :	list if <name5> - <name3> <= <name1> :
<name6> が <val4> 以上または <name2> が <val4> 以上または <name6> と <name5> の論理積または <name2> と <name5> の論理積のとき、	if <name6> >= <val4> or <name2> >= <val4> or <name6> & <name5> or <name2> & <name5> :	for <name6> >= <val4> or <name2> >= <val4> or <name6> & <name5> or <name2> & <name5> :
<val4> が <name3> 以下かどうかが <val1> 以下のとき、	if <val4> <= <name3> <= <val1> :	list ( <val4> <= <name3> <= <val1> ) :
<name1> の <name2> 番目が <name1> の <name2> に <val5> を加えた値番目より大きいとき、	if <name1> [ <name2> ] > <name1> [ <name2> + <val5> ] :	[ if <name1> [ <name2> ] > <name1> [ <name2> + <val5> ] :
<name4> から <name2> を引いた値に <name6> を掛けた値から <name3> から <name1> を引いた値に <name5> を掛けた値を引いた値を <name5> とする	<name5> = ( <name4> - <name2> ) * <name6> - ( <name3> - <name1> ) * <name5>	<name6> = ( <name4> - <name2> ) * <name6> - ( <name3> - <name1> ) * <name5>
<name5> の <name3> 番目の <val1> 番目が <name5> の <name6> 番目の <val1> 番目より小さいとき、	if <name5> [ <name3> ] [ <val1> ] < <name5> [ <name6> ] [ <val1> ] :	while <name5> [ <name3> ] [ <val1> ] < <name5> [ <name6> ] [ <val1> ] :
<name6> の y 座標から <name2> の y 座標を引いた値に <name4> ( <name1> ( <name5> ( <val3> ) ) ) を掛けた値に <name2> の x 座標を加えた値	( <name6> . y - <name2> . y ) * <name4> ( <name1> ( <name5> ( <val3> ) ) ) + <name2> . x	+ ( <name6> . y - <name2> . y ) * <name4> ( <name1> ( <name5> ( <val3> ) ) ) + <name2> . x
( <val5> ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ <val5> ] * ( <name2> )	<name1> = [ <val5> ] * <name2>
<val5> から <name6> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> , <name6> + <val5> ) :	continue for <name3> in range ( <val5> , <name6> + <val5> ) :
<name6> 内の <val4> を <val1> で置き換えた文字列を <name6> とする	<name6> = <name6> . replace ( <val4> , <val1> )	<name6> = <name6> . replace ( <val4> , <val1> )
<name3> の <name4> から <val2> を引いた値番目の末尾に ( <name5> から <val2> を引いた値、 <name6> ) の組を追加する	<name3> [ <name4> - <val2> ] . append ( ( <name5> - <val2> , <name6> ) )	<name3> [ <name4> - <val2> ] . append ( ( <name5> - <val2> , <name6> ) )
<name3> の <name5> 番目の <val2> 番目をそうでなければ、とする	else = <name3> [ <name5> ] [ <val2> ]	now = <name3> [ <name5> ] [ <val2> ]
次は例外に関する条件がある <blk> <name1> ( <name3> ( ) ) を出力する </blk>	try : <blk> print ( <name1> ( <name3> ( ) ) ) </blk>	\ try : <blk> print ( <name1> ( <name3> ( ) ) ) </blk>
<name4> に <name4> を掛けた値から <name3> 未満までの <name4> に <name4> を掛けた値間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name4> * <name4> , <name3> , <name4> * <name4> ) :	) for <name6> in range ( <name4> * <name4> , <name3> , <name4> * <name4> ) :
0 から <name6> の <name5> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name6> の <name2> にする	<name6> . <name2> = [ [ ] for <name1> in range ( <name6> . <name5> ) ]	<name6> . <name2> = [ [ ] for <name1> in range ( <name6> . <name5> ) ]
<name4> . <name1> ( <name6> ) を <name2> とする	<name2> = <name4> . <name1> ( <name6> )	<name2> = <name4> . <name1> ( <name6> )
<name1> 、 <name2> の <name6> 番目の <name4> 番目に <name3> の <name4> 番目の <name5> 番目を加えた値の最小値を <name1> とする	<name1> = min ( <name1> , <name2> [ <name6> ] [ <name4> ] + <name3> [ <name4> ] [ <name5> ] )	<name1> = min ( <name1> , <name2> [ <name6> ] [ <name4> ] + <name3> [ <name4> ] [ <name5> ] )
<val4> を <name2> とする <name1> を <name6> とする	<name2> = <val4> <name6> = <name1>	<name6> = <name2> = <val4> <name6> = <name1>
\ <name5> ( <val2> % <name4> ( <val3> , <val1> , <val1> ) ) \	\ <name5> ( <val2> % <name4> ( <val3> , <val1> , <val1> ) ) \	for <name5> ( <val2> % <name4> ( <val3> , <val1> , <val1> ) ) \
<name3> が <name2> ( <name5> , <name4> ) に <name1> を加えた値より小さくかつ - <name1> が <name6> より小さいかどうかを返す	return <name3> < <name2> ( <name5> , <name4> ) + <name1> and - <name1> < <name6>	return <name3> < <name2> ( <name5> , <name4> ) + <name1> and - <name1> < <name6>
<name4> ( <name1> , <name3> , <name2> , <name6> , <name5> , <name4> ) が <name4> ( <name2> , <name6> , <name1> , <name3> , <name5> , <name4> ) と等しいかどうかが <name4> ( <name1> , <name3> , <name1> , <name3> , <name5> , <name4> ) と等しいとき、	if <name4> ( <name1> , <name3> , <name2> , <name6> , <name5> , <name4> ) == <name4> ( <name2> , <name6> , <name1> , <name3> , <name5> , <name4> ) == <name4> ( <name1> , <name3> , <name1> , <name3> , <name5> , <name4> ) :	isinstance ( <name4> ( <name1> , <name3> , <name2> , <name6> , <name5> , <name4> ) == <name4> ( <name2> , <name6> , <name1> , <name3> , <name5> , <name4> ) == <name4> ( <name1> , <name3> , <name1> , <name5> , <name4> ) ) :
<name1> を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name1>	<name6> , <name3> = <name1>
<name1> 、 <name5> の要素をそれぞれ組にした列のリストを <name1> とする	<name1> = list ( zip ( <name1> , <name5> ) )	<name1> = list ( zip ( <name1> , <name5> ) )
<name3> . <name2> ( <name1> , <name4> , <name5> ( <name6> , <name3> ) ) を <name6> とする	<name6> = <name3> . <name2> ( <name1> , <name4> , <name5> ( <name6> , <name3> ) )	else = <name3> . <name2> ( <name1> , <name4> , <name5> ( <name6> , <name3> ) )
<name6> が <val4> より小さくまたは <name3> が <val4> より小さいとき、	if <name6> < <val4> or <name3> < <val4> :	: if <name6> < <val4> or <name3> < <val4> :
<name5> が <name1> と等しいとき <val4> 、そうでなければ <val3> を出力する	print ( <val4> if <name5> == <name1> else <val3> )	print ( <val4> if <name5> == <name1> else <val3> )
<name4> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name6> 、 <name2> とする	<name1> , <name6> , <name2> = map ( int , <name4> ( ) . split ( ) )	<name1> , <name6> , <name2> = map ( int , <name4> ( ) . split ( ) )
<name1> を <name2> とする <val4> を <name5> とする	<name2> = <name1> <name5> = <val4>	<name2> = <name1> <name5> = <val4>
<name6> から <val4> を引いた値から <name3> 未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> - <val4> , <name3> ) :	for <name2> in range ( <name6> - <val4> , <name3> ) :
<name6> の <name4> 番目を <name6> の <name3> 番目にする	<name6> [ <name3> ] = <name6> [ <name4> ]	<name2> [ <name3> ] = <name6> [ <name4> ]
<name1> . <name6> ( <name2> . <name3> ) を <name2> の <name3> にする	<name2> . <name3> = <name1> . <name6> ( <name2> . <name3> )	dict . <name3> = <name1> . <name6> ( <name2> . <name3> )
- <name5> を <name5> とする - <name2> を <name2> とする - <name1> を <name1> とする	<name5> = - <name5> <name2> = - <name2> <name1> = - <name1>	<name4> = - <name5> <name2> = - <name2> <name1> = - <name1>
<name5> の <name3> から <val2> を引いた値番目が <name5> の <name3> 番目と等しくないとき、	if <name5> [ <name3> - <val2> ] != <name5> [ <name3> ] :	while <name5> [ <name3> - <val2> ] != <name5> [ <name3> ] :
<name5> が <name1> より小さくかつ <name1> が <name6> より小さいとき、	if <name5> < <name1> and <name1> < <name6> :	if <name5> < <name1> and <name1> < <name6> :
<val1> を書式として <name3> の <name6> で整形した文字列を出力する	print ( <val1> . format ( <name3> . <name6> ) )	print ( <val1> . format ( <name3> . <name6> ) )
<name3> が <val2> と等しいとき、 <blk> 真を <name5> の <name1> の整数値から <val6> を引いた値番目にする </blk>	if <name3> == <val2> : <blk> <name5> [ int ( <name1> ) - <val6> ] = True </blk>	: if <name3> == <val2> : <blk> <name5> [ int ( <name1> ) - <val6> ] = True </blk>
<name3> モジュールを用いる	from <name3> import hypot	from <name3> import combinations
<val5> を開始番号として <name3> の先頭を除いた部分列に番号付した組の列を順に <name1> 、 <name4> として、繰り返す	for <name1> , <name4> in enumerate ( <name3> [ <val5> : ] , start = <val5> ) :	. for <name1> , <name4> in enumerate ( <name3> [ <val5> : ] , start = <val5> ) :
( <val3> 、 <val3> 、 -1 、 <val1> ) からなる列を <name4> とする	<name4> = [ <val3> , <val3> , - <val1> , <val1> ]	<name6> = [ <val3> , <val3> , - <val1> , <val1> ]
<name3> の <name1> 番目を <name4> を <val5> で割った商だけ増加させる	<name3> [ <name1> ] += <name4> // <val5>	( <name3> [ <name1> ] += <name4> // <val5> )
<name5> に <name2> を加えた値を <name1> とする <name6> に <name4> を加えた値を <name3> とする	<name1> = <name5> + <name2> <name3> = <name6> + <name4>	<name1> = <name5> + <name2> <name3> = <name6> + <name4>
<name6> の <name2> が、つまり未定値と等しくないとき、	if <name6> . <name2> is None :	while <name6> . <name2> != None :
<name5> の <val1> 番目が <val6> より大きいとき、	if <name5> [ <val1> ] > <val6> :	continue <name5> [ <val1> ] > <val6> :
<name4> の <name6> の <name3> 番目が <val5> の浮動小数点数と等しくなくかつ <name4> の <name6> の <name1> 番目が <name4> の <name6> の <name3> 番目に <name6> の <name2> を加えた値より大きいとき、	if <name4> [ <name6> . <name3> ] != float ( <val5> ) and <name4> [ <name6> . <name1> ] > <name4> [ <name6> . <name3> ] + <name6> . <name2> :	isinstance ( <name4> . <name6> [ <name3> ] != float ( <val5> ) and <name4> . <name6> [ <name1> ] > <name4> . <name6> [ <name3> ] + <name6> . <name2> ) :
<name1> . <name4> ( <name3> )	<name1> . <name4> ( <name3> )	<name3> <name1> . <name4> ( <name3> )
<name3> が <name6> より小さいかどうかが <name4> より小さくないとき、	if not <name3> < <name6> < <name4> :	raise <name3> < <name6> < <name4> :
<name4> ( <name1> , ( <name6> , <name2> ) )	<name4> ( <name1> , ( <name6> , <name2> ) )	<name4> ( <name1> , ( <name6> , <name2> ) )
<name5> の末尾に ( <name6> 、 <name1> ) からなる列を追加する	<name5> . append ( [ <name6> , <name1> ] )	<name5> . append ( [ <name6> , <name1> ] )
<val4> を書式として <name6> の <name2> で整形した文字列を出力する	print ( <val4> . format ( <name6> . <name2> ) )	<val1> print ( <val4> . format ( <name6> [ <name2> ] ) )
<name2> . <name5> ( <name1> , <name6> )	<name2> . <name5> ( <name1> , <name6> )	( <name2> . <name5> ( <name1> , <name6> ) )
<name2> の末尾に ( <name5> 、 <name6> ) からなる列を追加する	<name2> . append ( [ <name5> , <name6> ] )	<name1> . append ( [ <name5> , <name6> ] )
<name3> の <val6> 番目に <val4> を加えた値に <name3> の <val5> 番目から <name2> 番目までの部分列を加えた値に <name3> の <name2> に <val5> を加えた値から、つまり末尾までの部分列を加えた値を <name3> とする	<name3> = <name3> [ <val6> ] + <val4> + <name3> [ <val5> : <name2> ] + <name3> [ <name2> + <val5> : ]	<name3> = <name3> [ <val6> ] + <val4> + <name3> [ <val5> : <name2> ] + <name3> [ <name2> + <val5> : ]
<name4> の最大値が <name1> より小さいとき、	if max ( <name4> ) < <name1> :	: if max ( <name4> ) < <name1> :
<name4> の <name1> に <name2> を加えた値番目を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name4> [ <name1> + <name2> ]	<name1> [ <name2> ] = <name4> [ <name1> + <name2> ]
<name3> に <name2> の <name1> 番目の <name6> 番目に <name5> の <name6> 番目を掛けた値を加えた値を <name3> とする	<name3> = <name3> + <name2> [ <name1> ] [ <name6> ] * <name5> [ <name6> ]	<name3> = <name3> + <name2> [ <name1> ] [ <name6> ] * <name5> [ <name6> ]
<name5> の各要素を <name3> とし、 <name1> . <name4> ( <name3> ) の列を <name1> の <name2> にする	<name1> . <name2> = [ <name1> . <name4> ( <name3> ) for <name3> in <name5> ]	<name4> . <name2> = [ <name1> . <name4> ( <name3> ) for <name3> in <name5> ]
<name2> を展開し、それぞれ <name4> 、 <name3> とする <name6> を展開し、それぞれ <name5> 、 <name1> とする <name2> を展開し、それぞれ <name4> 、 <name3> とする	<name4> , <name3> = <name2> <name5> , <name1> = <name6> <name4> , <name3> = <name2>	<name6> , <name3> = <name2> <name5> , <name1> = <name6> <name4> , <name3> = <name2>
<val5> を <name3> の ( <val2> 、未定値、 <name6> 、未定値 ) の組番目にする	<name3> [ ( <val2> , None , <name6> , None ) ] = <val5>	<name4> [ ( <val2> , None , <name6> , None ) ] = <val5>
<name6> の <name2> 番目が -1 と等しいとき、 <blk> <name3> ( <name2> ) </blk>	if <name6> [ <name2> ] == - 1 : <blk> <name3> ( <name2> ) </blk>	if <name6> [ <name2> ] == - 1 : <blk> <name3> ( <name2> ) </blk>
<name4> モジュールを用いる	from <name4> import deque , defaultdict	return from <name4> import deque
<name6> を <val1> で分割した字句列の <val3> 番目を <name4> とする	<name4> = <name6> . split ( <val1> ) [ <val3> ]	<name4> = <name6> . split ( <val1> ) [ <val3> ]
<val1> を開いたファイルストリームから読み込んだ行の列を順に <name4> として、繰り返す	for <name4> in open ( <val1> ) . readlines ( ) :	for <name4> in open ( <val1> ) . readlines ( ) :
<name5> . <name6> ( <name2> ) を展開し、それぞれ <name3> 、 <name4> 、 <name1> とする	<name3> , <name4> , <name1> = <name5> . <name6> ( <name2> )	<name3> , <name4> , <name1> = <name5> . <name6> ( <name2> )
<name2> から <name4> から <val3> を引いた値未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <name2> , <name4> - <val3> , - <val3> ) :	continue for <name1> in range ( <name2> , <name4> - <val3> , - <val3> ) :
<name5> を <val2> の <name4> から <name6> を引いた値乗で割った余りを <name5> とする	<name5> = <name5> % ( <val2> ** ( <name4> - <name6> ) )	else = <name5> % <val2> ** ( <name4> - <name6> )
( 、つまり未定値、未定値 ) からなる列を <name1> の <name3> 番目にする	<name1> [ <name3> ] = [ None , None ]	<name1> [ <name3> ] = [ None , None ]
<name1> の <name4> の <name2> の <name3> 番目の <name6> 番目番目を <name1> の <name5> の <name6> 番目にする	<name1> . <name5> [ <name6> ] = <name1> . <name4> [ <name2> [ <name3> ] [ <name6> ] ]	( <name1> . <name5> [ <name6> ] = <name1> . <name4> [ <name2> [ <name3> ] [ <name6> ] ] )
<name6> の <val5> を取り出した値を <name3> の <name1> にする	<name3> . <name1> = <name6> . pop ( <val5> )	<name3> . <name1> = <name6> . pop ( <val5> )
<name4> ( <name3> , ( <name6> + <name1> , <name5> ) )	<name4> ( <name3> , ( <name6> + <name1> , <name5> ) )	<name4> ( <name3> , ( <name6> + <name1> , <name5> ) )
<name6> ( <name1> [ <name3> ] , <name5> + <val4> )	<name6> ( <name1> [ <name3> ] , <name5> + <val4> )	set ( <name6> ( <name1> [ <name3> ] , <name5> + <val4> ) )
<val3> から始まる無限の整数列を順に <name1> として、繰り返す	for <name1> in count ( <val3> ) :	: for <name1> in count ( <val3> ) :
<name4> の <val5> 乗を <name2> で割った余りを <name3> とする	<name3> = ( <name4> ** <val5> ) % <name2>	<name3> = <name4> ** <val5> % <name2>
<name5> 、 <name3> の <name6> と等しい要素の最初の位置、 <name3> の <name1> と等しい要素の最初の位置の最小値に <val2> を加えた値を出力する	print ( <name5> , min ( <name3> . index ( <name6> ) , <name3> . index ( <name1> ) ) + <val2> )	<name5> . min ( <name5> , min ( <name3> . index ( <name6> ) ) , <name3> . index ( <name1> ) ) + <val2> )
関数 <name1> を <name4> 、 <name6> をパラメータとして定義する <name2> ( <name4> . <name3> , <name6> . <name3> ) かつ <name2> ( <name4> . <name5> , <name6> . <name5> ) を返す	def <name1> ( <name4> , <name6> ) : return <name2> ( <name4> . <name3> , <name6> . <name3> ) and <name2> ( <name4> . <name5> , <name6> . <name5> )	try ( <name1> ( <name4> , <name6> ) : return <name2> ( <name4> . <name3> , <name6> . <name3> ) and <name2> ( <name4> . <name5> , <name6> . <name5> ) )
<name1> の <name6> 番目の末尾に ( <name2> 、 <name5> ) の組を追加する	<name1> [ <name6> ] . append ( ( <name2> , <name5> ) )	not <name1> [ <name6> ] . append ( ( <name2> , <name5> ) )
<name1> を <name6> で割った商を <name1> とする	<name1> = <name1> // <name6>	( <name1> = <name1> // <name6> )
<name2> が <val5> と等しくかつ <name1> に <name4> を加えた値が <name3> 以上のとき、	if <name2> == <val5> and <name1> + <name4> >= <name3> :	for <name2> == <val5> and <name1> + <name4> >= <name3> :
<name2> の、つまり先頭から <name1> 番目までの部分列に <name5> の <name6> から <name1> を引いた値から、つまり末尾までの部分列を加えた値に <name5> の、つまり先頭から <name6> から <name1> を引いた値までの部分列を加えた値に <name2> の <name4> 番目から、つまり末尾までの部分列を加えた値を <name2> とする	<name2> = <name2> [ : <name1> ] + <name5> [ <name6> - <name1> : ] + <name5> [ : <name6> - <name1> ] + <name2> [ <name4> : ]	<name2> = <name2> [ : <name1> ] + <name5> [ <name6> - <name1> : ] + <name5> [ : <name6> - <name1> ] + <name2> [ <name4> : ]
<name5> 、 <name6> の最小値を <name5> とする <name3> 、 <name6> の最大値を <name3> とする	<name5> = min ( <name5> , <name6> ) <name3> = max ( <name3> , <name6> )	<name2> = min ( <name5> , <name6> ) <name3> = max ( <name3> , <name6> )
<val5> から <name4> 未満までの数列の各要素を <name3> とし、 <val5> の列を <name1> とする	<name1> = [ <val5> for <name3> in range ( <name4> ) ]	<name6> = [ <val5> for <name3> in range ( <name4> ) ]
( <name5> 、 <name2> ) の組を <name3> の <name6> にする	<name3> . <name6> = ( <name5> , <name2> )	<name3> . <name6> = ( <name5> , <name2> )
入力された文字列の整数値、入力された文字列を <name3> 、 <name5> とする	<name3> , <name5> = int ( input ( ) ) , input ( )	<name3> , <name5> = int ( input ( ) ) , input ( )
( <val6> 、 <val5> ) の組を <name2> とする	<name2> = ( <val6> , <val5> )	<name2> = ( <val6> , <val5> )
<name3> に <name4> の <name5> に <val6> を加えた値番目の <val1> 番目を加えた値から <name2> を引いた値を <name2> とする	<name2> = <name3> + <name4> [ <name5> + <val6> ] [ <val1> ] - <name2>	<name2> = <name3> + <name4> [ <name5> + <val6> ] [ <val1> ] - <name2>
<val3> を間に入れて <name6> の各要素に整数を適用した列を連結した文字列を出力する	print ( <val3> . join ( map ( str , <name6> ) ) )	print ( <val3> . join ( map ( str , <name6> ) ) )
<name4> 、 <name1> の <name4> 番目を出力する	print ( <name4> , <name1> [ <name4> ] )	<name4> . print ( <name4> , <name1> [ <name4> ] )
<name5> ( - ( <name2> - <name3> ) , ( <name6> - <name1> ) ) を <name4> で割った余りを <name4> とする	<name4> = <name5> ( - ( <name2> - <name3> ) , ( <name6> - <name1> ) ) % <name4>	<name4> = <name5> ( - ( <name2> - <name3> ) , ( <name6> - <name1> ) ) % <name4>
<val4> を <name1> の <name3> の先頭番目の <name3> の <val4> 番目番目の <name3> の <val2> 番目番目にする	<name1> [ <name3> [ 0 ] ] [ <name3> [ <val4> ] ] [ <name3> [ <val2> ] ] = <val4>	<name4> [ <name1> [ <name3> [ 0 ] ] [ <name3> [ <val4> ] ] [ <name3> [ <val2> ] ] = <val4>
<name1> が <val2> と等しくかつ <name4> が <val2> と等しくかつ <name3> が <val2> と等しいとき、	if ( <name1> == <val2> and <name4> == <val2> and <name3> == <val2> ) :	for <name4> == <val2> and <name4> == <val2> and <name3> == <val2> :
( <val1> ) からなる列を <name4> とする	<name4> = [ <val1> ]	<name4> = [ <val1> ]
\ <name1> ( <val2> % <name5> [ <val3> ] [ <name6> ] ) \	\ <name1> ( <val2> % <name5> [ <val3> ] [ <name6> ] ) \	% <name1> ( <val2> % <name5> [ <val3> ] [ <name6> ] ) \
<val2> から <val1> 未満までの -1 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , <val1> , - 1 ) :	for <name5> in range ( <val2> , <val1> , - 1 ) :
<name3> ( <name4> , <name6> ) を <name1> とする	<name1> = <name3> ( <name4> , <name6> )	<name1> = <name3> ( <name4> , <name6> )
<name3> の <name4> 番目、 ( <name3> の <name2> 番目 ) からなる列を <name3> の <name2> 番目、 <name3> の <name4> 番目とする	<name3> [ <name2> ] , <name3> [ <name4> ] = <name3> [ <name4> ] , [ <name3> [ <name2> ] ]	<name3> [ <name2> ] , <name3> [ <name4> ] = <name3> [ <name4> ] , [ <name3> [ <name2> ] ]
<name6> を <name1> の ( <name3> 、 <name4> 、 <name2> ) の組番目にする	<name1> [ ( <name3> , <name4> , <name2> ) ] = <name6>	<name1> [ ( <name3> , <name4> , <name2> ) ] = <name6>
( ( <val2> ) からなる列の <val2> から <name3> 未満までの数列の各要素を <name4> とし、 <name6> の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val2> ] * [ <name6> for <name4> in range ( <name3> ) ] ]	<name1> = [ [ <val2> ] * [ <name6> for <name4> in range ( <name3> ) ] ]
<name5> が <val3> と等しいとき、 <blk> 真を返す </blk>	if <name5> == <val3> : <blk> return True </blk>	<blk> if <name5> == <val3> : <blk> return True </blk>
<val6> を <name2> の <name5> 番目の <name5> 番目にする	<name2> [ <name5> ] [ <name5> ] = <val6>	( <name2> [ <name5> ] [ <name5> ] = <val6> )
<name6> ( <name5> . <name2> [ <val4> : ] )	<name6> ( <name5> . <name2> [ <val4> : ] )	<name4> ( <name5> . <name2> [ <val4> : ] )
<name4> が <name5> と等しいとき <val1> 、そうでなければ <val2> を出力する	print ( <val1> if <name4> == <name5> else <val2> )	<name4> . print ( <val1> if <name4> == <name5> else <val2> )
( <name4> ) からなる列の <val2> を <name5> だけ左シフトした値回分の列を <name6> とする	<name6> = [ <name4> ] * ( <val2> << <name5> )	<name6> = [ <name4> ] * ( <val2> << <name5> )
<name4> の <name1> から <val6> を引いた値番目を <name3> とする	<name3> = <name4> [ <name1> - <val6> ]	<name3> = <name4> [ <name1> - <val6> ]
( <val6> 、 <val5> ) からなる列の <name3> ( <name1> , <name4> ) または <name3> ( <name1> [ <val2> : ] , <name4> ) 番目を出力する	print ( [ <val6> , <val5> ] [ <name3> ( <name1> , <name4> ) or <name3> ( <name1> [ <val2> : ] , <name4> ) ] )	print ( [ <val6> , <val5> ] [ <name3> ( <name1> , <name4> ) or <name3> ( <name1> [ <val2> : ] , <name4> ) ] )
<name4> . <name6> ( <name1> , <name3> , <name5> )	<name4> . <name6> ( <name1> , <name3> , <name5> )	<name3> . <name4> . <name6> ( <name1> , <name3> , <name5> )
<name4> の <name6> に <name3> を加えた値番目の <name1> に <name2> を加えた値番目が <val5> と等しいとき、	if <name4> [ <name6> + <name3> ] [ <name1> + <name2> ] == <val5> :	list ( <name4> [ <name6> + <name3> ] [ <name1> + <name2> ] == <val5> :
<name3> の <name1> 番目の <name2> 番目のとき、	if <name3> [ <name1> ] [ <name2> ] :	if <name3> [ <name1> ] [ <name2> ] :
<name5> が <val4> と等しくかつ <name2> が <val4> と等しいとき、	if <name5> == <val4> and <name2> == <val4> :	: if <name5> == <val4> and <name2> == <val4> :
<name4> を <name1> の <name2> 番目に <name5> の <name6> に <val3> を加えた値から <name2> を引いた値番目を掛けた値だけ増加させる	<name4> += <name1> [ <name2> ] * <name5> [ <name6> + <val3> - <name2> ]	( <name4> += <name1> [ <name2> ] * <name5> [ <name6> + <val3> - <name2> ] )
<name5> ( <name2> , <name3> , <name6> + <val4> ) を展開し、それぞれ <name4> 、 <name1> とする	<name4> , <name1> = <name5> ( <name2> , <name3> , <name6> + <val4> )	<name4> , <name1> = <name5> ( <name2> , <name3> , <name6> + <val4> )
<name5> を <val1> で分割した字句列を展開し、それぞれ <name6> 、 <name2> とする	<name6> , <name2> = <name5> . split ( <val1> )	<name3> , <name2> = <name5> . split ( <val1> )
<val6> を <name1> の <name3> にする	<name1> . <name3> = <val6>	( <name1> . <name3> = <val6> )
<name4> から <name6> [ : <name3> ] の総和に <val1> を掛けた値を引いた値から <name2> に <name5> から <name3> に <val1> を掛けた値を引いた値を掛けた値を引いた値に <val1> を掛けた値を <name5> とする	<name5> = ( <name4> - sum ( <name6> [ : <name3> ] ) * <val1> - <name2> * ( <name5> - <name3> * <val1> ) ) * <val1>	<name5> = ( <name4> - sum ( <name6> [ : <name3> ] ) * <val1> - <name2> * ( <name5> - <name3> * <val1> ) ) * <val1>
<name4> が <val5> と等しいとき、 <blk> <name2> を <name1> だけ増加させる </blk>	if <name4> == <val5> : <blk> <name2> += <name1> </blk>	\ if <name4> == <val5> : <blk> <name2> += <name1> </blk>
b を出力する	print ( 'b' )	dict . print ( '{0:.5f} ' ) )
<name5> ( <name4> ) のとき、 <blk> <name2> を <val6> だけ増加させる </blk>	if <name5> ( <name4> ) : <blk> <name2> += <val6> </blk>	\ <name5> ( <name4> ) : <blk> <name2> += <val6> </blk>
入力された文字列の両端から空白改行を取り除いた文字列の整数値を <name1> とする	<name1> = int ( input ( ) . strip ( ) )	<name1> = int ( input ( ) . strip ( ) )
<name5> の <name2> に <val4> を加えた値番目が <val6> と等しいとき、 <blk> <name1> を <val3> だけ減少させる </blk>	if <name5> [ <name2> + <val4> ] == <val6> : <blk> <name1> -= <val3> </blk>	list ( <name5> [ <name2> + <val4> ] == <val6> ) : <blk> <name1> -= <val3> </blk>
<name4> に <name5> から <name1> を引いた値を掛けた値が <name2> に <name3> を掛けた値に <name5> を掛けた値に <name1> を掛けた値以下のとき、	if <name4> * ( <name5> - <name1> ) <= <name2> * <name3> * <name5> * <name1> :	isinstance ( <name4> * ( <name5> - <name1> ) <= <name2> * <name3> * <name5> * <name1> ) :
<name4> の <val5> 乗に <name3> の <val5> 乗を加えた値の平方根を <name6> とする	<name6> = math . sqrt ( <name4> ** <val5> + <name3> ** <val5> )	<name6> = math . sqrt ( <name4> ** <val5> + <name3> ** <val5> )
<name6> の <name1> 番目の長さを <name2> とする	<name2> = len ( <name6> [ <name1> ] )	<name2> = len ( <name6> [ <name1> ] )
<name1> の <name2> の <name5> 番目を <name2> とする	<name2> = <name1> . <name2> [ <name5> ]	<name2> = <name1> . <name2> [ <name5> ]
( 、つまり未定値、未定値 ) からなる列を <name4> の <name2> 番目にする	<name4> [ <name2> ] = [ None , None ]	<name2> [ <name2> ] = [ None , None ]
<name3> . <name5> ( <val4> ) を <name6> として <name2> をソートする	<name2> . sort ( <name6> = <name3> . <name5> ( <val4> ) )	<name2> . sort ( <name6> = <name3> . <name5> ( <val4> ) )
<name1> . <name5> ( <val2> ** <val6> )	<name1> . <name5> ( <val2> ** <val6> )	<name1> . <name5> ( <val2> ** <val6> )
<name4> の <name3> -1 番目の <name1> 番目の <val6> 番目に <name4> の <name3> 番目の <name1> から <val2> を引いた値番目の <val6> 番目を加えた値から <name4> の <name3> から <val2> を引いた値番目の <name1> から <val2> を引いた値番目の先頭を引いた値を <name4> の <name3> 番目の <name1> 番目の <val6> 番目にする	<name4> [ <name3> ] [ <name1> ] [ <val6> ] = <name4> [ <name3> - <val2> ] [ <name1> ] [ <val6> ] + <name4> [ <name3> ] [ <name1> - <val2> ] [ <val6> ] - <name4> [ <name3> - <val2> ] [ <name1> - <val2> ] [ <val6> ]	<name5> [ <name3> ] [ <name1> ] [ <val6> ] = <name4> [ <name3> - <val2> ] [ <name1> ] [ <val6> ] + <name4> [ <name3> ] [ <name1> - <val2> ] [ <val6> ] - <name4> [ <name3> - <val2> ] [ <name1> - <val2> ] [ <val6> ]
<name2> の <name3> から <val6> を引いた値番目を <name1> とする	<name1> = <name2> [ <name3> - <val6> ]	<name1> = <name2> [ <name3> - <val6> ]
<name5> を <name6> に <name4> のラジアンの正弦を掛けた値だけ増加させる	<name5> += <name6> * math . sin ( math . radians ( <name4> ) )	<name6> += <name6> * math . sin ( math . radians ( <name4> ) )
<name6> 、 <name4> の最小値を出力する	print ( min ( <name6> , <name4> ) )	range ( min ( <name6> , <name4> ) )
<name3> の <val4> 番目から、つまり末尾までの部分列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name6> 、 <name2> とする	<name5> , <name6> , <name2> = map ( int , <name3> [ <val4> : ] . split ( ) )	<name3> , <name6> , <name2> = map ( int , <name3> [ <val4> : ] . split ( ) )
<name1> ( <name3> , ( <name4> , <name5> ) ) を <name2> とする	<name2> = <name1> ( <name3> , ( <name4> , <name5> ) )	dict = <name1> ( <name3> , ( <name4> , <name5> ) )
0 から <name5> から <val1> を引いた値未満までの数列の各要素を <name2> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組の列を <name6> とする	<name6> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name5> - <val1> ) ]	<name4> = [ tuple ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <name5> - <val1> ) ]
<name4> から <name2> を引いた値の <val5> 乗に <name6> から <name3> を引いた値の <val5> 乗を加えた値を <name1> とする	<name1> = ( <name4> - <name2> ) ** <val5> + ( <name6> - <name3> ) ** <val5>	<name1> = ( <name4> - <name2> ) ** <val5> + ( <name6> - <name3> ) ** <val5>
- <name3> の <name5> の <name3> . <name2> ( <name6> ) 番目を返す	return - <name3> . <name5> [ <name3> . <name2> ( <name6> ) ]	yield - <name3> . <name5> [ <name3> . <name2> ( <name6> ) ]
<name6> の末尾に ( <name1> 、 <name2> 、 <name5> 、 <name4> ) の組を追加する	<name6> . append ( ( <name1> , <name2> , <name5> , <name4> ) )	<name4> . append ( ( <name1> , <name2> , <name5> , <name4> ) )
<name5> <name3> <name1> .	<name5> <name3> <name1> .	<name2> <name5> <name3> <name1> .
<name3> の余弦を <name6> とする	<name6> = cos ( <name3> )	<name6> = math . cos ( <name3> )
<name4> が -1 と等しくないとき、 <blk> <name2> 内の <name4> と等しい要素を取り除く </blk>	if <name4> != - 1 : <blk> <name2> . remove ( <name4> ) </blk>	\ <name4> != - 1 : <blk> <name2> . remove ( <name4> ) </blk>
<name5> をパラメータとして <name5> の <val2> 番目を返す関数を <name6> として <name1> のキーと値の集まりの最大値を展開してを出力する	print ( * max ( <name1> . items ( ) , <name6> = lambda <name5> : <name5> [ <val2> ] ) )	print ( * max ( <name1> . items ( ) , <name6> = lambda <name5> : <name5> [ <val2> ] ) )
<name1> の <name4> から読み込んだ一行を <name5> とする	<name5> = <name1> . <name4> . <name5>	<name1> . <name5> = <name1> . <name4> . <name5>
<val3> から <name5> 未満までの数列の各要素を <name1> とし、 <val3> から <name5> 未満までの数列の各要素を <name1> とし、 <val3> の列の列を <name6> とする	<name6> = [ [ <val3> for <name1> in range ( <name5> ) ] for <name1> in range ( <name5> ) ]	<name6> = [ [ <val3> for <name1> in range ( <name5> ) ] for <name1> in range ( <name5> ) ]
<name5> が <val1> 以上の間、次を繰り返す	while <name5> >= <val1> :	del <name5> >= <val1> :
<val4> から <name3> の長さ未満までの数列を反転した列を順に <name2> として、繰り返す	for <name2> in reversed ( range ( <val4> , len ( <name3> ) ) ) :	in reversed ( range ( <val4> , len ( <name3> ) ) :
<name6> に <name2> を掛けた値が <val5> より小さくかつ <name3> に <name1> を掛けた値が <val5> より小さいとき、	if <name6> * <name2> < <val5> and <name3> * <name1> < <val5> :	list ( <name6> * <name2> < <val5> and <name3> * <name1> < <val5> ) :
<name2> の末尾に ( -1 ) からなる列の <name6> に <val5> を加えた値回分の列を追加する	<name2> . append ( [ - 1 ] * ( <name6> + <val5> ) )	<name2> . append ( [ - 1 ] * ( <name6> + <val5> ) )
<name5> の末尾に <name4> に <name3> を加えた値を追加する	<name5> . append ( <name4> + <name3> )	<name3> . append ( <name4> + <name3> )
<name2> に <name6> を掛けた値に <name3> に <name1> を掛けた値を加えた値を <name5> で割った値、 <name2> に <name6> を掛けた値から <name3> に <name1> を掛けた値を引いた値を <name5> で割った値を <name5> 、 <name4> とする	<name5> , <name4> = ( <name2> * <name6> + <name3> * <name1> ) / <name5> , ( <name2> * <name6> - <name3> * <name1> ) / <name5>	<name2> , <name5> , <name4> = ( <name2> * <name6> + ( <name3> * <name1> ) ) / <name5> , ( <name2> * <name6> - <name3> * <name1> ) / <name5>
<name2> ( <name1> , <name1> [ <val5> ] , <name4> )	<name2> ( <name1> , <name1> [ <val5> ] , <name4> )	set ( <name2> ( <name1> , <name1> [ <val5> ] , <name4> ) )
0 から <val6> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name3> in range ( <val6> ) ]	<name6> = [ int ( input ( ) ) for <name3> in range ( <val6> ) ]
( <name6> 、 <name1> 、未定値 ) からなる列を <name4> とする	<name4> = [ <name6> , <name1> , None ]	<name4> = [ <name6> , <name1> , None ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name4> 、 <name5> 、 <name6> 、 <name1> 、 <name2> とする	<name3> , <name4> , <name5> , <name6> , <name1> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name4> , <name5> , <name6> , <name1> , <name2> = map ( int , input ( ) . split ( ) )
<val5> の <val1> 乗を <name6> とする	<name6> = <val5> ** <val1>	<name6> = <val5> ** <val1>
<name5> のとき <name5> 、そうでなければ <val4> を出力する	print ( <name5> if <name5> else <val4> )	print ( <name5> if <name5> else <val4> )
<name1> を <name6> を <val2> で割った余りだけ増加させる	<name1> += <name6> % <val2>	not <name1> += ( <name6> % <val2> )
<name4> の <name3> 番目の <name6> 番目のとき、	if <name4> [ <name3> ] [ <name6> ] :	[ if <name4> [ <name3> ] [ <name6> ] :
<name5> の <name6> が <name4> と等しくなくかつ <name5> の <name6> が、つまり未定値と等しくないとき、	if <name5> . <name6> != <name4> and <name5> . <name6> != None :	for <name5> . <name6> != <name4> and <name5> . <name6> != None :
<val2> から <name1> 未満までの整数乱数を <name5> とする	<name5> = randrange ( <val2> , <name1> )	<name5> = re . in range ( <val2> , <name1> )
<name1> に <name3> を追加した集まり <name1> に <name4> を追加した集まり	<name1> . add ( <name3> ) <name1> . add ( <name4> )	not <name1> . add ( <name3> ) <name1> . add ( <name4> )
<name3> の各要素を <name4> とし、 <name4> から <val5> を引いた値の列を <name3> とする	<name3> = [ <name4> - <val5> for <name4> in <name3> ]	<name6> = [ <name4> - <val5> for <name4> in <name3> ]
<name4> の <name1> 番目に <name4> の <name1> に <val5> を加えた値番目を加えた値を <name2> とする	<name2> = <name4> [ <name1> ] + <name4> [ <name1> + <val5> ]	<name2> = <name4> [ <name1> ] + <name4> [ <name1> + <val5> ]
<name3> の <name6> 番目を展開し、それぞれ <name2> 、 <name4> とする <name3> の <name2> 番目を展開し、それぞれ <name5> 、 <name1> とする	<name2> , <name4> = <name3> [ <name6> ] <name5> , <name1> = <name3> [ <name2> ]	<name6> , <name4> = <name3> [ <name6> ] <name5> , <name1> = <name3> [ <name2> ]
<name1> ( <name5> , <name2> , <name4> , <name6> )	<name1> ( <name5> , <name2> , <name4> , <name6> )	<name4> ( <name5> , <name2> , <name4> , <name6> )
<name5> から <name4> を引いた値から <name1> を引いた値を <name3> とする	<name3> = <name5> - <name4> - <name1>	<name3> = <name5> - <name4> - <name1>
<name3> の <name6> 番目を <val2> を <name1> だけ左シフトした値との論理和にする	<name3> [ <name6> ] | = ( <val2> << <name1> )	<name3> [ <name6> ] | = ( <val2> << <name1> )
<val1> から <name3> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , len ( <name3> ) ) :	len ( range ( <val1> , len ( <name3> ) ) :
<name5> の <name4> 番目の末尾に ( <name2> 、 <name6> に <name3> を加えた値、 <val1> を <name2> だけ左シフトした値 ) の組を追加する	<name5> [ <name4> ] . append ( ( <name2> , <name6> + <name3> , <val1> << <name2> ) )	<name2> [ <name4> ] . append ( ( <name2> , <name6> + <name3> , <val1> << <name2> ) )
<name6> のキーの集まりの各要素を <name1> とし、 <name1> の先頭が <name3> で始まるかどうかの列が少なくともひとつは真かどうかを返す	return any ( [ <name1> . startswith ( <name3> ) for <name1> in <name6> . keys ] )	yield Counter ( [ <name1> . most_common ( <name3> ) for <name1> in <name6> . keys ( ) ] )
<name4> の <name1> 番目を返す	return <name4> [ <name1> ]	yield <name4> [ <name1> ]
( <val2> ) からなる列の <val6> 回分の列を <name1> とする	<name1> = [ <val2> ] * <val6>	<name1> = [ <val2> ] * <val6>
<name4> の末尾に ( <name6> に <val2> を加えた値、 <name1> 、 <name3> から <val2> を引いた値 ) の組を追加する	<name4> . append ( ( <name6> + <val2> , <name1> , <name3> - <val2> ) )	<name4> . append ( ( <name6> + <val2> , <name1> , <name3> - <val2> ) )
<name4> ( <name5> ( <name3> ( ) ) ) を <name2> とするを <name2> の <val6> 番目にする	<name2> [ <val6> ] = <name2> = <name4> ( <name5> ( <name3> ( ) ) )	<name2> [ <val6> ] = <name2> = <name4> ( <name5> ( <name3> ( ) ) )
<name1> を <name4> の <name6> の先頭番目の <name6> の <val5> 番目番目にする	<name4> [ <name6> [ 0 ] ] [ <name6> [ <val5> ] ] = <name1>	<name4> [ <name6> [ 0 ] ] [ <name6> [ <val5> ] ] = <name1>
<name2> の末尾に <name3> の <name6> . <name1> ( ) 番目を追加する	<name2> . append ( <name3> [ <name6> . <name1> ( ) ] )	<name2> . append ( <name3> [ <name6> . <name1> ( ) ] )
<name1> の <name4> 番目でないとき、	if not <name1> [ <name4> ] :	while not <name1> [ <name4> ] :
<name2> ( <name4> , <name1> . <name3> [ <name6> ] ) を <name5> とする	<name5> = <name2> ( <name4> , <name1> . <name3> [ <name6> ] )	else = <name2> ( <name4> , <name1> . <name3> [ <name6> ] )
( <name3> の先頭の絶対値 ) からなる列を <name2> とする	<name2> = [ abs ( <name3> [ 0 ] ) ]	<name6> = [ abs ( <name3> [ 0 ] ) ]
<val1> <name4> <val5> を <name6> とする	<name6> = <val1> <name4> <val5>	( <name6> = <val1> <name4> <val5> )
<name2> の <name6> 番目の <name1> 番目が <name4> より大きいとき、	if <name2> [ <name6> ] [ <name1> ] > <name4> :	[ if <name2> [ <name6> ] [ <name1> ] > <name4> :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name3> 、 <name6> 、 <name5> 、 <name1> とする	<name2> , <name3> , <name6> , <name5> , <name1> = map ( int , input ( ) . split ( ) )	<name3> , <name6> , <name5> , <name1> = map ( int , input ( ) . split ( ) )
<name5> の <name4> が <name1> と等しいとき、	if <name5> . <name4> == <name1> :	: if <name5> . <name4> == <name1> :
<name6> ( <name2> , ( <name3> + <name5> , <name1> , <name4> , <name6> ^ <val2> ) )	<name6> ( <name2> , ( <name3> + <name5> , <name1> , <name4> , <name6> ^ <val2> ) )	set ( <name6> ( <name2> , ( <name3> + <name5> , <name1> , <name4> , <name6> ^ <val2> ) ) )
<name1> が <val3> より大きいとき、 <blk> <val3> を <name1> とする </blk>	if <name1> > <val3> : <blk> <name1> = <val3> </blk>	\ <name1> = <name1> > <val3> : <blk> <name1> = <val3> </blk>
<val4> を <name6> の <name5> 番目の <name5> 番目にする	<name6> [ <name5> ] [ <name5> ] = <val4>	( <name6> [ <name5> ] [ <name5> ] = <val4> )
入力された文字列を空白で分割した字句列に番号付した組の列を順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in enumerate ( input ( ) . split ( ) ) :	. for <name2> , <name4> in enumerate ( input ( ) . split ( ) ) :
<name5> . <name3> ( <name1> , <name6> )	<name5> . <name3> ( <name1> , <name6> )	( <name5> . <name3> ( <name1> , <name6> ) )
<name5> が <name3> より小さくないとき、	if not <name5> < <name3> :	while not <name5> < <name3> :
<name3> <name2> .	<name3> <name2> .	<name1> <name3> <name2> .
( <name3> 、 <name2> 、 <name1> ) からなる列を <name5> とするを <name1> の <val4> 番目にする	<name1> [ <val4> ] = <name5> = [ <name3> , <name2> , <name1> ]	<name1> [ <val4> ] = <name5> = [ <name3> , <name2> , <name1> ]
<name2> ( ) のリストを <name3> とする	<name3> = list ( <name2> ( ) )	( <name3> = list ( <name2> ( ) ) )
<name1> の <name2> 番目を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in <name1> [ <name2> ] :	for <name3> , <name5> in <name1> [ <name2> ] :
internal node を <name3> の <name4> にする	<name3> . <name4> = 'internal node'	( <name3> . <name4> = 'internal node' )
<name4> の <name1> から <name2> を引いた値番目の <name6> 番目のとき、	if <name4> [ <name1> - <name2> ] [ <name6> ] :	if <name4> [ <name1> - <name2> ] [ <name6> ] :
<name4> の <name3> を出力する	print ( <name4> . <name3> )	end print ( <name4> [ <name3> ] )
<name3> と <name1> を割ったときの ( 商を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = divmod ( <name3> , <name1> )	<name6> , <name3> = divmod ( <name3> , <name1> )
<name5> ( <name6> [ <val2> ] )	<name5> ( <name6> [ <val2> ] )	<name4> ( <name6> [ <val2> ] )
<name1> を <name5> に <val3> を掛けた値だけ減少させる	<name1> -= <name5> * <val3>	not <name1> -= ( <name5> * <val3> )
<val2> が <name4> ( <name5> , <name1> ) 以下かどうかが <name6> ( <name5> ) 以下のとき、	if <val2> <= <name4> ( <name5> , <name1> ) <= <name6> ( <name5> ) :	list ( <val2> <= <name4> ( <name5> , <name1> ) <= <name6> ( <name5> ) ) :
<name6> の <val2> を取り出した値	<name6> . pop ( <val2> )	<name1> . pop ( <val2> )
<name2> の <val6> 番目が <name3> に含まれるとき、	if <name2> [ <val6> ] in <name3> :	for <name2> in <name2> [ <val6> ] in <name3> :
<val5> から <name6> 未満までの <val2> 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <val5> , <name6> , <val2> ) :	range for <name3> in range ( <val5> , <name6> , <val2> ) :
<name4> の文字列の、つまり先頭から <name5> に <val1> を加えた値までの部分列を <name4> とする	<name4> = str ( <name4> ) [ : <name5> + <val1> ]	<name4> = str ( <name4> ) [ : <name5> + <val1> ]
<name6> に <name6> を掛けた値が <name4> より小さい間、次を繰り返す	while <name6> * <name6> < <name4> :	while <name6> * <name6> < <name4> :
<val2> から <name4> に <val1> を加えた値未満までの数列の逆順を順に <name6> として、繰り返す	for <name6> in range ( <val2> , <name4> + <val1> ) [ : : - <val1> ] :	: for <name6> in range ( <val2> , <name4> + <val1> ) [ : : - <val1> ] :
<name3> が <val5> より小さいとき - <name3> に <name6> を掛けた値に <name2> を加えた値に <name4> に <name1> を掛けた値を加えた値、そうでなければ <name4> から <name3> を引いた値に <name1> を掛けた値を出力する	print ( - <name3> * <name6> + <name2> + <name4> * <name1> if <name3> < <val5> else ( <name4> - <name3> ) * <name1> )	end = - <name3> * <name6> + <name2> + <name4> * <name1> if <name3> < <val5> else ( <name4> - <name3> ) * <name1> )
<name5> ( <val6> ) を <name2> とする	<name2> = <name5> ( <val6> )	<name2> = <name5> ( <val6> )
<name6> の辞書カウンタの出現頻度順の列の先頭を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = Counter ( <name6> ) . most_common ( ) [ 0 ]	<name2> , <name5> , <name1> = Counter ( <name6> ) [ 0 ]
<name2> ( <name6> . <name3> , <name5> ) を <name6> の <name3> にする	<name6> . <name3> = <name2> ( <name6> . <name3> , <name5> )	<name4> . <name3> = <name2> ( <name6> . <name3> , <name5> )
<name5> を <name3> の <name1> 番目から <name4> の <name1> 番目を引いた値の絶対値の <val6> 乗だけ増加させる	<name5> += abs ( <name3> [ <name1> ] - <name4> [ <name1> ] ) ** <val6>	<name1> += abs ( <name3> [ <name1> ] - <name4> [ <name1> ] ) ** <val6>
<name4> の <name2> 番目を <name3> とする	<name3> = <name4> [ <name2> ]	else = <name4> [ <name2> ]
<name2> から <name3> を引いた値の <val4> 乗に <name6> の <val4> 乗を加えた値に <name1> から <name3> を引いた値の <val4> 乗を加えた値の平方根を <name5> とする	<name5> = math . sqrt ( ( <name2> - <name3> ) ** <val4> + <name6> ** <val4> + ( <name1> - <name3> ) ** <val4> )	<name5> = math . sqrt ( ( <name2> - <name3> ) ** <val4> + ( <name6> ** <val4> + ( <name1> - <name3> ) ** <val4> ) )
<name1> ( <name2> [ <name3> + <val5> : ] , <name6> [ <name3> + <val5> : ] , <name4> )	<name1> ( <name2> [ <name3> + <val5> : ] , <name6> [ <name3> + <val5> : ] , <name4> )	<name3> ( <name1> ( <name2> [ <name3> + <val5> : ] , <name6> [ <name3> + <val5> : ] , <name4> ) )
<name4> の <name2> の <name6> 番目が <name5> より小さいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name4> . <name2> [ <name6> ] < <name5> : <blk> continue </blk>	if <name4> . <name2> [ <name6> ] < <name5> : <blk> continue </blk>
<name5> の <name1> 番目の <name3> 番目を <name4> とする	<name4> = <name5> [ <name1> ] [ <name3> ]	<name4> = <name5> [ <name1> ] [ <name3> ]
<name3> 、 <name1> の最大値を <name3> とする	<name3> = max ( <name3> , <name1> )	<name3> = max ( <name3> , <name1> )
<name1> を <name4> に <name6> の <name5> から <name3> を引いた値から <val2> を引いた値番目を掛けた値だけ増加させる	<name1> += <name4> * <name6> [ <name5> - <name3> - <val2> ]	( <name1> += <name4> * <name6> [ <name5> - <name3> - <val2> ] )
<name5> ( <name3> [ <name1> ] , <name4> + <val6> )	<name5> ( <name3> [ <name1> ] , <name4> + <val6> )	<name5> ( <name3> [ <name1> ] , <name4> + <val6> )
<name1> の先頭の先頭、 <name6> に <val2> を加えた値を出力する	print ( <name1> [ 0 ] [ 0 ] , <name6> + <val2> )	str ( <name1> [ 0 ] [ 0 ] , <name6> + <val2> )
<name6> を <val2> <name1> で割った値を <name5> とする	<name5> = <name6> / <val2> <name1>	<name5> = <name6> / <val2> <name1>
<name3> が <val1> 以上かつ <name5> の <name3> 番目が <name6> より大きい間、次を繰り返す	while <name3> >= <val1> and <name5> [ <name3> ] > <name6> :	del <name3> >= <val1> and <name5> [ <name3> ] > <name6> :
<name3> に <name5> の <name2> 番目を加えた値が <name6> 以下の間、次を繰り返す	while <name3> + <name5> [ <name2> ] <= <name6> :	del <name3> + <name5> [ <name2> ] <= <name6> :
<name5> の各要素を <name6> とし、 <name6> が <name2> を <val1> で割った商以下かどうかの列が全てが真かどうかを返す	return all ( [ <name6> <= <name2> // <val1> for <name6> in <name5> ] )	self return all ( [ <name6> <= <name2> // <val1> for <name6> in <name5> ] )
<name6> から <val3> を引いた値のビット長を <name2> とする	<name2> = ( <name6> - <val3> ) . bit_length ( )	<name2> = ( <name6> - <val3> ) . bit_length ( )
<name2> の <val6> 番目を <val4> 、 <name5> から <val3> を引いた値を <val1> で割った商の最小値だけ増加させる	<name2> [ <val6> ] += min ( <val4> , ( <name5> - <val3> ) // <val1> )	count [ <val6> ] += min ( <val4> , ( <name5> - <val3> ) // <val1> )
<name6> の <name1> の <name6> 番目の <name1> を <name6> の <name1> の <name2> 番目の <name5> の <name3> の <name4> にする	<name6> . <name1> [ <name2> ] . <name5> . <name3> . <name4> = <name6> . <name1> [ <name6> ] . <name1>	<name4> . <name6> [ <name1> . <name2> ] . <name5> . <name3> . <name4> = <name6> . <name1> [ <name6> ] . <name1>
B を <name1> の -1 番目にする	<name1> [ - 1 ] = 'B'	( <name1> [ - 1 ] ) = 'B'
空辞書を <name3> とする	<name3> = { }	<name3> = { }
<name3> を <name5> の先頭に <name5> の <val2> 番目を掛けた値だけ増加させる	<name3> += <name5> [ 0 ] * <name5> [ <val2> ]	<name2> += <name5> [ 0 ] * <name5> [ <val2> ]
<name2> の <name6> 番目の末尾に ( <name3> 、 <name5> ) の組を追加する	<name2> [ <name6> ] . append ( ( <name3> , <name5> ) )	<name2> [ <name6> ] . append ( ( <name3> , <name5> ) )
<name4> の <val1> に <name6> を掛けた値に <val1> を加えた値番目を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name4> [ <val1> * <name6> + <val1> ]	( <name4> [ <name6> ] = <name4> [ <val1> * <name6> + <val1> ] )
<name2> ( <name5> ) に <name6> を掛けた値を出力する	print ( <name2> ( <name5> ) * <name6> )	print ( <name2> ( <name5> ) * <name6> )
- <name1> の <name3> の <name4> 番目が - <name1> の <name3> の <name5> 番目より小さいとき、 <blk> <name4> と <name5> を入れ替える </blk>	if - <name1> . <name3> [ <name4> ] < - <name1> . <name3> [ <name5> ] : <blk> <name4> , <name5> = <name5> , <name4> </blk>	\ if - <name1> . <name3> [ <name4> ] < - <name1> . <name3> [ <name5> ] : <blk> <name4> , <name5> = <name5> , <name4> </blk>
現在の日時を <name3> から、つまり現在の日時を引いた値だけ増加させる	now += ( <name3> - now )	now += ( <name3> - now )
<name1> の <name1> の <name4> 番目の <name3> 番目の絶対値が <name1> の <name1> の <name5> 番目の <name3> 番目の絶対値より大きいとき、	if abs ( <name1> . <name1> [ <name4> ] [ <name3> ] ) > abs ( <name1> . <name1> [ <name5> ] [ <name3> ] ) :	list ( <name1> [ abs ( <name1> [ <name4> ] [ <name3> ] ) > abs ( <name1> . <name1> [ <name5> ] [ <name3> ] ) :
<name2> 、 ( <name1> の <val5> 番目に <name6> ( <name3> [ <name4> ] - <name3> [ <name2> ] ) を <val1> で割った値に <name5> を掛けた値を加えた値、 ( <name2> ) からなる列に <name1> の <val6> 番目を加えた値 ) の組の最小値を <name2> とする	<name2> = min ( <name2> , ( <name1> [ <val5> ] + <name6> ( <name3> [ <name4> ] - <name3> [ <name2> ] ) / <val1> * ( <name5> ) , [ <name2> ] + <name1> [ <val6> ] ) )	<name2> = min ( <name2> , ( <name1> [ <val5> ] + <name6> ( <name3> [ <name4> ] - <name3> [ <name2> ] ) / <val1> * <name5> , [ <name2> ] + <name1> [ <val6> ] ) )
( <val3> 、 <val3> ) からなる列を <name4> とする	<name4> = [ <val3> , <val3> ]	<name4> = [ <val3> , <val3> ]
<name4> の先頭、 <name4> の <val1> 番目を出力する	print ( <name4> [ 0 ] , <name4> [ <val1> ] )	print ( <name4> [ 0 ] , <name4> [ <val1> ] )
<name3> が <name1> より大きいとき、	if ( <name3> > <name1> ) :	> if <name3> > <name1> :
<val4> 、 <name5> を <name3> 、 <name1> とする	<name3> , <name1> = <val4> , <name5>	<name3> , <name1> = <val4> , <name5>
<name6> の <name2> の各要素に整数を適用した列を順に <name5> として、繰り返す	for <name5> in map ( int , <name6> . <name2> ) :	. for <name5> in map ( int , <name6> . <name2> ) :
<name2> ( <name3> ) を展開し、それぞれ <name6> 、 <name4> とする	<name6> , <name4> = <name2> ( <name3> )	<name3> , <name4> = <name2> ( <name3> )
<name1> の <name4> から <name5> の <name2> 番目を引いた値番目を <val6> だけ増加させる	<name1> [ <name4> - <name5> [ <name2> ] ] += <val6>	[ <name1> [ <name4> - <name5> [ <name2> ] ] += <val6>
<val2> から <name5> 未満までの数列を順に <name4> として、繰り返す <blk> <val2> を <name3> の <name6> 番目の <name1> から <name4> を引いた値番目にする </blk>	for <name4> in range ( <name5> ) : <blk> <name3> [ <name6> ] [ <name1> - <name4> ] = <val2> </blk>	for <name4> in range ( <val2> , <name5> ) : <blk> <name3> [ <name6> ] [ <name1> - <name4> ] = <val2> </blk>
<name5> の <val2> 番目を <name5> の <val6> 番目で割った余りが <val6> と等しいとき、	if <name5> [ <val2> ] % <name5> [ <val6> ] == <val6> :	for <name5> in <name5> [ <val2> ] % <name5> [ <val6> ] == <val6> :
<name3> を ( ( <name6> 、 <name2> ) の組 ) からなる列だけ増加させる	<name3> += [ ( <name6> , <name2> ) ]	<name4> += [ [ ( <name6> , <name2> ) ] ]
<name5> ( <name1> ) を <name6> とする	<name6> = <name5> ( <name1> )	<name6> = <name5> ( <name1> )
<name5> と <name5> に <val3> を加えた値の論理積から <val3> を引いた値を <name5> とする	<name5> = ( <name5> & ( <name5> + <val3> ) ) - <val3>	<name5> = ( <name5> & ( <name5> + <val3> ) ) - <val3>
<name4> を <name3> の <name2> 番目に <name3> の <name6> 番目を掛けた値だけ増加させる	<name4> += <name3> [ <name2> ] * <name3> [ <name6> ]	<name2> += <name3> [ <name2> ] * <name3> [ <name6> ]
<name2> の <name5> 番目の <val3> 番目を <val4> だけ増加させる	<name2> [ <name5> ] [ <val3> ] += <val4>	<name1> [ <name5> ] [ <val3> ] += <val4>
<name1> を <val4> との排他的論理和にする	<name1> ^ = <val4>	( <name1> ^ = <val4> )
<name2> を <name4> の <name3> から <val5> を引いた値番目にする	<name4> [ <name3> - <val5> ] = <name2>	( <name4> [ <name3> - <val5> ] = <name2> )
( ( <val3> ) からなる列の <val3> から <name5> に <val4> を加えた値未満までの数列の各要素を <name2> とし、 <name6> に <val4> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val3> ] * [ ( <name6> + <val4> ) for <name2> in range ( <name5> + <val4> ) ] ]	<name1> = [ [ <val3> ] * [ ( <name6> + <val4> ) for <name2> in range ( <name5> + <val4> ) ] ]
<name6> に <val1> を加えた値から <name3> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name6> + <val1> , <name3> ) :	) for <name5> in range ( <name6> + <val1> , <name3> ) :
<name3> の <name6> と等しい要素の最初の位置に <val4> を加えた値を <name1> とする	<name1> = <name3> . index ( <name6> ) + <val4>	<name1> = <name3> . index ( <name6> ) + <val4>
<name1> の末尾に ( <name5> 、 <name4> ) の組を追加する	<name1> . append ( ( <name5> , <name4> ) )	<name1> . append ( ( <name5> , <name4> ) )
0 から <name1> の <name3> の長さ未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( len ( <name1> . <name3> ) ) :	) for <name5> in range ( len ( <name1> . <name3> ) ) :
0 から <name5> の <name3> の長さ未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name5> . <name3> ) ) :	for <name6> ) in range ( len ( <name5> . <name3> ) ) :
<name4> の <name1> 番目を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name4> [ <name1> ]	<name3> [ <name2> ] = <name4> [ <name1> ]
<name2> ( <val4> . <name3> ( <name6> ( <name5> , <name1> ) ) )	<name2> ( <val4> . <name3> ( <name6> ( <name5> , <name1> ) ) )	<name2> ( <val4> . <name3> ( <name6> ( <name5> , <name1> ) ) )
<name3> を <val6> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name2> とする	<name4> , <name2> = map ( int , <name3> . split ( <val6> ) )	<name4> , <name2> = map ( int , <name3> . split ( <val6> ) )
0 % d : % d : % d を ( <name1> 、 <name6> 、 <name5> ) の組で割った余りを出力する	print ( '0%d:%d:%d' % ( <name1> , <name6> , <name5> ) )	assert '' % ( ( <name1> , <name6> , <name5> ) )
<name6> 、 <name1> 、 <name5> を <name2> の <name6> 、 <name2> の <name1> 、 <name2> の <name5> とする	<name2> . <name6> , <name2> . <name1> , <name2> . <name5> = <name6> , <name1> , <name5>	<name2> . <name6> , <name2> . <name1> , <name2> . <name5> = <name6> , <name1> , <name5>
<name1> を <name3> で割った余りを <name1> とする	<name1> = <name1> % <name3>	<name1> = <name1> % <name3>
<name4> が <val1> と等しくかつ <name5> が <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name4> == <val1> and <name5> == <val1> : <blk> break </blk>	list ( <name4> == <val1> and <name5> == <val1> ) : <blk> break </blk>
<name6> の末尾を除いた部分列を順に <name5> として、繰り返す	for <name5> in <name6> [ : - 1 ] :	: for <name5> in <name6> [ : - 1 ] :
<name4> の <name2> から <val3> を引いた値番目、 <name4> の <name2> 番目を出力する	print ( <name4> [ <name2> - <val3> ] , <name4> [ <name2> ] )	print ( <name4> [ <name2> - <val3> ] , <name4> [ <name2> ] )
<name2> から <name1> を引いた値に <name5> から <name1> を引いた値を掛けた値に <name3> から <name6> を引いた値に <name4> から <name6> を引いた値を掛けた値を加えた値を返す	return ( <name2> - <name1> ) * ( <name5> - <name1> ) + ( <name3> - <name6> ) * ( <name4> - <name6> )	= ( <name2> - <name1> ) * ( <name5> - <name1> ) + ( <name3> - <name6> ) * ( <name4> - <name6> )
<name5> の先頭に番号付した組の列を順に <name4> 、 <name6> として、繰り返す	for <name4> , <name6> in enumerate ( <name5> [ 0 ] ) :	for <name4> , <name6> in enumerate ( <name5> [ 0 ] ) :
<name4> をパラメータとして <name4> の <val2> 番目を返す関数を <name3> として <name6> をソートする	<name6> . sort ( <name3> = lambda <name4> : <name4> [ <val2> ] )	<name6> . sort ( <name3> = lambda <name4> : <name4> [ <val2> ] )
<name2> の <name5> 番目を <name4> の <name6> 番目にする	<name4> [ <name6> ] = <name2> [ <name5> ]	( <name4> [ <name6> ] = <name2> [ <name5> ] )
<val3> から <name2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val3> , <name2> ) :	continue for <name5> in range ( <val3> , <name2> ) :
<name3> の末尾に <name4> の <name5> 番目の文字列を追加する	<name3> . append ( str ( <name4> [ <name5> ] ) )	<name3> . append ( str ( <name4> [ <name5> ] ) )
<name1> . <name3> ( <name1> . <name5> )	<name1> . <name3> ( <name1> . <name5> )	<name1> . <name3> ( <name1> . <name5> )
<name5> [ <name3> ] ( <name6> , <name2> ) を <name4> とする	<name4> = <name5> [ <name3> ] ( <name6> , <name2> )	<name4> = <name5> [ <name3> ] ( <name6> , <name2> )
<name3> を <name4> の <name6> 番目の <val5> 番目にする	<name4> [ <name6> ] [ <val5> ] = <name3>	( <name4> [ <name6> ] [ <val5> ] = <name3> )
<name5> が <name6> と等しいかどうかが <name1> と等しいかどうかが <name4> と等しいかどうかが <val2> と等しいとき、	if <name5> == <name6> == <name1> == <name4> == <val2> :	list == <name5> == <name6> == <name1> == <name4> == <val2> :
<name6> の <val3> 番目の <name1> 番目が <val5> と等しくまたは <name6> の <name4> 番目の <name1> 番目が <val5> と等しいとき、	if <name6> [ <val3> ] [ <name1> ] == <val5> or <name6> [ <name4> ] [ <name1> ] == <val5> :	> if <name6> [ <val3> ] [ <name1> ] == <val5> or <name6> [ <name4> ] [ <name1> ] == <val5> :
<name1> 、 <name2> 、 <name5> を出力する	print ( <name1> , <name2> , <name5> )	print ( <name1> , <name2> , <name5> )
<name5> と <name3> の直積を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in product ( <name5> , <name3> ) :	. for <name1> , <name6> in product ( <name5> , <name3> ) :
<val4> を <name6> の <name3> にする	<name6> . <name3> = <val4>	<name4> . <name3> = <val4>
<name2> . <name4> ( <val6> )	<name2> . <name4> ( <val6> )	set ( <name2> . <name4> ( <val6> ) )
<val5> が <name2> ( <name1> , <name6> ) と等しいとき、	if <val5> == <name2> ( <name1> , <name6> ) :	continue <val5> == <name2> ( <name1> , <name6> ) :
<name6> の <name2> 番目を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in <name6> [ <name2> ] :	for <name5> , <name3> in <name6> [ <name2> ] :
<name4> ( <val3> ) を出力する	print ( <name4> ( <val3> ) )	print ( <name4> ( <val3> ) )
<name2> が <val5> と等しくないとき、	if <name2> != <val5> :	raise <name2> != <val5> :
<name3> を <name5> の <name6> にする	<name5> . <name6> = <name3>	( <name5> . <name6> = <name3> )
<name5> を <val1> に <name2> を掛けた値だけ増加させる	<name5> += <val1> * <name2>	( <name5> += <val1> * <name2> )
<val5> の <val5> 乗を <name1> とする	<name1> = <val5> ** <val5>	( <name1> = <val5> ** <val5> )
<name2> が <name3> の <name4> に含まれるとき、	if <name2> in <name3> . <name4> :	list in <name2> in <name3> . <name4> :
<name1> . <name3> ( <name4> ) のとき、	if <name1> . <name3> ( <name4> ) :	for <name1> . <name3> ( <name4> ) :
<val6> を <name4> の <name1> 番目にする	<name4> [ <name1> ] = <val6>	( <name4> [ <name1> ] = <val6> )
<name6> が <name2> の <name5> の先頭と等しいとき、	if <name6> == <name2> . <name5> [ 0 ] :	for <name6> in <name2> . <name5> [ 0 ] :
<name5> が -1 と等しくなくかつ <name6> の <name2> が <name5> と等しいとき、	if <name5> != - 1 and <name6> . <name2> == <name5> :	or <name5> != - 1 and <name6> . <name2> == <name5> :
<val1> を <name4> の <val3> 番目にする	<name4> [ <val3> ] = <val1>	( <name4> [ <val3> ] = <val1> )
<name3> の <name6> 番目を <val2> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を <name4> とする	<name4> = [ int ( <name1> ) for <name1> in <name3> [ <name6> ] . split ( <val2> ) ]	<name4> = [ int ( <name1> ) for <name1> in <name3> [ <name6> ] . split ( <val2> ) ]
<name1> かつ <name1> の先頭の <val4> 番目が <name2> 以下の間、次を繰り返す	while <name1> and <name1> [ <val4> ] [ <val4> ] <= <name2> :	del <name1> and <name1> [ <val4> ] [ <val4> ] <= <name2> :
<name5> が <name6> 以下の間、次を繰り返す	while <name5> <= <name6> :	del <name5> <= <name6> :
<name6> 内の ( <name2> 、 <val5> ) からなる列と等しい要素を取り除く	<name6> . remove ( [ <name2> , <val5> ] )	not <name6> . remove ( [ <name2> , <val5> ] )
<name3> . <name4> . <name6> ( ) のとき、	if <name3> . <name4> . <name6> ( ) :	continue . <name3> . <name4> . <name6> ( ) :
<name1> の <name3> に <val6> を加えた値番目、 <name1> の <name3> 番目を <name1> の <name3> 番目、 <name1> の <name3> に <val6> を加えた値番目とする	<name1> [ <name3> ] , <name1> [ <name3> + <val6> ] = <name1> [ <name3> + <val6> ] , <name1> [ <name3> ]	<name1> [ <name3> ] , <name1> [ <name3> + <val6> ] = <name1> [ <name3> + <val6> ] , <name1> [ <name3> ]
<name5> の末尾に ( <name6> 、 <name2> 、 <name3> ) の組を追加する	<name5> . append ( ( <name6> , <name2> , <name3> ) )	<name4> . append ( ( <name6> , <name2> , <name3> ) )
<name3> の <val2> 番目が <val5> と等しいとき、	if <name3> [ <val2> ] == <val5> :	continue if <name3> [ <val2> ] == <val5> :
<name1> の <name5> 番目から、つまり末尾までの部分列に <name1> の、つまり先頭から <name5> 番目までの部分列を加えた値を <name4> とする	<name4> = <name1> [ <name5> : ] + <name1> [ : <name5> ]	<name6> = <name1> [ <name5> : ] + <name1> [ : <name5> ]
<name4> [ <name6> ] ( <name1> ) を <name3> とする	<name3> = <name4> [ <name6> ] ( <name1> )	<name3> = <name4> [ <name6> ] ( <name1> )
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = map ( int , <name3> . readline ( ) . split ( ) )	<name3> , <name5> = map ( int , <name3> . readline ( ) . split ( ) )
\ <val5> を間に入れて <name6> の各要素を <name2> とし、 <val4> を間に入れて <name2> の各要素に <name1> を適用した列を連結した文字列の列を連結した文字列を出力する\	\ print ( <val5> . join ( [ <val4> . join ( map ( <name1> , <name2> ) ) for <name2> in <name6> ] ) ) \	print ( <val5> . join ( [ <val4> . join ( map ( <name1> , <name2> ) ) ) for <name2> in <name6> ] ) ) \
<name6> でなくかつ <name1> が <name3> から <val5> を引いた値より小さくかつ <name4> が <name2> の <name6> 番目に含まれないとき、	if not <name6> and <name1> < <name3> - <val5> and ( <name4> not in <name2> [ <name6> ] ) :	list ( not <name6> and <name1> < <name3> - <val5> ) and not <name4> not in <name2> [ <name6> ] :
( <val1> の浮動小数点数 ) からなる列の <name6> の <name3> 回分の列を <name6> の <name5> にする	<name6> . <name5> = [ float ( <val1> ) ] * <name6> . <name3>	<name3> . <name5> = [ float ( <val1> ) ] * <name6> . <name3>
<name1> を <name5> とする <name2> を <name3> とする	<name5> = <name1> <name3> = <name2>	else = <name1> <name3> = <name2>
( ( <name4> ) からなる列の 0 から <name5> に <val1> を加えた値未満までの数列の各要素を <name6> とし、 <name5> に <val3> を加えた値の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <name4> ] * [ ( <name5> + <val3> ) for <name6> in range ( <name5> + <val1> ) ] ]	<name2> = [ [ <name4> ] * [ ( <name5> + <val3> ) for <name6> in range ( <name5> + <val1> ) ] ]
0 から <val2> 未満までの数列の各要素を <name6> とし、 0 から <val3> 未満までの数列の各要素を <name5> とし、、つまり偽の列の列を <name4> とする	<name4> = [ [ False for <name5> in range ( <val3> ) ] for <name6> in range ( <val2> ) ]	<name4> = [ [ False for <name5> in range ( <val3> ) ] for <name6> in range ( <val2> ) ]
<name6> の <name1> 番目の <name5> 番目を <name3> だけ増加させる	<name6> [ <name1> ] [ <name5> ] += <name3>	( <name6> [ <name1> ] [ <name5> ] += <name3> )
<name2> が <val6> 以上かつ <name4> の <name2> 番目の整数値が <name4> の <name2> に <val5> を加えた値番目の整数値より大きい間、次を繰り返す	while ( <name2> >= <val6> ) and ( int ( <name4> [ <name2> ] ) > int ( <name4> [ <name2> + <val5> ] ) ) :	del <name2> >= <val6> and int ( <name4> [ <name2> ] ) > int ( <name4> [ <name2> + <val5> ] ) :
ソートされた順序を保ったまま <name3> を <name2> の <name4> に挿入できる位置を <name5> とする	<name5> = bisect_left ( <name2> . <name4> , <name3> )	<name5> = bisect . bisect_left ( <name2> . <name4> , <name3> )
<name2> 、 <name4> の <name1> 番目から <name4> の <name1> から <val3> を引いた値番目を引いた値の最大値を <name2> とする	<name2> = max ( <name2> , <name4> [ <name1> ] - <name4> [ <name1> - <val3> ] )	<name2> = max ( <name2> , <name4> [ <name1> ] - <name4> [ <name1> - <val3> ] )
0 から <name5> 未満までの数列の各要素を <name6> とし、 <name2> ( ) の列を <name1> とする	<name1> = [ <name2> ( ) for <name6> in range ( <name5> ) ]	<name1> = [ <name2> ( ) for <name6> in range ( <name5> ) ]
<name6> を <name2> の <name4> の <name3> 番目にする	<name2> . <name4> [ <name3> ] = <name6>	<name2> . <name4> [ <name3> ] = <name6>
関数 <name1> を <name4> をパラメータとして定義する <val2> に <name4> を掛けた値に <val3> を加えた値を返す	def <name1> ( <name4> ) : return <val2> * <name4> + <val3>	<name1> ( <name4> ) : return <name1> * <name4> + <val3>
<name1> . <name6> ( <name5> [ <val2> ] , <name5> [ <val4> ] , <name5> [ <val3> ] , <name5> [ <val1> ] , <name5> [ <val6> ] , <name5> [ <val5> ] )	<name1> . <name6> ( <name5> [ <val2> ] , <name5> [ <val4> ] , <name5> [ <val3> ] , <name5> [ <val1> ] , <name5> [ <val6> ] , <name5> [ <val5> ] )	<name1> . <name6> ( <name5> [ <val2> ] , <name5> [ <val4> ] , <name5> [ <val3> ] , <name5> [ <val1> ] , <name5> [ <val6> ] , <name5> [ <val5> ] )
<name1> の <name4> に <name3> 、 <name6> に - <name3> を掛けた値を追加した集まり	<name1> . <name4> . add ( <name3> , <name6> * - <name3> )	<name1> . <name4> . add ( <name3> , <name6> * - <name3> )
( 、つまり偽、 <name1> ) の組を返す	return ( False , <name1> )	yield ( False , <name1> )
<val5> が <name4> より小さいかどうかが <name3> より小さいとき、	if <val5> < <name4> < <name3> :	if <val5> < <name4> < <name3> :
<name5> ( <name1> , <name3> , <name6> , <name4> ) のとき、	if <name5> ( <name1> , <name3> , <name6> , <name4> ) :	list <name5> ( <name1> , <name3> , <name6> , <name4> ) :
真を <name4> の <name3> 番目の <name5> 番目にする	<name4> [ <name3> ] [ <name5> ] = True	( <name4> [ <name3> ] [ <name5> ] = True )
<name4> ( <name5> [ <name2> ] ) を <name6> とする	<name6> = <name4> ( <name5> [ <name2> ] )	<name6> = <name4> ( <name5> [ <name2> ] )
<name4> 、 <name5> ( <name1> , <name2> ) に <name5> ( <name2> , <name6> ) を加えた値に <name3> の <name1> 番目に <name3> の <name2> 番目を掛けた値に <name4> の <name6> から <val5> を引いた値番目を掛けた値を加えた値の最小値を <name4> とする	<name4> = min ( <name4> , <name5> ( <name1> , <name2> ) + <name5> ( <name2> , <name6> ) + <name3> [ <name1> ] * <name3> [ <name2> ] * <name4> [ <name6> - <val5> ] )	<name4> = min ( <name4> , ( <name5> ( <name1> , <name2> ) + <name5> ( <name2> , <name6> ) ) * <name3> [ <name1> ] + <name3> [ <name2> ] * <name4> [ <name6> - <val5> ] ) )
<name5> の <name3> 番目の <name2> 番目を <name6> の <name3> 番目の <name4> 番目に <name1> の <name4> 番目の <name2> 番目を掛けた値だけ増加させる	<name5> [ <name3> ] [ <name2> ] += ( <name6> [ <name3> ] [ <name4> ] * <name1> [ <name4> ] [ <name2> ] )	<name4> [ <name3> ] [ <name2> ] += <name6> [ <name3> ] [ <name4> ] * <name1> [ <name4> ] [ <name2> ]
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値から <val6> を引いた値の列の先頭を除いた部分列を <name4> とする	<name4> = [ int ( <name3> ) - <val6> for <name3> in input ( ) . split ( ) ] [ <val6> : ]	<name4> = [ int ( <name3> ) - <val6> for <name3> in input ( ) . split ( ) ] [ <val6> : ]
<name6> の <name3> 番目を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name6> [ <name3> ]	( <name1> , <name5> = <name6> [ <name3> ] )
<name3> の <name5> の <name1> 番目を <name6> とする	<name6> = <name3> . <name5> [ <name1> ]	else = <name3> . <name5> [ <name1> ]
<val3> から <name6> の長さを <val5> で割った商に <val3> を加えた値未満までの数列を反転した列を順に <name1> として、繰り返す	for <name1> in reversed ( range ( <val3> , len ( <name6> ) // <val5> + <val3> ) ) :	for <name1> in reversed ( range ( <val3> , len ( <name6> ) // <val5> + <val3> ) ) :
<name5> の <val3> 番目を <name1> の <val3> 番目にする	<name1> [ <val3> ] = <name5> [ <val3> ]	<name1> [ <val3> ] = <name5> [ <val3> ]
<name6> を <name1> に円周率を掛けた値を <val3> で割った値だけ減少させる	<name6> -= <name1> * math . pi / <val3>	<name6> -= <name1> * math . pi / <val3>
<name5> の <name3> 番目に <name5> の <name2> 番目を加えた値を <name1> とする	<name1> = <name5> [ <name3> ] + <name5> [ <name2> ]	<name2> = <name5> [ <name3> ] + <name5> [ <name2> ]
<name4> を <name2> の先頭だけ増加させる	<name4> += <name2> [ 0 ]	( <name4> += <name2> [ 0 ] )
( <name1> に <val3> を加えた値、 - <name1> から <val3> を引いた値、 -1 、 <val2> ) の組を <name5> とする	<name5> = ( <name1> + <val3> , - <name1> - <val3> , - <val2> , <val2> )	<name5> = ( <name1> + <val3> , - <name1> - <val3> , - <val3> , <val2> )
<name6> の先頭に <name5> の <val4> 番目を掛けた値から <name6> の <val4> 番目に <name5> の先頭を掛けた値を引いた値を <val1> で割った値を <name3> とする	<name3> = ( <name6> [ 0 ] * <name5> [ <val4> ] - <name6> [ <val4> ] * <name5> [ 0 ] ) / <val1>	<name3> = ( <name6> [ 0 ] * <name5> [ <val4> ] - <name6> [ <val4> ] * <name5> [ 0 ] ) / <val1>
未定値を <name3> の <name5> とするを <name3> の <name1> にする	<name3> . <name1> = <name3> . <name5> = None	else . <name1> = <name3> . <name5> = None
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を <name6> とする	<name6> = map ( int , <name3> . readline ( ) . split ( ) )	<name6> = map ( int , <name3> . readline ( ) . split ( ) )
<name4> を <val1> だけ左シフトする	<name4> << = <val1>	( <name4> << = <val1> )
<name5> のとき <val4> 、そうでなければ <val3> を出力する	print ( <val4> if <name5> else <val3> )	print ( <val4> if <name5> else <val3> )
<val5> と <name6> 、 <name3> のユークリッド距離を出力する	print ( dist ( <val5> , <name6> , <name3> ) )	) print ( dist ( <val5> , <name6> , <name3> ) )
<name4> を <name6> の <name1> にする	<name6> . <name1> = <name4>	( <name6> . <name1> = <name4> )
<val1> から <name5> から <val4> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> , <name5> - <val4> ) :	for <name6> in range ( <val1> , <name5> - <val4> ) :
<name2> の末尾に <name5> の <val4> を取り出した値を加えた値に <val3> を加えた値を <name1> とする	<name1> = <name2> [ - 1 ] + <name5> . pop ( <val4> ) + <val3>	<name1> = <name2> [ - <val3> ] + <name5> . pop ( <val4> ) + <val3>
<name4> が <name1> 以下または <name6> が <name2> 以下のとき、	if <name4> <= <name1> or <name6> <= <name2> :	for <name4> <= <name1> or <name6> <= <name2> :
<name2> が <val3> 以上かつ <name1> の <name2> 番目が <name4> より大きい間、次を繰り返す	while <name2> >= <val3> and <name1> [ <name2> ] > <name4> :	del <name2> >= <val3> and <name1> [ <name2> ] > <name4> :
<name6> の <name2> 番目から <name6> の <name1> 番目を引いた値が <name3> 以下のとき、	if <name6> [ <name2> ] - <name6> [ <name1> ] <= <name3> :	for <name6> [ <name2> ] - <name6> [ <name1> ] <= <name3> :
<val3> の <val5> 乗に <val1> を加えた値を <name2> とする	<name2> = <val3> ** <val5> + <val1>	<name2> = <val3> ** <val5> + <val1>
<name4> の <name3> から <val2> を <val6> を底とする <name4> . <name3> の対数の切り上げ整数値の整数値だけ左シフトした値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name4> . <name3> , <val2> << int ( math . ceil ( math . log ( <name4> . <name3> , <val6> ) ) ) ) :	. for <name1> in range ( <name4> . <name3> , <val2> << int ( math . log ( <name4> . <name3> , <val6> ) ) ) :
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name2> 、 <name1> とする	<name6> , <name4> , <name2> , <name1> = map ( int , input ( ) . split ( ) )	<name4> , <name2> , <name1> = map ( int , input ( ) . split ( ) )
<name5> の末尾に入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列の組を追加する	<name5> . append ( tuple ( [ int ( <name3> ) for <name3> in input ( ) . split ( ) ] ) )	<name5> . append ( tuple ( [ int ( <name3> ) for <name3> in input ( ) . split ( ) ] ) )
真を <name5> の <name3> 番目の <name6> 番目にする	<name5> [ <name3> ] [ <name6> ] = True	( <name5> [ <name3> ] [ <name6> ] = True )
<name6> を <name1> で割った余りが <val2> と等しいとき、	if <name6> % <name1> == <val2> :	> ( <name6> % <name1> ) == <val2> :
<name3> の末尾に <val2> を追加する	<name3> . append ( <val2> )	<name3> . append ( <val2> )
<name5> の <name4> の <name6> 番目の <name3> の末尾に <name2> を追加する	<name5> . <name4> [ <name6> ] . <name3> . append ( <name2> )	<name3> . <name4> [ <name6> ] . <name3> . append ( <name2> )
<name6> の -1 番目が <name1> より大きいとき、	if <name6> [ - 1 ] > <name1> :	if <name6> [ - 1 ] > <name1> :
<name5> の <name6> 番目を <name3> だけ減少させる	<name5> [ <name6> ] -= <name3>	not <name5> [ <name6> ] -= <name3>
<name1> に <name6> ( <name5> , <name2> , <name4> ) を追加した集まり	<name1> . add ( <name6> ( <name5> , <name2> , <name4> ) )	<name1> . add ( <name6> ( <name5> , <name2> , <name4> ) )
<val6> から <name3> に <val4> を掛けた値を引いた値から <name1> に <val5> を掛けた値を引いた値から <name2> を引いた値を <name2> とする	<name2> = <val6> - <name3> * <val4> - <name1> * <val5> - <name2>	( <name2> = <val6> - <name3> * <val4> ) - ( <name1> * <val5> - <name2> )
<name4> を <name3> ( <name6> + <val1> ) だけ増加させる	<name4> += <name3> ( <name6> + <val1> )	<name1> += <name3> ( <name6> + <val1> )
( <name3> の先頭から <name5> の先頭を引いた値、 <name3> の <val1> 番目から <name5> の <val1> 番目を引いた値 ) からなる列を返す	return [ <name3> [ 0 ] - <name5> [ 0 ] , <name3> [ <val1> ] - <name5> [ <val1> ] ]	assert [ <name3> [ 0 ] - <name5> [ 0 ] , <name3> [ <val1> ] - <name5> [ <val1> ] ]
<name1> の先頭を <name6> とする <name1> の <val3> 番目を <name5> とする	<name6> = <name1> [ 0 ] <name5> = <name1> [ <val3> ]	<name6> = <name1> [ 0 ] <name5> = <name1> [ <val3> ]
<val3> が <name6> 以下かどうかが <name1> より小さくなくまたは <val3> が <name5> 以下かどうかが <name4> より小さくなくまたは <name2> の <name6> 番目の <name5> 番目が -1 と等しくないとき、	if not <val3> <= <name6> < <name1> or not <val3> <= <name5> < <name4> or <name2> [ <name6> ] [ <name5> ] != - 1 :	if ( not <val3> <= <name6> < <name1> ) or ( not <val3> <= <name5> < <name4> ) or ( <name2> [ <name6> ] [ <name5> ] != - 1 ) :
0 から <name4> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name1> in range ( <name4> ) ]	<name6> = [ [ ] for <name1> in range ( <name4> ) ]
<name4> [ <name1> ] [ <val2> ] に <name4> [ <name1> ] [ <val3> ] を掛けた値に <name4> [ <name1> ] の <val5> 番目を掛けた値に <name4> の <name1> 番目の <val6> 番目を掛けた値に <name4> の <name1> 番目の <val4> 番目を掛けた値が <val3> と等しいとき、	if <name4> [ <name1> ] [ <val2> ] * <name4> [ <name1> ] [ <val3> ] * <name4> [ <name1> ] [ <val5> ] * <name4> [ <name1> ] [ <val6> ] * <name4> [ <name1> ] [ <val4> ] == <val3> :	if <name4> [ <name1> ] [ <val2> ] * <name4> [ <name1> ] [ <val3> ] * <name4> [ <name1> ] [ <val5> ] * <name4> [ <name1> ] [ <val6> ] * <name4> [ <name1> ] [ <val4> ] == <val3> :
<name2> の <val3> 番目が <val5> と等しいとき、	if <name2> [ <val3> ] == <val5> :	continue if <name2> [ <val3> ] == <val5> :
( <name6> 、 <name4> ) の組を <name1> とする	<name1> = ( <name6> , <name4> )	( <name6> , <name4> ) = ( <name6> , <name4> )
<name1> の辞書カウンタを <name1> とする	<name1> = Counter ( <name1> )	( <name1> = Counter ( <name1> ) )
<name5> ( <name1> , <name3> % <name1> ) を展開し、それぞれ <name2> 、 <name6> とする	<name2> , <name6> = <name5> ( <name1> , <name3> % <name1> )	<name2> , <name6> = <name5> ( <name1> , <name3> % <name1> )
{}を出力する	print ( { height } )	print ( { ( x & 2 ) } )
<val3> <name1> <val4> を <name2> とする	<name2> = <val3> <name1> <val4>	<name1> <name2> = <val3> <name1> <val4>
0 から <name3> 未満までの数列の各要素を <name4> とし、 <name5> ( ) の整数値の列を <name2> とする	<name2> = [ int ( <name5> ( ) ) for <name4> in range ( <name3> ) ]	<name6> = [ int ( <name5> ( ) ) for <name4> in range ( <name3> ) ]
<name5> 、 <name2> から <name4> に <name5> を掛けた値を引いた値を <name2> 、 <name5> とする	<name2> , <name5> = <name5> , <name2> - <name4> * <name5>	input , <name5> = <name5> , <name2> - <name4> * <name5>
<name5> ( <name1> . <name6> . <name4> - <name2> . <name6> . <name4> , <name1> . <name6> . <name3> - <name2> . <name6> . <name3> ) を <name3> とする	<name3> = <name5> ( <name1> . <name6> . <name4> - <name2> . <name6> . <name4> , <name1> . <name6> . <name3> - <name2> . <name6> . <name3> )	<name4> = <name5> ( <name1> . <name6> . <name4> - <name2> . <name6> . <name4> , <name1> . <name6> . <name3> - <name2> . <name6> . <name3> )
<name3> の、つまり先頭から <name4> から <val6> を引いた値までの -1 間隔による部分列を <name3> の <name4> 番目から、つまり末尾までの部分列にする	<name3> [ <name4> : ] = <name3> [ : <name4> - <val6> : - <val6> ]	<name3> [ <name4> : ] = <name3> [ 0 : <name4> - <val6> : - <val6> ]
<name5> の <val4> 番目に <name5> の <val3> 番目、 <name5> [ <val2> ] に <val1> を加えた値の最小値を加えた値に <name5> の <val2> 番目を加えた値を出力する	print ( <name5> [ <val4> ] + min ( <name5> [ <val3> ] , <name5> [ <val2> ] + <val1> ) + <name5> [ <val2> ] )	<name5> [ <val4> ] + min ( <name5> [ <val3> ] , <name5> [ <val2> ] + <val1> ) + <name5> [ <val2> ] )
<name3> ( <name1> , <name4> , <name5> , <name2> , <name6> ) を出力する	print ( <name3> ( <name1> , <name4> , <name5> , <name2> , <name6> ) )	print ( <name3> ( <name1> , <name4> , <name5> , <name2> , <name6> ) )
<name3> の <name4> 番目を <name3> の <name4> から <val1> を引いた値番目だけ増加させる	<name3> [ <name4> ] += <name3> [ <name4> - <val1> ]	<name4> [ <name4> ] += <name3> [ <name4> - <val1> ]
<val2> を <name5> の <name4> から <val6> を引いた値番目にする	<name5> [ <name4> - <val6> ] = <val2>	<name1> [ <name4> - <val6> ] = <val2>
( 、つまり未定値 ) からなる列の <name6> 回分の列を <name2> とする	<name2> = [ None ] * <name6>	<name2> = [ None ] * <name6>
<name4> の <name3> 番目の各要素を <name5> とし、 <name6> に <name5> を加えた値の列を <name2> とする	<name2> = [ <name6> + <name5> for <name5> in <name4> [ <name3> ] ]	<name6> = [ <name6> + <name5> for <name5> in <name4> [ <name3> ] ]
<name3> を <name6> の <val2> を取り出した値だけ増加させる	<name3> += <name6> . pop ( <val2> )	<name3> += <name6> . pop ( <val2> )
<val5> から <name4> の長さ未満までの <val2> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val5> , len ( <name4> ) , <val2> ) :	. for <name6> in range ( <val5> , len ( <name4> ) , <val2> ) :
( <name4> に <val1> を加えた値、 <name3> に <name2> を加えた値 ) の組を <name6> の <name5> 番目にする	<name6> [ <name5> ] = ( <name4> + <val1> , <name3> + <name2> )	<name6> [ <name5> ] = ( <name4> + <val1> , <name3> + <name2> )
<name6> の末尾に ( <val1> ) からなる列の <name4> に <val5> を加えた値回分の列を追加する	<name6> . append ( [ <val1> ] * ( <name4> + <val5> ) )	<name6> . append ( [ <val1> ] * ( <name4> + <val5> ) )
<name3> ( <name2> ) を <name2> とする	<name2> = <name3> ( <name2> )	dict = <name3> ( <name2> )
<name2> の <name3> 番目に <val5> を加えた値を <name3> とする	<name3> = <name2> [ <name3> ] + <val5>	<name3> = <name2> [ <name3> ] + <val5>
<val4> から <val1> に <name3> を掛けた値に <val6> に <name5> を掛けた値を加えた値に <name2> を加えた値を引いた値を <name2> とする	<name2> = <val4> - ( <val1> * <name3> + <val6> * <name5> + <name2> )	<name2> = <val4> - ( <val1> * <name3> + <val6> * <name5> + <name2> )
<name2> の各要素を <name1> とし、 <name1> の整数値の列を <name4> とする	<name4> = [ int ( <name1> ) for <name1> in <name2> ]	<name6> = [ int ( <name1> ) for <name1> in <name2> ]
<name6> が <val2> と等しくないとき、 <blk> <val4> を返す </blk>	if <name6> != <val2> : <blk> return ( <val4> ) </blk>	if <name6> != <val2> : <blk> return <val4> </blk>
<name3> を <val6> で割った値が <name1> より小さいとき、 <blk> <name3> を出力する <sep> 繰り返しを中断する </blk>	if <name3> / <val6> < <name1> : <blk> print ( <name3> ) <sep> break </blk>	if <name3> / <val6> < <name1> : <blk> print ( <name3> ) <sep> break </blk>
現在の日時に <name3> を加えた値を <name4> とする	<name4> = now + <name3>	<name4> = now + <name3>
<name6> の <name4> 番目に ( <name4> 、 <name1> ) の組を追加した集まり	<name6> [ <name4> ] . add ( ( <name4> , <name1> ) )	<name4> [ <name4> ] . add ( ( <name4> , <name1> ) )
<name3> の末尾に <name4> ( <name1> , <name6> + <val2> ) の文字列を追加する	<name3> . append ( str ( <name4> ( <name1> , <name6> + <val2> ) ) )	<name4> . append ( str ( str ( <name4> ( <name1> , <name6> + <val2> ) ) ) )
<name3> ( <name5> , <name5> + <val6> , <name2> , <name1> ) を <name4> とする	<name4> = <name3> ( <name5> , <name5> + <val6> , <name2> , <name1> )	<name4> = <name3> ( <name5> , <name5> + <val6> , <name2> , <name1> )
<name2> を <name3> から <name4> を引いた値に <name5> から <name1> を引いた値を掛けた値分の一にする	<name2> /= ( <name3> - <name4> ) * ( <name5> - <name1> )	<name2> // = ( <name3> - <name4> ) * ( <name5> - <name1> )
<val5> から <val5> に <val5> に <name1> の <val2> 番目を掛けた値を加えた値未満までの <val5> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <val5> , <val5> + <val5> * <name1> [ <val2> ] , <val5> ) :	. for <name4> in range ( <val5> , <val5> + <val5> * <name1> [ <val2> ] , <val5> ) :
0 から <name2> に <val6> を加えた値未満までの数列の各要素を <name5> とし、 <name2> から <name5> を引いた値の列の組を <name3> とする	<name3> = tuple ( [ <name2> - <name5> for <name5> in range ( <name2> + <val6> ) ] )	<name3> = tuple ( [ <name2> - <name5> for <name5> in range ( <name2> + <val6> ) ] )
<val6> を <name4> の <name1> の <name2> 番目にする	<name4> . <name1> [ <name2> ] = <val6>	( <name4> . <name1> [ <name2> ] = <val6> )
<name2> の末尾に ( <name3> 、 <name6> 、 <name4> ) の組を追加する	<name2> . append ( ( <name3> , <name6> , <name4> ) )	not <name2> . append ( ( <name3> , <name6> , <name4> ) )
<name4> から <name2> を引いた値を出力する	print ( <name4> - <name2> )	<name4> print ( <name2> - <name2> )
<name6> の <name2> の末尾に ( <name4> 、 <name4> ) の組を追加する	<name6> . <name2> . append ( ( <name4> , <name4> ) )	<name4> . <name2> . append ( ( <name4> , <name4> ) )
<name5> が <val2> 以下のとき、	if <name5> <= <val2> :	if <name5> <= <val2> :
<name4> の総和を <name2> で割った値から <name5> の総和を <name2> で割った値の <val1> 乗を引いた値を <name3> とする	<name3> = sum ( <name4> ) / <name2> - ( sum ( <name5> ) / <name2> ) ** <val1>	<name3> = sum ( <name4> ) / <name2> - ( sum ( <name5> ) / <name2> ) ** <val1>
<name1> が <name4> . <name2> ( ) より大きいとき、	if <name1> > <name4> . <name2> ( ) :	for <name1> > <name4> . <name2> ( ) :
<name6> の <val2> 番目のリストを <name5> の <name4> 番目から <name1> 番目までの部分列にする	<name5> [ <name4> : <name1> ] = list ( <name6> [ <val2> ] )	( <name5> [ <name4> : <name1> ] = list ( <name6> [ <val2> ] )
<name5> を <name6> の <val3> 番目だけ増加させる	<name5> += <name6> [ <val3> ]	( <name5> += <name6> [ <val3> ] )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name4> 、 <name2> とする	<name3> , <name1> , <name4> , <name2> = map ( int , input ( ) . split ( ) )	<name3> , <name1> , <name4> , <name2> = map ( int , input ( ) . split ( ) )
<name2> の <val4> 乗に <name5> の <val4> 乗を加えた値から <name1> の <val4> 乗を引いた値が <val3> と等しいとき、	if <name2> ** <val4> + <name5> ** <val4> - <name1> ** <val4> == <val3> :	print ( <name2> ** <val4> + <name5> ** <val4> - <name1> ** <val4> == <val3> :
<name1> の <name3> に <val2> を加えた値番目の <name4> から <name6> の <name3> 番目を引いた値番目を <name1> の <name3> 番目の <name4> 番目だけ増加させる	<name1> [ <name3> + <val2> ] [ <name4> - <name6> [ <name3> ] ] += <name1> [ <name3> ] [ <name4> ]	<name1> [ <name3> + <val2> ] [ <name4> - <name6> [ <name3> ] ] += <name1> [ <name3> ] [ <name4> ]
<name1> ( <name2> , <name6> , <name4> ) を <name3> とする	<name3> = <name1> ( <name2> , <name6> , <name4> )	else = <name1> ( <name2> , <name6> , <name4> )
<name1> の <name6> の <name4> に <name4> を挿入する	<name1> . <name6> . insert ( <name4> , <name4> )	. <name1> . insert ( <name6> . <name4> , <name4> )
<name6> の <name4> 番目が <name6> の <name4> から <val1> を引いた値番目より小さいとき、	if <name6> [ <name4> ] < <name6> [ <name4> - <val1> ] :	while <name6> [ <name4> ] < <name6> [ <name4> - <val1> ] :
<name2> から <val4> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> , <val4> ) :	continue for <name3> in range ( <name2> , <val4> ) :
\ <val6> を間に入れて <name2> の <name5> 番目から <name3> 番目までの部分列の各要素に整数を適用した列を連結した文字列を出力する\	\ print ( <val6> . join ( map ( str , <name2> [ <name5> : <name3> ] ) ) ) \	while <val6> . join ( map ( str , <name2> [ <name5> : <name3> ] ) ) \
<val3> を開始番号として <name2> の先頭を除いた部分列に番号付した組の列を順に <name5> 、 <name6> として、繰り返す	for <name5> , <name6> in enumerate ( <name2> [ <val3> : ] , start = <val3> ) :	. for <name5> , <name6> in enumerate ( <name2> [ <val3> : ] , start = <val3> ) :
<name5> の先頭に <name3> を追加する	<name5> . appendleft ( <name3> )	<name3> . appendleft ( <name3> )
<val2> から <name3> を <val4> で割った商に <val2> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val2> , <name3> // <val4> + <val2> ) :	) for <name5> in range ( <val2> , <name3> // <val4> + <val2> ) :
<val6> から <name5> 未満までの数列の各要素を <name4> とし、 <val6> の列を <name1> とする	<name1> = [ <val6> for <name4> in range ( <name5> ) ]	<name4> = [ <val6> for <name4> in range ( <name5> ) ]
<name4> に <val3> の <name5> * <name6> 乗に対する <name1> の剰余を掛けた値を <name1> で割った余りに <name2> の整数値に <name4> を掛けた値を <name1> で割った余りを加えた値を <name1> で割った余りを <name4> とする	<name4> = ( ( <name4> * pow ( <val3> , <name5> * <name6> , <name1> ) % <name1> ) + ( int ( <name2> ) * <name4> % <name1> ) ) % <name1>	( <name4> = ( <name4> * pow ( <val3> , <name5> * <name6> , <name1> ) % <name1> ) + ( int ( <name2> ) * <name4> ) % <name1> ) % <name1>
( <val5> 、 <val4> ) からなる列の <name1> * <name2> を <val3> で割った余りが <val6> と等しくかつ ( <name5> + <name4> ) を <val3> で割った余りが <val6> と等しいかどうか番目を出力する	print ( [ <val5> , <val4> ] [ <name1> * <name2> % <val3> == <val6> and ( <name5> + <name4> ) % <val3> == <val6> ] )	print ( [ <val5> , <val4> ] [ ( <name1> * <name2> % <val3> == <val6> and ( <name5> + <name4> ) % <val3> ) == <val6> ] )
<name6> ( <name5> [ <val1> ] , <name5> [ <val4> ] )	<name6> ( <name5> [ <val1> ] , <name5> [ <val4> ] )	set ( <name6> ( <name5> [ <val1> ] , <name5> [ <val4> ] ) )
<name6> が <name5> の <name3> 番目より小さくかつ <name1> の <name3> 番目でないとき、	if <name6> < <name5> [ <name3> ] and ( not <name1> [ <name3> ] ) :	> <name6> < <name5> [ <name3> ] and not <name1> [ <name3> ] :
<name1> が <name6> と等しいかどうかが <name4> と等しいかどうかが <val2> と等しいとき、	if <name1> == <name6> == <name4> == <val2> :	while ( <name1> == <name6> == <name4> == <val2> ) :
<name6> の <name5> から <val4> を引いた値番目を <val4> だけ増加させる	<name6> [ <name5> - <val4> ] += <val4>	<name2> [ <name5> - <val4> ] += <val4>
<name1> の <val5> 番目を <name3> の <name6> にする	<name3> . <name6> = <name1> [ <val5> ]	<name3> . <name6> = <name1> [ <val5> ]
0 から <name1> に <val5> を加えた値に <name4> を掛けた値未満までの数列の各要素を <name3> とし、、つまり空列の列を <name6> とする	<name6> = [ [ ] for <name3> in range ( ( <name1> + <val5> ) * <name4> ) ]	<name4> = [ [ ] for <name3> in range ( ( <name1> + <val5> ) * <name4> ) ]
0 から <name2> を <val6> で割った商未満までの数列を順に <name5> として、繰り返す <blk> 無限の整数列の <name5> に <val4> を加えた値番目に無限の整数列の <name2> から <name5> を引いた値から <val4> を引いた値番目を加えた値を出力する </blk>	for <name5> in range ( <name2> // <val6> ) : <blk> print ( count [ <name5> + <val4> ] + count [ <name2> - <name5> - <val4> ] ) </blk>	for <name5> in range ( <name2> // <val6> ) : <blk> print ( count [ <name5> + <val4> ] + count [ <name2> - <name5> - <val4> ] ) </blk>
<name2> の <name5> 番目を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = <name2> [ <name5> ]	<name6> , <name3> = <name2> [ <name5> ]
<name1> . <name3> ( <name4> , <name2> , <name6> ) を <name5> とする	<name5> = <name1> . <name3> ( <name4> , <name2> , <name6> )	else = <name1> . <name3> ( <name4> , <name2> , <name6> )
<name4> の <val6> 番目を <name3> とする	<name3> = <name4> [ <val6> ]	<name3> = <name4> [ <val6> ]
<name1> の <val3> 番目が <val3> と等しいとき、	if <name1> [ <val3> ] == <val3> :	if <name1> [ <val3> ] == <val3> :
<name1> の <name5> 番目を <name3> の <name5> 番目に <name6> を掛けた値だけ増加させる	<name1> [ <name5> ] += <name3> [ <name5> ] * <name6>	( <name1> [ <name5> ] += <name3> [ <name5> ] * <name6> )
<name6> が <name3> の <name1> 番目から <name3> の <name5> 番目を引いた値の絶対値より小さいとき、	if <name6> < abs ( <name3> [ <name1> ] - <name3> [ <name5> ] ) :	> <name6> < abs ( <name3> [ <name1> ] - <name3> [ <name5> ] ) :
文字列 <name6> を評価した値が <val4> と等しいとき、	if eval ( <name6> ) == <val4> :	list ( eval ( <name6> ) == <val4> :
<name5> の <name6> 、 <name4> の <name6> を <name4> の <name6> 、 <name5> の <name6> とする	<name4> . <name6> , <name5> . <name6> = <name5> . <name6> , <name4> . <name6>	<name2> . <name4> . <name6> , <name5> . <name6> = <name5> . <name6> , <name4> . <name6>
<val3> の <val5> 乗を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <val3> ** <val5>	<name2> [ <name1> ] = <val3> ** <val5>
<val2> から <name5> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val2> , len ( <name5> ) ) :	len ( range ( <val2> , len ( <name5> ) ) :
入力された文字列を <val4> で分割した字句列の各要素を <name5> とし、 <name5> の整数値から <val1> を引いた値の列を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = [ int ( <name5> ) - <val1> for <name5> in input ( ) . split ( <val4> ) ]	<name3> , <name2> = [ int ( <name5> ) - <val1> for <name5> in input ( ) . split ( <val4> ) ]
<name2> を <name5> の <name1> 番目の <name2> にする	<name5> [ <name1> ] . <name2> = <name2>	<name4> [ <name1> ] . <name2> = <name2>
<name1> が、つまり未定値と等しくないとき、 <blk> 空列を返す </blk>	if <name1> is None : <blk> return [ ] </blk>	if <name1> is None : <blk> return [ ] </blk>
<name4> に <val6> を加えた値を <val5> で割った商に <val5> を掛けた値を <name4> とする	<name4> = ( <name4> + <val6> ) // <val5> * <val5>	<name4> = ( <name4> + <val6> ) // <val5> * <val5>
<name5> の <name2> から読み込んだ一行を <name3> とする	<name3> = <name5> . <name2> . <name3>	<name3> = <name5> . <name2> . <name3>
<name3> ( <name5> , ( <name2> [ <name1> -1 ] [ <name6> ] , <name1> , <name6> + <val4> ) )	<name3> ( <name5> , ( <name2> [ <name1> - <val4> ] [ <name6> ] , <name1> , <name6> + <val4> ) )	<name3> ( <name5> , ( <name2> [ <name1> - <val4> ] [ <name6> ] , <name1> , <name6> + <val4> ) )
<name4> が <name1> に含まれないとき、	if <name4> not in <name1> :	list if <name4> not in <name1> :
<val3> <= <name4> が <name2> より小さくなくまたは <val3> <= <name6> が <name1> より小さくなくまたは <name5> の <name6> 番目の <name4> 番目が <val3> と等しくまたは <name4> の <name6> 番目の <name4> 番目のとき、	if not <val3> <= <name4> < <name2> or not <val3> <= <name6> < <name1> or <name5> [ <name6> ] [ <name4> ] == <val3> or <name4> [ <name6> ] [ <name4> ] :	[ if not <val3> < <name4> < <name2> or not <val3> <= <name6> < <name1> or not <name5> [ <name6> ] [ <name4> ] == <val3> or <name4> [ <name6> ] [ <name4> ] :
<name5> が、つまり未定値と等しくなくまたは <name2> ( <name5> / <name6> ) が <val3> 以下のとき、	if <name5> is None or <name2> ( <name5> / <name6> ) <= <val3> :	for <name5> in <name5> is None or <name2> ( <name5> / <name6> ) <= <val3> :
<name6> に <name5> を掛けた値に <name3> の <name4> 番目を加えた値を <name2> で割った余りを <name6> とする	<name6> = ( <name6> * <name5> + <name3> [ <name4> ] ) % <name2>	<name5> = ( <name6> * <name5> + <name3> [ <name4> ] ) % <name2>
<name4> から <name2> を引いた値が <val6> より小さいとき、 <blk> <val6> を返す </blk>	if <name4> - <name2> < <val6> : <blk> return <val6> </blk>	\ if <name4> - <name2> < <val6> : <blk> return <val6> </blk>
<name4> ( <val1> , <val6> ) を <name3> として <name5> をソートする	<name5> . sort ( <name3> = <name4> ( <val1> , <val6> ) )	<name5> . sort ( <name3> = <name4> ( <val1> , <val6> ) )
<val5> が <name2> の <name6> 番目以下かどうかが <val3> 以下のとき、	if <val5> <= <name2> [ <name6> ] <= <val3> :	list if <val5> <= <name2> [ <name6> ] <= <val3> :
( ( <name1> ) からなる列の 0 から <val6> を <name2> だけ左シフトした値未満までの数列の各要素を <name4> とし、 <name5> の列回分の列 ) からなる列を <name3> とする	<name3> = [ [ <name1> ] * [ <name5> for <name4> in range ( <val6> << <name2> ) ] ]	<name3> = [ [ <name1> ] * [ <name5> for <name4> in range ( <val6> << <name2> ) ] ]
- <name4> から <name5> の <name1> の <name3> 番目を引いた値に <name5> の <name1> の <name6> 番目を加えた値を <name5> の <name1> の <name2> 番目にする	<name5> . <name1> [ <name2> ] = - <name4> - <name5> . <name1> [ <name3> ] + <name5> . <name1> [ <name6> ]	<name1> . <name2> = - <name4> - <name5> [ <name1> . <name3> ] + <name5> . <name1> [ <name6> ]
<name3> の末尾のコピーされた列を <name5> とする	<name5> = <name3> [ - 1 ] [ : ]	<name5> = <name3> [ - 1 ] [ : ]
<name2> の <name1> に <name2> の <name1> を掛けた値から ( <name4> - <name2> . <name5> ) . <name6> ( ) を引いた値の平方根を <name3> とする	<name3> = sqrt ( <name2> . <name1> * <name2> . <name1> - ( <name4> - <name2> . <name5> ) . <name6> ( ) )	<name6> = sqrt ( <name2> . <name1> * <name2> . <name1> - ( <name4> - <name2> . <name5> ) . <name6> ( ) )
<name5> ( <name4> + <name3> , <name1> + <name2> )	<name5> ( <name4> + <name3> , <name1> + <name2> )	( <name5> ( <name4> + <name3> , <name1> + <name2> ) )
<name5> の <name3> 番目と <name5> の <name2> 番目を入れ替える	<name5> [ <name3> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name3> ]	<name4> [ <name3> ] , <name5> [ <name2> ] = <name5> [ <name2> ] , <name5> [ <name3> ]
<val6> 、 <name4> の最小値を <name3> とする	<name3> = min ( <val6> , <name4> )	<name3> = min ( <val6> , <name4> )
D : {}を書式として <name6> の <name1> のリテラルで整形した文字列を出力する	print ( 'D:{}' . format ( repr ( <name6> . <name1> ) ) )	print ( 'Data {}' . format ( ~ <name6> . <name1> ) )
<name6> の <val4> 番目が <name2> より大きいとき、	if <name6> [ <val4> ] > <name2> :	> <name6> [ <val4> ] > <name2> :
<name3> の <name1> の <name5> 番目の末尾に <name6> を追加する	<name3> . <name1> [ <name5> ] . append ( <name6> )	<name1> . <name1> [ <name5> ] . append ( <name6> )
<val5> から <name6> の先頭の順序数から <val4> を引いた値を引いた値を <name2> とする	<name2> = <val5> - ( ord ( <name6> [ 0 ] ) - <val4> )	<name2> = <val5> - ( ord ( <name6> [ 0 ] ) - <val4> )
0 から <name5> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 <name6> の <name4> 番目のときの <name4> の列を返す	return [ <name4> for <name4> in range ( <name5> + <val3> ) if <name6> [ <name4> ] ]	return [ <name4> for <name4> in range ( <name5> + <val3> ) if <name6> [ <name4> ] ]
<name3> が <name6> の <val4> 乗より小さい間、次を繰り返す	while <name3> < <name6> ** <val4> :	del <name3> < <name6> ** <val4> :
<name3> の、つまり先頭から <name4> 番目までの部分列に ( <name3> の <name4> 番目から <name3> の <name4> + <val5> 番目を引いた値 ) からなる列を加えた値に <name3> の <name4> に <val1> を加えた値から、つまり末尾までの部分列を加えた値を <name3> とする	<name3> = <name3> [ : <name4> ] + [ <name3> [ <name4> ] - <name3> [ <name4> + <val5> ] ] + <name3> [ <name4> + <val1> : ]	<name3> = <name3> [ : <name4> ] + [ <name3> [ <name4> ] - <name3> [ <name4> + <val5> ] ] + <name3> [ <name4> + <val1> : ]
<name2> の末尾に ( - <name1> 、 <name4> 、 <name5> ) からなる列を追加する	<name2> . append ( [ - <name1> , <name4> , <name5> ] )	<name2> . append ( [ - <name1> , <name4> , <name5> ] )
<name2> の先頭、 <name2> の <val1> 番目、 <name2> の <val3> 番目、 <name2> の <val4> 番目、 <name2> の <val5> 番目、 <name2> の <val6> 番目を <name2> の先頭、 <name2> の <val4> 番目、 <name2> の <val1> 番目、 <name2> の <val5> 番目、 <name2> の <val3> 番目、 <name2> の <val6> 番目とする	<name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val1> ] , <name2> [ <val5> ] , <name2> [ <val3> ] , <name2> [ <val6> ] = <name2> [ 0 ] , <name2> [ <val1> ] , <name2> [ <val3> ] , <name2> [ <val4> ] , <name2> [ <val5> ] , <name2> [ <val6> ]	<name4> . <name2> [ 0 ] , <name2> [ <val4> ] , <name2> [ <val1> ] , <name2> [ <val5> ] , <name2> [ <val3> ] , <name2> [ <val6> ] = <name2> [ 0 ] , <name2> [ <val1> ] , <name2> [ <val3> ] , <name2> [ <val4> ] , <name2> [ <val5> ] , <name2> [ <val6> ]
<name6> ( <name5> [ <name4> ] ) を <name4> とするを <name5> の <name4> 番目にする	<name5> [ <name4> ] = <name4> = <name6> ( <name5> [ <name4> ] )	( <name5> [ <name4> ] = <name4> = <name6> ( <name5> [ <name4> ] ) )
<name5> に <val6> を掛けた値を <name3> とする	<name3> = <name5> * <val6>	<name3> = <name5> * <val6>
<name1> の <name6> の <name5> 番目番目が <val3> と等しいとき、	if <name1> [ <name6> [ <name5> ] ] == <val3> :	for <name1> [ <name6> [ <name5> ] ] == <val3> :
<name6> を <name5> の <name4> 番目の順序数から <val2> の順序数を引いた値だけ増加させる	<name6> += ord ( <name5> [ <name4> ] ) - ord ( <val2> )	( <name6> += ord ( <name5> [ <name4> ] ) - ord ( <val2> ) )
<val3> 進表記 <val2> に入力された文字列を加えた値の整数値を <name5> とする	<name5> = int ( <val2> + input ( ) , <val3> )	else = int ( <val2> + input ( ) , <val3> )
<name3> . <name4> ( <name2> , ( <name6> [ <name5> ] , <name5> ) )	<name3> . <name4> ( <name2> , ( <name6> [ <name5> ] , <name5> ) )	<name5> . <name4> ( <name2> , ( <name6> [ <name5> ] , <name5> ) )
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列の組を <name6> とする </blk>	try : <blk> <name6> = tuple ( map ( int , input ( ) . split ( ) ) ) </blk>	for try : <blk> <name6> = tuple ( map ( int , input ( ) . split ( ) ) ) </blk>
<name3> ( <name1> . <name6> ( -1 ) , <val4> )	<name3> ( <name1> . <name6> ( - 1 ) , <val4> )	<name1> . <name6> ( ( - 1 ) , <val4> )
<name5> を <val6> を <name2> だけ左シフトした値との排他的論理和にする	<name5> ^ = <val6> << <name2>	( <name5> ^ = <val6> << <name2> )
<val5> を <name1> の <name3> の <val2> 番目にする	<name1> . <name3> [ <val2> ] = <val5>	( <name1> [ <name3> . <val2> ] = <val5> )
<name4> に <name6> に <name3> を加えた値から <name2> を引いた値を <name3> から <name4> を引いた値で割った余りを加えた値を <name5> とする	<name5> = <name4> + ( <name6> + <name3> - <name2> ) % ( <name3> - <name4> )	<name5> = <name4> + ( <name6> + <name3> - <name2> ) % ( <name3> - <name4> )
<name6> の整数値から <val1> を引いた値、 <name2> の整数値から <val1> を引いた値を <name6> 、 <name2> とする	<name6> , <name2> = int ( <name6> ) - <val1> , int ( <name2> ) - <val1>	<name6> , <name2> = int ( <name6> ) - <val1> , int ( <name2> ) - <val1>
<name5> . <name6> ( <name5> . <name4> [ <name3> * <val1> + <val2> ] , <name5> . <name4> [ <name3> * <val1> + <val1> ] ) を <name5> の <name4> の <name3> 番目にする	<name5> . <name4> [ <name3> ] = <name5> . <name6> ( <name5> . <name4> [ <name3> * <val1> + <val2> ] , <name5> . <name4> [ <name3> * <val1> + <val1> ] )	( <name5> . <name4> [ <name3> ] = <name5> . <name6> ( <name5> . <name4> [ <name3> * <val1> + <val2> ] , <name5> . <name4> [ <name3> * <val1> + <val1> + <val1> ] ) )
<name3> を <name6> から <name4> を引いた値の <val1> 乗に <name5> から <name2> を引いた値の <val1> 乗を加えた値に <name3> から <name6> を引いた値の <val1> 乗を加えた値だけ増加させる	<name3> += ( <name6> - <name4> ) ** <val1> + ( <name5> - <name2> ) ** <val1> + ( <name3> - <name6> ) ** <val1>	<name2> += <name3> += ( ( <name6> - <name4> ) ** <val1> + ( <name5> - <name2> ) ** <val1> + ( <name3> - <name6> ) ** <val1> )
<name2> の末尾に ( <name6> 、 <name3> の <name1> -1 番目の <name6> 番目のとき <name1> 、そうでなければ <name1> から <val5> を引いた値、 <name4> 、 <name3> の <name2> + <val5> 番目の <name4> 番目のとき <name2> 、そうでなければ <name2> に <val5> を加えた値、 <name6> ) の組を追加する	<name2> . append ( ( <name6> , <name1> if <name3> [ <name1> - <val5> ] [ <name6> ] else <name1> - <val5> , <name4> , <name2> if <name3> [ <name2> + <val5> ] [ <name4> ] else <name2> + <val5> , <name6> ) )	<name2> . append ( ( <name1> if <name6> , <name3> [ <name1> - <val5> ] [ <name6> ] else <name1> - <val5> , <name4> , <name3> [ <name2> + <val5> ] [ <name4> ] for <name2> , <name6> in <name3> [ <val5> ] [ <name4> + <val5> ] ] , <name6> ) )
( <name4> ) からなる列に <name5> をソートした列を加えた値を <name5> とする	<name5> = [ <name4> ] + sorted ( <name5> )	<name5> = [ <name4> ] + sorted ( <name5> )
<name6> の <name3> 番目が <name2> の <name1> 番目と等しいとき、 <blk> <name4> を <val5> だけ増加させる <sep> <name1> を <val5> だけ増加させる </blk>	if <name6> [ <name3> ] == <name2> [ <name1> ] : <blk> <name4> += <val5> <sep> <name1> += <val5> </blk>	<blk> if <name6> [ <name3> ] == <name2> [ <name1> ] : <blk> <name4> += <val5> <sep> <name1> += <val5> </blk>
<name2> を <name6> の <name1> に <val4> を加えた値番目にする	<name6> [ <name1> + <val4> ] = <name2>	<name2> [ <name1> + <val4> ] = <name2>
<name1> の先頭の <val5> 番目を <name3> とする	<name3> = <name1> [ 0 ] [ <val5> ]	<name3> = <name1> [ 0 ] [ <val5> ]
<name6> から <name1> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> , <name1> + <val5> ) :	continue for <name3> in range ( <name6> , <name1> + <val5> ) :
<name4> の各要素を <name5> 、 <name2> とし、 <name2> の列の最小値を <name1> とする <name4> の各要素を <name5> 、 <name2> とし、 <name2> の列の最大値を <name6> とする	<name1> = min ( [ <name2> for <name5> , <name2> in <name4> ] ) <name6> = max ( [ <name2> for <name5> , <name2> in <name4> ] )	<name1> = min ( [ <name2> for <name5> , <name2> in <name4> ] ) <name6> = max ( [ <name2> for <name5> , <name2> in <name4> ] )
<name4> の <name5> の <name2> から読み込んだ一行を入力された文字列とする	input = <name4> . <name5> . <name2> . readline	now = <name4> . <name5> . <name2> . readline ( )
<name1> の <name6> 番目が <val3> と等しくないとき、	if <name1> [ <name6> ] != <val3> :	raise <name1> [ <name6> ] != <val3> :
<name5> が <val2> より大きいとき、	if <name5> > <val2> :	for <name5> > <val2> :
<name1> から <name4> を引いた値の <val3> 乗に <name2> から <name5> を引いた値の <val3> 乗を加えた値の平方根を返す	return sqrt ( ( <name1> - <name4> ) ** <val3> + ( <name2> - <name5> ) ** <val3> )	assert math . sqrt ( ( <name1> - <name4> ) ** <val3> + ( <name2> - <name5> ) ** <val3> )
<name5> . <name1> ( [ <val2> , <val4> , <val4> ] , <name5> . <name6> ( [ <val3> , <val4> , <val3> , <val4> , <val3> , <val5> , <val4> , <val5> ] ) ) を <name3> とする	<name3> = <name5> . <name1> ( [ <val2> , <val4> , <val4> ] , <name5> . <name6> ( [ <val3> , <val4> , <val3> , <val4> , <val3> , <val5> , <val4> , <val5> ] ) )	<name3> = <name5> . <name1> ( [ <val2> , <val4> , <val4> ] , <name5> . <name6> ( [ <val3> , <val4> , <val3> , <val4> , <val5> , <val4> , <val5> ] ) )
<name6> の <name1> 番目、 <name6> の <name4> 番目を <name6> の <name4> 番目、 <name6> の <name1> 番目とする	<name6> [ <name4> ] , <name6> [ <name1> ] = <name6> [ <name1> ] , <name6> [ <name4> ]	<name6> [ <name4> ] , <name6> [ <name1> ] = <name6> [ <name1> ] , <name6> [ <name4> ]
<name4> の <name6> の <name2> 番目を <name6> とする	<name6> = <name4> . <name6> [ <name2> ]	<name2> = <name4> . <name6> [ <name2> ]
<name2> の <name5> 乗に対する <val3> の剰余を出力する	print ( pow ( <name2> , <name5> , <val3> ) )	print ( pow ( <name2> , <name5> , <val3> ) )
<name5> の <name2> の <name6> 番目と等しい要素の最初の位置が <name5> の <name2> の <name6> に <val3> を加えた値番目と等しい要素の最初の位置より大きいとき、	if <name5> . index ( <name2> [ <name6> ] ) > <name5> . index ( <name2> [ <name6> + <val3> ] ) :	isinstance ( <name5> . index ( <name2> [ <name6> ] ) ) > <name5> . index ( <name2> [ <name6> + <val3> ] ) :
<name1> 、 <name2> ( <name6> ) の最小値を <name5> とする	<name5> = min ( <name1> , <name2> ( <name6> ) )	<name5> = min ( <name1> , <name2> ( <name6> ) )
<name3> 、 <name5> において正規表現 <name6> が最初にマッチする位置	search ( <name6> , <name3> , <name5> )	bisect . search ( <name6> , <name3> , <name5> )
<name1> に <name6> を加えた値、 <name2> に <name5> を加えた値を <name4> 、 <name3> とする	<name4> , <name3> = <name1> + <name6> , <name2> + <name5>	str , <name3> = <name1> + <name6> , <name2> + <name5>
<val2> を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <val2>	( <name5> [ <val1> ] = <val2> )
<name3> の末尾に ( -1 ) からなる列の <name1> に <val6> を加えた値回分の列を追加する	<name3> . append ( [ - 1 ] * ( <name1> + <val6> ) )	<name3> . append ( [ - <val6> ] * ( <name1> + <val6> ) )
0 から <val5> 未満までの数列の各要素を <name4> とし、 0 から <val5> 未満までの数列の各要素を <name3> とし、 0 から <val2> 未満までの数列の各要素を <name6> とし、、つまり偽の列の列の列を <name1> とする	<name1> = [ [ [ False for <name6> in range ( <val2> ) ] for <name3> in range ( <val5> ) ] for <name4> in range ( <val5> ) ]	<name6> = [ [ [ False for <name6> in range ( <val2> ) ] for <name3> in range ( <val5> ) ] for <name4> in range ( <val5> ) ]
<name4> の末尾に <name1> の末尾を追加する	<name4> . append ( <name1> [ - 1 ] )	<name3> . append ( <name1> [ - 1 ] )
<name1> を <name4> の <name6> 番目倍にする	<name1> *= <name4> [ <name6> ]	( <name1> *= <name4> [ <name6> ] )
区切りなしで改行せずに <name3> の <name4> 番目を出力する	print ( <name3> [ <name4> ] , sep = '' , end = '' )	print ( <name3> [ <name4> ] , sep = '' , end = '' )
<name5> の、つまり先頭から <name6> に <val1> を加えた値までの部分列に <name5> の <name6> に <val1> を加えた値から、つまり末尾までの部分列を反転した列のリストを加えた値を返す	return <name5> [ : <name6> + <val1> ] + list ( reversed ( <name5> [ <name6> + <val1> : ] ) )	yield <name5> [ : <name6> + <val1> ] + list ( reversed ( <name5> [ <name6> + <val1> : ] ) )
<name5> が <name1> に含まれないとき、	if not <name5> in <name1> :	while <name5> not in <name1> :
<name1> のコピーを <name4> とする	<name4> = <name1> . copy ( )	<name6> = <name1> . copy ( )
<name6> モジュールを用いる	from <name6> import deepcopy	sqrt ( <name6> ) import sqrt
<name6> を <name1> で割った余りが <val3> と等しいとき、 <blk> <name1> を出力する </blk>	if <name6> % <name1> == <val3> : <blk> print ( <name1> ) </blk>	<blk> if <name6> % <name1> == <val3> : <blk> print ( <name1> ) </blk>
<name1> . <name5> ( <name3> , <name4> ) を出力する	print ( <name1> . <name5> ( <name3> , <name4> ) )	print ( <name1> . <name5> ( <name3> , <name4> ) )
<name5> と <name6> の和集合をソートした列を順に <name1> として、繰り返す	for <name1> in sorted ( <name5> . union ( <name6> ) ) :	( <name1> ) : for <name1> in sorted ( <name5> . union ( <name6> ) ) :
<name6> の <name5> の <name1> の <name3> 番目に <name2> の <name4> を加えた値が <name6> の <name5> の <name2> の <name6> 番目より小さいとき、	if <name6> . <name5> [ <name1> . <name3> ] + <name2> . <name4> < <name6> . <name5> [ <name2> . <name6> ] :	isinstance ( <name6> . <name5> [ <name1> . <name3> ] + <name2> . <name4> < <name6> . <name5> [ <name2> . <name6> ] ) :
<name2> ( <name6> , <name1> , <name5> )	<name2> ( <name6> , <name1> , <name5> )	set ( <name2> ( <name6> , <name1> , <name5> ) )
<val1> を <name5> の <val6> 番目にする	<name5> [ <val6> ] = <val1>	( <name5> [ <val6> ] = <val1> )
<name4> ( <name2> , <name3> ) を出力する	print ( <name4> ( <name2> , <name3> ) )	print ( <name4> ( <name2> , <name3> ) )
0 から <name3> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の列を <name2> とする	<name2> = [ input ( ) . split ( ) for <name1> in range ( <name3> ) ]	<name6> = [ input ( ) . split ( ) for <name1> in range ( <name3> ) ]
<name6> の長さ、 <val4> の最小値を <name5> とする	<name5> = min ( len ( <name6> ) , <val4> )	else = min ( len ( <name6> ) , <val4> )
<name1> の整数値が <val6> と等しいとき、 <blk> 繰り返しを中断する </blk>	if int ( <name1> ) == <val6> : <blk> break </blk>	list if int ( <name1> ) == <val6> : <blk> break </blk>
<name3> に <val6> を加えた値が <name1> より小さいとき、	if <name3> + <val6> < <name1> :	if <name3> + <val6> < <name1> :
<val2> 、 <val2> を <name1> 、 <name3> とする	<name1> , <name3> = <val2> , <val2>	( <name1> , <name3> = <val2> , <val2> )
( <val2> 、 <val5> ) からなる列の <name3> を <val1> で割った余りに <val5> を加えた値が <name4> に含まれるかどうか番目を出力する	print ( [ <val2> , <val5> ] [ ( <name3> % <val1> ) + <val5> in <name4> ] )	print ( [ <val2> , <val5> ] [ ( <name3> % <val1> ) + <val5> in <name4> ] )
<val3> から <val1> 未満までの数列を順に <name4> として、繰り返す <blk> <name5> の <name2> 番目の <name4> の <name3> 番目の <name4> 番目番目を <name6> の <name4> 番目にする </blk>	for <name4> in range ( <val3> , <val1> ) : <blk> <name6> [ <name4> ] = <name5> [ <name2> ] [ <name4> [ <name3> ] [ <name4> ] ] </blk>	try for <name4> in range ( <val3> , <val1> ) : <blk> <name6> [ <name4> ] = <name5> [ <name2> ] [ <name4> ] [ <name4> ] ] </blk>
<name4> を <name3> に <name1> から <name2> を引いた値を掛けた値だけ増加させる	<name4> += <name3> * ( <name1> - <name2> )	<name3> += <name3> * ( <name1> - <name2> )
<name3> に <name1> を加えた値に <name6> を加えた値に <name2> に <name4> を加えた値に <name5> を掛けた値を加えた値を <name5> とする	<name5> = ( <name3> + <name1> + <name6> + ( <name2> + <name4> ) * <name5> )	<name5> = <name3> + <name1> + <name6> + ( <name2> + <name4> ) * <name5>
<name4> を <name2> だけ減少させる <name3> を <name5> だけ減少させる	<name4> -= <name2> <name3> -= <name5>	<name1> -= <name2> <name3> -= <name5>
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]	<name5> , <name1> = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
<val1> から -1 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <val1> , - 1 , - 1 ) :	for <name6> in range ( <val1> , - 1 , - 1 ) :
( <name3> の <name6> ) からなる列の <name5> に <val2> を加えた値回分の列を <name4> とする	<name4> = [ <name3> . <name6> ] * ( <name5> + <val2> )	<name4> = [ <name3> . <name6> ] * ( <name5> + <val2> )
( ( <name4> , <val6> ) 、 ( <name3> , <val6> ) 、 ( <name2> , <val6> ) 、 ( <name5> , <val6> ) 、 ( <name1> , <val6> ) 、 ( <name1> , <val6> ) 、 ( <val4> , <val6> ) ) からなる辞書を <name1> とする	<name1> = { <name4> : <val6> , <name3> : <val6> , <name2> : <val6> , <name5> : <val6> , <name1> : <val6> , <name1> : <val6> , <val4> : <val6> }	<name1> = { <name4> : <val6> , <name3> : <val6> , <name2> : <val6> , <name5> : <val6> , <name1> : <val6> , <name1> : <val6> , <val4> : <val6> }
B を <name5> とする	<name5> = 'B'	( <name5> = 'B' )
<name1> が <name2> より大きいとき、	if <name1> > <name2> :	for <name1> > <name2> :
<name1> に <val4> を加えた値が <name3> の長さより小さくかつ <name5> の <name3> の <name1> 番目番目が <name5> の <name3> の <name1> に <val4> を加えた値番目番目より小さいとき、	if <name1> + <val4> < len ( <name3> ) and <name5> [ <name3> [ <name1> ] ] < <name5> [ <name3> [ <name1> + <val4> ] ] :	for <name1> + <val4> < len ( <name3> ) and <name5> [ <name3> [ <name1> ] ] < <name5> [ <name3> [ <name1> + <val4> ] :
<name5> ( <name6> [ <name3> ] ) を <name3> とするを <name6> の <name3> 番目にする	<name6> [ <name3> ] = <name3> = <name5> ( <name6> [ <name3> ] )	else [ <name3> ] = <name3> = <name5> ( <name6> [ <name3> ] )
<name2> の <name1> が <name4> の <name1> と等しいとき、	if <name2> . <name1> == <name4> . <name1> :	list ( <name2> . <name1> == <name4> . <name1> ) :
( <val2> 、 <val5> 、 <val3> ) からなる列を <name6> の <val4> 番目にする	<name6> [ <val4> ] = [ <val2> , <val5> , <val3> ]	<name2> [ <val4> ] = [ <val2> , <val5> , <val3> ]
<name5> の <name2> の絶対値を <name3> で割った値を返す	return abs ( <name5> . <name2> ) / <name3>	assert abs ( <name5> . <name2> ) / <name3>
( ( -1 、 <val3> ) の組、 ( <val3> 、 -1 ) の組、 ( <val1> 、 <val3> ) の組、 ( <val3> 、 <val1> ) の組 ) の組を <name2> とする	<name2> = ( ( - <val1> , <val3> ) , ( <val3> , - <val1> ) , ( <val1> , <val3> ) , ( <val3> , <val1> ) )	input = ( ( - <val1> , <val3> ) , ( <val3> , - <val1> ) , ( <val1> , <val3> ) , ( <val3> , <val1> ) )
<name5> ( ) を展開し、それぞれ <name1> 、 <name6> とする 0 から <name1> 未満までの数列の各要素を <name1> とし、 <name4> ( [ ( <name3> + <val2> ) * ( <name6> - <name3> ) * vforx , vinenumerate ( <name5> ( ) ) ] ) に ( <name1> + <val2> ) を掛けた値に <name1> から <name1> を引いた値を掛けた値の列の総和を出力する	<name1> , <name6> = <name5> ( ) print ( <name4> ( [ <name4> ( [ ( <name3> + <val2> ) * ( <name6> - <name3> ) * v for <name3> , v in enumerate ( <name5> ( ) ) ] ) * ( <name1> + <val2> ) * ( <name1> - <name1> ) for <name1> in range ( <name1> ) ] ) )	<name5> = <name1> ( ) <name1> = <name5> ( ) <name6> = sum ( [ <name4> ( <name3> + <val2> ) * ( <name6> - <name3> ) for <name1> in enumerate ( ( <name5> ) ) ] + ( <name1> + <val2> ) * ( <name1> - <val2> ) * ( <name1> + <val2> ) for <name1> in range ( <name1> ) ] ) )
<name1> . <name2> ( <name3> ) を展開し、それぞれ <name6> 、 <name5> とする	<name6> , <name5> = <name1> . <name2> ( <name3> )	<name3> , <name5> = <name1> . <name2> ( <name3> )
<name3> から <name2> [ : <name1> ] の総和に <val6> を掛けた値を引いた値から <name5> に <name4> から <name1> に <val6> を掛けた値を引いた値を掛けた値を引いた値に <val6> を掛けた値を <name4> とする	<name4> = ( <name3> - sum ( <name2> [ : <name1> ] ) * <val6> - <name5> * ( <name4> - <name1> * <val6> ) ) * <val6>	<name4> = ( <name3> - sum ( <name2> [ : <name1> ] ) * <val6> - <name5> * ( <name4> - <name1> * <val6> ) ) * <val6>
<name5> から <val3> を引いた値から <val6> 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> - <val3> , <val6> , - <val3> ) :	: for <name2> in range ( <name5> - <val3> , <val6> , - <val3> ) :
<name4> から <val6> を引いた値を出力する	print ( <name4> - <val6> )	print ( <name4> - <val6> )
<name1> の <name2> 番目を <name5> を <val6> で割った値だけ増加させる	<name1> [ <name2> ] += <name5> / <val6>	<name2> [ <name2> ] += <name5> / <val6>
<name4> に対応する値、もし存在しなければ <name2>	<name4> . get ( <name2> )	<name1> . get ( <name2> )
<name4> の末尾に <name5> の <name3> 番目の <name1> 番目を追加する	<name4> . append ( <name5> [ <name3> ] [ <name1> ] )	<name4> . append ( <name5> [ <name3> ] [ <name1> ] )
<name4> の <name5> 番目を <name4> の <name6> 番目だけ増加させる	<name4> [ <name5> ] += <name4> [ <name6> ]	<name2> [ <name5> ] += <name4> [ <name6> ]
<name3> の <name5> を <name2> とする	<name2> = <name3> . <name5>	input = <name3> . <name5>
<name3> と <name2> の排他論理和をソートした列を順に <name6> として、繰り返す	for <name6> in sorted ( <name3> ^ <name2> ) :	( <name6> in sorted ( <name3> ^ <name2> ) :
<name6> から <val1> を引いた値を <name3> の <name4> 番目にする	<name3> [ <name4> ] = <name6> - <val1>	<name3> [ <name4> ] = <name6> - <val1>
<name3> . <name6> . <name2> ( <name5> , <name4> )	<name3> . <name6> . <name2> ( <name5> , <name4> )	<name3> . <name6> . <name2> ( <name5> , <name4> )
<name4> の上位 <val2> 個の出現頻度順の列を <name6> とする	<name6> = <name4> . most_common ( <val2> )	<name6> = <name4> . most_common ( <val2> )
<name6> . <name4> . <name5> ( <name1> ) を os . <name3> とする	<name3> = <name6> . <name4> . <name5> ( <name1> )	<name3> = <name6> . <name4> . <name5> ( <name1> )
<name6> の <name5> を <name6> の <name2> にする	<name6> . <name2> = <name6> . <name5>	<name3> . <name2> = <name6> . <name5>
<name3> を <val6> で割った商を <name4> の <val6> に <name5> を掛けた値に <val1> を加えた値番目を <name2> の <val6> * <name5> に <val1> を加えた値番目を <name4> の <val6> に <name5> を掛けた値番目とするとするとするを <name2> の <val6> に <name5> を掛けた値番目にする	<name2> [ <val6> * <name5> ] = <name4> [ <val6> * <name5> ] = <name2> [ <val6> * <name5> + <val1> ] = <name4> [ <val6> * <name5> + <val1> ] = <name3> // <val6>	<name5> = <name2> [ <val6> * <name5> ] = <name4> [ <val6> * <name5> ] = <name2> [ <val6> * <name5> + <val1> ] = <name4> [ <val6> * <name5> + <val1> ] = <name3> // <val6>
<name1> ( <name4> , <name3> + <val5> , <name2> )	<name1> ( <name4> , <name3> + <val5> , <name2> )	<name4> ( <name4> , <name3> + <val5> , <name2> )
<name6> . <name4> ( ) を返す	return <name6> . <name4> ( )	yield <name6> . <name4> ( )
<name1> . <name3> ( <name6> ) を <name6> とする	<name6> = <name1> . <name3> ( <name6> )	<name6> = <name1> . <name3> ( <name6> )
NEGATIVE CYCLE を出力するプログラムを正常終了する	print ( 'NEGATIVE CYCLE' ) exit ( )	print ( exit )
0 から <name4> 未満までの数列の各要素を <name2> とし、 <val5> の浮動小数点数の列を <name3> とする	<name3> = [ float ( <val5> ) for <name2> in range ( <name4> ) ]	<name3> = [ float ( <val5> ) for <name2> in range ( <name4> ) ]
( <val5> 、 <val2> 、 <val4> 、 <val6> ) からなる列の各要素を <name3> とし、 <name4> の <name6> の <name1> 番目から <name3> を引いた値番目の列が全てが真のとき、	if all ( [ <name4> [ <name6> [ <name1> ] - <name3> ] for <name3> in [ <val5> , <val2> , <val4> , <val6> ] ] ) :	for <name3> in all ( [ <name4> [ <name6> ] - <name1> [ <name3> ] ] for <name3> in [ <val5> , <val2> , <val4> , <val6> ] ] ) :
<name6> の <name5> 番目が <name1> より小さいとき、	if <name6> [ <name5> ] < <name1> :	: if <name6> [ <name5> ] < <name1> :
<name1> が <val3> より小さくまたは <name1> を <val6> で割った余りが <val5> と等しいとき、	if <name1> < <val3> or <name1> % <val6> == <val5> :	list ( <name1> < <val3> or <name1> % <val6> == <val5> ) :
<name5> の末尾に ( <name3> 、 <name6> ) の組を追加する	<name5> . append ( ( <name3> , <name6> ) )	<name5> . append ( ( <name3> , <name6> ) )
<name5> のキーと値の集まりを順に <name2> 、 <name4> として、繰り返す	for <name2> , <name4> in <name5> . items ( ) :	. for <name2> , <name4> in <name5> . items ( ) :
<name2> の <name5> の <val1> 番目番目のとき、	if <name2> [ <name5> [ <val1> ] ] :	list if <name2> [ <name5> [ <val1> ] ] :
( 、つまり未定値 ) からなる列に 0 から <name6> 未満までの数列の各要素を <name3> とし、 <name5> から読み込んだ一行の整数値の列を加えた値を <name4> とする	<name4> = [ None ] + [ int ( <name5> . readline ( ) ) for <name3> in range ( <name6> ) ]	<name4> = [ None ] + [ int ( <name5> . readline ( ) ) for <name3> in range ( <name6> ) ]
<name4> が <name3> の長さより小さくかつ <name3> の <name4> 番目が <name3> の <name1> 番目より大きい間、次を繰り返す	while <name4> < len ( <name3> ) and <name3> [ <name4> ] > <name3> [ <name1> ] :	del <name4> < len ( <name3> ) and <name3> [ <name4> ] > <name3> [ <name1> ] :
<name6> 、 <name4> に <val2> を加えた値を出力する	print ( <name6> , <name4> + <val2> )	print ( <name6> , <name4> + <val2> )
<val3> を <name6> の <name4> から <val2> を引いた値番目にする	<name6> [ <name4> - <val2> ] = <val3>	<name1> [ <name4> - <val2> ] = <val3>
入力された文字列を空白で分割した字句列の各要素に <name1> の <name6> を適用した列を展開し、それぞれ <name5> 、 <name4> とする	<name5> , <name4> = map ( <name1> . <name6> , input ( ) . split ( ) )	<name5> , <name4> = map ( <name1> . <name6> , input ( ) . split ( ) )
<name3> を <name6> に <name5> を掛けた値だけ増加させる	<name3> += <name6> * <name5>	( <name3> += <name6> * <name5> )
<name6> のコピーされた列を <name2> の <name6> にする	<name2> . <name6> = <name6> [ : ]	( <name2> . <name6> = <name6> [ : ] )
<name2> と <val3> の論理積を <name1> とする <name2> と <val5> の論理積が <val4> より大きいかどうかに [ MASK ] を加えた値を <name6> とする <name2> と <val2> の論理積が <val4> より大きいかどうかに [ MASK ] を加えた値を <name1> とする	<name1> = <name2> & <val3> <name6> = + ( ( <name2> & <val5> ) > <val4> ) <name1> = + ( ( <name2> & <val2> ) > <val4> )	<name1> = <name2> & <val3> <name6> = + ( ( <name2> & <val5> ) > <val4> ) <name1> = + ( ( <name2> & <val2> ) > <val4> )
<name4> の <name5> に <name2> に <name6> を掛けた値を加えた値番目の末尾に ( <name3> に <name2> に <name6> を掛けた値を加えた値、 <name1> ) の組を追加する	<name4> [ <name5> + <name2> * <name6> ] . append ( ( <name3> + <name2> * <name6> , <name1> ) )	<name2> [ <name5> + <name2> * <name6> ] . append ( ( <name3> + <name2> * <name6> , <name1> ) )
<name6> のとき <val4> 、そうでなければ <val2> を出力する	print ( <val4> if <name6> else <val2> )	print ( <val4> if <name6> else <val2> )
<name4> の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name1> とする <name6> を <val2> だけ減少させる <name3> を <val2> だけ減少させる	<name3> , <name6> , <name1> = map ( int , <name4> ) <name6> -= <val2> <name3> -= <val2>	<name1> , <name3> , <name6> , <name1> = map ( int , <name4> ) <name6> -= <val2> <name3> -= <val2>
<name6> の <name1> 番目を <name5> とする	<name5> = <name6> [ <name1> ]	<name2> <name5> = <name6> [ <name1> ]
<name4> から <name5> を引いた値の絶対値を返す	return abs ( <name4> - <name5> )	self return abs ( <name4> - <name5> )
0 から <name2> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name6> とする	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name5> in range ( <name2> ) ]
改行せずに <val2> を書式として <name5> で整形した文字列を出力する	print ( <val2> . format ( <name5> ) , end = '' )	end = <val2> . format ( <name5> ) , end = '' )
<name6> ( <name5> , <name3> ) を <name1> とする	<name1> = <name6> ( <name5> , <name3> )	<name1> = <name6> ( <name5> , <name3> )
<name3> の <name6> の <name2> と <name2> に <val1> を加えた値の論理和番目を <name3> の <name6> の <name2> 番目だけ増加させる	<name3> . <name6> [ <name2> | ( <name2> + <val1> ) ] += <name3> . <name6> [ <name2> ]	<name1> . <name6> [ <name2> | ( <name2> + <val1> ) ] += <name3> . <name6> [ <name2> ]
<name4> の <name5> を <name4> の <name6> にする	<name4> . <name6> = <name4> . <name5>	<name2> . <name6> = <name4> . <name5>
<name1> の長さが <val5> より大きいとき <name1> の -2 番目、そうでなければ -1 を <name4> とする	<name4> = <name1> [ - 2 ] if len ( <name1> ) > <val5> else - <val5>	<name4> = <name1> [ - 2 ] if len ( <name1> ) > <val5> else - <val5>
<name6> の各要素を <name5> とし、 <name5> の整数値の列の総和を出力する	print ( sum ( [ int ( <name5> ) for <name5> in <name6> ] ) )	print ( sum ( [ int ( <name5> ) for <name5> in <name6> ] ) )
( ( <name5> 、 <val3> 、 <val3> ) の組 ) からなる列の両端キューを <name1> とする	<name1> = deque ( [ ( <name5> , <val3> , <val3> ) ] )	<name1> = deque ( [ ( <name5> , <val3> , <val3> ) ] )
<name4> を <name1> の <name2> の <name6> 番目にする	<name1> . <name2> [ <name6> ] = <name4>	( <name1> . <name2> [ <name6> ] = <name4> )
0 から <name2> から <val6> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> - <val6> ) :	) : in range ( <name2> - <val6> ) :
( ( <name5> , <val6> ) 、 ( ( <name2> から 1 を引いた値、 <name1> から 1 を引いた値、 <name4> から 1 を引いた値、 <name3> から 1 を引いた値 ) の組 , <val6> ) ) からなる辞書を <name3> とする	<name3> = { <name5> : <val6> , ( <name2> -1 , <name1> -1 , <name4> -1 , <name3> -1 ) : <val6> }	<name3> = { <name5> : <val6> , ( <name2> - <val6> , <name1> - <val6> , <name4> - <val6> , <name3> - <val6> ) : <val6> }
<name5> が <val1> より大きい間、次を繰り返す	while ( <name5> > <val1> ) :	del <name5> > <val1> :
<name5> が <name6> 以下のとき、	if ( <name5> <= <name6> ) :	list ( <name5> <= <name6> ) :
( <name4> から <name2> を引いた値、 <name3> から <name6> を引いた値 ) からなる列を <name5> とする	<name5> = [ <name4> - <name2> , <name3> - <name6> ]	<name5> = [ <name4> - <name2> , <name3> - <name6> ]
\ <name1> ( <val6> % <name2> [ <name4> -1 ] ) \	\ <name1> ( <val6> % <name2> [ <name4> - 1 ] ) \	% <name1> ( <val6> % <name2> [ <name4> - 1 ] ) \
<name1> の <name2> 番目、 <name1> の <name3> 番目の最大値を <name1> の <name2> 番目にする	<name1> [ <name2> ] = max ( <name1> [ <name2> ] , <name1> [ <name3> ] )	dict [ <name2> ] = max ( <name1> [ <name2> ] , <name1> [ <name3> ] )
<name6> ( ) . <name1> ( <name5> . <name4> , <name5> . <name3> )	<name6> ( ) . <name1> ( <name5> . <name4> , <name5> . <name3> )	set ( <name6> ( ) . <name1> ( <name5> . <name4> , <name5> . <name3> ) )
0 から <name2> の <name1> に <val6> を加えた値未満までの数列を反転した列を順に <name5> として、繰り返す	for <name5> in reversed ( range ( <name2> . <name1> + <val6> ) ) :	for <name5> in reversed ( range ( <name2> . <name1> + <val6> ) ) :
<name3> の <name6> の <name2> 番目を順に <name5> として、繰り返す	for <name5> in <name3> . <name6> [ <name2> ] :	for <name5> in <name3> . <name6> [ <name2> ] :
<name5> . <name6> ( <name2> , <name4> )	<name5> . <name6> ( <name2> , <name4> )	( <name5> . <name6> ( <name2> , <name4> ) )
( <name4> に <val1> を加えた値 ) からなる列の <val2> 回分の列を <name5> とする	<name5> = [ <name4> + <val1> ] * <val2>	<name5> = [ <name4> + <val1> ] * <val2>
<name3> が -1 と等しくない間、次を繰り返す	while <name3> != - 1 :	del <name3> != - 1 :
<name2> の <name1> から <val6> を引いた値番目、 <name2> の <name1> から <val5> を引いた値番目を <name3> 、 <name4> とする	<name3> , <name4> = <name2> [ <name1> - <val6> ] , <name2> [ <name1> - <val5> ]	<name3> , <name4> = <name2> [ <name1> - <val6> ] , <name2> [ <name1> - <val5> ]
<name2> の先頭の <name6> 番目を <name4> の <name6> 番目の <val3> 番目にする	<name4> [ <name6> ] [ <val3> ] = <name2> [ <val3> ] [ <name6> ]	<name4> [ <name6> ] [ <val3> ] = <name2> [ <val3> ] [ <name6> ]
<name1> ( <name6> , <name4> , <name5> [ <val3> ] )	<name1> ( <name6> , <name4> , <name5> [ <val3> ] )	<name4> ( <name6> , <name4> , <name5> [ <val3> ] )
<name1> の <name2> 番目の末尾に ( <name4> 、 <val5> ) の組を追加する	<name1> [ <name2> ] . append ( ( <name4> , <val5> ) )	<name1> [ <name2> ] . append ( ( <name4> , <val5> ) )
<val3> が <name2> の <name4> 番目に含まれるとき、	if <val3> in <name2> [ <name4> ] :	list if <val3> in <name2> [ <name4> ] :
<name3> の <name5> から <val1> を引いた値番目を出力する	print ( <name3> [ <name5> - <val1> ] )	print ( <name3> [ <name5> - <val1> ] )
<name3> ( <name5> , <name2> ) の絶対値を <name5> の絶対値で割った値を <name1> とする	<name1> = abs ( <name3> ( <name5> , <name2> ) ) / abs ( <name5> )	\ <name1> = abs ( <name3> ( <name5> , <name2> ) ) / abs ( <name5> )
入力された文字列の両端から空白改行を取り除いた文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> とする	<name1> , <name4> = map ( int , input ( ) . strip ( ) . split ( ) )	<name4> = map ( int , input ( ) . strip ( ) . split ( ) )
<name1> が <name6> の長さより小さいとき、	if <name1> < len ( <name6> ) :	while <name1> < len ( <name6> ) :
<name4> 、 <name1> から <name3> を引いた値を <name6> で割った商の最大値を <name4> とする	<name4> = max ( <name4> , ( <name1> - <name3> ) // <name6> )	<name4> = max ( <name4> , ( <name1> - <name3> ) // <name6> )
os . <name6> の末尾に <val1> を追加する	<name6> . append ( <val1> )	<name3> . append ( <val1> )
<name6> に <name2> の <name1> 番目の <name4> 番目に <name5> の <name4> 番目の <name3> 番目を掛けた値を加えた値を <name6> とする	<name6> = <name6> + <name2> [ <name1> ] [ <name4> ] * <name5> [ <name4> ] [ <name3> ]	<name4> = <name6> + <name2> [ <name1> ] [ <name4> ] * <name5> [ <name4> ] [ <name3> ]
0 から <name4> 未満までの数列の各要素を <name1> とし、 <name1> の列を <name5> の <name3> にする	<name5> . <name3> = [ <name1> for <name1> in range ( <name4> ) ]	<name1> . <name3> = [ <name1> for <name1> in range ( <name4> ) ]
0 から <name3> の整数値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( int ( <name3> ) ) :	) : for <name6> in range ( int ( <name3> ) ) :
<name1> の各要素を <name5> とし、 <name5> が <val2> と等しくないときの <name5> の列を <name6> とする	<name6> = [ <name5> for <name5> in <name1> if <name5> != <val2> ]	<name6> = [ <name5> for <name5> in <name1> if <name5> != <val2> ]
\ <name1> ( <val6> % ( <name4> , <name2> ) ) \	\ <name1> ( <val6> % ( <name4> , <name2> ) ) \	for <name1> ( <val6> % ( <name4> , <name2> ) ) \
<name6> ( <name1> ) の集合を <name2> とする	<name2> = set ( <name6> ( <name1> ) )	<name2> = set ( <name6> ( <name1> ) )
真を <name6> の <name1> に <val5> を加えた値番目の <name4> 番目にする	<name6> [ <name1> + <val5> ] [ <name4> ] = True	<name4> [ <name6> [ <name1> + <val5> ] [ <name4> ] = True
<name2> に <name4> を掛けた値を <name6> とする	<name6> = <name2> * <name4>	( <name6> = <name2> * <name4> )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name2> 、 <name5> 、 <name6> とする	<name2> , <name5> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name2> , <name5> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name2> . <name4> ( <name5> [ <val6> ] )	<name2> . <name4> ( <name5> [ <val6> ] )	<name4> . <name4> ( <name5> [ <val6> ] )
<name5> の <name1> 番目の <name3> 番目を <name2> の <name4> の <name1> 番目の <name6> 番目に <name5> の <name4> の <name6> 番目の <name3> 番目を掛けた値だけ増加させる	<name5> [ <name1> ] [ <name3> ] += <name2> . <name4> [ <name1> ] [ <name6> ] * <name5> . <name4> [ <name6> ] [ <name3> ]	<name4> [ <name1> ] [ <name3> ] += <name2> . <name4> [ <name1> ] [ <name6> ] * <name5> . <name4> [ <name6> ] [ <name3> ]
<name2> の先頭の <val5> 番目を出力する	print ( <name2> [ 0 ] [ <val5> ] )	print ( <name2> [ 0 ] [ <val5> ] )
<name5> の <name4> の <name2> 番目を <name2> とする	<name2> = <name5> . <name4> [ <name2> ]	( <name2> = <name5> . <name4> [ <name2> ] )
<name4> の末尾に <name6> に <name1> から <name2> を引いた値を <name3> で割った値を加えた値を追加する	<name4> . append ( <name6> + ( <name1> - <name2> ) / <name3> )	<name4> . append ( <name6> + ( <name1> - <name2> ) / <name3> )
<name3> ( <name1> . <name4> . <name5> + <name2> * <name1> . <name5> , <name1> . <name4> . <name6> + <name2> * <name1> . <name6> ) を返す	return <name3> ( <name1> . <name4> . <name5> + <name2> * <name1> . <name5> , <name1> . <name4> . <name6> + <name2> * <name1> . <name6> )	x return <name3> ( <name1> . <name4> . <name5> + <name2> * <name1> . <name5> , <name1> . <name4> . <name6> + <name2> * <name1> . <name6> )
<val2> に <name1> を掛けた値から <val2> を引いた値を返す	return <val2> * <name1> - <val2>	self = <val2> * <name1> - <val2>
<name6> 、 <name1> 、 <name2> 、 <name5> において正規表現 <name4> に番号付した組の列の各要素を <name5> 、 <name2> とし、 <name3> が <name5> と等しくないときの <name2> の列の組が最初にマッチする位置に <name4> を <name3> で割った値を加えた値を <name1> とする	<name1> = search ( tuple ( [ <name2> for <name5> , <name2> in enumerate ( <name4> ) if <name3> != <name5> ] ) , <name6> , <name1> , <name2> , <name5> ) + <name4> / <name3>	<name1> = [ tuple ( [ <name2> for <name5> , <name2> in enumerate ( <name4> ) if <name3> != <name5> ] ) , <name6> , <name1> , <name2> , <name5> ) + <name4> / <name3>
<name5> の <name2> に対応する値、もし存在しなければ <val6> を <name1> とする	<name1> = <name5> . <name2> . get ( <val6> )	<name1> = <name5> . <name2> . get ( <val6> )
<name5> に対応する値、もし存在しなければ <name6> 、 <val1> に <name4> を加えた値を <name5> の <name6> 番目にする	<name5> [ <name6> ] = <name5> . get ( <name6> , <val1> ) + <name4>	) <name5> [ <name6> ] = <name5> . get ( <name6> , <val1> ) + <name4>
<name6> ( <name2> , <name4> = -1 , <name3> = <name5> , <name1> = <val6> )	<name6> ( <name2> , <name4> = - 1 , <name3> = <name5> , <name1> = <val6> )	<name2> ( <name2> , <name4> = - <val6> ] , <name3> = <name5> , <name1> = <val6> )
( <val4> ) からなる列の <name2> の長さに <val1> を加えた値回分の列を <name5> の <name6> にする	<name5> . <name6> = [ <val4> ] * ( len ( <name2> ) + <val1> )	) <name5> . <name6> = [ <val4> ] * ( len ( <name2> ) + <val1> )
( <name6> の <name4> ) からなる列の <val2> に <name6> の <name3> を掛けた値から <val1> を引いた値回分の列を <name6> の <name5> にする	<name6> . <name5> = [ <name6> . <name4> ] * ( <val2> * <name6> . <name3> - <val1> )	<name6> . <name5> = [ <name6> . <name4> ] * ( <val2> * <name6> . <name3> - <val1> )
<name2> の <val1> 番目を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <name2> [ <val1> ]	( <name6> [ <val5> ] = <name2> [ <val1> ] )
<name1> を <name6> の <name2> の <name4> 番目にする	<name6> . <name2> [ <name4> ] = <name1>	( <name6> . <name2> [ <name4> ] = <name1> )
0 から <val1> 未満までの数列の各要素を <name5> とし、 <name5> の列を <name4> とする	<name4> = [ <name5> for <name5> in range ( <val1> ) ]	<name4> = [ <name5> for <name5> in range ( <val1> ) ]
( <name4> ) からなる列を追加して <name5> を拡張する	<name5> . extend ( [ <name4> ] )	<name5> . extend ( [ <name4> ] )
<name1> の <name6> 番目を <name4> だけ増加させる	<name1> [ <name6> ] += <name4>	<name4> [ <name6> ] += <name4>
<val3> を <name5> とする	<name5> = <val3>	( <name5> = <val3> )
<val3> に <name2> を掛けた値を返す	return <val3> * <name2>	yield <val3> * <name2>
<name2> に <name2> を加えた値を <name2> とする	<name2> = <name2> + <name2>	input = <name2> + <name2>
<name3> 、 <name4> に <name5> の <name6> から <val1> を引いた値番目を加えた値の最大値を <name3> とする	<name3> = max ( <name3> , <name4> + <name5> [ <name6> - <val1> ] )	<name3> = max ( <name3> , <name4> + <name5> [ <name6> - <val1> ] )
<name3> ( <name4> , <name5> + ( <name1> - <name2> ) / <val6> ) を <name6> とする	<name6> = <name3> ( <name4> , <name5> + ( <name1> - <name2> ) / <val6> )	<val6> = <name3> ( <name4> , <name5> + ( <name1> - <name2> ) / <val6> )
入力された文字列を <val5> で分割した字句列を <name4> とする	<name4> = input ( ) . split ( <val5> )	<name4> = input ( ) . split ( <val5> )
<name5> ( <name1> . <name2> ) を返す	return <name5> ( <name1> . <name2> )	self return <name5> ( <name1> . <name2> )
<name5> の <name1> の <name4> を <name5> の <name1> の <name3> の <name4> にする	<name5> . <name1> . <name3> . <name4> = <name5> . <name1> . <name4>	<name1> . <name3> . <name4> = <name5> . <name1> . <name4>
<name4> の <name2> 番目を展開し、それぞれ <name5> 、 <name3> とする	<name5> , <name3> = <name4> [ <name2> ]	<name2> , <name3> = <name4> [ <name2> ]
<name3> の先頭、 <name3> の <val2> 番目、 <name3> の <val5> 番目、 <name3> の <val4> 番目、 <name3> の <val6> 番目、 <name3> の <val1> 番目を <name3> の先頭、 <name3> の <val4> 番目、 <name3> の <val2> 番目、 <name3> の <val6> 番目、 <name3> の <val5> 番目、 <name3> の <val1> 番目とする	<name3> [ 0 ] , <name3> [ <val4> ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val5> ] , <name3> [ <val1> ] = <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val5> ] , <name3> [ <val4> ] , <name3> [ <val6> ] , <name3> [ <val1> ]	<name4> [ 0 ] , <name3> [ <val4> ] , <name3> [ <val2> ] , <name3> [ <val6> ] , <name3> [ <val5> ] , <name3> [ <val1> ] = <name3> [ 0 ] , <name3> [ <val2> ] , <name3> [ <val5> ] , <name3> [ <val4> ] , <name3> [ <val6> ] , <name3> [ <val1> ]
<name6> を <name2> の <name1> 番目にする	<name2> [ <name1> ] = <name6>	( <name2> [ <name1> ] = <name6> )
<name2> . <name1> ( ) でないとき、	if not <name2> . <name1> ( ) :	list ( <name2> . <name1> ( ) ) :
<name5> ( ) を <name1> とする	<name1> = <name5> ( )	<name1> = <name5> ( )
<name3> の先頭を取り出した値を一旦、返す	yield <name3> . pop ( )	yield <name3> . pop ( )
( <val2> 、 <val2> ) からなる列を <name6> とする	<name6> = [ <val2> , <val2> ]	<name6> = [ <val2> , <val2> ]
<name2> ( <name5> , ( <name3> + <name1> , <name4> ) )	<name2> ( <name5> , ( <name3> + <name1> , <name4> ) )	<name2> ( <name5> , ( <name3> + <name1> , <name4> ) )
<val3> を開始番号として <name6> の先頭を除いた部分列に番号付した組の列の各要素を <name5> 、 <name4> とし、 <name4> の <name5> 番目の各要素を <name5> とし、 <name4> + <name5> [ <val3> ] に <name6> [ <name5> [ <val1> ] ] を加えた値を <val2> で割った値の列の最大値の列を <name2> とする	<name2> = [ max ( [ ( <name4> + <name5> [ <val3> ] + <name6> [ <name5> [ <val1> ] ] ) / <val2> for <name5> in <name4> [ <name5> ] ] ) for <name5> , <name4> in enumerate ( <name6> [ <val3> : ] , start = <val3> ) ]	<name4> = max ( [ ( <name4> [ <name5> + [ <name5> ] [ <val3> ] + <name6> [ <name5> [ <val1> ] ] ) / <val2> for <name5> , <name4> in enumerate ( <name4> [ <name5> [ <val1> ] ] ) ] , start = <val3> )
<name6> の長さに <val3> を加えた値を <name5> とする	<name5> = len ( <name6> ) + <val3>	<val1> <name5> = len ( <name6> ) + <val3>
<name3> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name2> 、 <name5> とする	<name6> , <name2> , <name5> = map ( int , <name3> ( ) . split ( ) )	<name3> , <name2> , <name5> = map ( int , <name3> ( ) . split ( ) )
<name3> の先頭の整数値、 <name3> の <val1> 番目の整数値、 <name3> の <val2> 番目の整数値を <name5> 、 <name6> 、 <name4> とする	<name5> , <name6> , <name4> = int ( <name3> [ 0 ] ) , int ( <name3> [ <val1> ] ) , int ( <name3> [ <val2> ] )	<name2> , <name6> , <name4> = int ( <name3> [ 0 ] ) , int ( <name3> [ <val1> ] ) , int ( <name3> [ <val2> ] )
<name6> から <val5> を引いた値から <name2> の逆順の <val5> と等しい要素の最初の位置を引いた値、 <name6> に <val5> を加えた値に <name3> の <val5> と等しい要素の最初の位置を加えた値を出力する	print ( ( <name6> - <val5> - <name2> [ : : - <val5> ] . index ( <val5> ) ) , ( <name6> + <val5> + <name3> . index ( <val5> ) ) )	( <name6> - <val5> - <name2> [ : - <val5> ] . index ( <val5> ) , <name6> + <val5> + <name3> . index ( <val5> ) )
<name5> の <name3> から読み込んだ行の列を <name1> とする	<name1> = <name5> . <name3> . readlines ( )	<name1> = <name5> . <name3> . readlines ( )
<name3> の <name2> から <name5> を引いた値から <name2> から <name5> を引いた値に <val4> を加えた値までの部分列を出力する	print ( <name3> [ <name2> - <name5> : <name2> - <name5> + <val4> ] )	end = <name3> [ <name2> - <name5> : <name2> - <name5> + <val4> ] )
<name4> が <val5> と等しいかどうかを返す	return <name4> == <val5>	yield <name4> == <val5>
<name4> の <name4> の最大値と等しい要素の最初の位置に <val1> を加えた値を出力する	print ( <name4> . index ( max ( <name4> ) ) + <val1> )	print ( <name4> . index ( max ( <name4> ) ) + <val1> )
<name1> ( <name2> ) 、 <name1> ( <name3> ) を <name4> 、 <name5> とする	<name4> , <name5> = <name1> ( <name2> ) , <name1> ( <name3> )	<name4> , <name5> = <name1> ( <name2> ) , <name1> ( <name3> )
<val1> を間に入れて <name4> を連結した文字列を <name5> とする	<name5> = <val1> . join ( <name4> )	else = <val1> . join ( <name4> )
( <name3> ) からなる列を <name2> とする	<name2> = [ <name3> ]	( <name2> = [ <name3> ] )
<name6> . <name5> ( <name3> . <name2> ) を返す	return <name6> . <name5> ( <name3> . <name2> )	self return <name6> . <name5> ( <name3> . <name2> )
<name1> の <val2> 番目、 <name1> の <val3> 番目、 <name1> の <val4> 番目、 <name1> の先頭を <name1> の先頭、 <name1> の <val2> 番目、 <name1> の <val3> 番目、 <name1> の <val4> 番目とする	<name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] = <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ 0 ]	<name1> [ 0 ] , <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] = <name1> [ <val2> ] , <name1> [ <val3> ] , <name1> [ <val4> ] , <name1> [ 0 ]
<name3> の <name2> 番目が <val6> と等しくかつ <name2> が <name5> より小さいとき、	if <name3> [ <name2> ] == <val6> and <name2> < <name5> :	continue <name3> [ <name2> ] == <val6> and <name2> < <name5> :
<name6> の <name1> から <val3> を引いた値番目の <name4> 番目が <name2> と等しくないとき、	if <name6> [ <name1> - <val3> ] [ <name4> ] != <name2> :	!= <name6> [ <name1> - <val3> ] [ <name4> ] != <name2> :
<name5> の <val2> 番目を <name6> の <name3> にする	<name6> . <name3> = <name5> [ <val2> ]	<name1> . <name3> = <name5> [ <val2> ]
( <val3> ) からなる列の <name6> に <val4> を加えた値回分の列を <name2> とする	<name2> = [ <val3> ] * ( <name6> + <val4> )	<name2> = [ <val3> ] * ( <name6> + <val4> )
入力された文字列を <val2> で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name5> 、 <name6> とする	<name5> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val2> ) ]	<name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( <val2> ) ]
<name2> . <name5> ( <name4> . <name3> )	<name2> . <name5> ( <name4> . <name3> )	set ( <name2> . <name5> ( <name4> . <name3> ) )
<name6> を <name3> で割った余りが <val5> と等しいとき、	if <name6> % <name3> == <val5> :	list ( <name6> % <name3> == <val5> ) :
os . <name4> の <name1> 番目の <name3> 番目を <name1> とする	<name1> = <name4> [ <name1> ] [ <name3> ]	<name1> = <name4> [ <name1> ] [ <name3> ]
( <val5> ) からなる列の <name2> に <val6> を加えた値回分の列を <name1> とする	<name1> = [ <val5> ] * ( <name2> + <val6> )	<name1> = [ <val5> ] * ( <name2> + <val6> )
<name1> 、 <name6> の要素をそれぞれ組にした列を順に <name2> 、 <name3> として、繰り返す	for <name2> , <name3> in zip ( <name1> , <name6> ) :	for <name2> , <name3> in zip ( <name1> , <name6> ) :
<name1> に <name1> を掛けた値が <name3> 以下の間、次を繰り返す	while <name1> * <name1> <= <name3> :	del ( <name1> * <name1> <= <name3> ) :
<name3> から <name2> を引いた値が <val5> 以上かつ <name6> から <name2> を引いた値が <val5> 以上かつ <name3> に <name2> を加えた値が <name4> 以下かつ <name6> に <name2> を加えた値が <name1> 以下のとき、	if <name3> - <name2> >= <val5> and <name6> - <name2> >= <val5> and <name3> + <name2> <= <name4> and <name6> + <name2> <= <name1> :	list ( <name3> - <name2> >= <val5> and <name6> - <name2> >= <val5> and <name3> + <name2> <= <name4> and <name6> + <name2> <= <name1> ) :
<name5> の <name3> 番目を順に <name6> 、 <name2> として、繰り返す	for <name6> , <name2> in <name5> [ <name3> ] :	. for <name6> , <name2> in <name5> [ <name3> ] :
<name3> を <name3> と - <name3> の論理積だけ減少させる	<name3> -= ( <name3> & - <name3> )	( <name3> -= <name3> & - <name3> )
<name6> に <val3> を掛けた値が <name5> の先頭に <name5> の <val4> 番目を加えた値に <name5> の <val1> 番目を加えた値と等しいとき、	if <name6> * <val3> == <name5> [ 0 ] + <name5> [ <val4> ] + <name5> [ <val1> ] :	if <name6> * <val3> == <name5> [ 0 ] + <name5> [ <val4> ] + <name5> [ <val1> ] :
<name3> . <name5> ( <name4> , <name2> , <name6> ) を <name1> とする	<name1> = <name3> . <name5> ( <name4> , <name2> , <name6> )	<name1> = <name3> . <name5> ( <name4> , <name2> , <name6> )
<name2> の <name6> 番目が <val5> より大きいとき、	if <name2> [ <name6> ] > <val5> :	list if <name2> [ <name6> ] > <val5> :
( ( 、つまり未定値 ) からなる列の 0 から <name4> に <val3> を加えた値未満までの数列の各要素を <name5> とし、 <name4> に <val3> を加えた値の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ None ] * [ ( <name4> + <val3> ) for <name5> in range ( <name4> + <val3> ) ] ]	<name2> = [ [ None ] * [ ( <name4> + <val3> ) for <name5> in range ( <name4> + <val3> ) ] ]
<name1> の末尾に文字コード <name3> の文字を追加する	<name1> . append ( chr ( <name3> ) )	<name1> . append ( chr ( <name3> ) )
<name1> の <name2> の <val5> 番目、 <name1> の <name2> の <val4> 番目、 <name1> の <name2> の先頭、 <name1> の <name2> の <val3> 番目を <name1> の <name2> の先頭、 <name1> の <name2> の <val5> 番目、 <name1> の <name2> の <val3> 番目、 <name1> の <name2> の <val4> 番目とする	<name1> . <name2> [ 0 ] , <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val4> ] = <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val4> ] , <name1> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ]	<name2> . <name2> [ 0 ] , <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val3> ] , <name1> . <name2> [ <val4> ] = <name1> . <name2> [ <val5> ] , <name1> . <name2> [ <val4> ] , <name1> . <name2> [ 0 ] , <name1> . <name2> [ <val3> ]
<name5> の <name1> を <val2> だけ増加させる	<name5> . <name1> += <val2>	( <name5> . <name1> += <val2> )
<name6> ( <name5> ) を <name3> とする <name6> ( <name2> ) を <name1> とする	<name3> = <name6> ( <name5> ) <name1> = <name6> ( <name2> )	<name3> = <name6> ( <name5> ) <name1> = <name6> ( <name2> )
<name5> ( <name1> . <name4> + <name3> . <name4> , <name1> . <name2> + <name3> . <name2> ) を返す	return <name5> ( <name1> . <name4> + <name3> . <name4> , <name1> . <name2> + <name3> . <name2> )	x return <name5> ( <name1> . <name4> + <name3> . <name4> , <name1> . <name2> + <name3> . <name2> )
<name3> 、 <name6> の要素をそれぞれ組にした列を順に <name5> として、繰り返す	for <name5> in zip ( <name3> , <name6> ) :	. for <name5> in zip ( <name3> , <name6> ) :
<name4> [ <name2> ] の <name5> 番目が <val1> と等しくかつ <name4> [ <name2> + <val1> ] の <name5> 番目が <val1> と等しくかつ <name4> の <name2> 番目の <name5> に <val1> を加えた値番目が <val1> と等しくかつ <name4> の <name2> に <val1> を加えた値番目の <name5> に <val1> を加えた値番目が <val1> と等しいとき、	if <name4> [ <name2> ] [ <name5> ] == <val1> and <name4> [ <name2> + <val1> ] [ <name5> ] == <val1> and <name4> [ <name2> ] [ <name5> + <val1> ] == <val1> and <name4> [ <name2> + <val1> ] [ <name5> + <val1> ] == <val1> :	for <name4> in <name4> [ <name2> ] [ <name5> ] == <val1> and <name4> [ <name2> + <val1> ] [ <name5> ] == <val1> and <name4> [ <name2> ] [ <name5> + <val1> ] == <val1> and <name4> [ <name2> + <val1> ] [ <name5> + <val1> ] == <val1> :
<name6> の <name2> に [ MASK ] を書き込むを <name3> とする	<name3> = <name6> . <name2> . <name3>	<name3> = <name6> . <name2> . <name3>
<name1> を <name4> の <name3> から <val2> を引いた値だけ増加させる	<name1> += <name4> . <name3> - <val2>	( <name1> += <name4> . <name3> - <val2> )
<name2> を <name2> に <name6> を加えた値で割った値を <name1> とする	<name1> = <name2> / ( <name2> + <name6> )	<name4> = <name2> / ( <name2> + <name6> )
( <val4> 、 <val2> ) からなる列に 0 から <name5> の <name6> の長さ未満までの数列の各要素を <name3> とし、 <name5> . <name5> ( <name3> ) かつ <name3> が <val1> 以上のときの <name3> の列を加えた値を <name5> の <name1> にする	<name5> . <name1> = [ <val4> , <val2> ] + [ <name3> for <name3> in range ( len ( <name5> . <name6> ) ) if <name5> . <name5> ( <name3> ) and <name3> >= <val1> ]	<name4> . <name1> = [ <val4> , <val2> ] + [ <name3> for <name3> in range ( len ( <name5> . <name6> ) ) if <name5> . <name5> ( <name3> ) and <val1> >= <val1> ] )
( <name2> に <name5> の先頭に <name1> を掛けた値を加えた値、 <name6> に <name5> の <val4> 番目に <name1> を掛けた値を加えた値 ) の組を返す	return ( <name2> + <name5> [ 0 ] * <name1> , <name6> + <name5> [ <val4> ] * <name1> )	yield ( <name2> + <name5> [ 0 ] * <name1> , <name6> + <name5> [ <val4> ] * <name1> )
<name1> の <val3> を取り出した値を <name2> とする	<name2> = <name1> . pop ( <val3> )	<name2> = <name1> . pop ( <val3> )
<name2> を <name3> の <name4> の <val6> 番目にする	<name3> . <name4> [ <val6> ] = <name2>	<name3> . <name4> [ <val6> ] = <name2>
<name2> の <name1> と等しい要素の最初の位置を <name6> とする	<name6> = <name2> . index ( <name1> )	<name6> = <name2> . index ( <name1> )
<name2> をパラメータとして <name2> の <val3> 乗に <name1> を加えた値を <name5> で割った余りを返す関数を <name6> とする	<name6> = lambda <name2> : ( <name2> ** <val3> + <name1> ) % <name5>	<name6> = lambda <name2> : ( <name2> ** <val3> + <name1> ) % <name5>
<name5> の <name1> の末尾に <name3> を追加する	<name5> . <name1> . append ( <name3> )	<name3> . <name1> . append ( <name3> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name6> 、 <name4> とする	<name3> , <name5> , <name6> , <name4> = map ( int , input ( ) . split ( ) )	<name5> , <name6> , <name4> = map ( int , input ( ) . split ( ) )
<name5> が <name2> 以下のとき、	if <name5> <= <name2> :	list if <name5> <= <name2> :
<name4> に <name2> を加えた値を <name5> とする <name1> に <name3> を加えた値を <name6> とする	<name5> = <name4> + <name2> <name6> = <name1> + <name3>	<name2> = <name4> + <name2> <name6> = <name1> + <name3>
<name3> を <name1> の <name4> にする	<name1> . <name4> = <name3>	not <name1> . <name4> = <name3>
<name5> を <val3> で割った余りが <val4> と等しくないとき、	if <name5> % <val3> != <val4> :	raise ( <name5> % <val3> ) != <val4> :
<name1> を <name2> に <name2> から <name5> を引いた値を掛けた値に <name2> から <name4> を引いた値を掛けた値に <name2> から <name6> を引いた値を掛けた値の <val3> 乗だけ増加させる	<name1> += ( <name2> * ( <name2> - <name5> ) * ( <name2> - <name4> ) * ( <name2> - <name6> ) ) ** <val3>	<name1> += <name2> * ( <name2> - <name5> ) * ( <name2> - <name4> ) * ( <name2> - <name6> ) ** <val3>
<name1> . <name6> ( <name4> . <name5> ) を <name4> の <name5> にする	<name4> . <name5> = <name1> . <name6> ( <name4> . <name5> )	) . <name5> = <name1> . <name6> ( <name4> . <name5> )
<name6> に <name4> を加えた値を <name1> とする	<name1> = <name6> + <name4>	<name4> = <name6> + <name4>
<name3> . <name4> ( <name6> ) を展開し、それぞれ <name1> 、 <name5> とする	<name1> , <name5> = <name3> . <name4> ( <name6> )	<name2> , <name1> , <name5> = <name3> . <name4> ( <name6> )
<name3> の <val5> 乗を <name2> とする	<name2> = <name3> ** <val5>	<name2> = <name3> ** <val5>
( <val3> 、 <val2> ) の組を <name4> とする	<name4> = ( <val3> , <val2> )	( <val3> , <val2> ) = ( <val3> , <val2> )
<name2> の <name5> の先頭を取り出した値を展開し、それぞれ <name3> 、 <name4> とする	<name3> , <name4> = <name2> . <name5> . pop ( )	<name2> , <name3> , <name4> = <name2> . <name5> . pop ( )
<name6> の <name2> 番目の <name4> 番目が <val3> と等しいとき、	if <name6> [ <name2> ] [ <name4> ] == <val3> :	[ if <name6> [ <name2> ] [ <name4> ] == <val3> :
<val5> から <name3> に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val5> , <name3> + <val5> ) :	. for <name1> in range ( <val5> , <name3> + <val5> ) :
<name1> ( <name2> . <name3> - <name2> . <name5> ) を <name4> とする	<name4> = <name1> ( <name2> . <name3> - <name2> . <name5> )	<name4> = <name1> ( <name2> . <name3> - <name2> . <name5> )
<name3> を <name6> の <name5> 番目の <name4> 番目だけ増加させる	<name3> += <name6> [ <name5> ] [ <name4> ]	( <name3> += <name6> [ <name5> ] [ <name4> ] )
入力された文字列を <val3> で分割した字句列の各要素を <name1> とし、 <name1> の整数値の列を展開し、それぞれ <name4> 、 <name6> とする	<name4> , <name6> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val3> ) ]	<name4> , <name6> = [ int ( <name1> ) for <name1> in input ( ) . split ( <val3> ) ]
<name5> の <name1> の <name4> に <val2> を加えた値番目の <name6> に <val2> を加えた値番目を <name5> の <name3> で割った余りにする	<name5> . <name1> [ <name4> + <val2> ] [ <name6> + <val2> ] % = <name5> . <name3>	<name2> . <name1> [ <name4> + <val2> ] [ <name6> + <val2> ] % = <name5> . <name3>
<name1> ( <name2> , ( <name6> [ <name3> -2 ] [ <name5> -1 ] , <name3> -1 , <name5> ) )	<name1> ( <name2> , ( <name6> [ <name3> - 2 ] [ <name5> - 1 ] , <name3> - 1 , <name5> ) )	<name5> ( <name2> , ( <name6> [ <name3> - 2 ] [ <name5> - 1 ] , <name3> - 1 , <name5> ) )
( <name5> の <val4> 番目の整数値に <val2> を掛けた値に <name5> の <val2> 番目の整数値を加えた値、 - <name6> ) からなる列を <name1> の <name5> の先頭番目にする	<name1> [ <name5> [ 0 ] ] = [ int ( <name5> [ <val4> ] ) * <val2> + int ( <name5> [ <val2> ] ) , - <name6> ]	<name1> [ <name5> [ 0 ] ] = [ int ( <name5> [ <val4> ] ) * <val2> + int ( <name5> [ <val2> ] ) , - <name6> ]
\ <name6> ( <val5> % <name1> ( <name3> . <name4> ( ) , <name2> = <val6> ) ) \	\ <name6> ( <val5> % <name1> ( <name3> . <name4> ( ) , <name2> = <val6> ) ) \	from <name6> ( <val5> % <name1> ( <name3> . <name4> ( ) , <name2> = <val6> ) ) \
<name2> ( <name6> ) を <name5> とする <name2> ( <name1> ) を <name4> とする	<name5> = <name2> ( <name6> ) <name4> = <name2> ( <name1> )	<name2> = <name2> ( <name6> ) <name4> = <name2> ( <name1> )
( ( <val2> ) からなる列の <val2> から <name3> の長さ未満までの数列の各要素を <name4> とし、 <name3> の先頭の長さの列回分の列 ) からなる列を <name5> とする	<name5> = [ [ <val2> ] * [ len ( <name3> [ <val2> ] ) for <name4> in range ( len ( <name3> ) ) ] ]	<name5> = [ [ <val2> ] * [ len ( <name3> [ <val2> ] ) for <name4> in range ( len ( <name3> ) ) ] ]
<name3> の長さが <val6> より大きいとき、	if len ( <name3> ) > <val6> :	continue len ( <name3> ) > <val6> :
<name2> 、 <name1> 、 <name4> 、 <name6> 、 <name5> はグローバル変数とする	global <name2> , <name1> , <name4> , <name6> , <name5>	insort ( <name2> , <name1> , <name4> , <name6> , <name5> )
<name2> に <val5> を掛けた値に <name4> を加えた値を出力する	print ( <name2> * <val5> + <name4> )	print ( <name2> * <val5> + <name4> )
<name6> を順に <name1> 、 <name2> として、繰り返す	for <name1> , <name2> in <name6> :	. for <name1> , <name2> in <name6> :
<name4> が <val5> より小さくかつ <name6> ( ( <name3> , <name4> ) )	<name4> < <val5> and <name6> ( ( <name3> , <name4> ) )	<name4> < <val5> and <name6> ( ( <name3> , <name4> ) )
<name4> を <name5> として <val2> を <name1> として <name6> をソートする	<name6> . sort ( <name5> = <name4> , <name1> = <val2> )	<name2> . sort ( <name1> = <name4> , <name5> = <val2> )
<val4> を <name3> の <name6> にする	<name3> . <name6> = <val4>	<name3> . <name6> = <val4>
<name6> を <val3> で分割した字句列を <name4> の <name5> 番目にする	<name4> [ <name5> ] = <name6> . split ( <val3> )	<name4> [ <name5> ] = <name6> . split ( <val3> )
<name6> の <name4> 番目を展開し、それぞれ <name5> 、 <name2> 、 <name3> とする	<name5> , <name2> , <name3> = <name6> [ <name4> ]	<name2> , <name5> , <name2> , <name3> = <name6> [ <name4> ]
<name4> ( <val1> , <val3> ) . <name5> ( <name6> )	<name4> ( <val1> , <val3> ) . <name5> ( <name6> )	( <name4> ( <val1> , <val3> ) . <name5> ( <name6> ) )
<val1> に <val5> から <name3> の長さを引いた値を掛けた値に <name3> を加えた値を <name3> とする	<name3> = <val1> * ( <val5> - len ( <name3> ) ) + <name3>	<name3> = <val1> * ( <val5> - len ( <name3> ) ) + <name3>
<name3> をソートした列の <val4> 番目を出力する	print ( sorted ( <name3> ) [ <val4> ] )	print ( sorted ( <name3> ) [ <val4> ] )
<name3> の <name5> から <val2> を引いた値番目が <val2> と等しいとき、	if <name3> [ <name5> - <val2> ] == <val2> :	continue <name3> [ <name5> - <val2> ] == <val2> :
<name3> をソートした列のリストを <name3> とする	<name3> = list ( sorted ( <name3> ) )	<name3> = list ( sorted ( <name3> ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name4> 、 <name2> 、 <name1> 、 <name3> とする	<name5> , <name4> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )	<name4> , <name2> , <name1> , <name3> = map ( int , input ( ) . split ( ) )
<name2> が ( <val3> ) からなる列と等しいとき、	if <name2> == [ <val3> ] :	: if <name2> == [ <val3> ] :
<name2> の先頭を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = <name2> [ 0 ]	( <name5> , <name1> = <name2> [ 0 ] )
<name6> の <name2> の末尾に <name1> を追加する	<name6> . <name2> . append ( <name1> )	<name1> . <name2> . append ( <name1> )
<name5> ( <name6> , <name4> ) のとき、	if <name5> ( <name6> , <name4> ) :	isinstance ( <name5> ( <name6> , <name4> ) ) :
<name3> の絶対値に <val4> を加えた値、 <name2> 、 <name1> の絶対値を出力する	print ( abs ( <name3> ) + <val4> , <name2> , abs ( <name1> ) )	print ( abs ( <name3> ) + <val4> , <name2> , abs ( <name1> ) )
<val3> を <name1> の先頭の <val2> 番目にする	<name1> [ <val2> ] [ <val2> ] = <val3>	( <name1> [ <val2> ] [ <val2> ] = <val3> )
<name4> 、 <name2> を <name5> 、 <name3> とする	<name5> , <name3> = <name4> , <name2>	<name2> , <name3> = <name4> , <name2>
<name1> の <name4> 番目から、つまり末尾までの部分列を順に <name6> として、繰り返す	for <name6> in <name1> [ <name4> : ] :	for <name6> in <name1> [ <name4> : ] :
<name2> ( <name6> . <name1> [ <val5> : ] )	<name2> ( <name6> . <name1> [ <val5> : ] )	<name2> ( <name6> . <name1> [ <val5> : ] )
<name6> の <name3> でないとき、	if not <name6> . <name3> :	for <name6> . <name3> in not <name6> . <name3> :
0 から <val4> の <name1> 乗未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <val4> ** <name1> ) :	for <name2> in range ( <val4> ** <name1> ) :
<name6> ( <name2> - <name5> , <name4> - <name5> ) を <name1> とする	<name1> = <name6> ( <name2> - <name5> , <name4> - <name5> )	<name1> = <name6> ( <name2> - <name5> , <name4> - <name5> )
<name5> を <name3> で割った余りが <val1> と等しくなくまたは <name5> を <name3> で割った商が <name6> に含まれないとき、	if <name5> % <name3> != <val1> or <name5> // <name3> not in <name6> :	or <name5> % <name3> != <val1> or <name5> // <name3> not in <name6> :
<name3> ( <name1> ( <name2> , <name6> ) / ( <name5> * <name4> ) ) を <name4> とする	<name4> = <name3> ( <name1> ( <name2> , <name6> ) / ( <name5> * <name4> ) )	<name4> = <name3> ( <name1> ( <name2> , <name6> ) / ( <name5> * <name4> ) )
<name1> の、つまり先頭から <name4> に <val6> を加えた値までの部分列に番号付した組の列を順に <name5> 、 <name3> として、繰り返す	for <name5> , <name3> in enumerate ( <name1> [ : <name4> + <val6> ] ) :	. for <name5> in enumerate ( <name1> [ 0 : <name4> + <val6> ] ) :
<name3> が <name1> 以下または <name5> が <name4> 以下のとき、	if <name3> <= <name1> or <name5> <= <name4> :	or <name3> <= <name1> or <name5> <= <name4> :
<name5> の、つまり先頭から、つまり末尾までの <val2> 間隔による部分列内の <name6> の出現回数が <val3> と等しくまたは <name5> の <val4> 番目から <val1> 番目までの <val4> 間隔による部分列内の <name6> の出現回数が <val3> と等しいとき、 <blk> <name6> を返す </blk>	if <name5> [ 0 : : <val2> ] . count ( <name6> ) == <val3> or <name5> [ <val4> : <val1> : <val4> ] . count ( <name6> ) == <val3> : <blk> return <name6> </blk>	\ return <name5> [ 0 : : <val2> ] . count ( <name6> ) == <val3> or <name5> [ <val4> : <val1> : <val4> ] . count ( <name6> ) == <val3> : <blk> return <name6> </blk>
<name1> の長さ、 <name2> の長さの最大値を <name3> とする	<name3> = max ( len ( <name1> ) , len ( <name2> ) )	<name3> = max ( len ( <name1> ) , len ( <name2> ) )
<name4> のキーと値の集まりを順に <name1> 、 <name3> として、繰り返す	for <name1> , <name3> in <name4> . items ( ) :	. for <name1> , <name3> in <name4> . items ( ) :
( <val4> ) からなる列を <name6> とする空列を <name3> とする	<name6> = [ <val4> ] <name3> = [ ]	<name2> = [ <val4> ] <name3> = [ ]
<name4> の <name1> の <name5> 番目を <name2> とする	<name2> = <name4> . <name1> [ <name5> ]	<name2> = <name4> . <name1> [ <name5> ]
-1 から <val5> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( - 1 , <val5> ) :	: for <name3> in range ( - 1 , <val5> ) :
<name1> の <name6> 番目の末尾に ( <name5> 、 <name3> ) の組を追加する	<name1> [ <name6> ] . append ( ( <name5> , <name3> ) )	<name1> [ <name6> ] . append ( ( <name5> , <name3> ) )
<name6> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = map ( int , <name6> . split ( ) )	<name3> , <name2> = map ( int , <name6> . split ( ) )
<name4> の <name6> ( <name4> , <name2> ) に <name2> を挿入する	<name4> . insert ( <name6> ( <name4> , <name2> ) , <name2> )	<name2> . insert ( <name4> , <name6> ( <name4> , <name2> ) , <name2> )
ソートされた順序を保ったまま <name4> から <name2> を引いた値を <name3> の <name1> から <name5> を引いた値番目に挿入できる最後の位置を <name6> とする	<name6> = bisect_right ( <name3> [ <name1> - <name5> ] , <name4> - <name2> )	<name4> = bisect_right ( <name3> [ <name1> - <name5> ] , <name4> - <name2> )
<name3> が <name2> より小さいとき、	if ( <name3> < <name2> ) :	if <name3> < <name2> :
<name3> に <val4> を掛けた値が <name2> より大きいとき、 <blk> <name6> を <name1> の <name3> 番目の <val4> 乗から <name1> の <name3> 番目を引いた値を <val4> で割った商だけ増加させる </blk>	if <name3> * <val4> > <name2> : <blk> <name6> += ( <name1> [ <name3> ] ** <val4> - <name1> [ <name3> ] ) // <val4> </blk>	if ( <name3> * <val4> > <name2> ) : <blk> <name6> += ( <name1> [ <name3> ] ** <val4> - <name1> [ <name3> ] ) // <val4> </blk>
<name4> の <name3> 番目の、つまり先頭から <name5> に <val1> を加えた値までの部分列を <name4> の <name3> に <val1> を加えた値番目にする	<name4> [ <name3> + <val1> ] = <name4> [ <name3> ] [ 0 : <name5> + <val1> ]	( <name4> [ <name3> + <val1> ] = <name4> [ <name3> ] [ : <name5> + <val1> ] )
<name4> が <name1> の <name5> 番目と等しいとき、	if <name4> == <name1> [ <name5> ] :	if <name4> == <name1> [ <name5> ] :
<val5> の <val6> 乗を <name1> とする	<name1> = <val5> ** <val6>	<name1> = <val5> ** <val6>
( <name6> の先頭、 <name6> の <val1> 番目 ) の組を返す	return ( <name6> [ 0 ] , <name6> [ <val1> ] )	yield ( <name6> [ 0 ] , <name6> [ <val1> ] )
<name3> の末尾に ( <name5> に <val6> を加えた値、 <name2> 、 <name4> 、 <name1> 、 <name3> ) の組を追加する	<name3> . append ( ( <name5> + <val6> , <name2> , <name4> , <name1> , <name3> ) )	<name4> . append ( ( <name5> + <val6> , <name2> , <name4> , <name1> , <name3> ) )
<name1> の <name3> を <val5> だけ増加させる	<name1> . <name3> += <val5>	<name4> . <name1> += <name3> += <val5>
<name5> . <name4> ( <name5> . <name6> ) を返す	return <name5> . <name4> ( <name5> . <name6> )	self return <name5> . <name4> ( <name5> . <name6> )
<name1> ( <val6> , <val3> ) に <name1> ( <val4> , <val5> ) を加えた値の逆順を <name2> とする	<name2> = ( <name1> ( <val6> , <val3> ) + <name1> ( <val4> , <val5> ) ) [ : : - 1 ]	input = <name1> ( <val6> , <val3> ) + <name1> ( <val4> , <val5> ) [ : : - <val6> ]
( <name1> 、 <val2> 、 <name4> ) からなる列を <name6> とするを <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name6> = [ <name1> , <val2> , <name4> ]	<name3> [ <val5> ] = <name6> = [ <name1> , <val2> , <name4> ]
<name2> の <name5> 番目を展開し、それぞれ <name1> 、 <name6> とする	<name1> , <name6> = <name2> [ <name5> ]	( <name1> , <name6> = <name2> [ <name5> ] )
<name6> の <name5> から <val2> を引いた値番目を <name6> の <name5> 番目だけ増加させる	<name6> [ <name5> - <val2> ] += <name6> [ <name5> ]	<name6> [ <name5> - <val2> ] += <name6> [ <name5> ]
<name5> の <name3> 番目を <name5> の <name2> 番目だけ増加させる	<name5> [ <name3> ] += <name5> [ <name2> ]	<name2> [ <name3> ] += <name5> [ <name2> ]
<name2> の <name6> 番目の先頭、 <name2> の <name6> 番目の <val4> 番目を出力する	print ( <name2> [ <name6> ] [ 0 ] , <name2> [ <name6> ] [ <val4> ] )	print ( <name2> [ <name6> ] [ 0 ] , <name2> [ <name6> ] [ <val4> ] )
入力された文字列を <val6> で分割した字句列を展開し、それぞれ <name1> 、 <name2> 、 <name4> 、 <name3> とする	<name1> , <name2> , <name4> , <name3> = input ( ) . split ( <val6> )	<name1> , <name2> , <name4> , <name3> = input ( ) . split ( <val6> )
( ( <name6> , <name2> の各要素を <name6> とし、 ( <name5> ( <val1> , <val3> ) の各要素を <name4> とし、 <name4> の列 ) の集合の列 ) ) からなる辞書を <name2> とする	<name2> = { <name6> : [ { [ <name4> for <name4> in <name5> ( <val1> , <val3> ) ] } for <name6> in <name2> ] }	<name6> = { <name6> : [ { [ <name4> for <name4> in [ <name5> : <val1> ] for <name4> in <name2> ] }
0 から <name2> 未満までの数列の各要素を <name1> とし、 <val5> を間に入れて <name3> の <name1> 番目の各要素に整数を適用した列を連結した文字列の列を <name3> とする	<name3> = [ <val5> . join ( map ( str , <name3> [ <name1> ] ) ) for <name1> in range ( <name2> ) ]	<name1> = [ <val5> . join ( map ( str , <name3> [ <name1> ] ) ) for <name1> in range ( <name2> ) ]
<name4> . <name5> ( <name6> , <name1> ) を <name3> とする	<name3> = <name4> . <name5> ( <name6> , <name1> )	<name3> = <name4> . <name5> ( <name6> , <name1> )
入力された文字列を <val1> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = map ( int , input ( ) . split ( <val1> ) )	<name6> , <name3> = map ( int , input ( ) . split ( <val1> ) )
<name4> に <name6> を加えた値を <name2> の <name5> 番目の <name3> 番目にする	<name2> [ <name5> ] [ <name3> ] = <name4> + <name6>	<name6> [ <name5> ] [ <name3> ] = <name4> + <name6>
<name4> を <name5> で割った余りが <val1> と等しいとき、	if <name4> % <name5> == <val1> :	continue % <name4> % <name5> == <val1> :
<val2> から <name4> を <val5> で割った商に <val2> を加えた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , <name4> // <val5> + <val2> ) :	continue for <name6> in range ( <val2> , <name4> // <val5> + <val2> ) :
<name6> . <name2> . <name3> . <name5> ( ) でなくかつ <name6> . <name2> . <name4> . <name5> ( ) でないとき、	if not <name6> . <name2> . <name3> . <name5> ( ) and not <name6> . <name2> . <name4> . <name5> ( ) :	list ( not <name6> . <name2> . <name3> . <name5> ( ) ) and not <name6> . <name2> . <name4> . <name5> ( ) :
<name4> の <name3> 番目を <val1> だけ増加させる	<name4> [ <name3> ] += <val1>	<name2> [ <name3> ] += <val1>
0 から <val4> 未満までの数列の各要素を <name3> とし、 ( <val2> ) からなる列の列を <name5> とする	<name5> = [ [ <val2> ] for <name3> in range ( <val4> ) ]	<name5> = [ [ <val2> ] for <name3> in range ( <val4> ) ]
<val6> を <name4> の <val2> 番目とするを <name4> の先頭にする	<name4> [ <val6> ] = <name4> [ <val2> ] = <val6>	<name3> [ 0 ] = <name4> [ <val2> ] = <val6>
<name5> [ <name4> . <name6> ] . <name1> ( ) に <val3> を加えた値を <name2> とする	<name2> = <name5> [ <name4> . <name6> ] . <name1> ( ) + <val3>	input = <name5> [ <name4> . <name6> ] . <name1> ( ) + <val3>
<val3> から <name1> に <val2> を加えた値未満までの数列の各要素を <name6> とし、 <val3> から <name1> に <val2> を加えた値未満までの数列の各要素を <name5> とし、 <val3> の列の列を <name6> の <name4> にする	<name6> . <name4> = [ [ <val3> for <name5> in range ( <name1> + <val2> ) ] for <name6> in range ( <name1> + <val2> ) ]	<name6> . <name4> = [ [ <val3> for <name5> in range ( <name1> + <val2> ) ] for <name6> in range ( <name1> + <val2> ) ]
<name1> の <name3> 番目の <val6> 番目を <name4> とする	<name4> = <name1> [ <name3> ] [ <val6> ]	<name4> = <name1> [ <name3> ] [ <val6> ]
<name5> の <name1> を順に <name3> として、繰り返す	for <name3> in <name5> . <name1> :	. for <name3> in <name5> . <name1> :
<name3> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name2> とする	<name1> , <name4> , <name2> = map ( int , <name3> . split ( ) )	<name4> , <name2> = map ( int , <name3> . split ( ) )
<name5> 、 <name6> ( <name2> , <name4> , <name3> + <name1> ( <name5> ) ) の最小値を <name5> とする	<name5> = min ( <name5> , <name6> ( <name2> , <name4> , <name3> + <name1> ( <name5> ) ) )	else = min ( <name5> , <name6> ( <name2> , <name4> , <name3> + <name1> ( <name5> ) ) )
<name6> の先頭を取り出した値を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name6> . pop ( )	<name6> , <name3> , <name2> = <name6> . pop ( )
<name3> . <name6> ( <name4> , <name2> + <name5> + <val1> , <val1> , <val3> )	<name3> . <name6> ( <name4> , <name2> + <name5> + <val1> , <val1> , <val3> )	<name4> . <name6> ( <name4> , <name2> + <name5> + <val1> , <val1> , <val3> )
( <val2> ) からなる列の <name3> の <name6> に <val1> を掛けた値回分の列を <name3> の <name5> にする	<name3> . <name5> = [ <val2> ] * ( <name3> . <name6> * <val1> )	<name3> . <name5> = [ <val2> ] * ( <name3> . <name6> * <val1> )
<val1> から <val2> 未満までの数列の各要素を <name2> とし、 '{} {}' が <name4> に含まれるときの ( <val4> 、 <val6> 、 <val3> 、 <val5> ) からなる列の列の各要素を <name1> とし、 '{} {}' を出力するの列	[ print ( { <name1> } { <name2> } ) for <name1> in [ [ <val4> , <val6> , <val3> , <val5> ] for <name2> in range ( <val1> , <val2> ) if { <name1> } { <name2> } in <name4> ] ]	all = [ { [ <val4> for <name1> in [ <val6> , <val3> , <val5> , <val5> , <val5> ] ] for <name2> in range ( <val2> ) ] }
<name6> の <name3> を取り出した値	<name6> . pop ( <name3> )	<name3> . pop ( <name6> . pop ( <name3> ) )
<name5> の <name6> 番目の <name4> 番目が <val3> と等しいとき、	if <name5> [ <name6> ] [ <name4> ] == <val3> :	if <name5> [ <name6> ] [ <name4> ] == <val3> :
0 から <name1> の <name6> 未満までの数列の各要素を <name4> とし、、つまり未定値の列を <name1> の <name5> にする	<name1> . <name5> = [ None for <name4> in range ( <name1> . <name6> ) ]	<name1> . <name5> = [ None for <name4> in range ( <name1> . <name6> ) ]
<name4> 内の <val1> の出現回数、 <name4> 内の <val3> の出現回数を出力する	print ( <name4> . count ( <val1> ) , <name4> . count ( <val3> ) )	print ( <name4> . count ( <val1> ) , <name4> . count ( <val3> ) )
<name6> ( <name5> . <name2> [ <val1> : ] )	<name6> ( <name5> . <name2> [ <val1> : ] )	set ( <name5> . <name2> [ <val1> : ] )
<val1> から <name6> の長さ未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val1> , len ( <name6> ) ) :	. for <name4> in range ( <val1> , len ( <name6> ) ) :
<name4> の末尾に <name6> の <name2> 番目を追加する	<name4> . append ( <name6> [ <name2> ] )	<name3> . append ( <name6> [ <name2> ] )
<name2> が <name4> の <name1> に含まれるとき、	if <name2> in <name4> . <name1> :	list in <name2> in <name4> . <name1> :
( <val6> ) からなる列に <val3> から <name2> の長さ未満までの数列の各要素を <name1> とし、 <name2> の <name1> -1 番目に <name1> に <name2> [ <name1> ] を掛けた値を加えた値の列を加えた値に ( <val6> ) からなる列を加えた値を <name2> とする	<name2> = [ <val6> ] + [ <name2> [ <name1> - <val3> ] + <name1> * <name2> [ <name1> ] for <name1> in range ( <val3> , len ( <name2> ) ) ] + [ <val6> ]	<name6> = [ <val6> ] + [ <name2> [ <name1> - <val6> ] + <name1> * <name2> [ <name1> ] for <name1> in range ( len ( <name2> ) ) ] + [ <val6> ]
<val4> から <val5> 未満までの数列の各要素を <name6> とし、 <val4> の列を <name3> とする	<name3> = [ <val4> for <name6> in range ( <val5> ) ]	<name3> = [ <val4> for <name6> in range ( <val5> ) ]
<name4> の <name5> 番目の <name2> 番目を <name1> とする	<name1> = <name4> [ <name5> ] [ <name2> ]	<name4> = <name4> [ <name5> ] [ <name2> ]
( <name2> 、 <name6> ) の組を <name4> とする	<name4> = ( <name2> , <name6> )	<name4> = ( <name2> , <name6> )
<name2> の <name1> を <val3> で割った商から <val6> を引いた値が <val5> 以上のとき、	if <name2> . <name1> // <val3> - <val6> >= <val5> :	>= <name2> . <name1> // <val3> - <val6> >= <val5> :
<name2> ( <name6> . <name1> , <name6> . <name5> , <name3> + <val4> ) を <name1> とする	<name1> = <name2> ( <name6> . <name1> , <name6> . <name5> , <name3> + <val4> )	<name1> = <name2> ( <name6> . <name1> , <name6> . <name5> , <name3> + <val4> )
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name1> 、 <name6> 、 <name5> とする	<name3> , <name1> , <name6> , <name5> = map ( int , <name2> . readline ( ) . split ( ) )	<name3> , <name1> , <name6> , <name5> = map ( int , <name2> . readline ( ) . split ( ) )
<name5> 、空列の総和を <name6> とする	<name6> = sum ( <name5> , [ ] )	<name6> = <name5> . sum ( [ ] )
<name6> と <name1> 、 <name2> の和集合	<name6> . union ( <name1> , <name2> )	{ <name6> . union ( <name1> , <name2> ) }
<name2> に <name1> を掛けた値を <val6> で割った余りのとき、 <blk> <val4> を出力する </blk>	if <name2> * <name1> % <val6> : <blk> print ( <val4> ) </blk>	list ( <name2> * <name1> % <val6> ) : <blk> print ( <val4> ) </blk>
<name6> を <val4> に <name3> に <val5> を加えた値を掛けた値だけ増加させる	<name6> += <val4> * ( <name3> + <val5> )	<name2> += <val4> * ( <name3> + <val5> )
<name4> に <name1> の <name5> 番目を加えた値を <name6> とする	<name6> = <name4> + <name1> [ <name5> ]	set = <name4> + <name1> [ <name5> ]
<name5> をパラメータとして <name5> の <val4> 番目を返す関数をキーとして <name1> のキーと値の集まりをソートした列を <name6> とする	<name6> = sorted ( <name1> . items ( ) , key = lambda <name5> : <name5> [ <val4> ] )	<name5> = sorted ( <name1> . items ( ) , key = lambda <name5> : <name5> [ <val4> ] )
<name1> の <name3> 番目の <name2> 番目を <name4> とする	<name4> = <name1> [ <name3> ] [ <name2> ]	<name4> = <name1> [ <name3> ] [ <name2> ]
<name5> ( <name1> , <name6> ( <name3> ) , <name3> , <name2> )	<name5> ( <name1> , <name6> ( <name3> ) , <name3> , <name2> )	<name2> ( <name1> , <name6> ( <name3> ) , <name3> , <name2> )
<name6> を <val5> で割った商が <name2> より小さいとき、	if <name6> // <val5> < <name2> :	list ( <name6> // <val5> < <name2> ) :
<name1> の <name5> の末尾に <name6> のコピーされた列を追加する	<name1> . <name5> . append ( <name6> [ : ] )	<name4> . <name5> . append ( <name6> [ : ] )
<name1> 、 <name3> から <val6> を引いた値、 <name4> の総和を出力する	print ( <name1> . sum ( <name3> - <val6> , <name4> ) )	print ( <name1> . sum ( <name3> - <val6> , <name4> ) )
<name3> が <name4> の <val2> 乗以下のとき、	if ( <name3> <= <name4> ** <val2> ) :	for <name3> in <name3> <= <name4> ** <val2> :
<name2> の、つまり現在の日時の週番目を出力する	print ( <name2> [ now . weekday ( ) ] )	print ( <name2> [ now . weekday ( ) ] )
<name6> を <name3> で割った余りが <val5> と等しくないとき、	if <name6> % <name3> != <val5> :	raise <name6> % <name3> != <val5> :
<name6> ( <name1> , <name5> , <name4> ) を <name3> とする	<name3> = <name6> ( <name1> , <name5> , <name4> )	else = <name6> ( <name1> , <name5> , <name4> )
<name5> が <name1> の長さから <val6> を引いた値と等しいとき、	if <name5> == len ( <name1> ) - <val6> :	continue == len ( <name1> ) - <val6> :
<name1> を <name5> の、つまり先頭から、つまり末尾までの部分列にする	<name5> [ : ] = <name1>	( <name5> [ : ] = <name1> )
<name5> の末尾に <name2> ( <name1> ) を追加する	<name5> . append ( <name2> ( <name1> ) )	<name3> . append ( <name2> ( <name1> ) )
<name6> を英小文字に変換した文字列を <name4> とする	<name4> = <name6> . lower ( )	<name4> = <name6> . lower ( )
<name6> の、つまり先頭から <name5> 番目までの部分列を <name3> とする	<name3> = <name6> [ 0 : <name5> ]	<name3> = <name6> [ : <name5> ]
入力された文字列を空白で分割した字句列の各要素を <name3> とし、 <name3> の整数値の列を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]	<name2> , <name4> = [ int ( <name3> ) for <name3> in input ( ) . split ( ) ]
<name4> から <name1> を引いた値が <name6> の <name5> に含まれるとき、	if <name4> - <name1> in <name6> . <name5> :	isinstance ( <name4> - <name1> ) in <name6> . <name5> :
<name1> に <val6> を掛けた値の切り上げ整数値を <name1> とする	<name1> = math . ceil ( <name1> * <val6> )	<name1> = math . ceil ( <name1> * <val6> )
<name1> ( <name5> * <name2> . <name4> , <name5> * <name2> . <name6> ) を返す	return <name1> ( <name5> * <name2> . <name4> , <name5> * <name2> . <name6> )	x return <name1> ( <name5> * <name2> . <name4> , <name5> * <name2> . <name6> )
<name2> の先頭から <name3> を探して見つかった位置が <name2> の先頭から <name1> を探して見つかった位置と等しいかどうかを返す	return <name2> . find ( <name3> ) == <name2> . find ( <name1> )	x return <name2> . find ( <name3> ) == <name2> . find ( <name1> )
<name6> の <name1> の <name3> 番目が <name6> の <name1> の <name4> 番目より小さいとき、	if <name6> . <name1> [ <name3> ] < <name6> . <name1> [ <name4> ] :	isinstance ( <name6> . <name1> [ <name3> ] < <name6> . <name1> [ <name4> ] ) :
<name6> に <val2> を加えた値が <name5> から <val4> を引いた値より大きいとき、	if <name6> + <val2> > <name5> - <val4> :	continue <name6> + <val2> > <name5> - <val4> :
<name1> ( <name4> ) 空行を出力する	<name1> ( <name4> ) print ( )	( <name1> ( <name4> ) ) print ( )
<name5> に <name4> ( <name2> , <name6> , <name3> ) を追加した集まり	<name5> . add ( <name4> ( <name2> , <name6> , <name3> ) )	<name5> . add ( <name4> ( <name2> , <name6> , <name3> ) )
<name6> <name1> - <name3>	<name6> <name1> - <name3>	( <name6> <name1> - <name3> )
<name4> に <val1> を掛けた値に <name5> を加えた値を <name3> に <val6> を加えた値で割った余りを <name4> とするを <name6> の <name2> 番目にする	<name6> [ <name2> ] = <name4> = ( <name4> * <val1> + <name5> ) % ( <name3> + <val6> )	<name6> [ <name2> ] = <name4> = ( <name4> * <val1> + <name5> ) % ( <name3> + <val6> )
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name2> 、 <name1> とする	<name6> , <name4> , <name2> , <name1> = map ( int , input ( ) . split ( <val5> ) )	<name4> , <name2> , <name1> = map ( int , input ( ) . split ( <val5> ) )
<name1> を <name6> で割った余りが <val4> と等しいとき、	if <name1> % <name6> == <val4> :	\ <name1> % <name6> == <val4> :
<name4> に <val6> を加えた値を <name5> の <name3> 番目の <name1> 番目の <name2> 番目にする	<name5> [ <name3> ] [ <name1> ] [ <name2> ] = <name4> + <val6>	<name1> [ <name3> ] [ <name1> ] [ <name2> ] = <name4> + <val6>
<name4> の <name2> から <val1> を引いた値番目の <name6> に <val1> を加えた値番目を <name3> とする	<name3> = <name4> [ <name2> - <val1> ] [ <name6> + <val1> ]	<name4> = <name4> [ <name2> - <val1> ] [ <name6> + <val1> ]
<val6> が <name1> と等しいとき、	if ( <val6> == <name1> ) :	isclose if <val6> == <name1> :
<name5> ( ) を <name3> の <name6> にする	<name3> . <name6> = <name5> ( )	<name3> . <name6> = <name5> ( )
<name6> ( <name1> , <name2> , <name3> ) を <name5> とする	<name5> = <name6> ( <name1> , <name2> , <name3> )	else = <name6> ( <name1> , <name2> , <name3> )
<name2> 、 <name3> の要素をそれぞれ組にした列の各要素を <name6> 、 <name4> とし、 <name6> から <name4> を引いた値の絶対値の列を <name5> とする	<name5> = [ abs ( <name6> - <name4> ) for <name6> , <name4> in zip ( <name2> , <name3> ) ]	<name5> = [ abs ( <name6> - <name4> ) for <name6> , <name4> in zip ( <name2> , <name3> ) ]
<name6> と <val2> の論理積が <val2> と等しいとき、	if <name6> & <val2> == <val2> :	: if <name6> & <val2> == <val2> :
<val1> から <name2> の長さ未満までの <val6> 間隔の数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , len ( <name2> ) , <val6> ) :	. for <name5> in range ( <val1> , len ( <name2> ) , <val6> ) :
<name6> が <name5> より小さくかつ <name4> が <name5> 以上かつ <name2> の <name6> 番目から <name2> の <name4> 番目を引いた値が <name1> より大きいとき、	if <name6> < <name5> and <name4> >= <name5> and <name2> [ <name6> ] - <name2> [ <name4> ] > <name1> :	if <name6> < <name5> and <name4> >= <name5> and <name2> [ <name6> ] - <name2> [ <name4> ] > <name1> :
<name2> . <name1> ( ) が <name4> . <name1> ( ) と等しくないとき、	if <name2> . <name1> ( ) != <name4> . <name1> ( ) :	for <name2> . <name1> ( ) != <name4> . <name1> ( ) :
0 から <name1> 、 <name5> から <name4> を引いた値の最小値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( min ( <name1> , <name5> - <name4> ) ) :	in range ( min ( <name1> , <name5> - <name4> ) ) :
<name3> が <name4> と等しいかどうかが <val6> と等しいとき、	if <name3> == <name4> == <val6> :	[ <val6> if <name3> == <name4> == <val6> :
<name3> の <name6> から <name2> を引いた値から、つまり末尾までの部分列を <name1> とする	<name1> = <name3> [ <name6> - <name2> : ]	<name1> = <name3> [ <name6> - <name2> : ]
入力された文字列を空白で分割した字句列の各要素を <name6> とし、 <name6> の整数値の列を ( <name3> 、 <name1> ) の組とする	( <name3> , <name1> ) = ( [ int ( <name6> ) for <name6> in input ( ) . split ( ) ] )	<name2> , <name3> , <name1> ) = [ int ( <name6> ) for <name6> in input ( ) . split ( ) ]
辞書の ( <name3> 、 <name5> ) の組番目が <name1> 以下のとき、	if dict [ ( <name3> , <name5> ) ] <= <name1> :	for dict [ ( <name3> , <name5> ) ] <= <name1> :
ソートされた順序を保ったまま <name5> を <name1> に挿入できる最後の位置を <name6> とする	<name6> = bisect . bisect_right ( <name1> , <name5> )	<name6> = bisect_right ( <name1> , <name5> )
<name6> 、 <val2> * ( <name1> // <val3> ) + <val4> * ( <name1> % <val3> ) に <val5> * ( <name6> // <val2> ) を加えた値に <val1> に ( <name6> % <val2> ) を掛けた値を加えた値に <val3> に <name4> を <val5> で割った商を掛けた値を加えた値に <val6> に <name4> を <val5> で割った余りを掛けた値を加えた値の最小値を <name6> とする	<name6> = min ( <name6> , <val2> * ( <name1> // <val3> ) + <val4> * ( <name1> % <val3> ) + <val5> * ( <name6> // <val2> ) + <val1> * ( <name6> % <val2> ) + <val3> * ( <name4> // <val5> ) + <val6> * ( <name4> % <val5> ) )	<name4> = min ( <name6> , <val2> * ( <name1> // <val3> ) + <val4> * ( <name1> % <val3> ) + <val5> * ( <name6> // <val2> ) + <val1> * ( <name6> % <val2> ) + <val3> * ( <name4> // <val5> ) + <val6> * ( <name4> % <val5> ) )
入力された文字列を空白で分割した字句列の各要素に <name6> をパラメータとして <name6> の整数値を返す関数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name2> 、 <name5> とする	<name4> , <name1> , <name2> , <name5> = map ( lambda <name6> : int ( <name6> ) , input ( ) . split ( ) )	<name2> , <name5> = map ( lambda <name6> : int ( <name6> ) , input ( ) . split ( ) )
<name6> から <name4> を引いた値を <name2> から <name1> を引いた値で割った値を <name3> とする	<name3> = ( <name6> - <name4> ) / ( <name2> - <name1> )	<name3> = ( <name6> - <name4> ) / ( <name2> - <name1> )
<name5> の末尾に <name3> の <name1> 番目を追加する	<name5> . append ( <name3> [ <name1> ] )	<name3> . append ( <name3> [ <name1> ] )
<name1> に <val3> を掛けた値を <name2> で割った余りを <name1> とする	<name1> = <name1> * <val3> % <name2>	<name1> = <name1> * <val3> % <name2>
<name6> を <name5> ( <val2> , <val1> ) で割った商を <name4> とする	<name4> = <name6> // <name5> ( <val2> , <val1> )	<name4> = <name6> // <name5> ( <val2> , <val1> )
<name6> 、 <name2> ( <name1> | <val3> << <name4> , <name4> ) に <name5> [ <name4> ] + <name5> [ <name6> ] の <val2> 乗から <name5> [ <name4> ] - <name5> [ <name6> ] の <val2> 乗を引いた値の平方根を加えた値の最小値を <name6> とする	<name6> = min ( <name6> , <name2> ( <name1> | <val3> << <name4> , <name4> ) + sqrt ( pow ( <name5> [ <name4> ] + <name5> [ <name6> ] , <val2> ) - pow ( <name5> [ <name4> ] - <name5> [ <name6> ] , <val2> ) ) )	<name6> = min ( <name6> , <name2> ( <name1> | <val3> << <name4> , <name4> ) + ( <name5> [ <name4> ] + <name5> [ <name6> ] ** <val2> - <name5> [ <name4> ] - <name5> [ <name6> ] ** <val2> ) ) )
<name6> の <name2> から <val4> を引いた値番目を出力する	print ( <name6> [ <name2> - <val4> ] )	<name6> [ <name2> - <val4> ] = <name6> [ <name2> - <val4> ] )
<name1> の <name6> 番目を <name4> で割った余りにする	<name1> [ <name6> ] % = <name4>	not = <name1> [ <name6> ] % = <name4>
<name6> の <val2> 番目から <val4> 番目までの部分列の整数値を <name5> とする	<name5> = int ( <name6> [ <val2> : <val4> ] )	<name5> = int ( <name6> [ <val2> : <val4> ] )
\ <name5> を <val4> だけ増加させる\	\ <name5> += <val4> \	for <name5> += <val4> \
<name1> を追加して <name2> を拡張する	<name2> . extend ( <name1> )	dict . extend ( <name1> )
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり空列の列を <name3> の <name2> にする	<name3> . <name2> = [ [ ] for <name6> in range ( <name1> ) ]	<name1> . <name2> = [ [ ] for <name6> in range ( <name1> ) ]
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name6> とする	<name1> , <name2> , <name6> = map ( int , input ( ) . split ( ) )	<name3> , <name2> , <name6> = map ( int , input ( ) . split ( ) )
<name6> を <name1> の <name4> 番目の <name2> 番目に <name5> の <name2> 番目を掛けた値だけ増加させる	<name6> += <name1> [ <name4> ] [ <name2> ] * <name5> [ <name2> ]	<name2> += <name1> [ <name4> ] [ <name2> ] * <name5> [ <name2> ]
0 から <name1> 未満までの数列の各要素を <name3> とし、 0 から <name1> 未満までの数列の各要素を <name6> とし、 <val5> の列の列を <name4> とする	<name4> = [ [ <val5> for <name6> in range ( <name1> ) ] for <name3> in range ( <name1> ) ]	<name4> = [ [ <val5> for <name6> in range ( <name1> ) ] for <name3> in range ( <name1> ) ]
<name1> を <name5> の <name6> の <name3> 番目にする	<name5> . <name6> [ <name3> ] = <name1>	( <name5> . <name6> [ <name3> ] = <name1> )
<name6> の <name2> 番目が <name1> に含まれるとき、	if ( <name6> [ <name2> ] in <name1> ) :	if <name6> [ <name2> ] in <name1> :
<name6> 、 <name2> の最大値を <name6> とする	<name6> = max ( <name6> , <name2> )	<name6> = max ( <name6> , <name2> )
<name6> . <name3> ( <name4> ) を <name4> とする	<name4> = <name6> . <name3> ( <name4> )	<name4> = <name6> . <name3> ( <name4> )
<name3> の <name6> 番目の <name5> 番目を <name2> とする	<name2> = <name3> [ <name6> ] [ <name5> ]	<name2> = <name3> [ <name6> ] [ <name5> ]
<name3> が <name4> に <name5> を加えた値より大きいとき、 <blk> <val1> を返す </blk>	if <name3> > <name4> + <name5> : <blk> return <val1> </blk>	\ if <name3> > <name4> + <name5> : <blk> return <val1> </blk>
<name1> を <name4> の <name6> に <val3> を加えた値番目の <name2> 番目にする	<name4> [ <name6> + <val3> ] [ <name2> ] = <name1>	( <name4> [ <name6> + <val3> ] [ <name2> ] = <name1> )
<name4> . <name3> ( <name2> , <name6> ) が、つまり偽と等しいとき、	if <name4> . <name3> ( <name2> , <name6> ) == False :	list ( <name4> . <name3> ( <name2> , <name6> ) == False :
( -1 、 -1 、入力された文字列の整数値、 -1 、 -1 ) からなる列を <name6> とする	<name6> = [ - 1 , - 1 , int ( input ( ) ) , - 1 , - 1 ]	<name6> = [ - 1 , - 1 , int ( input ( ) ) , - 1 , - 1 ]
<name6> を <name2> に <name3> の正弦を掛けた値だけ増加させる	<name6> += <name2> * math . sin ( <name3> )	<name2> += <name2> * math . sin ( <name3> )
<val3> 、 <name2> のとき <name5> に <val1> を掛けた値を <name2> で割った商、そうでなければ <val6> を出力する	print ( <val3> , <name5> * <val1> // <name2> if <name2> else <val6> )	print ( <val3> , <name5> * <val1> // <name2> if <name2> else <val6> )
<val2> を間に入れて <name5> を連結した文字列を <name4> とする	<name4> = <val2> . join ( <name5> )	<name4> = <val2> . join ( <name5> )
<name1> の長さから <val4> を引いた値から -1 未満までの -1 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( len ( <name1> ) - <val4> , - 1 , - 1 ) :	for <name6> in range ( len ( <name1> ) - <val4> , - <val4> , - <val4> ) :
<name4> の <name6> 番目の <val1> 番目を <name2> とする	<name2> = <name4> [ <name6> ] [ <val1> ]	<name2> = <name4> [ <name6> ] [ <val1> ]
\ <name3> ( <val1> ) \	\ <name3> ( <val1> ) \	<val1> <name3> ( <val1> ) \
<name6> ( <name4> / <name5> . <name2> , <name4> / <name5> . <name3> ) を返す	return <name6> ( <name4> / <name5> . <name2> , <name4> / <name5> . <name3> )	return <name6> ( <name4> / <name5> . <name2> , <name4> / <name5> . <name3> )
( ( <val6> ) からなる列の <val6> から <name1> 未満までの数列の各要素を <name2> とし、 <name1> の列回分の列 ) からなる列を <name4> とする	<name4> = [ [ <val6> ] * [ <name1> for <name2> in range ( <name1> ) ] ]	<name4> = [ [ <val6> ] * [ <name1> for <name2> in range ( <name1> ) ] ]
<name2> の長さを <val1> で割った余りが <val6> より大きい間、次を繰り返す <blk> <name2> を <val3> だけ増加させる </blk>	while len ( <name2> ) % <val1> > <val6> : <blk> <name2> += <val3> </blk>	: while len ( <name2> ) % <val1> > <val6> : <blk> <name2> += <val3> </blk>
<name1> の <name4> の <name5> 番目の <name6> 番目を展開し、それぞれ <name6> 、 <name3> 、 <name2> とする	<name6> , <name3> , <name2> = <name1> . <name4> [ <name5> ] [ <name6> ]	<name3> , <name2> = <name1> . <name4> [ <name5> ] [ <name6> ]
<val6> から <name5> の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , len ( <name5> ) ) :	. for <name3> in range ( <val6> , len ( <name5> ) ) :
<name6> の先頭の <val1> 番目、 <name6> の <val1> 番目を出力する	print ( <name6> [ 0 ] [ <val1> ] , <name6> [ <val1> ] )	print ( <name6> [ <val1> ] [ <val1> ] , <name6> [ <val1> ] )
( <val3> 、 <val2> ) からなる列の <name4> の <name5> から <val2> を引いた値番目が <val3> と等しいかどうか番目を <name4> の <name5> から <val2> を引いた値番目にする	<name4> [ <name5> - <val2> ] = [ <val3> , <val2> ] [ <name4> [ <name5> - <val2> ] == <val3> ]	input [ <name5> - <val2> ] = [ <val3> , <val2> ] [ <name4> [ <name5> - <val2> ] == <val3> ]
<name3> を <name6> の <name5> に <val2> を加えた値番目の <name1> に <val4> を加えた値番目にする	<name6> [ <name5> + <val2> ] [ <name1> + <val4> ] = <name3>	<name3> [ <name6> [ <name5> + <val2> ] ] [ <name1> + <val4> ] = <name3>
0 から <val3> 未満までの数列の各要素を <name2> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name5> とする	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <val3> ) ]	<name5> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name2> in range ( <val3> ) ]
<val5> を <name3> の <name6> の先頭の <val4> 番目にする	<name3> . <name6> [ <val4> ] [ <val4> ] = <val5>	( <name3> . <name6> [ <val4> ] [ <val4> ] = <val5> )
<name1> が <name4> と等しいかどうかが <name3> と等しいかどうかが -1 と等しいとき、	if <name1> == <name4> == <name3> == - 1 :	while <name1> == <name4> == <name3> == - 1 :
( <val1> 、 <val5> 、 <val3> 、 <val6> ) からなる列を <name2> とする	<name2> = [ <val1> , <val5> , <val3> , <val6> ]	<name2> = [ <val1> , <val5> , <val3> , <val6> ]
0 から <val1> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を順に <name2> 、 <name4> として、繰り返す <blk> <name2> から <name4> を引いた値を出力する </blk>	for <name2> , <name4> in [ list ( map ( int , input ( ) . split ( ) ) ) for <name3> in range ( <val1> ) ] : <blk> print ( <name2> - <name4> ) </blk>	if [ list ( input ( ) . split ( ) ) for <name3> in range ( <val1> ) ] : <blk> print ( <name2> , <name4> ) </blk>
<val1> に <name2> から <name5> の長さを引いた値を掛けた値に <name5> を加えた値を <name5> とする	<name5> = <val1> * ( <name2> - len ( <name5> ) ) + <name5>	<name5> = <val1> * ( <name2> - len ( <name5> ) ) + <name5>
<name6> の <name3> の <name4> 番目の末尾に <name2> を追加する	<name6> . <name3> [ <name4> ] . append ( <name2> )	<name3> . <name3> [ <name4> ] . append ( <name2> )
入力された文字列が <name3> に含まれるかどうかの整数値を出力する	print ( int ( input ( ) in <name3> ) )	print ( int ( input ( ) in <name3> ) )
<name6> の <name1> 番目を展開し、それぞれ <name4> 、 <name3> 、 <name2> とする	<name4> , <name3> , <name2> = <name6> [ <name1> ]	( <name4> , <name3> , <name2> = <name6> [ <name1> ] )
<name2> ( <name3> , <name4> )	<name2> ( <name3> , <name4> )	set ( <name2> ( <name3> , <name4> ) )
入力された文字列を <val4> で分割した字句列を展開し、それぞれ <name5> 、 <name2> とする	<name5> , <name2> = input ( ) . split ( <val4> )	<name4> , <name2> = input ( ) . split ( <val4> )
<name5> の整数値に <name4> の整数値を掛けた値を出力する	print ( int ( <name5> ) * int ( <name4> ) )	print ( int ( <name5> ) * int ( <name4> ) )
( <val3> 、 <val5> 、 <val1> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val3> , <val5> , <val1> , <val6> ]	<name4> = [ <val3> , <val5> , <val1> , <val6> ]
<name3> から読み込んだ一行を空白で分割した字句列を <name4> とする	<name4> = <name3> . readline ( ) . split ( )	<name4> = <name3> . readline ( ) . split ( )
<name1> ( <name6> ) を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name1> ( <name6> )	<name2> , <name4> = <name1> ( <name6> )
<name5> に <name2> を掛けた値を <name3> で割った余りを <name5> とする	<name5> = <name5> * <name2> % <name3>	<name5> = ( <name5> * <name2> ) % <name3>
<name2> を <name3> の <name4> から <name1> を引いた値に <name5> を加えた値から <val6> を引いた値番目にする	<name3> [ <name4> - <name1> + <name5> - <val6> ] = <name2>	<name1> [ <name4> - <name1> + <name5> - <val6> ] = <name2>
<name4> ( <name2> , <name1> ( <name6> [ <name5> ] [ <val3> : ] ) ) のとき、	if <name4> ( <name2> , <name1> ( <name6> [ <name5> ] [ <val3> : ] ) ) :	for <name4> in <name4> ( <name2> , <name1> ( <name6> [ <name5> ] [ <val3> : ] ) ) :
<name1> ( <name2> / <name3> ) を <name5> とする	<name5> = <name1> ( <name2> / <name3> )	<name5> = <name1> ( <name2> / <name3> )
<name3> の整数値を <name3> とする <name1> の整数値を <name1> とする	<name3> = int ( <name3> ) <name1> = int ( <name1> )	<name3> = int ( <name3> ) <name1> = int ( <name1> )
( <val2> ) からなる列の、つまり入力された文字列の整数値回分の列を順に <name1> として、繰り返す	for <name1> in [ <val2> ] * int ( input ( ) ) :	for <name1> in [ <val2> ] * int ( input ( ) ) :
<name4> の <val5> 番目から <name2> を引いた値から <val3> を引いた値を <name1> とするを <name4> の <val5> 番目にする	<name4> [ <val5> ] = <name1> = <name4> [ <val5> ] - <name2> - <val3>	<val5> <name4> [ <val5> ] = <name1> = <name4> [ <val5> ] - <name2> - <val3>
0 から <name4> の <name3> の長さ未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( len ( <name4> . <name3> ) ) :	for <name2> in range ( len ( <name4> . <name3> ) ) :
<name4> をパラメータとして <name4> の <val6> 番目を返す関数をキーとして <name2> のキーと値の集まりをソートした列を <name2> とする	<name2> = sorted ( <name2> . items ( ) , key = lambda <name4> : <name4> [ <val6> ] )	<name6> = sorted ( <name2> . items ( ) , key = lambda <name4> : <name4> [ <val6> ] )
( <name2> の <val3> 番目、 <name2> の <val4> 番目、 <name2> の <val5> 番目、 <name2> の先頭、 <name2> の <val6> 番目、 <name2> の <val1> 番目 ) からなる列を <name6> の <name1> にする	<name6> . <name1> = [ <name2> [ <val3> ] , <name2> [ <val4> ] , <name2> [ <val5> ] , <name2> [ 0 ] , <name2> [ <val6> ] , <name2> [ <val1> ] ]	<name2> . <name6> . <name1> = [ <name2> [ <val3> ] , <name2> [ <val4> ] , <name2> [ <val5> ] , <name2> [ 0 ] , <name2> [ <val6> ] , <name2> [ <val1> ] ]
<name5> . <name1> ( ) を展開し、それぞれ <name1> 、 <name3> 、 <name2> 、 <name4> 、 <name6> とする	<name1> , <name3> , <name2> , <name4> , <name6> = <name5> . <name1> ( )	<name6> , <name1> , <name3> , <name2> , <name4> , <name6> = <name5> . <name1> ( )
<name5> ( <name4> ( ) , <val1> ) を出力する	print ( <name5> ( <name4> ( ) , <val1> ) )	<val3> print ( <name5> ( <name4> ( ) , <val1> ) )
<name6> の <name6> の <name5> 番目の <name5> 番目でないとき、	if not <name6> . <name6> [ <name5> ] [ <name5> ] :	raise <name6> . <name6> [ <name5> ] [ <name5> ] :
<name5> に <name4> を加えた値が <val2> と等しいとき、	if <name5> + <name4> == <val2> :	continue + <name4> == <val2> :
<name2> ( <name3> -2 , <name4> , <name6> , <name1> ) に [ MASK ] を加えた値	+ <name2> ( <name3> - 2 , <name4> , <name6> , <name1> )	sqrt ( <name2> ( <name3> - 2 , <name4> , <name6> , <name1> ) )
<name6> の <name2> 番目と <name6> の <name2> から <val3> を引いた値番目を入れ替える	<name6> [ <name2> ] , <name6> [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] , <name6> [ <name2> ]	<name6> [ <name2> ] , <name6> [ <name2> - <val3> ] = <name6> [ <name2> - <val3> ] , <name6> [ <name2> ]
<name4> . <name6> ( <name5> , <name2> , <val1> , <val1> , <val3> , <val1> ) を出力する	print ( <name4> . <name6> ( <name5> , <name2> , <val1> , <val1> , <val3> , <val1> ) )	print ( <name4> . <name6> ( <name5> , <name2> , <val1> , <val1> , <val3> , <val1> ) )
<name6> を <name4> から <name5> を引いた値の <name1> 乗に <name2> ( <name4> , <name5> ) を掛けた値だけ減少させる	<name6> -= ( <name4> - <name5> ) ** <name1> * <name2> ( <name4> , <name5> )	<name6> -= ( ( <name4> - <name5> ) ** <name1> ) * <name2> ( <name4> , <name5> )
<name3> の各要素を <name4> とし、 <name4> の列を整数とする	str = [ <name4> for <name4> in <name3> ]	count = [ <name4> for <name4> in <name3> ]
0 から <val2> に <name6> の <name1> を掛けた値未満までの数列の各要素を <name4> とし、 <name3> の列を <name6> の <name5> にする	<name6> . <name5> = [ <name3> for <name4> in range ( <val2> * <name6> . <name1> ) ]	<name6> . <name5> = [ <name3> for <name4> in range ( <val2> * <name6> . <name1> ) ]
<name6> ( <name4> , <name1> , <name5> , <name2> )	<name6> ( <name4> , <name1> , <name5> , <name2> )	set ( <name6> ( <name4> , <name1> , <name5> , <name2> ) )
\ <name6> ( <val4> ) \	\ <name6> ( <val4> ) \	for <name6> ( <val4> ) \
<name6> ( <name2> , <name3> , <name5> ) のとき、	if ( <name6> ( <name2> , <name3> , <name5> ) ) :	isinstance ( <name6> ( <name2> , <name3> , <name5> ) ) :
<name2> の <name6> 番目が <name1> 以下または <name4> の <val5> 番目が <val3> と等しいとき、	if <name2> [ <name6> ] <= <name1> or <name4> [ <val5> ] == <val3> :	if <name2> [ <name6> ] <= <name1> or <name4> [ <val5> ] == <val3> :
<name1> の <name6> 番目の <name2> 番目の <name3> 番目を <val5> だけ増加させる	<name1> [ <name6> ] [ <name2> ] [ <name3> ] += <val5>	<name4> [ <name6> ] [ <name2> ] [ <name3> ] += <val5>
ZHHHWHHHEHHHEHHHWHHHWHHH を順に <name4> として、繰り返す	for <name4> in 'ZHHHWHHHEHHHEHHHWHHHWHHH' :	. for <name4> :
0 から <name1> に <val5> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name1> + <val5> ) :	in range ( <name1> + <val5> ) :
<name2> の <val6> 番目、 <name5> の最小値を <name2> の <val6> 番目にする	<name2> [ <val6> ] = min ( <name2> [ <val6> ] , <name5> )	dict [ <val6> ] = min ( <name2> [ <val6> ] , <name5> )
E869120 を <name1> とする	<name1> = 'E869120'	<name1> = 'Q'
<name5> を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name2> 、 <name6> 、 <name5> 、 <name4> 、 <name1> 、 <name3> 、 <name2> 、 <name6> とする	<name2> , <name6> , <name5> , <name4> , <name1> , <name3> , <name2> , <name6> = map ( float , <name5> . split ( ) )	<name5> , <name4> , <name1> , <name3> , <name2> , <name6> = map ( float , <name5> . split ( ) )
<name6> が <name5> 以下かどうかが <name1> 以下かつ <name3> が <name4> 以下かどうかが <name2> 以下のとき、	if <name6> <= <name5> <= <name1> and <name3> <= <name4> <= <name2> :	<= if <name6> <= <name5> <= <name1> and <name3> <= <name4> <= <name2> :
<name4> の <name2> 番目を <name4> の <name2> に <val3> を加えた値番目にする	<name4> [ <name2> + <val3> ] = <name4> [ <name2> ]	<name1> [ <name2> + <val3> ] = <name4> [ <name2> ]
( <val6> 、 <val6> ) からなる列に ( <val3> ) からなる列の <val2> 回分の列を加えた値を <name5> とする	<name5> = [ <val6> , <val6> ] + [ <val3> ] * <val2>	<name5> = [ <val6> , <val6> ] + [ <val3> ] * <val2>
<name1> に <val4> を加えた値を <name3> とする	<name3> = <name1> + <val4>	( <name3> = <name1> + <val4> )
<name3> の <name1> 番目を <name6> の <name5> 番目だけ増加させる	<name3> [ <name1> ] += <name6> [ <name5> ]	<name1> [ <name1> ] += <name6> [ <name5> ]
<name1> の <name2> 番目の <name4> 番目でなくかつ <name6> の <name2> 番目の <name4> 番目が <val5> と等しくないとき、	if not <name1> [ <name2> ] [ <name4> ] and <name6> [ <name2> ] [ <name4> ] != <val5> :	for <name1> in not <name1> [ <name2> ] [ <name4> ] and <name6> [ <name2> ] [ <name4> ] != <val5> :
( 、つまり未定値 ) からなる列の <name1> に <val6> を加えた値回分の列を <name2> とする	<name2> = [ None ] * ( <name1> + <val6> )	<name2> = [ None ] * ( <name1> + <val6> )
0 から <name4> 未満までの数列の各要素を <name3> とし、、つまり空列の列を <name5> とする	<name5> = [ [ ] for <name3> in range ( <name4> ) ]	<name5> = [ [ ] for <name3> in range ( <name4> ) ]
<name3> ( <name5> , ( <name1> + <name6> , <name2> , <name4> , <name3> ) )	<name3> ( <name5> , ( <name1> + <name6> , <name2> , <name4> , <name3> ) )	<name4> ( <name5> , ( <name1> + <name6> , <name2> , <name4> , <name3> ) )
<val6> が <name4> ( <name2> , <name3> , <name1> ) 以下かどうかが <name5> 以下のとき、	if <val6> <= <name4> ( <name2> , <name3> , <name1> ) <= <name5> :	list ( <val6> <= <name4> ( <name2> , <name3> , <name1> ) <= <name5> :
<name3> の <name6> の <name4> の <name1> 番目の末尾に <name4> を追加する	<name3> . <name6> [ <name4> . <name1> ] . append ( <name4> )	<name3> . <name6> [ <name4> . <name1> ] . append ( <name4> )
<name2> が <val6> と等しくまたは <name2> が <val5> と等しいとき、	if <name2> == <val6> or <name2> == <val5> :	or <name2> == <val6> or <name2> == <val5> :
<name6> の先頭を <name2> とする	<name2> = <name6> [ 0 ]	( <name2> = <name6> [ 0 ] )
<name6> の x 座標に <name1> の x 座標を加えた値、 <name6> の y 座標に <name1> の y 座標を加えた値を <name5> 、 <name3> とする	<name5> , <name3> = <name6> . x + <name1> . x , <name6> . y + <name1> . y	<name5> , <name3> = <name6> . x + <name1> . x , <name6> . y + <name1> . y
. を <name1> の <name4> 番目の <name3> 番目にする	<name1> [ <name4> ] [ <name3> ] = '.'	( <name1> [ <name4> ] [ <name3> ] = '.' )
<name4> の <name6> に番号付した組の列を順に <name2> 、 <name5> として、繰り返す	for <name2> , <name5> in enumerate ( <name4> . <name6> ) :	( <name2> , <name5> in enumerate ( <name4> . <name6> ) :
<name2> から <name5> を引いた値に <val6> を加えた値を <name4> とする	<name4> = <name2> - <name5> + <val6>	<name4> = <name2> - <name5> + <val6>
<name2> . <name3> ( )	<name2> . <name3> ( )	set ( <name2> . <name3> ( ) )
<val2> から <val5> 未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , <val5> , - <val5> ) :	: for <name1> in range ( <val2> , <val5> , - 1 ) :
0 から <name2> を <val5> で割った商未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name2> // <val5> ) :	for <name1> in range ( <name2> // <val5> ) :
<val6> に <name1> を掛けた値に <name2> を掛けた値に <name4> の正弦を掛けた値を <name5> とする	<name5> = <val6> * <name1> * <name2> * math . sin ( <name4> )	( <name5> = <val6> * <name1> * <name2> ) * math . sin ( <name4> )
<name3> ( <name6> , <val5> , <val5> , <name2> ) を出力する	print ( <name3> ( <name6> , <val5> , <val5> , <name2> ) )	print ( <name3> ( <name6> , <val5> , <val5> , <name2> ) )
<name6> の <val3> 番目を <name6> の <val5> 番目にする	<name6> [ <val5> ] = <name6> [ <val3> ]	<name1> [ <val5> ] = <name6> [ <val3> ]
<val4> から <name3> を <val5> で割った商に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val4> , ( <name3> // <val5> ) + <val5> ) :	continue for <name1> in range ( <val4> , <name3> // <val5> + <val5> ) :
<name4> が <name3> に含まれるかどうかの整数値を出力する	print ( int ( <name4> in <name3> ) )	print ( int ( <name4> in <name3> ) )
( <val4> 、 <val6> 、 <val3> 、 <val5> ) からなる列を <name1> とする	<name1> = [ <val4> , <val6> , <val3> , <val5> ]	<name6> = [ <val4> , <val6> , <val3> , <val5> ]
<name6> の <name1> 番目、 <name6> の <name1> から <val4> を引いた値番目の最大値に <name5> に -1 の <name1> 乗を掛けた値を加えた値を <name6> の <name1> 番目にする	<name6> [ <name1> ] = max ( <name6> [ <name1> ] , <name6> [ <name1> - <val4> ] ) + <name5> * ( - <val4> ) ** <name1>	<name6> [ <name1> ] = max ( <name6> [ <name1> ] , <name6> [ <name1> - <val4> ] ) + <name5> * ( - <val4> ) ** <name1>
<name4> 、 <name3> に <name6> の <name1> 番目を加えた値の最小値を <name4> とする	<name4> = min ( <name4> , <name3> + <name6> [ <name1> ] )	<name4> = min ( <name4> , <name3> + <name6> [ <name1> ] )
<name3> モジュールを用いる	from <name3> import heapify , heappop , heappush	from <name3> import combinations
<name4> が <name5> より大きいとき、 <blk> <name2> を <name1> とする </blk>	if <name4> > <name5> : <blk> <name1> = <name2> </blk>	if <name4> > <name5> : <blk> <name1> = <name2> </blk>
<name6> . <name5> ( <name1> + <name3> , <name1> + <name4> + <val2> , <val2> )	<name6> . <name5> ( <name1> + <name3> , <name1> + <name4> + <val2> , <val2> )	( <name6> . <name5> ( <name1> + <name3> , <name1> + <name4> + <val2> , <val2> ) )
<name4> の <name2> の <name1> 番目を順に <name5> として、繰り返す	for <name5> in <name4> . <name2> [ <name1> ] :	continue . <name2> [ <name1> ] :
( <val6> ) からなる列に入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを加えた値を <name2> とする	<name2> = [ <val6> ] + list ( map ( int , input ( ) . split ( ) ) )	input = [ <val6> ] + list ( map ( int , input ( ) . split ( ) ) )
<name3> [ <name1> ( <name6> ) ] ( <name5> )	<name3> [ <name1> ( <name6> ) ] ( <name5> )	<name4> [ <name1> ( <name6> ) ] ( <name5> )
<name2> ( <name5> , <name6> , <name3> , <name1> , <name4> , <name2> ) を <name4> とする	<name4> = <name2> ( <name5> , <name6> , <name3> , <name1> , <name4> , <name2> )	<name6> = <name2> ( <name5> , <name6> , <name3> , <name1> , <name4> , <name2> )
<name6> から <name4> に <val5> を掛けた値を引いた値を <val1> で割った商を <name2> とする	<name2> = ( <name6> - <name4> * <val5> ) // <val1>	<name2> = ( <name6> - <name4> * <val5> ) // <val1>
<name6> . <name5> ( <val2> , <name1> )	<name6> . <name5> ( <val2> , <name1> )	set ( <name6> . <name5> ( <val2> , <name1> ) )
<name6> . <name5> ( ) を <name2> とする	<name2> = <name6> . <name5> ( )	<name2> = <name6> . <name5> ( )
<val6> に <name2> の <name5> を加えた値に <name3> を加えた値を <name1> とする	<name1> = <val6> + <name2> . <name5> + <name3>	<name1> = <val6> + <name2> . <name5> + <name3>
<name6> の <name4> の先頭番目を <name2> とする	<name2> = <name6> [ <name4> [ 0 ] ]	( <name2> = <name6> [ <name4> [ 0 ] ] )
0 から <val2> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の列を <name5> とする	<name5> = [ input ( ) for <name6> in range ( <val2> ) ]	<name5> = [ input ( ) for <name6> in range ( <val2> ) ]
<name2> を <name1> の <name6> 番目の <name3> に <val5> を加えた値番目にする	<name1> [ <name6> ] [ <name3> + <val5> ] = <name2>	<name4> [ <name1> [ <name6> ] [ <name3> + <val5> ] = <name2>
<name4> . <name1> ( <name6> ) を <name6> とする	<name6> = <name4> . <name1> ( <name6> )	<name6> = <name4> . <name1> ( <name6> )
<name1> の <name5> の <name6> 番目に <name1> の <name2> の <name3> 番目を掛けた値に <name1> の <name2> の <name6> から <name3> を引いた値番目を掛けた値を <name1> の <name4> で割った余りを返す	return <name1> . <name5> [ <name6> ] * <name1> . <name2> [ <name3> ] * <name1> . <name2> [ <name6> - <name3> ] % <name1> . <name4>	x return <name1> . <name5> [ <name6> ] * <name1> . <name2> [ <name3> ] * <name1> . <name2> [ <name6> - <name3> ] % <name1> . <name4>
<val4> から、つまり入力された文字列の整数値を引いた値、 <val5> を <name1> 、 <name2> とする	<name1> , <name2> = <val4> - int ( input ( ) ) , <val5>	<name6> , <name1> , <name2> = <val4> - int ( input ( ) ) , <val5>
<name3> を <name2> の <name1> 番目から、つまり現在の日時を引いた値を <name4> で割った値だけ増加させる	<name3> += ( <name2> [ <name1> ] - now ) / <name4>	<name2> += ( <name2> [ <name1> ] - now ) / <name4>
( <val2> 、 <val3> 、 <val4> 、 <val5> ) からなる列を <name1> とする	<name1> = [ <val2> , <val3> , <val4> , <val5> ]	<name2> = [ <val2> , <val3> , <val4> , <val5> ]
<name5> ( <name6> . <name2> - <name1> . <name2> , <name6> . <name4> - <name1> . <name4> ) を返す	return <name5> ( <name6> . <name2> - <name1> . <name2> , <name6> . <name4> - <name1> . <name4> )	x return <name5> ( <name6> . <name2> - <name1> . <name2> , <name6> . <name4> - <name1> . <name4> )
<name2> の <name3> から読み込んだ一行に番号付した組の列を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in enumerate ( <name2> . <name3> . readline ( ) ) :	. for <name1> , <name6> in enumerate ( <name2> . <name3> . readline ( ) ) :
( <name2> 、 <name4> 、 <name5> ) からなる列内の <val3> の出現回数が <val6> と等しいとき、	if [ <name2> , <name4> , <name5> ] . count ( <val3> ) == <val6> :	> [ <name2> , <name4> , <name5> ] . count ( <val3> ) == <val6> :
<name2> のとき、 <blk> <name4> . <name2> ( <name3> ) </blk>	if <name2> : <blk> <name4> . <name2> ( <name3> ) </blk>	\ <name2> : <blk> <name4> . <name2> ( <name3> ) </blk>
0 から <name5> ( ) の整数値未満までの数列の各要素を <name4> とし、 <name5> ( ) を空白で分割した字句列の各要素に整数を適用した列の列の各要素を <name2> 、 <name1> とし、 <name2> に <name1> を掛けた値の列の総和を <name6> とする	<name6> = sum ( [ <name2> * <name1> for <name2> , <name1> in [ map ( int , <name5> ( ) . split ( ) ) for <name4> in range ( int ( <name5> ( ) ) ) ] ] )	<name6> = sum ( [ <name2> * <name1> for <name2> , <name1> in [ map ( int , <name5> ( ) . split ( ) ) for <name4> in range ( int ( <name5> ( ) ) ) ] ] )
<name1> に <name1> を掛けた値から <name6> 未満までの <name1> 間隔の数列を順に <name5> として、繰り返す <blk> <val4> を <name2> の <name5> 番目にする </blk>	for <name5> in range ( <name1> * <name1> , <name6> , <name1> ) : <blk> <name2> [ <name5> ] = <val4> </blk>	) for <name5> in range ( <name1> * <name1> , <name6> , <name1> ) : <blk> <name2> [ <name5> ] = <val4> </blk>
<name6> の <name4> 、 <name6> の <name5> 、 <name6> の <name2> 、 <name6> の <name3> を <name6> の <name3> 、 <name6> の <name4> 、 <name6> の <name5> 、 <name6> の <name2> とする	<name6> . <name3> , <name6> . <name4> , <name6> . <name5> , <name6> . <name2> = <name6> . <name4> , <name6> . <name5> , <name6> . <name2> , <name6> . <name3>	<name6> . <name3> , <name6> . <name4> , <name6> . <name5> , <name6> . <name2> = <name6> . <name4> , <name6> . <name5> , <name6> . <name2> , <name6> . <name3>
<name1> の末尾に <name5> ( <name4> , <name3> , <name2> ) を追加する	<name1> . append ( <name5> ( <name4> , <name3> , <name2> ) )	<name1> . append ( <name5> ( <name4> , <name3> , <name2> ) )
<name3> の <name5> ( <name6> , <name2> ) に <name5> ( <name1> , <name2> ) を加えた値番目を <name4> とする	<name4> = <name3> [ <name5> ( <name6> , <name2> ) + <name5> ( <name1> , <name2> ) ]	<name4> = <name3> [ <name5> ( <name6> , <name2> ) + <name5> ( <name1> , <name2> ) ]
<name6> を <name2> から <name4> を引いた値の絶対値、 <name5> から <name3> を引いた値の絶対値の最小値に <name1> の <name5> 番目の <name2> 番目を掛けた値だけ増加させる	<name6> += min ( abs ( <name2> - <name4> ) , abs ( <name5> - <name3> ) ) * <name1> [ <name5> ] [ <name2> ]	( <name6> ) += min ( abs ( <name2> - <name4> ) , abs ( <name5> - <name3> ) ) * <name1> [ <name5> ] [ <name2> ]
<name5> の <name1> から <val3> を引いた値番目、 <name5> の <name1> 番目を <name5> の <name1> 番目、 <name5> の <name1> から <val3> を引いた値番目とする	<name5> [ <name1> ] , <name5> [ <name1> - <val3> ] = <name5> [ <name1> - <val3> ] , <name5> [ <name1> ]	<name2> [ <name1> ] , <name5> [ <name1> - <val3> ] = <name5> [ <name1> - <val3> ] , <name5> [ <name1> ]
<name6> の <name2> 番目を <val1> との排他的論理和にする	<name6> [ <name2> ] ^ = <val1>	<name2> [ <name2> ] ^ = <val1>
<name2> . <name4> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> ) を返す	return <name2> . <name4> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> )	return <name2> . <name4> ( <name2> . <name3> / <name5> , <name2> . <name6> / <name5> )
<name6> から <name4> を引いた値を <name3> とする <name1> から <name2> を引いた値を <name5> とする	<name3> = ( <name6> - <name4> ) <name5> = ( <name1> - <name2> )	<name2> = <name6> - <name4> <name5> = <name1> - <name2>
<name6> の <name3> に <val4> を加えた値番目を <name6> の <name3> 番目だけ増加させる	<name6> [ <name3> + <val4> ] += <name6> [ <name3> ]	<name6> [ <name3> + <val4> ] += <name6> [ <name3> ]
<name2> ( ) を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( int , <name2> ( ) . split ( ) )	<name5> , <name1> = map ( int , <name2> ( ) . split ( ) )
<name3> に <name4> から <name6> を引いた値に <name2> を掛けた値を加えた値を <name5> とする	<name5> = <name3> + ( <name4> - <name6> ) * <name2>	<name5> = <name3> + ( <name4> - <name6> ) * <name2>
<name4> の先頭を取り出した値の文字列、 <name4> の先頭を取り出した値の文字列を <name1> 、 <name5> とする	<name1> , <name5> = str ( <name4> . pop ( ) ) , str ( <name4> . pop ( ) )	<name1> , <name5> = str ( <name4> . pop ( ) ) , str ( <name4> . pop ( ) )
<name5> の <name6> 番目の <name2> 番目でなくまたは <name5> の <name6> 番目の <name2> 番目の <val3> 番目が <name1> より大きいとき、	if not <name5> [ <name6> ] [ <name2> ] or <name5> [ <name6> ] [ <name2> ] [ <val3> ] > <name1> :	list ( not <name5> [ <name6> ] [ <name2> ] or <name5> [ <name6> ] [ <name2> ] [ <val3> ] > <name1> :
<name5> が <val2> と等しくかつ <name4> が <val2> より小さくかつ <name1> が <val2> より小さいとき、	if <name5> == <val2> and <name4> < <val2> and <name1> < <val2> :	for <name5> == <val2> and <name4> < <val2> and <name1> < <val2> :
<name1> から <name3> に <val4> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> , <name3> + <val4> ) :	) for <name5> in range ( <name1> , <name3> + <val4> ) :
<name5> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name2> 、 <name3> とする	<name1> , <name2> , <name3> = map ( int , <name5> . split ( ) )	<name1> , <name2> , <name3> = map ( int , <name5> . split ( ) )
<name4> が <name1> と等しいかどうかが <val6> と等しいとき、	if <name4> == <name1> == <val6> :	> if <name4> == <name1> == <val6> :
<name6> が <name2> 以下かつ <name1> が <name3> 以下かつ <name4> が <name5> 以下かつ <val6> に <name6> を掛けた値に <val2> に <name1> を掛けた値を加えた値に <val6> に <name4> を掛けた値を加えた値が <name1> 以下のとき、	if <name6> <= <name2> and <name1> <= <name3> and <name4> <= <name5> and <val6> * <name6> + <val2> * <name1> + <val6> * <name4> <= <name1> :	<= if <name6> <= <name2> and <name1> <= <name3> and <name4> <= <name5> and <val6> <= <name6> * <name6> + <val2> * <name1> + <val6> * <name4> <= <name1> :
( <val3> 、 <val5> ) の組を <name6> とする	<name6> = ( <val3> , <val5> )	<name6> = ( <val3> , <val5> )
<name1> ( ) の整数値を <name5> とする	<name5> = int ( <name1> ( ) )	str = int ( <name1> ( ) )
<name3> に <name6> から <name4> を引いた値に <name5> を掛けた値を加えた値を <name3> とする	<name3> = <name3> + ( <name6> - <name4> ) * <name5>	<name3> = <name3> + ( <name6> - <name4> ) * <name5>
<val5> を <name2> を <name1> とするとするを <name4> とする	<name4> = <name1> = <name2> = <val5>	<name3> = <name1> = <name2> = <val5>
<name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] ) を <name3> の <name1> にする	<name3> . <name1> = <name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] )	<name3> . <name1> = <name6> ( <name1> [ <val2> ] , <name1> [ <val4> ] )
<name2> に <val5> を加えた値が <name6> より小さいとき、	if <name2> + <val5> < <name6> :	for <name2> in <name2> + <val5> < <name6> :
0 から <name5> の <name3> 番目に <val6> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name5> [ <name3> ] + <val6> ) :	) : for <name1> in range ( <name5> [ <name3> ] + <val6> ) :
<name2> の <name3> の <val5> 番目から、つまり末尾までの部分列に [ MASK ] を挿入する	<name2> . insert ( <name3> [ <val5> : ] )	<name6> . insert ( <name3> [ <val5> : ] )
<name3> を <val2> から <name5> を引いた値を <val4> で割った商に <val6> を掛けた値に <val1> を加えた値だけ増加させる	<name3> += ( <val2> - <name5> ) // <val4> * <val6> + <val1>	<name3> += ( <val2> - <name5> ) // <val4> * <val6> + <val1>
<name5> を <name1> の <name4> 番目から <name3> の <name4> 番目を引いた値の <val2> 乗だけ増加させる	<name5> += ( <name1> [ <name4> ] - <name3> [ <name4> ] ) ** <val2>	<name2> += ( <name1> [ <name4> ] - <name3> [ <name4> ] ) ** <val2>
<name3> から <val1> を引いた値を <val4> で割った商を <name3> とする	<name3> = ( <name3> - <val1> ) // <val4>	<name3> = ( <name3> - <val1> ) // <val4>
<name3> の <name6> 番目に <val5> を加えた値を <name3> の <name6> に <val5> を加えた値番目にする	<name3> [ <name6> + <val5> ] = <name3> [ <name6> ] + <val5>	( <name3> [ <name6> + <val5> ] = <name3> [ <name6> ] + <val5> )
<name6> の <name4> を <name5> で割った商から、つまり末尾までの部分列を <name3> だけ増加させる	<name6> [ <name4> // <name5> : ] += <name3>	<name3> [ <name4> // <name5> : ] += <name3>
無限の整数列を <val5> 倍にする	count *= <val5>	inf *= <val5>
<name5> を <val4> だけ右シフトした値を <name6> とするを <name1> とする	<name1> = <name6> = <name5> >> <val4>	<name1> = <name6> = <name5> >> <val4>
<name2> ( <name5> - <name1> , <name3> - <name1> ) を <name6> とする	<name6> = <name2> ( <name5> - <name1> , <name3> - <name1> )	<name6> = <name2> ( <name5> - <name1> , <name3> - <name1> )
<name4> の <name5> の <name1> 番目から <name4> の <name6> の <name1> 番目の長さ未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> . <name5> [ <name1> ] , len ( <name4> . <name6> [ <name1> ] ) ) :	for <name3> in range ( <name4> . <name5> [ <name1> ] , len ( <name4> . <name6> [ <name1> ] ) ) :
<name6> の、つまり先頭から <name5> 番目までの部分列の各要素を <name2> とし、 <name1> の <name4> から <name2> を引いた値番目のときの <val3> の列の長さを出力する	print ( len ( [ <val3> for <name2> in <name6> [ : <name5> ] if <name1> [ <name4> - <name2> ] ] ) )	print ( len ( [ <val3> for <name2> in <name6> [ : <name5> ] if <name1> [ <name4> - <name2> ] ] ) )
<name6> でなくかつ <name1> でなくかつ <name3> でなくかつ <name4> でなくかつ <name5> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name6> and not <name1> and not <name3> and not <name4> and not <name5> : <blk> break </blk>	re if ( not <name6> and not <name1> ) and not <name3> and not <name4> and not <name5> : <blk> break </blk>
<name2> ( <name6> -1 , <name1> ) を <name4> とする	<name4> = <name2> ( <name6> - 1 , <name1> )	<name4> = <name2> ( <name6> - 1 , <name1> )
( <name6> の <name5> と等しい要素の最初の位置、 <name1> ) からなる列を <name2> の <name5> の整数値番目にする	<name2> [ int ( <name5> ) ] = [ <name6> . index ( <name5> ) , <name1> ]	<name2> [ int ( <name5> ) ] = [ <name6> . index ( <name5> ) , <name1> ]
<name4> ( ) のリストを <name6> とする	<name6> = list ( <name4> ( ) )	( <name6> = list ( <name4> ( ) ) )
0 から <name3> 未満までの数列を順に <name2> として、繰り返す <blk> <name2> に <val5> を加えた値、 <name4> の <name2> 番目の整数値を出力する </blk>	for <name2> in range ( <name3> ) : <blk> print ( <name2> + <val5> , int ( <name4> [ <name2> ] ) ) </blk>	: for <name2> in range ( <name3> ) : <blk> print ( <name2> + <val5> , int ( <name4> [ <name2> ] ) ) </blk>
<name3> の <name4> の <name6> 番目を <name1> だけ増加させる	<name3> . <name4> [ <name6> ] += <name1>	<name3> . <name4> [ <name6> ] += <name1>
<name4> の <name3> 番目が <name4> の <name3> から <val6> を引いた値番目より小さいとき、	if <name4> [ <name3> ] < <name4> [ <name3> - <val6> ] :	[ if <name4> [ <name3> ] < <name4> [ <name3> - <val6> ] :
<name1> ( <name5> . <name6> [ <val3> : ] )	<name1> ( <name5> . <name6> [ <val3> : ] )	<name1> ( <name5> . <name6> [ <val3> : ] )
<name2> ( <name1> , <val5> , <name3> )	<name2> ( <name1> , <val5> , <name3> )	( <name2> ( <name1> , <val5> , <name3> ) )
<name5> に <name2> を加えた値、 <name4> に <name1> を加えた値を <name6> 、 <name3> とする	<name6> , <name3> = <name5> + <name2> , <name4> + <name1>	<name6> , <name3> = <name5> + <name2> , <name4> + <name1>
<name4> と <name6> の論理積を <name1> とする	<name1> = <name4> & <name6>	( <name1> = <name4> & <name6> )
<name6> の <val2> 番目から <name1> を引いた値の <val5> 乗が <name3> 以上のとき、	if ( <name6> [ <val2> ] - <name1> ) ** <val5> >= <name3> :	>= ( <name6> [ <val2> ] - <name1> ) ** <val5> >= <name3> :
<name6> の <name3> 番目に <name4> を加えた値を <name2> とする	<name2> = <name6> [ <name3> ] + <name4>	<name2> = <name6> [ <name3> ] + <name4>
<name4> の <val5> 番目が <val3> より大きくかつ <name6> の <name1> の <name2> 番目が <name6> の <name1> の <name4> の先頭番目より小さいとき、	if <name4> [ <val5> ] > <val3> and <name6> . <name1> [ <name2> ] < <name6> . <name1> [ <name4> [ <val3> ] ] :	for <name4> in <name4> [ <val5> ] > <val3> and <name6> . <name1> [ <name2> ] < <name6> . <name1> [ <name4> [ <val5> ] ] :
<name1> の <name2> 番目を <name3> の <name5> に <name2> を加えた値番目にする	<name3> [ <name5> + <name2> ] = <name1> [ <name2> ]	<name3> [ <name5> + <name2> ] = <name1> [ <name2> ]
<name6> が、つまり未定値と等しいとき、	if <name6> == None :	while <name6> == None :
<name1> 、 <name6> 、 <name4> を <name2> の <name1> 、 <name2> の <name6> 、 <name2> の <name4> とする	<name2> . <name1> , <name2> . <name6> , <name2> . <name4> = <name1> , <name6> , <name4>	<name2> . <name1> , <name2> . <name6> , <name2> . <name4> = <name1> , <name6> , <name4>
<name5> をパラメータとして ( <name5> の <name1> 、 <name5> の <name2> ) の組を返す関数を <name6> として <name4> をソートする	<name4> . sort ( <name6> = lambda <name5> : ( <name5> . <name1> , <name5> . <name2> ) )	<name2> . sort ( <name6> = lambda <name5> : ( <name5> . <name1> , <name5> . <name2> ) )
<name6> の x 座標が <name4> の x 座標より小さいかどうかを返す	return <name6> . x < <name4> . x	x return <name6> . x < <name4> . x
<name4> を <name1> とする <val6> を <name3> とする	<name1> = <name4> <name3> = <val6>	else = <name4> <name3> = <val6>
<name3> 、 <name6> 、 <name2> の最小値の最小値を <name3> とする	<name3> = min ( <name3> , min ( <name6> , <name2> ) )	<name3> = min ( <name3> , min ( <name6> , <name2> ) )
<name2> [ <name1> [ <val4> ] ] . <name3> ( )	<name2> [ <name1> [ <val4> ] ] . <name3> ( )	set ( <name2> [ <name1> [ <val4> ] ] . <name3> ( ) )
<name5> ( <name1> . <name4> )	<name5> ( <name1> . <name4> )	<name5> ( <name1> . <name4> )
<val5> を書式として <name6> 、 <name3> で整形した文字列を出力する	print ( <val5> . format ( <name6> , <name3> ) )	print ( <val5> . format ( <name6> , <name3> ) )
<name2> と <name1> の <name5> 番目の論理和が <name2> と等しいとき、	if <name2> | <name1> [ <name5> ] == <name2> :	for <name2> in ( <name1> [ <name5> ] ) == <name2> :
<name4> の <name2> の <name6> に <val5> を加えた値番目の <name1> に <val5> を加えた値番目を <name4> の <name3> で割った余りにする	<name4> . <name2> [ <name6> + <val5> ] [ <name1> + <val5> ] % = <name4> . <name3>	<name1> . <name2> [ <name6> + <val5> ] [ <name1> + <val5> ] % = <name4> . <name3>
<name2> ( <name6> , <name1> )	<name2> ( <name6> , <name1> )	set ( <name2> ( <name6> , <name1> ) )
<name1> の <val5> 番目の整数値を <name3> とする	<name3> = int ( <name1> [ <val5> ] )	<name3> = int ( <name1> [ <val5> ] )
<name4> が <val5> と等しいとき、 <blk> 真を返す </blk>	if <name4> == <val5> : <blk> return True </blk>	<blk> if <name4> == <val5> : <blk> return True </blk>
<val3> を書式として <name4> の <name6> 、 <name1> 、 <name4> の <name2> 、 <name4> の <name5> 、 <name3> で整形した文字列を返す	return <val3> . format ( <name4> . <name6> , <name1> , <name4> . <name2> , <name4> . <name5> , <name3> )	return <val3> . format ( <name4> . <name6> , <name1> . <name4> . <name2> , <name4> . <name5> , <name3> )
<name6> を <name2> との論理和にする	<name6> | = <name2>	( <name6> | = <name2> )
<name4> . <name1> ( <name2> ( <name5> , <name6> ) ) を <name3> とする	<name3> = <name4> . <name1> ( <name2> ( <name5> , <name6> ) )	<name3> = <name4> . <name1> ( <name2> ( <name5> , <name6> ) )
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name1> とする	<name3> , <name6> , <name1> = map ( int , <name2> . split ( ) )	<name3> , <name6> , <name1> = map ( int , <name2> . split ( ) )
<name3> の <val5> 番目が <val5> と等しいとき、 <blk> <name2> の <name3> の <val6> 番目番目の末尾に <name3> の <val4> 番目を追加する </blk>	if <name3> [ <val5> ] == <val5> : <blk> <name2> [ <name3> [ <val6> ] ] . append ( <name3> [ <val4> ] ) </blk>	<blk> if <name3> [ <val5> ] == <val5> : <blk> <name2> [ <name3> [ <val6> ] ] . append ( <name3> [ <val4> ] ) </blk>
<name6> から読み込んだ一行を <name2> とする	<name2> = <name6> . <name2>	<name2> = <name6> . readline ( )
<name6> の <name3> に <val1> を加えた値番目を -1 だけ減少させる	<name6> [ <name3> + <val1> ] -= - <val1>	<name1> [ <name3> + <val1> ] -= - <val1>
<val2> から <val3> の <val5> 乗の <val4> 乗に <val6> を加えた値の整数値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val2> , int ( ( <val3> ** <val5> ) ** <val4> + <val6> ) ) :	range for <name1> in range ( <val2> , int ( <val3> ** <val5> ** <val4> + <val6> ) ) :
ON_SEGMENT を返す	return 'ON_SEGMENT'	return isnumeric ( )
<name3> の -32 番目から、つまり末尾までの部分列を出力する	print ( <name3> [ - 32 : ] )	print ( <name3> [ - 3 : ] )
<name1> を <val2> で割った余りを <name6> とする	<name6> = <name1> % <val2>	( <name6> = <name1> % <val2> )
<name3> が <name2> に含まれないとき、	if <name3> not in <name2> :	if not <name3> not in <name2> :
<name4> . <name6> [ <val3> ] == <name2> . <name6> [ <val3> ] かつ <name4> . <name6> [ <val5> ] == <name2> . <name6> [ <val5> ] かつ <name4> . <name6> [ <val1> ] が <name2> . <name6> [ <val1> ] と等しくかつ <name4> . <name6> の <val4> 番目が <name2> . <name6> の <val4> 番目と等しくかつ <name4> の <name6> の <val6> 番目が <name2> の <name6> の <val6> 番目と等しくかつ <name4> の <name6> の <val3> 番目が <name2> の <name6> の <val3> 番目と等しいかどうかを返す	return ( <name4> . <name6> [ <val3> ] == <name2> . <name6> [ <val3> ] and <name4> . <name6> [ <val5> ] == <name2> . <name6> [ <val5> ] and <name4> . <name6> [ <val1> ] == <name2> . <name6> [ <val1> ] and <name4> . <name6> [ <val4> ] == <name2> . <name6> [ <val4> ] and <name4> . <name6> [ <val6> ] == <name2> . <name6> [ <val6> ] and <name4> . <name6> [ <val3> ] == <name2> . <name6> [ <val3> ] )	<name4> = <name4> . <name6> [ <val3> ] == <name2> . <name6> [ <val3> ] and <name4> . <name6> [ <val5> ] == <name2> . <name6> [ <val5> ] and <name4> . <name6> [ <val1> ] == <name2> . <name6> [ <val1> ] and <name4> . <name6> [ <val4> ] == <name2> . <name6> [ <val4> ] and <name4> . <name6> [ <val4> ] == <name6> [ <val3> ]
os . <name3> の <name2> 番目を <name6> だけ増加させる	<name3> [ <name2> ] += <name6>	( <name3> [ <name2> ] += <name6> )
<name3> ( <name1> = <name1> ) を <name6> とする	<name6> = <name3> ( <name1> = <name1> )	else = <name3> ( <name1> = <name1> )
<name2> を <name1> の <name6> の <name4> 番目にする	<name1> . <name6> [ <name4> ] = <name2>	( <name1> [ <name6> . <name4> ] = <name2> )
改行せずに <val5> を <name1> で割った余りを出力する	print ( <val5> % <name1> , end = '' )	print ( <val5> % <name1> , end = '' )
<name6> の各要素に整数を適用した列を順に <name3> として、繰り返す	for <name3> in map ( int , <name6> ) :	( <name3> in map ( int , <name6> ) :
<name2> [ <name5> ] ( <name3> , <name6> ) を返す	return <name2> [ <name5> ] ( <name3> , <name6> )	assert <name2> [ <name5> ] ( <name3> , <name6> )
<name6> ( <name2> -1 , <name1> , ( <name5> , <name3> ) )	<name6> ( <name2> - 1 , <name1> , ( <name5> , <name3> ) )	set ( <name6> ( <name2> - 1 , <name1> , ( <name5> , <name3> ) ) )
<name6> ( <name3> . <name2> + <name1> . <name2> , <name3> . <name5> + <name1> . <name5> ) を返す	return <name6> ( <name3> . <name2> + <name1> . <name2> , <name3> . <name5> + <name1> . <name5> )	x return <name6> ( <name3> . <name2> + <name1> . <name2> , <name3> . <name5> + <name1> . <name5> )
<name3> を <name1> の <name5> 番目にする	<name1> [ <name5> ] = <name3>	( <name1> [ <name5> ] = <name3> )
<name4> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name2> 、 <name5> 、 <name6> とする	<name2> , <name5> , <name6> = map ( int , <name4> . readline ( ) . split ( ) )	<name4> , <name6> = map ( int , <name4> . readline ( ) . split ( ) )
<val6> から <name1> 未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val6> , <name1> ) :	'?' for <name4> in range ( <val6> , <name1> ) :
<name4> . <name6> ( ) を <name3> とする	<name3> = <name4> . <name6> ( )	<name3> = <name4> . <name6> ( )
<name2> . <name1> ( <name5> ) を <name1> とする	<name1> = <name2> . <name1> ( <name5> )	<name1> = <name2> . <name1> ( <name5> )
<val3> から <name2> から <val5> を引いた値未満までの -1 間隔の数列を順に <name1> として、繰り返す	for <name1> in range ( <val3> , <name2> - <val5> , - <val5> ) :	continue for <name1> in range ( <val3> , <name2> - <val5> , - <val5> ) :
<name3> の先頭を取り出した値を <name1> とする <val6> を <name4> とする空列を <name2> とする	<name1> = <name3> . pop ( ) <name4> = <val6> <name2> = [ ]	<name2> = <name3> . pop ( ) <name4> = <val6> <name2> = [ ]
<name6> ( <name3> , ( <name2> + <name5> , <name4> ) )	<name6> ( <name3> , ( <name2> + <name5> , <name4> ) )	set ( <name6> ( <name3> , ( <name2> + <name5> , <name4> ) ) )
<name3> の <name2> が <name2> と等しいとき、	if <name3> . <name2> == <name2> :	list if <name3> . <name2> == <name2> :
<val1> から <name3> 未満までの数列の各要素を <name4> とし、 <val1> から <name4> に <val5> を加えた値未満までの数列の各要素を <name2> とし、 <val1> の列の列を <name6> とする	<name6> = [ [ <val1> for <name2> in range ( <name4> + <val5> ) ] for <name4> in range ( <name3> ) ]	<name6> = [ [ <val1> for <name2> in range ( <name4> + <val5> ) ] for <name4> in range ( <name3> ) ]
<name5> が <val4> より小さい間、次を繰り返す <blk> <name5> を <name1> の長さだけ増加させる </blk>	while <name5> < <val4> : <blk> <name5> += len ( <name1> ) </blk>	\ <name5> < <val4> : <blk> <name5> += len ( <name1> ) </blk>
<name6> ( <name5> , <name4> ) を <name2> の <name4> 番目にする	<name2> [ <name4> ] = <name6> ( <name5> , <name4> )	<name2> [ <name4> ] = <name6> ( <name5> , <name4> )
<name2> の先頭が <val5> で始まるとき、	if <name2> . startswith ( <val5> ) :	or <name2> [ 0 ] . startswith ( <val5> ) :
<name6> の <name2> 番目を順に <name1> 、 <name5> として、繰り返す	for <name1> , <name5> in <name6> [ <name2> ] :	for <name1> , <name5> in <name6> [ <name2> ] :
<name2> が <name4> の <name5> の <name4> の <name1> 番目と等しくないとき、	if <name2> != <name4> . <name5> [ <name4> . <name1> ] :	raise <name2> != <name4> . <name5> [ <name4> . <name1> ] :
<name2> の <name1> の <name5> の先頭番目の末尾に ( <name5> の <val4> 番目、 <name5> の <val6> 番目 ) の組を追加する	<name2> . <name1> [ <name5> [ 0 ] ] . append ( ( <name5> [ <val4> ] , <name5> [ <val6> ] ) )	<name4> . <name1> [ <name5> [ 0 ] ] . append ( ( <name5> [ <val4> ] , <name5> [ <val6> ] ) )
<name5> に <name6> の <val4> 乗を掛けた値に <val4> に <name2> を掛けた値に <name6> を掛けた値を加えた値に <name1> を加えた値を <name3> とする	<name3> = <name5> * <name6> ** <val4> + <val4> * <name2> * <name6> + <name1>	else = <name5> * <name6> ** <val4> + <val4> * <name2> * <name6> + <name1>
<name4> と <name1> を割ったときの ( 商を展開し、それぞれ <name3> 、 <name5> とする	<name3> , <name5> = divmod ( <name4> , <name1> )	<name3> , <name5> = divmod ( <name4> , <name1> )
<name1> を <name2> に <name3> を掛けた値を <name4> で割った値だけ増加させる	<name1> += <name2> * <name3> / <name4>	( <name1> += ( <name2> * <name3> ) / <name4> )
<name3> の末尾に 0 から <name2> 未満までの数列の各要素を <name5> とし、 <name4> の <name5> 番目が <val1> と等しいときの <name6> の <name5> 番目の列の総和を追加する	<name3> . append ( sum ( [ <name6> [ <name5> ] for <name5> in range ( <name2> ) if <name4> [ <name5> ] == <val1> ] ) )	<name5> . append ( sum ( [ <name6> [ <name5> ] for <name5> in range ( <name2> ) if <name4> [ <name5> ] == <val1> ] ) )
<name3> . <name6> . <name6> . <name4> ( ) のとき、	if <name3> . <name6> . <name6> . <name4> ( ) :	for <name3> in <name3> . <name6> . <name6> . <name4> ( ) :
<name3> ( <name6> , ( <name5> + <name4> , <name2> ) )	<name3> ( <name6> , ( <name5> + <name4> , <name2> ) )	<name1> ( <name3> ( <name6> , ( <name5> + <name4> , <name2> ) ) )
{ 0 : 02 d } : { 1 : 02 d } : { 2 : 02 d }を書式として <name3> 、 <name2> 、 <name4> で整形した文字列を出力する	print ( '{0:02d}:{1:02d}:{2:02d}' . format ( <name3> , <name2> , <name4> ) )	n print ( '{:02d}:{:02d}:{:02d}' . format ( <name3> , <name2> , <name4> ) )
<name4> の <name6> 番目の末尾に <name2> ( <name3> , <val5> , <name1> ( <name4> [ <name3> ] ) -1 ) を追加する	<name4> [ <name6> ] . append ( <name2> ( <name3> , <val5> , <name1> ( <name4> [ <name3> ] ) - 1 ) )	<name6> [ append ] . append ( <name2> ( <name3> , <val5> , <name1> ( <name4> [ <name3> ] ) - 1 ) )
<name2> の整数値を <name5> とする	<name5> = int ( <name2> )	<name6> = int ( <name2> )
入力された文字列の先頭を <name2> とする	<name2> = input ( ) [ 0 ]	<name2> = input ( ) [ 0 ]
<name2> の <val5> に ( <val5> ) からなる列の <val4> 回分の列を挿入する	<name2> . insert ( <val5> , [ <val5> ] * <val4> )	<name1> . insert ( <val5> , [ <val5> ] * <val4> )
<name5> の <name3> 番目を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = <name5> [ <name3> ]	( <name4> , <name1> , <name6> = <name5> [ <name3> ] )
<name2> の <name3> の <val4> 番目、 <name2> の <name3> の先頭、 <name2> の <name3> の <val5> 番目、 <name2> の <name3> の <val1> 番目を <name2> の <name3> の先頭、 <name2> の <name3> の <val1> 番目、 <name2> の <name3> の <val4> 番目、 <name2> の <name3> の <val5> 番目とする	<name2> . <name3> [ 0 ] , <name2> . <name3> [ <val1> ] , <name2> . <name3> [ <val4> ] , <name2> . <name3> [ <val5> ] = <name2> . <name3> [ <val4> ] , <name2> . <name3> [ 0 ] , <name2> . <name3> [ <val5> ] , <name2> . <name3> [ <val1> ]	<name6> . <name3> [ 0 ] , <name2> . <name3> [ <val1> ] , <name2> . <name3> [ <val4> ] , <name2> . <name3> [ <val5> ] = <name2> . <name3> [ <val4> ] , <name2> . <name3> [ 0 ] , <name2> . <name3> [ <val5> ] , <name2> . <name3> [ <val1> ]
<name2> の末尾に <name6> に <name3> を加えた値を追加する	<name2> . append ( <name6> + <name3> )	<name4> . append ( <name6> + <name3> )
<name4> ( <name5> , <name3> , <name2> ) を <name1> とする	<name1> = <name4> ( <name5> , <name3> , <name2> )	<name1> = <name4> ( <name5> , <name3> , <name2> )
<val5> が <name6> に <name2> を加えた値以下かどうかが <name1> より小さくないとき、	if not <val5> <= ( <name6> + <name2> ) < <name1> :	re . not ( <val5> <= <name6> + <name2> ) < <name1> :
<name4> の <val2> 番目を <val2> だけ増加させる	<name4> [ <val2> ] += <val2>	<name2> [ <val2> ] += <val2>
<name4> を順に <name3> 、 <name6> として、繰り返す	for <name3> , <name6> in <name4> :	from <name3> , <name6> in <name4> :
<name3> に <name2> から <name6> を引いた値を加えた値を <name1> とする	<name1> = <name3> + ( <name2> - <name6> )	<name4> = <name3> + ( <name2> - <name6> )
<val4> を <name3> の <name6> の先頭番目にする	<name3> [ <name6> [ <val4> ] ] = <val4>	<name5> [ <name3> [ <name6> [ 0 ] ] = <val4>
<name2> に <name4> を掛けた値に <name4> に <name6> を掛けた値を加えた値に <name6> に <name2> を掛けた値を加えた値に <val3> を掛けた値を <name5> とする	<name5> = ( <name2> * <name4> + <name4> * <name6> + <name6> * <name2> ) * <val3>	<name5> = ( <name2> * <name4> + <name4> * <name6> + <name6> * <name2> ) * <val3>
<name2> 、 <name1> に <val3> を加えた値の最小値を <name2> とする	<name2> = min ( <name2> , <name1> + <val3> )	<name2> = min ( <name2> , <name1> + <val3> )
<name3> の逆順を順に <name2> として、繰り返す	for <name2> in <name3> [ : : - 1 ] :	for <name2> in <name3> [ : : - 1 ] :
<name5> の末尾に <name1> を追加する	<name5> . append ( <name1> )	<name1> . append ( <name1> )
<name2> の <val6> 番目から <val5> 番目までの部分列を <name3> とする	<name3> = <name2> [ <val6> : <val5> ]	<name3> = <name2> [ <val6> : <val5> ]
<name2> を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name3> 、 <name6> 、 <name5> とする	<name3> , <name6> , <name5> = map ( int , <name2> . split ( ) )	<name3> , <name6> , <name5> = map ( int , <name2> . split ( ) )
<name1> に <name5> を加えた値を <val2> で割った余りが <val3> と等しいとき、	if ( <name1> + <name5> ) % <val2> == <val3> :	continue ( <name1> + <name5> ) % <val2> == <val3> :
<name5> が <val3> と等しいとき、 <blk> <name4> を <name2> から <val3> を引いた値に <name6> を掛けた値だけ増加させる </blk>	if <name5> == <val3> : <blk> <name4> += ( <name2> - <val3> ) * <name6> </blk>	for <name5> == <val3> : <blk> <name4> += ( <name2> - <val3> ) * <name6> </blk>
0 から <val2> に <name3> を掛けた値未満までの数列の各要素を <name5> とし、 <name5> に <val4> を加えた値の列を <name6> とする	<name6> = [ <name5> + <val4> for <name5> in range ( <val2> * <name3> ) ]	<name4> = [ <name5> + <val4> for <name5> in range ( <val2> * <name3> ) ]
0 から <name2> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の列を <name3> とする	<name3> = [ input ( ) for <name5> in range ( <name2> ) ]	<name6> = [ input ( ) for <name5> in range ( <name2> ) ]
<name4> の <name1> 番目に <name6> を追加した集まり	<name4> [ <name1> ] . add ( <name6> )	<name1> [ <name1> ] . add ( <name6> )
<name1> から <name4> 未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <name1> , <name4> ) :	: for <name6> in range ( <name1> , <name4> ) :
<name4> . <name3> ( <name1> ) が <name4> . <name3> ( <name5> ) と等しいかどうかを返す	return <name4> . <name3> ( <name1> ) == <name4> . <name3> ( <name5> )	x return <name4> . <name3> ( <name1> ) == <name4> . <name3> ( <name5> )
<val2> から <name6> から <val3> を引いた値、 <name1> の最小値に <val3> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , min ( <name6> - <val3> , <name1> ) + <val3> ) :	. for <name4> in range ( <val2> , min ( <name6> - <val3> , <name1> ) + <val3> ) :
<name5> の <name2> に <val6> を加えた値番目の <name4> 番目の <name3> 番目が <name1> より大きいとき、	if <name5> [ <name2> + <val6> ] [ <name4> ] [ <name3> ] > <name1> :	list ( <name5> [ <name2> + <val6> ] [ <name4> ] [ <name3> ] > <name1> ) :
<name2> . <name6> ( <val1> )	<name2> . <name6> ( <val1> )	max ( <name2> . <name6> ( <val1> ) )
<val2> 、 <name3> から <name4> を引いた値の最大値を <name5> とする <name6> から <val5> を引いた値、 <name3> に <name4> を加えた値の最小値を <name1> とする	<name5> = max ( <val2> , <name3> - <name4> ) <name1> = min ( <name6> - <val5> , <name3> + <name4> )	else = max ( <val2> , <name3> - <name4> ) <name1> = min ( <name6> - <val5> , <name3> + <name4> )
<name2> に <name5> を加えた値を <val4> で割った商を <name6> とする	<name6> = ( <name2> + <name5> ) // <val4>	<name6> = ( <name2> + <name5> ) // <val4>
<name4> の <name5> を <name3> の <name2> 番目にする	<name3> [ <name2> ] = <name4> . <name5>	<name3> [ <name2> ] = <name4> . <name5>
( <val2> ) からなる列の <name6> に <name4> を加えた値回分の列を <name3> とする	<name3> = [ <val2> ] * ( <name6> + <name4> )	<name3> = [ <val2> ] * ( <name6> + <name4> )
<name3> の <name4> の <name6> を <name3> とする	<name3> = <name3> . <name4> . <name6>	<name3> = <name3> . <name4> . <name6>
<name2> に <name6> の <name3> 番目を加えた値を <name5> とする	<name5> = <name2> + <name6> [ <name3> ]	<name5> = <name2> + <name6> [ <name3> ]
<name1> に <name3> を加えた値に <name4> を加えた値に <name6> を加えた値が <name2> と等しいとき、	if ( <name1> + <name3> + <name4> + <name6> == <name2> ) :	list ( <name1> + <name3> + <name4> + <name6> == <name2> ) :
<name1> をパラメータとして <name3> に <val4> に <name2> を掛けた値を加えた値に <name1> を加えた値を返す関数を <name5> とする	<name5> = lambda <name1> : <name3> + <val4> * <name2> + <name1>	<name5> = lambda <name1> : <name3> + <val4> * <name2> + <name1>
( <name2> ) からなる列の <name2> 回分の列を <name6> の <name4> にする	<name6> . <name4> = [ <name2> ] * <name2>	<name2> . <name4> = [ <name2> ] * <name2>
<name5> が <name1> と等しいとき、	if <name5> == <name1> :	: if <name5> == <name1> :
<name4> が <val2> と等しいとき 0 から <name1> 未満までの数列、そうでなければ <name1> から <val3> を引いた値から -1 未満までの -1 間隔の数列を <name5> とする	<name5> = range ( <name1> ) if <name4> == <val2> else range ( <name1> - <val3> , - <val3> , - <val3> )	<name1> = range ( <name1> ) if <name4> == <val2> else range ( <name1> - <val3> , - <val3> )
0 から <name4> 未満までの数列の各要素を <name6> とし、 0 から <name1> 未満までの数列の各要素を <name2> とし、、つまり偽の列の列を <name3> とする	<name3> = [ [ False for <name2> in range ( <name1> ) ] for <name6> in range ( <name4> ) ]	<name3> = [ [ False for <name2> in range ( <name1> ) ] for <name6> in range ( <name4> ) ]
<val6> を間に入れて <name3> の各要素を <name1> とし、 <name1> の列を連結した文字列の整数値を <name4> とする	<name4> = int ( <val6> . join ( [ <name1> for <name1> in <name3> ] ) )	<name4> = int ( <val6> . join ( [ <name1> for <name1> in <name3> ] ) )
<name5> の <name6> が <name4> の <name6> より小さいかどうかを返す	return <name5> . <name6> < <name4> . <name6>	x return <name5> . <name6> < <name4> . <name6>
<name3> をパラメータとして ( - <name3> の <val5> 番目、 <name3> の先頭 ) の組を返す関数をキーとして <name4> のキーと値の集まりをソートした列を <name1> とする	<name1> = sorted ( <name4> . items ( ) , key = lambda <name3> : ( - <name3> [ <val5> ] , <name3> [ 0 ] ) )	<name4> = sorted ( <name4> . items ( ) , key = lambda <name3> : ( - <name3> [ <val5> ] , <name3> [ 0 ] ) )
( <name4> ) からなる列の <name2> の <name3> 回分の列を <name1> とする	<name1> = [ <name4> ] * <name2> . <name3>	<name1> = [ <name4> ] * <name2> . <name3>
<name3> が <name3> の逆順と等しいとき、 <blk> 無限の整数列を <val4> だけ増加させる </blk>	if <name3> == <name3> [ : : - <val4> ] : <blk> count += <val4> </blk>	if <name3> == <name3> [ : : - <val4> ] : <blk> count += <val4> </blk>
<name6> の <name1> 番目が、つまり未定値と等しくなくかつ <name6> の <name1> 番目が <name6> の <name5> 番目と等しいとき <val2> 、そうでなければ <val4> を出力する	print ( <val2> if <name6> [ <name1> ] != None and <name6> [ <name1> ] == <name6> [ <name5> ] else <val4> )	print ( <val2> if <name6> [ <name1> ] != None and <name6> [ <name1> ] == <name6> [ <name5> ] else <val4> )
<name6> を <name6> に <name5> を加えた値で割った値を <name3> とする	<name3> = <name6> / ( <name6> + <name5> )	<name3> = <name6> / ( <name6> + <name5> )
<val5> から <val1> 未満までの数列の各要素を <name6> とし、 <val5> から <val1> 未満までの数列の各要素を <name3> とし、 <val5> の列の列を <name4> とする	<name4> = [ [ <val5> for <name3> in range ( <val1> ) ] for <name6> in range ( <val1> ) ]	<name4> = [ [ <val5> for <name3> in range ( <val1> ) ] for <name6> in range ( <val1> ) ]
<name6> から <val1> 未満までの -1 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> , <val1> , - 1 ) :	for <name4> in range ( <name6> , <val1> , - 1 ) :
( <name2> / <name3> の切り上げ整数値に <name6> を掛けた値、 <name2> / <name1> の切り上げ整数値に <name5> を掛けた値 ) からなる列の最小値を出力する	print ( min ( [ math . ceil ( <name2> / <name3> ) * <name6> , math . ceil ( <name2> / <name1> ) * <name5> ] ) )	print ( min ( [ math . ceil ( <name2> / <name3> ) * <name6> , math . ceil ( <name2> / <name1> ) * <name5> ] ) )
入力された文字列の整数値を <name5> を <name2> とするとするを <name1> とする	<name1> = <name2> = <name5> = int ( input ( ) )	<name6> = <name2> = <name5> = int ( input ( ) )
<name3> の <name5> 番目の <name1> 番目を <val6> だけ増加させる	<name3> [ <name5> ] [ <name1> ] += <val6>	[ <name3> [ <name5> ] [ <name1> ] += <val6>
<name2> の末尾に ( <name6> 、 <name4> ) の組を追加する	<name2> . append ( ( <name6> , <name4> ) )	not <name2> . append ( ( <name6> , <name4> ) )
<name4> の <name3> の <name6> の <val5> 番目から <name1> を引いた値番目の末尾に <name6> の <val2> 番目から <name1> を引いた値を追加する	<name4> . <name3> [ <name6> [ <val5> ] - <name1> ] . append ( <name6> [ <val2> ] - <name1> )	( <name4> . <name3> [ <name6> [ <val5> ] - <name1> ] . append ( <name6> [ <val2> ] - <name1> ) )
<name6> から <val4> を引いた値から <name5> 未満までの -1 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <name6> - <val4> , <name5> , - <val4> ) :	for <name3> in range ( <name6> - <val4> , <name5> , - <val4> ) :
( 、つまり集合、集合 ) からなる列を <name4> とする	<name4> = [ set ( ) , set ( ) ]	<name4> = [ set ( ) , set ( ) ]
( <val5> ) からなる列の <val2> 回分の列を <name1> とする	<name1> = [ <val5> ] * <val2>	<name1> = [ <val5> ] * <val2>
<name5> <name2> <name1> <name6> <name4>	<name5> <name2> <name1> <name6> <name4>	( <name5> <name2> <name1> <name6> <name4> )
<name1> の <name3> に [ MASK ] を書き込むを <name5> とする	<name5> = <name1> . <name3> . <name5>	<name1> . <name5> = <name1> . <name3> . <name5>
<name2> の総和を <name6> とする	<name6> = sum ( <name2> )	<name6> = sum ( <name2> )
<name6> を順に <name2> 、 <name4> 、 <name1> として、繰り返す	for <name2> , <name4> , <name1> in <name6> :	. for <name2> , <name4> , <name1> in <name6> :
<name5> の <name3> 番目の <name4> 番目、 <name5> の <name3> に <val1> を加えた値番目の <name4> 番目の最大値を <name5> の <name3> に <val1> を加えた値番目の <name4> 番目にする	<name5> [ <name3> + <val1> ] [ <name4> ] = max ( <name5> [ <name3> ] [ <name4> ] , <name5> [ <name3> + <val1> ] [ <name4> ] )	now [ <name3> + <val1> ] [ <name4> ] = max ( <name5> [ <name3> ] [ <name4> ] , <name5> [ <name3> + <val1> ] [ <name4> ] )
<name4> をパラメータとして <name4> の先頭を <name4> の <val1> 番目で割った値を返す関数を <name5> として <name3> をソートする	<name3> . sort ( <name5> = lambda <name4> : <name4> [ 0 ] / <name4> [ <val1> ] )	<name3> . sort ( <name5> = lambda <name4> : <name4> [ 0 ] / <name4> [ <val1> ] )
0 から <name2> 未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name2> ) :	) for <name5> in range ( <name2> ) :
<name2> の <name4> の各要素に整数を適用した列のリストを <name6> とする	<name6> = list ( map ( int , <name2> . <name4> ) )	<name6> = list ( map ( int , <name2> . <name4> ) )
<val6> から <name4> に <val6> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <name4> + <val6> ) :	for <name5> in range ( <val6> , <name4> + <val6> ) :
( <val5> ) からなる列の <name3> に <val1> を加えた値回分の列を <name2> とする	<name2> = [ <val5> ] * ( <name3> + <val1> )	<name2> = [ <val5> ] * ( <name3> + <val1> )
<name4> が -1 と等しくまたは <name3> が -1 と等しくまたは <name5> が <val6> より小さいとき、	if <name4> == - 1 or <name3> == - 1 or <name5> < <val6> :	list ( <name4> == - 1 or <name3> == - 1 or <name5> < <val6> :
<val1> に <name2> を掛けた値を出力する	print ( <val1> * <name2> )	print ( <val1> * <name2> )
<name3> の <name5> の末尾に ( <name6> 、 <name2> ) の組を追加する	<name3> . <name5> . append ( ( <name6> , <name2> ) )	<name4> . <name5> . append ( ( <name6> , <name2> ) )
<name5> を <val4> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name3> とする	<name1> , <name3> = map ( int , <name5> . split ( <val4> ) )	<name1> , <name3> = map ( int , <name5> . split ( <val4> ) )
<name3> に <name2> の <name4> 番目を加えた値を <name6> とする	<name6> = <name3> + <name2> [ <name4> ]	else = <name3> + <name2> [ <name4> ]
<name6> の先頭の <name4> 番目のとき <val3> 、そうでなければ <val1> を出力する	print ( <val3> if <name6> [ 0 ] [ <name4> ] else <val1> )	print ( <val3> if <name6> [ <val1> ] [ <name4> ] else <val1> )
<name6> の <name1> 番目の先頭を <name3> とする	<name3> = <name6> [ <name1> ] [ 0 ]	else = <name6> [ <name1> ] [ 0 ]
<val2> を間に入れて <name5> の各要素に整数を適用した列のリストを連結した文字列を出力する	print ( <val2> . join ( list ( map ( str , <name5> ) ) ) )	print ( <val2> . join ( list ( map ( str , <name5> ) ) ) )
<name1> を <val2> に <name6> の <name5> 番目の先頭の文字列を加えた値だけ増加させる	<name1> += <val2> + str ( <name6> [ <name5> ] [ 0 ] )	<name1> += <val2> + str ( <name6> [ <name5> ] [ 0 ] )
\ <name2> ( <val1> % <name5> ) \	\ <name2> ( <val1> % <name5> ) \	\ <name2> ( <val1> % <name5> ) \
0 から <name5> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列の整数値の列を <name2> とする	<name2> = [ int ( input ( ) ) for <name6> in range ( <name5> ) ]	<name6> = [ int ( input ( ) ) for <name6> in range ( <name5> ) ]
<val1> から <val3> 未満までの <val5> 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <val1> , <val3> , <val5> ) :	. for <name2> in range ( <val1> , <val3> , <val5> ) :
<name5> から <name4> を引いた値が <val6> より小さくまたは <name4> が <val6> と等しいとき、 <blk> <val6> を返す </blk>	if <name5> - <name4> < <val6> or <name4> == <val6> : <blk> return <val6> </blk>	\ if <name5> - <name4> < <val6> or <name4> == <val6> : <blk> return <val6> </blk>
( ( <val2> 、 <val2> ) の組 ) からなる列を <name5> とする	<name5> = [ ( <val2> , <val2> ) ]	<name5> = [ ( <val2> , <val2> ) ]
<name4> ( <name1> , <name2> , <name6> )	<name4> ( <name1> , <name2> , <name6> )	str ( <name4> ( <name1> , <name2> , <name6> ) )
<name3> . <name2> ( <name5> , <name4> , <name6> )	<name3> . <name2> ( <name5> , <name4> , <name6> )	<name1> . <name2> ( <name5> , <name4> , <name6> )
<name4> . <name2> ( <name5> , <name6> ) の絶対値が <name4> の <name3> より小さいかどうかを返す	return abs ( <name4> . <name2> ( <name5> , <name6> ) ) < <name4> . <name3>	x return abs ( <name4> . <name2> ( <name5> , <name6> ) ) < <name4> . <name3>
<name6> を順に <name3> 、 <name5> として、繰り返す	for <name3> , <name5> in <name6> :	. for <name3> , <name5> in <name6> :
<name3> を <val5> の <val4> 乗だけ増加させる <name1> を <val5> の <val4> 乗だけ増加させる	<name3> += <val5> ** <val4> <name1> += <val5> ** <val4>	<name4> += <val5> ** <val4> <name1> += <val5> ** <val4>
<name6> の <name1> 番目が <name4> の <name3> 番目より小さいとき、	if <name6> [ <name1> ] < <name4> [ <name3> ] :	for <name6> [ <name1> ] < <name4> [ <name3> ] :
<name5> モジュールを用いる	from <name5> import sqrt , atan2 , acos , sin , cos	from <name5> , Counter
<val6> から <name5> に <val6> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <val6> , <name5> + <val6> ) :	) for <name4> in range ( <val6> , <name5> + <val6> ) :
<name6> の長さが <val4> 以上の間、次を繰り返す	while len ( <name6> ) >= <val4> :	try >= len ( <name6> ) >= <val4> :
<name2> を <val3> 分の一にする	<name2> // = <val3>	pow ( <name2> // = <val3> )
<name4> から <name1> を引いた値を <name3> とする	<name3> = <name4> - <name1>	<name3> = <name4> - <name1>
<name5> . <name6> ( <name5> . <name1> ) を <name3> とする	<name3> = <name5> . <name6> ( <name5> . <name1> )	<name4> = <name5> . <name6> ( <name5> . <name1> )
<name3> を <name1> から <name2> の <name4> に <name5> を加えた値番目の <name6> に <name3> を加えた値番目を引いた値だけ増加させる	<name3> += <name1> - <name2> [ <name4> + <name5> ] [ <name6> + <name3> ]	<name3> += <name1> - <name2> [ <name4> + <name5> ] [ <name6> + <name3> ]
<name1> の末尾に ( <name1> の <name2> 番目の先頭、 <name1> の <name2> 番目の <val6> 番目から <val6> を引いた値 ) からなる列を追加する	<name1> . append ( [ <name1> [ <name2> ] [ 0 ] , <name1> [ <name2> ] [ <val6> ] - <val6> ] )	<name1> . append ( [ <name1> [ <name2> ] [ 0 ] , <name1> [ <name2> ] [ <val6> ] - <val6> ] )
<name3> . <name1> ( <name6> , <name4> . <name2> - <name5> . <name3> ) の絶対値を <name5> とする	<name5> = abs ( <name3> . <name1> ( <name6> , <name4> . <name2> - <name5> . <name3> ) )	else = abs ( <name3> . <name1> ( <name6> , <name4> . <name2> - <name5> . <name3> ) )
<name4> の <name6> に <val2> を加えた値番目を <name5> だけ増加させる	<name4> [ <name6> + <val2> ] += <name5>	<name5> [ <name6> + <val2> ] += <name5>
<name3> の <name5> 番目、 <name3> の <name1> に <val6> を加えた値番目を <name3> の <name1> に <val6> を加えた値番目、 <name3> の <name5> 番目とする	<name3> [ <name1> + <val6> ] , <name3> [ <name5> ] = <name3> [ <name5> ] , <name3> [ <name1> + <val6> ]	<name3> [ <name1> + <val6> ] , <name3> [ <name5> ] = <name3> [ <name5> ] , <name3> [ <name1> + <val6> ]
<name2> を <val1> を <name5> だけ左シフトした値との論理和にする	<name2> | = <val1> << <name5>	( <name2> << = ( <val1> << <name5> ) )
改行せずに <val2> に <name1> [ <name3> ] の <name6> の文字列を加えた値に <val4> を加えた値を出力する	print ( <val2> + str ( <name1> [ <name3> ] . <name6> ) + <val4> , end = '' )	end = <val2> + str ( <name1> [ <name3> ] . <name6> ) + <val4> , end = '' )
<name6> が <name2> の <name3> から <val4> を引いた値から <name1> 番目までの部分列の総和と等しくないとき、 <blk> 繰り返しを中断する </blk>	if <name6> != sum ( <name2> [ <name3> - <val4> : <name1> ] ) : <blk> break </blk>	\ <name6> != sum ( <name2> [ <name3> - <val4> : <name1> ] ) : <blk> break </blk>
( ( <val5> ) からなる列の <val5> から <name2> 未満までの数列の各要素を <name3> とし、 <name1> の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val5> ] * [ <name1> for <name3> in range ( <name2> ) ] ]	<name6> = [ [ <val5> ] * [ <name1> for <name3> in range ( <name2> ) ] ]
<name5> の長さが <val4> と等しくまたは <name5> の -1 番目が <name5> の先頭と等しくない間、次を繰り返す	while len ( <name5> ) == <val4> or <name5> [ - <val4> ] != <name5> [ 0 ] :	del ( len ( <name5> ) == <val4> or <name5> [ - 1 ] != <name5> [ <val4> ] ) :
<name6> が <name1> に含まれないとき、 <blk> <name1> の <val4> に <name6> を挿入する </blk>	if <name6> not in <name1> : <blk> <name1> . insert ( <val4> , <name6> ) </blk>	for <name6> in <name1> : <blk> <name1> . insert ( <val4> , <name6> ) </blk>
<name5> の <name4> を順に <name2> として、繰り返す	for <name2> in <name5> . <name4> :	for <name2> in <name5> . <name4> :
<val6> の浮動小数点数を返す	return float ( <val6> )	yield float ( <val6> )
<name4> に <name1> を掛けた値を <name6> で割った余りを返す	return ( <name4> * <name1> % <name6> )	self = <name4> * <name1> % <name6>
( <name1> 、 <name5> 、 <name6> 、 <name2> 、 <name3> 、 <name4> ) からなる列を返す	return [ <name1> , <name5> , <name6> , <name2> , <name3> , <name4> ]	return [ <name1> , <name5> , <name6> , <name2> , <name3> , <name4> ]
( 、つまり偽 ) からなる列の <name4> に <name4> を掛けた値回分の列を <name1> とする	<name1> = [ False ] * ( <name4> * <name4> )	<name1> = [ False ] * ( <name4> * <name4> )
<name4> ( <name6> , <name2> ) を <name6> とする	<name6> = <name4> ( <name6> , <name2> )	<name6> = <name4> ( <name6> , <name2> )
0 が <name5> と等しいとき、	if ( '0' == <name5> ) :	list == '0' == <name5> :
無限の整数列が <name4> より大きいとき、	if count > <name4> :	for count in count > <name4> :
<name5> から <name6> に <val3> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( <name5> , <name6> + <val3> ) :	for <name2> in range ( <name5> , <name6> + <val3> ) :
<name6> の <name1> が、つまり未定値と等しくないとき、	if <name6> . <name1> is None :	if <name6> . <name1> != None :
<name4> の <name6> 番目の最小値を <name1> とする	<name1> = min ( <name4> [ <name6> ] )	<name1> = min ( <name4> [ <name6> ] )
<name4> ( <name2> . <name3> [ <name6> ] . <name1> )	<name4> ( <name2> . <name3> [ <name6> ] . <name1> )	<name4> ( <name2> . <name3> [ <name6> ] . <name1> )
<name4> を <val1> だけ右シフトする <name5> を <val1> だけ右シフトする	<name4> >> = <val1> <name5> >> = <val1>	not = <name4> >> = <val1> <name5> >> = <val1>
<name1> のとき、 <blk> <val5> から <name2> の <name4> 番目を引いた値を <name2> の <name4> 番目にする </blk>	if <name1> : <blk> <name2> [ <name4> ] = <val5> - <name2> [ <name4> ] </blk>	\ <name2> [ <name4> ] = <name1> : <blk> <name2> [ <name4> ] = <val5> - <name2> [ <name4> ] </blk>
<name4> . <name1> ( <name3> , <name6> , <name2> ) を <name5> とする	<name5> = <name4> . <name1> ( <name3> , <name6> , <name2> )	else = <name4> . <name1> ( <name3> , <name6> , <name2> )
\ <name1> ( <name3> . <name2> ( <val5> , <val6> ) ) を出力する\	\ print ( <name1> ( <name3> . <name2> ( <val5> , <val6> ) ) ) \	for print ( <name1> ( <name3> . <name2> ( <val5> , <val6> ) ) ) \
<name2> に <name3> の <val4> 乗を掛けた値を <name5> とする	<name5> = <name2> * pow ( <name3> , <val4> )	else = <name2> * <name3> ** <val4>
<name6> の <name5> に <name1> に <val2> を加えた値、 - <name4> を追加した集まり	<name6> . <name5> . add ( <name1> + <val2> , - <name4> )	<name5> . add ( <name1> + <val2> , - <name4> )
0 から <name1> 未満までの数列の各要素を <name4> とし、、つまり入力された文字列の列を <name6> とする	<name6> = [ input ( ) for <name4> in range ( <name1> ) ]	<name6> = [ input ( ) for <name4> in range ( <name1> ) ]
<name2> の <name1> 番目でなくかつ <name3> が <val5> より大きいとき、	if not <name2> [ <name1> ] and <name3> > <val5> :	if not <name2> [ <name1> ] and <name3> > <val5> :
<val5>	<val5>	print ( <val5> )
<name6> が <name3> より小さいとき、 <blk> <name2> を <name1> とする <sep> <name3> を <name6> とする </blk>	if ( <name6> < <name3> ) : <blk> <name1> = <name2> <sep> <name6> = <name3> </blk>	\ <name1> = <name6> < <name3> : <blk> <name6> = <name2> <sep> = <name3> </blk>
<name3> を <val1> で割った商を <val4> で割った余りを一旦、返す	yield ( <name3> // <val1> ) % <val4>	yield ( <name3> // <val1> ) % <val4>
( <val1> 、 <val3> 、 <val1> 、 <val3> 、 <val1> 、 <val6> 、 <val1> 、 <val6> ) からなる列を <name4> とする	<name4> = [ <val1> , <val3> , <val1> , <val3> , <val1> , <val6> , <val1> , <val6> ]	<name4> = [ <val1> , <val3> , <val1> , <val1> , <val6> , <val1> , <val6> ]
0 から <name4> に <val1> を加えた値未満までの数列の各要素を <name5> とし、 <name5> の列を <name6> の <name3> にする	<name6> . <name3> = [ <name5> for <name5> in range ( <name4> + <val1> ) ]	<val6> . <name3> = [ <name5> for <name5> in range ( <name4> + <val1> ) ]
<name3> . <name4> ( ) を順に <name6> として、繰り返す	for <name6> in <name3> . <name4> ( ) :	for <name6> in <name3> . <name4> ( ) :
0 から <val6> 未満までの数列の各要素を <name4> とし、 <name4> の列の辞書カウンタを <name2> とする	<name2> = Counter ( [ <name4> for <name4> in range ( <val6> ) ] )	<name2> = Counter ( [ <name4> for <name4> in range ( <val6> ) ] )
<name1> の <val6> 番目を反転した列を展開してを出力する	print ( * reversed ( <name1> [ <val6> ] ) )	<name1> [ <val6> ] ) print ( * reversed ( <name1> [ <val6> ] ) )
0 から <name6> 未満までの数列の各要素を <name2> とし、 <name1> から読み込んだ一行の整数値の列を <name5> とする	<name5> = [ int ( <name1> . readline ( ) ) for <name2> in range ( <name6> ) ]	<name5> = [ int ( <name1> . readline ( ) ) for <name2> in range ( <name6> ) ]
<name2> ( ) の間、次を繰り返す	while <name2> ( ) :	for <name2> in <name2> ( ) :
<name3> の先頭を取り出した値を展開し、それぞれ <name4> 、 <name1> 、 <name6> とする	<name4> , <name1> , <name6> = <name3> . pop ( )	<name3> , <name4> , <name1> , <name6> = <name3> . pop ( )
<name3> に <name2> を加えた値を <val5> で割った値を <name4> とする	<name4> = ( <name3> + <name2> ) / <val5>	<name4> = ( <name3> + <name2> ) / <val5>
<name3> ( <name1> ) を展開し、それぞれ <name4> 、 <name5> とする	<name4> , <name5> = <name3> ( <name1> )	<name2> , <name4> , <name5> = <name3> ( <name1> )
<name6> の末尾に <name3> . <name5> ( <name1> , <name4> ) 、 <name3> . <name5> ( <name2> , <name4> ) の最大値を追加する	<name6> . append ( max ( <name3> . <name5> ( <name1> , <name4> ) , <name3> . <name5> ( <name2> , <name4> ) ) )	<name5> . append ( max ( <name3> . <name5> ( <name1> , <name4> ) , <name3> . <name5> ( <name2> , <name4> ) ) )
( <val2> 、 <val5> 、 <val4> 、 <val6> ) からなる列を <name3> とする	<name3> = [ <val2> , <val5> , <val4> , <val6> ]	else = [ <val2> , <val5> , <val4> , <val6> ]
<name4> の <name1> が <name3> と等しくなくかつ <name4> の <name1> が、つまり未定値と等しくないとき、	if <name4> . <name1> != <name3> and <name4> . <name1> != None :	if <name4> . <name1> != <name3> and <name4> . <name1> != None :
<name6> から読み込んだ一行を <name4> とする	<name4> = <name6> . <name4>	<name4> = <name6> . readline ( )
<name6> ( <name2> ) を展開し、それぞれ <name4> 、 <name3> 、 <name5> とする	<name4> , <name3> , <name5> = <name6> ( <name2> )	<name2> , <name4> , <name3> , <name5> = <name6> ( <name2> )
<name2> が <name5> の <name6> 番目と等しいとき、	if <name2> == <name5> [ <name6> ] :	for <name2> in <name5> [ <name6> ] :
<name6> に <name3> を掛けた値、 <val4> に <name6> に <name3> を加えた値を掛けた値を出力する	print ( <name6> * <name3> , <val4> * ( <name6> + <name3> ) )	print ( <name6> * <name3> , <val4> * ( <name6> + <name3> ) )
<name5> に <name4> の <name1> 番目を加えた値を <name6> とする	<name6> = <name5> + <name4> [ <name1> ]	else = <name5> + <name4> [ <name1> ]
<name6> に <name1> を加えた値を <val5> で割った商を <name2> とする	<name2> = ( <name6> + <name1> ) // <val5>	<name2> = ( <name6> + <name1> ) // <val5>
<name6> に <name5> を加えた値が <name2> より大きい間、次を繰り返す	while <name6> + <name5> > <name2> :	del ( <name6> + <name5> > <name2> ) :
<val3> <name6> <val2> を <name4> とする	<name4> = <val3> <name6> <val2>	( <val3> <name6> <val2> ) = <val3> <name6> <val2>
<name3> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列の組を <name2> とする	<name2> = tuple ( map ( int , <name3> . readline ( ) . split ( ) ) )	<name2> = tuple ( map ( int , <name3> . readline ( ) . split ( ) ) )
<name4> . <name3> ( <name5> ) のとき、	if <name4> . <name3> ( <name5> ) :	list <name4> . <name3> ( <name5> ) :
0 から <name4> ( ) の整数値未満までの数列の各要素を <name1> とし、 ( <val6> * <name4> ( ) ) . <name3> ( <name5> ) の長さが <val2> より大きいかどうかの列の総和を出力する	print ( sum ( [ len ( ( <val6> * <name4> ( ) ) . <name3> ( <name5> ) ) > <val2> for <name1> in range ( int ( <name4> ( ) ) ) ] ) )	print ( sum ( [ len ( ( <val6> * <name4> ( ) ) . <name3> ( <name5> ) ) > <val2> for <name1> in range ( int ( <name4> ( ) ) ) ] ) )
<name6> ( <name4> [ <val3> ] )	<name6> ( <name4> [ <val3> ] )	<name6> ( <name4> [ <val3> ] )
無限の整数列を <name5> の <name1> 番目の <name6> 番目に <name2> の <name6> 番目を掛けた値だけ増加させる	count += <name5> [ <name1> ] [ <name6> ] * <name2> [ <name6> ]	count += ( <name5> [ <name1> ] [ <name6> ] * <name2> [ <name6> ] )
<name2> . <name5> ( <name4> , ( <name1> , <name3> , <name6> , <name2> ) )	<name2> . <name5> ( <name4> , ( <name1> , <name3> , <name6> , <name2> ) )	<name5> . <name5> ( <name4> , ( <name1> , <name3> , <name6> , <name2> ) )
- <name3> に <val4> を加えた値に <name2> を <name3> で割った商を加えた値を <val5> で割った商を <name6> とする	<name6> = ( - <name3> + <val4> + <name2> // <name3> ) // <val5>	<name6> = ( - <name3> + <val4> + <name2> // <name3> ) // <val5>
<name4> の先頭の <val2> 番目が <val3> と等しいとき、	if <name4> [ <val2> ] [ <val2> ] == <val3> :	if <name4> [ 0 ] [ <val2> ] == <val3> :
<name3> を <val2> で割った値を <name1> とする	<name1> = <name3> / <val2>	( <name1> = <name3> / <val2> )
<name4> の、つまり先頭から <name6> 番目までの部分列、 <name4> の <name6> 番目から <val2> に <name3> を掛けた値までの部分列を <name4> の <val2> に <name3> を掛けた値から <name6> を引いた値から <val2> に <name3> を掛けた値までの部分列、 <name4> の、つまり先頭から <val2> に <name3> を掛けた値から <name6> を引いた値までの部分列とする	<name4> [ <val2> * <name3> - <name6> : <val2> * <name3> ] , <name4> [ 0 : <val2> * <name3> - <name6> ] = <name4> [ 0 : <name6> ] , <name4> [ <name6> : <val2> * <name3> ]	<name2> = <name4> [ : <name6> ] , <name4> [ <name6> : <val2> * <name3> : <name6> ] = <name4> [ <val2> : <name6> ] , <name4> [ <name6> : <val2> * <name3> ]
<name2> が <name6> 内の [ MASK ] の出現回数より大きいとき、	if <name2> > <name6> . count :	isinstance ( <name2> > <name6> . count ( ) ) :
<name1> の <name2> 番目に - <name5> の <name2> 番目を追加した集まり	<name1> [ <name2> ] . add ( - <name5> [ <name2> ] )	<name1> [ <name2> ] . add ( - <name5> [ <name2> ] )
真を <name4> の <name3> 番目にする	<name4> [ <name3> ] = True	( <name4> [ <name3> ] = True )
<name6> に <name2> に <name4> を掛けた値を <name1> で割った値を加えた値を <name5> とする	<name5> = <name6> + <name2> * <name4> / <name1>	<name5> = <name6> + <name2> * <name4> / <name1>
<name6> に <name4> が <val3> と等しいかどうかを掛けた値に <name4> に <name4> が <val3> と等しくないかどうかを掛けた値を加えた値を出力する	print ( <name6> * ( <name4> == <val3> ) + ( <name4> ) * ( <name4> != <val3> ) )	[ print ( <name6> * ( <name4> == <val3> ) ) + ( <name4> ) * ( <name4> != <val3> ) )
<name6> 、 <val2> 、無限の整数列の <name6> 番目を出力する	print ( <name6> , <val2> , count [ <name6> ] )	print ( <name6> , <val2> , count [ <name6> ] )
<name3> の <name1> 番目から <name4> に <val5> を加えた値までの部分列の総和を出力する	print ( sum ( <name3> [ <name1> : <name4> + <val5> ] ) )	print ( sum ( <name3> [ <name1> : <name4> + <val5> ] ) )
0 から <name5> 未満までの数列のリストを <name1> の <name4> にする	<name1> . <name4> = list ( range ( <name5> ) )	dict . <name4> = list ( range ( <name5> ) )
<name1> ( <name5> , <val4> , [ ] ) のとき、	if <name1> ( <name5> , <val4> , [ ] ) :	for <name1> in <name1> ( <name5> , <val4> , [ ] ) :
<name6> の <name3> 番目、 <name6> の <name5> 番目を <name6> の <name5> 番目、 <name6> の <name3> 番目とする	<name6> [ <name5> ] , <name6> [ <name3> ] = <name6> [ <name3> ] , <name6> [ <name5> ]	<name6> [ <name5> ] , <name6> [ <name3> ] = <name6> [ <name3> ] , <name6> [ <name5> ]
<name1> の <name5> ( <val4> , <name6> , <name3> ) の週番目を出力する	print ( <name1> [ <name5> ( <val4> , <name6> , <name3> ) . weekday ( ) ] )	print ( <name1> [ <name5> ( <val4> , <name6> , <name3> ) . weekday ( ) ] )
<val6> から <name1> の長さ未満までの <val4> 間隔の数列を順に <name2> として、繰り返す <blk> <name1> の <name2> 番目が <val3> と等しいとき <name5> に <name1> の <name2> に <val6> を加えた値番目の整数値を加えた値、そうでなければ <name5> に <name1> の <name2> に <val6> を加えた値番目の整数値を掛けた値を <name5> とする </blk>	for <name2> in range ( <val6> , len ( <name1> ) , <val4> ) : <blk> <name5> = <name5> + int ( <name1> [ <name2> + <val6> ] ) if <name1> [ <name2> ] == <val3> else <name5> * int ( <name1> [ <name2> + <val6> ] ) </blk>	\ <name5> in range ( <val6> , len ( <name1> ) , <val4> ) : <blk> <name5> = <name5> + int ( <name1> [ <name2> + <val6> ] ) if <name1> [ <name2> ] == <val3> else <name5> + int ( <name1> [ <name2> + <val6> ] ) * <val6> </blk>
<name2> を <val3> だけ減少させる <val6> を <name1> とする	<name2> -= <val3> <name1> = <val6>	<name2> -= <val3> <name1> = <val6>
<name2> . <name3> ( <name1> [ <name5> [ <val6> ] ] , -1 * <name5> [ <val4> ] )	<name2> . <name3> ( <name1> [ <name5> [ <val6> ] ] , - <val6> * <name5> [ <val4> ] )	<name2> . <name3> ( <name1> [ <name5> [ <val6> ] ] , - <val6> * <name5> [ <val4> ] )
<name5> の長さを <name6> の <name2> 番目にする <name5> の整数値を <name3> の <name2> 番目にする	<name6> [ <name2> ] = len ( <name5> ) <name3> [ <name2> ] = int ( <name5> )	( <name6> [ <name2> ] = len ( <name5> ) <name3> [ <name2> ] = int ( <name5> )
<name5> 内の [ MASK ] の出現回数を返す	return <name5> . count	yield <name5> . count
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name1> 、 <name4> 、 <name6> 、 <name2> 、 <name5> とする	<name1> , <name4> , <name6> , <name2> , <name5> = map ( int , input ( ) . split ( ) )	<name4> , <name6> , <name2> , <name5> = map ( int , input ( ) . split ( ) )
<val5> を間に入れて <name2> が無限大のとき <val4> 、そうでなければ <name6> の各要素を <name2> とし、 <name2> の文字列の列を連結した文字列を出力する	print ( <val5> . join ( ( <val4> if math . isinf ( <name2> ) else [ str ( <name2> ) for <name2> in <name6> ] ) ) )	<val5> . join ( <val5> . join ( [ ( <val4> if math . isinf ( <name2> ) else [ str ( <name2> ) for <name2> in <name6> ] ) ) )
0 から <name5> の <val3> 番目未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name5> [ <val3> ] ) :	for <name4> in range ( <name5> [ <val3> ] ) :
<name5> の <name2> に <name6> に <name4> を掛けた値を加えた値を返す	return <name5> . <name2> + <name6> * <name4>	yield <name5> . <name2> + <name6> * <name4>
0 から <name6> から <name3> を引いた値を <name5> で割った商に <val1> を加えた値未満までの数列を順に <name2> として、繰り返す	for <name2> in range ( ( <name6> - <name3> ) // <name5> + <val1> ) :	) for <name2> in range ( ( <name6> - <name3> ) // <name5> + <val1> ) :
<name4> が <name6> より小さくまたは <name3> の <name1> の <name2> 番目が <val5> 以上のとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name4> < <name6> or <name3> . <name1> [ <name2> ] >= <val5> : <blk> continue </blk>	\ if <name4> < <name6> or <name3> . <name1> [ <name2> ] >= <val5> : <blk> continue </blk>
<name4> の <val2> 番目の整数値を <name6> とする	<name6> = int ( <name4> [ <val2> ] )	else = int ( <name4> [ <val2> ] )
ISONO を出力する	print ( 'ISONO' )	dict print ( 'Data ' )
<name2> を <name3> の総和だけ増加させる	<name2> += sum ( <name3> )	<name2> += sum ( <name3> )
<name1> ( <name5> , <val6> , <name2> ( <name5> ) -1 )	<name1> ( <name5> , <val6> , <name2> ( <name5> ) - 1 )	<name1> ( <name5> , <val6> , <name2> ( <name5> ) - 1 )
<name6> の <name1> 番目の <val4> 番目を出力する	print ( <name6> [ <name1> ] [ <val4> ] )	print ( <name6> [ <name1> ] [ <val4> ] )
<name2> の先頭の先頭、 <name3> の先頭を出力する	print ( <name2> [ 0 ] [ 0 ] , <name3> [ 0 ] )	print ( <name2> [ 0 ] [ 0 ] , <name3> [ 0 ] )
<name4> が <name1> から <val3> を引いた値より小さいとき、 <blk> 空行を出力する </blk>	if <name4> < <name1> - <val3> : <blk> print ( ) </blk>	list if <name4> < <name1> - <val3> : <blk> print ( ) </blk>
入力された文字列を空白で分割した字句列を <name3> の <name1> 番目にする	<name3> [ <name1> ] = input ( ) . split ( )	<name3> [ <name1> ] = input ( ) . split ( )
<name4> が -1 と等しいとき、 <blk> 最初からもう一度、繰り返す </blk>	if <name4> == - 1 : <blk> continue </blk>	try : if <name4> == - 1 : <blk> continue </blk>
/ を <name5> の <name3> 番目の <name4> 番目にする	<name5> [ <name3> ] [ <name4> ] = '/'	( <name5> [ <name3> ] [ <name4> ] = '/' )
<val6> <name3> を <name1> とする	<name1> = <val6> <name3>	<name3> <name1> = <val6> <name3>
0 から <name3> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列をソートした列を <name1> とする	<name1> = sorted ( [ int ( input ( ) ) for <name5> in range ( <name3> ) ] )	<name1> = sorted ( [ int ( input ( ) ) for <name5> in range ( <name3> ) ] )
<val3> から <val5> 未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <val3> , <val5> ) :	: for <name1> in range ( <val3> , <val5> ) :
<val5> に <name1> を掛けた値に <val3> を加えた値を <name1> とする	<name1> = <val5> * <name1> + <val3>	<name1> = <val5> * <name1> + <val3>
<name6> の先頭が <val1> と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name6> [ 0 ] == <val1> : <blk> break </blk>	list ( <name6> [ <val1> ] == <val1> ) : <blk> break </blk>
<name2> の <name4> に <val3> を加えた値番目を <name2> の <name4> 番目を <name1> で割った商だけ減少させる	<name2> [ <name4> + <val3> ] -= <name2> [ <name4> ] // <name1>	( <name2> [ <name4> + <val3> ] -= <name2> [ <name4> ] // <name1> )
<name1> の <name4> 番目が <val5> 以下のとき、	if <name1> [ <name4> ] <= <val5> :	: if <name1> [ <name4> ] <= <val5> :
<name5> の <name4> を取り出した値	<name5> . pop ( <name4> )	<name1> . pop ( <name4> )
<name5> を一旦、返す	yield <name5>	\ yield ( <name5> )
<val1> から <val3> 未満までの数列の各要素を <name6> とし、 <val1> から <name2> 未満までの数列の各要素を <name4> とし、 <val1> の列の列を <name5> とする	<name5> = [ [ <val1> for <name4> in range ( <name2> ) ] for <name6> in range ( <val3> ) ]	<name5> = [ [ <val1> for <name4> in range ( <name2> ) ] for <name6> in range ( <val3> ) ]
<val6> から -1 未満までの -1 間隔の数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , - 1 , - 1 ) :	) for <name3> in range ( <val6> , - 1 , - 1 ) :
<name6> の <name4> が、つまり未定値と等しいとき、	if <name6> . <name4> is not None :	list ( <name6> . <name4> is not None ) :
<val5> を書式として <val4> を間に入れて <name1> の各要素に整数を適用した列を連結した文字列、 <name2> 、 <val4> を間に入れて <name6> の各要素に整数を適用した列を連結した文字列で整形した文字列を出力する	print ( <val5> . format ( <val4> . join ( map ( str , <name1> ) ) , <name2> , <val4> . join ( map ( str , <name6> ) ) ) )	print ( <val5> . format ( <val4> . join ( map ( str , <name1> ) ) ) , <name2> , <val4> . join ( map ( str , <name6> ) ) ) )
<name4> に <val2> を加えた値の <val2> 乗から <val1> 未満までの <name4> に <val2> を加えた値間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( ( <name4> + <val2> ) ** <val2> , <val1> , <name4> + <val2> ) :	. for <name6> in range ( ( <name4> + <val2> ) ** <val2> , <val1> , <name4> + <val2> ) :
<name3> の <name1> が <name4> と等しくかつ <name3> の <name6> が <name4> と等しいとき、	if <name3> . <name1> == <name4> and <name3> . <name6> == <name4> :	or <name3> . <name1> == <name4> and <name3> . <name6> == <name4> :
<name1> から <name5> を引いた値が <val2> より小さいとき、	if <name1> - <name5> < <val2> :	: if <name1> - <name5> < <val2> :
<name1> の <name2> に <val3> を加えた値番目の <name6> 番目が <val5> と等しいとき、	if <name1> [ <name2> + <val3> ] [ <name6> ] == <val5> :	for <name1> [ <name2> + <val3> ] [ <name6> ] == <val5> :
<name1> の <name5> 番目を <name4> の <name2> 番目の <name5> 番目にする	<name4> [ <name2> ] [ <name5> ] = <name1> [ <name5> ]	<name4> [ <name2> ] [ <name5> ] = <name1> [ <name5> ]
<name6> ( <name4> , <name5> - <name2> ) を <name1> とする	<name1> = <name6> ( <name4> , <name5> - <name2> )	<name1> = <name6> ( <name4> , <name5> - <name2> )
書式 <name5> を <name3> でフォーマットした文字列を <name2> とする	<name2> = format ( <name5> , <name3> )	<name2> = format ( <name5> , <name3> )
<name2> の各要素を <name5> とし、 <val3> を書式として <name5> の先頭、 <name5> の <val4> 番目で整形した文字列の列を展開してを出力する	print ( * [ <val3> . format ( <name5> [ 0 ] , <name5> [ <val4> ] ) for <name5> in <name2> ] )	print ( * [ <val3> . format ( <name5> [ 0 ] , <name5> [ <val4> ] ) for <name5> in <name2> ] )
入力された文字列を <val2> で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name6> 、 <name5> 、 <name4> とする	<name6> , <name5> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )	<name5> , <name4> = list ( map ( int , input ( ) . split ( <val2> ) ) )
<name6> の各要素を <name3> とし、 <name4> に <name3> を加えた値が <name1> に含まれまたは <name4> から <name3> を引いた値が <name1> に含まれるときの <name3> の列を <name6> とする	<name6> = [ <name3> for <name3> in <name6> if <name4> + <name3> in <name1> or <name4> - <name3> in <name1> ]	<name6> = [ <name3> for <name3> in <name6> if <name4> + <name3> in <name1> or <name4> - <name3> in <name1> ]
<name2> の <name5> の先頭の <val1> 乗に <name2> の <name5> の <val3> 番目の <val1> 乗を加えた値を <name6> とする	<name6> = <name2> . <name5> [ 0 ] ** <val1> + <name2> . <name5> [ <val3> ] ** <val1>	<name6> = <name2> . <name5> [ <val1> ] ** <val1> + <name2> . <name5> [ <val3> ] ** <val1>
<name1> ( <name5> , <name3> ) を <name2> とする	<name2> = <name1> ( <name5> , <name3> )	dict = <name1> ( <name5> , <name3> )
<name2> と <name5> を展開しての共通部分でないとき、	if not <name2> . intersection ( * <name5> ) :	list ( not <name2> . intersection ( * <name5> ) ) :
<name5> の <name3> から読み込んだ一行を空白で分割した字句列を <name4> とする	<name4> = <name5> . <name3> . readline ( ) . split ( )	<name4> = <name5> . <name3> . readline ( ) . split ( )
<name4> に <name3> の <val2> 番目を掛けた値に <name3> の <val1> 番目を加えた値を <name4> とする	<name4> = <name4> * <name3> [ <val2> ] + <name3> [ <val1> ]	<name6> = <name4> * <name3> [ <val2> ] + <name3> [ <val1> ]
<name6> から <val5> を引いた値を <name1> とする	<name1> = <name6> - <val5>	<name1> = <name6> - <val5>
<name2> の <name6> の <val3> 番目、 <name2> の <name6> の <val5> 番目、 <name2> の <name6> の <val1> 番目、 <name2> の <name6> の先頭を <name2> の <name6> の先頭、 <name2> の <name6> の <val3> 番目、 <name2> の <name6> の <val5> 番目、 <name2> の <name6> の <val1> 番目とする	<name2> . <name6> [ 0 ] , <name2> . <name6> [ <val3> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val1> ] = <name2> . <name6> [ <val3> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val1> ] , <name2> . <name6> [ 0 ]	<name6> . <name2> [ 0 ] , <name2> . <name6> [ <val3> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val1> ] = <name2> . <name6> [ <val3> ] , <name2> . <name6> [ <val5> ] , <name2> . <name6> [ <val1> ] , <name2> . <name6> [ 0 ]
<val3> が <name4> の <name1> 番目より小さいとき <val5> に <name4> の <name1> 番目を掛けた値、そうでなければ <val6> を出力する	print ( <val5> * <name4> [ <name1> ] if <val3> < <name4> [ <name1> ] else <val6> )	print ( <val5> * <name4> [ <name1> ] if <val3> < <name4> [ <name1> ] else <val6> )
<val2> から <name4> から <val2> を引いた値未満までの数列を順に <name6> として、繰り返す	for <name6> in range ( <val2> , <name4> - <val2> ) :	continue for <name6> in range ( <val2> , <name4> - <val2> ) :
<name3> ( ) の両端から空白改行を取り除いた文字列を <val6> で分割した字句列を展開し、それぞれ <name1> 、 <name2> とする	<name1> , <name2> = <name3> ( ) . strip ( ) . split ( <val6> )	<name1> , <name2> = <name3> ( ) . strip ( ) . split ( <val6> )
-10 の <val5> 乗を <name4> とする	<name4> = - pow ( <val5> , <val5> )	<name4> = - 10 ** <val5>
<name5> を <name2> の、つまり先頭から、つまり先頭までの部分列にする	<name2> [ 0 : 0 ] = <name5>	( <name2> [ : ] = <name5> )
<name3> に <name6> を加えた値の常用対数に <val5> を加えた値の整数値を出力する	print ( int ( math . log10 ( <name3> + <name6> ) + <val5> ) )	print ( int ( math . log10 ( <name3> + <name6> ) + <val5> ) )
<val6> から <val2> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , <val2> ) :	. for <name3> in range ( <val6> , <val2> ) :
<name1> に <name3> を加えた値、 <name6> に <name4> を加えた値、 <name2> に <name5> を加えた値、 <name1> に <name3> を加えた値を <name6> 、 <name4> 、 <name2> 、 <name5> とする	<name6> , <name4> , <name2> , <name5> = <name1> + <name3> , <name6> + <name4> , <name2> + <name5> , <name1> + <name3>	<name6> , <name4> , <name2> , <name5> = <name1> + <name3> , <name6> + <name4> , <name2> + <name5> , <name1> + <name3>
入力された文字列を空白で分割した字句列の各要素に <name4> を適用した列のリストを展開し、それぞれ <name4> 、 <name6> 、 <name1> 、 <name3> 、 <name2> 、 <name5> とする	<name4> , <name6> , <name1> , <name3> , <name2> , <name5> = list ( map ( <name4> , input ( ) . split ( ) ) )	<name4> , <name6> , <name1> , <name3> , <name2> , <name5> = list ( map ( <name4> , input ( ) . split ( ) ) )
<name6> の <name3> の <val2> に <name4> を加えた値番目の末尾に <name5> を追加する	<name6> . <name3> [ <val2> + <name4> ] . append ( <name5> )	<name3> . <name3> [ <val2> + <name4> ] . append ( <name5> )
( <name3> 、 <name5> 、未定値 ) からなる列を <name2> とする	<name2> = [ <name3> , <name5> , None ]	<name6> = [ <name3> , <name5> , None ]
<name1> の <val4> 番目を <val6> だけ増加させる	<name1> [ <val4> ] += <val6>	<name2> [ <val4> ] += <val6>
<name4> と <name3> の論理積かつ <name1> の <name5> から <val2> を引いた値番目が <name1> の <name5> 番目と等しいとき、	if <name4> & <name3> and <name1> [ <name5> - <val2> ] == <name1> [ <name5> ] :	for <name1> [ <name5> - <val2> ] == <name1> [ <name5> ] :
<name1> の <name6> 番目に <name5> を加えた値が <name1> の <name3> 番目より小さいとき、	if <name1> [ <name6> ] + <name5> < <name1> [ <name3> ] :	for <name1> [ <name6> ] + <name5> < <name1> [ <name3> ] :
<val2> を <name5> の <name4> の <name1> 番目にする	<name5> . <name4> [ <name1> ] = <val2>	<name2> . <name5> [ <name4> . <name1> ] = <val2>
<name6> の末尾に <name2> の <name4> から <name3> を引いた値から <val5> を引いた値番目を追加する	<name6> . append ( <name2> [ <name4> - <name3> - <val5> ] )	<name3> . append ( <name2> [ <name4> - <name3> - <val5> ] )
<name3> を書式として <name6> を <val1> だけ左シフトした値と <val1> を <val4> だけ左シフトした値の補数の論理積で整形した文字列を出力する	print ( <name3> . format ( <name6> << <val1> & ~ ( <val1> << <val4> ) ) )	<name3> . format ( ( <name6> << <val1> ) & ~ ( ( <val1> << <val4> ) ) )
<name1> ( <name2> - <name4> . <name5> ) を <name6> とする	<name6> = <name1> ( <name2> - <name4> . <name5> )	<name6> = <name1> ( <name2> - <name4> . <name5> )
<name4> を <name1> の <name6> 番目の <name2> 番目にする	<name1> [ <name6> ] [ <name2> ] = <name4>	( <name1> [ <name6> ] [ <name2> ] = <name4> )
<name1> モジュールを用いる	from <name1> import phase	return from <name1> import combinations
<name4> から <name6> を引いた値を <name5> とする	<name5> = <name4> - <name6>	else = <name4> - <name6>
<name3> を <name6> だけ増加させる <name6> を <val1> だけ減少させる	<name3> += <name6> <name6> -= <val1>	<name3> += <name6> <name6> -= <val1>
<name3> から <val4> を引いた値を <name5> とする	<name5> = <name3> - <val4>	<name2> <name5> = <name3> - <val4>
<name5> を <val6> で割った商、 <name4> を <val3> で割った商に <val2> を加えた値、 <name4> を <val3> で割った余りを <val1> で割った商に <val5> を加えた値を <name3> 、 <name2> 、 <name1> とする	<name3> , <name2> , <name1> = <name5> // <val6> , <name4> // <val3> + <val2> , ( <name4> % <val3> ) // <val1> + <val5>	<name3> , <name2> , <name1> = <name5> // <val6> , ( <name4> // <val3> + <val2> , <name4> % <val3> ) // <val1> + <val5>
<name3> 内の <name2> に <val4> を加えた値と等しい要素を取り除く	<name3> . remove ( <name2> + <val4> )	<name3> . remove ( <name2> + <val4> )
<name5> が <name4> の長さから <val1> を引いた値と等しいとき、	if <name5> == len ( <name4> ) - <val1> :	for <name5> == len ( <name4> ) - <val1> :
( <name3> 、 <name6> の <name4> 番目の最小値、 <name1> に <val5> を加えた値 ) の組を <name5> の <name2> ( <name4> ) 番目にする	<name5> [ <name2> ( <name4> ) ] = ( min ( <name3> , <name6> [ <name4> ] ) , <name1> + <val5> )	<name4> [ <name2> ( <name4> ) ] = ( min ( <name3> , <name6> [ <name4> ] ) , <name1> + <val5> )
<name6> の <name5> 番目の <name4> 番目が <val3> と等しいとき、	if <name6> [ <name5> ] [ <name4> ] == <val3> :	> <name6> [ <name5> ] [ <name4> ] == <val3> :
<name6> ( <name2> [ <val5> ] ) に <val1> を加えた値に <name2> [ <val4> ] の文字列を加えた値に <val1> を加えた値に <name2> の <val3> 番目の文字列を加えた値を出力する	print ( <name6> ( <name2> [ <val5> ] ) + <val1> + <name6> ( <name2> [ <val4> ] ) + <val1> + <name6> ( <name2> [ <val3> ] ) )	end = <name6> ( <name2> [ <val5> ] ) + <val1> + str ( <name2> [ <val4> ] ) + <val1> + str ( <name2> [ <val3> ] ) )
<name3> 、 <name4> から <name2> を引いた値の最大値を <name3> とする	<name3> = max ( <name3> , <name4> - <name2> )	<name4> = max ( <name3> , <name4> - <name2> )
無限の整数列に対応する値、もし存在しなければ <name1> 、 <val3> に <val5> を加えた値を無限の整数列の <name1> 番目にする	count [ <name1> ] = count . get ( <name1> , <val3> ) + <val5>	int [ <name1> ] = count . get ( <name1> , <val3> ) + <val5>
<name3> ( <name4> * <name6> . <name5> , <name4> * <name6> . <name2> ) を返す	return <name3> ( <name4> * <name6> . <name5> , <name4> * <name6> . <name2> )	yield <name3> ( <name4> * <name6> . <name5> , <name4> * <name6> . <name2> )
入力された文字列を整数とする	str = input ( )	count = input ( )
<name2> ( <name3> , ( <name6> + <name1> , <name5> ) )	<name2> ( <name3> , ( <name6> + <name1> , <name5> ) )	<name2> ( <name3> , ( <name6> + <name1> , <name5> ) )
<name4> の <name5> の <val1> に <name2> を加えた値番目の末尾に <name6> を追加する	<name4> . <name5> [ <val1> + <name2> ] . append ( <name6> )	<name1> . <name5> [ <val1> + <name2> ] . append ( <name6> )
<name6> を <name2> ( <name5> [ <name4> ] , <val3> ) だけ増加させる	<name6> += <name2> ( <name5> [ <name4> ] , <val3> )	<name6> += <name2> ( <name5> [ <name4> ] , <val3> )
<name4> . <name3> ( <name6> , <name2> )	<name4> . <name3> ( <name6> , <name2> )	<name2> . <name3> ( <name6> , <name2> )
<name2> でなくかつ <name1> でないとき、 <blk> 繰り返しを中断する </blk>	if not <name2> and not <name1> : <blk> break </blk>	enumerate ( <name2> ) and not <name1> : <blk> break </blk>
<name1> の <val5> 乗を <name4> とする	<name4> = <name1> ** <val5>	<name2> <name4> = <name1> ** <val5>
<val5> に <val1> の <val2> 乗を掛けた値を <name4> とする	<name4> = <val5> * <val1> ** <val2>	<name4> = <val5> * <val1> ** <val2>
<name4> の末尾に ( <name5> の <name3> 番目、 <name3> ) の組を追加する	<name4> . append ( ( <name5> [ <name3> ] , <name3> ) )	<name4> . append ( ( <name5> [ <name3> ] , <name3> ) )
<name1> を <name5> の <name2> の <name4> 番目にする	<name5> . <name2> [ <name4> ] = <name1>	( <name5> [ <name2> . <name4> ] = <name1> )
<name2> から <name1> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> , <name1> + <val4> ) :	. for <name3> in range ( <name2> , <name1> + <val4> ) :
<name2> ( <name5> . <name4> * <name6> . <name4> ) を返す	return <name2> ( <name5> . <name4> * <name6> . <name4> )	yield <name2> ( <name5> . <name4> * <name6> . <name4> )
<name2> ( <name4> ) の <name3> を <name4> とする	<name4> = <name2> ( <name4> ) . <name3>	<name4> = <name2> ( <name4> ) . <name3>
関数 <name5> を <name2> をパラメータとして定義する <name2> を返す	def <name5> ( <name2> ) : return <name2> ( input ( ) )	\ <name5> ( <name2> ) : return <name2> ( input ( ) )
を間に入れて <name1> の <name6> 番目から <name2> に <val5> を加えた値までの部分列を連結した文字列を出力する	print ( '' . join ( <name1> [ <name6> : <name2> + <val5> ] ) )	print ( '' . join ( <name1> [ <name6> : <name2> + <val5> ] ) )
os . <name5> の末尾に <name6> を追加する	<name5> . append ( <name6> )	<name6> . append ( <name6> )
<name1> と <val4> を <name6> だけ左シフトした値の論理積のとき、	if <name1> & ( <val4> << <name6> ) :	for <name1> & ( <val4> << <name6> ) :
<name4> が <name3> と等しいかどうかが <val5> と等しいとき、	if ( <name4> == <name3> == <val5> ) :	\ if <name4> == <name3> == <val5> :
<name4> のコピーされた列を展開し、それぞれ <name4> 、 <name6> 、 <name2> 、 <name3> 、 <name5> 、 <name1> とする	<name4> , <name6> , <name2> , <name3> , <name5> , <name1> = <name4> [ : ]	<name1> , <name6> , <name2> , <name3> , <name5> , <name1> = <name4> [ : ]
<name4> 、 <name6> の <name2> 番目を <name1> で割った商に <name5> を掛けた値の最大値を <name4> とする	<name4> = max ( <name4> , <name6> [ <name2> ] // <name1> * <name5> )	<name4> = max ( <name4> , <name6> [ <name2> ] // <name1> * <name5> )
<name5> の <name2> の <name3> 番目が -1 と等しいとき、	if <name5> . <name2> [ <name3> ] == - 1 :	if <name5> . <name2> [ <name3> ] == - 1 :
<name1> . <name5> ( <name6> ) を展開し、それぞれ <name3> 、 <name2> とする	<name3> , <name2> = <name1> . <name5> ( <name6> )	<name1> , <name3> , <name2> = <name1> . <name5> ( <name6> )
<name4> の先頭を取り出した値を展開し、それぞれ <name2> 、 <name6> 、 <name3> とする	<name2> , <name6> , <name3> = <name4> . pop ( )	<name4> , <name2> , <name6> , <name3> = <name4> . pop ( )
<val6> から <name6> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 ( ( <val6> ) からなる列の <val6> から <name2> + <val3> 未満までの数列の各要素を <name1> とし、 <val5> の列回分の列 ) からなる列の列を <name4> とする	<name4> = [ [ [ <val6> ] * [ <val5> for <name1> in range ( <name2> + <val3> ) ] ] for <name4> in range ( <name6> + <val3> ) ]	<name4> = [ [ [ <val6> ] * [ <val5> for <name1> in range ( <name2> + <val3> ) ] ] for <name4> in range ( <name6> + <val3> ) ]
<name5> から <val4> を引いた値が <name6> より小さいとき、	if <name5> - <val4> < <name6> :	while <name5> - <val4> < <name6> :
<name5> に <name4> を加えた値に <val1> を加えた値を <val3> で割った余りを <val2> で割った値を出力する	print ( ( ( <name5> + <name4> + <val1> ) % <val3> ) / <val2> )	end = ( ( <name5> + <name4> + <val1> ) % <val3> ) / <val2> )
<val6> を <name1> で割った余りを出力する	print ( <val6> % <name1> )	print ( <val6> % <name1> )
<name5> . <name1> ( ) を返す	return <name5> . <name1> ( )	yield <name5> . <name1> ( )
空列を <name4> とするを <name6> の <name5> にする	<name6> . <name5> = <name4> = [ ]	<name3> . <name5> = <name4> = [ ]
<name6> を <name3> の -2 番目にする	<name3> [ - 2 ] = <name6>	( <name3> [ - 2 ] = <name6> )
<name5> が ( <val1> 、 <val6> ) の組に含まれるとき、	if <name5> in ( <val1> , <val6> ) :	isinstance ( <name5> in ( <val1> , <val6> ) :
<name1> . <name2> ( <name3> . <name5> ( ) , <name3> . <name4> ( ) )	<name1> . <name2> ( <name3> . <name5> ( ) , <name3> . <name4> ( ) )	<name1> . <name2> ( <name3> . <name5> ( ) , <name3> . <name4> ( ) )
<val4> に <name1> を掛けた値を <name2> とする	<name2> = <val4> * <name1>	<name1> <name2> = <val4> * <name1>
<name5> の末尾に <name4> の <name6> を追加する	<name5> . append ( <name4> . <name6> )	<name2> . append ( <name4> . <name6> )
<val5> を <name4> の <name3> に <val6> を掛けた値に <name1> を加えた値番目にする	<name4> [ <name3> * <val6> + <name1> ] = <val5>	<name1> [ <name3> * <val6> + <name1> ] = <val5>
<name2> が <name3> に含まれないとき、	if <name2> not in <name3> :	while <name2> not in <name3> :
<name4> と <val1> を <name2> だけ左シフトした値の論理積のとき、	if <name4> & ( <val1> << <name2> ) :	if <name4> & ( <val1> << <name2> ) :
( <name6> の <val4> 番目を <name1> で割った値、 <name6> の <val2> 番目を <name1> で割った値 ) からなる列を <name5> とする	<name5> = [ <name6> [ <val4> ] / <name1> , <name6> [ <val2> ] / <name1> ]	<name5> = [ <name6> [ <val4> ] / <name1> , <name6> [ <val2> ] / <name1> ]
<name2> の <name3> の <name5> 番目の <name6> に <val1> を加えた値からの範囲内での <val1> と等しい要素の最初の位置を <name6> とする	<name6> = <name2> . <name3> [ <name5> ] . index ( <val1> , <name6> + <val1> )	<name6> = <name2> . <name3> [ <name5> ] . index ( <val1> , <name6> + <val1> )
<name1> の <name3> の <name2> 番目に <val4> を加えた値を <name1> の <name3> の <name6> 番目にする	<name1> . <name3> [ <name6> ] = <name1> . <name3> [ <name2> ] + <val4>	<name2> . <name1> [ <name3> . <name6> ] = <name1> . <name3> [ <name2> ] + <val4>
<name3> を ( <name5> 、 <name2> 、 <name1> 、 <name4> の <name6> 番目 ) からなる列だけ増加させる	<name3> += [ <name5> , <name2> , <name1> , <name4> [ <name6> ] ]	<name4> += [ <name5> , <name2> , <name1> , <name4> [ <name6> ] ]
<val1> から <val6> 未満までの数列の各要素を <name4> とし、 <name4> の列を <name2> とする	<name2> = [ <name4> for <name4> in range ( <val1> , <val6> ) ]	<name6> = [ <name4> for <name4> in range ( <val1> , <val6> ) ]
<name5> を <val3> で割った余りのとき、	if <name5> % <val3> :	list if <name5> % <val3> :
<name1> の <val3> 番目が <val5> と等しいとき、	if <name1> [ <val3> ] == <val5> :	: if <name1> [ <val3> ] == <val5> :
<name6> . <name1> ( <name2> . <name5> ) を <name3> とする	<name3> = <name6> . <name1> ( <name2> . <name5> )	else = <name6> . <name1> ( <name2> . <name5> )
<name1> の <name2> から <val3> を引いた値番目を <val6> だけ増加させる	<name1> [ <name2> - <val3> ] += <val6>	[ <name1> [ <name2> - <val3> ] += <val6>
<name6> に <name2> の <name3> 番目の <name5> 番目を掛けた値を <name1> で割った余りを <name4> の <name3> 番目の <name5> 番目にする	<name4> [ <name3> ] [ <name5> ] = <name6> * <name2> [ <name3> ] [ <name5> ] % <name1>	<name3> [ <name3> ] [ <name5> ] = <name6> * <name2> [ <name3> ] [ <name5> ] % <name1>
<name1> の最大値を <name2> とする	<name2> = max ( <name1> )	( <name2> = max ( <name1> ) )
<name6> から読み込んだ一行の整数値を <name1> とする	<name1> = int ( <name6> . readline ( ) )	<name1> = int ( <name6> . readline ( ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name1> 、 <name5> 、 <name6> とする	<name4> , <name1> , <name5> , <name6> = map ( int , input ( ) . split ( ) )	<name5> , <name6> = map ( int , input ( ) . split ( ) )
<name2> に <name5> を加えた値を <val3> で割った値を <name6> とする	<name6> = ( <name2> + <name5> ) / <val3>	<name6> = ( <name2> + <name5> ) / <val3>
0 から <name6> 未満までの数列の各要素を <name5> とし、 0 から <name6> 未満までの数列の各要素を <name1> とし、、つまり空列の列の列を <name2> とする	<name2> = [ [ [ ] for <name1> in range ( <name6> ) ] for <name5> in range ( <name6> ) ]	<name6> = [ [ [ ] for <name1> in range ( <name6> ) ] for <name5> in range ( <name6> ) ]
<name6> を <name4> の <name3> 番目の <name5> にする	<name4> [ <name3> ] . <name5> = <name6>	<name4> [ <name3> ] . <name5> = <name6>
<name6> から <name1> に <val2> を加えた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name6> , <name1> + <val2> ) :	continue for <name4> in range ( <name6> , <name1> + <val2> ) :
<name4> を <name2> だけ右シフトした値と <val1> の論理積でないとき、	if not ( ( <name4> >> <name2> ) & <val1> ) :	raise ( ( <name4> >> <name2> & <val1> ) :
<name1> の <name5> 番目を返す	return <name1> [ <name5> ]	yield <name1> [ <name5> ]
<name3> の、つまり先頭から <val4> 番目までの <val5> 間隔による部分列内の <name1> の出現回数が <val2> と等しくまたは <name3> の <val6> 番目から <val3> 番目までの <val6> 間隔による部分列内の <name1> の出現回数が <val2> と等しいとき、 <blk> <name1> を返す </blk>	if <name3> [ 0 : <val4> : <val5> ] . count ( <name1> ) == <val2> or <name3> [ <val6> : <val3> : <val6> ] . count ( <name1> ) == <val2> : <blk> return <name1> </blk>	\ if <name3> [ 0 : <val4> : <val5> ] . count ( <name1> ) == <val2> or <name3> [ <val6> : <val3> : <val6> ] . count ( <name1> ) == <val2> : <blk> return <name1> </blk>
<name3> を英大文字に変換した文字列を出力する	print ( <name3> . upper ( ) )	print ( <name3> . upper ( ) )
<name5> の各要素を <name6> とし、 <name6> が <name3> の部分集合のときの <name6> の列の集合を <name4> とする	<name4> = set ( [ <name6> for <name6> in <name5> if <name6> . issubset ( <name3> ) ] )	<name4> = set ( [ <name6> for <name6> in <name5> if <name6> . issubset ( <name3> ) ] )
<name6> の <name2> 番目が <name5> と等しいとき、	if <name6> [ <name2> ] == <name5> :	> <name6> [ <name2> ] == <name5> :
<val5> を <name2> の先頭の <name4> 番目にする	<name2> [ <val5> ] [ <name4> ] = <val5>	( <name2> [ 0 ] [ <name4> ] = <val5> )
<name2> と <val6> の論理積が <val5> と等しいとき、	if <name2> & <val6> == <val5> :	if ( <name2> & <val6> ) == <val5> :
<name6> に <val3> を加えた値を返す	return <name6> + <val3>	yield <name6> + <val3>
<name4> ( <name6> , <name1> , <val3> ) を <name2> とする	<name2> = <name4> ( <name6> , <name1> , <val3> )	<name2> = <name4> ( <name6> , <name1> , <val3> )
<name3> モジュールを用いる	from <name3> import Counter	from <name3> import combinations
<val2> を <name4> の <name3> 番目から、つまり末尾までの部分列にする	<name4> [ <name3> : ] = <val2>	<name4> [ <name3> : ] = <val2>
<name6> の <name1> に <name2> を加えた値番目を <name2> に <val5> を掛けた値から <val3> を引いた値だけ減少させる	<name6> [ <name1> + <name2> ] -= <name2> * <val5> - <val3>	<name2> [ <name1> + <name2> ] -= <name2> * <val5> - <val3>
<name1> モジュールを用いる	from <name1> import xor , itemgetter	return from <name1> import combinations
<name1> . <name5> ( <name6> ) を展開し、それぞれ <name2> 、 <name4> とする	<name2> , <name4> = <name1> . <name5> ( <name6> )	<name2> , <name4> = <name1> . <name5> ( <name6> )
<name5> ( <name1> . <name3> - <name1> . <name2> ) を <name6> とする	<name6> = <name5> ( <name1> . <name3> - <name1> . <name2> )	else = <name5> ( <name1> . <name3> - <name1> . <name2> )
<val2> を開いたファイルストリームから読み込んだ一行を <name5> とする	<name5> = open ( <val2> ) . <name5>	<name5> = open ( <val2> ) . <name5>
<name1> の、つまり先頭から <name2> に <val4> を加えた値までの部分列の総和を <name3> とする	<name3> = sum ( <name1> [ : <name2> + <val4> ] )	<name3> = sum ( <name1> [ : <name2> + <val4> ] )
<val4> を <name6> の <name5> 番目にする	<name6> [ <name5> ] = <val4>	( <name6> [ <name5> ] = <val4> )
<name2> が <name6> 以下または <name4> が <name6> 以下のとき、	if <name2> <= <name6> or <name4> <= <name6> :	or <name2> <= <name6> or <name4> <= <name6> :
<name3> の <name6> を <val1> で割った商番目を <name2> とする	<name2> = <name3> [ <name6> // <val1> ]	<name2> = <name3> [ <name6> // <val1> ]
<name1> の <name4> の <name2> 番目を <name1> の <name4> の <name5> 番目だけ増加させる	<name1> . <name4> [ <name2> ] += <name1> . <name4> [ <name5> ]	. <name1> [ <name4> . <name2> ] += <name1> . <name4> [ <name5> ]
<name5> に <name5> を掛けた値から <name1> 未満までの <name5> 間隔の数列を順に <name4> として、繰り返す <blk> 偽を <name2> の <name4> 番目にする </blk>	for <name4> in range ( <name5> * <name5> , <name1> , <name5> ) : <blk> <name2> [ <name4> ] = False </blk>	for <name4> in range ( <name5> * <name5> , <name1> , <name5> ) : <blk> <name2> [ <name4> ] = False </blk>
( 、つまり未定値 ) からなる列の <name5> の <name1> 回分の列を <name5> の <name2> にする	<name5> . <name2> = [ None ] * <name5> . <name1>	) <name5> . <name2> = [ None ] * <name5> . <name1>
( <val1> に <name5> に <val6> を加えた値を掛けた値 ) からなる列を <name3> とする	<name3> = [ <val1> * ( <name5> + <val6> ) ]	else = [ <val1> * ( <name5> + <val6> ) ]
0 から <name4> 未満までの数列を順に <name3> として、繰り返す <blk> <name6> に <name3> を掛けた値に入力された文字列の整数値を加えた値を <name5> の <name3> 番目にする </blk>	for <name3> in range ( <name4> ) : <blk> <name5> [ <name3> ] = <name6> * <name3> + int ( input ( ) ) </blk>	) in range ( <name4> ) : <blk> <name5> [ <name3> ] = <name6> * <name3> + int ( input ( ) ) </blk>
<name2> . <name3> ( <name4> ) から <name2> . <name3> ( <name1> ) を引いた値を出力する	print ( <name2> . <name3> ( <name4> ) - <name2> . <name3> ( <name1> ) )	print ( <name2> . <name3> ( <name4> ) - <name2> . <name3> ( <name1> ) )
<name3> の x 座標に <name4> の y 座標を掛けた値から <name3> の y 座標に <name4> の x 座標を掛けた値を引いた値を返す	return <name3> . x * <name4> . y - <name3> . y * <name4> . x	x return <name3> . x * <name4> . y - <name3> . y * <name4> . x
<val1> から <name5> + <val1> 未満までの数列の <val3> 個までのコンビネーションの各要素を <name6> とし、 <name6> の総和が <name4> と等しいときの <val1> の列の総和を出力する	print ( sum ( [ <val1> for <name6> in combinations ( range ( <val1> , <name5> + <val1> ) , <val3> ) if sum ( <name6> ) == <name4> ] ) )	print ( sum ( [ <val1> for <name6> in itertools . combinations ( range ( <val1> , <name5> + <val1> ) , <val3> ) if sum ( <name6> ) == <name4> ] ) )
( ( <val1> ) からなる列の <val1> から <name5> 未満までの数列の各要素を <name4> とし、 <name3> 、 <name2> から <name3> を引いた値の最大値の列回分の列 ) からなる列を <name6> とする	<name6> = [ [ <val1> ] * [ max ( <name3> , <name2> - <name3> ) for <name4> in range ( <name5> ) ] ]	<name6> = [ [ <val1> ] * [ max ( <name3> , <name2> - <name3> ) for <name4> in range ( <name5> ) ] ]
<name1> から <name3> を引いた値から <name1> を引いた値	<name1> - <name3> - <name1>	<name1> - <name3> - <name1>
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを無限大とする	inf = list ( map ( int , input ( ) . split ( ) ) )	else = list ( map ( int , input ( ) . split ( ) ) )
( <val1> ) からなる列の <name2> に <val5> を加えた値回分の列を <name6> とする	<name6> = [ <val1> ] * ( <name2> + <val5> )	<name6> = [ <val1> ] * ( <name2> + <val5> )
D 、 <name1> に <val5> を加えた値を出力する	print ( 'D' , <name1> + <val5> )	print ( 'D' , ( <name1> + <val5> ) )
<name4> 、 <name1> の要素をそれぞれ組にした列を順に <name6> 、 <name5> として、繰り返す	for <name6> , <name5> in zip ( <name4> , <name1> ) :	( <name6> , <name5> in zip ( <name4> , <name1> ) :
<name4> の <name6> を <name4> の <name6> の <name2> にする	<name4> . <name6> . <name2> = <name4> . <name6>	<name1> . <name6> . <name2> = <name4> . <name6>
( <name1> 、 <name6> ) の組を返す	return ( <name1> , <name6> )	yield ( <name1> , <name6> )
( ( <val6> , 真 ) 、 ( <val3> , 偽 ) 、 ( <val5> , 偽 ) ) からなる辞書を <name4> とする	<name4> = { <val6> : True , <val3> : False , <val5> : False }	<name2> = { <val6> : True , <val3> : False , <val5> : False }
<name4> から <name6> を引いた値の <val1> 乗に <name2> から <name3> を引いた値の <val1> 乗を加えた値の <val5> 乗を <name5> とする	<name5> = ( ( <name4> - <name6> ) ** <val1> + ( <name2> - <name3> ) ** <val1> ) ** <val5>	<name5> = ( ( <name4> - <name6> ) ** <val1> + ( <name2> - <name3> ) ** <val1> ) ** <val5>
<name5> 、 <name6> を <name3> 、 <name1> とする	<name3> , <name1> = <name5> , <name6>	<name3> , <name1> = <name5> , <name6>
<name6> ( <name4> , ( - <name2> [ <name1> ] + <name5> ( <name3> , <name1> , <name6> ) * <name4> , <name1> ) )	<name6> ( <name4> , ( - <name2> [ <name1> ] + <name5> ( <name3> , <name1> , <name6> ) * <name4> , <name1> ) )	set <name6> ( <name4> , ( - <name2> [ <name1> ] + <name5> ( <name3> , <name1> , <name6> ) * <name4> , <name1> ) )
<name2> の <name4> 番目の <name1> 番目のとき、	if <name2> [ <name4> ] [ <name1> ] :	if <name2> [ <name4> ] [ <name1> ] :
0 から <name5> 未満までの数列の各要素を <name2> とし、、つまり未定値の列を <name4> とする	<name4> = [ None for <name2> in range ( <name5> ) ]	<name6> = [ None for <name2> in range ( <name5> ) ]
<name2> の <name3> 番目を <name1> の <name6> の <name2> の <name3> 番目番目から <val5> を引いた値番目にする	<name1> [ <name6> [ <name2> [ <name3> ] ] - <val5> ] = <name2> [ <name3> ]	<name4> [ <name1> [ <name6> [ <name2> [ <name3> ] ] - <val5> ] = <name2> [ <name3> ]
<name6> の <name4> 番目を順に <name3> 、 <name1> として、繰り返す	for <name3> , <name1> in <name6> [ <name4> ] :	. for <name3> , <name1> in <name6> [ <name4> ] :
( <val6> ) からなる列の <name2> 回分の列を <name1> とする	<name1> = [ <val6> ] * <name2>	<name1> = [ <val6> ] * <name2>
<name3> を <val2> に <name4> の末尾から空白改行を取り除いた文字列を加えた値に <val2> を加えた値だけ増加させる	<name3> += <val2> + <name4> . rstrip ( ) + <val2>	<val2> <name3> += <val2> + <name4> . rstrip ( ) + <val2>
<name1> ( <name2> , <name6> * <val4> + <val3> , <name5> )	<name1> ( <name2> , <name6> * <val4> + <val3> , <name5> )	<name4> ( <name2> , <name6> * <val4> + <val3> , <name5> )
<name3> ( <val4> . <name6> ( <name1> [ <name2> * <name5> : <name2> * <name5> + <name5> ] ) )	<name3> ( <val4> . <name6> ( <name1> [ <name2> * <name5> : <name2> * <name5> + <name5> ] ) )	<name1> ( <val4> . <name6> ( <name1> [ <name2> * <name5> : <name2> * <name5> + <name5> ] ) )
0 から <name1> から <name2> を引いた値未満までの数列を順に <name4> として、繰り返す	for <name4> in range ( <name1> - <name2> ) :	for <name4> in range ( <name1> - <name2> ) :
<name5> を展開し、それぞれ <name4> 、 <name6> 、 <name2> とする	<name4> , <name6> , <name2> = <name5>	<name2> , <name4> , <name6> , <name2> = <name5>
<name3> . <name1> ( <name2> , <name2> + <val4> , <val5> , <val6> )	<name3> . <name1> ( <name2> , <name2> + <val4> , <val5> , <val6> )	<name3> . <name1> ( <name2> , <name2> + <val4> , <val5> , <val6> )
入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name3> 、 <name2> 、 <name1> とする	<name6> , <name3> , <name2> , <name1> = map ( int , input ( ) . split ( <val5> ) )	<name3> , <name2> , <name1> = map ( int , input ( ) . split ( <val5> ) )
os . <name6> の -2 番目を <name5> とする	<name5> = <name6> [ - 2 ]	else = <name6> [ - 2 ]
関数 <name5> を <name4> 、 <name2> をパラメータとして定義する <val6> に <name4> を <val3> で割った値を加えた値の <name2> 乗を返す	def <name5> ( <name4> , <name2> ) : return pow ( <val6> + <name4> / <val3> , <name2> )	<name5> ( <name4> , <name2> ) : return ( <val6> + <name4> / <val3> ) ** <name2>
<name4> に <val1> を加えた値から <name2> 未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name4> + <val1> , <name2> ) :	. for <name3> in range ( <name4> + <val1> , <name2> ) :
<name5> から <name2> を引いた値の絶対値を <name4> とする	<name4> = abs ( <name5> - <name2> )	<name4> = abs ( <name5> - <name2> )
<name5> と <name2> の <name1> 番目の論理積のとき、	if <name5> & <name2> [ <name1> ] :	list if <name5> & <name2> [ <name1> ] :
<name6> を <name5> だけ減少させる <name4> を <name1> だけ減少させる	<name6> -= <name5> <name4> -= <name1>	<name3> -= <name5> <name4> -= <name1>
<name1> . <name6> ( <name5> ) を <name6> とする	<name6> = <name1> . <name6> ( <name5> )	<name6> = <name1> . <name6> ( <name5> )
0 から <name6> に <val1> を掛けた値未満までの数列の各要素を <name4> とし、、つまり空列の列を <name5> とする	<name5> = [ [ ] for <name4> in range ( <name6> * <val1> ) ]	<name4> = [ [ ] for <name4> in range ( <name6> * <val1> ) ]
<name4> . <name3> . <name2> ( ) に <val5> を加えた値を <name4> の <name1> にする	<name4> . <name1> = <name4> . <name3> . <name2> ( ) + <val5>	<name5> . <name1> = <name4> . <name3> . <name2> ( ) + <val5>
<name1> ( <name2> ) を <name4> とする	<name4> = <name1> ( <name2> )	<name4> = <name1> ( <name2> )
( <name6> 、 <name4> 、 <name5> 、 <name3> ) からなる列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name5> 、 <name3> とする	<name6> , <name4> , <name5> , <name3> = map ( int , [ <name6> , <name4> , <name5> , <name3> ] )	<name4> , <name5> , <name3> = map ( int , [ <name6> , <name4> , <name5> , <name3> ] )
<name5> の <name1> を <name5> の <name6> の <name1> にする	<name5> . <name6> . <name1> = <name5> . <name1>	<name2> . <name6> . <name1> = <name5> . <name1>
<val5> を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <val5>	( <name1> [ <name6> ] = <val5> )
0 から <name1> 未満までの数列の各要素を <name6> とし、、つまり入力された文字列を <val5> で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( <val5> ) ) ) for <name6> in range ( <name1> ) ]	<name6> = [ list ( map ( int , input ( ) . split ( <val5> ) ) ) for <name6> in range ( <name1> ) ]
<name6> が <val3> 以下のとき、 <blk> <val1> を <name4> とする </blk>	if <name6> <= <val3> : <blk> <name4> = <val1> </blk>	list if <name6> <= <val3> : <blk> <name4> = <val1> </blk>
\ <name1> ( <val5> % <name3> [ <val6> ] ) \	\ <name1> ( <val5> % <name3> [ <val6> ] ) \	\ <name1> ( <val5> % <name3> [ <val6> ] ) \
<name2> ( <name4> , <name1> + ( <name3> - <name6> ) / <val5> ) を <name5> とする	<name5> = <name2> ( <name4> , <name1> + ( <name3> - <name6> ) / <val5> )	else = <name2> ( <name4> , <name1> + ( <name3> - <name6> ) / <val5> )
<val2> を <name1> の <name4> に <name5> を加えた値番目の <name6> に <name3> を加えた値番目にする	<name1> [ <name4> + <name5> ] [ <name6> + <name3> ] = <val2>	<name2> [ <name1> [ <name4> + <name5> ] [ <name6> + <name3> ] = <val2>
<name3> の <val4> 番目から、つまり末尾までの部分列を <name3> とする	<name3> = <name3> [ <val4> : ]	<name3> = <name3> [ <val4> : ]
<name5> ( <name4> , <name1> , <name3> , <name6> , <name2> [ <val4> ] ) を展開し、それぞれ <name4> 、 <name1> 、 <name3> 、無限の整数列とする	<name4> , <name1> , <name3> , <name6> = <name5> ( <name4> , <name1> , <name3> , <name6> , <name2> [ <val4> ] )	<name6> , <name1> , <name3> , count = <name5> ( <name4> , <name1> , <name3> , <name6> , <name2> [ <val4> ] )
<name1> を <val6> 倍にする	<name1> *= <val6>	not <name1> *= ( <val6> )
<val2> から <name5> 未満までの数列の各要素を <name6> とし、 <val2> から <name5> 未満までの数列の各要素を <name3> とし、 <val2> の列の列を <name4> とする	<name4> = [ [ <val2> for <name3> in range ( <name5> ) ] for <name6> in range ( <name5> ) ]	<name4> = [ [ <val2> for <name3> in range ( <name5> ) ] for <name6> in range ( <name5> ) ]
<name2> に <name6> を加えた値を <name3> とする	<name3> = <name2> + <name6>	<name3> = <name2> + <name6>
<name6> の <val5> 番目が <name3> の <val5> 番目と等しいとき、	if <name6> [ <val5> ] == <name3> [ <val5> ] :	: if <name6> [ <val5> ] == <name3> [ <val5> ] :
<name6> [ <val2> ] に <val1> を掛けた値に <name6> の <val4> 番目を加えた値を <val3> に <val1> を掛けた値で割った値に -360 を掛けた値に <val5> を加えた値を <name5> とする	<name5> = ( <name6> [ <val2> ] * <val1> + <name6> [ <val4> ] ) / ( <val3> * <val1> ) * - 360 + <val5>	<name5> = ( <name6> [ <val2> ] * <val1> + <name6> [ <val4> ] ) / ( <val3> * <val1> - <val2> ) * <val5> + <val5>
<name6> ( <val2> ) 、 <name6> ( <val1> ) の最小値を出力する	print ( min ( <name6> ( <val2> ) , <name6> ( <val1> ) ) )	print ( min ( <name6> ( <val2> ) , <name6> ( <val1> ) ) )
<name6> が <name5> の長さより大きいとき、 <blk> <val1> を <name6> とする </blk>	if <name6> > len ( <name5> ) : <blk> <name6> = <val1> </blk>	for <name6> in <name6> > len ( <name5> ) : <blk> <name6> = <val1> </blk>
0 から <val5> 未満までの数列の各要素を <name1> とし、 <val5> を間に入れて ( <name1> 、 <name2> ) の組が <name3> に含まれるとき <val4> 、そうでなければ 0 から <val5> 未満までの数列の各要素を <name2> とし、 <val6> の列を連結した文字列の列を <name6> とする	<name6> = [ <val5> . join ( <val4> if ( <name1> , <name2> ) in <name3> else [ <val6> for <name2> in range ( <val5> ) ] ) for <name1> in range ( <val5> ) ]	<name6> = [ <val5> . join ( <val4> if ( <name1> , <name2> ) in <name3> else [ <val6> for <name2> in range ( <val5> ) ] ) for <name1> in range ( <val5> ) ]
<val1> を書式として <name6> 、 <name4> 、 <name3> で整形した文字列を出力する	print ( <val1> . format ( <name6> , <name4> , <name3> ) )	print ( <val1> . format ( <name6> , <name4> , <name3> ) )
<name4> の末尾に <val5> の浮動小数点数を追加する	<name4> . append ( float ( <val5> ) )	<name4> . append ( float ( <val5> ) )
<name6> の <name1> から読み込んだ一行を <name4> とする	<name4> = <name6> . <name1> . <name4>	<name6> . <name4> = <name6> . <name1> . <name4>
<name5> を <val4> で割った余りが <val1> と等しいとき、 <blk> <name5> を <val4> 分の一にする </blk>	if <name5> % <val4> == <val1> : <blk> <name5> /= <val4> </blk>	\ if <name5> % <val4> == <val1> : <blk> <name5> // = <val4> </blk>
<name4> の <name5> の <name4> の <name6> 番目を <name1> とする	<name1> = <name4> . <name5> [ <name4> . <name6> ]	<name1> = <name4> . <name5> [ <name4> . <name6> ]
<name5> の <name6> 番目が <name1> 以下または <name2> の <val4> 番目が <val3> と等しいとき、	if <name5> [ <name6> ] <= <name1> or <name2> [ <val4> ] == <val3> :	list if <name5> [ <name6> ] <= <name1> or <name2> [ <val4> ] == <val3> :
<val2> から <name6> に <val4> を加えた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val2> , <name6> + <val4> ) :	continue for <name3> in range ( <val2> , <name6> + <val4> ) :
0 から <name6> の長さ未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( len ( <name6> ) ) :	) : for <name1> in range ( len ( <name6> ) ) :
<val3> を <name4> の先頭の <val1> 番目にする	<name4> [ <val1> ] [ <val1> ] = <val3>	( <name4> [ <val1> ] [ <val1> ] = <val3> )
ONLINE_FRONT を出力する	print ( 'ONLINE_FRONT' )	print ( 'ON' )
0 から <name1> の <val6> 番目未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <name1> [ <val6> ] ) :	( for <name5> in range ( <name1> [ <val6> ] ) :
<name4> が <val1> と等しいとき、 <blk> <name5> の末尾に <name4> を追加する </blk>	if <name4> == <val1> : <blk> <name5> . append ( <name4> ) </blk>	if <name4> == <val1> : <blk> <name5> . append ( <name4> ) </blk>
<val2> が <name6> より小さいかどうかが <name4> 以下かつ <name1> の <name3> 番目の <name6> 番目の、つまり現在の日時番目が <name1> [ <name5> ] の <name2> 番目の <name6> 番目に <name4> を <name6> で割った値を加えた値より大きいとき、	if <val2> < <name6> <= <name4> and <name1> [ <name3> ] [ <name6> ] [ <name5> ] > <name1> [ <name5> ] [ <name2> ] [ <name6> ] + <name4> / <name6> :	list ( <val2> < <name6> <= <name4> and <name1> [ <name3> ] [ <name6> ] ) and ( <name1> [ <name5> ] > <name1> [ <name2> ] [ <name6> ] + <name4> / <name6> :
<name4> ( <name1> [ <name3> + <val6> ] , <name1> [ <name3> ] ) を <name2> とする	<name2> = <name4> ( <name1> [ <name3> + <val6> ] , <name1> [ <name3> ] )	<name2> = <name4> ( <name1> [ <name3> + <val6> ] , <name1> [ <name3> ] )
<name3> の <val5> 乗の文字列を長さ <val4> になるように '0' 左詰めした文字列を <name2> とする	<name2> = str ( <name3> ** <val5> ) . zfill ( <val4> )	<name2> = str ( <name3> ** <val5> ) . zfill ( <val4> )
<name5> を ( <name3> 、 <name2> ) の組とする	( <name3> , <name2> ) = <name5>	<name3> , <name2> ) = <name5>
<val6> から <name2> に <val3> を加えた値未満までの数列の各要素を <name4> とし、 <val6> の列を <name5> とする	<name5> = [ <val6> for <name4> in range ( <name2> + <val3> ) ]	<name5> = [ <val6> for <name4> in range ( <name2> + <val3> ) ]
<name1> の <name6> 番目の末尾に <name5> を追加する	<name1> [ <name6> ] . append ( <name5> )	not <name1> [ <name6> ] . append ( <name5> )
( - <name5> ) からなる列の <name6> 回分の列を <name1> とする	<name1> = [ - <name5> ] * <name6>	<name1> = [ - <name5> ] * <name6>
<name5> の <name6> の末尾に ( <name3> 、 <name1> 、 <name4> ) の組を追加する	<name5> . <name6> . append ( ( <name3> , <name1> , <name4> ) )	<name4> . <name6> . append ( ( <name3> , <name1> , <name4> ) )
<val4> を <name3> として <name1> をソートする	<name1> . sort ( <name3> = <val4> )	<name3> . sort ( <name3> = <val4> )
<name2> から読み込んだ一行を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name6> 、 <name4> 、 <name3> とする	<name6> , <name4> , <name3> = map ( int , <name2> . readline ( ) . split ( ) )	<name4> , <name3> = map ( int , <name2> . readline ( ) . split ( ) )
<name5> の長さが <val6> より大きくかつ <name1> ( <name5> [ -1 ] , <name5> [ -2 ] , <name2> ) が - <name3> より大きい間、次を繰り返す	while len ( <name5> ) > <val6> and <name1> ( <name5> [ - <val6> ] , <name5> [ - 2 ] , <name2> ) > - <name3> :	while len ( <name5> ) > <val6> and <name1> ( <name5> [ - <val6> ] , <name5> [ - 2 ] , <name2> ) > - <name3> :
( ( <val6> ) からなる列の 0 から <name4> 未満までの数列の各要素を <name2> とし、 <name3> に <val5> を加えた値の列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <val6> ] * [ ( <name3> + <val5> ) for <name2> in range ( <name4> ) ] ]	<name1> = [ [ <val6> ] * [ ( <name3> + <val5> ) for <name2> in range ( <name4> ) ] ]
<name2> が <name3> の先頭と等しいとき、	if <name2> == <name3> [ 0 ] :	for <name2> in <name3> [ 0 ] :
<name4> が <name3> の <name6> 番目と等しいとき、 <blk> <name6> を <val1> だけ増加させる </blk>	if <name4> == <name3> [ <name6> ] : <blk> <name6> += <val1> </blk>	if <name4> == <name3> [ <name6> ] : <blk> <name6> += <val1> </blk>
<name4> 、 <name1> ( <name3> ( <name6> + <val5> * ( <name2> - <name4> ) ) ) から <name2> を引いた値の最小値を <name4> とする	<name4> = min ( <name4> , <name1> ( <name3> ( <name6> + <val5> * ( <name2> - <name4> ) ) ) - <name2> )	<name4> = min ( <name4> , <name1> ( <name3> ( <name6> + <val5> * ( <name2> - <name4> ) ) - <name2> ) )
<name3> ( <name2> , <val4> )	<name3> ( <name2> , <val4> )	<name3> ( <name2> , <val4> )
入力された文字列を空白で分割した字句列の各要素に浮動小数点数を適用した列を展開し、それぞれ <name3> 、 <name5> 、 <name1> 、 <name2> とする	<name3> , <name5> , <name1> , <name2> = map ( float , input ( ) . split ( ) )	<name5> , <name1> , <name2> = map ( float , input ( ) . split ( ) )
<name5> の <name2> を <val3> だけ増加させる	<name5> . <name2> += <val3>	( <name5> . <name2> += <val3> )
( <val2> ) からなる列の <name4> から <name6> を引いた値に <val3> を加えた値回分の列を <name5> の <name1> 番目の <name6> 番目から <name4> に <val3> を加えた値までの部分列にする	<name5> [ <name1> ] [ <name6> : <name4> + <val3> ] = [ <val2> ] * ( <name4> - <name6> + <val3> )	<name5> [ <name1> ] [ <name6> : <name4> + <val3> ] = [ <val2> ] * ( <name4> - <name6> + <val3> )
<name2> を展開し、それぞれ <name6> 、 <name1> 、 <name4> 、 <name5> とする	<name6> , <name1> , <name4> , <name5> = <name2>	<name1> , <name4> , <name5> = <name2>
<name3> を <name1> の <val6> 番目にする <name2> を <name1> の <val5> 番目にする	<name1> [ <val6> ] = <name3> <name1> [ <val5> ] = <name2>	<name2> <name1> [ <val6> ] = <name3> <name1> [ <val5> ] = <name2>
<name1> を <name5> に <name1> を <name1> の絶対値で割った値の整数値を掛けた値だけ減少させる	<name1> -= <name5> * int ( <name1> / abs ( <name1> ) )	<name1> -= <name5> * int ( <name1> / abs ( <name1> ) )
<name2> の <name5> 番目が <name6> と等しいとき <val1> 、そうでなければ <val3> を出力する	print ( <val1> if <name2> [ <name5> ] == <name6> else <val3> )	print ( <val1> if <name2> [ <name5> ] == <name6> else <val3> )
NNNNENNNNENNNNENNNNNENNNNEENNNNWWWSE を <name4> の <name6> にする	<name4> . <name6> = 'NNNNENNNNENNNNENNNNNENNNNEENNNNWWWSE'	<name2> . <name4> . <name6> = '.'
<name4> の <name2> に [ MASK ] を書き込むを <name1> とする	<name1> = <name4> . <name2> . <name1>	<name1> = <name4> . <name2> . <name1>
区切りなしで改行せずに <name1> の <name4> 番目、 <val2> を出力する	print ( <name1> [ <name4> ] , <val2> , sep = '' , end = '' )	print ( <name1> [ <name4> ] , <val2> , sep = '' , end = '' )
<name1> に <name3> を加えた値を <name5> とする	<name5> = <name1> + <name3>	<name2> <name5> = <name1> + <name3>
( <val2> 、 <name3> から <val5> を引いた値 ) からなる列を <name1> とする	<name1> = [ <val2> , <name3> - <val5> ]	<name1> = [ <val2> , <name3> - <val5> ]
<name6> の <name1> に <name4> の <name1> を掛けた値に <name6> の <name3> に <name4> の <name3> を掛けた値を加えた値を返す	return <name6> . <name1> * <name4> . <name1> + <name6> . <name3> * <name4> . <name3>	x return <name6> . <name1> * <name4> . <name1> + <name6> . <name3> * <name4> . <name3>
<name5> 、 <name4> の <val1> 番目から、つまり末尾までの <val6> 間隔による部分列の最大値の最大値を <name5> とする	<name5> = max ( <name5> , max ( <name4> [ <val1> : : <val6> ] ) )	else = max ( <name5> , max ( <name4> [ <val1> : : <val6> ] ) )
<name1> のキーの集まりのリストを順に <name2> として、繰り返す	for <name2> in list ( <name1> . keys ( ) ) :	. for <name2> in list ( <name1> . keys ( ) ) :
<name3> の末尾に <name3> . <name1> ( ) を追加する	<name3> . append ( <name3> . <name1> ( ) )	<name3> . append ( <name3> . <name1> ( ) )
入力された文字列を空白で分割した字句列の各要素を <name4> とし、 <name4> の整数値の列を展開し、それぞれ <name5> 、 <name2> 、 <name6> とする	<name5> , <name2> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]	<name4> , <name2> , <name6> = [ int ( <name4> ) for <name4> in input ( ) . split ( ) ]
<name1> に対応する値、もし存在しなければ <name6> 、 <val3> に <val4> を加えた値を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name1> . get ( <name6> , <val3> ) + <val4>	<name4> [ <name1> . <name6> ] = <name1> . get ( <name6> , <val3> ) + <val4>
<name6> ( <name3> [ <val2> ] , <name3> [ <val4> ] ) を <name5> とする	<name5> = <name6> ( <name3> [ <val2> ] , <name3> [ <val4> ] )	else = <name6> ( <name3> [ <val2> ] , <name3> [ <val4> ] )
-1 を <name3> とする <name5> を <name6> とする	<name3> = - 1 <name6> = <name5>	( <name3> = - 1 ) <name6> = <name5>
<name2> の <name1> の末尾に <name1> の <name6> 番目を追加する	<name2> . <name1> . append ( <name1> [ <name6> ] )	input . <name1> . append ( <name1> [ <name6> ] )
<name5> の <name4> から読み込んだデータを <name1> とする	<name1> = <name5> . <name4> . <name1>	<name1> = <name5> . <name4> . read ( )
<name3> の先頭を除いた部分列の整数値に <name5> を加えた値に <val2> を加えた値を返す	return int ( <name3> [ <val2> : ] ) + <name5> + <val2>	self return int ( <name3> [ <val2> : ] ) + <name5> + <val2>
<name1> を <name6> ( <val4> , <val3> ) で割った商を <name2> とする	<name2> = <name1> // <name6> ( <val4> , <val3> )	<name2> = <name1> // <name6> ( <val4> , <val3> )
( ( <name2> , 0 から <name1> 未満までの数列の各要素を <name2> とし、 <name4> の <name6> の列 ) ) からなる辞書を <name5> とする	<name5> = { <name2> : [ <name4> . <name6> for <name2> in range ( <name1> ) ] }	( <name2> : <name5> = { <name1> } { <name4> . <name6> for <name2> in range ( <name1> ) ] } )
<name5> が <name4> . <name3> ( ) より大きいとき、	if <name5> > <name4> . <name3> ( ) :	for <name5> > <name4> . <name3> ( ) :
<name1> の <name5> 番目を出力する	print ( <name1> [ <name5> ] )	print ( <name1> [ <name5> ] )
( <val6> 、 <val4> 、 <val3> ) の組を <name5> とする	<name5> = ( <val6> , <val4> , <val3> )	<name5> = ( <val6> , <val4> , <val3> )
<name1> に <name2> の <name5> 番目を加えた値を <name4> とする	<name4> = <name1> + <name2> [ <name5> ]	str = <name1> + <name2> [ <name5> ]
<val1> から <name6> に <val1> を加えた値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val1> , <name6> + <val1> ) :	. for <name5> in range ( <val1> , <name6> + <val1> ) :
<val6> を間に入れて ( <name3> の <name4> 、 <name3> の <name1> 、 <name3> の <name2> ) からなる列の各要素に整数を適用した列を連結した文字列を出力する	print ( <val6> . join ( map ( str , [ <name3> . <name4> , <name3> . <name1> , <name3> . <name2> ] ) ) )	( <val6> . join ( map ( str , [ <name3> . <name4> , <name3> . <name1> , <name3> . <name2> ] ) ) )
{} {}を出力する	print ( { x : . 8 f } { y : . 8 f } )	<name4> print ( set ' , key f = '' )
<name3> と <name1> の排他論理和が <name5> に含まれないとき、 <blk> <val6> を <name5> の <name3> と <name1> の排他論理和番目にする </blk>	if <name3> ^ <name1> not in <name5> : <blk> <name5> [ <name3> ^ <name1> ] = <val6> </blk>	\ <name5> [ <name3> ^ <name1> ] = <val6> : <blk> <name5> [ <name3> ^ <name1> ] = <val6> </blk>
<name3> の <name2> の <val6> 番目番目の末尾を出力する	print ( <name3> [ <name2> [ <val6> ] ] [ - <val6> ] )	print ( <name3> [ <name2> [ <val6> ] ] [ - <val6> ] )
<name3> の <val2> 乗に <name5> の <val2> 乗を加えた値を <name4> とする	<name4> = ( <name3> ** <val2> + <name5> ** <val2> )	<name4> = <name3> ** <val2> + <name5> ** <val2>
<name4> に <name1> から <name3> を引いた値に <name2> . <name6> を <val5> で割った値の正弦を掛けた値を加えた値に <name4> から <name4> を引いた値に円周率を <val5> で割った値の余弦を掛けた値を加えた値を <name5> とする	<name5> = <name4> + ( <name1> - <name3> ) * <name2> . sin ( <name2> . <name6> / <val5> ) + ( <name4> - <name4> ) * <name2> . cos ( <name2> . <name6> / <val5> )	<name5> = <name4> + ( <name1> - <name3> ) * sin ( <name2> . <name6> / <val5> ) + ( <name4> - <name4> ) * math . cos ( <name2> . <name6> / <val5> )
( <name4> 、 <name1> 、 <name5> ) の組を返す	return ( <name4> , <name1> , <name5> )	yield ( <name4> , <name1> , <name5> )
<name3> の <name2> の長さが <name4> から <val5> を引いた値より小さい間、次を繰り返す	while len ( <name3> . <name2> ) < <name4> - <val5> :	del ( len ( <name3> . <name2> ) < <name4> - <val5> ) :
<name6> を <val3> で割った値を <name5> とする	<name5> = <name6> / <val3>	<name5> = <name6> / <val3>
<name1> の <name2> 番目が ( <name3> 、 <name5> ) の組と等しいとき、 <blk> 繰り返しを中断する </blk>	if <name1> [ <name2> ] == ( <name3> , <name5> ) : <blk> break </blk>	enumerate ( <name1> [ <name2> ] == ( <name3> , <name5> ) : <blk> break </blk>
<name2> と <name6> の排他論理和が <val5> 以上のとき、	if <name2> ^ <name6> >= <val5> :	if ( <name2> ^ <name6> >= <val5> ) :
<name3> の <val5> に <val1> を挿入する	<name3> . insert ( <val5> , <val1> )	<name2> . insert ( <val5> , <val1> )
<name1> が <name4> と等しくないとき、	if not <name1> == <name4> :	while <name1> != <name4> :
<name3> に <name5> を掛けた値に <name1> の正弦を掛けた値を <val2> で割った値を <name4> とする	<name4> = <name3> * <name5> * math . sin ( <name1> ) / <val2>	( <name4> = <name3> * <name5> ) * math . sin ( <name1> ) / <val2>
<name2> が <val4> と等しいとき、 <blk> <name5> の、つまり先頭から <name3> 番目までの部分列に <name1> の <val6> 番目を加えた値に <name5> の <name2> 番目から、つまり末尾までの部分列を加えた値を <name5> とする </blk>	if <name2> == <val4> : <blk> <name5> = <name5> [ : <name3> ] + <name1> [ <val6> ] + <name5> [ <name2> : ] </blk>	for <name5> in <name2> == <val4> : <blk> <name5> = <name5> [ : <name3> ] + <name1> [ <val6> ] + <name5> [ <name2> : ] </blk>
<val3> を順に <name1> として、繰り返す	for <name1> in <val3> :	. for <name1> in <val3> :
<name6> の <name5> が <val2> の浮動小数点数と等しいとき、	if <name6> . <name5> == float ( <val2> ) :	list ( <name6> . <name5> == float ( <val2> ) ) :
<name5> ( <name2> , <name4> , <name3> , <name1> ) を展開し、それぞれ <name3> 、 <name1> 、 <name6> とする	<name3> , <name1> , <name6> = <name5> ( <name2> , <name4> , <name3> , <name1> )	<name2> , <name3> , <name1> , <name6> = <name5> ( <name2> , <name4> , <name3> , <name1> )
<val4> を書式として <name5> の <val6> 乗に <name2> を掛けた値、 <val6> に <name2> を掛けた値に <name5> を掛けた値で整形した文字列を出力する	print ( <val4> . format ( <name5> ** <val6> * <name2> , <val6> * <name2> * <name5> ) )	print ( <val4> . format ( <name5> ** <val6> * <name2> , <val6> * <name2> * <name5> ) )
<val5> を <name4> の <name3> にする	<name4> . <name3> = <val5>	( <name4> . <name3> = <val5> )
<name1> 、 <name4> の <name2> 番目の最小値を <name4> の <name2> 番目にする	<name4> [ <name2> ] = min ( <name1> , <name4> [ <name2> ] )	<name3> [ <name2> ] = min ( <name1> , <name4> [ <name2> ] )
<name5> . <name2> ( <name1> . <name4> ) を <name3> とする	<name3> = <name5> . <name2> ( <name1> . <name4> )	else = <name5> . <name2> ( <name1> . <name4> )
<val2> から <name6> 未満までの <val5> 間隔の数列を順に <name4> として、繰り返す	for <name4> in range ( <val2> , <name6> , <val5> ) :	. for <name4> in range ( <val2> , <name6> , <val5> ) :
( <name1> 、 <name3> 、 <name4> 、 <name5> ) からなる列を <name6> の <val2> 番目にする	<name6> [ <val2> ] = [ <name1> , <name3> , <name4> , <name5> ]	<name6> [ <val2> ] = [ <name1> , <name3> , <name4> , <name5> ]
<name3> の先頭を <name2> とする <val6> を <name4> とする	<name2> = <name3> [ <val6> ] <name4> = <val6>	<name2> = <name3> [ 0 ] <name4> = <val6>
<name2> を <name5> の整数値だけ増加させる	<name2> += int ( <name5> )	<name2> += int ( <name5> )
<name6> の絶対値が <val1> <name3> <val2> より小さいとき、	if abs ( <name6> ) < <val1> <name3> <val2> :	: if abs ( <name6> ) < <val1> <name3> <val2> :
<name5> の <name2> の <val1> 番目から <val1> を引いた値番目の末尾に ( <name2> の <val3> 番目から <val1> を引いた値、 <name2> の <val6> 番目 ) からなる列を追加する	<name5> [ <name2> [ <val1> ] - <val1> ] . append ( [ <name2> [ <val3> ] - <val1> , <name2> [ <val6> ] ] )	<name1> [ <name2> [ <val1> ] - <val1> ] . append ( [ <name2> [ <val3> ] - <val1> , <name2> [ <val6> ] ] )
<name5> の <name2> に <val4> を加えた値番目を展開してを出力する	print ( * <name5> [ <name2> + <val4> ] )	<name4> = * <name5> [ <name2> + <val4> ] )
<name3> . <name5> ( <name4> , <name2> )	<name3> . <name5> ( <name4> , <name2> )	( <name3> . <name5> ( <name4> , <name2> ) )
<name6> に <name5> を掛けた値から <name2> に <name4> を掛けた値を引いた値を <name1> とする	<name1> = <name6> * <name5> - <name2> * <name4>	<name1> = <name6> * <name5> - <name2> * <name4>
<name2> が <val5> に含まれないとき、	if <name2> not in <val5> :	while <name2> not in <val5> :
<name3> に <name4> を掛けた値を <name3> と <name4> の最大公約数で割った商を返す	return ( <name3> * <name4> ) // gcd ( <name3> , <name4> )	assert ( <name3> * <name4> ) // gcd ( <name3> , <name4> )
<name2> の <name4> から <val1> を引いた値番目、 <name2> の <name4> 番目を <name2> の <name4> 番目、 <name2> の <name4> から <val1> を引いた値番目とする	<name2> [ <name4> ] , <name2> [ <name4> - <val1> ] = <name2> [ <name4> - <val1> ] , <name2> [ <name4> ]	<name2> [ <name4> ] , <name2> [ <name4> - <val1> ] = <name2> [ <name4> - <val1> ] , <name2> [ <name4> ]
<name1> の <name3> 番目が <val2> と等しいとき、	if <name1> [ <name3> ] == <val2> :	: if <name1> [ <name3> ] == <val2> :
<name3> ( <name1> , <name2> ) を出力する	print ( <name3> ( <name1> , <name2> ) )	print ( <name3> ( <name1> , <name2> ) )
<name5> . <name4> ( <name5> . <name2> )	<name5> . <name4> ( <name5> . <name2> )	<name2> . <name4> ( <name5> . <name2> )
<val2> を <name6> の <name5> の先頭の <val1> 番目にする	<name6> . <name5> [ <val1> ] [ <val1> ] = <val2>	( <name6> . <name5> [ <val1> ] [ <val1> ] ) = <val2>
<name1> を <val3> 倍にする	<name1> *= <val3>	<name4> *= <name1> *= <val3>
文字列 <name3> を評価した値が <val5> と等しいとき、	if eval ( <name3> ) == <val5> :	list ( eval ( <name3> ) == <val5> :
<name3> の <val2> 乗から <name5> に <val1> を加えた値未満までの <name3> 間隔の数列を順に <name6> として、繰り返す	for <name6> in range ( <name3> ** <val2> , <name5> + <val1> , <name3> ) :	. for <name6> in range ( <name3> ** <val2> , <name5> + <val1> , <name3> ) :
<name3> を <name6> の <name5> から <val1> を引いた値だけ増加させる	<name3> += <name6> . <name5> - <val1>	<name2> += <name6> . <name5> - <val1>
<name1> の両端から空白改行を取り除いた文字列を <name2> とする	<name2> = <name1> . strip ( )	<name6> = <name1> . strip ( )
<name2> から <name1> を引いた値の <val6> 乗に <name3> から <name4> を引いた値の <val6> 乗を加えた値の平方根を <name5> とする	<name5> = math . sqrt ( ( <name2> - <name1> ) ** <val6> + ( <name3> - <name4> ) ** <val6> )	<name5> = math . sqrt ( ( <name2> - <name1> ) ** <val6> + ( <name3> - <name4> ) ** <val6> )
<name5> . <name6> ( <name2> , ( <name1> [ <name4> ] [ <name3> ] [ <name5> ] , <name4> , <name3> , <name5> ) )	<name5> . <name6> ( <name2> , ( <name1> [ <name4> ] [ <name3> ] [ <name5> ] , <name4> , <name3> , <name5> ) )	<name5> . <name6> ( <name2> , ( <name1> [ <name4> ] [ <name3> ] [ <name5> ] , <name4> , <name3> , <name5> ) )
<val6> から <name5> から <val4> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <val6> , <name5> - <val4> ) :	) for <name3> in range ( <val6> , <name5> - <val4> ) :
<name2> の <name3> を <name2> の <name5> にする	<name2> . <name5> = <name2> . <name3>	<name2> . <name5> = <name2> . <name3>
<name5> ( <name6> , <name3> ) を <name2> とする	<name2> = <name5> ( <name6> , <name3> )	( <name2> = <name5> ( <name6> , <name3> ) )
<name3> の <name5> の浮動小数点数が <name1> の <name5> の浮動小数点数より小さいかどうかを返す	return float ( <name3> . <name5> ) < float ( <name1> . <name5> )	x return float ( <name3> . <name5> ) < float ( <name1> . <name5> )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストを展開し、それぞれ <name6> 、 <name3> とする	<name6> , <name3> = list ( map ( int , input ( ) . split ( ) ) )	<name2> , <name3> = list ( map ( int , input ( ) . split ( ) ) )
入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name5> 、 <name1> とする	<name5> , <name1> = map ( int , input ( ) . split ( ) )	<name5> , <name1> = map ( int , input ( ) . split ( ) )
<val6> から <val4> を <name1> だけ左シフトした値未満までの数列を順に <name5> として、繰り返す	for <name5> in range ( <val6> , <val4> << <name1> ) :	continue range ( <val6> , <val4> << <name1> ) :
( <val5> ) からなる列の <name1> の <name3> 回分の列を <name6> とする	<name6> = [ <val5> ] * <name1> . <name3>	<name6> = [ <val5> ] * <name1> . <name3>
<name5> が <name1> の <name5> 番目と等しいとき、	if <name5> == <name1> [ <name5> ] :	or <name5> == <name1> [ <name5> ] :
<name4> に <name6> を掛けた値に <name2> に <name5> を掛けた値を加えた値を <name1> とする	<name1> = <name4> * <name6> + <name2> * <name5>	<name1> = <name4> * <name6> + <name2> * <name5>
( ( ( <val6> ) からなる列の <val6> から <val3> 未満までの数列の各要素を <name2> とし、 <val3> の列回分の列 ) からなる列 ) からなる列を <name1> とする	<name1> = [ [ [ <val6> ] * [ <val3> for <name2> in range ( <val3> ) ] ] ]	<name1> = [ [ <val6> ] * [ <val3> for <name2> in range ( <val3> ) ] ]
<name5> 、 <name2> を追加して <name4> を更新する	<name4> . update ( <name5> , <name2> )	<name4> . update ( <name5> , <name2> )
<name1> ( <name2> , <name3> , <name5> , <name6> . <name4> , <name1> , <name2> ( <name3> , <name6> . <name5> ) ) を <name4> とする	<name4> = <name1> ( <name2> , <name3> , <name5> , <name6> . <name4> , <name1> , <name2> ( <name3> , <name6> . <name5> ) )	<name4> = <name1> ( <name2> , <name3> , <name5> , <name6> . <name4> , <name1> , <name2> ( <name3> , <name6> . <name5> ) )
( <name1> から <name3> を引いた値を <name6> で割った値、 <name2> から <name5> を引いた値を <name6> で割った値 ) の組を <name4> とする	<name4> = ( ( <name1> - <name3> ) / <name6> , ( <name2> - <name5> ) / <name6> )	<name4> = ( ( <name1> - <name3> ) / <name6> , ( <name2> - <name5> ) / <name6> )
<name2> に <name1> から <val3> を引いた値を掛けた値を <name1> で割った商を <name2> とする	<name2> = <name2> * ( <name1> - <val3> ) // <name1>	<name2> = <name2> * ( <name1> - <val3> ) // <name1>
( <name6> から <val4> を引いた値、 <name6> ) の組を順に <name5> として、繰り返す	for <name5> in ( <name6> - <val4> , <name6> ) :	in ( <name6> - <val4> , <name6> ) :
\ <val3> を書式として <name5> 、 <name1> 、 <name2> で整形した文字列を出力する\	\ print ( <val3> . format ( <name5> , <name1> , <name2> ) ) \	) \ print ( <val3> . format ( <name5> , <name1> , <name2> ) ) \
<name3> に <name4> を加えた値を返す	return <name3> + <name4>	yield <name3> + <name4>
os . <name3> の <name6> 番目でないとき、	if not <name3> [ <name6> ] :	for <name3> in not <name3> [ <name6> ] :
( ( <name2> の <name6> ) からなる列の <val5> から <name2> . <name3> の長さ未満までの数列の各要素を <name1> とし、 <name4> . <name3> の先頭の長さの列回分の列 ) からなる列を <name1> とする	<name1> = [ [ <name2> . <name6> ] * [ len ( <name4> . <name3> [ <val5> ] ) for <name1> in range ( len ( <name2> . <name3> ) ) ] ]	<name1> = [ [ <name2> . <name6> ] * [ len ( <name4> . <name3> [ <val6> ] ) for <name1> in range ( len ( <name2> . <name3> ) ) ] ]
<name3> の <name1> に対応する値、もし存在しなければ <val4> を <name6> とする	<name6> = <name3> . <name1> . get ( <val4> )	<name6> = <name3> . <name1> . get ( <val4> )
<name3> の <name1> 番目の最大値を出力する	print ( max ( <name3> [ <name1> ] ) )	) print ( max ( <name3> [ <name1> ] ) )
( ( <name6> 、 <val5> ) の組、 ( <name4> 、 <val2> ) の組 ) からなる列を <name3> とする	<name3> = [ ( <name6> , <val5> ) , ( <name4> , <val2> ) ]	<name3> = [ ( <name6> , <val5> ) , ( <name4> , <val2> ) ]
0 から <val1> 未満までの数列の各要素を <name2> とし、 <name4> の <name2> 番目のときの <name2> の列を <name6> とする	<name6> = [ <name2> for <name2> in range ( <val1> ) if <name4> [ <name2> ] ]	<name4> = [ <name2> for <name2> in range ( <val1> ) if <name4> [ <name2> ] ]
<name2> の <name6> の <name4> 番目の末尾に <name5> を追加する	<name2> . <name6> [ <name4> ] . append ( <name5> )	<name1> . <name6> [ <name4> ] . append ( <name5> )
無限の整数列を <name4> から <name3> を引いた値だけ増加させる	count += <name4> - <name3>	count += ( <name4> - <name3> )
( <val6> ) からなる列の <name2> 回分の列を <name4> とする	<name4> = [ <val6> ] * <name2>	<name4> = [ <val6> ] * <name2>
0 から <name2> から <val5> を引いた値未満までの数列を順に <name3> として、繰り返す	for <name3> in range ( <name2> - <val5> ) :	for <name3> in range ( <name2> - <val5> ) :
入力された文字列の両端から空白改行を取り除いた文字列を順に <name1> として、繰り返す	for <name1> in input ( ) . strip ( ) :	. for <name1> in input ( ) . strip ( ) :
0 から <name6> 未満までの数列の各要素を <name1> とし、、つまり入力された文字列を空白で分割した字句列の各要素に整数を適用した列のリストの列を <name3> とする	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name6> ) ]	<name3> = [ list ( map ( int , input ( ) . split ( ) ) ) for <name1> in range ( <name6> ) ]
end が <name5> と等しいとき、	if 'end' == <name5> :	continue == ( <name5> ) :
<name3> 、 <name4> の最大値を <name4> とする	<name4> = max ( <name3> , <name4> )	count = max ( <name3> , <name4> )
<name2> を順に <name1> 、 <name6> として、繰り返す	for <name1> , <name6> in <name2> :	. for <name1> , <name6> in <name2> :
<name6> から <val3> を引いた値から -1 未満までの -1 間隔の数列を順に <name2> として、繰り返す	for <name2> in range ( <name6> - <val3> , - 1 , - 1 ) :	for <name2> in range ( <name6> - <val3> , - <val3> , - <val3> ) :
<name6> の <val3> を取り出した値を <name4> とする	<name4> = <name6> . pop ( <val3> )	<name4> = <name6> . pop ( <val3> )
<name5> の <name1> を <val4> で割った商番目が ( <val2> 、 <val3> ) からなる列に含まれないとき、	if <name5> [ <name1> // <val4> ] not in [ <val2> , <val3> ] :	list ( <name5> [ <name1> // <val4> ] ) not in [ <val2> , <val3> ] :
<name1> ( <name4> , <name5> , <name4> [ <val6> ] )	<name1> ( <name4> , <name5> , <name4> [ <val6> ] )	<name1> ( <name4> , <name5> , <name4> [ <val6> ] )
<name2> において正規表現 <name1> が最初にマッチする位置を <name4> とする	<name4> = search ( <name1> , <name2> )	<name4> = search ( <name1> , <name2> )
<name3> の先頭のコピーされた列を <name2> とする	<name2> = <name3> [ 0 ] [ : ]	( <name2> = <name3> [ 0 ] [ : ] )
入力された文字列を <val4> で分割した字句列の各要素に整数を適用した列のリストを <name6> とする	<name6> = list ( map ( int , input ( ) . split ( <val4> ) ) )	<name6> = list ( map ( int , input ( ) . split ( <val4> ) ) )
<name4> の <name2> に <name1> の <name5> 番目を掛けた値に <name6> の <name5> 番目を加えた値から、つまり末尾までの部分列を <val3> だけ減少させる	<name4> [ <name2> * <name1> [ <name5> ] + <name6> [ <name5> ] : ] -= <val3>	( <name4> [ <name2> * <name1> [ <name5> ] + <name6> [ <name5> ] : ] ) -= <val3>
次は例外に関する条件がある <blk> 入力された文字列を空白で分割した字句列の各要素に整数を適用した列を展開し、それぞれ <name4> 、 <name3> とする </blk>	try : <blk> <name4> , <name3> = map ( int , input ( ) . split ( ) ) </blk>	\ <name4> , <name3> = try : <blk> <name4> , <name3> = map ( int , input ( ) . split ( ) ) </blk>
( ( <name6> , <val5> から <name2> 未満までの数列の各要素を <name6> とし、 ( -1 、 <val5> 、 <val4> 、 ( <val5> ) からなる列 ) からなる列の列 ) ) からなる辞書を <name1> とする	<name1> = { <name6> : [ [ - <val4> , <val5> , <val4> , [ <val5> ] ] for <name6> in range ( <name2> ) ] }	<name1> = { <name6> : [ [ - <val5> , <val5> , <val4> , <val5> ] ] for <name6> in range ( <name2> ) ] }
<name2> . <name3> ( <name6> ) を順に <name5> として、繰り返す	for <name5> in <name2> . <name3> ( <name6> ) :	. for <name5> in <name2> . <name3> ( <name6> ) :
<name2> の <name4> 番目から <name6> に <val5> を加えた値未満までの数列を順に <name1> として、繰り返す	for <name1> in range ( <name2> [ <name4> ] , <name6> + <val5> ) :	range for <name1> in range ( <name2> [ <name4> ] , <name6> + <val5> ) :
<name2> の先頭が <val3> と等しいとき、	if <name2> [ 0 ] == <val3> :	if <name2> [ 0 ] == <val3> :
<name4> の <name1> に <val3> を加えた値を <val6> で割った余り番目を出力する	print ( <name4> [ ( <name1> + <val3> ) % <val6> ] )	print ( <name4> [ ( <name1> + <val3> ) % <val6> ] )
<name1> から <name3> を引いた値、 <name6> から <name2> を引いた値、 - <name1> の <val4> 乗に <name6> の <val4> 乗を加えた値に <name3> の <val4> 乗に <name2> の <val4> 乗を加えた値を加えた値を <name2> 、 <name4> 、 <name5> とする	<name2> , <name4> , <name5> = <name1> - <name3> , <name6> - <name2> , - ( <name1> ** <val4> + <name6> ** <val4> ) + ( <name3> ** <val4> + <name2> ** <val4> )	<name2> , <name4> , <name5> = <name1> - <name3> , <name6> - <name2> , - <name1> ** <val4> + <name6> ** <val4> + <name3> ** <val4> + <name2> ** <val4>
<name1> を <name6> を <val2> で割った値の正弦に <name6> を <val2> で割った値の余弦を掛けた値だけ増加させる	<name1> += ( sin ( <name6> / <val2> ) * cos ( <name6> / <val2> ) )	<name2> += <name1> / math . sin ( <name6> / <val2> ) * math . cos ( <name6> / <val2> )
<name2> の <name6> の <name1> 番目を <val4> だけ増加させる	<name2> . <name6> [ <name1> ] += <val4>	( <name2> [ <name6> . <name1> ] += <val4> )
<name2> の <name5> 番目の <val6> 番目を <val6> だけ減少させる	<name2> [ <name5> ] [ <val6> ] -= <val6>	<name1> [ <name5> ] [ <val6> ] -= <val6>
<name5> が <name2> の <name3> 番目の <name4> 番目以上のとき、	if <name5> >= <name2> [ <name3> ] [ <name4> ] :	>= <name5> >= <name2> [ <name3> ] [ <name4> ] :
<name2> の <name5> から <val4> を引いた値から、つまり末尾までの部分列を展開してを出力する	print ( * <name2> [ <name5> - <val4> : ] )	print ( * <name2> [ <name5> - <val4> : ] )
<name1> ( <name2> , ( ( <name5> , <name6> ) , ( <name4> , <name3> ) ) ) を <name2> とする	<name2> = <name1> ( <name2> , ( ( <name5> , <name6> ) , ( <name4> , <name3> ) ) )	<name2> = <name1> ( <name2> , ( ( <name5> , <name6> ) , ( <name4> , <name3> ) ) )
<name3> の先頭を <name4> を <name1> で割った商に <name6> の先頭を掛けた値だけ減少させる	<name3> [ 0 ] -= ( <name4> // <name1> ) * <name6> [ 0 ]	<name1> [ 0 ] -= ( <name4> // <name1> ) * <name6> [ 0 ]
<val3> を <name5> の <name6> 番目の <name2> 番目の <name1> 番目にする	<name5> [ <name6> ] [ <name2> ] [ <name1> ] = <val3>	<name4> [ <name6> ] [ <name2> ] [ <name1> ] = <val3>
( ( <val1> , <val5> ) 、 ( <val6> , <val2> ) 、 ( <val3> , <val4> ) 、 ( <val1> , <val5> ) 、 ( <val6> , <val2> ) 、 ( <val3> , <val4> ) 、 ( <val1> , <val5> ) ) からなる辞書を <name4> とする	<name4> = { <val1> : <val5> , <val6> : <val2> , <val3> : <val4> , <val1> : <val5> , <val6> : <val2> , <val3> : <val4> , <val1> : <val5> }	<name4> = { <val1> : <val5> , <val6> : <val2> , <val3> : <val4> , <val1> : <val5> , <val6> : <val2> , <val3> : <val4> , <val1> : <val5> }
<name5> の <name2> を <name1> の <name6> 番目にする	<name1> [ <name6> ] = <name5> . <name2>	not <name1> [ <name6> ] = <name5> . <name2>
<name1> ( <name3> - <name4> , <name5> - <name2> ) を <name6> とする	<name6> = <name1> ( <name3> - <name4> , <name5> - <name2> )	<name3> = <name1> ( <name3> - <name4> , <name5> - <name2> )
<name1> に番号付した組の列の各要素を <name4> 、 <name2> とし、 <name2> に ( <name4> ) からなる列を加えた値の列をソートした列を <name5> とする	<name5> = sorted ( [ <name2> + [ <name4> ] for <name4> , <name2> in enumerate ( <name1> ) ] )	<name5> = sorted ( [ <name2> + [ <name4> ] for <name4> , <name2> in enumerate ( <name1> ) ] )
<name2> の -2 番目の <name1> 番目が <name3> と等しいとき、	if <name2> [ - 2 ] [ <name1> ] == <name3> :	if <name2> [ - 2 ] [ <name1> ] == <name3> :
<name3> 、 <name2> ( <name5> ) の最大値を <name4> とする	<name4> = max ( <name3> , <name2> ( <name5> ) )	<name4> = max ( <name3> , <name2> ( <name5> ) )
<name4> の <name5> の末尾に <name5> を追加する	<name4> . <name5> . append ( <name5> )	<name2> . <name5> . append ( <name5> )
<name3> の <name5> 番目を展開し、それぞれ <name1> 、 <name6> 、 <name4> 、 <name2> とする	<name1> , <name6> , <name4> , <name2> = <name3> [ <name5> ]	( <name1> , <name6> , <name4> , <name2> = <name3> [ <name5> ] )
<name2> の先頭を <name6> の <val1> 番目にする	<name6> [ <val1> ] = <name2> [ 0 ]	( <name6> [ <val1> ] = <name2> [ 0 ] )
<name2> の先頭の <val6> 番目が <val4> と等しくかつ <name2> の <val6> 番目の <val6> 番目が <val1> と等しいとき、	if <name2> [ 0 ] [ <val6> ] == <val4> and <name2> [ <val6> ] [ <val6> ] == <val1> :	for <name2> in <name2> [ <val6> ] [ <val6> ] == <val4> and <name2> [ <val6> ] [ <val6> ] == <val1> :
<name3> の <name4> 番目の <name1> 番目が <name5> と等しくなくかつ <name3> の <name1> 番目の <name2> 番目が <name5> と等しくないとき、	if <name3> [ <name4> ] [ <name1> ] != <name5> and <name3> [ <name1> ] [ <name2> ] != <name5> :	for <name3> in <name3> [ <name4> ] [ <name1> ] != <name5> and <name3> [ <name1> ] [ <name2> ] != <name5> :
<name4> が <name6> から <val5> を引いた値と等しくないとき、	if <name4> != ( <name6> - <val5> ) :	raise <name4> != <name6> - <val5> :
未定値を <name4> の <name6> にする	<name4> . <name6> = None	( <name4> . <name6> = None )
<name1> を <name5> に <name4> と <val6> の論理積のとき <name2> 、そうでなければ <name3> を掛けた値だけ増加させる	<name1> += <name5> * ( <name2> if <name4> & <val6> else <name3> )	<name2> += <name5> * ( <name2> if <name4> & <val6> else <name3> )
<name6> の末尾から空白改行を取り除いた文字列の各要素に整数を適用した列を <name6> とする	<name6> = map ( int , <name6> . rstrip ( ) )	<name4> = map ( int , <name6> [ : - 1 ] . rstrip ( ) )
<name1> ( <name4> , <name2> + <val5> , <name3> )	<name1> ( <name4> , <name2> + <val5> , <name3> )	<name4> ( <name4> , <name2> + <val5> , <name3> )
( 、つまり未定値 ) からなる列の <val5> 回分の列を <name2> とする	<name2> = [ None ] * <val5>	<name2> = [ None ] * <val5>
<name5> を <name3> の <name6> 番目の <val1> 番目にする	<name3> [ <name6> ] [ <val1> ] = <name5>	<name4> [ <name6> ] [ <val1> ] = <name5>
<name5> ( <name6> , <name3> , <name4> ) を <name2> とする	<name2> = <name5> ( <name6> , <name3> , <name4> )	<name2> = <name5> ( <name6> , <name3> , <name4> )
<val5> を <name1> の <name2> の <name3> 番目の <name6> 番目の <name4> 番目にする	<name1> . <name2> [ <name3> ] [ <name6> ] [ <name4> ] = <val5>	<name5> . <name1> [ <name2> . <name3> ] [ <name6> ] [ <name4> ] = <val5>
<name4> が <name3> の <name5> 番目より小さいとき、	if <name4> < <name3> [ <name5> ] :	for <name4> < <name3> [ <name5> ] :
<name6> の <name2> から <val5> を引いた値番目の末尾に <name3> を追加する	<name6> [ <name2> - <val5> ] . append ( <name3> )	<name1> [ <name2> - <val5> ] . append ( <name3> )
<name1> が、つまり未定値と等しくなくまたは <name2> の <name1> 番目でなくかつ <name6> . <name4> ( <name1> , <name2> ) のとき、	if <name1> is None or ( not <name2> [ <name1> ] and <name6> . <name4> ( <name1> , <name2> ) ) :	list ( <name1> is None or not <name2> [ <name1> ] ) and ( not <name6> . <name4> ( <name1> , <name2> ) ) :
( ( 、つまり未定値 ) からなる列の 0 から <name6> 未満までの数列の各要素を <name1> とし、 <name6> の列回分の列 ) からなる列を <name5> とする	<name5> = [ [ None ] * [ <name6> for <name1> in range ( <name6> ) ] ]	<name5> = [ [ None ] * [ <name6> for <name1> in range ( <name6> ) ] ]
<name6> 、 <name3> から <name2> を引いた値の絶対値に <name4> + <val1> から <name5> を引いた値に <name4> + <val1> から <name6> を引いた値を加えた値、 <name5> から <name4> を引いた値に <name6> から <name4> を引いた値を加えた値の最小値を加えた値の最大値を <name6> とする	<name6> = max ( <name6> , abs ( <name3> - <name2> ) + min ( ( <name4> + <val1> - <name5> ) + ( <name4> + <val1> - <name6> ) , ( <name5> - <name4> ) + ( <name6> - <name4> ) ) )	<name4> = max ( <name6> , abs ( <name3> - <name2> ) + min ( <name4> + <val1> - <name5> + ( <name4> + <val1> - <name6> ) , <name5> - <name4> + min ( <name6> - <name4> ) ) )
<name3> が <name4> の <name5> 番目より小さいとき、	if <name3> < <name4> [ <name5> ] :	for <name3> < <name4> [ <name5> ] :
<name5> が <val6> と等しいとき、 <blk> <name4> に <name1> を掛けた値を <name3> で割った余りを <name4> とする </blk>	if <name5> == <val6> : <blk> <name4> = ( <name4> * <name1> ) % <name3> </blk>	: <name4> = <name5> == <val6> : <blk> <name4> = ( <name4> * <name1> ) % <name3> </blk>
<name5> の <name4> 番目の末尾に ( <name6> 、 <name3> ) の組を追加する	<name5> [ <name4> ] . append ( ( <name6> , <name3> ) )	<name3> [ <name4> ] . append ( ( <name6> , <name3> ) )
<name4> を展開し、それぞれ <name6> 、 <name1> とする	<name6> , <name1> = <name4>	( <name6> , <name1> = <name4> )
<name5> の <val4> 番目を <name3> にソート順で挿入する	bisect . insort_left ( <name3> , <name5> [ <val4> ] )	bisect . insort_left ( <name3> , <name5> [ <val4> ] )
<name1> の <val3> 番目を <name2> で割った余りが <val3> と等しくかつ <name1> の <val5> 番目を <name2> で割った余りが <val3> と等しくかつ <name1> の <val4> 番目を <name2> で割った余りが <val3> と等しいとき、	if <name1> [ <val3> ] % <name2> == <val3> and <name1> [ <val5> ] % <name2> == <val3> and <name1> [ <val4> ] % <name2> == <val3> :	for <name1> in <name1> [ <val3> ] % <name2> == <val3> and <name1> [ <val5> ] % <name2> == <val3> and <name1> [ <val4> ] % <name2> == <val3> :
<name3> 内の <val2> を <name1> の文字列で置き換えた文字列の整数値を <name6> とする	<name6> = int ( <name3> . replace ( <val2> , str ( <name1> ) ) )	<name6> = int ( <name3> . replace ( <val2> , str ( <name1> ) ) )
<name2> の <val1> 番目を <name6> とする	<name6> = <name2> [ <val1> ]	<name4> = <name2> [ <val1> ]
<name6> に <val1> を加えた値が <name4> から <val2> を引いた値より大きいとき、	if <name6> + <val1> > <name4> - <val2> :	continue <name6> + <val1> > <name4> - <val2> :
<name5> ( <name1> + <val4> ) を <name3> とする	<name3> = <name5> ( <name1> + <val4> )	<name3> = <name5> ( <name1> + <val4> )
<name3> を空白で分割した字句列を <name6> とする	<name6> = <name3> . split ( )	<name6> = <name3> . split ( )
0 から <name2> 未満までの数列の各要素を <name6> とし、、つまり真の列を <name3> とする	<name3> = [ True for <name6> in range ( <name2> ) ]	<name4> = [ True for <name6> in range ( <name2> ) ]
<name3> を <val2> で割った値を返す	return <name3> / <val2>	yield <name3> / <val2>
<name4> から <name2> を引いた値の <val5> 乗に <name6> から <name3> を引いた値の <val5> 乗を加えた値の平方根を返す	return sqrt ( ( <name4> - <name2> ) ** <val5> + ( <name6> - <name3> ) ** <val5> )	yield sqrt ( ( <name4> - <name2> ) ** <val5> + ( <name6> - <name3> ) ** <val5> )
<val3> 、 <val3> を <name4> 、 <name6> とする	<name4> , <name6> = <val3> , <val3>	<name2> , <name4> , <name6> = <val3> , <val3>
<name4> の末尾に <name6> に <name2> を掛けた値を追加する	<name4> . append ( <name6> * <name2> )	<name4> . append ( <name6> * <name2> )
0 から <val4> 未満までの数列の各要素を <name5> とし、、つまり入力された文字列の整数値の列の集合を <name1> とする	<name1> = set ( [ int ( input ( ) ) for <name5> in range ( <val4> ) ] )	<name1> = set ( [ int ( input ( ) ) for <name5> in range ( <val4> ) ] )
0 から <val4> 未満までの数列の各要素を <name3> とし、、つまり入力された文字列の整数値の列を <name1> とする	<name1> = [ int ( input ( ) ) for <name3> in range ( <val4> ) ]	<name6> = [ int ( input ( ) ) for <name3> in range ( <val4> ) ]
<name2> の <name1> 番目が <name6> より小さいとき、	if <name2> [ <name1> ] < <name6> :	continue [ <name1> ] < <name6> :
<name4> ( <name6> + <name1> + <val5> ) を <name3> とする	<name3> = <name4> ( <name6> + <name1> + <val5> )	else = <name4> ( <name6> + <name1> + <val5> )
<name6> を <name5> の <val1> 番目にする	<name5> [ <val1> ] = <name6>	( <name5> [ <val1> ] = <name6> )
<name3> が、つまり未定値と等しくなくまたは <name3> の長さが <val4> と等しくないとき、	if <name3> is None or len ( <name3> ) != <val4> :	raise <name3> if None is None or len ( <name3> ) != <val4> :
<name1> の <name6> が、つまり未定値と等しくないとき、	if <name1> . <name6> is None :	for <name1> . <name6> != None :
<name3> を <name4> の <name1> の <name6> 番目にする	<name4> . <name1> [ <name6> ] = <name3>	( <name4> . <name1> [ <name6> ] = <name3> )
<name1> の <name4> の <name6> 番目の先頭番目の <val5> 番目を <val3> だけ増加させる	<name1> [ <name4> [ <name6> ] [ <val5> ] ] [ <val5> ] += <val3>	<name1> [ <name4> [ <name6> ] [ <val5> ] ] [ <val5> ] += <val3>
<name1> の <name3> の <name2> 番目の <name6> 番目に <val5> を加えた値を出力する	print ( <name1> . <name3> [ <name2> ] [ <name6> ] + <val5> )	return <name1> [ <name3> . <name2> ] [ <name6> ] + <val5> )
<name1> が <name6> に含まれるとき、 <blk> <name6> 内の <name1> と等しい要素を取り除く </blk>	if <name1> in <name6> : <blk> <name6> . remove ( <name1> ) </blk>	for <name1> in <name6> : <blk> <name6> . remove ( <name1> ) </blk>
<name3> ( <name1> , <name5> , <name4> [ <name2> ] )	<name3> ( <name1> , <name5> , <name4> [ <name2> ] )	<name3> ( <name1> , <name5> , <name4> [ <name2> ] )
<name2> を <name5> で割った余りを出力する	print ( <name2> % <name5> )	print ( <name2> % <name5> )
( ( -1 、 <val3> ) の組、 ( <val3> 、 -1 ) の組、 ( <val1> 、 <val3> ) の組 ) の組をそうでなければ、とする	else = ( ( - <val1> , <val3> ) , ( <val3> , - <val1> ) , ( <val1> , <val3> ) )	else = ( - <val1> , <val3> ) , ( <val3> , - <val1> ) , ( <val1> , <val3> ) )
<val4> が <name5> 以下かどうかが <val2> 以下のとき、	if <val4> <= <name5> <= <val2> :	: if <val4> <= <name5> <= <val2> :
<name1> の先頭から <name1> の <name3> の <name2> 番目を探して見つかった位置を <name1> の <name3> の <name2> 番目にする	<name1> . <name3> [ <name2> ] = <name1> . find ( <name1> . <name3> [ <name2> ] )	<name4> . <name1> [ <name3> . <name2> ] = <name1> . find ( <name1> . <name3> [ <name2> ] )
<name4> の <name2> を <val5> だけ減少させる	<name4> . <name2> -= <val5>	( <name4> . <name2> -= <val5> )
<name6> . <name2> ( <name1> + <name5> , <name3> + <name4> , <val6> )	<name6> . <name2> ( <name1> + <name5> , <name3> + <name4> , <val6> )	set ( <name6> . <name2> ( <name1> + <name5> , <name3> + <name4> , <val6> ) )
<name3> の <name4> 番目の末尾に ( <name6> 、 <name1> ) の組を追加する	<name3> [ <name4> ] . append ( ( <name6> , <name1> ) )	<name3> [ <name4> ] . append ( ( <name6> , <name1> ) )
<name1> を <val6> で割った余りが <val4> と等しいとき、	if <name1> % <val6> == <val4> :	\ <name1> % <val6> == <val4> :
<name2> の <name6> を <name2> とする	<name2> = <name2> . <name6>	input = <name2> . <name6>
<name6> の末尾に <name4> を追加する	<name6> . append ( <name4> )	<name3> . append ( <name4> )
<name2> に <name1> に <name5> を掛けた値を <name4> で割った値を加えた値を <name3> とする	<name3> = <name2> + <name1> * <name5> / <name4>	( <name3> = <name2> + <name1> * <name5> / <name4> )
<val5> 、 <name1> の最大値を出力する	print ( max ( <val5> , <name1> ) )	) print ( max ( <val5> , <name1> ) )
<name3> の <name4> 番目の <name1> を出力する	print ( <name3> [ <name4> ] . <name1> )	<name1> print ( <name3> [ <name4> ] . <name1> ( ) )
<name6> から <name2> を引いた値の <val4> 乗に <name5> から <name3> を引いた値の <val4> 乗を加えた値の平方根を <name1> とする	<name1> = math . sqrt ( ( <name6> - <name2> ) ** <val4> + ( <name5> - <name3> ) ** <val4> )	<name1> = math . sqrt ( ( <name6> - <name2> ) ** <val4> + ( <name5> - <name3> ) ** <val4> )
<name3> ( <name4> , <name5> ) のとき <val2> 、そうでなければ <val1> を出力する	print ( <val2> if <name3> ( <name4> , <name5> ) else <val1> )	print ( <val2> if <name3> ( <name4> , <name5> ) else <val1> )
<name5> の平方根を <name1> とする	<name1> = math . sqrt ( <name5> )	<name1> = math . sqrt ( <name5> )
( ( <val1> ) からなる列の <val1> から <name5> 未満までの数列の各要素を <name3> とし、 <name6> に <val4> を加えた値の列回分の列 ) からなる列を <name2> とする	<name2> = [ [ <val1> ] * [ ( <name6> + <val4> ) for <name3> in range ( <name5> ) ] ]	<name2> = [ [ <val1> ] * [ ( <name6> + <val4> ) for <name3> in range ( <name5> ) ] ]
<name4> の <name5> 番目の <name3> 番目を <val6> だけ増加させる	<name4> [ <name5> ] [ <name3> ] += <val6>	<name4> [ <name5> ] [ <name3> ] += <val6>
<name3> の末尾から空白改行を取り除いた文字列を <name3> とする	<name3> = <name3> . rstrip ( )	<name3> = <name3> . rstrip ( )
0 から <val6> 未満までの数列の各要素を <name3> とし、 0 から <val6> 未満までの数列の各要素を <name4> とし、、つまり偽の列の列を <name2> とする	<name2> = [ [ False for <name4> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]	<name2> = [ [ False for <name4> in range ( <val6> ) ] for <name3> in range ( <val6> ) ]
改行せずに <val4> を書式として <name1> の <name3> で整形した文字列を出力する	print ( <val4> . format ( <name1> . <name3> ) , end = '' )	print ( <val4> . format ( <name1> . <name3> ) , end = <val4> )
<name6> を <name3> から <name1> を引いた値の <val2> 乗だけ増加させる	<name6> += pow ( <name3> - <name1> , <val2> )	<name6> += ( ( <name3> - <name1> ) ** <val2> )
<name2> ( <name6> ) のとき、	if <name2> ( <name6> ) :	for <name2> in <name2> ( <name6> ) :
<name6> 、 <name5> を出力する	print ( <name6> , <name5> )	print ( <name6> , <name5> )
<name6> の先頭を除いた部分列の整数値を返す	return int ( <name6> [ 1 : ] )	return int ( <name6> [ 1 : ] )
0 から <name6> 未満までの数列の各要素を <name1> とし、、つまり空列の列を <name4> とする	<name4> = [ [ ] for <name1> in range ( <name6> ) ]	<name4> = [ [ ] for <name1> in range ( <name6> ) ]
<name1> が <name6> ( <name3> ) に含まれるかどうか	<name1> in <name6> ( <name3> )	( <name1> in <name6> ( <name3> ) )
<name1> ( <name6> [ <val4> ] , <name6> [ <val5> ] ) を <name2> の <name3> にする	<name2> . <name3> = <name1> ( <name6> [ <val4> ] , <name6> [ <val5> ] )	dict . <name3> = <name1> ( <name6> [ <val4> ] , <name6> [ <val5> ] )
<name3> を <name6> [ <val4> ] から <val1> を引いた値に <val2> を掛けた値に <name6> [ <val4> ] から <val1> を引いた値を <val5> で割った商を加えた値から <name6> の <val4> 番目から <val1> を引いた値を <val3> で割った商を引いた値に <name6> の <val4> 番目から <val1> を引いた値を <val6> で割った商を加えた値だけ増加させる	<name3> += ( <name6> [ <val4> ] - <val1> ) * <val2> + ( <name6> [ <val4> ] - <val1> ) // <val5> - ( <name6> [ <val4> ] - <val1> ) // <val3> + ( <name6> [ <val4> ] - <val1> ) // <val6>	<name1> += ( ( <name6> [ <val4> ] - <val1> ) * <val2> + ( <name6> [ <val4> ] - <val1> ) // <val5> - ( <name6> [ <val4> ] - <val1> ) // <val3> ) + ( <name6> [ <val4> ] - <val4> ] ) // <val1>
-1 を <name4> の <name6> にする	<name4> . <name6> = - 1	<name4> . <name6> = - 1
<name6> の、つまり先頭から <name4> を <val5> で割った商までの部分列を <name3> とする	<name3> = <name6> [ : <name4> // <val5> ]	else = <name6> [ : <name4> // <val5> ]
