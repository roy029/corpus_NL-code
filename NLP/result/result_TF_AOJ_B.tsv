「ハローワールド」と出力する	print ( 'Hello World' )	math . print ( <A> )
<B> 文字列を最後から半角スペースで分割してリストを返した結果を <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> リストの総和を求める	sum ( <A> )	os . sum ( <A> )
半角スペースを区切り文字に指定して <A> を分割した結果をリストに直す	<A> . split ( )	<A> . split ( )
<A> に並び順を保ったまま <B> を挿入できる最後のインデックス	bisect . bisect_right ( <A> , <B> )	itertools . bisect_right ( <A> , <B> )
<A> 値内の <B> の登場回数を見る	<A> . count ( <B> )	<A> . count ( <B> )
空白を区切り文字に指定して文字列 <B> を分割した結果をリストに直して、 <A> に代入する	<A> = <B> . split ( )	sorted ( <A> , <B> )
ユーザが入力した文字列をリストに変換して、 <A> に代入する	<A> = list ( input ( ) )	print ( <A> , input ( ) )
もし <A> が <B> と等しくないならば	if <A> != <B> :	if <A> != <B> :
入っているを <A> に処理する	for key in <A> . keys ( ) : value = <A> [ key ]	itertools . keys ( <A> , key = <A> [ key ]
<B> リストを降順にし、 <A> にする	<A> = <B> . reverse ( )	<A> = <B> . reverse ( )
<B> 文字列の中の <D> 番目から <E> 番目に <C> がある右側の位置を <A> にする	<A> = <B> . rfind ( <C> , <D> , <E> )	<A> = <B> . rfind ( <C> , <D> , <E> )
<A> を逆順にソート直す	sorted ( <A> , reverse = True )	reversed ( <A> , reverse = True )
<A> 文字列を長さが <B> になるように '0' で左を埋めた文字列	<A> . zfill ( <B> )	not <A> . zfill ( <B> )
<A> たす <B> の値を <A> に代入する	<A> += <B>	<A> += <B>
ネイピア数を算出する	math . e	math . e
<A> リストの全ての値を削除する	<A> . clear ( )	<A> . clear ( )
<A> 、 <B> 、 <C> の最大値を求める	max ( <A> , <B> , <C> )	maxlen . max ( <A> , <B> , <C> )
<B> を <A> の最後に加える	<A> . append ( <B> )	<A> . append ( <B> )
<A> と <B> の最大公約数を調べる	math . gcd ( <A> , <B> )	math . gcd ( <A> , <B> )
<A> リスト内の値の順番を逆転する	<A> [ : : -1 ]	[ <A> : : -1 ]
<A> リストの中の <B> と等しい要素の最初を消去する	<A> . remove ( <B> )	<A> . remove ( <B> )
<A> が奇数ならば	if <A> % 2 == 1 :	% <A> % 2 == 1 :
値 <A> を <B> で区切ったデータのリスト	<A> . split ( <B> )	itertools . split ( <A> , <B> )
文字列 <A> の先頭から空白改行を除いたデータ	<A> . lstrip ( )	<A> . lstrip ( )
空白で区切って入力された複数の整数をリストとして受け取り、 <A> にする	<A> = list ( map ( int , input ( ) . split ( ) ) )	<A> = list ( map ( int , input ( ) . split ( ) ) )
<B> をリスト <A> の末尾に加える	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を分割した結果をリスト型に置き換え、 <A> とする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
ユーザから入力を数字として得る	int ( input ( ) )	int ( input ( ) )
リスト <A> からランダムに値を <B> つチョイス直す	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
値 <A> の中の <B> の出現回数を調べる	<A> . count ( <B> )	<A> . count ( <B> )
<B> の先頭から空白改行を抜いた文字列を <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
繰り返すたびに <A> にリスト [ <B> , <C> , <D> ] の要素を代入	for <A> in [ <B> , <C> , <D> ] :	for <A> in [ <B> , <C> , <D> ] :
算術用ライブラリをインポート置き換える	import math	math . import ( <A> )
数字を得た結果を <A> にする	<A> = int ( input ( ) )	<A> = int ( input ( ) )
<A> 値を <B> で区切った値のリスト	<A> . split ( <B> )	itertools . split ( <A> , <B> )
入れてリスト <C> 内の値を <B> を間に連結したデータを <A> に代入する	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<A> 文字列の英大小文字を交換したデータ	<A> . strswap ( )	random . strswap ( <A> )
<A> の各要素の絶対値でソートする	sorted ( <A> , key = abs )	sorted ( <A> , key = abs )
<A> が <B> より大きいかどうか	<A> > <B>	reversed ( <A> , <B> )
半角スペースを区切り文字に指定して <B> 文字列を分割した結果をリスト型にし、 <A> にする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> 文字列を空白で分割してリストを返した結果を <A> にする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<A> に <B> をかけた値を <A> に代入	<A> *= <B>	str ( <A> , <B> )
<A> に <B> 未満の連続した数値を代入して、以降のプログラムをループ直す	for <A> in range ( <B> ) :	for <A> in range ( <B> ) :
<B> 文字列を終わりから空白で分割してリストを返した結果を <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> とプリントする	print ( <A> )	print ( <A> )
<A> を <B> でわったときの商と剰余の組	divmod ( <A> , <B> )	math . divmod ( <A> , <B> )
もし値 <A> が数字であるのとき	if <A> . isdigit ( ) :	for <A> in range ( <B> ) :
リスト <A> をシャッフルする	random . suffle ( <A> )	collections . suffle ( <A> )
文字列 <A> の右側から空白改行を抜いた値	<A> . rstrip ( )	<A> . rstrip ( )
<B> で <A> をわった結果の切り上げ	( <A> + <B> - 1 ) // <B>	( <A> - <B> - 1 ) // <B>
<C> の中の正規表現 <A> のパターンにマッチした箇所を <B> に置き換えた値と置き換え箇所の個数	re . subn ( <A> , <B> , <C> )	re . sub ( <A> , <B> , <C> )
もしデータ <A> が英小文字ならば	if <A> . islower ( ) :	islower ( <A> , <B> )
文字列 <B> の英大小文字を交換した文字列を <A> に代入する	<A> = <B> . strswap ( )	print ( <A> = <B> )
<B> を区切り文字、最大分割数を <C> に設定して <A> 文字列を終わりから分割してリスト型に直す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
文字列 <B> を空白で分割した文字列のリストを <A> とする	<A> = <B> . split ( )	( <A> = <B> . split ( )
文字列を入力する	input ( )	str ( <A> )
<A> リストの全ての要素を消す	<A> . clear ( )	<A> . clear ( )
<A> の <B> 乗	pow ( <A> , <B> )	math . pow ( <A> , <B> )
<B> リストの中の値を連結した文字列を <A> に代入する	<A> = '' . join ( <B> )	'' . join ( <A> , <B> )
<A> 集合から <B> を削除する	<A> . remove ( <B> )	( <A> . remove ( <B> )
<A> を <B> でわったあまりを <A> に代入	<A> % = <B>	sorted ( <A> % = <B> )
間に <A> を入れてリスト <B> の中の要素を連結した文字列	<A> . join ( <B> )	<A> . join ( <B> )
<A> を <B> だけシフトした左シフト値を計算する	<A> << <B>	reversed ( <A> , <B> )
辞書 <A> のキー <B> の	<A> [ <B> ]	sorted ( <A> , <B> )
<B> 文字列を終わりから <C> で最大分割数 <D> まで分割した文字列のリストを <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
文字列 <A> の終わりから空白改行を取り除いたデータ	<A> . rstrip ( )	<A> . rstrip ( )
半角スペース区切りで入力された複数の整数をリストとして受け取る	list ( map ( int , input ( ) . split ( ) ) )	print ( map ( int , input ( ) . split ( ) ) )
<B> を浮動小数点数に置き換え、 <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
<A> を最も近い数字に切り上げ	math . ceil ( <A> )	math . ceil ( <A> )
<C> を区切り文字に設定して文字列 <B> を分割した結果をリストにした結果を <A> とする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> 辞書のキー <B> のを参照する	<A> [ <B> ]	del <A> [ <B> ]
リスト <A> を降順にソート置き換える	<A> . sort ( reverse = True )	reversed ( <A> , reverse = True )
<A> を絶対値に直してソート直す	sorted ( <A> , key = abs )	sorted ( <A> , key = abs )
文字列 <B> の先頭から空白改行を抜いた文字列を <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
スペースを区切り文字に指定して <B> 文字列を終わりから分割してリストにし、 <A> に代入する	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<A> の <C> 番目が <B> で終わるかどうか	<A> . endswith ( <B> , <C> )	itertools . endswith ( <A> , <B> , <C> )
<A> を英小文字に変換した文字列	<A> . lower ( )	<A> . lower ( )
空白を区切り文字に指定して <B> を最後から分割してリスト型にして、 <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
後ろから <C> で <B> 文字列を分割してリストを返して、 <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<C> を区切り文字に設定して文字列 <B> を分割した結果をリストにして返して、 <A> に代入する	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
値を <A> からランダムにチョイスする	random . choice ( <A> )	random . choice ( <A> )
<A> 、 <B> 、 <C> のうちもっとも小さい値	min ( <A> , <B> , <C> )	x . min ( <A> , <B> , <C> )
リスト <A> 内の値が少なくともひとつは真かどうか	any ( <A> )	random . any ( <A> )
ユーザが入力した数字を半角スペースで区切ってリストとして得、 <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
<A> の中の大文字を小文字にする	<A> . lower ( )	( <A> . lower ( )
区切り文字に指定して <B> 文字列を <C> を最後から分割してリストにされた結果を <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<A> 値の中の小文字を大文字に直す	<A> . upper ( )	<A> . upper ( )
<C> を区切り文字、最大分割数を <D> に設定して文字列 <B> を最後から分割してリスト型にして返された結果を <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
集合 <A> と集合 <B> の対称差を計算する	<A> . symmetric_difference ( <B> )	<A> . symmetric_difference ( <B> )
<B> のセットを <A> に代入する	<A> = set ( <B> )	<A> = set ( <B> )
リスト <B> を大きい方から順に直し、 <A> に代入する	<A> = <B> . reverse ( )	sorted ( <A> , reverse = True )
<B> を区切り文字、最大分割数を <C> として <A> 文字列を最後から分割してリストにして返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
文字列 <A> の先頭から空白改行を除いた値	<A> . lstrip ( )	<A> . lstrip ( )
区切り文字に指定して <B> 文字列を <C> を終わりから分割してリストにされた結果を <A> とする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
浮動小数点数に <A> を変換する	float ( <A> )	float ( <A> )
<B> を逆順にした結果を <A> に代入する	<A> = <B> . reverse ( )	sorted ( <A> , reverse = <B> )
<B> を文字列型として得た結果を <A> とする	<A> = str ( <B> )	str ( <A> , <B> )
0 から <B> 未満までの整数乱数を <A> とする	<A> = random . randrange ( <B> )	randrange . randrange ( <A> , <B> )
<B> を英大文字に変換したデータを <A> に代入する	<A> = <B> . upper ( )	sorted ( <A> = <B> )
<A> 文字列を最後から <B> で分割したデータのリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
ランダムに <A> をシャッフル置き換える	random . shuffle ( <A> )	collections . shuffle ( <A> )
英大文字に値 <B> を変換した値を <A> に代入する	<A> = <B> . upper ( )	<A> = <B> . upper ( )
長さが <C> になるように '0' で <B> 文字列を右寄せした値を <A> にする	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
<C> を区切り文字、最大分割数を <D> に設定して文字列 <B> を最後から分割してリスト型にして返して、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<C> を区切り文字に設定して <B> 文字列を分割した結果をリスト型にした結果を <A> に代入する	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を終わりから分割してリストに置き換えて、 <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
表示しユーザに値を <A> というプロンプトを入力させる	x = input ( <A> )	input ( <A> )
<C> を区切り文字に設定して <B> を分割した結果をリストにして返し、 <A> に代入する	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
1 + <A> の自然対数を調べる	math . log1p ( <A> )	math . log1p ( <A> )
半角スペースごとに入力された複数の整数をリストとして受け取る	list ( map ( int , input ( ) . split ( ) ) )	print ( map ( int , input ( ) . split ( ) ) )
半角スペースごとに入力された数値を受け取り <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	, <A> , <B> , <C> = map ( int , input ( ) . split ( ) )
入力された整数値を半角スペースで分割し <A> 、 <B> 、 <C> とする	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	sorted ( <A> , <B> , <C> )
<A> を <B> でわったあまりを <A> に入れる	<A> % = <B>	reversed ( <A> , = <B> )
文字列 <B> を末尾から <C> で分割してリストを返した結果を <A> にする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
終わりから <B> で <A> 文字列を最大分割数 <C> まで分割してリストを返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> が <B> で割った時の余りが <C> であるでない場合	if <A> % <B> != <C> :	if <A> % <B> != <C> :
<A> 文字列が <B> で終わるかどうか	<A> . endswith ( <B> )	<A> . endswith ( <B> )
区切り文字に指定して <B> を半角スペースを最後から分割してリスト型にした結果を <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> を大きい方から順に並べ直す	<A> . sort ( reverse = True )	reversed ( <A> , reverse = True )
<C> の要素を <A> 、 <D> の要素を <B> へ順番に代入して以降のプログラムをループする	for <A> , <B> in zip ( <C> , <D> ) :	for <A> in zip ( <B> , <C> , <D> ) :
文字列 <A> の中の <C> 番目から <D> 番目に <B> がある位置	<A> . find ( <B> , <C> , <D> )	<A> . rfind ( <B> , <C> , <D> )
長さが <B> になるように '0' で <A> を右寄せした値	<A> . zfill ( <B> )	not <A> . zfill ( <B> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を最後から分割してリストに直された結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
文字列 <B> の終わりから空白改行を除いた値を <A> とする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
空白を区切り文字として <B> を最後から分割してリスト型にして返し、 <A> にする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<B> リストを逆順に置き換えて、 <A> にする	<A> = <B> . reverse ( )	sorted ( <A> , reverse = <B> )
区切り文字として <A> 文字列を <B> を末尾から分割してリストにして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<B> を区切り文字、最大分割数を <C> に設定して文字列 <A> を最後から分割してリスト型にして返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
スペースごとに入力された数値を受け取り <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	sorted ( <A> , <B> , <C> )
末尾から <B> で <A> 文字列を分割してリストを返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<B> 文字列の右側から空白改行を取り除いた文字列を <A> にする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
<C> を区切り文字として文字列 <B> を末尾から分割してリストにして返した結果を <A> にする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<B> 文字列を英小文字に変換したデータを <A> とする	<A> = <B> . lower ( )	<A> = <B> . lower ( )
英大文字に <A> 値を変換したデータ	<A> . upper ( )	( <A> . upper ( )
<B> の最初を英大文字、残りを全て英小文字にした文字列を <A> にする	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<A> リストからランダムに値を選ぶ	random . choice ( <A> )	random . choice ( <A> )
以降の処理を <A> 回ループ置き換える	for i in range ( <A> ) :	hex ( <A> )
集合 <A> から <B> を除去する	<A> . remove ( <B> )	. <A> . remove ( <B> )
<B> を区切り文字、最大分割数を <C> に設定して <A> 文字列を最後から分割してリストにして返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<B> の終わりから空白改行を抜いたデータを <A> に代入する	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
繰り返しから強制的に抜ける	break	random . break ( <A> )
<A> 集合と <B> セットの差を得る	<A> . difference ( <B> )	reversed ( <A> . difference ( <B> )
文字列 <A> 内の <C> 番目から <D> 番目に <B> がある位置	<A> . find ( <B> , <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<B> を <A> 集合に付加する	<A> . add ( <B> )	add ( <A> . add ( <B> )
<A> を <B> で剰余を計算する	<A> % <B>	math . remainder ( <A> , <B> )
<A> が <B> の上位集合の場合	if <A> . issuperset ( <B> ) :	if <A> . issuperset ( <B> ) :
区切り文字に指定して <A> を <B> を最後から分割してリストに直す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
文字列 <A> の両端から空白改行を取り除いた文字列	<A> . strip ( )	<A> . strip ( )
<B> 文字列内の大文字を小文字にした結果を <A> に代入する	<A> = <B> . lower ( )	<A> = <B> . lower ( )
<A> を <B> で最大分割数 <C> まで分割した値のリスト	<A> . split ( <B> , <C> )	<A> . split ( <B> , <C> )
文字列 <A> の英大小文字を逆にした値	<A> . strswap ( )	<A> . strswap ( )
空白を区切り文字として文字列 <B> を末尾から分割してリストにして返された結果を <A> に代入する	<A> = <B> . rsplit ( )	print ( <A> = <B> )
わった値を <A> を <B> で切り上げる	( <A> + <B> - 1 ) // <B>	range ( <A> , <B> - 1 ) // <B>
文字列 <B> の最初から空白改行を除いた値を <A> にする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
数値に <A> を直す	int ( <A> )	reversed ( <A> )
<B> 文字列内の <D> 番目から <E> 番目に <C> がある位置を <A> に代入する	<A> = <B> . find ( <C> , <D> , <E> )	sorted ( <A> , <B> , <C> , <D> , <E> )
<A> 回繰り返す	for i in range ( <A> ) :	for i in range ( <A> ) :
<B> と <C> の最小公倍数を <A> に代入する	<A> = math . lcm ( <B> , <C> )	round ( <A> , <B> , <C> )
<A> リストの全ての要素を取り除く	<A> . clear ( )	<A> . clear ( )
半角スペースを区切り文字に指定して文字列 <B> を最後から分割してリストに直された結果を <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> で <A> の最初を拡張する	<A> . appendleft ( <B> )	re . appendleft ( <A> , <B> )
<B> のコサインを <A> にする	<A> = math . cos ( <B> )	math . cos ( <A> , <B> )
<B> の英大小文字を逆にしたデータを <A> とする	<A> = <B> . strswap ( )	print ( <A> = <B> )
カンマ区切りで <A> を表示する	print ( <A> , sep = ',' )	datetime . print ( <A> , sep = ',' )
<B> を区切り文字に設定して <A> を分割した結果をリスト型にして返す	<A> . split ( <B> )	. <A> . split ( <B> )
<B> を最後からスペースで分割してリストを返して、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
ユーザが入力した数値を空白で区切ってリストとして受け取る	list ( map ( int , input ( ) . split ( ) ) )	print ( map ( int , input ( ) . split ( ) ) )
<B> を終わりから半角スペースで分割してリストを返して、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> 文字列の <D> 番目から <C> を後ろから探して見つかった位置を <A> にする	<A> = <B> . rfind ( <C> , <D> )	= <A> . rfind ( <B> , <C> , <D> )
<C> を区切り文字、最大分割数を <D> に設定して文字列 <B> を最後から分割してリストにして返し、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 文字列の両端から <B> を抜いたデータ	<A> . strip ( <B> )	<A> . strip ( <B> )
リスト <A> のセット	set ( <A> )	set ( <A> )
半角スペースごとに入力された複数の整数をリストとして受け取った結果を <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
スペースを区切り文字として文字列 <B> を分割した結果をリスト型にして返して、 <A> にする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> 文字列の最初から <C> を除いた文字列を <A> に代入する	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
<B> を浮動小数点数に直された結果を <A> にする	<A> = float ( <B> )	float ( <A> , <B> )
入力されたデータを空白で分割し <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
<B> 文字列の終わりから <C> を除いた文字を <A> に代入する	<A> = <B> . rstrip ( <C> )	reversed ( <A> , <B> , <C> )
<A> を最も近い数値に切り捨て	math . floor ( <A> )	math . floor ( <A> )
<B> を後ろから <C> で分割した文字列のリストを <A> に代入する	<A> = <B> . rsplit ( <C> )	print ( <A> , <B> , <C> )
リスト <A> の <B> 番目から値をポップ置き換える	<A> . pop ( <B> )	<A> . pop ( <B> )
区切り文字として文字列 <B> をスペースを最後から分割してリスト型にして返した結果を <A> にする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<C> を区切り文字、最大分割数を <D> に設定して <B> を末尾から分割してリスト型にして返した結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 内の要素が少なくともひとつは真かどうか	any ( <A> )	random . any ( <A> )
ユーザから入力された値をリストにされた結果を <A> にする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
<B> 身長と <A> 体重から BMI	<A> / ( <B> / 100 ) ** 2	/ ( <A> , <B> / 100 ) ** 2
スペースを区切り文字に指定して <B> を分割した結果をリスト型にした結果を <A> とする	<A> = <B> . split ( )	( <A> = <B> . split ( )
リスト <A> の全ての値を消去する	<A> . clear ( )	<A> . clear ( )
空白ごとに入力された複数の整数をリストとして受け取って、 <A> にする	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
<B> を <A> リストの最後に入れる	<A> . append ( <B> )	itertools . append ( <A> , <B> )
値 <B> の中の小文字を大文字に置き換えた結果を <A> とする	<A> = <B> . upper ( )	sorted ( <A> , <B> )
長さが <B> になるように '0' で <A> 文字列を右寄せしたデータ	<A> . zfill ( <B> )	<A> . zfill ( <B> )
後ろから <B> で <A> 文字列を分割したデータのリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
リスト <A> 内の <B> と等しい値の先頭を消去する	<A> . remove ( <B> )	<A> . remove ( <B> )
<B> 文字列を後ろから <C> で分割してリストを返された結果を <A> とする	<A> = <B> . rsplit ( <C> )	print ( <A> , <B> , <C> )
<B> リストを降順に置き換え、 <A> に代入する	<A> = <B> . reverse ( )	<A> = <B> . reverse ( )
<A> セットと <B> 集合の共通部分	<A> . intersection ( <B> )	sorted ( <A> . intersection ( <B> )
<A> と <B> が等しいとき	if <A> == <B> :	if <A> == <B> :
<A> に <B> を <A> にかけた値を代入する	<A> *= <B>	str ( <A> , <B> )
<A> 文字列を最後から <B> で最大分割数 <C> まで分割したデータのリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<B> リスト内の値を連結した値を <A> とする	<A> = '' . join ( <B> )	'' . join ( <A> , <B> )
データ <A> の最初が <B> で始まる{かどうか}	<A> . startswith ( <B> )	<A> . startswith ( <B> )
半角スペースを区切り文字に指定して文字列 <B> を最後から分割してリストに直して、 <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
区切り文字に指定して <B> をスペースを最後から分割してリストにした結果を <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> を終わりから空白で分割した文字列のリスト	<A> . rsplit ( )	<A> . rsplit ( )
<A> からランダムに値を <B> つチョイス直す	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
空白を区切り文字に指定して <B> 文字列を分割した結果をリスト型に直し、 <A> に代入する	<A> = <B> . split ( )	sorted ( <A> , <B> )
末尾から <C> で <B> 文字列を分割した文字列のリストを <A> にする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
文字列 <B> の先頭から <C> を取り除いた文字列を <A> とする	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
<B> をリストとして得、 <A> にする	<A> = list ( <B> )	print ( <A> , <B> )
スペースを区切り文字として <A> 文字列を分割した結果をリストにして返す	<A> . split ( )	<A> . split ( )
<B> を整数型に変換して、 <A> とする	<A> = int ( <B> )	int ( <A> , <B> )
<B> を区切り文字、最大分割数を <C> に指定して文字列 <A> を分割した結果をリスト型に置き換える	<A> . split ( <B> , <C> )	. <A> . split ( <B> , <C> )
区切り文字として <B> を <C> を末尾から分割してリストにして返された結果を <A> にする	<A> = <B> . rsplit ( <C> )	<A> = <B> . rsplit ( <C> )
<A> の二乗を算出する	<A> ** 2	math . sin ( <A> )
入力された数値を半角スペースで区切ってリストとして得た結果を <A> にする	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
<A> のタンジェントを算出する	math . tan ( <A> )	math . tan ( <A> )
<A> 集合が <B> 集合の上位集合かどうか	<A> . issuperset ( <B> )	. <A> . issuperset ( <B> )
<A> の前後の空白を消去する	<A> . strip ( )	<A> . strip ( )
<A> 集合に <B> を加える	<A> . add ( <B> )	add ( <A> . add ( <B> )
<B> を整数型に直して、 <A> に代入する	<A> = int ( <B> )	int ( <A> , <B> )
文字列 <A> を長さが <B> になるように左を '0' で埋めた値	<A> . zfill ( <B> )	. <A> . zfill ( <B> )
複数の入力値をリストとして受け取った結果を <A> に代入する	<A> = list ( input ( ) )	not <A> = list ( input ( ) )
入力された数値を半角スペースで区切ってリストとして受け取って、 <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
<A> の末尾が <B> で終わるかどうか	<A> . endswith ( <B> )	random . endswith ( <A> , <B> )
文字列 <A> を <B> で最大分割数 <C> まで分割したデータのリスト	<A> . split ( <B> , <C> )	. <A> . split ( <B> , <C> )
<B> の先頭から空白改行を取り除いたデータを <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
文字列 <A> を終わりからスペースで分割した値のリスト	<A> . rsplit ( )	<A> . rsplit ( )
区切り文字に設定して <A> を <B> を最後から分割してリスト型に置き換える	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
数値を受け取る	int ( input ( ) )	int ( input ( ) )
<B> を降順にソート置き換えた結果を <A> に代入する	<A> = <B> . sort ( reverse = True )	reversed ( <A> , reverse = True )
<A> を <B> で分割した文字列のリスト	<A> . split ( <B> )	. <A> . split ( <B> )
<C> を区切り文字、最大分割数を <D> として <B> を終わりから分割してリストにして返された結果を <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> の先頭から <B> を取り除いた文字列	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<A> リストをランダムにシャッフルする	random . shuffle ( <A> )	itertools . shuffle ( <A> )
<A> を変換したデータ	str ( <A> )	os . str ( <A> )
<B> を空白で分割してリストを返した結果を <A> とする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<A> と <B> の和を求める	<A> + <B>	reversed <A> + <B>
区切り文字として <B> 文字列を半角スペースを末尾から分割してリスト型にして返した結果を <A> に代入する	<A> = <B> . rsplit ( )	print ( <A> = <B> )
リトルエンディアンとして	byteorder = 'little'	byteorder = <B>
<A> の両端から空白改行を抜いたデータ	<A> . strip ( )	<A> . strip ( )
<B> を区切り文字に設定して <A> を分割した結果をリスト型に置き換える	<A> . split ( <B> )	. <A> . split ( <B> )
文字列 <B> を最後から半角スペースで分割してリストを返し、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
リスト <A> の中の要素を連結したデータ	'' . join ( <A> )	'' . join ( <A> )
<A> を降順に直す	reversed ( <A> )	( <A> . reverse ( )
<A> の一部分を取り出す	<A> [ start : end ]	<A> [ : end ]
もし <A> 文字列の <C> 番目が <B> で始まる{かどうか}の場合	if <A> . startswith ( <B> , <C> ) :	if <A> . startswith ( <B> , <C> ) :
<A> と <B> の商を計算する	<A> / <B>	not <A> <B>
<A> の英大小文字を逆にした文字列	<A> . strswap ( )	<A> . strswap ( )
<A> 値中の英字全てが小文字かどうか	<A> . islower ( )	<A> . islower ( )
<B> 文字列の <D> 番目から <E> 番目の間で <C> を右側から探して見つかった位置を <A> とする	<A> = <B> . rfind ( <C> , <D> , <E> )	<A> = <B> . rfind ( <C> , <D> , <E> )
命令を実行したエポックタイム	datetime . datetime . now ( )	math . datetime . now ( )
<A> 掛ける <B> を算出する	<A> * <B>	<A> - <B>
区切り文字に設定して文字列 <B> を <C> を最後から分割してリスト型に直された結果を <A> とする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<A> の中の <C> 番目から <D> 番目に <B> がある右側の位置	<A> . rfind ( <B> , <C> , <D> )	re . rfind ( <A> , <B> , <C> , <D> )
<A> の <C> 番目から <D> 番目の間で <B> を探して見つかった位置	<A> . find ( <B> , <C> , <D> )	( <A> . rfind ( <B> , <C> , <D> )
最後から <B> で <A> を最大分割数 <C> まで分割したデータのリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> 内の小文字を大文字に置き換える	<A> . upper ( )	<A> . upper ( )
文字列 <A> を末尾から <B> で分割した文字列のリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
存在する最初の場所を <A> リスト内の <B> が取得する	<A> . index ( <B> )	index ( <A> . index ( <B> )
半角スペースを区切り文字として <A> を分割した結果をリストにして返す	<A> . split ( )	<A> . split ( )
半角スペースを区切り文字として文字列 <A> を末尾から分割してリスト型にして返す	<A> . rsplit ( )	<A> . rsplit ( )
<A> を入れてリスト <B> の中の値を間に連結した値	<A> . join ( <B> )	<A> . join ( <B> )
<B> 文字列を終わりから <C> で最大分割数 <D> まで分割したデータのリストを <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> をリスト型に直す	list ( <A> )	itertools . list ( <A> )
<A> 中の全ての英字が小文字かどうか	<A> . islower ( )	<A> . islower ( )
可能であれば以下の命令を処理する	try :	math . try ( <A> )
以下の処理を <A> の要素数分ループ直す	for i in range ( len ( <A> ) ) :	range ( len ( <A> ) )
文字列 <B> を末尾から <C> で分割したデータのリストを <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
文字列 <B> を英小文字に変換した値を <A> に代入する	<A> = <B> . lower ( )	reversed ( <A> , <B> )
<B> を整数に置き換え、 <A> とする	<A> = int ( <B> )	int ( <A> , <B> )
<A> が <B> で割った時の余りが <C> であるかどうか	<A> % <B> == <C>	sorted ( <A> , <B> , <C> )
無限にカウントアップする整数列	itertools . count ( )	math . count ( )
<A> 中の英字全てが小文字かどうか	<A> . islower ( )	<A> . islower ( )
<A> というプロンプトを文字列を表示しユーザに入力させる	x = input ( <A> )	any ( <A> )
<A> の <B> 番目から値を抜き出す	<A> . pop ( <B> )	<A> . pop ( <B> )
<A> を入れてリスト <B> 内の要素を間に連結した文字列	<A> . join ( <B> )	<A> . join ( <B> )
<B> を区切り文字、最大分割数を <C> として <A> 文字列を終わりから分割してリスト型にして返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<B> を <A> に入れる	<A> . append ( <B> )	reversed ( <A> , <B> )
並び順をそのままで <B> を <A> に挿入できる場所	bisect . bisect_left ( <A> , <B> )	random . bisect_left ( <A> , <B> )
<A> の値を右にひとつローテート置き換える	<A> . rotate ( )	math . rotate ( <A> )
<C> を区切り文字、最大分割数を <D> に設定して <B> を末尾から分割してリストにして返された結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
文字列 <A> の最初を英大文字、残りを全て英小文字に変換した値	<A> . capitalize ( )	<A> . capitalize ( )
<B> の両端から空白改行を除いたデータを <A> に代入する	<A> = <B> . strip ( )	reversed ( <A> , <B> )
<A> リストのうち <B> 個までのコンビネーション	itertools . combinations ( <A> , <B> )	math . combinations ( <A> , <B> )
数字を入力する	int ( input ( ) )	int ( input ( ) )
<A> 文字列の最後から <B> を抜いた文字	<A> . rstrip ( <B> )	itertools . rstrip ( <A> , <B> )
<A> を英小文字に変換した値	<A> . lower ( )	( <A> . lower ( )
ユーザが入力した整数値をスペースで区切ってリストとして受け取られた結果を <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
文字列 <B> を最後から空白で分割してリストを返して、 <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> のイミュータブルな集合を <A> にする	<A> = frozenset ( <B> )	pow ( <A> , <B> )
<A> 文字列を末尾から <B> で分割した値のリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<A> 内の要素を連結した値	'' . join ( <A> )	'' . join ( <A> )
セット <A> とセット <B> が互いに素かどうか	<A> . isdisjoint ( <B> )	<A> . isdisjoint ( <B> )
存在するインデックスを <A> の <B> が取得する	<A> . index ( <B> )	<A> . index ( <B> )
<A> 文字列を長さが <B> になるように '0' で左を埋めたデータ	<A> . zfill ( <B> )	not <A> . zfill ( <B> )
<A> 文字列の <C> 番目から <B> を逆順に探して見つかった位置	<A> . rfind ( <B> , <C> )	. <A> . rfind ( <B> , <C> )
<B> 文字列を末尾から空白で分割してリストを返した結果を <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> を区切り文字、最大分割数を <C> として <A> 文字列を分割した結果をリストにして返す	<A> . split ( <B> , <C> )	<A> . split ( <B> , <C> )
<B> の先頭を英大文字、残りを全て英小文字にした値を <A> とする	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<B> 文字列の左側から空白改行を抜いたデータを <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<C> を区切り文字に指定して <B> を最後から分割してリスト型にして、 <A> にする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
命令を実行した日	datetime . date . today ( ) . day	math . date . today ( )
<A> の余分な改行を除去する	<A> . strip ( )	<A> . strip ( )
文字列 <A> を後ろから空白で分割してリストを返す	<A> . rsplit ( )	<A> . rsplit ( )
<A> 文字列の中の <B> がある位置	<A> . find ( <B> )	<A> . find ( <B> )
<B> リストを逆順に並べ変えて、 <A> に代入する	<A> = <B> . sort ( reverse = True )	reversed ( <A> , reverse = <B> )
入れて <B> リスト内の値を <A> を間に連結したデータ	<A> . join ( <B> )	<A> . join ( <B> )
<B> の先頭から空白改行を除いた値を <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<A> が <B> よりも大きいかどうか	<A> > <B>	sorted ( <A> , <B> )
<A> 内の値の順番を逆転する	<A> [ : : -1 ]	<A> [ : : : -1 ]
<A> リストに含まれる全ての値が真かどうか	all ( <A> )	any ( <A> )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を終わりから分割してリスト型にされた結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 文字列を最後から半角スペースで分割したデータのリスト	<A> . rsplit ( )	<A> . rsplit ( )
<A> に最も近い整数値に切り上げを調べる	math . ceil ( <A> )	math . ceil ( <A> )
文字列 <B> の中の大文字を小文字に置き換えられた結果を <A> にする	<A> = <B> . lower ( )	reversed ( <A> , <B> )
文字列 <A> の先頭を英大文字、残りを全て英小文字にした値	<A> . capitalize ( )	<A> . capitalize ( )
文字列 <A> の <C> 番目から <D> 番目の間で <B> を後ろから探して見つかった位置	<A> . rfind ( <B> , <C> , <D> )	re . rfind ( <A> , <B> , <C> , <D> )
<A> がもし <B> 未満または <C> 以上ならば	if <A> < <B> or <A> >= <C> :	if <A> < <B> or <A> >= <C> :
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を後ろから分割してリストに直し、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 集合と <B> 集合の差を計算する	<A> . difference ( <B> )	set ( <A> . difference ( <B> )
<A> に <B> を入れる	<A> = <B>	reversed ( <A> , <B> )
集合 <A> と集合 <B> の対称差集合	<A> . symmetric_difference ( <B> )	<A> . symmetric_difference ( <B> )
文字列 <B> を長さが <C> になるように '0' で左を埋めたデータを <A> にする	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
<A> 文字列の左側から空白改行を取り除いた文字列	<A> . lstrip ( )	<A> . lstrip ( )
<A> の <B> 番目から末尾までの値を取り出す	<A> [ <B> : ]	del ( <A> [ <B> ] )
<A> の仮数と指数を算出する	math . frexp ( <A> )	math . frexp ( <A> )
リスト <A> の合計を計算する	sum ( <A> )	os . sum ( <A> )
<C> を区切り文字に設定して文字列 <B> を最後から分割してリスト型にして返した結果を <A> にする	<A> = <B> . rsplit ( <C> )	print ( <A> , <B> rsplit <C> )
改行を表示する	print ( )	datetime . print ( )
<C> の中の正規表現 <A> のパターンにマッチした箇所を <B> に置き換えたデータと置き換え箇所の個数	re . subn ( <A> , <B> , <C> )	re . sub ( <A> , <B> , <C> )
<B> 文字列の先頭を英大文字、残りを全て英小文字に変換したデータを <A> とする	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<B> をリストに変換した結果を <A> とする	<A> = list ( <B> )	not <A> + <B>
<A> を大きい方から順に直す	<A> . reverse ( )	<A> . reverse ( )
ユーザが入力した浮動小数点数を <A> と置き換える	<A> = float ( input ( ) )	float ( <A> , input ( ) )
<B> をリスト型にした結果を <A> にする	<A> = list ( <B> )	print ( <A> , <B> )
<A> からランダムに要素を選択する	random . choice ( <A> )	collections . choice ( <A> )
もし何らかの例外が発生した時	except :	if <A> . except ( ) :
文字列 <B> の両端から <C> を除いた値を <A> にする	<A> = <B> . strip ( <C> )	<A> = <B> . strip ( <C> )
入力された整数値	int ( input ( ) )	int ( input ( ) )
<A> 内の <C> 番目以降に <B> がある後ろ側の位置	<A> . rfind ( <B> , <C> )	re . rfind ( <A> , <B> , <C> )
文字列 <B> を <C> で最大分割数 <D> まで分割した値のリストを <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
プログラムの実行を終了する	quit ( )	sys . quit ( )
空白を区切り文字に設定して文字列 <B> を分割した結果をリスト型に直して、 <A> にする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> 文字列を最後から <C> で分割したデータのリストを <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<A> の出現回数順の列	<A> . most_common ( )	reversed ( <A> )
最後から <B> で文字列 <A> を最大分割数 <C> まで分割してリストを返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
数値に <A> をする	int ( <A> )	print ( <A> )
<A> リストの <B> 番目に <C> を加える	<A> . insert ( <B> , <C> )	re . insert ( <A> , <B> , <C> )
<A> の常用対数	math . log10 ( <A> )	math . log10 ( <A> )
半角スペースを区切り文字に指定して <B> 文字列を分割した結果をリストにして、 <A> とする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<A> から <B> を削除する	<A> . remove ( <B> )	<A> . remove ( <B> )
2 を底と直す <A> の対数を確認する	math . log2 ( <A> )	math . log2 ( <A> )
値 <B> 内の小文字を大文字に変換した結果を <A> にする	<A> = <B> . upper ( )	( <A> = <B> . upper ( )
リスト <A> のどれかの要素が真かどうか	any ( <A> )	any ( <A> )
<A> の先頭から <B> を探して見つかった位置	<A> . find ( <B> )	<A> . find ( <B> )
もし <B> より <A> が小さい場合	if <A> < <B> :	for <A> in range ( <B> ) :
リスト <B> を昇順にソート置き換えられた結果を <A> にする	<A> = <B> . sort ( )	sorted ( <A> , <B> )
リスト <A> のどれかの値が真かどうか	any ( <A> )	complex ( <A> )
値をリスト <A> からランダムに <B> つチョイス置き換える	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
<A> から始まり <B> 間隔でカウントアップ直す無限の整数列	itertools . count ( <A> , <B> )	random . count ( <A> , <B> )
<B> を長さが <C> になるように '0' で左を埋めたデータを <A> に代入する	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
身長 <B> と体重 <A> から BMI を求める	<A> / ( <B> / 100 ) ** 2	/ ( <A> , <B> / 100 ) ** 2
区切り文字に指定して <B> を空白を終わりから分割してリスト型に置き換えられた結果を <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を後ろから分割してリストに直した結果を <A> にする	<A> = <B> . rsplit ( <C> , <D> )	<A> = <B> . rsplit ( <C> , <D> )
リスト <A> の <B> 番目に <C> を付加する	<A> . insert ( <B> , <C> )	re . insert ( <A> , <B> , <C> )
<A> の文字リスト	list ( <A> )	itertools . list ( <A> )
もし <A> の最後が <B> であるならば	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
後ろから <C> で <B> を分割したデータのリストを <A> に代入する	<A> = <B> . rsplit ( <C> )	print ( <A> , <B> , <C> )
<A> の要素数を算出する	len ( <A> )	len ( <A> )
リスト <A> からランダムに要素を <B> つチョイスする	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
<A> に繰り返すたびにリスト [ <B> , <C> , <D> ] の値を代入する	for <A> in [ <B> , <C> , <D> ] :	for <A> in [ <B> , <C> , <D> ] :
<C> のインデックスを <A> 、要素を <B> へ順番に代入して以下の処理を繰り返す	for <A> , <B> in enumerate ( <C> ) :	min ( <A> , <B> , <C> )
<A> の左側に <B> を付加する	<A> . appendleft ( <B> )	<A> . appendleft ( <B> )
<A> の全ての要素を削除する	<A> . clear ( )	<A> . clear ( )
文字列型に <B> をし、 <A> に代入する	<A> = str ( <B> )	str ( <A> , <B> )
もし <A> が <B> 未満もしくは <C> 以上ならば	if <A> < <B> or <A> >= <C> :	elif <A> < <B> or <A> >= <C> :
もし <A> 文字列の <C> 番目が <B> である{かどうか}のとき	if <A> . startswith ( <B> , <C> ) :	if <A> . startswith ( <B> , <C> ) :
入力されたデータをスペースで分割し <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
集合 <A> と集合 <B> の和集合	<A> . union ( <B> )	<A> . union ( <B> )
入力された文字列	input ( )	math . input ( )
次の命令を <A> 回回す	for i in range ( <A> ) :	itertools . for i in range ( <A> ) :
入れて <C> の中の値を <B> を間に連結した値を <A> に代入する	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
セット <A> に <B> を付加する	<A> . add ( <B> )	<A> . add ( <B> )
文字列 <A> が数字かどうか	<A> . isdigit ( )	math . isdigit ( <A> )
<A> 中の全ての文字が数字かどうか	<A> . isdigit ( )	math . isdigit ( <A> )
<A> 集合から <B> を消す	<A> . remove ( <B> )	. <A> . remove ( <B> )
<A> の 0 番目から <B> 番目の要素を得る	<A> [ : <B> ]	del ( <A> [ <B> ] )
<A> 内の <B> と等しい値の先頭を消去する	<A> . remove ( <B> )	<A> . remove ( <B> )
<B> を <C> で最大分割数 <D> まで分割してリストを返した結果を <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
空白を区切り文字に設定して <A> を分割した結果をリストにして返す	<A> . split ( )	<A> . split ( )
もし <A> 文字列の終わりが <B> であるのとき	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
<B> の左側から空白改行を取り除いた値を <A> とする	<A> = <B> . lstrip ( )	print ( <A> , <B> )
文字列 <A> の左側から <B> を取り除いたデータ	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<A> 集合と <B> 集合の対称差集合	<A> . symmetric_difference ( <B> )	<A> . symmetric_difference ( <B> )
<B> リストを逆順に並べ変えられた結果を <A> とする	<A> = <B> . sort ( reverse = True )	reversed ( <A> , reverse = <B> )
プログラムを実行したタイムスタンプ	datetime . datetime . now ( )	math . datetime . now ( )
ユーザが入力した整数値を半角スペースで区切ってリストとして受け取った結果を <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
リスト <A> の <B> と同じ値を削除する	<A> . remove ( <B> )	<A> . remove ( <B> )
ユーザが入力した値をリストに置き換える	list ( input ( ) )	itertools . list ( input ( ) )
文字列 <A> の <C> 番目から <B> を探して見つかった位置	<A> . find ( <B> , <C> )	<A> . rfind ( <B> , <C> )
<A> を最後から半角スペースで分割したデータのリスト	<A> . rsplit ( )	( <A> . rsplit ( )
0 から <A> -1 までの数列	range ( <A> )	random . range ( <A> )
入れてリスト <B> の中の値を間に <A> を連結した文字列	<A> . join ( <B> )	<A> . join ( <B> )
<A> が偶数でないなら	if <A> % 2 != 0 :	if <A> % 2 != 0 :
リスト <A> の要素積を計算する	math . prod ( <A> )	math . prod ( <A> )
文字列型に <A> を変換する	str ( <A> )	str ( <A> )
<A> に <B> をかけた値	<A> * <B>	str ( <A> , <B> )
<A> 集合と <B> セットの差	<A> . difference ( <B> )	difference ( <A> . difference ( <B> )
<B> 文字列の最後から空白改行を抜いた文字列を <A> にする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
ユーザが入力した数字を <A> とする	<A> = int ( input ( ) )	int ( <A> , input ( ) )
<A> を長さが <B> になるように '0' で左を埋めた文字列	<A> . zfill ( <B> )	<A> . zfill ( <B> )
入れてリスト <C> の中の値を間に <B> を連結したデータを <A> とする	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<A> 辞書に入っているを処理する	for key in <A> . keys ( ) : value = <A> [ key ]	bisect . keys ( <A> , key = <A> [ key ]
<A> を降順にソートする	<A> . sort ( reverse = True )	reversed ( <A> , reverse = True )
<A> のうち <B> 個までの重複コンビネーション	itertools . combinations_with_replacement ( <A> , <B> )	math . combinations_with_replacement ( <A> , <B> )
<B> を文字列型に置き換えて、 <A> にする	<A> = str ( <B> )	str ( <A> , <B> )
半角スペースを区切り文字として <B> 文字列を最後から分割してリスト型にして返し、 <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> リストを降順に直して、 <A> にする	<A> = <B> . reverse ( )	<A> = <B> . reverse ( )
<A> に <B> をソート順で終わりに挿入する	bisect . insort_right ( <A> , <B> )	random . insort_right ( <A> , <B> )
<A> 文字列中の全ての英字が小文字かどうか	<A> . islower ( )	( <A> . islower ( )
入力されたデータをリストにし、 <A> にする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
半角スペースを区切り文字に指定して <B> を終わりから分割してリストに置き換え、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> 内の <B> がある後ろ側の位置	<A> . rfind ( <B> )	range ( <A> . rfind ( <B> )
<A> を整数に変換する	int ( <A> )	str ( <A> )
バイト列 <A> からの整数値	<A> . from_bytes ( )	<A> . from_bytes ( )
入力値を得る	input ( )	math . input ( )
入っているを <A> 辞書に処理する	for key in <A> . keys ( ) : value = <A> [ key ]	itertools . keys ( <A> , key = <A> [ key ]
<A> 文字列の先頭から <B> を抜いた文字列	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
数値を入力した結果を <A> にする	<A> = int ( input ( ) )	int ( <A> )
入力された数字を空白ごとに受け取り <A> 、 <B> 、 <C> とする	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	print ( map ( <A> , <B> , <C> ) . split ( <C> ) )
<A> の値が全て真かどうか	all ( <A> )	min ( <A> )
<B> 分の <A> を算出する	<A> / <B>	<A> / <B>
<A> 集合と <B> 集合の共通部分を取得する	<A> . intersection ( <B> )	sorted ( <A> . intersection ( <B> )
<B> 内の大文字を小文字にし、 <A> にする	<A> = <B> . lower ( )	reversed ( <A> , <B> )
<A> かつ <B> でない	not <A> and <B>	not <A> and <B>
文字列 <A> の左側から空白改行を取り除いたデータ	<A> . lstrip ( )	<A> . lstrip ( )
<A> に <B> 未満の連続した数値を代入して、次の命令を回す	for <A> in range ( <B> ) :	for <A> in range ( <B> ) :
文字列 <B> の最初から空白改行を抜いたデータを <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<C> を区切り文字、最大分割数を <D> に設定して <B> を終わりから分割してリスト型に直し、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
文字列 <A> を最後から <B> で最大分割数 <C> まで分割してリストを返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
ユーザが入力した整数値を半角スペースで区切ってリストとして受け取って、 <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
リスト <A> を小さい方から順に並べ直す	<A> . sort ( )	random . sort ( <A> )
文字列 <B> の最後から <C> を取り除いた文字を <A> に代入する	<A> = <B> . rstrip ( <C> )	reversed ( <A> , <B> , <C> )
文字列 <B> を最後から <C> で分割した値のリストを <A> とする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<A> リストの <B> 番目から要素をポップ置き換える	<A> . pop ( <B> )	<A> . pop ( <B> )
<A> の <B> 番目から <C> 番目の値を抜き出す	<A> [ <B> : <C> ]	sorted ( <A> , <B> , <C> )
<B> を整数に変換した結果を <A> とする	<A> = int ( <B> )	sorted ( <A> , <B> )
値 <A> の小文字を大文字に直す	<A> . upper ( )	( <A> . upper ( )
<B> の後ろから <C> を探して見つかった位置を <A> にする	<A> = <B> . rfind ( <C> )	= <A> . rfind ( <B> , <C> )
浮動小数点数に <B> を変換して、 <A> にする	<A> = float ( <B> )	float ( <A> , <B> )
リスト <B> をリスト <A> に展開して付加する	<A> . extend ( <B> )	print ( <A> . extend ( <B> )
リスト <A> 内の要素を連結した文字列	'' . join ( <A> )	'' . join ( <A> )
整数型として <B> を取得した結果を <A> にする	<A> = int ( <B> )	sorted ( <A> , <B> )
<B> の最初から空白改行を抜いたデータを <A> にする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<A> の先頭から <B> を抜いたデータ	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<B> の左側から <C> を取り除いた文字列を <A> にする	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
<A> 文字列を全て小文字に置き換える	<A> . lower ( )	<A> . lower ( )
<A> が偶数でないかどうか	<A> % 2 != 0	print ( not <A> , 2 )
<A> の一番小さい値をチェックする	min ( <A> )	min ( <A> )
整数として <B> を取得した結果を <A> に代入する	<A> = int ( <B> )	sorted ( <A> , <B> )
<B> を <A> リストの右側に付加する	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<B> の左側から空白改行を抜いた値を <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
スペースを区切り文字に指定して文字列 <B> を分割した結果をリストにした結果を <A> とする	<A> = <B> . split ( )	( <A> = <B> . split ( )
<A> 値の <B> の登場回数を確認する	<A> . count ( <B> )	<A> . count ( <B> )
<A> 文字列が全て英数字かどうか	<A> . isalnum ( )	sorted ( <A> )
終わりから <B> で <A> 文字列を分割してリストを返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<B> 文字列の最後から空白改行を抜いたデータを <A> に代入する	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
<B> の最初を英大文字、残りを全て英小文字にしたデータを <A> にする	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<B> 文字列の英大文字と英小文字を交換したデータを <A> とする	<A> = <B> . strswap ( )	print ( <A> = <B> )
<A> というプロンプトを値を表示しユーザに入力させる	x = input ( <A> )	any ( <A> )
<A> 内の <B> の登場回数	<A> . count ( <B> )	<A> . count ( <B> )
以降のプログラムを <A> の長さだけまわす	for i in range ( len ( <A> ) ) :	range ( len ( <A> ) )
<C> を区切り文字、最大分割数を <D> に指定して <B> 文字列を分割した結果をリストにした結果を <A> とする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
終わりから <C> で文字列 <B> を最大分割数 <D> まで分割した文字列のリストを <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> の要素がどれかは真かどうか	any ( <A> )	any ( <A> )
終わりから <C> で <B> 文字列を分割してリストを返した結果を <A> に代入する	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
<A> から <B> の値を引いて <A> に入れる	<A> -= <B>	sorted ( <A> , <B> )
文字列 <A> を後ろから <B> で分割した値のリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
NaN をチェックする	math . nan	byteorder = math . nan
<C> を区切り文字に指定して文字列 <B> を分割した結果をリスト型にされた結果を <A> とする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> に含まれる要素がどれかは真かどうか	any ( <A> )	any ( <A> )
区切り文字に指定して <B> 文字列をスペースを後ろから分割してリスト型にした結果を <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> を末尾からスペースで分割してリストを返し、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> の角度	math . degrees ( <A> )	math . degrees ( <A> )
<B> の先頭から <C> を除いた文字列を <A> とする	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
もし try の中の命令が実行できなかった時	except :	time . except ( <A> )
<A> 文字列の最初から <B> を探して見つかった位置	<A> . find ( <B> )	<A> . lstrip ( <B> )
<B> をリスト <A> の最後に加える	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を終わりから分割してリスト型に置き換え、 <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
区切り文字に設定して <B> をスペースを末尾から分割してリスト型にして返して、 <A> とする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<A> 文字列の両端から <B> を取り除いたデータ	<A> . strip ( <B> )	<A> . strip ( <B> )
一旦 <A> をリターンする	yield <A>	min ( <A> )
ソートされた順序を保ったまま <B> を <A> に挿入できる最後のインデックス	bisect . bisect_right ( <A> , <B> )	re . bisect_right ( <A> , <B> )
<A> 文字列を末尾から半角スペースで分割してリストを返す	<A> . rsplit ( )	<A> . rsplit ( )
<B> を区切り文字に設定して <A> 文字列を最後から分割してリストにして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
区切り文字に指定して文字列 <B> を空白を最後から分割してリストにした結果を <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
存在する最初のインデックスを <A> リストの中の <B> が得る	<A> . index ( <B> )	itertools . index ( <A> , <B> )
終わりから <C> で <B> 文字列を最大分割数 <D> まで分割した文字列のリストを <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<B> をスペースで分割してリストを返して、 <A> にする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> を区切り文字として <A> を最後から分割してリストにして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
半角スペースごとに入力文字列を受け取り <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
<A> の末尾から空白改行を除いた文字列	<A> . rstrip ( )	<A> . rstrip ( )
<C> を区切り文字に設定して <B> を末尾から分割してリスト型にして返した結果を <A> とする	<A> = <B> . rsplit ( <C> )	print ( <A> , <B> , <C> )
<B> 文字列の左側から空白改行を除いた文字列を <A> に代入する	<A> = <B> . lstrip ( )	( <A> = <B> . lstrip ( )
<A> リストの一番小さい値を計算する	min ( <A> )	min ( <A> )
<B> 文字列を後ろから空白で分割した文字列のリストを <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
リスト <A> 内の <B> と等しい要素の先頭を取り除く	<A> . remove ( <B> )	<A> . remove ( <B> )
もし <A> 才未満または <B> 才以上の時	if age < <A> or age >= <B> :	if <A> < <B> or <A> >= <C> :
もし <A> 文字列が全て ASCII 文字なら	if <A> . isascii ( ) :	all ( <A> , <B> )
<A> のうち <B> 個までの組み合わせ	itertools . combinations ( <A> , <B> )	math . combinations ( <A> , <B> )
<B> を浮動小数点数として取得した結果を <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
リスト <B> を降順に置き換えた結果を <A> にする	<A> = <B> . reverse ( )	<A> = <B> . reverse ( )
入れてリスト <C> の中の要素を間に <B> を連結した値を <A> にする	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<A> の自然対数を計算する	math . log ( <A> )	math . log ( <A> )
もし <A> が <B> より小さくないなら	if not <A> < <B> :	if not not <A> > <B> :
末尾から <C> で <B> 文字列を最大分割数 <D> まで分割した文字列のリストを <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 文字列の英大文字と英小文字を逆にした文字列	<A> . strswap ( )	<A> . strswap ( )
<A> を値に置き換える	str ( <A> )	str ( <A> )
現在の作業ディレクトリ	os . getcwd	os . path . now ( )
値 <A> 全てが数字のとき	if <A> . isdigit ( ) :	if <A> . isnumeric ( ) :
<A> と <B> の組み合わせ	math . comb ( <A> , <B> )	math . comb ( <A> , <B> )
原点からの ( <B> , <C> ) の距離を <A> に代入する	<A> = math . hypot ( <B> , <C> )	pow ( <A> , <B> , <C> )
キー <A> が d 辞書に存在しないかどうか	<A> not in date	sorted <A> not ( <A> )
間に <B> を入れて <C> の中の値を連結したデータを <A> に代入する	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<A> の後ろに <B> を入れる	<A> . append ( <B> )	<A> . append ( <B> )
<B> を終わりから空白で分割してリストを返し、 <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> かける <B>	<A> * <B>	<A> / <B>
<B> リストを大きい順に直して、 <A> とする	<A> = <B> . reverse ( )	<A> = <B> . reverse ( )
<A> リストに <B> を入れる	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<A> リストを逆順に直す	<A> . reverse ( )	<A> . reverse ( )
<B> を区切り文字、最大分割数を <C> として文字列 <A> を最後から分割してリストにして返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> の平均を求める	sum ( <A> ) / len ( <A> )	/ ( <A> ) / len ( <A> )
<B> を降順にソート直した結果を <A> にする	<A> = <B> . sort ( reverse = True )	sorted ( <A> , key = <B> )
集合 <A> と集合 <B> の積集合を抽出する	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
要素を <A> リストからランダムに <B> つチョイスする	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
集合 <A> とセット <B> の和集合を抽出する	<A> . union ( <B> )	<A> . union ( <B> )
<B> を区切り文字に設定して文字列 <A> を分割した結果をリスト型にする	<A> . split ( <B> )	. <A> . split ( <B> )
<C> を底と直す <B> の対数を <A> にする	<A> = math . log ( <B> , <C> )	math . log ( <A> , <B> , <C> )
<A> 内の <B> と等しい要素の先頭を消去する	<A> . remove ( <B> )	<A> . remove ( <B> )
文字列 <B> の先頭から <C> を抜いた値を <A> とする	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
<C> を区切り文字、最大分割数を <D> に設定して <B> 文字列を分割した結果をリスト型にして返した結果を <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
末尾から <B> で文字列 <A> を分割したデータのリスト	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
文字列型として <A> を得る	str ( <A> )	str ( <A> )
空のリスト	[ ]	print ( [ ] )
<B> をリスト型にして、 <A> とする	<A> = list ( <B> )	itertools . <A> = ( <B> )
文字列 <A> が全て英数字かどうか	<A> . isalnum ( )	sorted ( <A> )
<A> の長さを確認する	len ( <A> )	len ( <A> )
整数値としてユーザから入力を得て、 <A> にする	<A> = int ( input ( ) )	int ( <A> , input ( ) )
空白を区切り文字として文字列 <B> を最後から分割してリストにして返して、 <A> とする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<A> リストの最後に <B> を付加する	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<A> に最も近い整数に切り上げ	math . ceil ( <A> )	math . ceil ( <A> )
<B> を区切り文字に設定して文字列 <A> を末尾から分割してリスト型にして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
文字列 <A> を <B> で分割した値のリスト	<A> . split ( <B> )	. <A> . split ( <B> )
区切り文字に指定して <A> 文字列を <B> を終わりから分割してリストに直す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
リスト <A> 内の全ての値が真かどうか	all ( <A> )	'' . all ( <A> )
<A> セットと <B> 集合の積集合を抽出する	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
<A> 文字列を末尾から半角スペースで分割したデータのリスト	<A> . rsplit ( )	<A> . rsplit ( )
区切り文字に指定して <B> 文字列を空白を最後から分割してリスト型にして、 <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
値 <A> の前後の半角スペースを消す	<A> . strip ( )	<A> . strip ( )
<B> 値内の小文字を大文字に直した結果を <A> とする	<A> = <B> . upper ( )	( <A> = <B> . upper ( )
<A> の先頭から空白改行を除いた文字列	<A> . lstrip ( )	<A> . lstrip ( )
ユーザから入力された数字をスペースで区切ってリストとして得て、 <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
<B> を整数型に変換された結果を <A> にする	<A> = int ( <B> )	int ( <A> , <B> )
<A> が <B> と互いに素かどうか	<A> . isdisjoint ( <B> )	<A> . isdisjoint ( <B> )
入力された数値をスペースで分割し <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	sorted ( <A> , <B> , <C> )
<A> が <B> 未満かつ <C> 以上ならば	if <A> < <B> and <A> >= <C> :	while <A> < <B> or <A> >= <C> :
空白を区切り文字に設定して文字列 <B> を末尾から分割してリスト型にして返した結果を <A> とする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<A> 文字列を末尾から <B> で最大分割数 <C> まで分割した文字列のリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<C> 内の正規表現 <A> のパターンにマッチした箇所を <B> に置き換えた値	re . sub ( <A> , <B> , <C> )	re . sub ( <A> , <B> , <C> )
<C> を区切り文字、最大分割数を <D> に設定して <B> 文字列を分割した結果をリストにして、 <A> とする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
半角スペースを区切り文字に設定して <B> 文字列を分割した結果をリストにした結果を <A> にする	<A> = <B> . split ( )	( <A> = <B> . split ( )
<A> 集合と <B> 集合の共通部分	<A> . intersection ( <B> )	sorted ( <A> . intersection ( <B> )
もし <A> が発生した時	except <A> :	hex ( <A> )
浮動小数点数型として <A> を得る	float ( <A> )	float ( <A> )
文字列に <A> を変換する	str ( <A> )	str ( <A> )
以降のプログラムを <A> 回繰り返す	for i in range ( <A> ) :	itertools . for i in range ( <A> ) :
<C> を区切り文字、最大分割数を <D> に設定して <B> を末尾から分割してリストにして返し、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 値が全て数字ならば	if <A> . isdecimal ( ) :	if <A> . isdigit ( ) :
<A> を降順にソート置き換える	sorted ( <A> , reverse = True )	reversed ( <A> , reverse = True )
<A> リストの中の <B> が存在する最初の場所を得る	<A> . index ( <B> )	itertools . index ( <A> , <B> )
<B> と <C> のユークリッド距離を <A> にする	<A> = math . dist ( <B> , <C> )	pow ( math , <A> , <B> , <C> )
<A> の右側から空白改行を除いた文字列	<A> . rstrip ( )	<A> . rstrip ( )
<C> を区切り文字に指定して <B> を分割した結果をリスト型に直し、 <A> とする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> 文字列を長さが <B> になるように左を '0' で埋めた値	<A> . zfill ( <B> )	. <A> . zfill ( <B> )
リスト <A> の <B> が存在するインデックスを得る	<A> . index ( <B> )	itertools . index ( <A> , <B> )
<A> が <B> より大きくない間	while not <A> > <B> :	import not <A> > <B>
<B> 辞書に <A> キーが含まれているかどうか	<A> in <B>	<A> in <B>
値 <A> 内の小文字を大文字に直す	<A> . upper ( )	( <A> . upper ( )
入力された値を空白で分割し <A> 、 <B> 、 <C> とする	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を後ろから分割してリストに置き換えた結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> を終わりからスペースで分割した値のリスト	<A> . rsplit ( )	( <A> . rsplit ( )
識別子として <A> が利用可能かどうか	<A> . isidentifier ( )	<A> . isidentifier ( )
<C> を区切り文字に指定して文字列 <B> を分割した結果をリストに直し、 <A> にする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> に <B> をかけた値を <A> に代入する	<A> *= <B>	str ( <A> , <B> )
<C> の要素を <A> 、 <D> の要素を <B> へ順に代入して次の命令をまわす	for <A> , <B> in zip ( <C> , <D> ) :	for <A> in zip ( <B> , <C> , <D> ) :
<A> 足す <B> の値を <A> に代入	<A> += <B>	reversed ( <A> , <B> )
昇順に <A> を並べ変えた列	sorted ( <A> )	sorted ( <A> )
<B> をリストに置き換えた結果を <A> とする	<A> = list ( <B> )	itertools . <A> = ( <B> )
<B> 文字列の左側から <C> を抜いたデータを <A> にする	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
リスト <A> を大きい方から順に直す	<A> . reverse ( )	<A> . reverse ( )
文字列 <B> の左側から <C> を取り除いた値を <A> に代入する	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
文字列 <B> の右側から <C> を抜いた文字を <A> とする	<A> = <B> . rstrip ( <C> )	<A> = <B> . rstrip ( <C> )
リスト <B> を逆順にして、 <A> にする	<A> = <B> . reverse ( )	sorted ( <A> , reverse = <B> )
<A> セットと <B> セットが互いに素のとき	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
<C> をリスト <A> の <B> 番目に追加する	<A> . insert ( <B> , <C> )	insert . insert ( <A> , <B> , <C> )
もし <A> が <B> なら	if <A> == <B> :	if <A> == <B> :
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を分割した結果をリストにし、 <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
文字列 <B> 内の <C> を <D> に置き換えた文字列を <A> とする	<A> = <B> . replace ( <C> , <D> )	<A> = <B> . replace ( <C> , <D> )
<A> の末尾を除いた部分列	<A> [ : -1 ]	reversed ( <A> )
英大文字に値 <A> を変換したデータ	<A> . upper ( )	( <A> . upper ( )
<B> を区切り文字に設定して文字列 <A> を最後から分割してリスト型に直す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
存在する最初の場所をリスト <A> の中の <B> が得る	<A> . index ( <B> )	itertools . index ( <A> , <B> )
プログラムを終了する	sys . exit ( )	sys . exit ( )
<A> のタンジェント	math . tan ( <A> )	math . tan ( <A> )
<B> 区切りで <A> を出力する	print ( <A> , sep = <B> )	if print ( <A> , sep = <B> ) :
<A> からランダムに要素を <B> つチョイス直す	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
<B> を <A> リストの末尾に追加する	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<B> を末尾から <C> で分割してリストを返された結果を <A> にする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
<A> に <B> 未満の連続した数値を代入して、以降のプログラムを繰り返す	for <A> in range ( <B> ) :	for <A> in range ( <B> ) :
入力された文字列を空白で分割し <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
最後から <B> で <A> を分割してリストを返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
ユーザが入力した数字を半角スペースで区切ってリストとして得る	list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( ) . split ( ) ) )
<B> 文字列の先頭から <C> を除いた文字列を <A> に代入する	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
もう一度、繰り返す	continue	breakpoint ( )
<A> の小数点以下を 5 桁で丸める	print ( '{:.5f}' . format ( <A> ) )	random . format ( <A> ) )
文字列 <A> の英大文字と英小文字を交換したデータ	<A> . strswap ( )	random . strswap ( <A> )
<A> の前後のスペースを除去する	<A> . strip ( )	<A> . strip ( )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を最後から分割してリスト型に直した結果を <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
もし文字列 <A> の最後が <B> で終わるのとき	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
何らかの例外が発生したとき	except :	for <A> in range ( <B> ) :
<A> の <B> 番目から要素を取り出す	<A> . pop ( <B> )	( <A> . pop ( <B> )
0.0 以上 1.0 未満の乱数	random . random ( )	random . random ( <A> )
<B> 文字列を終わりから <C> で最大分割数 <D> まで分割した値のリストを <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
ユーザから入力された数値	int ( input ( ) )	<A> = int ( input ( ) )
<A> 、 <B> 、 <C> のうち最大の値	max ( <A> , <B> , <C> )	datetime . max ( <A> , <B> , <C> )
<C> を区切り文字、最大分割数を <D> に指定して <B> 文字列を最後から分割してリスト型に直して、 <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
文字列 <A> 内の <C> 番目から <D> 番目に <B> がある後ろ側の位置	<A> . rfind ( <B> , <C> , <D> )	re . rfind ( <A> , <B> , <C> , <D> )
<A> リストのうち <B> 個までの順列	itertools . permutations ( <A> , <B> )	os . itertools . permutations ( <A> , <B> )
<A> が偶数かどうか	<A> % 2 == 0	reversed ( <A> , 2 )
<B> 文字列の最初から空白改行を除いた値を <A> にする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<B> を長さが <C> になるように左を '0' で埋めた値を <A> にする	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
最も近い整数値に <A> を切り上げを求める	math . ceil ( <A> )	math . ceil ( <A> )
集合 <A> が集合 <B> と互いに素ならば	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
<A> 全てが数字かどうか	<A> . isdigit ( )	<A> . isdigit ( )
<C> を区切り文字、最大分割数を <D> として <B> を終わりから分割してリスト型にして返し、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
スペースを区切り文字に指定して文字列 <B> を分割した結果をリストにし、 <A> に代入する	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> を区切り文字に指定して文字列 <A> を最後から分割してリストに直す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<B> 文字列を後ろからスペースで分割してリストを返した結果を <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> をリストに直す	list ( <A> )	itertools . list ( <A> )
<B> 文字列の末尾から空白改行を除いたデータを <A> とする	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
<B> 文字列の最初を英大文字、残りを全て英小文字に変換したデータを <A> に代入する	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
文字列 <A> の <C> 番目から <D> 番目の間で <B> を逆順に探して見つかった位置	<A> . rfind ( <B> , <C> , <D> )	re . rfind ( <A> , <B> , <C> , <D> )
間に入れて <C> リストの中の要素を <B> を連結したデータを <A> にする	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<A> に入っている値を一つずつ処理する	for key in <A> . keys ( ) : value = <A> [ key ]	itertools . keys ( <A> , key = <A> [ key ]
リスト <A> の合計をチェックする	sum ( <A> )	os . sum ( <A> )
<A> 文字列の両端から空白改行を取り除いた値	<A> . strip ( )	<A> . strip ( )
ループ処理から抜け出す	break	random . break ( )
<B> 内の <D> 番目から <E> 番目に <C> がある右側の位置を <A> とする	<A> = <B> . rfind ( <C> , <D> , <E> )	<A> = <B> . rfind ( <C> , <D> , <E> )
区切り文字として文字列 <B> を半角スペースを末尾から分割してリストにして返し、 <A> とする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<B> を浮動小数点数型にした結果を <A> にする	<A> = float ( <B> )	float ( <A> , <B> )
入力された文字列	x = input ( )	math . input ( )
リスト <A> を大きい方から順に並べ直す	<A> . sort ( reverse = True )	sorted ( <A> , reverse = True )
「ハローワールド」と表示する	print ( 'Hello World' )	math . print ( <A> )
<B> を区切り文字、最大分割数を <C> に設定して文字列 <A> を分割した結果をリストに直す	<A> . split ( <B> , <C> )	<A> . split ( <B> , <C> )
ユーザが入力した値をリストに変換して、 <A> に代入する	<A> = list ( input ( ) )	print ( <A> , input ( ) )
リスト <A> の最後に <B> を追加する	<A> . append ( <B> )	itertools . append ( <A> , <B> )
<A> を <B> 分の一にする	<A> /= <B>	<A> // = <B>
リスト <A> の終わりから値を取り出す	<A> . pop ( )	( <A> . pop ( )
<A> が <B> より小さくない間	while not <A> < <B> :	not not <A> > <B>
入力されたデータをリスト化直した結果を <A> にする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
要素を <A> からランダムにチョイス置き換える	random . choice ( <A> )	collections . choice ( <A> )
<A> 文字列の両端から空白改行を取り除いたデータ	<A> . strip ( )	<A> . strip ( )
<A> を <B> でわった余り	math . remainder ( <A> , <B> )	not <A> / <B>
<B> を区切り文字、最大分割数を <C> に設定して <A> を分割した結果をリストに置き換える	<A> . split ( <B> , <C> )	<A> . split ( <B> , <C> )
リストに <B> を直して、 <A> とする	<A> = list ( <B> )	itertools . <A> = ( <B> )
<C> を区切り文字に設定して文字列 <B> を最後から分割してリスト型に直して、 <A> にする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
もし <A> 全てが数字の場合	if <A> . isdigit ( ) :	print ( if <A> ) :
リスト <A> 内の値が全て真かどうか	all ( <A> )	any ( <A> )
<B> の最初から空白改行を除いたデータを <A> に代入する	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<B> を区切り文字として <A> を最後から分割してリスト型にして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<A> の左側から空白改行を抜いた値	<A> . lstrip ( )	<A> . lstrip ( )
英小文字に <A> を変換した値	<A> . lower ( )	( <A> . lower ( )
最後から <B> で <A> 文字列を最大分割数 <C> まで分割した値のリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
入っている値を <A> に一つずつ処理する	for key in <A> . keys ( ) : value = <A> [ key ]	for key in <A> . keys ( ) : value = <A> [ key ]
文字列 <B> を全て小文字にして、 <A> にする	<A> = <B> . lower ( )	sorted ( <A> , <B> )
文字列 <B> を英小文字に変換した文字列を <A> に代入する	<A> = <B> . lower ( )	reversed ( <A> , <B> )
リスト <A> からランダムに値をチョイス直す	random . choice ( <A> )	random . choice ( <A> )
半角スペースを区切り文字に指定して文字列 <B> を最後から分割してリスト型に直して、 <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<A> に並んでいる順序をそのままで <B> を挿入できるインデックス	bisect . bisect_left ( <A> , <B> )	random . bisect_left ( <A> , <B> )
<B> リストを降順にソートした結果を <A> にする	<A> = <B> . sort ( reverse = True )	reversed ( <A> , <B> )
浮動小数点数 <A> の小数点以下を 5 桁で揃える	print ( '{:.5f}' . format ( <A> ) )	format . format ( '{:.5f}' . format ( <A> ) )
<A> リストからランダムに要素を選ぶ	random . choice ( <A> )	random . choice ( <A> )
ソートされた順序を保ったまま <B> を <A> に挿入できる位置	bisect . bisect_left ( <A> , <B> )	bisect_left . bisect_left ( <A> , <B> )
<A> が <B> の倍数かどうか	<A> % <B> == 0	min ( <A> , <B> )
<A> の末尾に <B> を追加する	<A> . append ( <B> )	<A> . append ( <B> )
<A> 文字列の中の <C> 番目から <D> 番目に <B> がある位置	<A> . find ( <B> , <C> , <D> )	<A> . rfind ( <B> , <C> , <D> )
<A> 、 <B> 、 <C> の中で一番大きい値を算出する	max ( <A> , <B> , <C> )	divmod ( <A> , <B> , <C> )
<A> の 0 番目を除いた部分列	<A> [ 1 : ]	reversed ( <A> )
<C> を区切り文字に指定して <B> 文字列を終わりから分割してリスト型にし、 <A> にする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
文字列 <A> の終わりが <B> であるならば	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
リスト <B> を降順にソートし、 <A> に代入する	<A> = <B> . sort ( reverse = True )	sorted ( <A> , reverse = <B> )
<B> 文字列の両端から空白改行を取り除いた値を <A> に代入する	<A> = <B> . strip ( )	sorted ( <A> , <B> )
もし <A> が <B> 以下でないなら	if not <A> <= <B> :	if not <A> <= <B> :
<A> リストの <B> 番目に <C> を追加する	<A> . insert ( <B> , <C> )	re . insert ( <A> , <B> , <C> )
空白を区切り文字に指定して <B> を分割した結果をリスト型にされた結果を <A> にする	<A> = <B> . split ( )	( <A> = <B> . split ( )
<B> を区切り文字、最大分割数を <C> に指定して <A> を終わりから分割してリスト型に直す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> を文字列型に置き換える	str ( <A> )	str ( <A> )
文字列 <A> の右側から空白改行を取り除いたデータ	<A> . rstrip ( )	<A> . rstrip ( )
空白を区切り文字に設定して <B> を分割した結果をリストに直した結果を <A> に代入する	<A> = <B> . split ( )	print ( <A> = <B> )
数値としてユーザから入力を受け取る	int ( input ( ) )	int ( input ( ) )
<A> が <B> で終わるかどうか	<A> . endswith ( <B> )	<A> . endswith ( <B> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を最後から分割してリストに置き換えて、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> の右側が <B> で終わるかどうか	<A> . endswith ( <B> )	itertools . endswith ( <A> , <B> )
<A> の総和を見る	sum ( <A> )	math . sin ( <A> )
入力されたデータをリストに突っ込む	list ( input ( ) )	list ( input ( ) )
<A> に含まれる全ての値が真かどうか	all ( <A> )	any ( <A> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を分割した結果をリストにし、 <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
何か動かす	print ( 'Hello World' )	math . e
集合 <A> が集合 <B> の上位集合かどうか	<A> . issuperset ( <B> )	. <A> . issuperset ( <B> )
区切り文字に指定して <A> を半角スペースを終わりから分割してリスト型に直す	<A> . rsplit ( )	<A> . rsplit ( )
文字列型に <B> を変換し、 <A> に代入する	<A> = str ( <B> )	str ( <A> , <B> )
<A> の両端から <B> を取り除いた文字列	<A> . strip ( <B> )	( <A> . strip ( <B> )
辞書 <A> のキーの一覧を得る	<A> . keys ( )	<A> . keys ( )
リスト <A> をシャッフル直す	random . suffle ( <A> )	collections . suffle ( <A> )
<A> リストに含まれるどれかの値が真かどうか	any ( <A> )	x . any ( <A> )
区切り文字に指定して <B> 文字列をスペースを最後から分割してリスト型に置き換え、 <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
ユーザが入力した整数値をスペースで区切ってリストとして受け取って、 <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
リスト <A> の要素積	math . prod ( <A> )	math . prod ( <A> )
浮動小数点数型に <B> をした結果を <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
<A> 値の前後の空白を消去する	<A> . strip ( )	<A> . strip ( )
集合 <A> と集合 <B> の積集合を得る	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
<B> を変換した浮動小数点数を <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
ユーザから入力を数値として受け取られた結果を <A> とする	<A> = int ( input ( ) )	int ( <A> , input ( ) )
<A> に最も近い整数に切り捨てを確認する	math . floor ( <A> )	math . floor ( <A> )
入力値を取得し、 <A> とする	<A> = input ( )	reversed ( <A> )
<A> 値が数字であるかどうか	<A> . isdigit ( )	itertools . isdigit ( <A> )
文字列 <B> の終わりから空白改行を除いた文字列を <A> とする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
<C> 内の正規表現 <A> のパターンにマッチした箇所を <B> に置き換えた文字列と置き換えた箇所の数	re . subn ( <A> , <B> , <C> )	re . sub ( <A> , <B> , <C> )
<B> をリスト <A> に加える	<A> . append ( <B> )	. <A> . append ( <B> )
ユーザが入力した文字列をリストにした結果を <A> とする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
<B> を全て大文字に直し、 <A> に代入する	<A> = <B> . upper ( )	sorted ( <A> = <B> )
<A> を十の位までに丸めた値	round ( <A> , -1 )	bisect . round ( <A> , -1 )
<A> が <B> 以上の間	while <A> >= <B> :	while not <A> >= <B> :
プログラムを実行した日付	datetime . date . today ( )	math . date . today ( )
<C> を区切り文字、最大分割数を <D> に設定して <B> を末尾から分割してリスト型にして返して、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
ユーザが入力した文字列を <A> と置き換える	<A> = input ( )	reversed ( <A> )
文字列 <B> 内の大文字を小文字にした結果を <A> に代入する	<A> = <B> . lower ( )	<A> = <B> . lower ( )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を最後から分割してリスト型にし、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> が奇数の間	while <A> % 2 == 1 :	while <A> % 2 == 1 :
リスト <A> の末尾に <B> を付加する	<A> . append ( <B> )	<A> . append ( <B> )
<C> を区切り文字、最大分割数を <D> に設定して <B> 文字列を最後から分割してリストにして返して、 <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> リストの中の値を連結したデータ	'' . join ( <A> )	'' . join ( <A> )
Python を実行したエポック秒	datetime . datetime . now ( )	math . datetime . now ( )
値を <A> からランダムに <B> つチョイス直す	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
本日の年	datetime . date . today ( ) . year	quit ( )
文字列型に <B> を直した結果を <A> に代入する	<A> = str ( <B> )	str ( <A> , <B> )
<A> 値中の英字全てが大文字かどうか	<A> . isupper ( )	math . isupper ( <A> )
ユーザが入力した文字列を <A> にする	<A> = input ( )	reversed ( <A> )
文字列 <B> 内の大文字を小文字に置き換え、 <A> とする	<A> = <B> . lower ( )	reversed ( <A> , <B> )
<A> 集合と <B> 集合の対称差集合を計算する	<A> . symmetric_difference ( <B> )	<A> . symmetric_difference ( <B> )
リスト <B> の要素積を <A> にする	<A> = math . prod ( <B> )	math . prod ( <A> , <B> )
半角スペースを区切り文字に設定して <A> 文字列を分割した結果をリスト型にして返す	<A> . split ( )	<A> . split ( )
<B> を区切り文字に指定して文字列 <A> を分割した結果をリストに直す	<A> . split ( <B> )	. <A> . split ( <B> )
入力された整数を <A> とする	<A> = int ( input ( ) )	print ( <A> , input ( ) )
<B> の右側から空白改行を除いた文字列を <A> にする	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
<C> を区切り文字に設定して <B> 文字列を分割した結果をリスト型に置き換えた結果を <A> とする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> がもし <B> 未満かつ <C> 以上ならば	if <A> < <B> and <A> >= <C> :	while <A> < <B> or <A> >= <C> :
<B> を最も近い整数に切り捨てを <A> に代入する	<A> = math . floor ( <B> )	math . floor ( <A> , <B> )
<A> 内の <C> 番目以降に <B> がある位置	<A> . find ( <B> , <C> )	re . find ( <A> , <B> , <C> )
半角スペースを区切り文字に設定して文字列 <A> を分割した結果をリストにして返す	<A> . split ( )	<A> . split ( )
<B> を後ろから <C> で分割した値のリストを <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<A> 文字列の末尾から空白改行を取り除いた文字列	<A> . rstrip ( )	<A> . rstrip ( )
<A> の中の値を連結した値	'' . join ( <A> )	'' . join ( <A> )
文字列 <A> を終わりから <B> で最大分割数 <C> まで分割した文字列のリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> 値をカンマで区切った値のリスト	<A> . split ( ',' )	',' . split ( <A> , ',' )
入れてリスト <B> の中の要素を間に <A> を連結した文字列	<A> . join ( <B> )	<A> . join ( <B> )
もし文字列 <A> が全て ASCII 文字なら	if <A> . isascii ( ) :	hex ( <A> )
浮動小数点数に <A> を直す	float ( <A> )	float ( <A> )
<B> を末尾から <C> で最大分割数 <D> まで分割したデータのリストを <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
リスト <A> に含まれる値がどれかは真かどうか	any ( <A> )	any ( <A> )
<B> 文字列を末尾から <C> で最大分割数 <D> まで分割してリストを返して、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> から <B> を引いて <A> に代入	<A> -= <B>	sorted ( <A> , <B> )
<B> 文字列の両端から <C> を除いた値を <A> とする	<A> = <B> . strip ( <C> )	<A> = <B> . strip ( <C> )
入力文字列を半角スペースごとに受け取り <A> 、 <B> 、 <C> と置き換える	<A> , <B> , <C> = input ( ) . split ( )	sorted ( <A> , <B> , <C> )
<A> 集合と <B> セットの和集合	<A> . union ( <B> )	<A> . union ( <B> )
リスト <A> の平均を確認する	sum ( <A> ) / len ( <A> )	/ ( <A> ) / len ( <A> )
セット <A> と集合 <B> の積集合	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
リスト <A> に含まれる少なくともひとつの要素が真かどうか	any ( <A> )	random . any ( <A> )
<A> を後ろから空白で分割してリストを返す	<A> . rsplit ( )	<A> . rsplit ( )
<B> 文字列の先頭から <C> を抜いた文字列を <A> に代入する	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
<A> の <B> 番目から値を取り出す	<A> . pop ( <B> )	<A> . pop ( <B> )
存在する最初のインデックスをリスト <A> 内の <B> が取得する	<A> . index ( <B> )	<A> . index ( <B> )
<A> 文字列の両端から <B> を除いたデータ	<A> . strip ( <B> )	<A> . strip ( <B> )
文字列 <B> を長さが <C> になるように '0' で右寄せした文字列を <A> にする	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
<A> 文字列の末尾から空白改行を除いた値	<A> . rstrip ( )	<A> . rstrip ( )
スペースを区切り文字として文字列 <B> を最後から分割してリスト型にして返し、 <A> に代入する	<A> = <B> . rsplit ( )	print ( <A> = <B> )
入れて <B> リスト内の要素を間に <A> を連結した文字列	<A> . join ( <B> )	not <A> . join ( <B> )
<B> を小さい方から順に並べ変え、 <A> に代入する	<A> = <B> . sort ( )	reversed ( <A> , <B> )
<A> リストからランダムに要素をチョイスする	random . choice ( <A> )	random . choice ( <A> )
<A> が <B> 以上でないとき	if not <A> >= <B> :	if not <A> or <B> :
<A> リストを無限に繰り返した列	itertools . cycle ( <A> )	'' . cycle ( <A> )
値 <A> の前後の半角スペースを取り除く	<A> . strip ( )	<A> . strip ( )
deque オブジェクトを生成する	collections . deque ( )	collections . deque ( )
ループ処理から終了する	break	sys . break ( )
<A> というプロンプトを表示しユーザに文字列を入力させる	x = input ( <A> )	min ( <A> )
<B> 値の中の小文字を大文字にし、 <A> とする	<A> = <B> . upper ( )	sorted ( <A> , <B> )
最初の処理	print ( 'Hello World' )	quit ( )
空白ごとに入力された数値を受け取り <A> 、 <B> 、 <C> と直す	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	sorted ( <A> , <B> , <C> )
<B> で値 <A> を分割する	<A> . split ( <B> )	<A> . split ( <B> )
リスト <A> の中の <B> が存在する最初のインデックスを取得する	<A> . index ( <B> )	<A> . index ( <B> )
<A> に 0 から 9 を代入して、次の命令をループする	for <A> in range ( 10 ) :	elif <A> in range ( 10 ) :
<A> 値を <B> で分割した値のリスト	<A> . split ( <B> )	<A> . split ( <B> )
<C> を区切り文字、最大分割数を <D> に設定して <B> 文字列を終わりから分割してリストにして返して、 <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> のアークタンジェントを確認する	math . atan ( <A> )	math . atan ( <A> )
<A> 文字列の左側から <B> を抜いた値	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
間に入れて <C> リストの中の値を <B> を連結した値を <A> にする	<A> = <B> . join ( <C> )	<A> = <B> . join ( <C> )
<B> 文字列を長さが <C> になるように '0' で右寄せした値を <A> に代入する	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
<B> を区切り文字、最大分割数を <C> に設定して <A> 文字列を終わりから分割してリストにする	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
空白を区切り文字に設定して <B> 文字列を最後から分割してリストにして返された結果を <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
文字列 <A> の先頭から空白改行を抜いた値	<A> . lstrip ( )	<A> . lstrip ( )
<A> の最初に <B> を付加する	<A> . appendleft ( <B> )	. <A> . appendleft ( <B> )
<A> の先頭から除いた値	<A> . popleft ( )	<A> . popleft ( )
最も近い数字に <A> を切り上げ	math . ceil ( <A> )	math . ceil ( <A> )
文字列 <A> を長さが <B> になるように左を '0' で埋めた文字列	<A> . zfill ( <B> )	<A> . zfill ( <B> )
<A> を間に入れてリスト <B> の中の要素を連結したデータ	<A> . join ( <B> )	<A> . join ( <B> )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を分割した結果をリスト型に直し、 <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
<A> の最初から <B> を抜いた値	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<B> を <A> に付加する	<A> . append ( <B> )	<A> . append ( <B> )
リスト <A> の <B> 番目から値を抜き出す	<A> . pop ( <B> )	<A> . pop ( <B> )
<A> の <B> 番目に <C> を付加する	<A> . insert ( <B> , <C> )	re . insert ( <A> , <B> , <C> )
文字列 <B> を <C> で分割したデータのリストを <A> とする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
リストとして複数の入力値を得る	list ( input ( ) )	list ( input ( ) )
スペース区切りで入力された複数の整数をリストとして得た結果を <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
<B> 文字列を <C> で分割した値のリストを <A> に代入する	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<A> セットと <B> セットの積集合を抽出する	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
<A> 内の小文字を大文字に直す	<A> . upper ( )	<A> . upper ( )
<A> リスト内の少なくともひとつの要素が真かどうか	any ( <A> )	random . any ( <A> )
<B> を <A> に展開して付加する	<A> . extend ( <B> )	print ( <A> . extend ( <B> )
もし <A> 集合が <B> 集合の上位集合なら	if <A> . issuperset ( <B> ) :	if <A> . issuperset ( <B> ) :
<A> の右側から空白改行を取り除いたデータ	<A> . rstrip ( )	<A> . rstrip ( )
<C> を区切り文字、最大分割数を <D> に指定して <B> を分割した結果をリストに直して、 <A> にする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
<B> を区切り文字、最大分割数を <C> に指定して <A> を後ろから分割してリスト型に直す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<C> を区切り文字に指定して <B> を分割した結果をリストに置き換えた結果を <A> にする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
<B> 文字列の右側から空白改行を抜いたデータを <A> とする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
要素を <A> リストからランダムに <B> つチョイス置き換える	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
空白ごとに入力された複数の整数をリストとして得た結果を <A> とする	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = list ( int , input ( ) . split ( ) )
<A> 文字列の終わりから <B> を取り除いた文字	<A> . rstrip ( <B> )	itertools . rstrip ( <A> , <B> )
<B> のサインを <A> とする	<A> = math . sin ( <B> )	reversed ( <A> , <B> )
<A> の <B> 番目に <C> を入れる	<A> . insert ( <B> , <C> )	del <A> . insert ( <B> , <C> )
セット <B> と互いに集合 <A> が素のとき	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
<B> の右側から空白改行を取り除いた文字列を <A> に代入する	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
文字列 <B> の両端から <C> を抜いた値を <A> とする	<A> = <B> . strip ( <C> )	<A> = <B> . strip ( <C> )
<B> を長さが <C> になるように '0' で右寄せした文字列を <A> とする	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
末尾から <C> で <B> 文字列を最大分割数 <D> まで分割してリストを返して、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
区切り文字に設定して <B> を <C> を末尾から分割してリストにして返し、 <A> とする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
リスト <A> に含まれる値が少なくともひとつは真かどうか	any ( <A> )	any ( <A> )
算術用ライブラリを用いる	import math	math . import math ( <A> )
ユーザから入力された値をリストに変換し、 <A> とする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
<A> リストのうち <B> 個までの重複コンビネーション	itertools . combinations_with_replacement ( <A> , <B> )	math . combinations_with_replacement ( <A> , <B> )
繰り返し処理から抜ける	break	random . break ( )
もし <A> の末尾が <B> で終わるのとき	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
<A> 文字列の右側が <B> で終わるならば	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
<A> と <B> が等しくない場合	if <A> != <B> :	if <A> != <B> :
最も近い数字に <B> を切り上げを <A> に代入する	<A> = math . ceil ( <B> )	math . ceil ( <A> , <B> )
処理を実行した月	datetime . date . today ( ) . month	quit ( )
リスト <A> の末尾から値をポップする	<A> . pop ( )	( <A> . pop ( )
<B> を区切り文字として文字列 <A> を分割した結果をリスト型にして返す	<A> . split ( <B> )	. <A> . split ( <B> )
<A> 内の <B> がある位置	<A> . find ( <B> )	<A> . find ( <B> )
<C> を区切り文字として文字列 <B> を分割した結果をリストにして返し、 <A> にする	<A> = <B> . split ( <C> )	<A> = <B> . split ( <C> )
文字列 <A> の両端から空白改行を抜いた値	<A> . strip ( )	<A> . strip ( )
区切り文字として文字列 <A> を空白を最後から分割してリストにして返す	<A> . rsplit ( )	<A> . rsplit ( )
<A> 文字列内の <B> がある後ろ側の位置	<A> . rfind ( <B> )	range ( <A> . rfind ( <B> )
文字列 <A> と <B> を結合する	<A> + <B>	<A> + <B>
最後から <C> で <B> 文字列を分割してリストを返して、 <A> にする	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
文字列 <A> の終わりが <B> であるかどうか	<A> . endswith ( <B> )	<A> . endswith ( <B> )
集合 <A> と集合 <B> の和集合を得る	<A> . union ( <B> )	<A> . union ( <B> )
文字列 <B> の最初から空白改行を取り除いた文字列を <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<A> リストの終わりから値を得る	<A> . pop ( )	( <A> . pop ( )
e の <A> 乗	math . exp ( <A> )	math . exp ( <A> )
セット <A> と集合 <B> の積集合を抽出する	<A> . intersection ( <B> )	set ( <A> . intersection ( <B> )
<A> からカウントアップする無限の整数列	itertools . count ( <A> )	math . count ( <A> )
<A> を十の位までに丸めた値を求める	round ( <A> , -1 )	bisect . round ( <A> , -1 )
半角スペースを区切り文字として文字列 <B> を末尾から分割してリスト型にして返し、 <A> とする	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<A> かける <B> を求める	<A> * <B>	<A> - <B>
半角スペースを区切り文字として <A> 文字列を分割した結果をリストにして返す	<A> . split ( )	<A> . split ( )
右に <A> の値を <B> つずつローテートする	<A> . rotate ( <B> )	<A> . rotate ( <B> )
存在する先頭の場所をリスト <A> 内の <B> が取得する	<A> . index ( <B> )	<A> . index ( <B> )
文字列 <B> を長さが <C> になるように '0' で右寄せしたデータを <A> に代入する	<A> = <B> . zfill ( <C> )	<A> = <B> . zfill ( <C> )
浮動小数点数に <B> を置き換えた結果を <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
<A> リスト内の要素が少なくともひとつは真かどうか	any ( <A> )	random . any ( <A> )
集合 <A> と集合 <B> の差集合	<A> . difference ( <B> )	set ( <A> . difference ( <B> )
<C> を区切り文字、最大分割数を <D> に指定して <B> を終わりから分割してリスト型に置き換えた結果を <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
ユーザが入力した文字列をリストに入れた結果を <A> にする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
<A> モジュールを使う	import <A>	math . import ( <A> )
<B> 内の小文字を大文字に変換して、 <A> に代入する	<A> = <B> . upper ( )	sorted ( <A> = <B> )
<C> を区切り文字、最大分割数を <D> に指定して文字列 <B> を最後から分割してリストにし、 <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> に <B> を代入する	<A> = <B>	reversed ( <A> )
<A> の英大小文字を逆にした値	<A> . strswap ( )	<A> . strswap ( )
<A> のコピー	<A> . copy ( )	copy . copy ( <A> )
スペースを区切り文字として <B> を分割した結果をリストにして返した結果を <A> にする	<A> = <B> . split ( )	( <A> = <B> . split ( )
文字列 <A> を末尾からスペースで分割してリストを返す	<A> . rsplit ( )	<A> . rsplit ( )
「こんにちは世界」と出力する	print ( 'Hello World' )	math . print ( <A> )
<A> わる <B> を切り上げる	( <A> + <B> - 1 ) // <B>	range ( <A> , <B> - 1 ) // <B>
値 <A> を <B> で区切った値のリスト	<A> . split ( <B> )	itertools . split ( <A> , <B> )
<A> リストの中の <B> が存在する最初の場所を取得する	<A> . index ( <B> )	index ( <A> . index ( <B> )
<B> に最も近い数字に切り上げを <A> とする	<A> = math . ceil ( <B> )	math . ceil ( <A> , <B> )
1 + <A> の自然対数を求める	math . log1p ( <A> )	math . log1p ( <A> )
値 <A> を全て大文字に直す	<A> . upper ( )	( <A> . upper ( )
<B> を整数に直された結果を <A> にする	<A> = int ( <B> )	sorted ( <A> , <B> )
<A> 文字列の末尾から <B> を取り除いた文字	<A> . rstrip ( <B> )	<A> . rstrip ( <B> )
もし <A> データが英大文字なら	if <A> . isupper ( ) :	if <A> . isupper ( ) :
浮動小数点数型に <B> を直された結果を <A> に代入する	<A> = float ( <B> )	float ( <A> , <B> )
文字列 <B> の左側から空白改行を除いた文字列を <A> にする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<B> を <A> に付加する	<A> . add ( <B> )	<A> . append ( <B> )
<A> を <B> でわったときの商とあまりの組を求める	divmod ( <A> , <B> )	divmod ( <A> , <B> )
<A> の <B> 乗	<A> ** <B>	math . pow ( <A> , <B> )
もし <A> 文字列の末尾が <B> であるのとき	if <A> . endswith ( <B> ) :	if <A> . endswith ( <B> ) :
<A> をリストに置き換える	list ( <A> )	os . list ( <A> )
<A> 内の <B> が存在する先頭の場所を取得する	<A> . index ( <B> )	<A> . index ( <B> )
リスト <A> にリスト <B> を展開して加える	<A> . extend ( <B> )	print ( <A> . extend ( <B> )
<A> をリスト型として得る	list ( <A> )	itertools . list ( <A> )
<A> のアークサインを計算する	math . asin ( <A> )	math . asin ( <A> )
<C> を区切り文字、最大分割数を <D> に設定して <B> を分割した結果をリストに直して、 <A> とする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
<B> の 10 を底とする対数を <A> に代入する	<A> = math . log10 ( <B> )	<A> = math . log10 ( <B> )
<C> 中の正規表現 <A> のパターンにマッチした箇所を <B> に置き換えた文字列	re . sub ( <A> , <B> , <C> )	re . sub ( <A> , <B> , <C> )
もし try の中の命令が実行できなかったとき	except :	if <A> . except ( ) :
最も近い整数に <B> を切り捨てを <A> とする	<A> = math . floor ( <B> )	math . floor ( <A> , <B> )
間に入れて <B> 内の値を <A> を連結した文字列	<A> . join ( <B> )	<A> . join ( <B> )
<B> 文字列の両端から <C> を取り除いたデータを <A> にする	<A> = <B> . strip ( <C> )	<A> = <B> . strip ( <C> )
ユーザが入力した値をリストに突っ込んだ結果を <A> とする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
<C> を区切り文字に指定して文字列 <B> を最後から分割してリスト型にし、 <A> とする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
文字列 <B> の中の <C> がある位置を <A> に代入する	<A> = <B> . find ( <C> )	not <A> = <B> . find ( <C> )
リスト <A> の中の値を連結したデータ	'' . join ( <A> )	'' . join ( <A> )
<A> の最初から空白改行を抜いたデータ	<A> . lstrip ( )	<A> . lstrip ( )
<A> と <B> が近いかどうかを求める	math . isclose ( <A> , <B> )	math . isclose ( <A> , <B> )
<A> リスト内の <B> が存在する先頭の場所を取得する	<A> . index ( <B> )	<A> . index ( <B> )
右に <A> の要素をひとつローテートする	<A> . rotate ( )	math . rotate ( <A> )
<C> を区切り文字、最大分割数を <D> に設定して文字列 <B> を分割した結果をリストに直された結果を <A> に代入する	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
文字列型として <B> を得られた結果を <A> にする	<A> = str ( <B> )	str ( <A> , <B> )
<B> を区切り文字、最大分割数を <C> に指定して <A> 文字列を分割した結果をリストに直す	<A> . split ( <B> , <C> )	. <A> . split ( <B> , <C> )
<A> に最も近い数値に切り捨てを見る	math . floor ( <A> )	math . floor ( <A> )
2 を底と置き換える <A> の対数を見る	math . log2 ( <A> )	math . log2 ( <A> )
リスト <A> の最後から要素をポップ直す	<A> . pop ( )	( <A> . pop ( )
リスト <A> からランダムに値を選ぶ	random . choice ( <A> )	random . choice ( <A> )
<B> の左側から <C> を取り除いたデータを <A> に代入する	<A> = <B> . lstrip ( <C> )	<A> = <B> . lstrip ( <C> )
文字列 <B> の最初から空白改行を除いた文字列を <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<A> と <B> のノルム	math . hypot ( <A> , <B> )	itertools . repeat ( <A> , <B> )
データを <A> というプロンプトを表示しユーザに入力させる	x = input ( <A> )	any ( <A> )
<B> を区切り文字に指定して文字列 <A> を分割した結果をリスト型にする	<A> . split ( <B> )	. <A> . split ( <B> )
<A> リストの <B> と同じ要素を消去する	<A> . remove ( <B> )	<A> . remove ( <B> )
<A> を小さい順に並べる	<A> . sort ( )	reversed ( <A> )
文字列 <A> の最初から空白改行を除いたデータ	<A> . lstrip ( )	<A> . lstrip ( )
空白を区切り文字に設定して文字列 <A> を分割した結果をリスト型に置き換える	<A> . split ( )	<A> . split ( )
<A> の右側から空白改行を抜いた文字列	<A> . rstrip ( )	<A> . rstrip ( )
<B> の英大文字と英小文字を逆にした文字列を <A> に代入する	<A> = <B> . strswap ( )	= <A> = <B> . strswap ( )
もし互いに <A> セットと <B> セットが素のとき	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
もし互いに集合 <A> と集合 <B> が素ならば	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
<A> の中の <B> がある右側の位置	<A> . rfind ( <B> )	itertools . rfind ( <A> , <B> )
ユーザから入力された数値を <A> に代入する	<A> = int ( input ( ) )	print ( <A> , input ( ) )
<B> の大文字を小文字にした結果を <A> にする	<A> = <B> . lower ( )	sorted ( <A> , <B> )
<C> を区切り文字として <B> を末尾から分割してリストにして返して、 <A> とする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
<B> を終わりから空白で分割してリストを返された結果を <A> とする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
以下のプログラムを <A> 回ループ置き換える	for i in range ( <A> ) :	for i in range ( <A> ) :
Python を実行したエポック	datetime . datetime . now ( )	math . datetime . now ( )
<A> リストをシャッフルする	random . suffle ( <A> )	collections . suffle ( <A> )
<B> 文字列を末尾から <C> で最大分割数 <D> まで分割したデータのリストを <A> にする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<A> 文字列の両端から空白改行を抜いた文字列	<A> . strip ( )	<A> . strip ( )
<A> リストの要素が全て真かどうか	all ( <A> )	min ( <A> )
文字列 <B> の先頭から空白改行を抜いた値を <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<A> を浮動小数点数として得る	float ( <A> )	'' . float ( <A> )
文字列 <A> を後ろから半角スペースで分割してリストを返す	<A> . rsplit ( )	( <A> . rsplit ( )
整数値としてユーザから入力を受け取った結果を <A> とする	<A> = int ( input ( ) )	int ( <A> , input ( ) )
<A> 内の <B> が存在する最初の場所を取得する	<A> . index ( <B> )	<A> . index ( <B> )
<B> 文字列を末尾からスペースで分割してリストを返した結果を <A> に代入する	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<B> 文字列の中の大文字を小文字に直した結果を <A> に代入する	<A> = <B> . lower ( )	<A> = <B> . lower ( )
集合 <A> とセット <B> の差集合を計算する	<A> . difference ( <B> )	set ( <A> . difference ( <B> )
ユーザが入力した値をリストに入れる	list ( input ( ) )	itertools . list ( input ( ) )
文字列 <B> 内の大文字を小文字に直した結果を <A> とする	<A> = <B> . lower ( )	<A> = <B> . lower ( )
ユーザが入力したデータをリストに格納する	list ( input ( ) )	itertools . list ( input ( ) )
先頭に戻ってやり直す	continue	print ( 'Hello )
文字列 <A> の最初から空白改行を抜いたデータ	<A> . lstrip ( )	<A> . lstrip ( )
<B> を最も近い数値に切り捨てを <A> とする	<A> = math . floor ( <B> )	math . floor ( <A> , <B> )
<A> を小数点第一位までに丸めた値	round ( <A> , 1 )	1 . round ( <A> )
リストとして <A> を得る	list ( <A> )	itertools . list ( <A> )
繰り返しから抜ける	break	( )
空列を <A> にする	<A> = [ ]	reversed ( <A> )
<A> が <B> よりも小さくないかどうか	not <A> < <B>	pow ( <A> , <B> )
空白を区切り文字に設定して文字列 <B> を分割した結果をリストにして返して、 <A> に代入する	<A> = <B> . split ( )	sorted ( <A> , <B> )
<A> を大きい方から順に置き換える	reversed ( <A> )	<A> . reverse ( )
末尾から <B> で <A> 文字列を最大分割数 <C> まで分割した値のリスト	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
ユーザが入力した文字列をリストに突っ込んだ結果を <A> にする	<A> = list ( input ( ) )	print ( <A> , input ( ) )
空白で区切って入力された複数の整数をリストとして受け取った結果を <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
データ <A> を <B> 回繰り返す	<A> * <B>	* <A> * <B>
<B> を <A> の左側に加える	<A> . appendleft ( <B> )	<A> . appendleft ( <B> )
<B> を区切り文字、最大分割数を <C> に設定して <A> 文字列を分割した結果をリスト型に直す	<A> . split ( <B> , <C> )	. <A> . split ( <B> , <C> )
<A> 文字列を終わりから <B> で最大分割数 <C> まで分割してリストを返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
ユーザから入力された値をリスト化直す	list ( input ( ) )	list ( input ( ) )
文字列 <B> の先頭を英大文字、残りを全て英小文字にしたデータを <A> にする	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<A> の二乗	<A> ** 2	math . exp ( <A> )
<B> 文字列を終わりから半角スペースで分割してリストを返し、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
値 <A> の中の小文字を大文字にする	<A> . upper ( )	<A> . upper ( )
入力された数値を半角スペースで分割し <A> 、 <B> 、 <C> と直す	<A> , <B> , <C> = map ( int , input ( ) . split ( ) )	sorted ( <A> , <B> , <C> )
値 <B> を英大文字に変換した値を <A> に代入する	<A> = <B> . upper ( )	( <A> = <B> . upper ( )
<B> を区切り文字、最大分割数を <C> に指定して文字列 <A> を最後から分割してリスト型にする	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<C> を区切り文字として文字列 <B> を最後から分割してリスト型にして返して、 <A> とする	<A> = <B> . rsplit ( <C> )	<A> = <B> . rsplit ( <C> )
<A> と <B> の組み合わせを計算する	math . comb ( <A> , <B> )	math . comb ( <A> , <B> )
2 を底とする <A> の対数を計算する	math . log2 ( <A> )	math . log2 ( <A> )
<A> リスト内の <B> が存在する最初の場所を取得する	<A> . index ( <B> )	index ( <A> . index ( <B> )
もし互いにセット <A> とセット <B> が素ならば	if <A> . isdisjoint ( <B> ) :	if <A> . isdisjoint ( <B> ) :
ユーザが入力した数値を空白で区切ってリストとして受け取った結果を <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	list ( map ( int , input ( <A> ) . split ( ) ) )
ユーザから入力を受け取って、 <A> にする	<A> = input ( )	reversed ( <A> )
<A> を <B> だけシフトした左シフト値	<A> << <B>	reversed ( <A> , <B> )
空のセット	set ( )	set ( )
もし <A> が無限大の場合	if math . isinf ( <A> ) :	if math . isinf math ( <A> ) :
ユーザが入力した整数値を半角スペースで区切ってリストとして受け取る	list ( map ( int , input ( ) . split ( ) ) )	print ( map ( int , input ( ) . split ( ) ) )
<B> 文字列の左側から空白改行を除いた値を <A> とする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
<B> を区切り文字に指定して <A> を分割した結果をリストに置き換える	<A> . split ( <B> )	list ( <A> . split ( <B> )
<A> に <B> 未満の連続した数値を代入して、以下の処理をループ置き換える	for <A> in range ( <B> ) :	def <A> ( <B> ) :
<C> の要素を <A> 、 <D> の要素を <B> へ順番に代入して次の命令をループ置き換える	for <A> , <B> in zip ( <C> , <D> ) :	for <A> , <B> in zip ( <C> , <D> ) :
<B> の <D> 番目から <E> 番目の間で <C> を逆順に探して見つかった位置を <A> とする	<A> = <B> . rfind ( <C> , <D> , <E> )	<A> = <B> . rfind ( <C> , <D> , <E> )
キー <A> が辞書 <B> にあるかどうか	<A> in <B>	<A> in <B>
文字列 <A> 内の <B> がある右側の位置	<A> . rfind ( <B> )	itertools . rfind ( <A> , <B> )
空白を区切り文字として <B> 文字列を末尾から分割してリスト型にして返した結果を <A> に代入する	<A> = <B> . rsplit ( )	print ( <A> = <B> )
<B> 文字列を末尾から空白で分割してリストを返し、 <A> にする	<A> = <B> . rsplit ( )	sorted ( <A> , <B> )
<C> のインデックスを <A> 、要素を <B> へ順番に代入して以下の処理をループ置き換える	for <A> , <B> in enumerate ( <C> ) :	min ( <A> , <B> , <C> )
<A> をカンマで区切る	<A> . split ( ',' )	print ( <A> . split ( ',' )
<A> リストからランダムに要素を選択する	random . choice ( <A> )	collections . choice ( <A> )
<A> 以上 <B> 未満までの整数乱数	random . randrange ( <A> , <B> )	randrange . randrange ( <A> , <B> )
<A> 文字列の先頭から <B> を抜いた値	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<B> 文字列を <C> で最大分割数 <D> まで分割した文字列のリストを <A> とする	<A> = <B> . split ( <C> , <D> )	<A> = <B> . split ( <C> , <D> )
<A> からランダムに要素を <B> つチョイス置き換える	random . sample ( <A> , <B> )	bisect . sample ( <A> , <B> )
<B> の先頭を英大文字、残りを全て英小文字に変換した文字列を <A> に代入する	<A> = <B> . capitalize ( )	sorted ( <A> = <B> )
<A> モジュールを使用する	import <A>	math . import ( <A> )
英大文字に <B> を変換した値を <A> とする	<A> = <B> . upper ( )	<A> = <B> . upper ( )
<A> 文字列の最初から <B> を除いたデータ	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<C> を <A> リストの <B> 番目に加える	<A> . insert ( <B> , <C> )	del <A> . insert ( <B> , <C> )
英小文字に文字列 <A> を変換した値	<A> . lower ( )	( <A> . lower ( )
<A> 値内の小文字を大文字にする	<A> . upper ( )	( <A> . upper ( )
空行をプリントする	print ( )	set ( )
<B> を区切り文字、最大分割数を <C> に指定して文字列 <A> を最後から分割してリスト型に置き換える	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> 掛ける <B>	<A> * <B>	<A> / <B>
浮動小数点数に <A> を置き換える	float ( <A> )	float ( <A> )
<A> 文字列を長さが <B> になるように左を '0' で埋めた文字列	<A> . zfill ( <B> )	<A> . zfill ( <B> )
<A> を降順にする	reversed ( <A> )	( <A> . reverse ( )
<B> を全て小文字に置き換えて、 <A> とする	<A> = <B> . lower ( )	<A> = <B> . lower ( )
<A> 文字列内の <B> がある位置	<A> . find ( <B> )	<A> . find ( <B> )
間に <A> を入れて <B> リスト内の値を連結した値	<A> . join ( <B> )	<A> . join ( <B> )
<A> 集合が <B> 集合の部分集合かどうか	<A> . issubset ( <B> )	( <A> . issubset ( <B> )
<A> の前後のスペースを消す	<A> . strip ( )	<A> . strip ( )
<A> に最も近い整数に切り上げを算出する	math . ceil ( <A> )	math . ceil ( <A> )
<A> を文字列にする	str ( <A> )	str ( <A> )
<A> を <B> で最大分割数 <C> まで分割したデータのリスト	<A> . split ( <B> , <C> )	<A> . split ( <B> , <C> )
<A> の 0 番目から <B> 番目の値を取り出す	<A> [ : <B> ]	del ( <A> [ <B> ] )
<A> に並んでいる順序をそのままで <B> を挿入できる一番後ろのインデックス	bisect . bisect_right ( <A> , <B> )	re . bisect_right ( <A> , <B> )
最後から <C> で <B> 文字列を最大分割数 <D> まで分割した文字列のリストを <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
半角スペースを区切り文字として <A> 文字列を最後から分割してリストにして返す	<A> . rsplit ( )	<A> . rsplit ( )
<B> を終わりから <C> で分割してリストを返した結果を <A> とする	<A> = <B> . rsplit ( <C> )	<A> = <B> . rsplit ( <C> )
<B> 文字列を最後から <C> で分割してリストを返し、 <A> に代入する	<A> = <B> . rsplit ( <C> )	reversed ( <A> , <B> , <C> )
<B> 文字列の末尾から空白改行を取り除いた文字列を <A> にする	<A> = <B> . rstrip ( )	sorted ( <A> , <B> )
文字列 <B> の最後から <C> を除いた文字を <A> に代入する	<A> = <B> . rstrip ( <C> )	reversed ( <A> , <B> , <C> )
<B> の左側から <C> を除いた値を <A> に代入する	<A> = <B> . lstrip ( <C> )	not <A> = <B> . lstrip ( <C> )
<A> から <B> 番目の要素を除去する	del ( <A> [ <B> ] )	complex ( <A> , <B> )
<A> の要素を右に <B> つずつ回転する	<A> . rotate ( <B> )	<A> . rotate ( <B> )
<A> と <B> が近いかどうかを見る	math . isclose ( <A> , <B> )	math . isclose ( <A> , <B> )
<A> のセット	set ( <A> )	set ( <A> )
数字としてユーザから入力を受け取り、 <A> とする	<A> = int ( input ( ) )	int ( <A> , input ( ) )
<B> の中の小文字を大文字に置き換えた結果を <A> とする	<A> = <B> . upper ( )	sorted ( <A> = <B> )
文字列 <A> 内の <B> を <C> に置き換えたデータ	<A> . replace ( <B> , <C> )	<A> . rstrip ( <B> , <C> )
集合 <A> とセット <B> の和集合を計算する	<A> . union ( <B> )	<A> . union ( <B> )
並んでいる順序をそのままで <B> を <A> に挿入できるインデックス	bisect . bisect_left ( <A> , <B> )	bisect_left . bisect_left ( <A> , <B> )
空白で区切って入力された複数の整数をリストとして得、 <A> に代入する	<A> = list ( map ( int , input ( ) . split ( ) ) )	sorted ( <A> , key = map ( int , input ( ) . split ( ) )
円周率を求める	math . pi	abs ( math )
リスト <A> の全ての値が真かどうか	all ( <A> )	min ( <A> )
<A> 文字列を終わりからスペースで分割した値のリスト	<A> . rsplit ( )	<A> . rsplit ( )
区切り文字として <A> を <B> を末尾から分割してリスト型にして返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<A> と <B> の商と剰余の組を算出する	divmod ( <A> , <B> )	math . divmod ( <A> , <B> )
区切り文字に指定して文字列 <A> を半角スペースを最後から分割してリストにする	<A> . rsplit ( )	<A> . rsplit ( )
<A> の文字コード	ord ( <A> )	type ( <A> )
もし <A> が <B> より小さくない場合	if not <A> < <B> :	if not not <A> > <B> :
<A> の角度を計算する	math . degrees ( <A> )	type ( <A> )
存在する先頭のインデックスを <A> 内の <B> が取得する	<A> . index ( <B> )	<A> . index ( <B> )
集合 <A> が集合 <B> の部分集合かどうか	<A> . issubset ( <B> )	( <A> . issubset ( <B> )
<B> を小さい方から順に並べ直した結果を <A> に代入する	<A> = <B> . sort ( )	reversed ( <A> , <B> )
入力されたデータ	x = input ( )	str ( <A> )
リスト <A> の最小値を見る	min ( <A> )	math . min ( <A> )
次の命令を <A> の長さだけ回す	for i in range ( len ( <A> ) ) :	[ for i in range ( len ( <A> ) :
もし <A> が <B> 未満または <C> 以上ならば	if <A> < <B> or <A> >= <C> :	if <A> < <B> or <A> >= <C> :
<B> を逆順に置き換えた結果を <A> に代入する	<A> = <B> . reverse ( )	= <A> . reverse ( )
<B> が正規表現 <A> のパターンにマッチした文字列のリスト	re . findall ( <A> , <B> )	re . findall ( <A> , <B> )
ランダムに <A> リストをシャッフル置き換える	random . shuffle ( <A> )	collections . shuffle ( <A> )
区切り文字に指定して <B> 文字列を <C> を最後から分割してリストに直して、 <A> とする	<A> = <B> . rsplit ( <C> )	sorted ( <A> , <B> , <C> )
半角スペースを区切り文字に指定して文字列 <B> を分割した結果をリストにして、 <A> とする	<A> = <B> . split ( )	sorted ( <A> , <B> )
<B> の末尾から空白改行を除いた値を <A> に代入する	<A> = <B> . rstrip ( )	reversed ( <A> , <B> )
文字列 <A> の先頭を英大文字、残りを全て英小文字に変換した値	<A> . capitalize ( )	<A> . capitalize ( )
スペースを区切り文字に指定して <B> を分割した結果をリストに直された結果を <A> に代入する	<A> = <B> . split ( )	( <A> = <B> . split ( )
<A> 文字列を <B> で最大分割数 <C> まで分割してリストを返す	<A> . split ( <B> , <C> )	. <A> . split ( <B> , <C> )
<A> 文字列内の <C> 番目から <D> 番目に <B> がある右側の位置	<A> . rfind ( <B> , <C> , <D> )	re . rfind ( <A> , <B> , <C> , <D> )
<A> の小数点以下切り捨てを表示する	math . floor ( <A> )	math . floor ( <A> )
末尾から <B> で <A> を分割してリストを返す	<A> . rsplit ( <B> )	<A> . rsplit ( <B> )
<A> リストに含まれる要素がどれかは真かどうか	any ( <A> )	any ( <A> )
処理を実行した日付	datetime . date . today ( )	os . date . today ( )
<A> を小さい順に並べる	sorted ( <A> )	reversed ( <A> )
終わりから <C> で <B> を最大分割数 <D> まで分割した値のリストを <A> とする	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<B> の先頭から空白改行を取り除いた値を <A> にする	<A> = <B> . lstrip ( )	sorted ( <A> , <B> )
半角スペースを区切り文字に指定して <B> 文字列を分割した結果をリスト型に置き換えられた結果を <A> に代入する	<A> = <B> . split ( )	( <A> = <B> . split ( )
浮動小数点数 <A> の小数点以下を 5 桁で丸める	print ( '{:.5f}' . format ( <A> ) )	random . format ( <A> ) )
<A> 文字列を後ろから <B> で最大分割数 <C> まで分割してリストを返す	<A> . rsplit ( <B> , <C> )	<A> . rsplit ( <B> , <C> )
<A> 文字列の先頭から <B> を除いた文字列	<A> . lstrip ( <B> )	<A> . lstrip ( <B> )
<A> リストから <B> 番目の値を除去する	del ( <A> [ <B> ] )	complex ( <A> , <B> )
体重 <A> と身長 <B> から BMI	<A> / ( <B> / 100 ) ** 2	/ ( <A> / <B> / 100 ) ** 2
半角スペースを区切り文字に指定して <A> を最後から分割してリスト型にする	<A> . rsplit ( )	<A> . rsplit ( )
<C> を区切り文字、最大分割数を <D> に設定して <B> 文字列を終わりから分割してリストにされた結果を <A> に代入する	<A> = <B> . rsplit ( <C> , <D> )	sorted ( <A> , <B> , <C> , <D> )
<B> 全体において正規表現 <A> のパターンをマッチさせた結果	re . fullmatch ( <A> , <B> )	collections . match ( <A> , <B> )
